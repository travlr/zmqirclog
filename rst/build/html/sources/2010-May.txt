
| [Saturday 01 May 2010] [01:59:28] <bgranger>    yes
| [Saturday 01 May 2010] [01:59:49] <bgranger>    It looks like you fixed the multipart message stuff in XREP?
| [Saturday 01 May 2010] [01:59:49] <sustrik> the rcvmore problem
| [Saturday 01 May 2010] [01:59:59] <sustrik> it seems to work here
| [Saturday 01 May 2010] [01:59:59] <bgranger>    But I am still seeing the problem
| [Saturday 01 May 2010] [02:00:02] <bgranger>    Hmmm
| [Saturday 01 May 2010] [02:00:15] <sustrik> ok, let me send you my test prog
| [Saturday 01 May 2010] [02:00:17] <sustrik> try to run it
| [Saturday 01 May 2010] [02:00:21] <bgranger>    Great
| [Saturday 01 May 2010] [02:00:57] <sustrik> sent
| [Saturday 01 May 2010] [02:02:48] <bgranger>    What's the quickest way to compile?
| [Saturday 01 May 2010] [02:05:54] <bgranger>    Got it and it runs just fine...
| [Saturday 01 May 2010] [02:06:07] <sustrik> hm
| [Saturday 01 May 2010] [02:06:12] <sustrik> what's your test?
| [Saturday 01 May 2010] [02:06:25] <bgranger>    Let me look a bit more at this.  
| [Saturday 01 May 2010] [02:06:35] <bgranger>    Let me port your test to Python real quick
| [Saturday 01 May 2010] [02:06:54] <sustrik> ack
| [Tuesday 04 May 2010] [04:22:19] <CIA-15>   zeromq2: 03Martin Sustrik 07master * r235ed3a 10/ (10 files): signaler transports commands per se rather than one-bit signals - http://bit.ly/aQglHI
| [Tuesday 04 May 2010] [04:37:04] <CIA-15>   zeromq2: 03Martin Sustrik 07master * r3f5465a 10/ src/signaler.cpp : Windows port fixed - http://bit.ly/aJDsub
| [Tuesday 04 May 2010] [15:27:43] <sustrik>  cremes: do you understand what's Matt is actually asking for?
| [Tuesday 04 May 2010] [15:27:51]     * sustrik is confused
| [Tuesday 04 May 2010] [15:29:15] <cremes>   sustrik: i think so
| [Tuesday 04 May 2010] [15:29:28] <sustrik>  can you give me some insight?
| [Tuesday 04 May 2010] [15:29:33] <cremes>   i think he wants to be able to attach callbacks for specific messages sent via a socket
| [Tuesday 04 May 2010] [15:29:47] <cremes>   so let's say he has one PAIR socket open...
| [Tuesday 04 May 2010] [15:30:15] <cremes>   if he sends 3 messages over that socket, i *think* he wants to be able to associate different callbacks with each sent message
| [Tuesday 04 May 2010] [15:30:24] <cremes>   hmmm.. perhaps that works better with a REQ socket :)
| [Tuesday 04 May 2010] [15:30:54] <sustrik>  how would the library know which callback to use for a particular message?
| [Tuesday 04 May 2010] [15:31:33] <cremes>   it would probably need to be part of the body of the message, e.g. a reply_to field
| [Tuesday 04 May 2010] [15:31:41] <cremes>   so that it can be matched
| [Tuesday 04 May 2010] [15:32:01] <cremes>   again, this is just my guess as to what he wants
| [Tuesday 04 May 2010] [15:32:11] <sustrik>  hm, that's what REQ/REP does under the cover
| [Tuesday 04 May 2010] [15:32:19] <sustrik>  anyway
| [Tuesday 04 May 2010] [15:32:23] <sustrik>  thanks for a hint
| [Tuesday 04 May 2010] [15:32:53] <cremes>   REQ/REP does the message routing only at the socket level; he wants message-level routing would be my guess
| [Tuesday 04 May 2010] [15:33:31] <cremes>   s/routing/matching/g
| [Tuesday 04 May 2010] [15:33:47] <sustrik>  something like subscriptions?
| [Tuesday 04 May 2010] [15:33:51] <cremes>   yes
| [Tuesday 04 May 2010] [15:34:10] <cremes>   i'm going to post to the blog again asking Matt for more details...
| [Tuesday 04 May 2010] [15:34:17] <sustrik>  ok, thanks
| [Tuesday 04 May 2010] [15:42:03] <cremes>   sustrik: having reread the thread, i was mistaken what he is looking for; i think he was asking for an alternate to zmq_send
| [Tuesday 04 May 2010] [15:42:23] <cremes>   something like:   zmq_async_send(socket, msg, flags, callback)
| [Tuesday 04 May 2010] [15:42:44] <cremes>   that variant would call zmq_poll (or similar) behind the scenes and invoke the callback when data arrived
| [Tuesday 04 May 2010] [15:43:28] <cremes>   i think he wants to avoid the explicit zmq_poll operation in application code; let's see what he has to say on the blog assuming he responds
| [Tuesday 04 May 2010] [15:54:41] <sustrik>  ah, that makes sense
| [Tuesday 04 May 2010] [15:55:49] <sustrik>  in other words: automatic pairing of requests and replies while retaining the possibility to have multiple requests on the fly at the same time
| [Tuesday 04 May 2010] [15:58:50] <cremes>   sustrik: yes, i think so
| [Tuesday 04 May 2010] [15:59:22] <sustrik>  that would make a nice little project...
| [Tuesday 04 May 2010] [15:59:52] <sustrik>  few hours or so of coding i would say
| [Wednesday 05 May 2010] [01:57:19] <dermoth>    Hi there... I finally managed to get back at my zmq php ext and I'm adding persisten sockets in there... so what happens when, for a given socket, zmq_connect or zmq_bind is called more then once with the same parameters?
| [Wednesday 05 May 2010] [01:58:07] <dermoth>    my idea was to keep sockets around when wanted, but then the coerkct might be already connected/bound when those functions gets called (again...)
| [Wednesday 05 May 2010] [02:10:04] <dermoth>    hi sustrik
| [Wednesday 05 May 2010] [02:10:28] <dermoth>    I asked a question right before you came in... 
| [Wednesday 05 May 2010] [02:10:52] <dermoth>    <dermoth> Hi there... I finally managed to get back at my zmq php ext and I'm adding persisten sockets in there... so what happens when, for a given socket, zmq_connect or zmq_bind is called more then once with the same parameters?
| [Wednesday 05 May 2010] [02:10:52] <dermoth>    <dermoth> my idea was to keep sockets around when wanted, but then the socket might be already connected/bound when those functions gets called (again...)
| [Wednesday 05 May 2010] [02:11:01] <sustrik>    hi
| [Wednesday 05 May 2010] [02:11:38] <dermoth>    do you have any idea what happens in that case? it doesn'T seem to be documented...
| [Wednesday 05 May 2010] [02:11:48] <sustrik>    depends on how the underlying transport handle such case
| [Wednesday 05 May 2010] [02:11:50] <sustrik>    for TCP
| [Wednesday 05 May 2010] [02:12:02] <sustrik>    rebinding the same nic/port result in EADDRINUSE
| [Wednesday 05 May 2010] [02:12:05] <dermoth>    so it's not handled at all by zeromq...
| [Wednesday 05 May 2010] [02:12:26] <sustrik>    it just propagates the error to the user
| [Wednesday 05 May 2010] [02:12:37] <dermoth>    which means I will have to handle my own persistent connect/binds :(
| [Wednesday 05 May 2010] [02:12:41] <sustrik>    as for connect, connecting twice means creating 2 TCP connections
| [Wednesday 05 May 2010] [02:12:58] <sustrik>    probably
| [Wednesday 05 May 2010] [02:13:09] <sustrik>    have you had a look at mikko's PHP binding?
| [Wednesday 05 May 2010] [02:13:16] <sustrik>    how does he handle that case?
| [Wednesday 05 May 2010] [02:13:17] <dermoth>    ok... 
| [Wednesday 05 May 2010] [02:13:36] <dermoth>    humm I had a quick look.. is he supporting persistent sockets?
| [Wednesday 05 May 2010] [02:14:08] <sustrik>    yes, as far as i know
| [Wednesday 05 May 2010] [02:17:26] <dermoth>    as far as I can see his code cannot handle multiple persistent sockets though... I made the persistent "flag" a string as to allow multiple apps to run ans use sockets on the same web server without colliding...
| [Wednesday 05 May 2010] [02:17:42] <dermoth>    looks nice though... I wist I had the time to finish mine...
| [Wednesday 05 May 2010] [02:17:46] <dermoth>    wish
| [Wednesday 05 May 2010] [02:21:32] <dermoth>    nevermind thers seems to be an id,,, just passed differently...
| [Wednesday 05 May 2010] [02:24:50] <dermoth>    so he use a hash for this too... like I would have to do. I can't really compare though as his module is OO asn mine is functionnal... I waven't read much about OO programming in PHP
| [Wednesday 05 May 2010] [02:25:22] <sustrik>    dermoth: i cannot help much here as I have no idea about PHP
| [Wednesday 05 May 2010] [02:26:05] <sustrik>    however, try to get in touch with mikko, it may spare you some work
| [Wednesday 05 May 2010] [02:27:21] <dermoth>    i know... I've speak with him... I didn't know he was writing one when I started, but it was entertaining anyway ;)
| [Wednesday 05 May 2010] [02:43:40] <dermoth>    sustrik, mikko, fwiw I just make my code available: http://solaris.beaubien.net/cgi-bin/gitweb.cgi/php_zmq.git - as I said I may keep working on it just for fun, but if mikko's modules is stable I might end up using this one (I probably won't finish mine in time if I even finish it...)
| [Wednesday 05 May 2010] [02:44:00] <dermoth>    just made...
| [Wednesday 05 May 2010] [02:47:09] <sustrik>    dermoth: i personally would like to see the both efforts joined somehow, if for nothing else a project with 2 contributors is less likely to die...
| [Wednesday 05 May 2010] [02:50:04] <dermoth>    well I would personally prefer a functional interface but i'm not really going yo use it anyway. I maintain a lot of PHP servers but I never coded much in php - I usually write scripts (and some rare CGIs) in perl or python.
| [Wednesday 05 May 2010] [02:50:56] <dermoth>    I want to add zeromq to our architecture, but I'm not going to write the code :)
| [Wednesday 05 May 2010] [02:52:46] <dermoth>    if my module can be useful it's nice... I have absolutely no experience with php extensions though (I read a book on it before writing it...) and it's far from complete
| [Wednesday 05 May 2010] [03:02:42] <sustrik>    sure :)
| [Wednesday 05 May 2010] [07:04:02] <CIA-15> zeromq2: 03Martin Sustrik 07master * r44dd005 10/ (4 files): number of application threads to use 0MQ sockets is unlimited; app_threads parameter in zmq_init is unused and obsolete - http://bit.ly/acYoiN
| [Wednesday 05 May 2010] [07:04:03] <CIA-15> zeromq2: 03Martin Sustrik 07master * r10f5334 10/ src/signaler.cpp : Merge branch 'master' of git@github.com:sustrik/zeromq2 - http://bit.ly/cCXFzA
| [Wednesday 05 May 2010] [08:24:57] <CIA-15> zeromq2: 03Martin Sustrik 07master * r835e893 10/ (14 files): dispatcher_t class renamed to ctx_t - http://bit.ly/cDh4Vw
| [Wednesday 05 May 2010] [08:33:33] <CIA-15> zeromq2: 03Martin Sustrik 07master * r64c5866 10/ builds/msvc/libzmq/libzmq.vcproj : MSVC build fixed - http://bit.ly/9Mcv5W
| [Wednesday 05 May 2010] [08:35:34] <mikko>  dermoth: your bsd license contains my name :)
| [Wednesday 05 May 2010] [08:35:55] <mikko>  in the files
| [Wednesday 05 May 2010] [09:35:29] <dermoth>    mikko, really?
| [Wednesday 05 May 2010] [09:36:02] <dermoth>    I though I changed it... did is at 3am though so I might have missed something!
| [Wednesday 05 May 2010] [09:37:34] <dermoth>    IN NO EVENT SHALL ... BE LIABLE FOR ANY - I didn't think the license itself contained your name :)
| [Wednesday 05 May 2010] [09:42:41] <dermoth>    Mikko, fixed ;)
| [Wednesday 05 May 2010] [09:44:22] <mikko>  dermoth: that is "<ENTITY NAME>" in the license
| [Wednesday 05 May 2010] [09:45:02] <dermoth>    Yes, I used the generic form instead: IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE ...
| [Thursday 06 May 2010] [04:00:37] <sjampoo> zmq_init() does not correctly handle negative io-thread numbers, it crashes instead of returning an error. Is this a known issue or should i open on Github?
| [Thursday 06 May 2010] [04:01:03] <sustrik> make an issue on github
| [Thursday 06 May 2010] [04:01:15] <sjampoo> ok
| [Thursday 06 May 2010] [04:01:22] <sustrik> thanks
| [Thursday 06 May 2010] [04:17:30] <sjampoo> aha, you don't need to specify app threads + flags to zmq_init anymore, cool.
| [Thursday 06 May 2010] [04:20:36] <sustrik> yup, I've changed that yesterday
| [Thursday 06 May 2010] [04:33:18] <CIA-15>  zeromq2: 03Martin Sustrik 07master * rf60d891 10/ src/zmq.cpp : Issue 23. zmq_init() crashes on illegal numbers - http://bit.ly/cbVNJE
| [Thursday 06 May 2010] [04:33:25] <sustrik> sjampoo: ok, done
| [Thursday 06 May 2010] [04:33:33] <sjampoo> great. 
| [Thursday 06 May 2010] [04:33:36] <sustrik> if you are happy how it behaves now, close the issue
| [Thursday 06 May 2010] [07:14:47] <mikko>   morning
| [Thursday 06 May 2010] [07:38:36] <sustrik> morning
| [Thursday 06 May 2010] [11:01:36] <sjampoo> Hmm is zmq_poll in the trunk reliable? I am getting erratic behaviour.
| [Thursday 06 May 2010] [11:01:52] <sustrik> what's happening?
| [Thursday 06 May 2010] [11:02:13] <sjampoo> when i do a zmq_poll only the first item in the set gets it revents updated 
| [Thursday 06 May 2010] [11:02:25] <sjampoo> and sometimes not even the first item
| [Thursday 06 May 2010] [11:03:17] <sustrik> hm, do you have a test program?
| [Thursday 06 May 2010] [11:03:35] <sjampoo> yes, http://pastebin.com/yNB5y2J6
| [Thursday 06 May 2010] [11:03:45] <sjampoo> maybe i am doing something wrong
| [Thursday 06 May 2010] [11:04:00] <sjampoo> I tried it with both pub and pair sockets
| [Thursday 06 May 2010] [11:04:31] <sustrik> the code looks ok
| [Thursday 06 May 2010] [11:04:44] <sustrik> it should return ZMQ_POLLOUT for both sockets
| [Thursday 06 May 2010] [11:04:48] <sjampoo> the output is consistently:
| [Thursday 06 May 2010] [11:04:49] <sjampoo> rc: 1
| [Thursday 06 May 2010] [11:04:49] <sjampoo> s:, 2
| [Thursday 06 May 2010] [11:04:49] <sjampoo> r:, 0
| [Thursday 06 May 2010] [11:05:08] <sjampoo> and sometimes: 0,0,0
| [Thursday 06 May 2010] [11:05:11] <sustrik> looks like a bug
| [Thursday 06 May 2010] [11:05:21] <sjampoo> I'll file a report then
| [Thursday 06 May 2010] [11:05:26] <sustrik> yes, please
| [Thursday 06 May 2010] [11:05:32] <sustrik> i'll have a look at it shortly
| [Thursday 06 May 2010] [11:05:50] <sjampoo> i think it might be related to the issue that is already open
| [Thursday 06 May 2010] [11:06:23] <sustrik> which one/
| [Thursday 06 May 2010] [11:06:25] <sustrik> ?
| [Thursday 06 May 2010] [11:06:51] <sjampoo> issue 7 from a month ago, where Poll doesn't return IN events every once in a while
| [Thursday 06 May 2010] [11:07:22] <sjampoo> I think it just doesn't return the first event on both IN and OUT
| [Thursday 06 May 2010] [11:08:30] <sustrik> yes, possible
| [Thursday 06 May 2010] [11:08:37] <sustrik> still, please fill in a ticket
| [Thursday 06 May 2010] [11:08:49] <sustrik> just in case it's a different issue
| [Friday 07 May 2010] [02:36:56] <sjampoo>   sustrik, got your github comment and closed the issue. I obviously made an error while translating the Python code, will dig deeper as to understand why the test suite is failing.
| [Friday 07 May 2010] [02:42:36] <sustrik>   ok
| [Friday 07 May 2010] [02:50:03] <muffinpeddler> Hey guys, does zeromq have priority messaging support, or some kind of priority queue feature?
| [Friday 07 May 2010] [02:57:02] <muffinpeddler> Or would it be effective to just have my own priority queue after receiving each message
| [Friday 07 May 2010] [02:59:22] <sustrik>   muffinpeddler: there's no inbuild one
| [Friday 07 May 2010] [02:59:40] <sustrik>   you can implement it yourself
| [Friday 07 May 2010] [03:00:19] <sustrik>   but that still doesn't solve the head of line blocking issue (large low priority messages blocking high priority messages)
| [Friday 07 May 2010] [03:00:39] <sustrik>   the only systematic solution is to have serveral underlying connections
| [Friday 07 May 2010] [03:00:49] <sustrik>   one for each priority level
| [Friday 07 May 2010] [03:14:57] <sjampoo>   sustrik, when dealing with PAIR sockets, ZMQ_POLL should always report them as POLLOUT no matter if they have been bind() or connect()ed, right? 
| [Friday 07 May 2010] [03:15:13] <sjampoo>   right now i have this: http://pastebin.com/cWVJZ3nu
| [Friday 07 May 2010] [03:15:46] <sjampoo>   i would expect 2/2 but the PAIR socket that binds returns 0
| [Friday 07 May 2010] [03:15:58] <sustrik>   yup, a known issue
| [Friday 07 May 2010] [03:16:03] <sjampoo>   oh
| [Friday 07 May 2010] [03:16:08] <sustrik>   PAIR sockets are still unfinished
| [Friday 07 May 2010] [03:16:22] <sustrik>   i should discard them from the documentation
| [Friday 07 May 2010] [03:16:33] <sustrik>   so that people don't get congfused
| [Friday 07 May 2010] [03:18:15] <sjampoo>   that would be better i think yes, i really thought that P2P sockets just worked and that PAIR was just a renaming
| [Friday 07 May 2010] [03:21:38] <CIA-15>    zeromq2: 03Martin Sustrik 07master * r36b044a 10/ doc/zmq_socket.txt : ZMQ_PAIR socket removed from the documentation as it is unfinished yet - http://bit.ly/aXiRxv
| [Friday 07 May 2010] [03:21:46] <sustrik>   :)
| [Friday 07 May 2010] [03:22:22] <sjampoo>   heh
| [Friday 07 May 2010] [04:30:05] <sjampoo>   hmm i keep stumbling against these issues where i don't know if it is my lack of understanding or just a bug. 
| [Friday 07 May 2010] [04:30:41] <sjampoo>   Is there some unwritten rule that a ZMQ_PUB socket has to connect and a SUB socket has to bind
| [Friday 07 May 2010] [04:31:28] <sjampoo>   I have example code at http://pastebin.com/bdPa5ra1
| [Friday 07 May 2010] [04:31:58] <sjampoo>   it works as it is, but imho i should be able to have the publisher bind and the subscriber connect as well
| [Friday 07 May 2010] [04:32:16] <sustrik>   yes, that should be possible
| [Friday 07 May 2010] [04:32:20] <sustrik>   what's the problem?
| [Friday 07 May 2010] [04:32:33] <sjampoo>   if i do that the recv() hangs
| [Friday 07 May 2010] [04:32:39] <sjampoo>   as if there is nothing to be received
| [Friday 07 May 2010] [04:33:02] <sustrik>   that's possibly because you send the message before subscribed connects
| [Friday 07 May 2010] [04:33:39] <sjampoo>   but shouldn't the sleep solve that? 
| [Friday 07 May 2010] [04:34:48] <sustrik>   presumably, but there's no guarantee
| [Friday 07 May 2010] [04:34:55] <sjampoo>   ie: http://pastebin.com/KACJudRr
| [Friday 07 May 2010] [04:35:34] <sjampoo>   but isn't a 3 second sleep time more than enough? 
| [Friday 07 May 2010] [04:35:59] <sustrik>   yeah, even few microseconds should be enough
| [Friday 07 May 2010] [04:36:09] <sustrik>   i can have a look at what's causing the behaviour
| [Friday 07 May 2010] [04:36:17] <sjampoo>   that would be great
| [Friday 07 May 2010] [04:36:21] <sustrik>   but the point is that you don't have guarantee anyway
| [Friday 07 May 2010] [04:36:28] <sjampoo>   not even with sleep? 
| [Friday 07 May 2010] [04:36:49] <sustrik>   nope, pub/sub works like a radio transmission
| [Friday 07 May 2010] [04:37:09] <sustrik>   publisher pusblishes continuous stream of messages
| [Friday 07 May 2010] [04:37:21] <sustrik>   subscribed joins at certain point
| [Friday 07 May 2010] [04:37:30] <sustrik>   from that point on it'll get all the messages
| [Friday 07 May 2010] [04:37:38] <sustrik>   then it leaves
| [Friday 07 May 2010] [04:38:02] <sustrik>   but there's no guarantee on what will be the first message you'll get
| [Friday 07 May 2010] [04:38:31] <sjampoo>   but in this example i have the subscriber 'tune in to the broadcast'
| [Friday 07 May 2010] [04:39:02] <sjampoo>   wait 3 seconds as in not to miss any important message
| [Friday 07 May 2010] [04:39:05] <sustrik>   yup, try to publish a stream of messages
| [Friday 07 May 2010] [04:39:35] <sustrik>   well, if you want the delivery of each message to be guaranteed you cannot use pub/sub
| [Friday 07 May 2010] [04:40:48] <sustrik>   it's not possible to combine one-to-many distribution with guaranteed delivery
| [Friday 07 May 2010] [04:41:11] <sustrik>   without running into global deadlocks
| [Friday 07 May 2010] [04:41:19] <sustrik>   caused by slow consumers
| [Friday 07 May 2010] [04:41:41] <sjampoo>   well in this example it looks more like a bug imho as the other way around works perfectly
| [Friday 07 May 2010] [04:42:01] <sustrik>   yep, i'll have a look
| [Friday 07 May 2010] [04:49:19] <sjampoo>   thanks, i do understand the radio analogy of pub/sub.
| [Friday 07 May 2010] [04:49:26] <sjampoo>   I think a nice analogy of bind/connect in this sense would be having the publisher transmit at a certain radio frequency (bind) or have it announce its messages through a megaphone directly at the listeners (connect)
| [Friday 07 May 2010] [04:57:01] <sustrik>   yes, nicely said
| [Friday 07 May 2010] [04:57:19] <sustrik>   unfortunately, there's something missing in 0mq documentation
| [Friday 07 May 2010] [04:57:35] <sustrik>   a text that would explain individual messaging patterns in such simple words
| [Friday 07 May 2010] [05:09:09] <CIA-15>    zeromq2: 03Martin Sustrik 07master * r4a3b857 10/ src/app_thread.cpp : commands not processed immediatelly in some scenarios; fixed - http://bit.ly/aSMRIF
| [Friday 07 May 2010] [05:09:12] <sustrik>   sjampoo: try now
| [Friday 07 May 2010] [05:15:51] <sjampoo>   cool! works :)
| [Friday 07 May 2010] [05:18:14] <sjampoo>   I am planning to write a little bit about 0MQ in the future, might bother you with some extra questions by then
| [Friday 07 May 2010] [05:20:23] <sustrik>   sjampoo: sure, no problem
| [Friday 07 May 2010] [05:20:39] <sustrik>   also, if it's possible i'll link your text from the website
| [Friday 07 May 2010] [05:22:02] <sustrik>   there's 0mq blog on the site btw, so you can even publish there...
| [Friday 07 May 2010] [05:23:56] <sjampoo>   ok! i'll keep that in mind
| [Friday 07 May 2010] [05:28:21] <sjampoo>   btw, that last commit also fixed the zmq_pair issue
| [Friday 07 May 2010] [05:47:16] <sustrik>   :)
| [Friday 07 May 2010] [11:21:15] <muffinpeddler> sustrik: thanks.  So you can keep calling socket.bind() to bind to as many ports/interfaces as you like with the zmq::socket_t?
| [Friday 07 May 2010] [11:22:48] <sustrik>   yes
| [Friday 07 May 2010] [11:39:52] <muffinpeddler> So how will recv help me figure out which "priority queue" my message is from?  Or will it iterate through each connection and if each queue has messages available to consume, will it grab one from the first one and then the second?
| [Friday 07 May 2010] [11:43:30] <muffinpeddler> So even if I'm getting tons of messages on one port, the other port will still be given fair consideration?
| [Friday 07 May 2010] [11:52:05] <sustrik>   yes, exactly
| [Friday 07 May 2010] [11:52:16] <sustrik>   the algorithm it's known as fair queueing
| [Friday 07 May 2010] [11:52:54] <sustrik>   as for the prioritisation, as I said it's not yet in the product
| [Friday 07 May 2010] [11:53:17] <sustrik>   so you'll have to use several sockets
| [Friday 07 May 2010] [11:53:36] <sustrik>   or fix 0mq scheduling algorithm to use priorities
| [Friday 07 May 2010] [11:54:47] <sustrik>   i.e. instead of fair queueing, pick the message from queue with highest priority
| [Friday 07 May 2010] [12:27:23] <cremes>    sustrik: how do i get a wikidot account? i'd like my ffi bindings to be listed on the 0mq home page / wiki
| [Friday 07 May 2010] [12:27:52] <sustrik>   open www.zeromq.org
| [Friday 07 May 2010] [12:28:00] <sustrik>   right top corner
| [Friday 07 May 2010] [12:28:03] <sustrik>   create account
| [Friday 07 May 2010] [12:28:13] <cremes>    ah, i see it
| [Friday 07 May 2010] [12:28:35] <sustrik>   yeah, let me know your login afterwards
| [Friday 07 May 2010] [12:28:42] <cremes>    it's cremes
| [Friday 07 May 2010] [12:29:35] <sustrik>   cremes: you've been invited
| [Friday 07 May 2010] [12:29:50] <sustrik>   let me create a template page for you
| [Friday 07 May 2010] [12:29:58] <cremes>    cool, thanks
| [Friday 07 May 2010] [12:30:13] <sustrik>   how's should the binding be called?
| [Friday 07 May 2010] [12:30:19] <sustrik>   JRuby?
| [Friday 07 May 2010] [12:30:37] <cremes>    for now JRuby is the only ruby runtime that has proper FFI support, so yes
| [Friday 07 May 2010] [12:30:48] <cremes>    but eventually it will work with rubinius and ironruby too
| [Friday 07 May 2010] [12:31:06] <sustrik>   probably no generic name for all of those?
| [Friday 07 May 2010] [12:31:26] <cremes>    nope; how about we call it ruby-ffi?
| [Friday 07 May 2010] [12:31:41] <cremes>    then the page itself can list the currently supported runtimes
| [Friday 07 May 2010] [12:31:45] <sustrik>   ffi is rather generic
| [Friday 07 May 2010] [12:31:51] <sustrik>   which ffi you have in mind?
| [Friday 07 May 2010] [12:32:16] <cremes>    it's ruby specific (ruby-ffi)
| [Friday 07 May 2010] [12:32:44] <cremes>    i.e. http://github.com/ffi/ffi
| [Friday 07 May 2010] [12:33:12] <sustrik>   term 'ffi' is used in different languages
| [Friday 07 May 2010] [12:33:14] <sustrik>   see here"
| [Friday 07 May 2010] [12:33:16] <sustrik>   http://en.wikipedia.org/wiki/Foreign_function_interface
| [Friday 07 May 2010] [12:33:24] <cremes>    yeah, i know
| [Friday 07 May 2010] [12:33:33] <sustrik>   so maybe Ruby-FFI?
| [Friday 07 May 2010] [12:33:37] <cremes>    but these bindings are written in ruby and will only work with ruby
| [Friday 07 May 2010] [12:33:38] <cremes>    yes
| [Friday 07 May 2010] [12:33:52] <sustrik>   or Ruby (FFI)
| [Friday 07 May 2010] [12:33:57] <cremes>    bingo
| [Friday 07 May 2010] [12:34:00] <sustrik>   :)
| [Friday 07 May 2010] [12:34:11] <sustrik>   ok, a sec
| [Friday 07 May 2010] [12:34:42] <cremes>    btw, everything is working pretty well with these bindings except they are leaking every message
| [Friday 07 May 2010] [12:34:50] <cremes>    i need to find & fix the memory leak :(
| [Friday 07 May 2010] [12:35:14] <sustrik>   http://www.zeromq.org/bindings:ruby-ffi
| [Friday 07 May 2010] [12:35:36] <sustrik>   i've pasted the content of the python bindings wiki page there to give you a template
| [Friday 07 May 2010] [12:35:43] <sustrik>   but feel free to modify it in any way
| [Friday 07 May 2010] [12:35:53] <cremes>    great, i'll do that
| [Friday 07 May 2010] [12:36:17] <sustrik>   once you are ready, let me know and I'll link the page from the left pane
| [Friday 07 May 2010] [12:37:09] <cremes>    okay, probably later today i'll get it updated
| [Friday 07 May 2010] [12:38:37] <sustrik>   ok
| [Friday 07 May 2010] [13:39:27] <muffinpeddler> sustrik: thanks.  Perhaps I'll look into the 0mq algorithm
| [Friday 07 May 2010] [13:41:51] <sustrik>   muffinpeddler: it's here: http://github.com/sustrik/zeromq2/blob/master/src/fq.cpp
| [Friday 07 May 2010] [13:42:23] <sustrik>   it's simple array of pipes
| [Friday 07 May 2010] [13:42:41] <sustrik>   when recv is called you round-robin among them to get the message
| [Friday 07 May 2010] [13:44:00] <cremes>    sustrik: i want to confirm that when zmq_msg_close is called, the lib handles freeing the data buffer given it via zmq_msg_init_data
| [Friday 07 May 2010] [13:44:19] <cremes>    and it isn't necessary to pass a "free" function
| [Friday 07 May 2010] [13:44:37] <sustrik>   it's necessary
| [Friday 07 May 2010] [13:44:52] <sustrik>   how would it otherwise know how to deallocate the buffer?
| [Friday 07 May 2010] [13:45:09] <cremes>    the call to zmq_close should free it
| [Friday 07 May 2010] [13:45:30] <cremes>    the doc for zmq_msg_init_data says that 0mq takes ownership of the data buffer
| [Friday 07 May 2010] [13:45:31] <sustrik>   well, but you supply the buffer you allocated yourself, right?
| [Friday 07 May 2010] [13:45:52] <cremes>    i supply it but 0mq owns it once i hand it off
| [Friday 07 May 2010] [13:46:00] <sustrik>   yes, it does, but you have to let it know how to deallocate it:
| [Friday 07 May 2010] [13:46:02] <sustrik>   free?
| [Friday 07 May 2010] [13:46:09] <sustrik>   delete?
| [Friday 07 May 2010] [13:46:16] <sustrik>   HGlobalDealloc?
| [Friday 07 May 2010] [13:46:23] <sustrik>   whatever
| [Friday 07 May 2010] [13:46:26] <cremes>    ok
| [Friday 07 May 2010] [13:46:43] <cremes>    so if now free function is passed to zmq_msg_init_data, then those buffers will all leak, yes?
| [Friday 07 May 2010] [13:46:52] <sustrik>   yes
| [Friday 07 May 2010] [13:47:03] <cremes>    then i think i found my memory leak; thanks
| [Friday 07 May 2010] [13:47:12] <sustrik>   not passing deallocation function makes sense only for static data
| [Friday 07 May 2010] [13:47:14] <sustrik>   such as"
| [Friday 07 May 2010] [13:47:27] <sustrik>   zmq_msg_init_data (&msg, "ABC", 3, NULL);
| [Friday 07 May 2010] [13:47:52] <sustrik>   the data in this case are part of the executable, so there's no need to deallocate it
| [Friday 07 May 2010] [13:48:22] <cremes>    ok
| [Friday 07 May 2010] [13:48:54] <cremes>    so what is the "hint" argument for?
| [Friday 07 May 2010] [13:49:28] <sustrik>   imagine more complex allocation mechanism
| [Friday 07 May 2010] [13:49:34] <sustrik>   such as a garbage collector
| [Friday 07 May 2010] [13:49:58] <sustrik>   you have to pass pointer to the gc object in the hint
| [Friday 07 May 2010] [13:50:10] <sustrik>   so that free function can do something like this:
| [Friday 07 May 2010] [13:50:31] <sustrik>   ((gc*) hint)->dealloc (data);
| [Friday 07 May 2010] [13:50:42] <cremes>    oh, that makes sense too
| [Friday 07 May 2010] [13:57:34] <muffinpeddler> thanks sustrik, I've been meaning to make an open source contribution
| [Friday 07 May 2010] [13:58:46] <sustrik>   that would be great!
| [Friday 07 May 2010] [14:00:42] <muffinpeddler> no guarantees though, I have little experience with 0mq :)
| [Friday 07 May 2010] [14:01:34] <sustrik>   the functionality in question is pretty dumb, so no worries :)
| [Friday 07 May 2010] [14:02:57] <sustrik>   there are some design issues though:
| [Friday 07 May 2010] [14:03:14] <sustrik>   for example: how many priority levels do we want to support?
| [Friday 07 May 2010] [14:08:25] <muffinpeddler> Right.  And what would you set the priority on?  The pipe itself?
| [Friday 07 May 2010] [14:09:00] <sustrik>   i would say the priority has to associated with the particular transport
| [Friday 07 May 2010] [14:09:03] <sustrik>   say port 5555
| [Friday 07 May 2010] [14:09:31] <sustrik>   that would allow you to configure nwtworking hardware to treat it with specific QoS
| [Friday 07 May 2010] [14:10:23] <sustrik>   for example, you can ask the router to drop packets on port 5556 rather than on port 5555
| [Friday 07 May 2010] [14:11:08] <muffinpeddler> interesting
| [Friday 07 May 2010] [14:11:18] <sustrik>   makes sense, no?
| [Friday 07 May 2010] [14:12:31] <sustrik>   in practical terms it means that prioritised messages get through even over congested network
| [Friday 07 May 2010] [14:12:44] <muffinpeddler> Yea it does
| [Friday 07 May 2010] [14:12:54] <muffinpeddler> anything else I should take in to consideration?
| [Friday 07 May 2010] [14:13:34] <sustrik>   well, there are two parts to it
| [Friday 07 May 2010] [14:13:48] <sustrik>   1. how to get priority value to the scheduler
| [Friday 07 May 2010] [14:13:55] <sustrik>   2. how to do scheduling itself
| [Friday 07 May 2010] [14:14:29] <sustrik>   pt. 1 requires more knowledge of the codebase, so I volunteer to implement it
| [Friday 07 May 2010] [14:15:18] <sustrik>   pt. 2 doesn't require much knowlegde so that's where you can start
| [Friday 07 May 2010] [14:15:49] <cornbread> sounds good
| [Friday 07 May 2010] [14:18:56] <cornbread> So which class would the priority value be placed in?  I see a reader_t has a reference to an i_endpoint
| [Friday 07 May 2010] [14:19:15] <sustrik>   let me see...
| [Friday 07 May 2010] [14:19:43] <sustrik>   have a look at this function: void zmq::fq_t::attach (reader_t *pipe_)
| [Friday 07 May 2010] [14:19:56] <sustrik>   that's when new pipe is attached to the scheduler
| [Friday 07 May 2010] [14:20:06] <sustrik>   what if it was modified like this:
| [Friday 07 May 2010] [14:20:18] <sustrik>   zmq::fq_t::attach (reader_t *pipe_, int priority_)
| [Friday 07 May 2010] [14:20:21] <sustrik>   ?
| [Friday 07 May 2010] [14:21:36] <cornbread> Sure.  So you think the fq_t should be modified, or a new scheduler be created?  What if you just want to use the fair queue
| [Friday 07 May 2010] [14:21:59] <sustrik>   it should be modified imp
| [Friday 07 May 2010] [14:22:00] <sustrik>   imo
| [Friday 07 May 2010] [14:22:22] <sustrik>   just allow for several pipe arrays instead of a single one
| [Friday 07 May 2010] [14:22:42] <sustrik>   each array for a specific priority level
| [Friday 07 May 2010] [14:23:05] <sustrik>   the scheduler would try to get a message from the highest priority array
| [Friday 07 May 2010] [14:23:16] <sustrik>   if there's none, try the second one etc.
| [Friday 07 May 2010] [14:23:52] <cornbread> What is different about that compared to how the round robin scheduler already works?
| [Friday 07 May 2010] [14:24:17] <sustrik>   with RR you get a message from a pipe then shift to another pipe
| [Friday 07 May 2010] [14:24:39] <sustrik>   with priorities you do the same thing on each priotity level
| [Friday 07 May 2010] [14:24:58] <sustrik>   but if there's no message on that level you fail-over to the lower level
| [Friday 07 May 2010] [14:25:13] <sustrik>   so as long as there are messages on highest priority level
| [Friday 07 May 2010] [14:25:27] <sustrik>   you'll never retrieve messages from lower level
| [Friday 07 May 2010] [14:26:23] <cornbread> okay, well I'll take a look at this here and there today.  I've got some exams to study for
| [Friday 07 May 2010] [14:26:50] <sustrik>   sure, no haste
| [Friday 07 May 2010] [15:03:22] <cremes>    sustrik: if you are still around, another api question...
| [Friday 07 May 2010] [15:04:23] <cremes>    does zmq_msg_init_size allocate a data buffer of "size" bytes, and if so, is a later call to zmq_msg_init_data redundant?
| [Friday 07 May 2010] [15:05:06] <cremes>    that is, a later call to zmq_msg_init_data using the same zmq_msg_t
| [Friday 07 May 2010] [15:06:19] <cremes>    nevermind... i just proved it to myself via a code test
| [Friday 07 May 2010] [15:06:27] <cremes>    btw, that was my memory leak
| [Friday 07 May 2010] [15:06:46] <cremes>    i called zmq_msg_init_size on a structure and then called zmq_msg_init_data on the same structure
| [Friday 07 May 2010] [15:07:23] <cremes>    i *thought* it was necessary to call them in that order; 1) allocate "size" space and 2) hand the buffer over
| [Friday 07 May 2010] [15:07:37] <cremes>    now when i look at it i clearly see that is wrong and unnecessary
| [Friday 07 May 2010] [15:09:20] <cremes>    i do recommend adding a warning to the docs for those calls saying that calling them both *will* result in a memory leak of "size" bytes
| [Friday 07 May 2010] [15:23:04] <sustrik>   cremes: feel free to submit a documentation patch
| [Friday 07 May 2010] [15:23:40] <sustrik>   or maybe saying that you should call onle *one* of the init functions for a single messagw
| [Friday 07 May 2010] [15:23:51] <cremes>    will do
| [Friday 07 May 2010] [15:41:20] <sustrik>   cremes: the same text should be in documentation for zmq_msg_init
| [Friday 07 May 2010] [15:41:46] <cremes>    okay, i'll add it
| [Friday 07 May 2010] [15:41:50] <sustrik>   it's kind of strange having it in three different places...
| [Friday 07 May 2010] [15:42:07] <sustrik>   isn't there some common place to place the warning?
| [Friday 07 May 2010] [15:42:18] <sustrik>   hm...
| [Friday 07 May 2010] [15:42:27] <sustrik>   cremes: what about zmq(7)?
| [Friday 07 May 2010] [15:42:54] <cremes>    i don't know
| [Friday 07 May 2010] [15:42:57] <sustrik>   Initialise a message
| [Friday 07 May 2010] [15:42:57] <sustrik>              zmq_msg_init(3) zmq_msg_init_size(3) zmq_msg_init_data(3)
| [Friday 07 May 2010] [15:42:58] <cremes>    no opinion
| [Friday 07 May 2010] [15:43:18] <sustrik>   that can be possibly changed to something like
| [Friday 07 May 2010] [15:43:29] <sustrik>   To initialise message use one of the following:
| [Friday 07 May 2010] [15:43:57] <cremes>    i think ONE needs to be emphasized
| [Friday 07 May 2010] [15:44:12] <cremes>    how about adding the caution paragraph right under that grouping?
| [Friday 07 May 2010] [15:44:39] <cremes>    hmmm... i think this is not a good area to DRY up the documentation
| [Friday 07 May 2010] [15:44:45] <cremes>    i think all 3 docs should contain the caution
| [Friday 07 May 2010] [15:44:53] <cremes>    otherwise it's too easy for it to be missed
| [Friday 07 May 2010] [15:45:39] <sustrik>   right
| [Friday 07 May 2010] [15:45:48] <sustrik>   but let's make the text more concise
| [Friday 07 May 2010] [15:46:44] <sustrik>   "never initialise same message twice" ?
| [Friday 07 May 2010] [15:47:18] <sustrik>    "never initialise same zmq_msg_t twice" ?
| [Friday 07 May 2010] [15:47:38] <sustrik>   "never initialise same zmq_msg_t more than once" ?
| [Friday 07 May 2010] [15:47:52] <cremes>    how about this:
| [Friday 07 May 2010] [15:47:54] <cremes>    CAUTION: The functions _zmq_msg_init()_, _zmq_msg_init_data()_ and
| [Friday 07 May 2010] [15:47:54] <cremes>    _zmq_msg_init_size()_ all initialize the 'zmq_msg_t' struct. Never initialize
| [Friday 07 May 2010] [15:47:54] <cremes>    the same 'zmq_msg_t' twice.
| [Friday 07 May 2010] [15:48:13] <sustrik>   not bad
| [Friday 07 May 2010] [15:48:23] <sustrik>   CAUTION: The functions _zmq_msg_init()_, _zmq_msg_init_data()_ and
| [Friday 07 May 2010] [15:48:28] <cremes>    and add "or it will leak memory" to the end
| [Friday 07 May 2010] [15:48:46] <sustrik>   _zmq_msg_init_size()_ are mutually exclusive. Never initialize
| [Friday 07 May 2010] [15:48:47] <sustrik>   ...
| [Friday 07 May 2010] [15:48:52] <cremes>    ah, that's good
| [Friday 07 May 2010] [15:49:08] <sustrik>   i don't think the memory leak has to be mentioned
| [Friday 07 May 2010] [15:49:24] <sustrik>   "never do it" means anything can happen if you do
| [Friday 07 May 2010] [15:49:30] <cremes>    sure
| [Friday 07 May 2010] [15:49:55] <sustrik>   oki, let me fix the docs
| [Friday 07 May 2010] [15:50:06] <cremes>    ok
| [Friday 07 May 2010] [15:54:14] <CIA-15>    zeromq2: 03Martin Sustrik 07master * r4d33c43 10/ (3 files): caution about zmq_msg_init_* functions added to the docs - http://bit.ly/cvOC5r
| [Saturday 08 May 2010] [13:08:19] <xla_>    hej
| [Saturday 08 May 2010] [13:08:35] <xla_>    is there a resource for installing zeromq on ec2?
| [Saturday 08 May 2010] [13:10:00] <mikko>   what is different on ec2 installation that others?
| [Saturday 08 May 2010] [13:10:32] <mikko>   compared to others*
| [Saturday 08 May 2010] [13:11:48] <xla_>    nothing running a normal ubuntu 9.10, but can't find zeromq in universe
| [Saturday 08 May 2010] [13:12:58] <mikko>   you probably have to build yourself
| [Saturday 08 May 2010] [13:13:38] <xla_>    anything I have to be aware of? or the normal build process: configure + make + make install?
| [Saturday 08 May 2010] [13:14:03] <mikko>   you can either build debian packages yourself and install
| [Saturday 08 May 2010] [13:14:10] <mikko>   or just normal configure + make + make install
| [Saturday 08 May 2010] [13:16:21] <xla_>    mikko: many thx
| [Saturday 08 May 2010] [13:20:26] <xla_>    hmm, think I missing something getting this error for zmq_forwarder:
| [Saturday 08 May 2010] [13:20:26] <xla_>    zmq_forwarder: error while loading shared libraries: libzmq.so.0: cannot open shared object file: No such file or directory
| [Saturday 08 May 2010] [13:21:09] <mikko>   run 'ldconfig' and retry
| [Saturday 08 May 2010] [13:21:42] <xla_>    nice, thx again :)
| [Saturday 08 May 2010] [13:21:58] <mikko>   every time you install something by hand you need to update runtime linkers cache
| [Saturday 08 May 2010] [13:33:30] <xla_>    will keep that in mind for the next time
| [Sunday 09 May 2010] [10:59:45] <CIA-15>    zeromq2: 03Martin Sustrik 07master * ra25414e 10/ src/zmq.cpp : Fix in zmq_poll (Windows version) - http://bit.ly/axwsgk
| [Sunday 09 May 2010] [20:51:18] <cremes>    sustrik: go ahead and link the ruby-ffi page; i have updated it
| [Monday 10 May 2010] [01:33:33] <sustrik>   cremes: liked from the frontpage
| [Monday 10 May 2010] [01:33:37] <sustrik>   linked*
| [Monday 10 May 2010] [09:10:51] <cremes>    i need a helping hand getting the local_lat/remote_lat sample C programs running
| [Monday 10 May 2010] [09:10:53] <cremes>    http://pastie.org/953645
| [Monday 10 May 2010] [09:11:19] <cremes>    it looks to me like everything is there; i'm a bit out of practice with diagnosing C compilation issues
| [Monday 10 May 2010] [09:11:30] <cremes>    btw, there were no errors during the make cycle
| [Monday 10 May 2010] [09:13:25] <sustrik>   perf tests are made with the library
| [Monday 10 May 2010] [09:13:35] <sustrik>   you don't need to build them by hand
| [Monday 10 May 2010] [09:14:12] <cremes>    i didn't build them by hand; i ran make && make install then cd perf and tried to execute them
| [Monday 10 May 2010] [09:14:57] <cremes>    i built & installed the library; now i want to run the C perf tests
| [Monday 10 May 2010] [09:20:10] <cremes>    when i run ldd on the binaries, it finds all libs except for libzmq.so.0
| [Monday 10 May 2010] [09:20:38] <cremes>    do i need to create an env variable for it to find that library?
| [Monday 10 May 2010] [09:25:45] <mato>  cremes: you need to run 'ldconfig' as root
| [Monday 10 May 2010] [09:25:46] <cremes>    adding /usr/local/lib to my /etc/ld.so.conf.d/ld.so.conf file and rebuilding the linker cache solved it
| [Monday 10 May 2010] [09:25:47] <xla>   did u ran ldconfig -v ?
| [Monday 10 May 2010] [09:25:56] <cremes>    yep, just figured it out
| [Monday 10 May 2010] [09:26:25] <cremes>    heh
| [Monday 10 May 2010] [09:28:27] <cremes>    wow, the ruby ffi bindings appear to only incur about 15 usec of overhead versus a straight C implementation
| [Monday 10 May 2010] [09:28:30] <cremes>    not too shabby
| [Monday 10 May 2010] [09:34:11] <cremes>    hmmm... it's actually better than that...
| [Monday 10 May 2010] [09:54:11] <cremes>    lots of jitter when doing timing tests with local_lat/remote_lat; ~5usec jitter between runs
| [Monday 10 May 2010] [10:14:19] <sustrik>   yup, the latency ditributions tend to have fat tails
| [Monday 10 May 2010] [10:14:23] <sustrik>   shrug
| [Monday 10 May 2010] [10:17:37] <cremes>    np
| [Monday 10 May 2010] [10:49:15] <mato>  sustrik: I've updated OpenPGM in Git; my limited testing seems to show that streams hang even when publishing way below ZMQ_RATE
| [Monday 10 May 2010] [10:49:36] <sustrik>   mato: hm
| [Monday 10 May 2010] [10:49:45] <mato>  sustrik: perhaps someone else will test it in anger and complain, I've kind of given up on the current state of affairs :-)
| [Monday 10 May 2010] [10:50:10] <sustrik>   yup, just post a note on the mailing list
| [Monday 10 May 2010] [10:50:18] <sustrik>   to make Steven aware of it
| [Monday 10 May 2010] [10:50:18] <mato>  I just did
| [Monday 10 May 2010] [10:50:22] <sustrik>   great
| [Monday 10 May 2010] [10:51:20] <sustrik>   ah, i've meant report the problem you've seen
| [Monday 10 May 2010] [10:51:40] <sustrik>   otherwise Steven will have no idea that there's still a problem there
| [Monday 10 May 2010] [10:51:43] <mato>  then I'd have to write some sort of test program :-)
| [Monday 10 May 2010] [10:52:02] <sustrik>   well, it's up to you
| [Monday 10 May 2010] [10:52:05] <mato>  since the only thing I'm using at the moment is the camera example...
| [Monday 10 May 2010] [10:52:48] <mato>  I'll see if I can hack something together that won't take longer than half an hour...
| [Monday 10 May 2010] [11:22:02] <mato>  sustrik: hmm, it seems to be sporadic, i can't reproduce it any more
| [Monday 10 May 2010] [11:22:18] <mato>  sustrik: maybe the switch just needed to warm up or something :-)
| [Monday 10 May 2010] [11:22:30] <mato>  sustrik: i'll leave it for now and see if anyone else reports problems
| [Monday 10 May 2010] [11:23:05] <sustrik>   mato: ack
| [Monday 10 May 2010] [17:26:27] <mike8901>  Anyone know why https://gist.github.com/2218f508e914c162a8e2 would generate the exception "Error, no such device" ?
| [Monday 10 May 2010] [17:26:34] <mike8901>  (on the bind)
| [Monday 10 May 2010] [17:27:09] <mike8901>  exception: No such device, to be specific
| [Monday 10 May 2010] [17:40:25] <mikko> try 127.0.0.1 instead of localhost
| [Monday 10 May 2010] [17:44:28] <mike8901>  same issue with 127.0.0.1
| [Tuesday 11 May 2010] [02:36:05] <sjampoo>  Hmmm i think i'm having a problem with issue-18 as well (segfault on PAIR sockets). I think it is caused by a problem on the receiving end where zmq_recv sometimes does not correctly initialize the data or the length
| [Tuesday 11 May 2010] [02:38:09] <sjampoo>  sometime the received message contains something completely irrelevant such as 'stdout...' other times it returns some trailing characters on the message data
| [Tuesday 11 May 2010] [02:45:58] <sustrik>  sjampoo: please, report the problem
| [Tuesday 11 May 2010] [02:46:07] <sustrik>  attach your test program to the issue
| [Tuesday 11 May 2010] [02:46:33] <sjampoo>  i will, gonna take some time
| [Tuesday 11 May 2010] [02:46:40] <sjampoo>  i just noticed it in my python test suite
| [Tuesday 11 May 2010] [02:47:00] <sjampoo>  will try to extract it to c code
| [Tuesday 11 May 2010] [02:55:24] <sustrik>  thx
| [Tuesday 11 May 2010] [04:12:28] <sjampoo>  i've added it
| [Tuesday 11 May 2010] [04:12:44] <sjampoo>  but i still have no idea how to properly add code to issue's with Github
| [Tuesday 11 May 2010] [04:14:22] <sustrik>  offset it be 4 characters to the right
| [Tuesday 11 May 2010] [04:14:26] <sustrik>  that seems to work
| [Tuesday 11 May 2010] [04:14:43] <sjampoo>  yups, thnks
| [Tuesday 11 May 2010] [04:22:44] <sustrik>  sjampoo: if you want to directly print out the message data
| [Tuesday 11 May 2010] [04:22:52] <sustrik>  the terminal zero should be part of the message
| [Tuesday 11 May 2010] [04:25:16] <sjampoo>  but it is, isn't it? 
| [Tuesday 11 May 2010] [04:27:01] <sustrik>  doesn't look so
| [Tuesday 11 May 2010] [04:27:11] <sustrik>  msg_init (i)
| [Tuesday 11 May 2010] [04:27:16] <sustrik>  say i = 0
| [Tuesday 11 May 2010] [04:27:22] <sjampoo>  i see it
| [Tuesday 11 May 2010] [04:27:23] <sjampoo>  thnks
| [Tuesday 11 May 2010] [04:27:25] <sustrik>  np
| [Tuesday 11 May 2010] [04:27:27] <sjampoo>  hrm
| [Tuesday 11 May 2010] [07:39:32] <Olivier_c>    hi everybody
| [Tuesday 11 May 2010] [07:39:41] <sustrik>  hi
| [Tuesday 11 May 2010] [09:24:43] <sjampoo>  sutsrik, added something here: http://github.com/sustrik/zeromq2/issues#issue/18/comment/237765 not sure if its helpfull tho.
| [Tuesday 11 May 2010] [09:53:08] <sustrik>  sjampoo: have a look at your data lifetimes
| [Tuesday 11 May 2010] [09:53:16] <sustrik>  you allocate data on stacl
| [Tuesday 11 May 2010] [09:53:20] <sustrik>  stack
| [Tuesday 11 May 2010] [09:53:23] <sustrik>  then pass it to 0MQ
| [Tuesday 11 May 2010] [09:53:31] <sustrik>  then stack gets overwritten
| [Tuesday 11 May 2010] [09:53:38] <sustrik>  then you receive the message
| [Tuesday 11 May 2010] [10:09:47] <sjampoo>  i really did that 10.000x times, but your remark made me do it once more
| [Tuesday 11 May 2010] [10:10:07] <sjampoo>  and yup, missed something
| [Tuesday 11 May 2010] [10:10:23] <sjampoo>  tests are OK now, thanks
| [Tuesday 11 May 2010] [10:11:04] <sjampoo>  i should stop trying to translate to C i only break things
| [Tuesday 11 May 2010] [10:21:54] <sustrik>  :)
| [Tuesday 11 May 2010] [10:22:28] <sustrik>  if everything is ok, please close the issue
| [Tuesday 11 May 2010] [10:22:30] <sustrik>  thanks!
| [Tuesday 11 May 2010] [10:22:35] <sjampoo>  it is not mine issue
| [Tuesday 11 May 2010] [10:22:41] <sjampoo>  but i removed my comment
| [Tuesday 11 May 2010] [10:23:50] <sustrik>  ah, sorry
| [Tuesday 11 May 2010] [13:53:49] <CIA-15>   jzmq: 03Martin Sustrik 07master * r556eac8 10/ src/Socket.cpp : memleak in recv fixed - http://bit.ly/cZR4HX
| [Wednesday 12 May 2010] [01:01:56] <joshua__>   hi
| [Wednesday 12 May 2010] [01:02:15] <joshua__>   I've been having trouble using ZMQ_P2P socket types
| [Wednesday 12 May 2010] [01:02:51] <joshua__>   are there any examples around that use it successfully?
| [Wednesday 12 May 2010] [01:19:19] <guido_g>    try to specify an ip address on both sides
| [Wednesday 12 May 2010] [01:19:56] <guido_g>    you gave the interface to bind on the server side
| [Wednesday 12 May 2010] [01:20:06] <guido_g>    just an idea, of course :)
| [Wednesday 12 May 2010] [01:26:10] <joshua__>   so for the server, instead of "tcp://lo:5555" bind "tcp://127.0.0.1:5555"?
| [Wednesday 12 May 2010] [01:32:07] <guido_g>    yes
| [Wednesday 12 May 2010] [01:40:16] <joshua__>   hmm, it only works if I do send/receive pairs
| [Wednesday 12 May 2010] [01:40:48] <joshua__>   I can't get just one to send something to the other
| [Wednesday 12 May 2010] [01:42:04] <sustrik>    joshua__: presumably, that's because you close the sender app before it has chance to send the data
| [Wednesday 12 May 2010] [01:42:26] <joshua__>   ah, the sender doesn't block?
| [Wednesday 12 May 2010] [01:42:49] <sustrik>    no, it's async
| [Wednesday 12 May 2010] [01:42:57] <sustrik>    that's what MQ means
| [Wednesday 12 May 2010] [01:43:28] <joshua__>   :D
| [Wednesday 12 May 2010] [02:47:53] <sjampoo>    morning!
| [Wednesday 12 May 2010] [03:22:24] <sustrik>    morning!
| [Wednesday 12 May 2010] [04:00:12] <mike>   sustrik: ping
| [Wednesday 12 May 2010] [04:00:32] <sustrik>    pong
| [Wednesday 12 May 2010] [04:01:18] <mike8901>   hey - I'm working with joshua on a project - I know you guys talked a bit. Is it possible to block until all sends have completed?
| [Wednesday 12 May 2010] [04:01:41] <mike8901>   joshua discovered the hard way that zmq won't keep your program alive
| [Wednesday 12 May 2010] [04:04:25] <sustrik>    no, there's no way to do so -- it would result in deadlock if the peer in unavailable
| [Wednesday 12 May 2010] [04:04:43] <joshua__>   fun
| [Wednesday 12 May 2010] [04:04:48] <sustrik>    you have to send acknowledgement by hand
| [Wednesday 12 May 2010] [04:04:49] <mike8901>   so what is the recommended way to deal with the situation in which a client sends messages to a server, then exits?
| [Wednesday 12 May 2010] [04:05:02] <mike8901>   hm
| [Wednesday 12 May 2010] [04:05:05] <sustrik>    is it a request/reply scenario?
| [Wednesday 12 May 2010] [04:05:22] <mike8901>   yes, but the reply may not come from the same peer
| [Wednesday 12 May 2010] [04:05:29] <mike8901>   basically, we have a central server doling out work to slaves
| [Wednesday 12 May 2010] [04:05:38] <mike8901>   and the slaves can talk to each other and redistribute work if needed
| [Wednesday 12 May 2010] [04:05:59] <mike8901>   each piece of work has a unique ID attached to it, and a reply will come from *some* slave, but we don't know which
| [Wednesday 12 May 2010] [04:06:15] <sustrik>    that doesn't matter imo
| [Wednesday 12 May 2010] [04:06:20] <sustrik>    just wait for reply
| [Wednesday 12 May 2010] [04:06:27] <sustrik>    and everything will works as expected
| [Wednesday 12 May 2010] [04:07:16] <mike8901>   yeah, I actually think this is a non-issue
| [Wednesday 12 May 2010] [04:07:21] <sjampoo>    If you don't even care about a reply, you could use the callback on the message object and implement something that blocks your self.
| [Wednesday 12 May 2010] [04:08:24] <sustrik>    yes, but caution is needed as the callback is called from different thread
| [Wednesday 12 May 2010] [04:13:22] <mike8901>   does zmq have a more appropriate topology than zmq_p2p for doing a round-robin distribution scheme? we're ending up having to have a vector of locks to each socket, which seems a little wasteful.
| [Wednesday 12 May 2010] [04:14:53] <sustrik>    p2p does no distribution...
| [Wednesday 12 May 2010] [04:15:02] <sustrik>    use DOWNSTREAM
| [Wednesday 12 May 2010] [04:16:47] <mike8901>   ok, will look into that - thanks
| [Wednesday 12 May 2010] [04:17:09] <mike8901>   also, does zmq have a way to get a callback when data is available on a socket? we're wasting a lot of time polling every socket on a separate thread now...
| [Wednesday 12 May 2010] [04:20:38] <mike8901>   though that may be a function of us just "doing it wrong" by having many sockets, and polling them all in a nonblocking manner
| [Wednesday 12 May 2010] [04:22:52] <sjampoo>    You can use zmq_poll to poll them all at once and fire callbacks from there, no? Or are you trying to do something different? 
| [Wednesday 12 May 2010] [04:24:39] <mike8901>   only issue with zmq_poll is that a different thread could be accessing a given socket
| [Wednesday 12 May 2010] [04:25:58] <mike8901>   right now we use mutexes to prevent this, before checking with "recv" to see if data is available.
| [Wednesday 12 May 2010] [04:26:10] <mikko>  A MQ context is thread safe and may be shared among as many application threads as the application has requested using the app_threads parameter to zmq_init(), without any additional locking required on the part of the caller. Each MQ socket belonging to a particular context may only be used by the thread that created it using zmq_socket().
| [Wednesday 12 May 2010] [04:26:59] <sustrik>    mike8901: what exactly are you trying to achieve?
| [Wednesday 12 May 2010] [04:27:09] <sustrik>    you have a thread that owns 1 socket, right?
| [Wednesday 12 May 2010] [04:27:35] <sustrik>    you want to wait till there's message available in the socket, no?
| [Wednesday 12 May 2010] [04:28:43] <mike8901>   Currently (this may not be the best architecture) we have a setup thread which connects to all the clients using a zmq_p2p model, sticks each socket into a vector, then spawns off a thread to send events to other zmq sockets, as well as a thread to recieve events from zmq sockets.
| [Wednesday 12 May 2010] [04:29:17] <mike8901>   and (this may not be correct; we haven't gotten code running yet), we use a vector of mutexes to prevent access to each socket
| [Wednesday 12 May 2010] [04:29:51] <sustrik>    what do you want to do? load balance the messages among N sockets?
| [Wednesday 12 May 2010] [04:30:00] <mike8901>   yes, in a round-robin manner
| [Wednesday 12 May 2010] [04:30:12] <sustrik>    use DOWNSTREAM socket
| [Wednesday 12 May 2010] [04:30:17] <mike8901>   okay, I'll look into that
| [Wednesday 12 May 2010] [04:30:19] <sustrik>    you'll have a single socket
| [Wednesday 12 May 2010] [04:30:28] <sustrik>    it'll do all the hard work for you
| [Wednesday 12 May 2010] [04:30:34] <mike8901>   but can I still have another thread polling for recieving messages?
| [Wednesday 12 May 2010] [04:30:58] <sustrik>    yes, but there should be another socket there
| [Wednesday 12 May 2010] [04:31:05] <mike8901>   oh ok
| [Wednesday 12 May 2010] [04:31:06] <sustrik>    presumable UPSTREAM one
| [Wednesday 12 May 2010] [04:31:25] <sustrik>    that one merges messages from many sources
| [Wednesday 12 May 2010] [04:32:47] <mike8901>   I'm a bit tired to look at that now, but I'll read through http://www.zeromq.org/tutorials:butterfly tomorrow. Thanks for your help!
| [Wednesday 12 May 2010] [04:32:59] <sustrik>    np
| [Wednesday 12 May 2010] [04:47:47] <mike8901>   oh - one last quick question before I go off to bed: how do you get the list of peers to ZMQ_UPSTREAM? http://github.com/sustrik/jbutterfly/blob/master/gonzo/Component.java specifies an "inp-interface," but I'm not sure what that looks like.
| [Wednesday 12 May 2010] [04:48:36] <sustrik>    you don't have a list of peers
| [Wednesday 12 May 2010] [04:48:45] <sustrik>    0mq should manage it for you
| [Wednesday 12 May 2010] [04:49:03] <mike8901>   er, I guess the question is more appropriate for ZMQ_DOWNSTREAM
| [Wednesday 12 May 2010] [04:49:14] <sustrik>    same applies to any socket type
| [Wednesday 12 May 2010] [04:49:20] <mike8901>   now, I'm really confused ;)
| [Wednesday 12 May 2010] [04:49:27] <sustrik>    the peers are managed by the library
| [Wednesday 12 May 2010] [04:49:36] <mike8901>   how is it done though? using some multicast?
| [Wednesday 12 May 2010] [04:49:37] <sustrik>    it's transparant to the user
| [Wednesday 12 May 2010] [04:49:59] <sustrik>    you can opt for multicast but it's not necessary
| [Wednesday 12 May 2010] [04:50:06] <mike8901>   how do the peers find each other?
| [Wednesday 12 May 2010] [04:50:13] <mike8901>   or rather
| [Wednesday 12 May 2010] [04:50:14] <sustrik>    via address
| [Wednesday 12 May 2010] [04:50:20] <mike8901>   but how do you specify the address?
| [Wednesday 12 May 2010] [04:50:28] <mike8901>   *addresses
| [Wednesday 12 May 2010] [04:50:38] <mike8901>   the connect function takes in a single address
| [Wednesday 12 May 2010] [04:50:54] <sustrik>    yes, the connecting side speaks to a single peer
| [Wednesday 12 May 2010] [04:51:03] <sustrik>    the binding side speaks to multiple peers
| [Wednesday 12 May 2010] [04:51:30] <mike8901>   ah, that may be an issue then....
| [Wednesday 12 May 2010] [04:51:50] <mike8901>   our "root" node is going to be transient, and needs to be able to connect to the slaves at will
| [Wednesday 12 May 2010] [04:52:10] <sustrik>    you can connect multiple time is needed"
| [Wednesday 12 May 2010] [04:52:16] <sustrik>    s.connect (A);
| [Wednesday 12 May 2010] [04:52:18] <sustrik>    s.connect (B)
| [Wednesday 12 May 2010] [04:52:20] <sustrik>    etc.
| [Wednesday 12 May 2010] [04:52:23] <mike8901>   oh ok
| [Wednesday 12 May 2010] [04:52:45] <mike8901>   so the root can use a downstream socket, and just call connect for each addr
| [Wednesday 12 May 2010] [04:53:08] <mike8901>   is there an easy way to establish a corresponding upstream socket, without bothering to pass the server's IP to the clients?
| [Wednesday 12 May 2010] [04:53:57] <sustrik>    server? upstream? what applications there are?
| [Wednesday 12 May 2010] [04:54:01] <mike8901>   okay, sorry
| [Wednesday 12 May 2010] [04:54:05] <mike8901>   let me explain my application in detail
| [Wednesday 12 May 2010] [04:54:09] <mikko>  maybe dns?
| [Wednesday 12 May 2010] [04:54:23] <mike8901>   we're implementing a distributed compiler(on top of clang)
| [Wednesday 12 May 2010] [04:54:42] <sustrik>    mikko: possibly, but let's first listen to the use case
| [Wednesday 12 May 2010] [04:54:56] <mike8901>   the "master" is spawned on demand on the user's computer
| [Wednesday 12 May 2010] [04:55:10] <mike8901>   the "slaves" will always be listening for work to process(i.e. files to compile to object code)
| [Wednesday 12 May 2010] [04:55:30] <mike8901>   the "master" is not guaranteed to always be running; it is only up for the duration of the compile
| [Wednesday 12 May 2010] [04:55:42] <sustrik>    how many masters there may be?
| [Wednesday 12 May 2010] [04:55:48] <mike8901>   for now, just 1
| [Wednesday 12 May 2010] [04:55:59] <mike8901>   but the master is transient
| [Wednesday 12 May 2010] [04:56:05] <sustrik>    so 1 client, 1 master, N workers
| [Wednesday 12 May 2010] [04:56:12] <mike8901>   yes
| [Wednesday 12 May 2010] [04:56:16] <mike8901>   but the client/master are transient
| [Wednesday 12 May 2010] [04:56:33] <mike8901>   well, the client will stay around until work it needs is done
| [Wednesday 12 May 2010] [04:56:50] <sustrik>    how does the interaction pattern looks like?
| [Wednesday 12 May 2010] [04:56:57] <sustrik>    client sends a request
| [Wednesday 12 May 2010] [04:57:07] <sustrik>    master dispatches it to one worker
| [Wednesday 12 May 2010] [04:57:12] <sustrik>    worker processes it
| [Wednesday 12 May 2010] [04:57:17] <sustrik>    sends reply to the master
| [Wednesday 12 May 2010] [04:57:24] <sustrik>    master forwards the reply to client
| [Wednesday 12 May 2010] [04:57:27] <sustrik>    is that it?
| [Wednesday 12 May 2010] [04:57:29] <mike8901>   yes
| [Wednesday 12 May 2010] [04:57:33] <mike8901>   well
| [Wednesday 12 May 2010] [04:57:58] <mike8901>   there's not really any client-master interaction now..
| [Wednesday 12 May 2010] [04:58:17] <sustrik>    ok, so let's drop the clinet from the scheme
| [Wednesday 12 May 2010] [04:58:32] <mike8901>   (there is technically, but we use UNIX sockets for that now)
| [Wednesday 12 May 2010] [04:58:33] <sustrik>    master sends request to a worker
| [Wednesday 12 May 2010] [04:58:40] <sustrik>    worker replies back to the master
| [Wednesday 12 May 2010] [04:58:42] <sustrik>    right?
| [Wednesday 12 May 2010] [04:58:43] <mike8901>   yep
| [Wednesday 12 May 2010] [04:58:57] <mike8901>   well
| [Wednesday 12 May 2010] [04:59:06] <mike8901>   workers are not necesssarily the same, but yes
| [Wednesday 12 May 2010] [04:59:07] <mike8901>   that's the idea
| [Wednesday 12 May 2010] [04:59:18] <sustrik>    thay are not the same?
| [Wednesday 12 May 2010] [04:59:29] <sustrik>    what's the difference?
| [Wednesday 12 May 2010] [04:59:32] <mike8901>   well, we're implementing work queue stealing, so if one worker runs out of work, it can ask another for work.
| [Wednesday 12 May 2010] [04:59:56] <sustrik>    hm, what is that good for?
| [Wednesday 12 May 2010] [04:59:59] <mike8901>   so the master may not recieve the response from the worker it sent the request to
| [Wednesday 12 May 2010] [05:00:10] <sustrik>    why not let the master load balance the work?
| [Wednesday 12 May 2010] [05:00:31] <mike8901>   the master is going to be overloaded preprocessing(ahmdahl's law) - we want the slaves to load balance amongst themselves
| [Wednesday 12 May 2010] [05:02:11] <sustrik>    the master has to send the requests anyway, no?
| [Wednesday 12 May 2010] [05:02:17] <mike8901>   yes
| [Wednesday 12 May 2010] [05:02:30] <mike8901>   the requests are going to be of varying size though
| [Wednesday 12 May 2010] [05:02:38] <mike8901>   as with any project, you'll have really small source files and really large ones
| [Wednesday 12 May 2010] [05:03:09] <mike8901>   it's inevitable that some slaves will run out of work, and we want the slaves to be able to steal work off each other's queues
| [Wednesday 12 May 2010] [05:03:44] <sustrik>    so what you want to avoid queueing, right?
| [Wednesday 12 May 2010] [05:04:00] <sustrik>    at most one request dispatched to the worker at time
| [Wednesday 12 May 2010] [05:04:05] <mike8901>   no
| [Wednesday 12 May 2010] [05:04:12] <mike8901>   we want the slaves to maintain a queue
| [Wednesday 12 May 2010] [05:04:24] <mike8901>   so that if another slave asks slave A for work, it can provide it to slave B
| [Wednesday 12 May 2010] [05:04:59] <sustrik>    yes, i understand, but what's the point?
| [Wednesday 12 May 2010] [05:05:04] <mike8901>   to load balance
| [Wednesday 12 May 2010] [05:05:21] <sustrik>    why not load-balance upfront?
| [Wednesday 12 May 2010] [05:05:33] <sustrik>    rather than messing with queues and reassigning the work?
| [Wednesday 12 May 2010] [05:05:39] <mike8901>   it's impossible to exactly load balance up front... each request could take an arbitrary amount of time
| [Wednesday 12 May 2010] [05:06:00] <sustrik>    say you send at most one request to each worker at time
| [Wednesday 12 May 2010] [05:06:12] <sustrik>    when it responds you send another request
| [Wednesday 12 May 2010] [05:06:14] <sustrik>    etc.
| [Wednesday 12 May 2010] [05:06:21] <sustrik>    wouldn't that solve the problem?
| [Wednesday 12 May 2010] [05:06:23] <mike8901>   right, that takes up overhead on the master
| [Wednesday 12 May 2010] [05:06:45] <sustrik>    but the master has to send the requests anyway
| [Wednesday 12 May 2010] [05:06:53] <sustrik>    what overhead do you have in mind?
| [Wednesday 12 May 2010] [05:07:01] <mike8901>   for one, memory overhead
| [Wednesday 12 May 2010] [05:07:08] <sustrik>    akc
| [Wednesday 12 May 2010] [05:07:16] <mike8901>   queueing the requests will take away from the preprocessor's cache
| [Wednesday 12 May 2010] [05:07:37] <sustrik>    ok, i see
| [Wednesday 12 May 2010] [05:07:56] <mike8901>   basically, we want as little burdon as possible to be on the master
| [Wednesday 12 May 2010] [05:08:03] <sustrik>    what about having a separate load-balancer node then?
| [Wednesday 12 May 2010] [05:08:39] <mike8901>   that sounds like it would add a whole other layer of inefficency- now the source has to travel *twice* over the network
| [Wednesday 12 May 2010] [05:08:57] <mike8901>   and you have half the effective bandwidth
| [Wednesday 12 May 2010] [05:09:02] <mike8901>   or maybe even less
| [Wednesday 12 May 2010] [05:10:40] <mike8901>   anyway, sorry to cut this discussion short(really enjoyed talking with you), but it's 4:10am and I'm exhausted. I'd love to continue this some other time(before Monday at 9am though ;) ).
| [Wednesday 12 May 2010] [05:10:48] <sustrik>    sure
| [Wednesday 12 May 2010] [05:10:55] <sustrik>    good night!
| [Wednesday 12 May 2010] [05:11:01] <mike8901>   (Monday at 9am is the deadline for this project - yes, we're screwed) ;)
| [Wednesday 12 May 2010] [05:11:03] <mike8901>   night!
| [Wednesday 12 May 2010] [05:11:14] <sjampoo>    heh
| [Wednesday 12 May 2010] [05:11:26] <sjampoo>    goodnight and goodluck :)
| [Wednesday 12 May 2010] [05:32:33] <sjampoo>    sustrik: i am getting "Assertion failed: fetched (rep.cpp:265)" with a REQ/REP socket on messages larger than about 8k
| [Wednesday 12 May 2010] [05:32:36] <sjampoo>    what could be causing this? 
| [Wednesday 12 May 2010] [05:32:48] <sustrik>    let me see
| [Wednesday 12 May 2010] [05:33:08] <sjampoo>    Seems to be something that didn't happen on 2.0.6
| [Wednesday 12 May 2010] [05:33:44] <sustrik>    sjampoo: what peer socket types is connected to your REP socket?
| [Wednesday 12 May 2010] [05:33:58] <sjampoo>    REQ
| [Wednesday 12 May 2010] [05:34:20] <sustrik>    then it's a bug
| [Wednesday 12 May 2010] [05:34:27] <sustrik>    can you report it please?
| [Wednesday 12 May 2010] [05:34:37] <sustrik>    test program would help
| [Wednesday 12 May 2010] [05:34:42] <sjampoo>    i cannot really reproduce it with C code ;/
| [Wednesday 12 May 2010] [05:35:08] <sustrik>    hm, which binding it appears with?
| [Wednesday 12 May 2010] [05:35:18] <sjampoo>    PyZMQ
| [Wednesday 12 May 2010] [05:35:30] <sjampoo>    and local_lat / remote_lat
| [Wednesday 12 May 2010] [05:35:45] <sjampoo>    (the perf benchmark)
| [Wednesday 12 May 2010] [05:36:35] <sustrik>    i would then suggest reporting it as problem with pyzmq
| [Wednesday 12 May 2010] [05:37:04] <sjampoo>    what could be causing it? 
| [Wednesday 12 May 2010] [05:37:05] <sustrik>    brian will presumably pass the issue upstream with more details attached
| [Wednesday 12 May 2010] [05:37:43] <sustrik>    dunno, look's like the message processed has no body
| [Wednesday 12 May 2010] [05:38:15] <sjampoo>    Ok
| [Wednesday 12 May 2010] [06:50:55] <CIA-15> zeromq2: 03Brett Cameron 07master * r714a8d5 10/ (5 files): fixes for OpenVMS - http://bit.ly/9IYypp
| [Wednesday 12 May 2010] [06:50:55] <CIA-15> zeromq2: 03Martin Sustrik 07master * r8e5ac10 10/ (7 files in 6 dirs): Merge branch 'master' of git@github.com:sustrik/zeromq2 - http://bit.ly/bKeYae
| [Wednesday 12 May 2010] [08:12:43] <sjampoo>    The above issue seems to be a by product of this commit: http://github.com/sustrik/zeromq2/commit/ad6fa9d0d4f1cf29ce63998d7efe337b1a784ef6
| [Wednesday 12 May 2010] [08:14:50] <sustrik>    sjampoo: yes, that's when the functionality was introduced
| [Wednesday 12 May 2010] [10:21:01] <mato>   sustrik: are you there?
| [Wednesday 12 May 2010] [10:21:17] <sustrik>    mato: hi
| [Wednesday 12 May 2010] [10:21:29] <mato>   sustrik: I want to revert those atomics changes you committed
| [Wednesday 12 May 2010] [10:21:35] <sustrik>    yes, sure
| [Wednesday 12 May 2010] [10:22:03] <mato>   while I'm at it, can I remove the native SPARC ops? They are #ifdef-ed out in any case
| [Wednesday 12 May 2010] [10:22:15] <mato>   also, in the current git atomic_bitmap is gone, this is correct?
| [Wednesday 12 May 2010] [10:22:20] <sustrik>    ack
| [Wednesday 12 May 2010] [10:22:33] <mato>   so we have just atomic_counter and atomic_ptr, right?
| [Wednesday 12 May 2010] [10:22:40] <sustrik>    SPARC: sure, go on, it's commented out for 2 years now or so :)
| [Wednesday 12 May 2010] [10:22:43] <sustrik>    right
| [Wednesday 12 May 2010] [10:23:04] <mato>   I'm surprised you committed those changes without asking for review :-(
| [Wednesday 12 May 2010] [10:23:19] <mato>   anyway, no harm done, I'll put back the old code
| [Wednesday 12 May 2010] [10:25:13] <sustrik>    no way of check everyting, i'm committing in optimistic fashion
| [Wednesday 12 May 2010] [10:25:20] <sjampoo>    sustrik: that commit introduces multihop, but i am not using that functionality as i have two req/rep sockets connected directly. Anyway i can reproduce it right now, i probably had too many versions lying around. I'll make an issue
| [Wednesday 12 May 2010] [10:25:46] <sustrik>    sjampoo: yes, please
| [Wednesday 12 May 2010] [10:25:48] <mato>   sustrik: sure, but you know I spent time on that code, so you could have waited till I got back from holiday 
| [Wednesday 12 May 2010] [10:26:49] <sustrik>    mato: do you want to become a maintainer for particular subset of files?
| [Wednesday 12 May 2010] [10:26:53] <sustrik>    say the atomics?
| [Wednesday 12 May 2010] [10:27:29] <mato>   I kind of assumed I was, sice I spent time on it
| [Wednesday 12 May 2010] [10:27:46] <mato>   same for doc/*
| [Wednesday 12 May 2010] [10:27:58] <sustrik>    ok, let's make this more formal so that obvious who's responsible for what
| [Wednesday 12 May 2010] [10:28:09] <mato>   if you like
| [Wednesday 12 May 2010] [10:28:29] <sustrik>    definitely
| [Wednesday 12 May 2010] [10:35:11] <sustrik>    mato: ok, i've written down the list of components in the project
| [Wednesday 12 May 2010] [10:35:32] <sustrik>    what's the common way of listing maintainers?
| [Wednesday 12 May 2010] [10:35:48] <mato>   MAINTAINERS file in source tree
| [Wednesday 12 May 2010] [10:35:53] <sustrik>    in root?
| [Wednesday 12 May 2010] [10:35:56] <mato>   yeah
| [Wednesday 12 May 2010] [10:35:59] <sustrik>    ok
| [Wednesday 12 May 2010] [10:36:08] <mato>   with Component, Name (of maintainer), Email address
| [Wednesday 12 May 2010] [10:36:12] <mato>   or some format like that
| [Wednesday 12 May 2010] [10:36:13] <sustrik>    ack
| [Wednesday 12 May 2010] [10:36:33] <sustrik>    what about the autotools build
| [Wednesday 12 May 2010] [10:36:38] <sustrik>    would you like to maintain that?
| [Wednesday 12 May 2010] [10:37:01] <mato>   not really, but you can add me in there as a point of contact
| [Wednesday 12 May 2010] [10:37:20] <sustrik>    ok, so it's autotools, docs & atomics
| [Wednesday 12 May 2010] [10:37:22] <sustrik>    ok?
| [Wednesday 12 May 2010] [10:37:31] <mato>   yeah
| [Wednesday 12 May 2010] [10:44:16] <mato>   you should of course add in yourself (with an address of the mailing list) as the maintainer for "everything else"
| [Wednesday 12 May 2010] [10:46:19] <CIA-15> zeromq2: 03Martin Sustrik 07master * r127cb89 10/ MAINTAINERS : MAINTAINERS file added - http://bit.ly/aEumLZ
| [Wednesday 12 May 2010] [10:46:46] <sustrik>    done
| [Wednesday 12 May 2010] [10:50:07] <CIA-15> zeromq2: 03Martin Lucina 07master * r52ef3f3 10/ (src/atomic_counter.hpp src/atomic_ptr.hpp): 
| [Wednesday 12 May 2010] [10:50:07] <CIA-15> zeromq2: Revert commit 7cb076e, atomic ops cleanup
| [Wednesday 12 May 2010] [10:50:07] <CIA-15> zeromq2: Reverted to using atomic.h on NetBSD
| [Wednesday 12 May 2010] [10:50:07] <CIA-15> zeromq2: Removed GNU builtins (see http://lists.zeromq.org/pipermail/zeromq-dev/2010-May/003485.html)
| [Wednesday 12 May 2010] [10:50:07] <CIA-15> zeromq2: Removed SPARC native atomic ops as they are untested and have been commented out for years
| [Wednesday 12 May 2010] [10:50:08] <CIA-15> zeromq2: Add "memory" to asm clobber for X86 atomic_counter::sub() - http://bit.ly/buhvIA
| [Wednesday 12 May 2010] [10:50:09] <CIA-15> zeromq2: 03Martin Lucina 07master * rf6c1c97 10/ (6 files in 2 dirs): Merge branch 'master' of github.com:sustrik/zeromq2 - http://bit.ly/cNQN1Z
| [Thursday 13 May 2010] [06:41:53] <CIA-15>  zeromq2: 03Steven McCoy 07master * r56262d7 10/ src/pgm_socket.cpp : some more sanity checks in pgm_socket - http://bit.ly/9iFGS0
| [Thursday 13 May 2010] [06:41:54] <CIA-15>  zeromq2: 03Martin Sustrik 07master * rff9d398 10/ (src/atomic_counter.hpp src/atomic_ptr.hpp): Merge branch 'master' of git@github.com:sustrik/zeromq2 - http://bit.ly/aOkSQz
| [Thursday 13 May 2010] [06:44:12] <CIA-15>  zeromq2: 03Steven McCoy 07master * r6705a3d 10/ src/pgm_socket.cpp : some more sanity checks in pgm_socket - http://bit.ly/czRKrS
| [Thursday 13 May 2010] [06:45:57] <Kronuz>  Hello
| [Thursday 13 May 2010] [06:47:03] <Kronuz>  I'm investigating about queues, and something I read made me think twice about 0mq... persistence
| [Thursday 13 May 2010] [06:47:30] <Kronuz>  does it have a way yet to make messages survive reboots?
| [Thursday 13 May 2010] [06:48:13] <Kronuz>  (supposedly RabbitMQ does, I'm between the two systems)
| [Thursday 13 May 2010] [06:49:05] <Kronuz>  ...but if it doesn't, what's the position about the subject, or why doesn't it?
| [Thursday 13 May 2010] [06:55:46] <sustrik> it doesn't have it, rabbitmq does
| [Friday 14 May 2010] [05:32:09] <dodobas>   yello
| [Friday 14 May 2010] [05:32:22] <dodobas>   where can i find refernce for config files
| [Friday 14 May 2010] [05:33:19] <dodobas>   im trying to run zmq_queue
| [Friday 14 May 2010] [05:38:49] <dodobas>   can 0mq bu used like amqp broker, similar to rabbitmq
| [Friday 14 May 2010] [05:39:12] <guido_g>   not really, because there is no broker
| [Friday 14 May 2010] [05:42:41] <dodobas>   so, there is no amqp support?
| [Friday 14 May 2010] [05:43:05] <guido_g>   no
| [Friday 14 May 2010] [05:43:37] <dodobas>   im trying to find an replacement for rabbitmq, which is interfaced through py-amqp
| [Friday 14 May 2010] [05:44:15] <guido_g>   then 0mq is not an option
| [Friday 14 May 2010] [05:44:22] <dodobas>   and 0mq is refernced as an amqp message broker implementation 
| [Friday 14 May 2010] [05:44:31] <dodobas>   too bad
| [Friday 14 May 2010] [05:44:33] <guido_g>   but if you're willing to leave amqp... :)
| [Friday 14 May 2010] [05:44:59] <guido_g>   0mq is not related to amqp
| [Friday 14 May 2010] [05:45:07] <guido_g>   at least technically
| [Friday 14 May 2010] [05:45:20] <dodobas>   sorry, ill be back in an hour
| [Friday 14 May 2010] [05:45:22] <guido_g>   the refernce in question is wrong then
| [Friday 14 May 2010] [06:37:41] <dodobas>   guido_g: for instance http://packages.python.org/qam/introduction.html
| [Friday 14 May 2010] [06:49:52] <guido_g>   so? it's plain wrong
| [Friday 14 May 2010] [06:52:08] <sjampoo>   0MQ had some AMQP support in earlier versions but this has been dropped and the project has moved on
| [Friday 14 May 2010] [06:53:32] <sjampoo>   read some more info here: http://lists.openamq.org/pipermail/openamq-dev/2010-March/001598.html
| [Friday 14 May 2010] [07:35:04] <dodobas>   guido_g: i now understand :D
| [Friday 14 May 2010] [07:35:23] <guido_g>   fine
| [Friday 14 May 2010] [07:36:08] <dodobas>   but, if every article refrences 0mq, as AMQP, its hard not to be wrong :D
| [Friday 14 May 2010] [07:37:34] <guido_g>   huh? every article?
| [Friday 14 May 2010] [07:37:49] <dodobas>   'almost'
| [Friday 14 May 2010] [07:39:53] <dodobas>   i've found this short message http://is.gd/c8EF6
| [Friday 14 May 2010] [07:40:31] <dodobas>   it doesn't really matter, thanks guido_g for clalification
| [Friday 14 May 2010] [07:40:35] <dodobas>   *clarification
| [Friday 14 May 2010] [07:54:43] <sustrik>   the AMQP issue is explained in FAQs
| [Friday 14 May 2010] [07:55:00] <sustrik>   not sure what else can be done...
| [Friday 14 May 2010] [10:29:42] <cremes>    sustrik: any plans for a flush command on sockets to remove all queued messages?
| [Friday 14 May 2010] [10:30:58] <cremes>    use case: an application-level request has timed out, so any late response needs to be discarded
| [Friday 14 May 2010] [10:57:43] <mike8901>  Has anyone used a zeromq app with mpirun?
| [Friday 14 May 2010] [10:58:59] <mike8901>  i.e. using an MPI cluster to bootstrap into zeromq
| [Friday 14 May 2010] [11:08:29] <sustrik>   cremes: yes, there's a plan for adding timeouts for req/rep scenario
| [Friday 14 May 2010] [11:08:51] <sustrik>   mike8901: i am not aware of it, but you may ask on the mailing list
| [Friday 14 May 2010] [11:10:02] <cremes>    how about a flush function for sockets?
| [Friday 14 May 2010] [11:14:02] <sustrik>   cremes: what's the connection between flush and timeouts?
| [Friday 14 May 2010] [11:14:39] <cremes>    i have a use case where i am using req/rep sockets as a command channel and pub/sub
| [Friday 14 May 2010] [11:14:43] <cremes>    sockets for data transfer
| [Friday 14 May 2010] [11:15:16] <cremes>    if the req/rep times out, i need to flush the sub socket if the data shows up late
| [Friday 14 May 2010] [11:15:29] <cremes>    make sense?
| [Friday 14 May 2010] [11:15:43] <sustrik>   flush = drop all the outstanding messages?
| [Friday 14 May 2010] [11:15:51] <cremes>    yes
| [Friday 14 May 2010] [11:16:33] <cremes>    since these sockets represent queues, shouldn't there be a way to flush them out?
| [Friday 14 May 2010] [11:17:07] <sustrik>   hm, you can read and drop the messages, no?
| [Friday 14 May 2010] [11:18:09] <cremes>    yes i can, but isn't the lib doing work behind the scenes to populate the zmq_msg_t? an explicit flush in the lib could avoid that, yes?
| [Friday 14 May 2010] [11:18:39] <sustrik>   no, the whole thing is zero-copy
| [Friday 14 May 2010] [11:18:53] <sustrik>   meaning that data are read to zmq_msg_t as they arrive from the network
| [Friday 14 May 2010] [11:19:01] <cremes>    oh, i see
| [Friday 14 May 2010] [11:19:16] <sustrik>   when you recv, the actual work is copying some 40 bytes or so
| [Friday 14 May 2010] [11:19:21] <sustrik>   almost nothing
| [Friday 14 May 2010] [11:19:26] <cremes>    then i can create my own flush at close to zero processing cost
| [Friday 14 May 2010] [11:19:36] <cremes>    never mind then!
| [Friday 14 May 2010] [11:19:43] <sustrik>   yes, even if it where implemented inside 0mq
| [Friday 14 May 2010] [11:19:50] <sustrik>   it would have to do the same thing
| [Friday 14 May 2010] [11:20:12] <sustrik>   (read & drop messages)
| [Friday 14 May 2010] [15:10:34] <CIA-15>    pyzmq: 03Brian Granger 07master * r7d4c37b 10/ (6 files in 2 dirs): Fixing various bugs and updating to latest 0MQ master. - http://bit.ly/b7nV9i
| [Friday 14 May 2010] [15:51:23] <OldNugget> meta-a /input jump_smart
| [Friday 14 May 2010] [15:52:11] <OldNugget> oops... sorry
| [Friday 14 May 2010] [18:14:24] <CIA-15>    pyzmq: 03Brian Granger 07testing * rc4bdbab 10/ (11 files in 4 dirs): Trying to get out of jail. - http://bit.ly/bQ3QjY
| [Friday 14 May 2010] [18:19:39] <CIA-15>    pyzmq: 03Brian Granger 07testing * r6441176 10/ zmq/tests/test_context.py : Finish cleaning up after merge. - http://bit.ly/bs4HBR
| [Friday 14 May 2010] [18:20:07] <CIA-15>    pyzmq: 03Brian Granger 07master * rc4bdbab 10/ (11 files in 4 dirs): Trying to get out of jail. - http://bit.ly/bQ3QjY
| [Friday 14 May 2010] [18:20:08] <CIA-15>    pyzmq: 03Brian Granger 07master * r6441176 10/ zmq/tests/test_context.py : Finish cleaning up after merge. - http://bit.ly/bs4HBR
| [Saturday 15 May 2010] [05:04:34] <fishinz> hey
| [Saturday 15 May 2010] [05:04:46] <fishinz> I'm a little confused about zmq::context_t
| [Saturday 15 May 2010] [05:04:52] <fishinz> what's that all about?
| [Saturday 15 May 2010] [05:05:04] <fishinz> (particularly, i/o threads)
| [Saturday 15 May 2010] [05:06:32] <fishinz> and affinity
| [Saturday 15 May 2010] [05:32:44] <sustrik> fishinz: there's a thread pool in the background
| [Saturday 15 May 2010] [05:33:03] <sustrik> to handle network I/O
| [Saturday 15 May 2010] [05:38:53] <fishinz> ah
| [Saturday 15 May 2010] [05:39:11] <fishinz> hey, ZMQ_UPSTREAM and ZMQ_DOWNSTREAM
| [Saturday 15 May 2010] [05:39:28] <fishinz> do sockets for those have to be in hte same thread?
| [Saturday 15 May 2010] [05:59:25] <fishinz> nvm, I had context set improperly
| [Saturday 15 May 2010] [06:00:08] <sustrik> each socket is owned by exactly one thread
| [Saturday 15 May 2010] [06:00:27] <sustrik> but any two sockets can be owned by any two threads
| [Saturday 15 May 2010] [06:00:31] <sustrik> no limitrations there
| [Saturday 15 May 2010] [06:00:37] <sustrik> limitations*
| [Saturday 15 May 2010] [06:03:00] <fishinz> yeah, I just had the context set to 1 app thread
| [Saturday 15 May 2010] [06:03:00] <fishinz> silly mistake
| [Saturday 15 May 2010] [06:07:37] <sustrik> ok
| [Saturday 15 May 2010] [06:38:09] <CIA-15>  zeromq2: 03Jon Dyte 07master * rf40ce4e 10/ (Makefile.am configure.in zmqd/Makefile.am zmqd/zmqd.cpp): single 0MQ daemon (zmqd) - initial version - http://bit.ly/9B6UHe
| [Saturday 15 May 2010] [13:29:20]    * LowRider Brand New!Notebooks and LCD TVs.Discounts up to 30%. The newest electronics only http://www.elplace.com/
| [Saturday 15 May 2010] [18:28:34]    * Sergeo22 Discounts!! Our Special Limited Time Offers Up To May,22!!!New BranD!! Notebooks,Plasma and LCD TV's.Buy your electronic needs at our unique prices. Laptop Sony VAIO VGN-FW590FFD-575,57$!!!Apple MacBook Air MC234LL/A-695,27$!!! http://www.elplace.com/
| [Sunday 16 May 2010] [02:36:20] <mesamino>  hi
| [Sunday 16 May 2010] [02:36:46] <mesamino>  I'm having trouble getting UPSTREAM and DOWNSTREAM processes to communicate
| [Sunday 16 May 2010] [02:38:22] <mesamino>  a thread with a downstream socket should connect to a socket that's upstream?
| [Sunday 16 May 2010] [02:38:41] <mesamino>  while a thread with an upstream socket should bind the socket?
| [Sunday 16 May 2010] [02:39:53] <guido_g>   yes, see http://www.zeromq.org/docs:cookbook#toc4 for source
| [Sunday 16 May 2010] [02:40:54] <mesamino>  zmq:context_t, should this be on heap? or is it okay to keep it on the stack?
| [Sunday 16 May 2010] [02:41:28] <guido_g>   depends on your application
| [Sunday 16 May 2010] [02:49:00] <mesamino>  that example...
| [Sunday 16 May 2010] [02:49:25] <mesamino>  receive_replies.cpp binds inp_socket, connects to out_socket
| [Sunday 16 May 2010] [02:50:18] <mesamino>  send_requests.cpp binds both
| [Sunday 16 May 2010] [02:52:51] <mesamino>  why does it do that?
| [Sunday 16 May 2010] [02:52:51] <mesamino>  does that not cause an error
| [Sunday 16 May 2010] [02:52:51] <mesamino>  ?
| [Sunday 16 May 2010] [02:53:10] <guido_g>   and component connects to both... now i'm puzzled
| [Sunday 16 May 2010] [02:53:52] <guido_g>   no idea, i'm myself trying to lern the mq way
| [Sunday 16 May 2010] [02:58:25] <mesamino>  I have a thread that creates an upstream socket, binds it and waits for a message
| [Sunday 16 May 2010] [02:58:49] <mesamino>  another program has a thread that creates a downstream socket, connects to the upstream socket
| [Sunday 16 May 2010] [02:58:55] <mesamino>  and then sends a message
| [Sunday 16 May 2010] [02:59:11] <mesamino>  and the first thread never gets that message
| [Sunday 16 May 2010] [02:59:26] <guido_g>   try th reverse the process
| [Sunday 16 May 2010] [02:59:35] <guido_g>   *to
| [Sunday 16 May 2010] [03:00:05] <mesamino>  connect to the socket before creating it?
| [Sunday 16 May 2010] [03:00:25] <mesamino>  errr
| [Sunday 16 May 2010] [03:00:25] <guido_g>   *sigh*
| [Sunday 16 May 2010] [03:00:28] <mesamino>  binding it
| [Sunday 16 May 2010] [03:01:03] <guido_g>   no, create donwstram socket, bind it
| [Sunday 16 May 2010] [03:01:19] <guido_g>   create upstream and connect to downstream
| [Sunday 16 May 2010] [03:01:28] <mesamino>  ah, ok
| [Sunday 16 May 2010] [03:01:31] <guido_g>   i think this is the way it should work
| [Sunday 16 May 2010] [03:11:42] <mesamino>  :(
| [Sunday 16 May 2010] [03:11:45] <mesamino>  no luck
| [Sunday 16 May 2010] [03:12:11] <guido_g>   sorry, w/o seeing the code it's hard to tell what's wrong
| [Sunday 16 May 2010] [03:12:48] <mesamino>  yeah, the code's just messy, I'm working on getting a simpler version up
| [Sunday 16 May 2010] [03:35:43] <mesamino>  hold on
| [Sunday 16 May 2010] [03:35:55] <mesamino>  perhaps this is what's wrong
| [Sunday 16 May 2010] [03:36:08] <mesamino>  I need one of those component intermediaries
| [Sunday 16 May 2010] [03:36:57] <mesamino>  do receive_replies.cpp and send_requests.cpp interact through component.cpp?
| [Sunday 16 May 2010] [03:37:09] <guido_g>   yes
| [Sunday 16 May 2010] [03:37:42] <guido_g>   the flow is: send -> omponent -> [more components ->] receive
| [Sunday 16 May 2010] [07:09:15] <pennysworth>   hello
| [Sunday 16 May 2010] [07:09:49] <pennysworth>   can one bind a remote socket with zeromq, or should you only connect remotely?
| [Sunday 16 May 2010] [13:17:00] <CIA-15>    pyzmq: 03Brian Granger 07master * raf88bf5 10/ (11 files in 4 dirs): Updating examples to new APIs. - http://bit.ly/9paeDK
| [Sunday 16 May 2010] [14:28:02] <versificateur> hello everyone
| [Sunday 16 May 2010] [14:42:11] <CIA-15>    pyzmq: 03Brian Granger 07master * r75f61fa 10/ (examples/kernel/kernel.py examples/kernel/session.py): Updated kernel example to new APIs. - http://bit.ly/aknf4N
| [Sunday 16 May 2010] [15:52:50] <versificateur> hello
| [Sunday 16 May 2010] [16:07:31] <versificateur> hello
| [Sunday 16 May 2010] [17:08:23] <CIA-15>    pyzmq: 03Brian Granger 07nocopy * rbe0d6c8 10/ (perf/local_lat.py perf/remote_lat.py zmq/_zmq.c zmq/_zmq.pyx): New basic version of non-copying send using just strings. - http://bit.ly/96s6V2
| [Monday 17 May 2010] [03:24:40] <mike8901>  what's the prefered way to typeset zeromq in LaTex? :) \varnothing?
| [Monday 17 May 2010] [03:38:44] <sustrik>   :)
| [Monday 17 May 2010] [03:39:04] <sustrik>   i personally prefer \varnothing
| [Monday 17 May 2010] [03:39:14] <sustrik>   others may prefer 0MQ or ZeroMQ
| [Monday 17 May 2010] [03:45:27] <foob>  hey
| [Monday 17 May 2010] [03:45:36] <foob>  is there a zeromq latex macro?
| [Monday 17 May 2010] [04:10:30] <sustrik>   foob: what exactly do you mean?
| [Monday 17 May 2010] [04:26:18] <mike8901>  joshua, was just talking about this with sustrik :)
| [Monday 17 May 2010] [04:26:25] <mike8901>  \varnothing is the way to go
| [Monday 17 May 2010] [09:42:36] <cremes>    sustrik: question on cppbutterfly example regarding bind versus connect
| [Monday 17 May 2010] [09:43:12] <cremes>    why does the send_requests program bind to a DOWNSTREAM socket? i thought transmission implied a "connect"
| [Monday 17 May 2010] [09:45:21] <cremes>    similar question for the component program; it connects to an UPSTREAM socket though it only receives data
| [Monday 17 May 2010] [09:45:29] <cremes>    i thought reception implied "bind"
| [Monday 17 May 2010] [09:45:42] <cremes>    ping me if you get a chance
| [Monday 17 May 2010] [10:26:50] <sustrik>   cremes: ping
| [Monday 17 May 2010] [10:26:54] <sustrik>   let me see
| [Monday 17 May 2010] [10:27:14] <sustrik>   (it was gonzalo diethelm who wrote the example)
| [Monday 17 May 2010] [10:27:23] <cremes>    sustrik: pong
| [Monday 17 May 2010] [10:27:53] <sustrik>   looking at butterfly...
| [Monday 17 May 2010] [10:28:38] <sustrik>   ok, i see
| [Monday 17 May 2010] [10:28:51] <guido_g>   ahhh... pipelines...
| [Monday 17 May 2010] [10:29:17] <guido_g>   what is the best way of delivering error messages back to the originator of a message?
| [Monday 17 May 2010] [10:29:26] <sustrik>   cremes: have a look here: http://www.zeromq.org/tutorials:butterfly#toc7
| [Monday 17 May 2010] [10:29:37] <sustrik>   guido_g: req/rep
| [Monday 17 May 2010] [10:29:53] <sustrik>   or you mean in piplined model?
| [Monday 17 May 2010] [10:30:03] <guido_g>   in pipelined model
| [Monday 17 May 2010] [10:30:20] <sustrik>   the errors are usually logged rather than returned
| [Monday 17 May 2010] [10:30:22] <cremes>    yes, i stepped through that example; what should i look at
| [Monday 17 May 2010] [10:30:28] <guido_g>   let's say than one of the processes in stage 3 of a pipeline decides that there is an error
| [Monday 17 May 2010] [10:30:30] <sustrik>   the diagram
| [Monday 17 May 2010] [10:30:44] <sustrik>   note that there are N component1's
| [Monday 17 May 2010] [10:30:58] <sustrik>   each of them _connects_ to send_requests application
| [Monday 17 May 2010] [10:31:07] <sustrik>   thus send_requests has to bind
| [Monday 17 May 2010] [10:31:20] <sustrik>   guido_g: yes?
| [Monday 17 May 2010] [10:31:39] <cremes>    ah...
| [Monday 17 May 2010] [10:31:40] <guido_g>   so given the picture we're looking at
| [Monday 17 May 2010] [10:32:20] <guido_g>   every intermediate needs to have an error exit back to the process which created the message in question
| [Monday 17 May 2010] [10:32:31] <guido_g>   or something along the lines
| [Monday 17 May 2010] [10:32:36] <sustrik>   guido_g: does it?
| [Monday 17 May 2010] [10:32:45] <cremes>    since send_requests has no knowledge of how many component1s there *might* be, it binds to a socket;
| [Monday 17 May 2010] [10:32:48] <guido_g>   how would you do it?
| [Monday 17 May 2010] [10:33:04] <sustrik>   the point with pipelined model is that messages are passed downstream an forgotten
| [Monday 17 May 2010] [10:33:12] <cremes>    then the component1s can connect to it and maybe in some cases be transient (disappear after a while) without send_requests caring
| [Monday 17 May 2010] [10:33:29] <sustrik>   thus returning the error to particular point of the pipeline makes little sense
| [Monday 17 May 2010] [10:33:40] <cremes>    it just pumps data to the socket and the lib handles the round-robin to each component1
| [Monday 17 May 2010] [10:33:43] <guido_g>   ahh no
| [Monday 17 May 2010] [10:33:48] <cremes>    i think i get it
| [Monday 17 May 2010] [10:34:06] <guido_g>   sustrik: i'll try to explain the (imagined) problem better
| [Monday 17 May 2010] [10:34:14] <sustrik>   cremes: yes, that's the point
| [Monday 17 May 2010] [10:34:19] <sustrik>   components are transient
| [Monday 17 May 2010] [10:34:24] <sustrik>   guid_g: go on
| [Monday 17 May 2010] [10:35:19] <sustrik>   cremes: that way you can add more components when the load is big
| [Monday 17 May 2010] [10:35:24] <cremes>    sustrik: next question; would a REQ socket bind to an address if it might have N possible components connecting to it via a REP socket?
| [Monday 17 May 2010] [10:35:43] <sustrik>   yes
| [Monday 17 May 2010] [10:35:50] <cremes>    ok
| [Monday 17 May 2010] [10:37:26] <cremes>    sustrik: thanks for helping me out; i need to think about this some more...
| [Monday 17 May 2010] [10:38:41] <sustrik>   cremes: no problem
| [Monday 17 May 2010] [10:39:46] <sustrik>   we are about to make a video about the basic messaging patters so questions from people actually struggling to understand it are pretty valueable
| [Monday 17 May 2010] [10:40:11] <guido_g>   better description, i hope: http://paste.pocoo.org/show/214874/
| [Monday 17 May 2010] [10:40:22] <cremes>    no one struggles more than me! ;)
| [Monday 17 May 2010] [10:41:09] <sustrik>   :)
| [Monday 17 May 2010] [10:41:26] <sustrik>   guido_g: all the errors are sent to a single originating node?
| [Monday 17 May 2010] [10:41:40] <guido_g>   to the originating node of this message
| [Monday 17 May 2010] [10:41:50] <sustrik>   are there many of them?
| [Monday 17 May 2010] [10:42:00] <guido_g>   yes, probably
| [Monday 17 May 2010] [10:42:16] <sustrik>   what about the replies?
| [Monday 17 May 2010] [10:42:21] <sustrik>   ain't there any?
| [Monday 17 May 2010] [10:42:34] <guido_g>   who needs replies? :)
| [Monday 17 May 2010] [10:43:06] <sustrik>   error is kind of reply, i would assume that if there are errors passed back the replie should be passed back as well
| [Monday 17 May 2010] [10:43:07] <guido_g>   in the pure pipeline the last stage would generate the replies, right?
| [Monday 17 May 2010] [10:43:25] <sustrik>   right
| [Monday 17 May 2010] [10:43:46] <sustrik>   i just don't get why the errors are to be delivered back to the originating node is the replies are not
| [Monday 17 May 2010] [10:43:57] <guido_g>   both are
| [Monday 17 May 2010] [10:44:00] <guido_g>   *but*
| [Monday 17 May 2010] [10:44:27] <guido_g>   the error can occur in every stage, where the _normal_ reply comes out of the last stage of the pipeline
| [Monday 17 May 2010] [10:44:48] <sustrik>   sure, but why not use the same mechanism for delivering both of them?
| [Monday 17 May 2010] [10:45:21] <guido_g>   so one would send the errors downstream and every stage has to hand down further?
| [Monday 17 May 2010] [10:45:26] <guido_g>   hmm hmm hmm
| [Monday 17 May 2010] [10:45:29] <sustrik>   that's one option
| [Monday 17 May 2010] [10:45:37] <guido_g>   ok
| [Monday 17 May 2010] [10:45:49] <guido_g>   what would be an alternative? 
| [Monday 17 May 2010] [10:45:50] <sustrik>   how you get the replies back to sender?
| [Monday 17 May 2010] [10:46:22] <guido_g>   like in the butterfly diagram
| [Monday 17 May 2010] [10:46:31] <guido_g>   last stage reports back
| [Monday 17 May 2010] [10:46:43] <sustrik>   how does it know who's the originator?
| [Monday 17 May 2010] [10:46:50] <guido_g>   my idea was a short-cut for errors detected early in the pipeline
| [Monday 17 May 2010] [10:46:51] <sustrik>   in butterfly there's only one requester
| [Monday 17 May 2010] [10:47:46] <guido_g>   in this example yes
| [Monday 17 May 2010] [10:47:53] <sustrik>   guido_g: i am not sure of what you are doing, but let me guess:
| [Monday 17 May 2010] [10:48:07] <sustrik>   you want a "server" that clients connect to and send messages to
| [Monday 17 May 2010] [10:48:09]      * guido_g needs a drawing tool... now! :)
| [Monday 17 May 2010] [10:48:18] <sustrik>   they get replies from the "server"
| [Monday 17 May 2010] [10:48:28] <sustrik>   the "server" itself is a pipeline
| [Monday 17 May 2010] [10:48:30] <sustrik>   right?
| [Monday 17 May 2010] [10:49:08] <guido_g>   yes, the pipeline processes requests originating from -- let's say -- lots of web-servers
| [Monday 17 May 2010] [10:49:33] <sustrik>   ok, i see
| [Monday 17 May 2010] [10:50:33] <sustrik>   so each client has a REQ socket to send request to the pipeline and receive a reply from it
| [Monday 17 May 2010] [10:51:01] <sustrik>   pipeline itself has a central node, that gets the requests and sends the replies
| [Monday 17 May 2010] [10:51:02] <guido_g>   i thought more of a downstream socket
| [Monday 17 May 2010] [10:51:12] <sustrik>   you want to get replies back?
| [Monday 17 May 2010] [10:51:20] <sustrik>   that's req/rep
| [Monday 17 May 2010] [10:51:37] <sustrik>   the internal working of the server may be "parallelised pipeline"
| [Monday 17 May 2010] [10:51:37] <guido_g>   yes, but not neccessarily the same way i sent the request
| [Monday 17 May 2010] [10:51:46] <sustrik>   hm
| [Monday 17 May 2010] [10:51:49] <sustrik>   why so?
| [Monday 17 May 2010] [10:52:58] <guido_g>   i wanted to circumvent the synchronous nature of the req/rep and simply feed the req down to the pipeline
| [Monday 17 May 2010] [10:53:08] <sustrik>   ah, i am getting to that
| [Monday 17 May 2010] [10:53:20] <sustrik>   there is XREP/XREQ which are async
| [Monday 17 May 2010] [10:53:38] <guido_g>   otherwiese i would need lots of connections on the "back side" of the web-servers, which wouldn't help them
| [Monday 17 May 2010] [10:53:55] <sustrik>   yup, there should be only 1 connection
| [Monday 17 May 2010] [10:54:05] <sustrik>   so the webserver is the client
| [Monday 17 May 2010] [10:54:34] <sustrik>   if the request are to be sync it owns REQ socket
| [Monday 17 May 2010] [10:54:39] <guido_g>   spoken in terms of the messaging patterns, i seem to need something like a n -> 1 thing
| [Monday 17 May 2010] [10:54:47] <sustrik>   if it is to be async it owns XREQ socket
| [Monday 17 May 2010] [10:55:08] <guido_g>   ok
| [Monday 17 May 2010] [10:55:15] <sustrik>   it speaks to a single node that coordinates the pipeline
| [Monday 17 May 2010] [10:55:20] <sustrik>   let's call it "coordinator"
| [Monday 17 May 2010] [10:55:34] <sustrik>   coordinator is both beginning and end of the pipeline
| [Monday 17 May 2010] [10:55:35] <guido_g>   then i need an intermediate node holding the rep sockets and pushing the messages downstream, right?
| [Monday 17 May 2010] [10:55:54] <sustrik>   yes, that's the coordinator
| [Monday 17 May 2010] [10:56:02] <guido_g>   cool
| [Monday 17 May 2010] [10:56:04] <guido_g>   thanks
| [Monday 17 May 2010] [10:56:04] <sustrik>   it both sends the messages downstream
| [Monday 17 May 2010] [10:56:17] <sustrik>   and passes the replies back to the clients
| [Monday 17 May 2010] [10:56:48] <sustrik>   however, you should use trunk version to get the correct behaviour
| [Monday 17 May 2010] [10:57:32] <sustrik>   moreover, you should expect that each request will be composed of 2 parts
| [Monday 17 May 2010] [10:57:48] <guido_g>   at the moment i'll try to wrap my head around the patterns and possibillities
| [Monday 17 May 2010] [10:58:04] <sustrik>   ok, let's leave the details now
| [Monday 17 May 2010] [10:58:14] <sustrik>   in overall i would say you need a pipeline
| [Monday 17 May 2010] [10:58:29] <guido_g>   yes, that's definite
| [Monday 17 May 2010] [10:58:30] <sustrik>   i.e. the same thing as in butterfly example
| [Monday 17 May 2010] [10:58:51] <sustrik>   but it's endpoint should translate req/rep messages into pipeline messages
| [Monday 17 May 2010] [10:59:13] <guido_g>   that's the point where i got the problems
| [Monday 17 May 2010] [10:59:27] <sustrik>   yes
| [Monday 17 May 2010] [10:59:35] <sustrik>   but it's not complex
| [Monday 17 May 2010] [10:59:46] <guido_g>   how to translate the sync behvaiour into async *and* collect all information w/o generating uneccessary traffic
| [Monday 17 May 2010] [11:00:06] <sustrik>   XREP socket in the "pipeline coordinator"
| [Monday 17 May 2010] [11:00:39] <guido_g>   which also is the endpoint for the results
| [Monday 17 May 2010] [11:00:48] <sustrik>   reight
| [Monday 17 May 2010] [11:00:50] <guido_g>   i think i got it :)
| [Monday 17 May 2010] [11:00:58] <sustrik>   the pipeline is a circle
| [Monday 17 May 2010] [11:01:11] <sustrik>   the clients connect to the coordinator node of the circle
| [Monday 17 May 2010] [11:01:30] <guido_g>   hmmm... yes, it's a circle
| [Monday 17 May 2010] [11:01:34] <guido_g>   how simple...
| [Monday 17 May 2010] [11:02:50] <guido_g>   the reduction of the whole messaging into four "patterns" is one of the best things since sliced bread :)
| [Monday 17 May 2010] [11:03:51] <sustrik>   yeah, i think that's the main "invention" with 0mq
| [Monday 17 May 2010] [11:03:57] <sustrik>   i should patent it :)
| [Monday 17 May 2010] [11:04:10] <guido_g>   oh no...
| [Monday 17 May 2010] [11:04:23] <sustrik>   no worries
| [Monday 17 May 2010] [11:04:26] <guido_g>   then we'll call you bill or steve
| [Monday 17 May 2010] [11:04:30] <guido_g>   :)
| [Monday 17 May 2010] [11:04:58] <sustrik>   actually i rather would like to get it through IETF to make it a prior art
| [Monday 17 May 2010] [11:05:27] <sustrik>   no exact idea how though...
| [Monday 17 May 2010] [11:05:49] <guido_g>   why is that needed?
| [Monday 17 May 2010] [11:06:01] <guido_g>   isn't it enough to have a publication with this idea?
| [Monday 17 May 2010] [11:06:19] <guido_g>   like an article in the acm queue or something
| [Monday 17 May 2010] [11:06:57] <sustrik>   well, that's the point, if you publish it as IETF I-D it's
| [Monday 17 May 2010] [11:07:00] <sustrik>   a) published
| [Monday 17 May 2010] [11:07:06] <sustrik>   b) dated
| [Monday 17 May 2010] [11:07:36] <sustrik>   c) IETF is a trusted source
| [Monday 17 May 2010] [11:07:58] <guido_g>   ok, i didn't knew that
| [Monday 17 May 2010] [11:08:12] <sustrik>   just my impression :)
| [Monday 17 May 2010] [11:08:19] <guido_g>   ahhh i see
| [Monday 17 May 2010] [11:08:32] <sustrik>   they published TCP/IP specs
| [Monday 17 May 2010] [11:08:41] <sustrik>   so they have to be trusted in a way
| [Monday 17 May 2010] [11:09:03] <sustrik>   otherwise the internet as a whole could be attacked by a troll
| [Monday 17 May 2010] [11:09:15] <guido_g>   i'd say that a tracable publication would be enough to have prior art working
| [Monday 17 May 2010] [11:09:55] <sustrik>   sure
| [Monday 17 May 2010] [11:10:14] <sustrik>   i'll try to get that done somehow
| [Monday 17 May 2010] [11:11:37] <guido_g>   the video? should be enough :)
| [Monday 17 May 2010] [11:13:17] <sustrik>   nor sure about the dating
| [Monday 17 May 2010] [11:13:30] <sustrik>   the data can be easily faked in a video
| [Monday 17 May 2010] [11:13:36] <guido_g>   right
| [Monday 17 May 2010] [11:13:39] <sustrik>   either a scientific journal
| [Monday 17 May 2010] [11:13:47] <guido_g>   best would be an article in a (paper) magazine
| [Monday 17 May 2010] [11:14:08] <sustrik>   yup, there's one at LWN
| [Monday 17 May 2010] [11:14:14] <sustrik>   still not sure that's enough
| [Monday 17 May 2010] [11:14:20] <guido_g>   these are collected by the libraries etc. and need to have a date/issu-no. etc.
| [Monday 17 May 2010] [11:14:24] <sustrik>   right
| [Monday 17 May 2010] [11:14:38] <guido_g>   if this is not enough, nothing would be
| [Monday 17 May 2010] [11:14:43] <sustrik>   one reason i like the IETF way is that's easy to publish
| [Monday 17 May 2010] [11:14:54] <sustrik>   the magazine may be more complex
| [Monday 17 May 2010] [11:15:12] <guido_g>   but for an article in a magazine you do get extra money :)
| [Monday 17 May 2010] [11:15:20] <sustrik>   !
| [Monday 17 May 2010] [11:15:36] <guido_g>   just an idea though...
| [Monday 17 May 2010] [11:16:50] <guido_g>   ahh... my food is arriving
| [Monday 17 May 2010] [11:17:32] <sustrik>   bot appettit!
| [Monday 17 May 2010] [11:17:39] <sustrik>   bon*
| [Monday 17 May 2010] [11:23:04] <bgranger>  sustrik: can a single zmq msg be sent to multiple socket without called zmq_msg_copy?
| [Monday 17 May 2010] [11:25:40] <cremes>    is a XREQ/XREP socket the same as REQ/REP passed with ZMQ_NOBLOCK? or are the X* sockets a new beast?
| [Monday 17 May 2010] [11:25:55] <sustrik>   bgranger: no, each send "empties" the message
| [Monday 17 May 2010] [11:26:08] <sustrik>   so you have to copy it to be able to send it twice
| [Monday 17 May 2010] [11:26:23] <sustrik>   cremes: no, it's kind of different
| [Monday 17 May 2010] [11:26:42] <sustrik>   XREQ/XREP have to route the replies to correct requesters
| [Monday 17 May 2010] [11:26:54] <bgranger>  sustrik:  OK, but zmq_msg_copy doesn't actually copy the data, it simply makes a reference?
| [Monday 17 May 2010] [11:26:59] <sustrik>   right
| [Monday 17 May 2010] [11:27:55] <bgranger>  OK, we are implementing a Python Message object that will allow us to do non-copying recv's and multiple sends.
| [Monday 17 May 2010] [11:28:25] <sustrik>   yes, that sound useful
| [Monday 17 May 2010] [11:29:02] <cremes>    bgranger: looking forward to seeing that; i can't seem to figure out how to do it in ruby
| [Monday 17 May 2010] [11:29:19] <bgranger>  When I get a message from a recv, it has a ref count of 1, so it can be sent once correct?
| [Monday 17 May 2010] [11:29:30] <cremes>    sustrik: how does XREQ/XREP differ?
| [Monday 17 May 2010] [11:29:38] <sustrik>   branger: right
| [Monday 17 May 2010] [11:29:45] <bgranger>  cremes:  it has been super subtle to figure out, but I think we have it.  Will post on the list when it is done.
| [Monday 17 May 2010] [11:30:00] <cremes>    bgranger: excellent </burns>
| [Monday 17 May 2010] [11:30:24] <sustrik>   cremes: how it works is that XREP socket of receiving a request tags it with identity of the sender, when reply is to be sent it takes the tag and routes the reply to the correct requester
| [Monday 17 May 2010] [11:30:57] <cremes>    oh, you're building on the multi-part message stuff?
| [Monday 17 May 2010] [11:31:05] <sustrik>   yes, that's it
| [Monday 17 May 2010] [11:31:19] <sustrik>   imagine a REQ sending a request
| [Monday 17 May 2010] [11:31:24] <cremes>    ok, so i can have multiple requests "in flight" with XREQ
| [Monday 17 May 2010] [11:31:33] <sustrik>   you receive it using a XREP on the other side
| [Monday 17 May 2010] [11:31:37] <sustrik>   it'll look like this"
| [Monday 17 May 2010] [11:31:47]      * cremes waiting...
| [Monday 17 May 2010] [11:32:11] <sustrik>   <part1>ApplicationA<part1><part2><part2><part3>my message data<part3>
| [Monday 17 May 2010] [11:32:19] <sustrik>   part3 is the data you've sent
| [Monday 17 May 2010] [11:32:28] <sustrik>   part1 is the name of the sending application
| [Monday 17 May 2010] [11:32:42] <cremes>    ok
| [Monday 17 May 2010] [11:32:49] <sustrik>   part2 is empty, it's a delimiter splitting the address and your data
| [Monday 17 May 2010] [11:33:05] <sustrik>   and yes, you can have many messages in flight
| [Monday 17 May 2010] [11:33:55] <cremes>    looking forward to seeing a code example with 2.0.7 :)
| [Monday 17 May 2010] [11:39:58] <bgranger>  cremes:  we have some examples of using XREQ in pyzmq in the examples/kernel directory.  It is not a simple example, but shows what can be done.
| [Monday 17 May 2010] [11:40:16] <cremes>    bgranger: i'll take a look; thanks
| [Monday 17 May 2010] [12:20:10] <cremes>    does it make any sense for a socket to both bind and connect to different addresses? if so, what is an example?
| [Monday 17 May 2010] [12:21:22] <guido_g>   a socket is either bound or connected, not both afaik
| [Monday 17 May 2010] [12:35:16] <sustrik>   cremes: actually, you can do that
| [Monday 17 May 2010] [12:35:37] <sustrik>   not sure about use case
| [Monday 17 May 2010] [12:35:43] <sustrik>   let me think,,,
| [Monday 17 May 2010] [12:36:08] <guido_g>   what would happen?
| [Monday 17 May 2010] [12:36:48] <sustrik>   well, you would initiate some connections via connect
| [Monday 17 May 2010] [12:37:07] <sustrik>   and peers may initiate other connections via you being bound to a specific port
| [Monday 17 May 2010] [12:37:18] <sustrik>   both types of connections would be handled equally
| [Monday 17 May 2010] [12:38:26] <sustrik>   ok, use cases are not really natural
| [Monday 17 May 2010] [12:38:33] <sustrik>   but let's imagine this:
| [Monday 17 May 2010] [12:38:41] <sustrik>   i am writing a service
| [Monday 17 May 2010] [12:38:53] <sustrik>   i'll bind to a port
| [Monday 17 May 2010] [12:39:07] <sustrik>   to that clients can connect and ask me to do work
| [Monday 17 May 2010] [12:39:43] <sustrik>   additionally, imagine there's a big hub for dispatching work on the Internet somewhere
| [Monday 17 May 2010] [12:40:22] <sustrik>   i may want to use free cycles on my box to execute foreign requests (for money of course)
| [Monday 17 May 2010] [12:40:33] <sustrik>   so i _connect_ my service to the hub
| [Monday 17 May 2010] [12:40:59] <sustrik>   now i have a socket that's both connected and bound
| [Monday 17 May 2010] [12:41:55] <guido_g>   and if one really does that, he might see a lot of exploded heads :)
| [Monday 17 May 2010] [12:42:17] <sustrik>   :)
| [Monday 17 May 2010] [13:04:36] <cremes>    more bind / connect questions...
| [Monday 17 May 2010] [13:05:11] <cremes>    is there anything wrong about having a REQ socket and REP socket both bind to the same address and send/recv to/from each other?
| [Monday 17 May 2010] [13:05:53] <cremes>    based on our earlier discussions, this appears to be valid since this setup allows for multiple REQ and REP sockets to communicate in a load balanced manner
| [Monday 17 May 2010] [13:06:13] <cremes>    s/address/endpoint/
| [Monday 17 May 2010] [13:08:26] <cremes>    when i just tried it (using the local_lat/remote_lat samples) i got an EADDRINUSE error from remote_lat
| [Monday 17 May 2010] [13:08:58] <sustrik>   you cannot bind two sockets to the same NIC and port
| [Monday 17 May 2010] [13:09:07] <sustrik>   TCP doesn't allow for that kind of thing
| [Monday 17 May 2010] [13:10:05] <cremes>    sustrik: what about ipc or inproc transports?
| [Monday 17 May 2010] [13:10:40] <sustrik>   basically the same thing
| [Monday 17 May 2010] [13:10:54] <cremes>    ok
| [Monday 17 May 2010] [13:11:09] <cremes>    probably more questions later/tomorrow...
| [Monday 17 May 2010] [13:11:21] <cremes>    i hope this is helping for your video!
| [Monday 17 May 2010] [13:11:36] <sustrik>   surely it does :)
| [Monday 17 May 2010] [16:31:26] <bgranger>  sustrik:  what is the logic for zmq_msg_copy calling zmq_msg_close on the src msg?
| [Monday 17 May 2010] [16:32:44] <bgranger>  NEvermind I see now.
| [Monday 17 May 2010] [17:41:47] <mikko> what a day.. can't do the win builds today
| [Monday 17 May 2010] [17:41:50] <mikko> retrying tomorrow
| [Monday 17 May 2010] [17:41:55] <mikko> nn
| [Tuesday 18 May 2010] [11:02:16] <cremes>   sustrik: question about this code snippet from all of the #xsend functions: http://pastie.org/965712
| [Tuesday 18 May 2010] [11:02:47] <cremes>   if the data buffer is detached, when zmq_msg_close gets called how does it release that (detached) memory?
| [Tuesday 18 May 2010] [11:03:17] <cremes>   it looks to me like the library is orphaning that data buffer
| [Tuesday 18 May 2010] [11:03:48] <cremes>   who owns the zmq_msg_t once it is handed off to send? does 0mq own it or the application?
| [Tuesday 18 May 2010] [12:47:06] <b1ng0>    hello
| [Tuesday 18 May 2010] [12:47:21] <b1ng0>    i had some questions on choosing the right messaging model for my application and could use some help
| [Tuesday 18 May 2010] [12:53:17] <b1ng0>    anyone there?
| [Tuesday 18 May 2010] [12:58:46] <versificateur>    hello...
| [Tuesday 18 May 2010] [12:59:44] <versificateur>    i tried to compile pyzmq on ubtuntu 10.04 but i got this error
| [Tuesday 18 May 2010] [13:00:24] <versificateur>    ImportError: /usr/local/lib/python2.6/dist-packages/zmq/_zmq.so: undefined symbol: zmq_getsockopt
| [Tuesday 18 May 2010] [13:00:51] <versificateur>    If i could have some help here... :(
| [Tuesday 18 May 2010] [13:05:33] <b1ng0>    doesn't look like anyone is here
| [Tuesday 18 May 2010] [13:06:35] <guido_g>  b1ng0: you should simply ask your questions, meta-questions are ignored mostly
| [Tuesday 18 May 2010] [13:06:45] <b1ng0>    oh ok
| [Tuesday 18 May 2010] [13:07:32] <b1ng0>    basically i have a server that needs to send a request to another group of servers and then receive data back. i have to send the request to all servers because i don't know which one has the data on it that i need
| [Tuesday 18 May 2010] [13:07:47] <b1ng0>    so it seems like i need to broadcast the query to all servers
| [Tuesday 18 May 2010] [13:07:56] <b1ng0>    and then one of the servers will send a reply back
| [Tuesday 18 May 2010] [13:08:12] <b1ng0>    so it seems like a mix of multicast and then send/receive
| [Tuesday 18 May 2010] [13:08:20] <b1ng0>    but publish-subscribe also seems like it might work
| [Tuesday 18 May 2010] [13:08:47] <guido_g>  yes, sound like pub/sub
| [Tuesday 18 May 2010] [13:09:08] <b1ng0>    and why not multicast
| [Tuesday 18 May 2010] [13:09:28] <guido_g>  you're mixing things a bit, it seems
| [Tuesday 18 May 2010] [13:09:42] <guido_g>  multicast is a transport protocol like tcp
| [Tuesday 18 May 2010] [13:10:22] <b1ng0>    ok true
| [Tuesday 18 May 2010] [13:10:30] <b1ng0>    but why would using tcp be better in this case
| [Tuesday 18 May 2010] [13:10:43] <guido_g>  you can of course use multicast (epgm/pgm) w/ pub/sub
| [Tuesday 18 May 2010] [13:10:59] <guido_g>  i didn't say to use tcp
| [Tuesday 18 May 2010] [13:11:25] <b1ng0>    does it make a difference on the size of the messages? the queries could be in the 20K range and the responses would be less
| [Tuesday 18 May 2010] [13:11:47] <b1ng0>    ok well that is what i am trying to figure out, should it be multicast with pub/sub or just tcp
| [Tuesday 18 May 2010] [13:11:59] <guido_g>  you couldn't tell the difference
| [Tuesday 18 May 2010] [13:13:32] <b1ng0>    ok i see
| [Tuesday 18 May 2010] [13:13:49] <b1ng0>    and then on sending the reply back, it would just use a direct send?
| [Tuesday 18 May 2010] [13:13:55] <b1ng0>    to the central server?
| [Tuesday 18 May 2010] [13:14:16] <guido_g>  you could use the same channel as for the request
| [Tuesday 18 May 2010] [13:14:18] <b1ng0>    or would the central one also subscribe to each of the other servers
| [Tuesday 18 May 2010] [13:15:10] <b1ng0>    hm ok i will test it out
| [Tuesday 18 May 2010] [13:15:12] <b1ng0>    thank you so much
| [Tuesday 18 May 2010] [13:29:17] <guido_g>  versificateur: check if libzmq is found, it's needed by _zmq.so
| [Tuesday 18 May 2010] [13:56:14] <versificateur>    thanks i'll check
| [Tuesday 18 May 2010] [13:56:56] <guido_g>  try: ldd /usr/local/lib/python2.6/dist-packages/zmq/_zmq.so
| [Tuesday 18 May 2010] [13:57:57] <versificateur>    it's work now because i remove debian package i use to install zmq
| [Tuesday 18 May 2010] [13:58:25] <versificateur>    and install zmq from source
| [Tuesday 18 May 2010] [14:00:53] <cremes>   versificateur: zmq_getsockopt is only available in the github master; you probably have version 2.0.6 installed
| [Tuesday 18 May 2010] [14:01:35] <guido_g>  oh... :)
| [Tuesday 18 May 2010] [14:01:53] <versificateur>    yeah
| [Tuesday 18 May 2010] [14:02:04] <cremes>   heh
| [Tuesday 18 May 2010] [14:02:26] <versificateur>    but i finally remove these packages
| [Tuesday 18 May 2010] [14:02:46] <versificateur>    and compile with git source
| [Tuesday 18 May 2010] [14:03:10] <versificateur>    it seems that everything works
| [Tuesday 18 May 2010] [14:03:51] <cremes>   hopefully 2.0.7 will get released soon and the python bindings will be back in sync with a "supported" release
| [Tuesday 18 May 2010] [14:05:05] <versificateur>    i've another question...
| [Tuesday 18 May 2010] [14:06:11] <versificateur>    in a PUB/SUB model how could i make the publisher wait for subscibers connections?
| [Tuesday 18 May 2010] [14:06:31] <guido_g>  you don't
| [Tuesday 18 May 2010] [14:06:41] <guido_g>  it's like radio
| [Tuesday 18 May 2010] [14:06:54] <guido_g>  you simply don't know if someone is listening
| [Tuesday 18 May 2010] [14:08:03] <versificateur>    so once publisher started every message not handle by a subscriber is lost?
| [Tuesday 18 May 2010] [14:08:17] <guido_g>  right
| [Tuesday 18 May 2010] [14:10:22] <versificateur>    ... and when a subscriber is connected it immediately receive update message from publisher. right?
| [Tuesday 18 May 2010] [14:10:49] <guido_g>  yes
| [Tuesday 18 May 2010] [14:11:35] <versificateur>    thnks a lot
| [Tuesday 18 May 2010] [14:11:40] <guido_g>  np
| [Tuesday 18 May 2010] [14:13:37] <versificateur>    with all buzz around realtime web (twitter...) is zmq well suited to handle realtime web?
| [Tuesday 18 May 2010] [14:13:52] <guido_g>  not at all
| [Tuesday 18 May 2010] [14:13:56] <guido_g>  it's not web
| [Tuesday 18 May 2010] [14:14:00] <guido_g>  *cough*
| [Tuesday 18 May 2010] [14:14:43] <cremes>   versificateur: you should provide some actionscript bindings for zmq so we can use it from our browsers via flash!
| [Tuesday 18 May 2010] [14:14:46] <cremes>   ;)
| [Tuesday 18 May 2010] [14:14:55] <guido_g>  hehehe
| [Tuesday 18 May 2010] [14:15:42] <versificateur>    in the current platform i work on. I'm using zmq to dispacth json data 
| [Tuesday 18 May 2010] [14:18:11] <versificateur>    cremes: i'm not really good  with scripting languages so for the actionscript bindings i'm not the good guy  :)
| [Tuesday 18 May 2010] [14:22:22] <versificateur>    do you think zmq can do the job (for my platform) and relay around 0.5-1kb json data ?? 
| [Tuesday 18 May 2010] [14:22:39] <guido_g>  can do what?
| [Tuesday 18 May 2010] [14:24:29] <versificateur>    dispatch small json data (around 0.5-1ko )
| [Tuesday 18 May 2010] [14:25:28] <guido_g>  why shouldn't it?
| [Tuesday 18 May 2010] [14:25:56] <guido_g>  the python bindings even have send_json and recv_json
| [Tuesday 18 May 2010] [14:26:23] <versificateur>    wow i dont even know
| [Tuesday 18 May 2010] [14:26:34] <guido_g>  did you read some of the things at http://www.zeromq.org/ ?
| [Tuesday 18 May 2010] [14:27:39] <versificateur>    yes but i didn't found json related topic
| [Tuesday 18 May 2010] [14:28:22] <guido_g>  what's the differnce between json and a string/octet-stream?
| [Tuesday 18 May 2010] [14:28:27] <guido_g>  data is data
| [Tuesday 18 May 2010] [14:30:18] <versificateur>    yes it's true...
| [Tuesday 18 May 2010] [14:30:43] <guido_g>  mq does not interfere with the data sent
| [Tuesday 18 May 2010] [14:31:53] <guido_g>  and 1kb is not a message size to worry about
| [Tuesday 18 May 2010] [14:32:30] <guido_g>  there're some performance numbers on the site, somewhere...
| [Tuesday 18 May 2010] [14:33:55] <versificateur>    I just found them
| [Tuesday 18 May 2010] [14:36:17] <guido_g>  i'd say: if you don't have qdr infiniband or 10gb ethernet, don't worry :)
| [Tuesday 18 May 2010] [14:38:38] <versificateur>    :)
| [Tuesday 18 May 2010] [14:40:05] <versificateur>    I go back to my tricky python code thanks a lot
| [Tuesday 18 May 2010] [14:40:21] <guido_g>  have fun
| [Tuesday 18 May 2010] [14:54:49] <cremes>   versificateur: if you are using python, you can't be worried too much about performance!
| [Tuesday 18 May 2010] [14:54:58] <cremes>   (i'm a ruby guy, so i can say that with a straight face.)
| [Tuesday 18 May 2010] [14:55:30] <guido_g>  python is usually fast enough
| [Tuesday 18 May 2010] [17:42:00] <CIA-15>   pyzmq: 03Brian Granger 07master * rd939461 10/ (perf/local_lat.py perf/remote_lat.py): Adding time.sleep(1) to end of latency perf tests. - http://bit.ly/9WG3CU
| [Tuesday 18 May 2010] [17:46:48] <CIA-15>   pyzmq: 03Brian Granger 07master * rc854731 10/ zmq/tests/test_reqrep.py : Adding tests for large message bug. - http://bit.ly/9bz1A0
| [Tuesday 18 May 2010] [18:28:10] <CIA-15>   pyzmq: 03Brian Granger 07nocopy * rd939461 10/ (perf/local_lat.py perf/remote_lat.py): Adding time.sleep(1) to end of latency perf tests. - http://bit.ly/9WG3CU
| [Tuesday 18 May 2010] [18:28:11] <CIA-15>   pyzmq: 03Brian Granger 07nocopy * rc854731 10/ zmq/tests/test_reqrep.py : Adding tests for large message bug. - http://bit.ly/9bz1A0
| [Tuesday 18 May 2010] [18:28:12] <CIA-15>   pyzmq: 03Brian Granger 07nocopy * r9f44c7c 10/ (3 files in 2 dirs): 
| [Tuesday 18 May 2010] [18:28:13] <CIA-15>   pyzmq: Merge branch 'master' into nocopy
| [Tuesday 18 May 2010] [18:28:13] <CIA-15>   pyzmq: Conflicts:
| [Tuesday 18 May 2010] [18:28:13] <CIA-15>   pyzmq:  perf/local_lat.py
| [Tuesday 18 May 2010] [18:28:13] <CIA-15>   pyzmq:  perf/remote_lat.py - http://bit.ly/aj7iyy
| [Tuesday 18 May 2010] [18:28:13] <CIA-15>   pyzmq: 03Brian Granger 07nocopy * r1c8fb86 10/ (4 files): Updating perf tests with copy/no-copy options and new API. - http://bit.ly/9Nf8pL
| [Wednesday 19 May 2010] [00:32:19] <CIA-15> zeromq2: 03Martin Sustrik 07master * r89783c3 10/ (src/pipe.cpp src/ypipe.hpp): incomplete messages can be stored in ypipe - http://bit.ly/cFTaHn
| [Thursday 20 May 2010] [08:55:11] <iFire>   windows IPC doesn't exist right?
| [Thursday 20 May 2010] [09:50:19] <mikko>   Your membership in the mailing list zeromq-dev has been disabled due
| [Thursday 20 May 2010] [09:50:20] <mikko>   to excessive bounces 
| [Thursday 20 May 2010] [09:50:24] <mikko>   thats rather interesting
| [Thursday 20 May 2010] [10:51:25] <sustrik_>    mikko: seen that on my side as well
| [Thursday 20 May 2010] [10:51:36] <sustrik_>    iFire: right
| [Thursday 20 May 2010] [10:51:50] <sustrik_>    mikko: let me try to send you a test email
| [Thursday 20 May 2010] [10:52:07] <sustrik_>    mikko: done
| [Thursday 20 May 2010] [10:59:07] <mikko>   sustrik_: came through
| [Thursday 20 May 2010] [10:59:09] <mikko>   no problem
| [Thursday 20 May 2010] [10:59:23] <mikko>   i wonder why the mailing list thinks i am bouncing a lot
| [Thursday 20 May 2010] [11:02:04] <sustrik_>    let me unblock you
| [Thursday 20 May 2010] [11:04:41] <sustrik_>    done
| [Thursday 20 May 2010] [11:07:11] <cremes>  what is the syntax for bind/connect when using ipc?
| [Thursday 20 May 2010] [11:07:19] <cremes>  "ipc://<what goes here?>"
| [Thursday 20 May 2010] [11:11:38] <guido_g> http://api.zeromq.org/zmq_ipc.html <- described there
| [Thursday 20 May 2010] [11:26:59] <mikko>   sustrik_: thanks
| [Thursday 20 May 2010] [11:27:08] <sustrik_>    np
| [Thursday 20 May 2010] [12:02:52] <CIA-15>  zeromq2: 03Martin Sustrik 07master * r091e92a 10/ AUTHORS : Pieter Hintjens added to AUTHORS file - http://bit.ly/dtIybP
| [Thursday 20 May 2010] [12:02:53] <CIA-15>  zeromq2: 03Martin Sustrik 07master * r7773fdd 10/ (src/pipe.cpp src/ypipe.hpp): Merge branch 'master' of git@github.com:sustrik/zeromq2 - http://bit.ly/avqvTc
| [Thursday 20 May 2010] [19:08:56] <CIA-15>  pyzmq: 03Brian Granger 07nocopy * r0ab9c93 10/ (zmq/_zmq.c zmq/_zmq.pyx zmq/tests/test_message.py): Initial implementation of smart Message object. - http://bit.ly/dwm066
| [Friday 21 May 2010] [00:30:07] <CIA-15>    pyzmq: 03Brian Granger 07nocopy * r6250cb5 10/ (zmq/_zmq.c zmq/_zmq.pyx): Adding support for full non-copy send/recv using Message. - http://bit.ly/aoi0LX
| [Friday 21 May 2010] [05:59:34] <vincent00> hi all
| [Friday 21 May 2010] [06:00:04] <vincent00> i have a design question about how to do requests inside a service architecture
| [Friday 21 May 2010] [06:00:53] <vincent00> is it recommended to create a socket for each rpc call or is it better to maintain connections to each service and use them when you need to?
| [Friday 21 May 2010] [06:02:07] <vincent00> I'm thinking of wrapping the most used messages (protocol buffers) as python functions so they can easily be reused by the applications that are built by the researchers we support
| [Friday 21 May 2010] [06:03:17] <vincent00> that would be significantly easier if i could just create a req socket each time i want to send a message
| [Friday 21 May 2010] [06:08:17] <sustrik_>  vincent: you can do that
| [Friday 21 May 2010] [06:08:44] <sustrik_>  but obviously, you shouldn't expect it to be very efficient
| [Friday 21 May 2010] [06:09:08] <vincent00> hi sustrik_
| [Friday 21 May 2010] [06:09:29] <vincent00> so an option i should think about is some way of managing connections?
| [Friday 21 May 2010] [06:09:37] <vincent00> indexed by service
| [Friday 21 May 2010] [06:09:58] <sustrik_>  what are you trying to build
| [Friday 21 May 2010] [06:10:00] <sustrik_>  SOA?
| [Friday 21 May 2010] [06:10:07] <vincent00> yes :)
| [Friday 21 May 2010] [06:10:26] <sustrik_>  ok, then you need a shared queue in the middle
| [Friday 21 May 2010] [06:10:39] <mato>  sustrik_: yo
| [Friday 21 May 2010] [06:10:45] <vincent00> we have some services that process and generate sound
| [Friday 21 May 2010] [06:10:47] <sustrik_>  mato: hi
| [Friday 21 May 2010] [06:10:58] <mato>  sustrik_: you're not watching your messages...
| [Friday 21 May 2010] [06:11:05] <sustrik_>  what messages?
| [Friday 21 May 2010] [06:11:05] <mato>  sustrik_: can i drop by to discuss some business stuff?
| [Friday 21 May 2010] [06:11:13] <mato>  sustrik_: private messages on irc
| [Friday 21 May 2010] [06:11:20] <vincent00> sustrik_: so no direct connections to the services?
| [Friday 21 May 2010] [06:11:31] <sustrik_>  a-ha, sure, drop by
| [Friday 21 May 2010] [06:11:41] <mato>  sustrik_: when? isn't your sister arriving today?
| [Friday 21 May 2010] [06:11:57] <sustrik_>  vincent: you can do that but that's not what's normally understood under the term "SOA"
| [Friday 21 May 2010] [06:12:03] <sustrik_>  mato: tomorrow
| [Friday 21 May 2010] [06:12:09] <sustrik_>  i'm at home today
| [Friday 21 May 2010] [06:12:34] <mato>  sustrik_: ok, good, then i'll have lunch and go to your place...
| [Friday 21 May 2010] [06:12:40] <sustrik_>  ok
| [Friday 21 May 2010] [06:12:40] <mato>  sustrik_: in an hour or so
| [Friday 21 May 2010] [06:13:40] <sustrik_>  vincent: the best way is to think a bit about what you want to achieve
| [Friday 21 May 2010] [06:14:05] <sustrik_>  and put that down on paper
| [Friday 21 May 2010] [06:14:29] <sustrik_>  then decide on setup of the network
| [Friday 21 May 2010] [06:14:49] <sustrik_>  and finally map the setup diagram to 0MQ concepts
| [Friday 21 May 2010] [06:17:52] <vincent00> sustrik_: ok, the design is ready to be mapped to zmq concepts i think, i'll take that approach :) thanks
| [Friday 21 May 2010] [06:18:11] <sustrik_>  have a block diagram?
| [Friday 21 May 2010] [06:18:18] <sustrik_>  is there a node in the middle?
| [Friday 21 May 2010] [06:18:40] <sustrik_>  or are clients connected to services directly
| [Friday 21 May 2010] [06:18:41] <sustrik_>  ?
| [Friday 21 May 2010] [06:19:02] <vincent00> right now clients are connected directly to services, rpc style
| [Friday 21 May 2010] [06:19:31] <vincent00> between the task scheduler and the workers we have a different approach
| [Friday 21 May 2010] [06:20:07] <sustrik_>  so there's only one app instance for each server, right?
| [Friday 21 May 2010] [06:20:39] <sustrik_>  no load-balancing
| [Friday 21 May 2010] [06:20:44] <sustrik_>  no failover
| [Friday 21 May 2010] [06:21:29] <vincent00> multiple apps can be running on the same node, but never the same app twice on the network for now (except worker nodes, but we have that figured out, clients don't connect to them)
| [Friday 21 May 2010] [06:21:32] <vincent00> nope
| [Friday 21 May 2010] [06:21:50] <sustrik_>  then it's easy
| [Friday 21 May 2010] [06:21:56] <sustrik_>  REP socket in each service
| [Friday 21 May 2010] [06:22:05] <sustrik_>  REQ socket in each client
| [Friday 21 May 2010] [06:22:26] <sustrik_>  clients may close the socket after each RPC call
| [Friday 21 May 2010] [06:22:44] <sustrik_>  however, if you want to do lot of RPC calls efficiently
| [Friday 21 May 2010] [06:22:53] <sustrik_>  it's better to leave the connection open
| [Friday 21 May 2010] [06:23:07] <sustrik_>  rather than reopening it each time it's needed
| [Friday 21 May 2010] [06:23:44] <vincent00> ok, that was what i wondering about, whether it was ok to create sockets on the fly many times over, i guess it's to be decided on a case by case basis
| [Friday 21 May 2010] [06:24:21] <vincent00> thanks :) very helpful :)
| [Friday 21 May 2010] [12:45:16] <mikko> got the php extension windows builds in a minute
| [Friday 21 May 2010] [12:59:09] <sustrik_>  !
| [Friday 21 May 2010] [13:27:09] <mikko> trying to script up the whole process
| [Friday 21 May 2010] [13:27:18] <mikko> but windows batch is not the most pleasant scripting language
| [Friday 21 May 2010] [13:40:10] <mikko> http://valokuva.org/~mikko/builds/
| [Friday 21 May 2010] [13:40:19] <mikko> should update soon after my batch finishes
| [Friday 21 May 2010] [13:47:51] <mikko> http://valokuva.org/~mikko/builds/
| [Friday 21 May 2010] [13:47:52] <mikko> bam
| [Friday 21 May 2010] [13:47:54] <mikko> windows builds
| [Friday 21 May 2010] [15:31:14] <CIA-17>    pyzmq: 03Brian Granger 07nocopy * reb61ac5 10/ (perf/local_lat.py perf/local_thr.py perf/remote_lat.py): Adding non-copy capability for recv's in perf tests. - http://bit.ly/aAsfvh
| [Friday 21 May 2010] [16:03:54] <CIA-17>    pyzmq: 03Brian Granger 07nocopy * r42903ba 10/ (perf/remote_lat.py zmq/_zmq.c zmq/_zmq.pyx): Adding back Stopwatch for perf tests and modified lat test to use. - http://bit.ly/c9dOZ2
| [Friday 21 May 2010] [16:30:30] <CIA-17>    pyzmq: 03Brian Granger 07nocopy * r8d32972 10/ (zmq/_zmq.c zmq/_zmq.pyx): Fixing old memory leak in Stopwatch. - http://bit.ly/98nJmz
| [Saturday 22 May 2010] [14:25:33] <mikko>   http://valokuva.org/builds/ zmq for php windows builds
| [Sunday 23 May 2010] [03:51:10] <sustrik_>  mikko: what about announcing the builds on the mailing list?
| [Sunday 23 May 2010] [07:18:30] <mikko> sustrik_: done
| [Sunday 23 May 2010] [12:03:16] <postmodern>    wow awesome you have a irc channel
| [Sunday 23 May 2010] [12:03:38] <postmodern>    so question, is it possible to have two different sockets share the same physical socket?
| [Sunday 23 May 2010] [12:04:07] <postmodern>    such as having a REQ/RESP share the same connection with a PUB/SUB?
| [Sunday 23 May 2010] [12:26:23] <cremes_>   postmodern: 0mq may use more than one tcp socket per 0mq socket; it depends on how many times you bind/connect to addresses
| [Sunday 23 May 2010] [12:27:03] <cremes_>   i don't know if it shares tcp sockets to the same src/dst but i really doubt it
| [Sunday 23 May 2010] [12:30:05] <postmodern>    ah ok
| [Sunday 23 May 2010] [12:30:40] <postmodern>    im just making sure i would not have to bind to another port, just to do PUB/SUB
| [Sunday 23 May 2010] [12:34:25] <postmodern>    also is it possible to have a server that is set to SUB mode
| [Sunday 23 May 2010] [12:34:41] <postmodern>    and have clients that connect in that are in PUB mode
| [Sunday 23 May 2010] [12:52:04] <postmodern>    bbl, getting some rest
| [Sunday 23 May 2010] [19:40:25] <hassox>    hey guys
| [Sunday 23 May 2010] [19:40:42] <hassox>    anyone got some good blog posts to help me get started with 0mq?
| [Sunday 23 May 2010] [19:41:05]      * hassox has used a bit of amqp but looking for an alternative
| [Sunday 23 May 2010] [21:34:16] <postmodern>    so when i read "A single socket may be connected to an arbitrary number of peer addresses using zmq_connect(), while also having an arbitrary number of local addresses assigned to it using zmq_bind()."
| [Sunday 23 May 2010] [21:34:33] <postmodern>    im a bit confused how zmq routes messages through sockets with multiple end-points?
| [Sunday 23 May 2010] [21:34:47] <postmodern>    does it just fan-out?
| [Sunday 23 May 2010] [21:34:55] <postmodern>    or is it load-balanced?
| [Sunday 23 May 2010] [23:25:09] <cremes_>   postmodern: it depends on the socket type; i don't know for certain, but in some cases it uses round-robin and in other fair-balance queueing meaning...
| [Sunday 23 May 2010] [23:25:29] <postmodern>    ah interesting
| [Sunday 23 May 2010] [23:25:29] <cremes_>   that it sends messages based on its internal knowledge of queue lengths
| [Sunday 23 May 2010] [23:25:52] <cremes_>   i suggest asking on the list for a breakdown of queueing algorithms by socket
| [Monday 24 May 2010] [01:46:41] <sustrik_>  hassox: http://lwn.net/Articles/370307/
| [Monday 24 May 2010] [01:47:15] <sustrik_>  postmodern: each socket type does what you would expect it to do
| [Monday 24 May 2010] [01:47:38] <sustrik_>  requests are load balanced between services
| [Monday 24 May 2010] [01:47:56] <sustrik_>  while publishes are distributed to every subscriber
| [Monday 24 May 2010] [01:48:20] <postmodern>    sustrik_, also there is no restriction on which direction the connection was made from, for pub/sub?
| [Monday 24 May 2010] [01:49:04] <postmodern>    sustrik_, for instance i could connect into each subscriber socket, and publish to them
| [Monday 24 May 2010] [01:49:17] <postmodern>    sustrik_, instead of binding to a port, and waiting for the subscribers to connect in
| [Monday 24 May 2010] [01:56:43] <hassox>    sustrik_: churs
| [Monday 24 May 2010] [01:57:24] <hassox>    sustrik_: is 0mq able to work with threadless evented systems like ruby EventMachine and Node.js?
| [Monday 24 May 2010] [02:05:08] <sustrik_>  postmodern: no restriction
| [Monday 24 May 2010] [02:05:20] <postmodern>    excellent
| [Monday 24 May 2010] [02:05:58] <sustrik_>  hassox: no idea, depends of what kind of requirements the two systems have
| [Monday 24 May 2010] [02:06:08] <hassox>    sustrik_: they're not threaded
| [Monday 24 May 2010] [02:06:21] <sustrik_>  single-thread?
| [Monday 24 May 2010] [02:06:26] <hassox>    event loop
| [Monday 24 May 2010] [02:06:37] <hassox>    yeah single thread, but they live in an event loop
| [Monday 24 May 2010] [02:06:40] <hassox>    so async style
| [Monday 24 May 2010] [02:06:52] <sustrik_>  what do you have to conform to register to the event loop?
| [Monday 24 May 2010] [02:07:08] <hassox>    sorry my train has just arrived I'll be back on later
| [Monday 24 May 2010] [02:07:20] <hassox>    not sure what that means but I'll jump on when I get back
| [Monday 24 May 2010] [05:30:33] <hassox>    sustrik_: still here mate?
| [Monday 24 May 2010] [05:30:43] <sustrik_>  yup
| [Monday 24 May 2010] [05:31:18] <sustrik_>  how do you add event sources to your event loop?
| [Monday 24 May 2010] [05:31:29] <sustrik_>  what does the event source have to conform to?
| [Monday 24 May 2010] [05:49:35] <hassox>    so
| [Monday 24 May 2010] [05:49:40] <hassox>    with event machine for eg
| [Monday 24 May 2010] [05:49:54] <hassox>    you create a socket, and when an event occurs, i.e. some data is received
| [Monday 24 May 2010] [05:49:58] <hassox>    a method on the handler is called
| [Monday 24 May 2010] [05:50:09] <hassox>    you can then add callbacks, timers etc
| [Monday 24 May 2010] [05:50:21] <hassox>    inside the method
| [Monday 24 May 2010] [05:50:48] <hassox>    there's no threads, you instead gain concurrency by splitting execution up and using callbacks
| [Monday 24 May 2010] [05:51:17] <hassox>    there is an event queue, where events are queued up, and then the event loop consumes each event from the queue
| [Monday 24 May 2010] [05:51:30] <mikko> can you add custom event sources?
| [Monday 24 May 2010] [05:51:36] <mikko> other than fds
| [Monday 24 May 2010] [05:51:38] <hassox>    what do you mean
| [Monday 24 May 2010] [05:51:55] <hassox>    manually put things onto the event queue?
| [Monday 24 May 2010] [05:52:34] <sustrik_>  no, you put a socket into the event loop, right? can you put something else there?
| [Monday 24 May 2010] [05:52:57] <hassox>    the whole application lives in the event loop
| [Monday 24 May 2010] [05:53:24] <hassox>    so you can have many sockets, tcp connections database connections, or just have your application setting things up to do and executing them
| [Monday 24 May 2010] [05:53:45] <sustrik_>  how does the loop know what sockets to inspect?
| [Monday 24 May 2010] [05:54:10] <hassox>    I'm not sure of the underlying system calls that are made...
| [Monday 24 May 2010] [05:54:20] <hassox>    I usually live a little higher up the stack
| [Monday 24 May 2010] [05:54:46] <sustrik_>  you create a connection to database
| [Monday 24 May 2010] [05:54:55] <mikko> like for example libev's case http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#Examples-8 
| [Monday 24 May 2010] [05:54:58] <sustrik_>  how do you integrate it with the loop?
| [Monday 24 May 2010] [05:55:52] <hassox>    lemme see if I can find someone who will be able to talk at the right level
| [Monday 24 May 2010] [05:56:53] <hassox>    I just grab a socket
| [Monday 24 May 2010] [05:57:03] <hassox>    but not sure underneath at the c level what it's actually doing
| [Monday 24 May 2010] [05:57:10] <hassox>    they don't look like they're about
| [Monday 24 May 2010] [05:58:13]      * hassox is looking
| [Monday 24 May 2010] [05:58:35] <sustrik_>  example:
| [Monday 24 May 2010] [05:58:43] <sustrik_>  s = create_socket (...);
| [Monday 24 May 2010] [05:58:51] <sustrik_>  loop.register (s);
| [Monday 24 May 2010] [05:59:00] <sustrik_>  does you use it in a similar way?
| [Monday 24 May 2010] [05:59:56] <hassox>    http://github.com/eventmachine/eventmachine/blob/650ff5e19ee87c0bceba46e5961c415d64e6e519/lib/em/protocols/socks4.rb
| [Monday 24 May 2010] [05:59:58] <hassox>    there's an example
| [Monday 24 May 2010] [06:00:48] <hassox>    here's the underlying class
| [Monday 24 May 2010] [06:00:48] <hassox>    http://github.com/eventmachine/eventmachine/blob/master/lib/em/connection.rb
| [Monday 24 May 2010] [06:02:15] <hassox>    all the c is in http://github.com/eventmachine/eventmachine/tree/master/ext/
| [Monday 24 May 2010] [06:02:18] <hassox>    i'll brb
| [Monday 24 May 2010] [06:02:48] <sustrik_>  i don't speak ruby, sorry, can you point me to the line where you open the socket?
| [Monday 24 May 2010] [06:32:59] <hassox>    sustrik_: an http connection http://github.com/eventmachine/eventmachine/blob/fb11a41671b5bc1b15372d319280cecf086c9104/lib/eventmachine.rb#L578
| [Monday 24 May 2010] [06:33:41] <hassox>    not sure what c is going on underneath
| [Monday 24 May 2010] [06:36:34] <sustrik_>  hassox: forget about c
| [Monday 24 May 2010] [06:36:42] <sustrik_>  what are you doing in ruby?
| [Monday 24 May 2010] [06:36:55] <hassox>    I use the higer level stuff
| [Monday 24 May 2010] [06:37:04] <sustrik_>  and that's?
| [Monday 24 May 2010] [06:37:10] <hassox>    I just fire up an http server, or smtp server
| [Monday 24 May 2010] [06:37:18] <hassox>    or both
| [Monday 24 May 2010] [06:37:33] <sustrik_>  and?
| [Monday 24 May 2010] [06:37:36] <hassox>    I'm trying to find someone who can talk at the right level
| [Monday 24 May 2010] [06:37:37] <hassox>    well
| [Monday 24 May 2010] [06:37:42] <hassox>    when ythe connection receives data
| [Monday 24 May 2010] [06:37:50] <hassox>    EM calls receive_data(data)
| [Monday 24 May 2010] [06:37:54] <hassox>    so you react to the event
| [Monday 24 May 2010] [06:38:02] <hassox>    I'm not describing this well :(
| [Monday 24 May 2010] [06:38:06] <sustrik_>  that's inside HTTP server?
| [Monday 24 May 2010] [06:38:12] <hassox>    maybe the concept will be easier to talk over node
| [Monday 24 May 2010] [06:38:17] <mikko> sustrik_: its probably like libevent http
| [Monday 24 May 2010] [06:38:41] <mikko> sustrik_: similar concept to http://3.rdrail.net/blog/libevent-webserver-in-40-lines-of-c/ 
| [Monday 24 May 2010] [06:38:45] <mikko> unless i am wrong
| [Monday 24 May 2010] [06:38:58] <mikko> underneath it uses normal event loop
| [Monday 24 May 2010] [06:39:00] <hassox>    the docs are better for node
| [Monday 24 May 2010] [06:39:05] <mikko> which usually polls a socket
| [Monday 24 May 2010] [06:39:05] <hassox>    http://nodejs.org/
| [Monday 24 May 2010] [06:39:12] <mikko> node.js is a lot more complicated
| [Monday 24 May 2010] [06:39:20] <hassox>    oh
| [Monday 24 May 2010] [06:39:26] <hassox>    :'(
| [Monday 24 May 2010] [06:39:32] <hassox>    damn I suck at talking about this
| [Monday 24 May 2010] [06:39:36] <hassox>    I'm sorry lads
| [Monday 24 May 2010] [06:39:47] <hassox>    I'm not familiar with territory this low down
| [Monday 24 May 2010] [06:40:02] <sustrik_>  np, can you check the mikko's link?
| [Monday 24 May 2010] [06:40:09] <sustrik_>  are you doing something similar?
| [Monday 24 May 2010] [06:41:31] <hassox>    I don't know C but the concept seems about right
| [Monday 24 May 2010] [06:42:02] <sustrik_>  so you launch a http server in your process
| [Monday 24 May 2010] [06:42:04] <mikko> it's a higher level abstraction where you talk 'http concepts' rather than raw sockets
| [Monday 24 May 2010] [06:42:10] <sustrik_>  and supply it a callback function
| [Monday 24 May 2010] [06:42:11] <mikko> but in the end its just an event loop
| [Monday 24 May 2010] [06:42:15] <hassox>    yeah
| [Monday 24 May 2010] [06:42:30] <hassox>    EventMachine and Node.js are both event loops at their hearts
| [Monday 24 May 2010] [06:43:02] <hassox>    but all the 0mq stuff I've seen talks about requiring 2 or more threads
| [Monday 24 May 2010] [06:43:03] <sustrik_>  hassox: ok, then you need to check your documentation whether there are extension points in the library you are using
| [Monday 24 May 2010] [06:43:44] <sustrik_>  i.e. ways to plug-in non-HTTP entities to the even loop
| [Monday 24 May 2010] [06:44:04] <mikko> hassox: http://www.igvita.com/2008/05/27/ruby-eventmachine-the-speed-demon/
| [Monday 24 May 2010] [06:44:10] <mikko> sometghing like that might be relevant to you
| [Monday 24 May 2010] [06:44:46] <hassox>    yeah that's just doing http servers
| [Monday 24 May 2010] [06:45:06] <mikko> hassox: why don't you use 0MQ's event loop?
| [Monday 24 May 2010] [06:45:09] <hassox>    what I would like to know is can I get a 0mq service running, or is it a must to use threads
| [Monday 24 May 2010] [06:45:12] <hassox>    there is one?
| [Monday 24 May 2010] [06:45:13] <mikko> or do you need the higher level abstraction?
| [Monday 24 May 2010] [06:45:33] <hassox>    I'd like to be able to use 0mq from my ruby or node programs
| [Monday 24 May 2010] [06:47:00] <hassox>    wondering if it's possible, or if I _need_ the threads
| [Monday 24 May 2010] [06:47:34] <mikko> ideally your event loop such as event machine would support "polling" a callback for events
| [Monday 24 May 2010] [06:47:59] <mikko> i would imagine it would be possible to create a struct with necessary io abstraction that would work with any data provider including zeromq
| [Monday 24 May 2010] [06:48:06] <mikko> whether event machine does that i dont know
| [Monday 24 May 2010] [06:49:32] <mikko> sustrik_: isn't XREQ / XREP non-blocking?
| [Monday 24 May 2010] [06:50:32] <mikko> (sorry if im confusing the issue more)
| [Monday 24 May 2010] [06:50:43] <hassox>    np
| [Monday 24 May 2010] [06:50:54] <hassox>    I'm just in really unfamiliar territory :(
| [Monday 24 May 2010] [06:53:08] <sustrik_>  mikko: any 0mq socket can be either blocking or non-blocking
| [Monday 24 May 2010] [06:53:16] <sustrik_>  s.recv (&msg);
| [Monday 24 May 2010] [06:53:18] <sustrik_>  vs.
| [Monday 24 May 2010] [06:53:23] <sustrik_>  s.recv (&msg, ZMQ_NOBLOCK);
| [Monday 24 May 2010] [06:53:32] <mikko> so the end result would be: you want to embed zmq into node.js/eventmachine loop and receive events and have the events fire the callbacks
| [Monday 24 May 2010] [06:53:49] <hassox>    that sounds like what I want
| [Monday 24 May 2010] [06:53:52] <mikko> this functionality depends on whether your event loop allows you to register custom resources with the loop
| [Monday 24 May 2010] [06:53:54] <sustrik_>  the XREP/XREQ allows you to have multiple request in the air at the same time
| [Monday 24 May 2010] [06:54:03] <mikko> as 0MQ does not expose the underlying sockets directly
| [Monday 24 May 2010] [06:55:19] <hassox>    mikko: but you connect to the 0MQ service via  a socket yeah?
| [Monday 24 May 2010] [06:55:38] <mikko> the socket 0MQ gives you is an abstraction
| [Monday 24 May 2010] [06:55:44] <mikko> not the raw underlying posix socket
| [Monday 24 May 2010] [06:56:03] <mikko> http://pastebin.com/zmaZe9QR
| [Monday 24 May 2010] [06:56:10] <mikko> as a very elementary pseudo-code
| [Monday 24 May 2010] [06:56:22] <mikko> i would imagine soemthing like that would be needed from the event loops side
| [Monday 24 May 2010] [06:56:28] <mikko> but i'm not 100% sure
| [Monday 24 May 2010] [06:56:47] <mikko> naturally you would need more abstraction but that should show the principle
| [Monday 24 May 2010] [06:57:34] <hassox>    kk
| [Monday 24 May 2010] [07:00:17] <hassox>    thanx lads
| [Monday 24 May 2010] [07:00:30] <hassox>    I'll talk to a guy I know who knows this stuff much better
| [Monday 24 May 2010] [07:00:36] <hassox>    it looks like it could work though :)
| [Monday 24 May 2010] [07:02:12] <mikko> what kind of messaging are you doing?
| [Monday 24 May 2010] [07:02:21] <mikko> are you trying to write a zmq server?
| [Monday 24 May 2010] [07:02:34] <mikko> or use 0mq within your existing server?
| [Monday 24 May 2010] [07:03:31] <hassox>    I'd like to use 0mq to talk between a bunch of http servers and supporting scripts
| [Monday 24 May 2010] [07:03:55] <mikko> http://github.com/mkoppanen/php-zmq/blob/master/examples/poll-server.php
| [Monday 24 May 2010] [07:03:56] <hassox>    atm I'm setting things up to use firewall settings and api keys for authentication, but a 0mq setup would make like a _lot_ better
| [Monday 24 May 2010] [07:04:03] <mikko> there is an example of php polling server
| [Monday 24 May 2010] [07:45:06] <cremes>    hassox: i am working on a "zmq-machine" in ruby; i should have something worthy of a push to github in another week or so
| [Monday 24 May 2010] [07:45:18] <cremes>    but for now, EM and 0mq can't interact
| [Monday 24 May 2010] [07:45:32] <hassox>    cremes: :D and :(
| [Monday 24 May 2010] [07:45:36] <cremes>    EM uses POSIX sockets while 0mq is an abstraction on top of POSIX sockets
| [Monday 24 May 2010] [07:46:09] <cremes>    e.g. you couldn't have an EM handler do a "connect" to a 0mq REQ socket
| [Monday 24 May 2010] [07:46:22] <hassox>    can you do it in normal ruby?
| [Monday 24 May 2010] [07:46:40] <cremes>    if you use the rbzmq or ffi-rzmq gems, then yes
| [Monday 24 May 2010] [07:46:50] <cremes>    you need something that "speaks" 0mq
| [Monday 24 May 2010] [07:47:11] <hassox>    right
| [Monday 24 May 2010] [07:47:22]      * hassox is looking frowardd to seeing what you come up with
| [Monday 24 May 2010] [07:47:43] <hassox>    does the zmq-machine use threads or does it assimilate into the event loop?
| [Monday 24 May 2010] [07:48:06] <cremes>    hassox: good question...
| [Monday 24 May 2010] [07:48:15] <cremes>    it will have a similar setup to EM
| [Monday 24 May 2010] [07:48:34] <cremes>    in EM we have the EM.run {} configuration
| [Monday 24 May 2010] [07:49:03] <cremes>    in zmq-machine it will be almost the same; something like ZM::Context.run {}
| [Monday 24 May 2010] [07:49:29] <cremes>    each Context will be its own thread; any sockets created within that context will all be non-blocking and will fire callbacks for events
| [Monday 24 May 2010] [07:49:42] <cremes>    *but* you can create multiple contexts each with its own thread
| [Monday 24 May 2010] [07:49:56] <cremes>    think of it as firing up a separate reactor loop for each thread
| [Monday 24 May 2010] [07:50:08] <cremes>    if EM allowed more than one reactor, we could already do this
| [Monday 24 May 2010] [07:50:18] <cremes>    make sense?
| [Monday 24 May 2010] [07:53:31] <hassox>    kinda
| [Monday 24 May 2010] [07:53:40] <hassox>    so 0mq won't be available as a callback inside the em
| [Monday 24 May 2010] [07:53:52] <hassox>    but rather it's a parallell event loop in the same process
| [Monday 24 May 2010] [07:56:43] <cremes>    hassox: yes, it is completely independent of EM; they can't work together
| [Monday 24 May 2010] [07:57:32] <hassox>    :(
| [Tuesday 25 May 2010] [03:04:25] <jugg> http://www.zeromq.org/docs:cookbook has been a great resource, however are there any open source programs out there extensively using 0mq?  I'd like to jump in on a functional code base and start playing around.
| [Tuesday 25 May 2010] [03:05:18] <jugg> (preferably c/c++ code base)
| [Tuesday 25 May 2010] [03:09:09] <sustrik_> jugg: there are projects out there
| [Tuesday 25 May 2010] [03:09:16] <sustrik_> try asking on the mailing list
| [Tuesday 25 May 2010] [03:09:32] <sustrik_> some projects would definitely appreciate help
| [Tuesday 25 May 2010] [04:58:58] <CIA-17>   zeromq2: 03Martin Sustrik 07master * rf34a468 10/ zmqd/zmqd.cpp : coding style fixed in zmqd -
| [Tuesday 25 May 2010] [09:05:00] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r8408ae0 10/ (9 files in 3 dirs): LWM is computed rather than explicitly specified by user - http://bit.ly/bHVtfR
| [Tuesday 25 May 2010] [11:22:22] <mikko>    sustrik_: again excessive bounces
| [Tuesday 25 May 2010] [11:22:27] <mikko>    re-enabled 
| [Tuesday 25 May 2010] [12:21:02] <Skaag1>   excuse me for the completely noobish question - but once zeromq is compiled, how do I start it?! :-)
| [Tuesday 25 May 2010] [12:21:10] <Skaag1>   no mention of that in the INSTALL file
| [Tuesday 25 May 2010] [12:21:28] <Skaag1>   and not in the Download page (which explains how to compile and install but not how to run it)
| [Tuesday 25 May 2010] [12:26:43] <cremes>   Skaag1: you don't actually start it; it's a library that you link in to your program (think libc)
| [Tuesday 25 May 2010] [12:27:01] <cremes>   take a look at the "perf" directory included with the distribution
| [Tuesday 25 May 2010] [12:27:13] <cremes>   there are a couple of small programs you can compile and run
| [Tuesday 25 May 2010] [12:34:35] <Skaag1>   gotcha
| [Tuesday 25 May 2010] [12:34:43] <Skaag1>   so in the case of php
| [Tuesday 25 May 2010] [12:34:51] <Skaag1>   since php is a one-time-run thing
| [Tuesday 25 May 2010] [12:34:58] <Skaag1>   how does it receive a message without waiting for it? :-)
| [Tuesday 25 May 2010] [12:35:03] <Skaag1>   who is queueing?
| [Tuesday 25 May 2010] [12:35:11] <Skaag1>   the sender?
| [Tuesday 25 May 2010] [12:35:35] <Skaag1>   I guess zeromq means there is no queue..? :)
| [Tuesday 25 May 2010] [12:35:49] <Skaag1>   it's either up and listening, or not
| [Tuesday 25 May 2010] [12:48:33] <Skaag1>   am I right? :)
| [Tuesday 25 May 2010] [13:05:49] <cremes>   Skaag1: you need to create a socket and bind (or connect) it to another socket; then you can send/recv between them
| [Tuesday 25 May 2010] [13:06:10] <cremes>   by default the sockets are blocking, so your "receive" client will block on recv until a message comes in
| [Tuesday 25 May 2010] [13:06:33] <cremes>   i think there are php bindings available up on github; i suggest looking at those and any sample code that ships with them
| [Tuesday 25 May 2010] [13:06:44] <cremes>   a little code is the best way to demystify how 0mq works
| [Tuesday 25 May 2010] [13:09:23] <Skaag1>   yes I know, I tested the php bindings
| [Tuesday 25 May 2010] [16:39:15] <sustrik_> mikko: is it ok now?
| [Tuesday 25 May 2010] [16:51:05] <cremes>   sustrik_: any chance you could give me a quick hand in building 0mq master? i run into a problem with configure:  http://pastie.org/976939
| [Tuesday 25 May 2010] [16:51:11] <cremes>   this is on osx intel
| [Tuesday 25 May 2010] [16:56:12] <mato> cremes: do you have pkg-config installed? that problem looks like you either don't have it or autoconf doesn't know about it
| [Tuesday 25 May 2010] [16:57:01] <cremes>   mato: i have version 0.23 installed
| [Tuesday 25 May 2010] [16:57:07] <cremes>   and it's in the path
| [Tuesday 25 May 2010] [16:57:52] <mato> cremes: well it looks like your autoconf install doesn't know about it
| [Tuesday 25 May 2010] [16:58:06] <mato> cremes: otherwise that PKG_CHECK_MODULES would have been expanded into the shell code
| [Tuesday 25 May 2010] [16:58:17] <cremes>   great...
| [Tuesday 25 May 2010] [16:58:37] <mato> i can't really help you with how to fix pkg-config on macosx, sorry
| [Tuesday 25 May 2010] [16:58:40] <mato> but i can offer a workarounfd
| [Tuesday 25 May 2010] [16:58:52] <mato> cremes: try ./configure --without-pkgconfig
| [Tuesday 25 May 2010] [16:59:05] <mato> which is intended for something else, but it might help you
| [Tuesday 25 May 2010] [16:59:28] <cremes>   no joy; same error
| [Tuesday 25 May 2010] [16:59:33] <mato> as for the root cause, on my debian box, pkg-config installs a /usr/share/aclocal/pkg.m4 file
| [Tuesday 25 May 2010] [16:59:41] <cremes>   (btw, the pastie i put up tried it with that option)
| [Tuesday 25 May 2010] [17:00:12] <mato> so you either don't have it, or it's somewhere where autoconf isn't looking for it
| [Tuesday 25 May 2010] [17:00:28] <cremes>   mine is located at /opt/local/share/aclocal/pkg.m4
| [Tuesday 25 May 2010] [17:00:49] <cremes>   let me see if there are upgrades available for autoconf, etc via macports
| [Tuesday 25 May 2010] [17:01:09] <cremes>   nope, all up to date 
| [Tuesday 25 May 2010] [17:01:19] <mato> what does aclocal --print-ac-dir say?
| [Tuesday 25 May 2010] [17:01:43] <cremes>   it says: /usr/bin/../share/aclocal
| [Tuesday 25 May 2010] [17:01:49] <mato> there you go
| [Tuesday 25 May 2010] [17:02:05] <mato> your aclocal is built wrong
| [Tuesday 25 May 2010] [17:02:22] <mato> d'you have an /opt/bin/aclocal, or what aclocal is the default on your path?
| [Tuesday 25 May 2010] [17:02:27] <mato> might be some apple acloal
| [Tuesday 25 May 2010] [17:02:50] <cremes>   yeah, the apple one is first; let me rearrange my path to find the other one first
| [Tuesday 25 May 2010] [17:03:43] <cremes>   er, aclocal is not in ports; is it part of a larger package?
| [Tuesday 25 May 2010] [17:03:50] <mato> automake
| [Tuesday 25 May 2010] [17:05:33] <mato> hmm
| [Tuesday 25 May 2010] [17:05:37] <mato> alternatively try
| [Tuesday 25 May 2010] [17:05:52] <cremes>   i just installed automake from ports and it included aclocal
| [Tuesday 25 May 2010] [17:05:58] <mato> ACLOCAL="aclocal --acdir=/opt/local/share/aclocal"
| [Tuesday 25 May 2010] [17:06:01] <mato> export ACLOCAL
| [Tuesday 25 May 2010] [17:06:07] <mato> and then run autogen.sh and configure
| [Tuesday 25 May 2010] [17:06:38] <mato> the autoreconf, aclocal man pages are your friend
| [Tuesday 25 May 2010] [17:07:08] <cremes>   success!
| [Tuesday 25 May 2010] [17:07:32] <mato> goodo
| [Tuesday 25 May 2010] [17:07:51] <cremes>   i have a login to the 0mq wiki; any chance i can update the FAQ to include this tidbit?
| [Tuesday 25 May 2010] [17:07:53] <mato> now report a bug to whoever provided your copy of aclocal :-)
| [Tuesday 25 May 2010] [17:08:05] <cremes>   heh
| [Tuesday 25 May 2010] [17:08:33] <mato> has someone else experienced the problem?
| [Tuesday 25 May 2010] [17:08:54] <cremes>   not that i am aware, but other osx users are likely to run into it if they try to build master
| [Tuesday 25 May 2010] [17:08:58] <mato> update the faq if you like, but put in something about complaining to your aclocal vendor :-)
| [Tuesday 25 May 2010] [17:09:12] <mato> please
| [Tuesday 25 May 2010] [17:09:13] <cremes>   ok
| [Tuesday 25 May 2010] [22:09:01] <jugg> is there any documentation/threads discussing the choice of lgpl3 for zeromq?
| [Wednesday 26 May 2010] [00:25:53] <sustrik_>   cremes: by all means update the faq
| [Wednesday 26 May 2010] [00:26:19] <sustrik_>   jugg: what exactly are you interested in?
| [Wednesday 26 May 2010] [00:26:26] <sustrik_>   lgpl vs. proprietary?
| [Wednesday 26 May 2010] [00:30:55] <jugg>   v3 is pretty invasive, so before bringing up any concerns, I'm interested in previous discussion to avoid re-hashing those issues/concerns.
| [Wednesday 26 May 2010] [00:32:45] <sustrik_>   invasive? it's lgpl not gpl
| [Wednesday 26 May 2010] [00:32:51] <sustrik_>   what are you trying to do?
| [Wednesday 26 May 2010] [00:33:21] <jugg>   lgplv3 is gplv3 with certain exceptions made.
| [Wednesday 26 May 2010] [00:33:56] <sustrik_>   yup, the exceptions result in "you can do whatever you want with the application using the library"
| [Wednesday 26 May 2010] [00:35:09] <zedas>  hey, on linux I'm finding zmq_poll kills my app thread, but i can't quite find out why.  here's the code: http://mulletdb.com/artifact?name=35bf3679dcef35fdefbfe19130a9d5abe1d4ee03
| [Wednesday 26 May 2010] [00:35:43] <zedas>  it's just one thread running a poll loop, but gdb shows that the thread running zmq_poll exits while the two running epoll donot
| [Wednesday 26 May 2010] [00:36:51] <sustrik_>   zedas: looks like the only way to exit the loop is through the die message
| [Wednesday 26 May 2010] [00:37:44] <zedas>  http://dpaste.de/dYJs/  heres' the backtrace in the threads
| [Wednesday 26 May 2010] [00:38:12] <sustrik_>   aha, or zmq_poll can return error
| [Wednesday 26 May 2010] [00:38:13] <zedas>  sustrik_: i thought too, but the thread exits immediately, it doesn't return back to the caller of zmq_poll.  
| [Wednesday 26 May 2010] [00:38:13] <jugg>   The main concern with v3 is that it controls the hardware system.  If, for instance, I wanted to lease/sell a hw system (box), and do so at a low cost because support contracts would be put in place - but including a v3 (lgpl/gpl) piece of software prevents me from locking down the software that is run on the box.  I'm happy to provide the source to said software, but I'm not happy to allow other uses of said box.  The v3 specfi
| [Wednesday 26 May 2010] [00:38:13] <jugg>   cally tries to prevent this (tivo).   So, using zeromq in such a platform is not possible.
| [Wednesday 26 May 2010] [00:38:22] <sustrik_>   then the loop would exit
| [Wednesday 26 May 2010] [00:38:30] <sustrik_>   can you check the actual error code?
| [Wednesday 26 May 2010] [00:38:31] <zedas>  yep, but i don't get an exit
| [Wednesday 26 May 2010] [00:38:55] <zedas>  so i put break points right after the zmq_poll call, also tried getting the return value
| [Wednesday 26 May 2010] [00:39:04] <zedas>  and not getting it.  just boom.
| [Wednesday 26 May 2010] [00:39:19] <zedas>  so, insize zmq.cpp there's code that gets the app_thread
| [Wednesday 26 May 2010] [00:39:38] <sustrik_>   hm, the backtrace looks like it's still inside zmq_poll
| [Wednesday 26 May 2010] [00:39:53] <sustrik_>   blocked maybe?
| [Wednesday 26 May 2010] [00:40:08] <zedas>  oh i stopped it
| [Wednesday 26 May 2010] [00:40:21] <zedas>  right at the poll so i can see what thread is dying
| [Wednesday 26 May 2010] [00:40:32] <zedas>  so basically i run that for a while, then pound it with a client
| [Wednesday 26 May 2010] [00:40:55] <zedas>  works fine but after a few thousand iterations that thread just exits right after the poll and doesn't come back to the caller
| [Wednesday 26 May 2010] [00:41:05] <sustrik_>   strange
| [Wednesday 26 May 2010] [00:41:16] <zedas>  so, i'm wondering if i wanted to try to catch that where would i breakpoint?  inside zmq.cpp?
| [Wednesday 26 May 2010] [00:42:13] <sustrik_>   what about stepping through the zmq_poll implementation and checking where exactly it exists?
| [Wednesday 26 May 2010] [00:42:14] <zedas>  i'm thinking that it might actually be exiting, but g++ might optimizing out the actual exit
| [Wednesday 26 May 2010] [00:42:36] <sustrik_>   zedas, by all means compile with CXXFLAGS="-g -O0"
| [Wednesday 26 May 2010] [00:42:37] <zedas>  well, i have to run it a shitload :-)
| [Wednesday 26 May 2010] [00:42:45] <zedas>  so it'd be a lot of stepping
| [Wednesday 26 May 2010] [00:43:05] <sustrik_>   try turning the optimisation off first
| [Wednesday 26 May 2010] [00:43:17] <zedas>  yep doing that
| [Wednesday 26 May 2010] [00:43:25] <zedas>  also, maybe strace?
| [Wednesday 26 May 2010] [00:44:28] <sustrik_>   jugg: i am not a IP lawyer :) please, do post your question to the mailing list
| [Wednesday 26 May 2010] [00:44:36] <sustrik_>   imatix should answer this
| [Wednesday 26 May 2010] [00:44:58] <sustrik_>   zedas: possibly
| [Wednesday 26 May 2010] [00:45:05] <jugg>   ok
| [Wednesday 26 May 2010] [01:01:35] <zedas>  sustrik_: nope still doing it
| [Wednesday 26 May 2010] [01:03:11] <sustrik_>   zedas: it's really strange, i cannot think of thread unexpectedly exiting aside of some serious stack overwrite
| [Wednesday 26 May 2010] [01:03:14] <sustrik_>   anyway
| [Wednesday 26 May 2010] [01:03:37] <sustrik_>   sanity check: can you add a printf after the loop?
| [Wednesday 26 May 2010] [01:03:59] <sustrik_>   just to be 100% sure that the thread disappers rather then exits?
| [Wednesday 26 May 2010] [01:05:35] <zedas>  sustrik_: exactly,
| [Wednesday 26 May 2010] [01:05:57] <zedas>  sustrik_: yep done that, breakpoints, everything.  i'm now thinking memory/stack overflow
| [Wednesday 26 May 2010] [01:06:17] <zedas>  doing one more thing next.  i do a while(true) so it never exits and see what i get
| [Wednesday 26 May 2010] [01:07:48] <zedas>  sustrik_: you're right, this *has* to be a stack overflow.  i shall valgrind it.
| [Wednesday 26 May 2010] [01:08:09] <sustrik_>   try that -- i really haven't seen it behave like this
| [Wednesday 26 May 2010] [01:08:15] <sustrik_>   something strange going on
| [Wednesday 26 May 2010] [01:42:08] <zedas>  sustrik_: yep, stack smash.  there's a piece of another library i'm using that had a stray free where it didn't belong.
| [Wednesday 26 May 2010] [01:42:31] <zedas>  removed it and so far it seems to be stable, although leaking.  i'll let you know if it holds true
| [Wednesday 26 May 2010] [01:43:29] <sustrik_>   zedas: great, thanks
| [Wednesday 26 May 2010] [07:08:22] <sjampoo>    have been lurking on the mailinglist, zmq_wait_fd looks REALLY useful. Just to make sure i understand this correct. I can poll on the fd with just regular EPOLL and when something is ready i can just call zmq_recv, right? 
| [Wednesday 26 May 2010] [07:14:08] <sustrik>    sjampoo: it's a bit more complex
| [Wednesday 26 May 2010] [07:14:22] <sustrik>    when fd is ready
| [Wednesday 26 May 2010] [07:14:46] <sustrik>    it means "something had happened" within 0MQ library
| [Wednesday 26 May 2010] [07:15:09] <sustrik>    then you have to check whether there messages available
| [Wednesday 26 May 2010] [07:15:35] <sustrik>    but maybe there are no messages
| [Wednesday 26 May 2010] [07:15:40] <sjampoo>    Aha.
| [Wednesday 26 May 2010] [07:16:04] <sjampoo>    Ok, well it would still help me in some way, i could do the main polling with EPOLL and on a signal i could do a non blocking zmq_poll
| [Wednesday 26 May 2010] [07:16:19] <sustrik>    sjampoo: exactly
| [Wednesday 26 May 2010] [07:16:21] <sjampoo>    wonder how the performance would differ compared to just building around zmq_poll
| [Wednesday 26 May 2010] [07:16:38] <sustrik>    + the overhead of epoll :)
| [Wednesday 26 May 2010] [07:17:19] <sjampoo>    Yes, it would be a bit slower for 0MQ sockets but most of my data is through regular sockets unfortunately
| [Wednesday 26 May 2010] [07:17:39] <sjampoo>    And i experienced that using EPOLL is faster for that. 
| [Wednesday 26 May 2010] [07:17:46] <sustrik>    definitely
| [Wednesday 26 May 2010] [07:18:27] <sjampoo>    in this situation i don't really care if the signal fd is for a socket or a context
| [Wednesday 26 May 2010] [07:18:40] <sjampoo>    It could even be part of the Poll set
| [Wednesday 26 May 2010] [07:18:47] <sjampoo>    but anyway it all makes me happy :)
| [Wednesday 26 May 2010] [07:18:56] <sustrik>    great :)
| [Wednesday 26 May 2010] [07:27:40] <jugg>   lines 129 and 131 seems to be swapped: http://github.com/mato/zeromq-examples/blob/master/zmq-camera.c  from the documentation, it seems the local loopback should be using zmq_bind, and the remote end point should be using zmq_connect.  Am I confused?
| [Wednesday 26 May 2010] [07:30:50] <sustrik>    jugg: i am not familiar with the example, but it used to work
| [Wednesday 26 May 2010] [07:30:59] <sustrik>    why do you believe it's swapped?
| [Wednesday 26 May 2010] [07:36:09] <jugg>   zmq_bind - assign a local address to a socket, zmq_connect - connect a socket to a peer address  (more detail in the docs), const char local_camera[] = "inproc://local-camera"; and the comment above the two lines in question.
| [Wednesday 26 May 2010] [07:37:18] <jugg>   swapped meaning that zmq_bind should be used on local_camera, and zmq_connect should be used on sender_args->endpoint
| [Wednesday 26 May 2010] [07:38:14] <sustrik>    ah
| [Wednesday 26 May 2010] [07:38:32] <sustrik>    afaiu "local camera" means that it runs in the same process
| [Wednesday 26 May 2010] [07:39:03] <sustrik>    "assign a local address to a socket" means local NIC (on this box)
| [Wednesday 26 May 2010] [07:39:15] <sustrik>    local != local :)
| [Wednesday 26 May 2010] [07:39:41] <sustrik>    the comment is confusing
| [Wednesday 26 May 2010] [07:40:24] <sustrik>    maybe local_camera should be renamed to my_camera?
| [Wednesday 26 May 2010] [07:42:51] <jugg>   I think I need to better understand the differences between bind/connect...
| [Wednesday 26 May 2010] [07:43:23] <sustrik>    the documentation should be improved...
| [Wednesday 26 May 2010] [07:43:37] <sustrik>    the last wording we came with was:
| [Wednesday 26 May 2010] [07:43:46] <sustrik>    "bind" creates an endpoint
| [Wednesday 26 May 2010] [07:44:01] <sustrik>    "connect" establishes a connection to the endpoint
| [Wednesday 26 May 2010] [07:44:08] <sustrik>    does that make more sense?
| [Wednesday 26 May 2010] [07:51:56] <jugg>   yes, assuming my understanding is correct :P  where are endpoints discussed in the documentation?
| [Wednesday 26 May 2010] [07:53:00] <sjampoo>    jugg, i am not really sure if there is any specific documentation about that. 
| [Wednesday 26 May 2010] [07:53:07] <sjampoo>    But i had trouble understanding that as well
| [Wednesday 26 May 2010] [07:53:50] <sjampoo>    I had an eureka moment when i saw there 0MQ allows you to design a messaging system at two different levels
| [Wednesday 26 May 2010] [07:54:06] <sjampoo>    First the infrastructure, who connects to who (bind/connect)
| [Wednesday 26 May 2010] [07:54:22] <sjampoo>    Ie, multiple clients usually connect to a single server which binds to a single port
| [Wednesday 26 May 2010] [07:54:34] <sjampoo>    Then at the second level you have the data flow
| [Wednesday 26 May 2010] [07:55:00] <sjampoo>    Ie, you can bind to port and subscribe to all message OR publish to it
| [Wednesday 26 May 2010] [07:57:17] <sustrik>    sjampoo, yes, that's missing from the docs
| [Wednesday 26 May 2010] [07:57:31]   * sustrik wonders how to get thus kind of insights in
| [Wednesday 26 May 2010] [07:58:35] <jugg>   hmm, "who connects to who" may hit on some of the missunderstanding for me... is it the case that in a P2P socket, one has to bind, the other connect?
| [Wednesday 26 May 2010] [07:58:52] <jugg>   sustrik: diagrams
| [Wednesday 26 May 2010] [07:58:58] <sustrik>    jugg: yes
| [Wednesday 26 May 2010] [07:59:06] <sustrik>    what kind of diagrams?
| [Wednesday 26 May 2010] [08:00:31] <jugg>   connection and data flow
| [Wednesday 26 May 2010] [08:01:12] <jugg>   do you have a term for an entity implementing zmq?  eg. client or ?
| [Wednesday 26 May 2010] [08:01:40] <jugg>   there are various roles of course, client, service, broker etc
| [Wednesday 26 May 2010] [08:03:34] <jugg>   but anyway, diagrams showing zmq entities, which one uses connect, which uses bind, and the type of socket used, and data flow between them.  ??
| [Wednesday 26 May 2010] [08:04:03] <sustrik>    jugg: i fear the connection diagrams would be dead trivial
| [Wednesday 26 May 2010] [08:04:08] <sustrik>    showing two nodes
| [Wednesday 26 May 2010] [08:04:12] <sustrik>    one doing bind
| [Wednesday 26 May 2010] [08:04:16] <sustrik>    another one connect
| [Wednesday 26 May 2010] [08:04:20] <jugg>   perfect
| [Wednesday 26 May 2010] [08:04:24] <sustrik>    :)
| [Wednesday 26 May 2010] [08:04:24] <jugg>   :)
| [Wednesday 26 May 2010] [08:05:10] <pieterh>    i'm making new documentation
| [Wednesday 26 May 2010] [08:05:19] <pieterh>    it'll be on the website as wiki text
| [Wednesday 26 May 2010] [08:05:25] <pieterh>    so anyone can join in and edit
| [Wednesday 26 May 2010] [08:05:25] <jugg>   I think I'm getting passed the point of needing the diagrams with this discussion, but newbies are a blank slate, bind,connect,socket have no meaning.  Simple diagrams quickly get us passed the blank slate state. :)
| [Wednesday 26 May 2010] [08:05:34] <pieterh>    @jugg: ack
| [Wednesday 26 May 2010] [08:05:56] <pieterh>    my big advantage is that i'm a newbie :-)
| [Wednesday 26 May 2010] [08:06:06] <pieterh>    slates don't come much blanker than me
| [Wednesday 26 May 2010] [08:06:10] <sustrik>    i think sjampoo's comment about having two separate phases (establishing connections / sending messages) is important
| [Wednesday 26 May 2010] [08:06:18] <jugg>   :)
| [Wednesday 26 May 2010] [08:06:29] <sustrik>    if user doesn't get that he's lost
| [Wednesday 26 May 2010] [08:06:45] <pieterh>    @sustrik: normally these would be formalized in user-level APIs, no?
| [Wednesday 26 May 2010] [08:07:01] <sustrik>    connect/bind vs. send/recv
| [Wednesday 26 May 2010] [08:07:03] <pieterh>    topology being hidden
| [Wednesday 26 May 2010] [08:07:31] <jugg>   sustrik: your original clarification above: create endpoint, connect to endpoint was a big help as well.
| [Wednesday 26 May 2010] [08:08:15] <pieterh>    @jugg: we argued about this for a while, I insist that 0MQ *does* have connections, except they're not TCP connections but 0MQ connections
| [Wednesday 26 May 2010] [08:08:20] <jugg>   my original read of the documentation was that it was necessary to use two different functions depending if I was connecting locally or remotely.
| [Wednesday 26 May 2010] [08:08:43] <pieterh>    the local/remote explanation is misleading
| [Wednesday 26 May 2010] [08:08:44] <sustrik>    yes, that's confusing
| [Wednesday 26 May 2010] [08:08:51] <pieterh>    you can connect to a local socket
| [Wednesday 26 May 2010] [08:09:04] <pieterh>    it's about creating directed 0MQ connections (arrows)
| [Wednesday 26 May 2010] [08:09:09] <sustrik>    zmq_connect(3) and zmq_bind(3) should be fixed
| [Wednesday 26 May 2010] [08:09:11] <pieterh>    in my blank slate mind, anyhow
| [Wednesday 26 May 2010] [08:09:55] <pieterh>    @sustrik: it would be helpful IMO to stop saying that "0MQ does not have connections"
| [Wednesday 26 May 2010] [08:10:09] <pieterh>    it is freaky to have to "connect" and then think "there are no connections"
| [Wednesday 26 May 2010] [08:10:48] <jugg>   now, one more clarification point... even if I bind a socket, I can still send - ie, bind/recv and connect/send are not coupled, correct?
| [Wednesday 26 May 2010] [08:11:05] <jugg>   that being to pieterh's point
| [Wednesday 26 May 2010] [08:11:18] <sjampoo>    jugg, exactly
| [Wednesday 26 May 2010] [08:11:25] <sustrik>    yes
| [Wednesday 26 May 2010] [08:11:27] <pieterh>    you can always send but it won't go anywhere, right?
| [Wednesday 26 May 2010] [08:11:36] <jugg>   sjampoo: sorry, that was your point. :)
| [Wednesday 26 May 2010] [08:11:39] <sustrik>    it's either queued or dropped
| [Wednesday 26 May 2010] [08:11:51] <sustrik>    depending on the messaging pattern
| [Wednesday 26 May 2010] [08:11:54] <pieterh>    right
| [Wednesday 26 May 2010] [08:12:17] <jugg>   does bind/connect have to do more with queues?
| [Wednesday 26 May 2010] [08:12:37] <pieterh>    bind creates an endpoint and connect creates a 0MQ connection to that endpoint
| [Wednesday 26 May 2010] [08:12:46] <pieterh>    once the connection exists, messages may flow across it
| [Wednesday 26 May 2010] [08:12:47] <jugg>   yes, what is an endpoint?
| [Wednesday 26 May 2010] [08:12:58] <pieterh>    an endpoint is a socket that accepts connections :-)
| [Wednesday 26 May 2010] [08:13:06] <pieterh>    it is a connection endpoint
| [Wednesday 26 May 2010] [08:13:10] <pieterh>    not a messaging endpoint
| [Wednesday 26 May 2010] [08:13:17] <sustrik>    it can also be a device
| [Wednesday 26 May 2010] [08:13:31] <pieterh>    topology construction, ball & socket
| [Wednesday 26 May 2010] [08:13:41] <pieterh>    devices can have sockets and ... dare I say it... balls
| [Wednesday 26 May 2010] [08:14:10] <sjampoo>    balls?
| [Wednesday 26 May 2010] [08:14:12] <pieterh>    i am abusing "socket" now... :-(
| [Wednesday 26 May 2010] [08:14:13] <sjampoo>    heh
| [Wednesday 26 May 2010] [08:15:15] <sjampoo>    oh, as in a bone joint...
| [Wednesday 26 May 2010] [08:15:16] <jugg>   so, in p2p terms, either peer can accept connections (bind) or make a connection (connect), regardless of the direction the connection was made, both peers can send/recv messages over that connection.
| [Wednesday 26 May 2010] [08:15:40] <pieterh>    @jugg, last part depends on socket types
| [Wednesday 26 May 2010] [08:15:49] <pieterh>    but otherwise, yes
| [Wednesday 26 May 2010] [08:16:08] <jugg>   socket type p2p
| [Wednesday 26 May 2010] [08:16:22] <pieterh>    usually but not always the "client" connects to the "server"
| [Wednesday 26 May 2010] [08:16:43] <pieterh>    but you can usefully have cases where the "server" will connect to the "client", e.g. to get out from firewalls
| [Wednesday 26 May 2010] [08:17:08] <jugg>   yes, the peer accepting connections (bind) is the "server", the one making the connection (connect) is the "client"
| [Wednesday 26 May 2010] [08:17:19] <pieterh>    it's the common model
| [Wednesday 26 May 2010] [08:17:54] <jugg>   I don't think any of my last three comments are incorrect? (hopefully)
| [Wednesday 26 May 2010] [08:17:56] <pieterh>    (of course we can do lots of weird stuff but knowing that is not helpful to newbies)
| [Wednesday 26 May 2010] [08:18:16] <pieterh>    @jugg, no, but the last one was totally incorrect!
| [Wednesday 26 May 2010] [08:18:26] <pieterh>    :-) 
| [Wednesday 26 May 2010] [08:18:28] <jugg>   poor me :)
| [Wednesday 26 May 2010] [08:20:56] <jugg>   ok, the socket type doesn't dictate the server/client role?
| [Wednesday 26 May 2010] [08:21:23] <jugg>   eg. I can set up a ZMQ_PUB socket, and it could be used in zmq_bind or zmq_connect, yes?
| [Wednesday 26 May 2010] [08:21:33] <pieterh>    @jugg, yes
| [Wednesday 26 May 2010] [08:21:47] <pieterh>    a publisher can connect to a subscriber
| [Wednesday 26 May 2010] [08:21:57] <pieterh>    but that's a weird usecase which I'd want to hide from newbies
| [Wednesday 26 May 2010] [08:22:20] <jugg>   and that goes for the rest of the socket types as well?  socket type is bind/connect agnostic?
| [Wednesday 26 May 2010] [08:22:26] <pieterh>    yes
| [Wednesday 26 May 2010] [08:22:42] <jugg>   ok, things are falling into place.  slowly... :)
| [Wednesday 26 May 2010] [08:22:48] <pieterh>    @sustrik: i'm likely to say stupid things, please correct me if I'm wrong...
| [Wednesday 26 May 2010] [08:23:04] <sustrik>    you are right, np
| [Wednesday 26 May 2010] [08:23:08] <pieterh>    nice!
| [Wednesday 26 May 2010] [08:23:17] <jugg>   blind leading the blind, how nice :)
| [Wednesday 26 May 2010] [08:23:35] <sustrik>    now you see the problems with docs i mentioned last week
| [Wednesday 26 May 2010] [08:23:37] <pieterh>    @jugg: i have one eye slightly open... can just about make out the crevasses
| [Wednesday 26 May 2010] [08:23:55] <pieterh>    @sustrik: yes, it's pretty clear we have a lot of work to do documenting the basics
| [Wednesday 26 May 2010] [08:24:09] <pieterh>    i'll have a first draft ready real soon
| [Wednesday 26 May 2010] [08:26:42] <jugg>   ok, best practice documentation, or tradeoff discussion on setting up the network topology - ie, deciding who should bind, who should connect.
| [Wednesday 26 May 2010] [08:27:40] <jugg>   eg, how can I assure that messages I'm sending out are not dropped into oblivion if the other side of the connection doesn't yet exist?
| [Wednesday 26 May 2010] [08:28:47] <sustrik>    yes
| [Wednesday 26 May 2010] [08:28:54] <pieterh>    @jugg, yes
| [Wednesday 26 May 2010] [08:29:19] <jugg>   yes, I can assure this?
| [Wednesday 26 May 2010] [08:29:30] <pieterh>    yes, documenting best practice
| [Wednesday 26 May 2010] [08:29:41] <pieterh>    as to how to assure it, it depends on the socket types
| [Wednesday 26 May 2010] [08:30:07] <pieterh>    best practice in some scenarios is "drop stuff you can't deliver"
| [Wednesday 26 May 2010] [08:32:03] <jugg>   sorry, slightly lost,  this is what you are currently working on documenting, or it is already documented somewhere, if so, where?  :)
| [Wednesday 26 May 2010] [08:33:04] <pieterh>    @jugg: i am working on that documentation now
| [Wednesday 26 May 2010] [08:34:09] <jugg>   cool
| [Wednesday 26 May 2010] [08:34:30] <pieterh>    i'll put it up as wiki text with space for comments and/or arbitrary contributions
| [Wednesday 26 May 2010] [08:44:00] <cremes> jugg: regarding your question about assuring messages you send are not dropped because the other side doesn't exist yet...
| [Wednesday 26 May 2010] [08:44:04] <cremes> here is how i solve that
| [Wednesday 26 May 2010] [08:44:28] <cremes> if i am going to have a PUB socket deliver data, i don't allow it to start until there is at least one request
| [Wednesday 26 May 2010] [08:44:49] <cremes> so i pair up my PUB socket with a REP socket that i bind to an endpoint
| [Wednesday 26 May 2010] [08:45:24] <cremes> clients that want data can connect to my REP socket with a REQ socket and send me a request
| [Wednesday 26 May 2010] [08:45:38] <cremes> upon receipt, i begin publishing
| [Wednesday 26 May 2010] [08:46:17] <cremes> that "pattern" has been working well
| [Wednesday 26 May 2010] [08:48:12] <jugg>   what does "pair up" mean?
| [Wednesday 26 May 2010] [08:49:23] <jugg>   using an zmq concept, or simply as an internal meta relationship?
| [Wednesday 26 May 2010] [08:49:26] <cremes> "pair up" means that my server uses both PUB and REP sockets to provide services; REP for receiving the first request, PUB to send the data
| [Wednesday 26 May 2010] [08:49:35] <cremes> internal meta relationship
| [Wednesday 26 May 2010] [08:49:55] <jugg>   ok, that makes sense.
| [Wednesday 26 May 2010] [08:50:41] <cremes> i use REQ/REP sockets to transition my servers through a state machine and other socket types for mass-data delivery
| [Wednesday 26 May 2010] [08:51:14] <cremes> the semantics of each 0mq socket type make this easier to think about nwo that i have gotten past the bind/connect confusion :)
| [Wednesday 26 May 2010] [08:54:39] <jugg>   so any quick pointers on choosing bind/connect and socket types?  Currently, I have several nodes, four of them are chained in a one way message passing n1->n2->n3->n4.  Another node (n0) exists that receives requests from any other nodes and responds to those messages n1@->n0, n2@->n0, n3@->n0, n4@->n0 (the @ deliniating response to -> request).  Also, n3 must subscribe to publications by n0 (which is the only publication from n0).
| [Wednesday 26 May 2010] [08:55:22] <jugg>   the REQ/REP seems obvious for the nX@->n0 interface
| [Wednesday 26 May 2010] [08:55:42] <jugg>   But I'm uncertain whether to use PUB/SUB or P2P for the chaining.
| [Wednesday 26 May 2010] [08:56:47] <jugg>   I think what cremes just described makes good sense for the n3 subscription to n0.
| [Wednesday 26 May 2010] [08:57:58] <jugg>   I'd probably go with bind/connect based on message direction for the chaining, the receiving binding, the sender connecting.  But I have no basis for that other than simplicity of thinking.
| [Wednesday 26 May 2010] [09:00:20] <jugg>   hmm, n1-4 also send messages to n0 which don't require a response.
| [Wednesday 26 May 2010] [09:00:58] <sustrik>    cremes: connecting PUB socket to REP socket is not a good idea
| [Wednesday 26 May 2010] [09:01:17] <sustrik>    why not have REQ instead of PUB?
| [Wednesday 26 May 2010] [09:01:31] <jugg>   I don't think he is doing that?
| [Wednesday 26 May 2010] [09:01:45] <sustrik>    ah
| [Wednesday 26 May 2010] [09:01:48] <sustrik>    pair
| [Wednesday 26 May 2010] [09:01:55] <sustrik>    != connect
| [Wednesday 26 May 2010] [09:02:01] <sustrik>    sorry for confusion
| [Wednesday 26 May 2010] [09:05:42] <jugg>   ipc vs tcp loopback,  any obvious reason to go one way or the other?
| [Wednesday 26 May 2010] [09:05:54] <sustrik>    ipc is faster on linux
| [Wednesday 26 May 2010] [09:07:20] <sustrik>    pieterh: here you go - how to run perf tests: http://www.zeromq.org/results:perf-howto
| [Wednesday 26 May 2010] [09:07:27] <pieterh>    thanks!
| [Wednesday 26 May 2010] [09:08:16] <jugg>   I think in the nX@->n0 interface, n0 will bind, nX will connect.
| [Wednesday 26 May 2010] [09:09:28] <jugg>   is there a performance difference in the chaining example if I use PUB/SUB vs P2P
| [Wednesday 26 May 2010] [09:09:33] <cremes> jugg: right, n0 should probably bind and let the other nodes connect to it
| [Wednesday 26 May 2010] [09:10:00] <cremes> jugg: p2p is kind of broken right now; use PUB
| [Wednesday 26 May 2010] [09:10:37] <sustrik>    right
| [Wednesday 26 May 2010] [09:11:44] <sustrik>    n1-n4 is a processing pipeline?
| [Wednesday 26 May 2010] [09:11:48] <jugg>   yes
| [Wednesday 26 May 2010] [09:12:04] <sustrik>    have a look at UPSTREAM/DOWNSTREAM sockets then
| [Wednesday 26 May 2010] [09:12:20] <sustrik>    that's what they are meant for
| [Wednesday 26 May 2010] [09:12:49] <sustrik>    summary:
| [Wednesday 26 May 2010] [09:13:07] <sustrik>    n1->n2->n3->n4: UPSTREAM/DOWNSTREAM
| [Wednesday 26 May 2010] [09:13:19] <sustrik>    nX@->n0: REQ/REP
| [Wednesday 26 May 2010] [09:13:35] <sustrik>    publications from n0: PUB/SUB
| [Wednesday 26 May 2010] [09:16:32] <jugg>   hmm, so each of n1-n4 could be load balanced.  or if only one instance of each n1-n4 exists, it'll simply behave as a one way message passing?
| [Wednesday 26 May 2010] [09:18:17] <sustrik>    it's load-balancing among *one* service :)
| [Wednesday 26 May 2010] [09:18:31] <sustrik>    = simply pass the message to next node
| [Wednesday 26 May 2010] [09:18:44] <jugg>   yes, ok. :)
| [Wednesday 26 May 2010] [09:18:52] <sustrik>    however you can add more nodes in the future if needed
| [Wednesday 26 May 2010] [09:19:40] <jugg>   why is "component" emphasised in the docs, does it mean something special? It isn't just a node like any other?
| [Wednesday 26 May 2010] [09:19:57] <sustrik>    where's that?
| [Wednesday 26 May 2010] [09:20:13] <jugg>   " Parallelized pipeline pattern" for the socket type
| [Wednesday 26 May 2010] [09:20:45] <sustrik>    no idea
| [Wednesday 26 May 2010] [09:20:57] <sustrik>    probably a typo
| [Wednesday 26 May 2010] [09:21:06] <sustrik>    mato: any reason for that?
| [Wednesday 26 May 2010] [09:21:09] <jugg>   and is "messaging pattern" and "socket type" something different?
| [Wednesday 26 May 2010] [09:21:25] <sustrik>    yes, patter is say "request/reply"
| [Wednesday 26 May 2010] [09:21:35] <sustrik>    it consists of REQ and REP socket types
| [Wednesday 26 May 2010] [09:21:44] <jugg>   ah
| [Wednesday 26 May 2010] [09:22:22] <jugg>   that is obvious, I was confusing myself.
| [Wednesday 26 May 2010] [09:24:01] <jugg>   or perhaps the text: "The following messaging patterns are defined" could be changed to something like "The following messaging patterns are defined describing which socket types should be used for binding and connecting to an endpoint"
| [Wednesday 26 May 2010] [09:24:42] <jugg>   or not...
| [Wednesday 26 May 2010] [09:25:00] <jugg>   trying to processing too much info :)
| [Wednesday 26 May 2010] [09:26:05] <jugg>   sustrik: thanks for the summary above
| [Wednesday 26 May 2010] [09:26:32] <sustrik>    jugg: feel free to submit documentation patches
| [Wednesday 26 May 2010] [09:28:11] <jugg>   I assume the docs on the website correspond to the zeromq2/docs/*.txt  (I've been reading the website)
| [Wednesday 26 May 2010] [09:28:59] <jugg>   and it looks like patches should be sent to the mailing list vs pull requests via github?
| [Wednesday 26 May 2010] [09:29:29] <sustrik>    via mailing list, stating it's submitted under MIT license
| [Wednesday 26 May 2010] [09:29:50] <sustrik>    pieter: the people who join the wiki cannot edit pages
| [Wednesday 26 May 2010] [09:30:01] <sustrik>    is that deliberate?
| [Wednesday 26 May 2010] [09:30:10] <sustrik>    pieterh:
| [Wednesday 26 May 2010] [09:30:20] <pieterh>    sustrik: ja?
| [Wednesday 26 May 2010] [09:30:24] <sustrik>    see above
| [Wednesday 26 May 2010] [09:30:28] <pieterh>    i see, hang on
| [Wednesday 26 May 2010] [09:30:39] <pieterh>    it's normal for some categories, not for others
| [Wednesday 26 May 2010] [09:30:49] <pieterh>    let me double check, what categories are you talking about?
| [Wednesday 26 May 2010] [09:31:03] <jugg>   http://www.zeromq.org/area:licensing  well that answers my gpl3 tivo question
| [Wednesday 26 May 2010] [09:31:09] <sustrik>    http://www.zeromq.org/build-v20
| [Wednesday 26 May 2010] [09:32:02] <pieterh>    @sustrik: pages in the default area need to be moved
| [Wednesday 26 May 2010] [09:32:12] <pieterh>    sorry, default catergory
| [Wednesday 26 May 2010] [09:32:22] <pieterh>    and the area: category is not open to all people to edit
| [Wednesday 26 May 2010] [09:32:38] <pieterh>    the wiki probably needs redesigning, we should discuss this 
| [Wednesday 26 May 2010] [09:33:54] <pieterh>    @jugg: tivoization is a perfectly good business model for some people
| [Wednesday 26 May 2010] [09:34:17] <sustrik>    ???!!!
| [Wednesday 26 May 2010] [09:34:24] <sustrik>    i cannot edit nav:side :(
| [Wednesday 26 May 2010] [09:34:31] <pieterh>    sustrik: ? hang on
| [Wednesday 26 May 2010] [09:35:12] <jugg>   meh, zeromq licensing makes no sense.
| [Wednesday 26 May 2010] [09:36:43] <pieterh>    sustrik: if you can't edit a page it's probably because you are not logged in
| [Wednesday 26 May 2010] [09:36:51] <pieterh>    @jugg: what do you mean?
| [Wednesday 26 May 2010] [09:37:27] <pieterh>    @sustrik: you are site admin, always have been, and have full edit rights over everything
| [Wednesday 26 May 2010] [09:38:30] <sustrik>    oops
| [Wednesday 26 May 2010] [09:38:35] <sustrik>    it's ok
| [Wednesday 26 May 2010] [09:40:09] <jugg>   pieterh: well, ignoring the stupidity of gpl3 anti-tivo, and looking only at my contributions must be MIT licensed (purely for the benefit of imatix), I myself and others can only use contributions under lgpl3.  Basically, this means that contributors are working for free for imatix.  Normally open source projects, contributs work for free for the project.  This is not the case here.
| [Wednesday 26 May 2010] [09:40:44] <jugg>   sorry for grammar/spelling, I'm getting tired... :)
| [Wednesday 26 May 2010] [09:41:06] <pieterh>    @jugg, fair points
| [Wednesday 26 May 2010] [09:41:13] <pieterh>    however imatix works for free for you too
| [Wednesday 26 May 2010] [09:41:38] <pieterh>    so it's not an unfair deal to ask that we can try to make a viable business
| [Wednesday 26 May 2010] [09:41:56] <pieterh>    you don't need to give us patches
| [Wednesday 26 May 2010] [09:42:50] <pieterh>    however if you want us to maintain your patches in the official product, we ask for MIT licensing OR copyright transfer
| [Wednesday 26 May 2010] [09:43:07] <pieterh>    you can always just redistribute your modified libraries under the LGPL, period
| [Wednesday 26 May 2010] [09:43:23] <pieterh>    as for the GPL3's "stupidity"... we disagree
| [Wednesday 26 May 2010] [09:43:33] <pieterh>    i've been using the GPL since... 1991 or so for my work
| [Wednesday 26 May 2010] [09:44:15] <pieterh>    and the principle of enforcing "share-alike" is important IMO
| [Wednesday 26 May 2010] [09:45:26] <pieterh>    what do you see as the problem with this model?
| [Wednesday 26 May 2010] [09:46:30] <sustrik>    anti-tivo caluse in gpl3 is not about share-alike, it's about free (as is speech) hardware
| [Wednesday 26 May 2010] [09:46:54] <pieterh>    why do you say so?
| [Wednesday 26 May 2010] [09:47:07] <pieterh>    it is about preventing people from not sharing
| [Wednesday 26 May 2010] [09:47:23] <pieterh>    it is about enforcing the spirit of the GPL: you use my work, you share improvements
| [Wednesday 26 May 2010] [09:47:26] <sustrik>    you can redistribute the source and still lock you hw device no?
| [Wednesday 26 May 2010] [09:47:31] <pieterh>    Tivo hacked the GPL to find a way around that
| [Wednesday 26 May 2010] [09:47:56] <sustrik>    i am not an expert anyway
| [Wednesday 26 May 2010] [09:48:19] <pieterh>    The GPL does not try to force anything on HW producers
| [Wednesday 26 May 2010] [09:48:27] <pieterh>    it is purely a license for using someone's work
| [Wednesday 26 May 2010] [09:48:39] <sustrik>    ok, ianal
| [Wednesday 26 May 2010] [09:49:10] <pieterh>    ianal either but have been working with licenses for close on two decades
| [Wednesday 26 May 2010] [09:49:35] <pieterh>    the dual-license option is actually win-win
| [Wednesday 26 May 2010] [09:50:06] <pieterh>    commercial firms can still build no-share products but they pay for the right to escape, so they are not cheating
| [Wednesday 26 May 2010] [09:50:17] <pieterh>    and contributors are assured that their work is not closed off
| [Wednesday 26 May 2010] [09:51:47] <pieterh>    @jugg: are you still around?
| [Wednesday 26 May 2010] [09:51:57] <jugg>   pieterh: gpl3 tivo is purely about enforcing open hardware.  It has nothing to do with software.  ESR himself states that he is scared that hardware vendors will implement restrictions that only allow running of signed software, preventing open source software from running on that hardware.  His aim is to ensure the hardware paltform remains open.  The GPL2 was just fine in ensure the opening of software.
| [Wednesday 26 May 2010] [09:52:34] <pieterh>    ESR has nothing to do with GPL... however let me do some more research
| [Wednesday 26 May 2010] [09:52:51] <pieterh>    are you asking that we move to GPL2?
| [Wednesday 26 May 2010] [09:53:00] <pieterh>    that is not going to happen, I can say it categorically
| [Wednesday 26 May 2010] [09:53:04] <pieterh>    :-)
| [Wednesday 26 May 2010] [09:53:10] <jugg>   appologizes certainly isn't ESR :)
| [Wednesday 26 May 2010] [09:54:47] <pieterh>    maybe you mean Eben Moglen ?
| [Wednesday 26 May 2010] [09:54:58] <jugg>   anyway, ignoring my slipup of ESR vs Richard Stallman.
| [Wednesday 26 May 2010] [09:55:51] <jugg>   http://gplv3.fsf.org/rms-why.html
| [Wednesday 26 May 2010] [09:57:33] <pieterh>    so to review the tivo issue
| [Wednesday 26 May 2010] [09:57:48] <pieterh>    first, tivo began using modified GPL software and not providing the source code
| [Wednesday 26 May 2010] [09:57:58] <pieterh>    e.g. using a modified 0MQ and not providing patches
| [Wednesday 26 May 2010] [09:58:07] <pieterh>    then they accepted to provide their modifications
| [Wednesday 26 May 2010] [09:58:19] <jugg>   to your earlier points, I do not begrudge imatix from making a viable business.  Certainly from imatix's stand point, requesting MIT or Copyright transfer makes perfect sense.
| [Wednesday 26 May 2010] [09:58:22] <pieterh>    but they introduced hardware checking on their boxes so you could not remix those modifications
| [Wednesday 26 May 2010] [09:58:36] <pieterh>    so you'd get e.g. a 0MQ with a driver for some network card
| [Wednesday 26 May 2010] [09:58:46] <pieterh>    but you couldn't improve that driver because the Tivo borked
| [Wednesday 26 May 2010] [09:58:52] <jugg>   pieterh: them not providing source code isn't fixed by gpl3.
| [Wednesday 26 May 2010] [09:59:03] <pieterh>    no, but it prevents them using the GPL3 code at all
| [Wednesday 26 May 2010] [09:59:26] <pieterh>    OR they must not prevent remixing (on their boxes)
| [Wednesday 26 May 2010] [09:59:29] <pieterh>    i concede...
| [Wednesday 26 May 2010] [09:59:33]   * cremes is glad he doesn't care about licensing issues
| [Wednesday 26 May 2010] [09:59:49] <pieterh>    that it's about stopping people running arbitrary code on a box that they think they own but actually don't
| [Wednesday 26 May 2010] [09:59:50] <jugg>   them locking the hw to only run their signed version of the code is their perogative imo.  As long as they provide the modified source, I don't care of that source can't be run on their hardware.
| [Wednesday 26 May 2010] [09:59:58] <pieterh>    you don't care
| [Wednesday 26 May 2010] [10:00:01] <pieterh>    i do :-)
| [Wednesday 26 May 2010] [10:00:18] <pieterh>    now, why i care is not ideological
| [Wednesday 26 May 2010] [10:00:23] <jugg>   why?  Go build your own hardware that matches theirs and run the modified code on it.
| [Wednesday 26 May 2010] [10:00:25] <pieterh>    nah, i sell software :-)
| [Wednesday 26 May 2010] [10:00:42] <pieterh>    if a firm is bothered enough (and has money enough) to lock their hardware
| [Wednesday 26 May 2010] [10:00:48] <pieterh>    then they can buy commercial licenses
| [Wednesday 26 May 2010] [10:00:54] <pieterh>    and thus fund 0MQ development
| [Wednesday 26 May 2010] [10:01:06] <pieterh>    i see GPL3 as an ultracapitalist tool
| [Wednesday 26 May 2010] [10:01:38] <jugg>   how does them preventing modified versions of the software from running on their hardware hurt you?
| [Wednesday 26 May 2010] [10:01:50] <pieterh>    it's not really the point
| [Wednesday 26 May 2010] [10:01:55] <jugg>   ?!
| [Wednesday 26 May 2010] [10:01:57] <pieterh>    the point is, we're a business in the end
| [Wednesday 26 May 2010] [10:02:16] <pieterh>    we need to find ways of getting money from people who use 0MQ for *profit*
| [Wednesday 26 May 2010] [10:02:54] <pieterh>    making software like 0MQ is expensive, though obviously a community like ours makes a huge difference
| [Wednesday 26 May 2010] [10:03:01] <pieterh>    it lets us leverage our investment
| [Wednesday 26 May 2010] [10:03:23] <jugg>   so, tivoication is simply an indicator for you of the depth of the hw companies pocket?
| [Wednesday 26 May 2010] [10:03:31] <pieterh>    i think that's accurate, yes
| [Wednesday 26 May 2010] [10:03:42] <pieterh>    sorry to be blunt :-)
| [Wednesday 26 May 2010] [10:03:51] <pieterh>    i've been making free software since 1991 like i said
| [Wednesday 26 May 2010] [10:03:53] <jugg>   blunt is clear. :)
| [Wednesday 26 May 2010] [10:03:59] <pieterh>    and i love the ideological aspects
| [Wednesday 26 May 2010] [10:04:07] <pieterh>    but they do seem to reflect economic realities that also work
| [Wednesday 26 May 2010] [10:04:19] <pieterh>    forcing those with deep pockets to put money on the table is win-win
| [Wednesday 26 May 2010] [10:05:05] <pieterh>    i do really appreciate the work that the FSF (Eben Moglen, mainly) put into GPL3
| [Wednesday 26 May 2010] [10:05:20] <jugg>   and at the same time kill the companies without deep pockets who's only way to make money is by using tivoication to drive service and support contracts.
| [Wednesday 26 May 2010] [10:05:53] <pieterh>    kill is a harsh word
| [Wednesday 26 May 2010] [10:06:01] <pieterh>    how can our license terms kill a firm?
| [Wednesday 26 May 2010] [10:06:07] <pieterh>    they can just write their own software
| [Wednesday 26 May 2010] [10:06:11] <pieterh>    or buy commercial software
| [Wednesday 26 May 2010] [10:06:15] <jugg>   which would kill them :)
| [Wednesday 26 May 2010] [10:06:18] <pieterh>    or buy a commercial license from us
| [Wednesday 26 May 2010] [10:06:26] <pieterh>    sorry, but i pay people
| [Wednesday 26 May 2010] [10:06:38] <pieterh>    and when they send me invoices i don't say, "you're killing me!"
| [Wednesday 26 May 2010] [10:06:43] <pieterh>    that... would be... silly
| [Wednesday 26 May 2010] [10:06:52] <jugg>   :)
| [Wednesday 26 May 2010] [10:06:55] <pieterh>    indeed
| [Wednesday 26 May 2010] [10:07:16] <sustrik>    sorry to interrupt you, i'm just interested -- what's the point of tivoising a hw device?
| [Wednesday 26 May 2010] [10:07:26] <sustrik>    i mean business point
| [Wednesday 26 May 2010] [10:07:26] <pieterh>    it's a strange world when simply proposing to charge a modest amount for a good product translates into accusations of premeditated murder... :-)
| [Wednesday 26 May 2010] [10:07:38] <pieterh>    sustrik: it means you can cripple the hardware
| [Wednesday 26 May 2010] [10:07:48] <sustrik>    i mean business point
| [Wednesday 26 May 2010] [10:07:48] <pieterh>    run software on it that locks down features
| [Wednesday 26 May 2010] [10:07:52] <pieterh>    unlock features for money
| [Wednesday 26 May 2010] [10:07:57] <jugg>   sustrik: it means that you can lease or sell hw at a low cost in exchange for ongoing service contracts.
| [Wednesday 26 May 2010] [10:08:04] <sustrik>    a-ha
| [Wednesday 26 May 2010] [10:08:07] <sustrik>    understood
| [Wednesday 26 May 2010] [10:08:09] <sustrik>    thanks
| [Wednesday 26 May 2010] [10:08:26] <pieterh>    e.g. you buy a mobile phone that has VoIP locked/disabled
| [Wednesday 26 May 2010] [10:08:35] <pieterh>    if i can get the source code, i can unlock it, run a patched version
| [Wednesday 26 May 2010] [10:08:49] <pieterh>    the Tivo solution is that the hw won't run that modified / improved version
| [Wednesday 26 May 2010] [10:08:49] <jugg>   it means a sofware company can survive, by providing a hw platform that enables them to make money on their software.
| [Wednesday 26 May 2010] [10:09:00] <pieterh>    jugg: do you work for such a company? just curious
| [Wednesday 26 May 2010] [10:09:23] <pieterh>    I could argue: it means a firm can take work done by others and not contribute anything back
| [Wednesday 26 May 2010] [10:09:42] <pieterh>    it is specifically about taking free software, don't forget
| [Wednesday 26 May 2010] [10:09:46] <jugg>   pieterh: not currently.
| [Wednesday 26 May 2010] [10:09:57] <jugg>   pieterh: absolutely not true, they must contribute back the source they've modified.
| [Wednesday 26 May 2010] [10:10:13] <pieterh>    true
| [Wednesday 26 May 2010] [10:10:21] <jugg>   Just because they provided a hardware platform doesn't mean because you wrote the software that you have the right to that hw paltform.
| [Wednesday 26 May 2010] [10:10:28] <pieterh>    i misstated myself, sorry
| [Wednesday 26 May 2010] [10:10:35] <pieterh>    well, put this another way
| [Wednesday 26 May 2010] [10:10:44] <pieterh>    a commercial license can be for 1 euro
| [Wednesday 26 May 2010] [10:10:51] <pieterh>    it really depends
| [Wednesday 26 May 2010] [10:10:54] <jugg>   but that is what the gpl3 wants to state.  it wants to state that someone who wrote software must have control over the hardware that software is ran on.  rediculous.
| [Wednesday 26 May 2010] [10:11:13] <pieterh>    this is only one part of the GPL3
| [Wednesday 26 May 2010] [10:11:20] <jugg>   you write the software, you get control over the software.
| [Wednesday 26 May 2010] [10:11:33] <jugg>   pieterh: I agree, which is why a gpl2.5 is needed.
| [Wednesday 26 May 2010] [10:11:40] <pieterh>    actually, you get the software (as a user) in a box, you get the right to hack that box
| [Wednesday 26 May 2010] [10:11:54] <pieterh>    the point is the sharing of knowledge enforced by private contract
| [Wednesday 26 May 2010] [10:12:06] <pieterh>    when we invest in 0MQ we tell box makers:
| [Wednesday 26 May 2010] [10:12:19] <pieterh>    - if you use OUR software (and we speak in name of our contributors too) on your box
| [Wednesday 26 May 2010] [10:12:20] <jugg>   pieterh: absolutely not.  the box is leased, you have no right to it.  Or the box is sold at a very low cost with the expectation that ongoing service is provided for that box.
| [Wednesday 26 May 2010] [10:12:31] <pieterh>    - then you MUST allow people to improve that software AND run the improvements on your box
| [Wednesday 26 May 2010] [10:12:35] <pieterh>    simple
| [Wednesday 26 May 2010] [10:12:50] <pieterh>    - OR you pay us something and we'll make an exception for you
| [Wednesday 26 May 2010] [10:12:53] <pieterh>    seems simple enough
| [Wednesday 26 May 2010] [10:13:12] <pieterh>    and, honestly, it seems totally fair
| [Wednesday 26 May 2010] [10:13:45] <pieterh>    look, @jugg, if/when you work for a firm that finds itself in this situation, let me know
| [Wednesday 26 May 2010] [10:14:05] <pieterh>    and we'll bend over backwards to get as close to that nominal 1 Euro as possible
| [Wednesday 26 May 2010] [10:14:09] <pieterh>    :-)
| [Wednesday 26 May 2010] [10:14:52] <pieterh>    or perhaps make a specific exception to the Tivo parts for that firm
| [Wednesday 26 May 2010] [10:15:36] <jugg>   :)  Like I said, I don't begrudge imatix anything, but the idealogical concept that someone can write software and believe by the use of that software they have the ability to assert some right and control over the hardware is asinine. (to be blunt)
| [Wednesday 26 May 2010] [10:16:40] <pieterh>    @jugg: there is clearly a conflict of interests
| [Wednesday 26 May 2010] [10:16:40] <jugg>   anyway... sorry for dragging this channel through all of that. :)
| [Wednesday 26 May 2010] [10:16:56] <pieterh>    recall that the tivo clauses came from real conflicts, not some theoretical debate
| [Wednesday 26 May 2010] [10:17:36] <pieterh>    and in the end, if a developer wants to license his work under a license that says, "you must wear pink while singing 'When the Saints'", that's their choice
| [Wednesday 26 May 2010] [10:17:40] <pieterh>    private contract
| [Wednesday 26 May 2010] [10:18:10] <pieterh>    there is no post-facto modification, no ambush, no traps
| [Wednesday 26 May 2010] [10:18:25] <jugg>   no, as you've stated yourself, it came from the ability to reach into another companies pockets.  The gpl2 was complied with in the end, source was provided.  Nothing further was necessary imo.  (although I had no idea zmq was part of this, so I surely stepped on the hornets nest!)
| [Wednesday 26 May 2010] [10:18:48] <pieterh>    @jugg: that is my view on it, it's not what drove the FSF's changes
| [Wednesday 26 May 2010] [10:19:05] <sustrik>    what about turning it upsde down: idealogical concept that someone can make hadware and believe by the use of that hardware they have the ability to assert some right and control over the software is asinine :)
| [Wednesday 26 May 2010] [10:19:12] <pieterh>    the GPL3 was in part about patents, in part about people hacking the word "distribute" and in part about issues like this
| [Wednesday 26 May 2010] [10:19:32] <pieterh>    again
| [Wednesday 26 May 2010] [10:19:48] <pieterh>    someone produces a work and licenses their work
| [Wednesday 26 May 2010] [10:19:55] <pieterh>    other parties can accept / reject these licenses
| [Wednesday 26 May 2010] [10:20:09] <pieterh>    there is no "asinine" just "I accept" or "I do not accept"
| [Wednesday 26 May 2010] [10:24:20] <jugg>   my only issue with gpl3 is the tivo part.  The rest, patents and the like, trully deal with the software freedom.  The touted aspect of the GPL is about software freedom not about a tool for making money.  So when a company uses the GPL as a tool for making money, I can't meet that argument on equal ground.  Take the GPL terms and relabel it as your own license - it has the same affect without confusion as to why it is being use
| [Wednesday 26 May 2010] [10:24:20] <jugg>   d.  By using the "GPL" name, then you are stating that your interested in software freedom and open source.
| [Wednesday 26 May 2010] [10:24:49] <pieterh>    @jugg: it is not practical to define custom licenses
| [Wednesday 26 May 2010] [10:25:03] <pieterh>    except on a case by case basis
| [Wednesday 26 May 2010] [10:25:15] <pieterh>    if we tried to take the GPL3 and customize it
| [Wednesday 26 May 2010] [10:25:24] <jugg>   I never said customize, I said rename.
| [Wednesday 26 May 2010] [10:25:28] <pieterh>    then we would force every single serious firm to do a full legal review of our license
| [Wednesday 26 May 2010] [10:25:35] <jugg>   actually I said "relabel" :)
| [Wednesday 26 May 2010] [10:25:37] <pieterh>    ?
| [Wednesday 26 May 2010] [10:25:50] <pieterh>    what are you actually proposing?  I've lost the plot now
| [Wednesday 26 May 2010] [10:26:02] <pieterh>    freedom is not about NOT making money
| [Wednesday 26 May 2010] [10:26:20] <pieterh>    freedom is precisely about a more effective market in knowledge
| [Wednesday 26 May 2010] [10:36:30] <jugg>   I think I need to wrap this up on my end, but to try to clarify the lost plot... the gpl is about software freedom, not about a tool to make money, in fact quite the opposite.  So, if a company uses the name "GPL" it is stating that the GPL licensed software is about freedom of the software.  If that isn't the case, and the GPL *terms* are being used as a way to ensure alertnate licensing deals, then that company (imo) should re
| [Wednesday 26 May 2010] [10:36:31] <jugg>   package the GPL terms under a different name.
| [Wednesday 26 May 2010] [10:37:14] <jugg>   That said I'm trying to make money from software as well, so I'm not in ideological alignment with the purpose of the GPL myself in all instances.  However, when I used the GPL as I often do, it is about the software only.
| [Wednesday 26 May 2010] [10:37:24] <pieterh>    this would create an enormous amount of extra work for many people
| [Wednesday 26 May 2010] [10:37:35] <jugg>   what extra work?
| [Wednesday 26 May 2010] [10:37:40] <pieterh>    today, any firm wanting to use 0MQ in their apps must do a legal review of the license terms
| [Wednesday 26 May 2010] [10:37:48] <pieterh>    it is a contract, don't forget
| [Wednesday 26 May 2010] [10:37:54] <pieterh>    the LGPL is a standard contract
| [Wednesday 26 May 2010] [10:38:00] <pieterh>    reviewed once, used many times
| [Wednesday 26 May 2010] [10:38:13] <pieterh>    if we make a custom license it must be reviewed specifically
| [Wednesday 26 May 2010] [10:38:21] <pieterh>    that is called "legal clearance" and it is expensive
| [Wednesday 26 May 2010] [10:38:26] <pieterh>    lawyer hours and days and weeks
| [Wednesday 26 May 2010] [10:38:51] <pieterh>    sufficiently expensive that many firms will simply refuse to use "open source" that does not have a standard licence
| [Wednesday 26 May 2010] [10:39:04] <pieterh>    we would be shooting ourselves in the foot if we did what you propose
| [Wednesday 26 May 2010] [10:39:15] <pieterh>    suggestion registered... and rejected... sorry! :-)
| [Wednesday 26 May 2010] [10:40:31] <jugg>   Funny, too bad GNU didn't think of a way to scope out the pockets of firms trying to use the GPL to make money and figure out a way to get money out of those pockets... :)
| [Wednesday 26 May 2010] [10:42:45] <pieterh>    @jugg: well, the FSF is a charity
| [Wednesday 26 May 2010] [10:42:47] <pieterh>    not a business
| [Wednesday 26 May 2010] [10:42:55] <pieterh>    there have been some very large businesses built around the GPL
| [Wednesday 26 May 2010] [10:43:26] <jugg>   there I go confusing my terms again, I really should stop already. :)
| [Wednesday 26 May 2010] [10:44:06] <pieterh>    think of... Red Hat, or Cygnus Solutions
| [Wednesday 26 May 2010] [10:44:32] <pieterh>    iMatix is actually a corporate sponsor of the FSF
| [Wednesday 26 May 2010] [10:53:45] <jugg>   please don't take any of this as argument directly against imatix.    My main argument is against the GPL3 tivoization clause.   The fact that imatix uses it as a way to force commercial licensing deals is compeltely imatix's prerogative.  But at an idealogical level, I associate the name GPL with free software, not as a tool to make money.  As such, at an idealogical level, I'd like companies not to use the name GPL for licensi
| [Wednesday 26 May 2010] [10:53:46] <jugg>   ng software in this way as it creates confusion.
| [Wednesday 26 May 2010] [10:54:25] <jugg>   obviously, that ideology isn't going to change imatix's stance... :)
| [Wednesday 26 May 2010] [10:54:43] <pieterh>    @jugg, the argument is a useful one and I certainly don't take it personally
| [Wednesday 26 May 2010] [10:55:18] <pieterh>    iMatix has been using free software licenses since 1996
| [Wednesday 26 May 2010] [10:55:44] <pieterh>    we used to write our own (our old SFL license is one of those recognized by the FSF)
| [Wednesday 26 May 2010] [10:55:54] <pieterh>    and we've tried many variations... 
| [Wednesday 26 May 2010] [10:56:17] <pieterh>    GPL is the one that works, and I've spent enough time with the FSF and thinking about the rationale to understand why
| [Wednesday 26 May 2010] [10:56:36] <pieterh>    it is not money vs. free, that is a false dichotomy
| [Wednesday 26 May 2010] [10:56:53] <pieterh>    it is about creating the most efficient knowledge economy in which all contributors get the most out of their work
| [Wednesday 26 May 2010] [10:57:05] <pieterh>    all parties have the choice to stay out of that economy
| [Wednesday 26 May 2010] [10:57:11] <pieterh>    but if they participate, they follow the rules
| [Wednesday 26 May 2010] [10:58:23] <pieterh>    there is no ideology, just more or less efficient contracts
| [Wednesday 26 May 2010] [10:59:06] <pieterh>    s/efficient/successful/
| [Wednesday 26 May 2010] [10:59:33] <pieterh>    sorry to be soapboxing, I think we're boring the channel now :-)
| [Wednesday 26 May 2010] [10:59:47] <pieterh>    hey guise, I want to rename all the socket types!
| [Wednesday 26 May 2010] [11:00:03] <guido_g>    hehehe
| [Wednesday 26 May 2010] [11:00:17] <pieterh>    ZMQ_DONT_TRY_THIS
| [Wednesday 26 May 2010] [11:00:23] <pieterh>    ZMQ_OMG_ITS_AMAZING
| [Wednesday 26 May 2010] [11:00:34] <pieterh>    and ZMQ_MAGIC_HAPPENS
| [Wednesday 26 May 2010] [11:00:54] <sjampoo>    Hmmm, what would ZMQ_MAGIC_HAPPENS do? 
| [Wednesday 26 May 2010] [11:00:55] <guido_g>    and of course: ZMQ_IT_MIGHT_EVEN_WORK
| [Wednesday 26 May 2010] [11:00:56] <pieterh>    "I tried the ZMQ_DONT_TRY_THIS socket and my app crashed?"
| [Wednesday 26 May 2010] [11:01:10] <pieterh>    sjampoo: that depends on the time of day
| [Wednesday 26 May 2010] [11:01:10] <jugg>   certainly, but I think the change of rules between gpl2 and gpl3 is significant, and it leaves a lot of us who were part of the gpl2 economy, who helped build that enconmy, in an ackward place.  Anyway, I agree, time to move on.  Thanks for the discussion, I appreciate knowing where zeromq stands in this regards.
| [Wednesday 26 May 2010] [11:01:27] <sjampoo>    excellent, i was just looking for something like that
| [Wednesday 26 May 2010] [11:02:06] <pieterh>    @sjampoo: if that doesn't work, try guido_g's new ZMQ_IT_MIGHT_EVEN_WORK
| [Wednesday 26 May 2010] [11:02:33] <sjampoo>    pieterh, thanks for the tip!
| [Wednesday 26 May 2010] [11:02:42] <pieterh>    np... hang on, i need to update the FAQ
| [Wednesday 26 May 2010] [11:03:09]   * pieterh wonders about next april 1st
| [Wednesday 26 May 2010] [11:03:26] <pieterh>    create a special release of 0MQ where all the names are... weird
| [Wednesday 26 May 2010] [11:03:49] <pieterh>    somewhere, someone would use it and not get the joke, and would, like months later come back
| [Wednesday 26 May 2010] [11:04:10] <pieterh>    "I'm using ZMQ_NULL_WRITES_ENABLED and losing messages, is that normal?"
| [Wednesday 26 May 2010] [11:04:55]   * pieterh tries to refocus after way too much license talk
| [Wednesday 26 May 2010] [11:18:40] <jugg>   in zmq_socket messaging patterns request-reply description, the terms "client" and "service" is used, I assume the defines a node that uses zmq_connect or zmq_bind respectively?
| [Wednesday 26 May 2010] [11:19:11] <sustrik>    jugg: client is REQ socket, service is REP socket
| [Wednesday 26 May 2010] [11:24:01] <jugg>   ok, but "A socket of type ZMQ_REQ is used by a client" would seem to say, a client already exists and a client would use a socket type of ZMQ_REQ, which if just reading the documentation makes me ask, what is a client?  (hence, so I did)
| [Wednesday 26 May 2010] [11:25:13] <sustrik>    ok, more precisely: client is an application that uses REQ socket
| [Wednesday 26 May 2010] [11:25:29] <jugg>   Am I abusing the term node?
| [Wednesday 26 May 2010] [11:25:58] <jugg>   eh, I didn't use "node" this time. ignore me.
| [Wednesday 26 May 2010] [11:26:07] <sustrik>    :)
| [Wednesday 26 May 2010] [11:26:22] <sustrik>    anyway, the problem with this definition of client
| [Wednesday 26 May 2010] [11:26:34] <sustrik>    is that if a single app uses both REQ and REP sockets
| [Wednesday 26 May 2010] [11:26:44] <sustrik>    it's both client and server at once
| [Wednesday 26 May 2010] [11:27:15] <guido_g>    you're in the clients role when you request a service, i'd say
| [Wednesday 26 May 2010] [11:27:24] <sustrik>    documentation should probably refrain on defining categories of applications
| [Wednesday 26 May 2010] [11:27:34] <sustrik>    application is just application
| [Wednesday 26 May 2010] [11:27:41] <sustrik>    it may have some sockets open
| [Wednesday 26 May 2010] [11:28:08] <jugg>   "Each request sent is load-balanced among all connected services." facinating, so for that last to be true, the "services" would be connecting to the client's bound endpoint.
| [Wednesday 26 May 2010] [11:28:34] <sustrik>    or you can connect multiple times
| [Wednesday 26 May 2010] [11:28:43] <sustrik>    0mq allows multiple connects
| [Wednesday 26 May 2010] [11:28:49] <sustrik>    as well as multiple binds
| [Wednesday 26 May 2010] [11:29:51] <sustrik>    guido_g: yes, but that kind of distinction is good for tutorial, not the formal definition
| [Wednesday 26 May 2010] [11:30:18] <guido_g>    huh?
| [Wednesday 26 May 2010] [11:30:20] <guido_g>    why so?
| [Wednesday 26 May 2010] [11:30:37] <sustrik>    because application can be both client and service
| [Wednesday 26 May 2010] [11:30:52] <guido_g>    this is why i said "role"
| [Wednesday 26 May 2010] [11:31:01] <sustrik>    ah, got it
| [Wednesday 26 May 2010] [11:31:04] <guido_g>    one application can take on multiplke roles
| [Wednesday 26 May 2010] [11:31:15] <sustrik>    yes
| [Wednesday 26 May 2010] [11:31:28] <guido_g>    some apps even at the same time (threading on multicore)
| [Wednesday 26 May 2010] [11:33:42] <sustrik>    multiple roles for same app are pretty common, say an application is both _publisher_ of stock quotes and trade execution _service_
| [Wednesday 26 May 2010] [11:33:56] <guido_g>    exactly
| [Wednesday 26 May 2010] [11:56:46] <jugg>   rc = zmq_bind(s, "ipc:///tmp/a/0"); fails, but rc = zmq_bind(s, "ipc:///tmp/0"); succeeds.  Is it expected that only the directory part must exist?
| [Wednesday 26 May 2010] [11:57:08] <jugg>   s/only //
| [Wednesday 26 May 2010] [11:57:37] <jugg>   "/tmp/" exists on my system, "/tmp/a/" does not
| [Wednesday 26 May 2010] [11:58:10] <sustrik>    it translates directly to UNIX domain sockets
| [Wednesday 26 May 2010] [11:58:32] <sustrik>    have a look what do they allow and what they don't
| [Wednesday 26 May 2010] [12:12:49] <jugg>   And I'm off for now.  Thanks for all of the help/discussion. :)
| [Wednesday 26 May 2010] [13:11:36] <zedas>  sustrik: hey, there may be a memory leak in the I/O thread: http://dpaste.de/gM4s/  that's valgrind output from a test server 
| [Wednesday 26 May 2010] [13:12:49] <zedas>  looks like zmq::pipe_t is making ram and then it's not getting freed properly.  not sure exactly where though so thought you might have insight.
| [Wednesday 26 May 2010] [13:17:57] <zedas>  sustrik: could it be because the ~pipe_t hasn't run?
| [Wednesday 26 May 2010] [14:51:03] <cremes> are functions zmq_sleep, zmq_stopwatch_start and zmq_stopwatch_stop part of the official zmq api? should non-C language bindings expose them?
| [Wednesday 26 May 2010] [14:56:46] <mato>   cremes: nope, they're not
| [Wednesday 26 May 2010] [14:56:56] <cremes> mato: ok
| [Wednesday 26 May 2010] [14:57:03] <mato>   cremes: they're in there because of the perf tests, and should probably be moved somewhere
| [Wednesday 26 May 2010] [14:57:58] <sjampoo>    Yah, they are handy for perf tests. PyZMQ removed stopwatch at first, but then the performance results wheren't really comparable so they have been moved back in.
| [Wednesday 26 May 2010] [14:58:11] <cremes> sounds reasonable
| [Wednesday 26 May 2010] [14:58:29] <mato>   sustrik: good discussion about connect/bind and endpoints, i will rewrite the relevant portions of the reference
| [Wednesday 26 May 2010] [14:58:50] <mato>   sjampoo: don't rely on them, they might go away... 
| [Wednesday 26 May 2010] [14:59:18] <mato>   we don't want people to the the wrong idea that we're building a portability library
| [Wednesday 26 May 2010] [14:59:44] <sjampoo>    aren't you guys there already ;) 
| [Wednesday 26 May 2010] [15:00:59] <sjampoo>    What are the future plans? I think i saw some flirting with moving into the kernel.
| [Wednesday 26 May 2010] [15:01:36] <mato>   that's part of it, but a long way away
| [Wednesday 26 May 2010] [15:01:49] <mato>   sustrik is the expert on the grand vision
| [Wednesday 26 May 2010] [15:01:56] <mato>   deploying 0mq netwide
| [Wednesday 26 May 2010] [15:02:27] <mato>   take a look here: http://250bpm.wikidot.com/local--files/start/towards.pdf
| [Wednesday 26 May 2010] [15:02:42] <sjampoo>    ah thanks!
| [Wednesday 26 May 2010] [16:05:32] <sustrik>    zedas: thanks for reporting it
| [Wednesday 26 May 2010] [16:05:48] <sustrik>    i'll have a look at it tomorrow (late evening here)
| [Wednesday 26 May 2010] [16:07:26] <sustrik>    sjampoo: basically, the idea is to allow for distributed networks of nodes with no centralised control
| [Wednesday 26 May 2010] [16:07:48] <sustrik>    think of a marketplace for computational services
| [Wednesday 26 May 2010] [16:08:02] <sustrik>    a world-wide cloud
| [Wednesday 26 May 2010] [16:08:10] <sustrik>    but that's pretty far ahead
| [Wednesday 26 May 2010] [16:14:08] <zedas>  sustrik: if i can figure it out i'll shoot you a patch
| [Wednesday 26 May 2010] [16:14:16] <zedas>  otherwise you know better than me probably
| [Wednesday 26 May 2010] [16:14:58] <sustrik>    zedas: thanks
| [Wednesday 26 May 2010] [17:07:46] <sustrik>    sjampoo: let me give an example
| [Wednesday 26 May 2010] [17:08:00] <sustrik>    zed have created a database accessible via 0mq
| [Wednesday 26 May 2010] [17:08:34] <sustrik>    he may have used it just as a convenient way to provide network access
| [Wednesday 26 May 2010] [17:08:42] <sustrik>    but:
| [Wednesday 26 May 2010] [17:09:06] <sustrik>    think of three companies providing storage space using mulletdb
| [Wednesday 26 May 2010] [17:09:23] <sustrik>    you can obviously connect to one of them
| [Wednesday 26 May 2010] [17:09:45] <sustrik>    but you can put a device in a middle and let it load balance your requests among the three
| [Wednesday 26 May 2010] [17:09:55] <sustrik>    once we implement priorities
| [Wednesday 26 May 2010] [17:10:29] <sustrik>    you can even say "store the data primarily at A, but it it's not available, use B"
| [Wednesday 26 May 2010] [17:10:31] <sustrik>    etc.
| [Wednesday 26 May 2010] [17:21:16] <mikko>  would be cool to create such a system
| [Wednesday 26 May 2010] [17:21:24] <mikko>  and use apache zookeeper for syncing
| [Thursday 27 May 2010] [02:42:43] <umesh>   Hi 
| [Thursday 27 May 2010] [02:42:53] <umesh>   I am newbie to zeromq
| [Thursday 27 May 2010] [02:43:27] <umesh>   I have a simple question that ... how we can use the zeromq with the XML-RPC ?
| [Thursday 27 May 2010] [02:43:53] <umesh>   means any pointers to simple example will help
| [Thursday 27 May 2010] [02:53:29] <sustrik> umesh: you have to pair xml-rpc serialisation library with 0mq library
| [Thursday 27 May 2010] [02:55:10] <sustrik> zedas: i had a look at the leak you've reported; it seems the debug info is missing and presumably, optimiser messed with the code; can you do the same with -g -O0 built code?
| [Thursday 27 May 2010] [02:55:45] <sustrik> zedas: as an option, do you have a test program to reproduce the problem?
| [Thursday 27 May 2010] [02:55:56] <zedas>   sustrik: that is with -g -O0, it's valgrind on OSX and the retarded dylibs OSX uses
| [Thursday 27 May 2010] [02:56:43] <sustrik> hm, strange, the filenames and linenumber seem missing
| [Thursday 27 May 2010] [02:56:45] <zedas>   sustrik: i do have a test program, but it's my project, so probably take you too long to build it and get it working.  http://mulletdb.com/
| [Thursday 27 May 2010] [02:57:07] <zedas>   i'll run the test on linux and get you line numbers
| [Thursday 27 May 2010] [02:57:19] <sustrik> great, thanks
| [Thursday 27 May 2010] [02:57:45] <zedas>   in the mean time, does your rbzmq actually build?  it fails miserably for me because of the test for zmq_init not including the right libraries or header files.
| [Thursday 27 May 2010] [02:58:27] <sustrik> not sure, what version are you using 2.0.6?
| [Thursday 27 May 2010] [02:58:46] <sustrik> i mean 0mq version
| [Thursday 27 May 2010] [02:59:15] <sustrik> unfortunatrly, rbzmq is orphaned at the moment
| [Thursday 27 May 2010] [02:59:33] <sustrik> i am taking care of it a bit, but i am not a ruby person...
| [Thursday 27 May 2010] [03:01:48] <zedas>   latest from git for both 0mq and rbzmq
| [Thursday 27 May 2010] [03:02:01] <zedas>   alright i'll see what's up and give you a patch
| [Thursday 27 May 2010] [03:02:21] <zedas>   i'm not a ruby person anymore, but seems i get asked to fix ruby stuff :-)
| [Thursday 27 May 2010] [03:02:38] <sustrik> that would be great, thanks :)
| [Thursday 27 May 2010] [03:02:50] <umesh>   sustrik: Is there any some real time example which demostrate xml-rpc and zeromq
| [Thursday 27 May 2010] [03:03:08] <sustrik> umesh: i am not aware anyone had done that yet
| [Thursday 27 May 2010] [03:03:14] <sustrik> you may ask on the mailing list
| [Thursday 27 May 2010] [03:03:47] <zedas>   sustrik: http://dpaste.de/odLV/  there ya go
| [Thursday 27 May 2010] [03:04:22] <zedas>   that might be a slightly older git checkout than is current, but i can rebuild if that doesn't pinpoint the spot
| [Thursday 27 May 2010] [03:04:58] <sustrik> zedas: interesting, is that the only leak there?
| [Thursday 27 May 2010] [03:05:10] <zedas>   that's the only one i can find
| [Thursday 27 May 2010] [03:05:20] <sustrik> ok
| [Thursday 27 May 2010] [03:05:27] <zedas>   the others are stock sets of ram for say arc4, threads, etc.
| [Thursday 27 May 2010] [03:05:45] <zedas>   this spot is the only one that grows perpetually and causes server death
| [Thursday 27 May 2010] [03:05:51] <zedas>   oom killer
| [Thursday 27 May 2010] [03:06:11] <sustrik> one leak for each connection created, right?
| [Thursday 27 May 2010] [03:06:49] <zedas>   no, i think one for each message passed
| [Thursday 27 May 2010] [03:07:08] <sustrik> hm
| [Thursday 27 May 2010] [03:07:14] <zedas>   so i get 2MB of leaks from about that much data transmitted, but only a few hundred connections
| [Thursday 27 May 2010] [03:07:25] <zedas>   but, i could be wrong.  maybe the unit tests are doing more than i think.
| [Thursday 27 May 2010] [03:07:48] <zedas>   or, 0mq is doing more connections behind the scenes
| [Thursday 27 May 2010] [03:07:59] <zedas>   let me get you the code that does this, it's pretty simple
| [Thursday 27 May 2010] [03:08:13] <sustrik> ok
| [Thursday 27 May 2010] [03:08:48] <zedas>   http://dpaste.de/SHso/
| [Thursday 27 May 2010] [03:08:49] <zedas>   that's it
| [Thursday 27 May 2010] [03:08:59] <zedas>   nothing else in the system does 0mq, and that's the entire 0mq usage
| [Thursday 27 May 2010] [03:09:13] <zedas>   and all the tests are over the REQ/REP socket, not the pub/sub socket
| [Thursday 27 May 2010] [03:09:51] <zedas>   so lines 84-86, which calls perform_request
| [Thursday 27 May 2010] [03:10:32] <zedas>   ohhhhh hey, see how i'm passing in the same socket as an in and out socket?  could that be causing it?
| [Thursday 27 May 2010] [03:10:40] <zedas>   perform_request(in_socket, in_socket)
| [Thursday 27 May 2010] [03:10:58] <zedas>   they're by ref (&) so not sure, but i'm not clear how the memory handling is done
| [Thursday 27 May 2010] [03:11:30] <sustrik> the strange thing that the leak, as reported by valgrind
| [Thursday 27 May 2010] [03:11:37] <sustrik> is tied to connection creation
| [Thursday 27 May 2010] [03:11:46] <sustrik> how many client do you have
| [Thursday 27 May 2010] [03:11:48] <sustrik> just one?
| [Thursday 27 May 2010] [03:14:41] <zedas>   yep.
| [Thursday 27 May 2010] [03:14:51] <zedas>   i can show you the python code for the client, it's not much
| [Thursday 27 May 2010] [03:15:22]    * sustrik have an idea of what may have gone wrong
| [Thursday 27 May 2010] [03:15:25] <sustrik> wait a sec
| [Thursday 27 May 2010] [03:16:36] <sustrik> no luck :(
| [Thursday 27 May 2010] [03:16:51] <zedas>   http://dpaste.de/RyrE/
| [Thursday 27 May 2010] [03:16:55] <sustrik> thx
| [Thursday 27 May 2010] [03:16:55] <zedas>   that's what makes the connection
| [Thursday 27 May 2010] [03:17:01] <zedas>   and i only make one for the whole test code run
| [Thursday 27 May 2010] [03:17:41] <zedas>   so, i can try putting in an explicit close, but iirc there isn't one in the python library, similar to the c++ library
| [Thursday 27 May 2010] [03:18:09] <sustrik> client is perfectly ok
| [Thursday 27 May 2010] [03:18:13] <sustrik> the most basic use case
| [Thursday 27 May 2010] [03:18:30] <zedas>   yep, super vanilla
| [Thursday 27 May 2010] [03:18:41] <sustrik> i'll try to run a code similar to one in your server
| [Thursday 27 May 2010] [03:18:45] <sustrik> we'll see...
| [Thursday 27 May 2010] [03:18:46] <zedas>   and the server isn't doing much either.  it gets the data out, and then hands it to another class or two
| [Thursday 27 May 2010] [03:18:58] <sustrik> but the leak is in server, right?
| [Thursday 27 May 2010] [03:19:59] <sustrik> sure it is
| [Thursday 27 May 2010] [03:28:34] <zedas>   yep
| [Thursday 27 May 2010] [03:28:57] <zedas>   although i could try running a fast loop of requests in a client
| [Thursday 27 May 2010] [03:31:19] <sustrik> you get tghe leak with req/rep or pub/sub style?
| [Thursday 27 May 2010] [03:31:26] <zedas>   req/rep
| [Thursday 27 May 2010] [03:31:29] <sustrik> ok
| [Thursday 27 May 2010] [03:37:33] <sustrik> the client sends one message, receive a reply and exits
| [Thursday 27 May 2010] [03:37:39] <sustrik> or does it run in a loop?
| [Thursday 27 May 2010] [03:38:57] <sjampoo> sustrik: interesting plans for the future
| [Thursday 27 May 2010] [03:39:40] <sjampoo> btw i just benched the nocopy version of pyzmq http://nichol.as/wp-content/pyzmq-lat.png
| [Thursday 27 May 2010] [03:41:02] <sustrik> sjampoo: nice, what about putting in on the website?
| [Thursday 27 May 2010] [03:41:54] <sustrik> it's us not ns btw
| [Thursday 27 May 2010] [03:42:10] <sjampoo> hah, good catch
| [Thursday 27 May 2010] [03:42:41] <sjampoo> I think it would be nice to put it on the website when the nocopy version is release ready
| [Thursday 27 May 2010] [03:43:56] <sustrik> you should speak to brian about this
| [Thursday 27 May 2010] [03:44:15] <sustrik> i am not sure what's the right place for it
| [Thursday 27 May 2010] [03:44:30] <sjampoo> i will
| [Thursday 27 May 2010] [03:44:38] <sustrik> feel free to use zeromq.org's "performance" section if you have no better place
| [Thursday 27 May 2010] [03:46:43] <sustrik> zedas: i'm running your code but can't produce the leak here :(
| [Thursday 27 May 2010] [03:47:59] <zedas>   sustrik: client creates the connection, then does a bunch of req/rep tests, then exits
| [Thursday 27 May 2010] [03:48:11] <zedas>   the server is a daemon that just processes in that loop
| [Thursday 27 May 2010] [03:48:13] <sustrik> yes, i've tried both scenarios
| [Thursday 27 May 2010] [03:48:18] <sustrik> not luck though
| [Thursday 27 May 2010] [03:48:29] <zedas>   ok can i see your code.  maybe i can root out what's in mine that causes it
| [Thursday 27 May 2010] [03:48:39] <sustrik> can you check whether all sockets and the context are properly shut down?
| [Thursday 27 May 2010] [03:49:35] <sustrik> http://dpaste.de/WOCm/
| [Thursday 27 May 2010] [03:50:45] <zedas>   sockets shutdown on the client or server side
| [Thursday 27 May 2010] [03:51:05] <zedas>   also, this wouldn't be a shutdown leak because the server crashes after repeated hits
| [Thursday 27 May 2010] [03:51:46] <sustrik> on the server side i mean
| [Thursday 27 May 2010] [03:51:53] <zedas>   ok let me do something to this sample you wrote sustrik 
| [Thursday 27 May 2010] [03:52:00] <sustrik> sure
| [Thursday 27 May 2010] [04:07:05] <zedas>   sustrik: looks like it's on connect
| [Thursday 27 May 2010] [04:07:43] <sustrik> ?
| [Thursday 27 May 2010] [04:10:43] <zedas>   ok this client produces the leak:  http://dpaste.de/BcJV/   i'll post my server code next
| [Thursday 27 May 2010] [04:11:23] <zedas>   http://dpaste.de/zqtK/
| [Thursday 27 May 2010] [04:11:43] <zedas>   sustrik: not much different from your own except i'm sending back a more reliable message, and freeing it in a free method
| [Thursday 27 May 2010] [04:11:51] <zedas>   but, if you hit that server with tons of messages, no leak
| [Thursday 27 May 2010] [04:12:03] <zedas>   it's only if you run the client in the shell with:
| [Thursday 27 May 2010] [04:12:12] <zedas>   while ./testcli ; do ps aux | grep test | grep -v grep ; done
| [Thursday 27 May 2010] [04:12:23] <zedas>   then you start to leak ram from each connection
| [Thursday 27 May 2010] [04:13:10] <sustrik> let me try
| [Thursday 27 May 2010] [04:13:19] <sustrik> ugh, i have to leave for an hour
| [Thursday 27 May 2010] [04:13:27] <sustrik> will continue afterwards
| [Thursday 27 May 2010] [04:17:25] <zedas>   sustrik: no problem.
| [Thursday 27 May 2010] [04:17:31] <zedas>   i'll just make fewer connetions :-)
| [Thursday 27 May 2010] [04:17:46] <zedas>   but i think that narrows it down pretty good.
| [Thursday 27 May 2010] [05:03:36] <pieterh> @zedas: mulletdb looks pretty neat, do you have use cases for it already?
| [Thursday 27 May 2010] [05:26:32] <zedas>   pieterh: i'm using it on some dinky projects, but mostly just for fun
| [Thursday 27 May 2010] [05:27:03] <pieterh> @zedas: would you like to be listed on the zeromq.org site?  I'd like to collect projects using 0MQ
| [Thursday 27 May 2010] [05:29:10] <zedas>   pieterh: yeah sure, if you like.  it's fairly new but i'm contributing it regularly.
| [Thursday 27 May 2010] [05:29:50] <pieterh> yes, I read your initial blog
| [Thursday 27 May 2010] [05:30:02] <pieterh> well, we can wait a while to see if mulletdb becomes famous :-)
| [Thursday 27 May 2010] [05:31:18] <zedas>   it's famous now
| [Thursday 27 May 2010] [05:31:30] <pieterh> :-)
| [Thursday 27 May 2010] [05:31:32] <jugg>    I'm using lua bindings, and calling the equivelant of zmq_getsockopt with ZMQ_RCVMORE and the call if failing.  Any known issues with that?
| [Thursday 27 May 2010] [05:31:42] <zedas>   well, famous for being another of my weirdo projects :-)
| [Thursday 27 May 2010] [05:32:10] <pieterh> @zedas: do you have a pretty logo yet?
| [Thursday 27 May 2010] [05:42:57] <jugg>    nevermind, its a bug in the lua bindings.
| [Thursday 27 May 2010] [06:09:13] <sustrik> jugg: the point is that getsockopt is a new function
| [Thursday 27 May 2010] [06:09:27] <sustrik> so it's probably not yet available via lua binding
| [Thursday 27 May 2010] [06:09:50] <jugg>    it is, it was incorrectly implemented.
| [Thursday 27 May 2010] [06:09:56] <jugg>    I've patched it.
| [Thursday 27 May 2010] [06:09:59] <sustrik> ah
| [Thursday 27 May 2010] [06:10:22] <sustrik> do move the patch upstream
| [Thursday 27 May 2010] [06:10:32] <sustrik> bindings are separate products though
| [Thursday 27 May 2010] [06:10:35] <jugg>    in the middle of doing so... :)
| [Thursday 27 May 2010] [06:14:54] <jugg>    http://github.com/iamaleksey/lua-zmq/issues#issue/1
| [Thursday 27 May 2010] [06:16:16] <sustrik> !
| [Thursday 27 May 2010] [06:34:26] <sustrik> zedas: ok, i am runnig your test
| [Thursday 27 May 2010] [06:34:37] <sustrik> how do you terminate it?
| [Thursday 27 May 2010] [06:46:31] <sustrik> ok, i see
| [Thursday 27 May 2010] [07:55:25] <cremes>  zedas: for ruby you may want to check out the ruby FFI bindings (it's my project) at http://github.com/chuckremes/ffi-rzmq
| [Thursday 27 May 2010] [07:55:46] <cremes>  they are getting a lot more love than the official bindings at the moment
| [Thursday 27 May 2010] [07:56:46] <cremes>  i'm adding specs over the next few days to give some confidence in the release quality
| [Thursday 27 May 2010] [07:57:25] <cremes>  also, the bindings are not idiomatic ruby; they map to the C functions pretty closely; i am working on a higher-level library to add ruby sugar back in
| [Thursday 27 May 2010] [07:57:57] <cremes>  i know you're not a ruby guy anymore so pass this info on to whoever needed the help with rbzmq
| [Thursday 27 May 2010] [08:01:12] <cremes>  oh, and the ffi bindings allow 0mq to work with ruby runtimes other than MRI
| [Thursday 27 May 2010] [09:06:05] <jugg>    I've set up a REQ/REP pattern, where the REQ socket is connecting, and the REP socket is binding.  Is there a way for the REQ socket to determine if a binding exists?  Because the REQ socket send must subsequently block on recv waiting for the reply, I'd rather not have start sending messages through the REQ socket until the REP socket is ready to go.
| [Thursday 27 May 2010] [09:06:41] <jugg>    s/not have/not/
| [Thursday 27 May 2010] [09:07:20] <sustrik> jugg: that's done automatically
| [Thursday 27 May 2010] [09:07:57] <sustrik> when there's no connection, messages are queued and sent after the server is available
| [Thursday 27 May 2010] [09:08:20] <jugg>    yes, this is the problem.  My app is now hung on recv waiting for a reply that is sometime to come yet.
| [Thursday 27 May 2010] [09:08:43] <sustrik> ok, what would you want to do instead?
| [Thursday 27 May 2010] [09:08:47] <sustrik> check periodically?
| [Thursday 27 May 2010] [09:09:04] <jugg>    I'd like to detect if this is the case (no server available) or just have the send go to oblivion and the recv be a nop.
| [Thursday 27 May 2010] [09:09:23] <sustrik> you can do a non-blocking send
| [Thursday 27 May 2010] [09:09:34] <jugg>    sure, but I still have to wait for the recv.
| [Thursday 27 May 2010] [09:09:35] <sustrik> zmq_send (s, msg, ZMQ_NOBLOCK)
| [Thursday 27 May 2010] [09:09:52] <sustrik> no, because the message is not send in that case
| [Thursday 27 May 2010] [09:10:04] <jugg>    ok, so without a server on the other side, it is send that is blocking?
| [Thursday 27 May 2010] [09:10:05] <sustrik> it just says EAGAIN
| [Thursday 27 May 2010] [09:10:34] <sustrik> yes
| [Thursday 27 May 2010] [09:10:51] <jugg>    well, I *do* want to block on recv if my message is actually sent.
| [Thursday 27 May 2010] [09:11:02] <sustrik> yes
| [Thursday 27 May 2010] [09:11:10] <sustrik> psudocode:
| [Thursday 27 May 2010] [09:11:21] <sustrik> s = socket (REQ)
| [Thursday 27 May 2010] [09:11:36] <sustrik> s.send (request, NOBLOCK)
| [Thursday 27 May 2010] [09:11:40] <sustrik> if (EAGAIN)
| [Thursday 27 May 2010] [09:11:45] <sustrik>     do someting else
| [Thursday 27 May 2010] [09:11:53] <sustrik> reply = s.recv ()
| [Thursday 27 May 2010] [09:13:46] <jugg>    ok, so NOBLOCK will cause send to fail if no server is available?  May there be another reason that send would fail because NOBLOCK is set even if there was a server?
| [Thursday 27 May 2010] [09:14:08] <jugg>    ie. are there other side affects of NOBLOCK
| [Thursday 27 May 2010] [09:14:12] <sustrik> no, this is the only reason
| [Thursday 27 May 2010] [09:14:23] <sustrik> ah
| [Thursday 27 May 2010] [09:14:30] <sustrik> ok, one more reason
| [Thursday 27 May 2010] [09:14:58] <sustrik> if you set high watermarks on all sockets
| [Thursday 27 May 2010] [09:15:18] <sustrik> it may happen (if server is slow to respond)
| [Thursday 27 May 2010] [09:15:32] <sustrik> that all buffers space will be eqhausted
| [Thursday 27 May 2010] [09:15:36] <sustrik> by pending requests
| [Thursday 27 May 2010] [09:15:44] <jugg>    ok, but without messing with ZMQ_HWM this is not an issue?
| [Thursday 27 May 2010] [09:15:47] <sustrik> then NOBLOCK would return EAGAIN
| [Thursday 27 May 2010] [09:15:52] <sustrik> no
| [Thursday 27 May 2010] [09:16:07] <jugg>    great, thanks.
| [Thursday 27 May 2010] [09:16:14] <sustrik> you are welcome
| [Thursday 27 May 2010] [09:26:04] <jugg>    well, either another bug in the lua bindings, or NOBLOCK isn't working...
| [Thursday 27 May 2010] [09:26:23] <jugg>    send is returning success
| [Thursday 27 May 2010] [09:26:29] <sustrik> REQ socket?
| [Thursday 27 May 2010] [09:26:41] <jugg>    yes
| [Thursday 27 May 2010] [09:26:53] <sustrik> let me see
| [Thursday 27 May 2010] [09:27:32] <jugg>    the binding looks good
| [Thursday 27 May 2010] [09:27:34] <sustrik> ah, right, you are connecting it
| [Thursday 27 May 2010] [09:27:50] <jugg>    ?
| [Thursday 27 May 2010] [09:27:54] <sustrik> that creates the buffer for messages right away
| [Thursday 27 May 2010] [09:28:01] <jugg>    oh
| [Thursday 27 May 2010] [09:28:04] <sustrik> forget what i said before
| [Thursday 27 May 2010] [09:28:13]    * sustrik got confused :|
| [Thursday 27 May 2010] [09:28:26] <jugg>    unfortunate, because your confusion is what I wanted... :/
| [Thursday 27 May 2010] [09:28:46] <sustrik> you were right
| [Thursday 27 May 2010] [09:29:00] <sustrik> you send a message and it'll be delivered eventually
| [Thursday 27 May 2010] [09:29:39] <sustrik> what about checking for request in non-blocking manner and doing other work if there's no reply yet?
| [Thursday 27 May 2010] [09:29:56] <sustrik> checking for reply
| [Thursday 27 May 2010] [09:32:12] <jugg>    that doesn't fit the existing structure that I'm plugging into :/   The current implementation requires that it is known whether the send was received by the server.  But blocking on on the send until the server is available isn't acceptable.  It needs to simply drop the message and keep going in that case.
| [Thursday 27 May 2010] [09:33:31] <sustrik> then you need a roundtrip to server to ensure that, right?
| [Thursday 27 May 2010] [09:34:17] <jugg>    well, the round trip is to ensure the message was processed correctly when it actually gets processed.  But it is ok to drop the message into oblivion if the server isn't available.
| [Thursday 27 May 2010] [09:34:40] <sustrik> pub/sub sockets work that way
| [Thursday 27 May 2010] [09:34:55] <sustrik> deliver is peer is available
| [Thursday 27 May 2010] [09:35:01] <sustrik> drop message if it is not
| [Thursday 27 May 2010] [09:35:17] <jugg>    sure, but the peer doesn't reply back in that pattern.
| [Thursday 27 May 2010] [09:35:29] <sustrik> it doesn not
| [Thursday 27 May 2010] [09:36:01] <sustrik> basically, what you need is a sync connection rather than message queueing system
| [Thursday 27 May 2010] [09:36:29] <sustrik> that's somehow out of scope of 0mq
| [Thursday 27 May 2010] [09:37:12] <sustrik> why not use standard BSD sockets for such a trivial scenario?
| [Thursday 27 May 2010] [09:37:45] <jugg>    I think it is simply an issue of the REQ/REP pattern, there needs to be some way to check if a REQ can be made, if it can, then certainly block on recv for the reply.  But if a request can't be made, don't sit there for eternity waiting to make the request.
| [Thursday 27 May 2010] [09:38:18] <sustrik> it's a design issue
| [Thursday 27 May 2010] [09:38:32] <jugg>    this is only the first part of the message chain.  Once it gets inserted here, it needs to be ensured from there out.
| [Thursday 27 May 2010] [09:38:46] <sustrik> mq systems are expected to queue the message and let the user continue trusting the message will be delivered
| [Thursday 27 May 2010] [09:42:04] <sustrik> it's similar to TCP in a way
| [Thursday 27 May 2010] [09:42:09] <sustrik> you send data
| [Thursday 27 May 2010] [09:42:21] <sustrik> and trust the underlying stack to deliver it eventually
| [Thursday 27 May 2010] [09:46:54] <jugg>    This is a frontend delivery to the messaging system.  Once the message is in the system, then that message is ensured to be processed, but if the system isn't available there is no point in having the messages queued by the requesting application.  That application needs to be told the system isn't available and try again later when it tries to send a message.
| [Thursday 27 May 2010] [09:47:35] <sustrik> i would use simple TCP connection in such case
| [Thursday 27 May 2010] [09:48:17] <sustrik> other option would be to timout
| [Thursday 27 May 2010] [09:48:39] <sustrik> if no response arrives in N seconds the system is assumed to be unavailable
| [Thursday 27 May 2010] [09:48:54] <sustrik> not sure whether that would work for you
| [Thursday 27 May 2010] [09:50:37] <sustrik> actually, there were already some discussion about providing sync access to 0mq network
| [Thursday 27 May 2010] [09:50:57] <sustrik> say, having a simple library that would speak 0mq wire protocol
| [Thursday 27 May 2010] [09:51:09] <sustrik> but would handle connections same way as TCP does
| [Thursday 27 May 2010] [09:51:23] <sustrik> but that kind of thing doesn't exist yet
| [Thursday 27 May 2010] [09:53:02] <cremes>  jugg: i think sustrik's suggestion of sending the message async and timing out on the reply is the way to go if you want to stay within the 0mq framework
| [Thursday 27 May 2010] [09:53:10] <cremes>  otherwise what you are trying to do isn't a good fit for 0mq
| [Thursday 27 May 2010] [09:53:30] <sustrik> cremes: there's a point in what jugg says
| [Thursday 27 May 2010] [09:53:49] <sustrik> the applications that handle exactly 1 connection
| [Thursday 27 May 2010] [09:53:56] <sustrik> would want that kind of thing
| [Thursday 27 May 2010] [09:54:07] <sustrik> say client/server application
| [Thursday 27 May 2010] [09:54:26] <cremes>  but don't you agree that it is already possible today without a change to the library?
| [Thursday 27 May 2010] [09:54:28] <sustrik> server does obviously need 0mq framework as it is today
| [Thursday 27 May 2010] [09:55:07] <sustrik> the connections are hidden to the user
| [Thursday 27 May 2010] [09:55:25] <sustrik> which makes perfect sense if there's arbitrary number of them
| [Thursday 27 May 2010] [09:55:39] <sustrik> like in server handling 10,000's of connections
| [Thursday 27 May 2010] [09:55:46] <cremes>  i agree
| [Thursday 27 May 2010] [09:55:52] <sustrik> with the client the case is a bit different
| [Thursday 27 May 2010] [09:56:03] <sustrik> you want to open exactly one connection
| [Thursday 27 May 2010] [09:56:10] <sustrik> send/recv messages
| [Thursday 27 May 2010] [09:56:18] <sustrik> and get notified if the connection breaks
| [Thursday 27 May 2010] [09:56:46] <sustrik> technically, it's much easier than what 0mq does at the moment
| [Thursday 27 May 2010] [09:57:01] <sustrik> but nobody implemented it yet
| [Thursday 27 May 2010] [09:58:34] <cremes>  by "nobody implemented it yet" do you mean no one has implemented the 0mq wire format outside of the 0mq framework?
| [Thursday 27 May 2010] [09:58:47] <cremes>  because that is one way to accomplish that goal
| [Thursday 27 May 2010] [09:59:13] <sustrik> witthin or outside, doesn't matter
| [Thursday 27 May 2010] [09:59:25] <sustrik> no sync interface as for now
| [Thursday 27 May 2010] [10:02:06] <cremes>  btw, what is your release plan for 2.0.7? 1 week? a month? the api has changed quite a bit in master but i am waiting to update my bindings until the next release.
| [Thursday 27 May 2010] [10:02:20] <cremes>  i don't want to chase more api changes.
| [Thursday 27 May 2010] [10:02:42] <sustrik> it's not completely up to me
| [Thursday 27 May 2010] [10:02:52] <sustrik> let me check with others involved
| [Thursday 27 May 2010] [10:02:56] <cremes>  oh, i thought you owned it :)
| [Thursday 27 May 2010] [10:03:14] <sustrik> i have no idea how the build system works :)
| [Thursday 27 May 2010] [10:03:40] <cremes>  me neither!
| [Thursday 27 May 2010] [10:04:56] <jugg>    hmm, the watermark stuff doesn't even make sense in conjuction with REQ/REP anyway, as there can only ever be one message in the queue.
| [Thursday 27 May 2010] [10:05:25] <sustrik> jugg: right
| [Thursday 27 May 2010] [10:05:39] <jugg>    So, in this case, I would think that NOBLOCK should work the way I want it.
| [Thursday 27 May 2010] [10:05:59] <sustrik> on send?
| [Thursday 27 May 2010] [10:06:19] <jugg>    yes, the only point in the queue on send is if the server isn't available.
| [Thursday 27 May 2010] [10:07:17] <sustrik> yes, the queue allows you to continue processing even though the peer is not available
| [Thursday 27 May 2010] [10:07:28] <sustrik> it might seem an overkill in REQ case
| [Thursday 27 May 2010] [10:07:42] <sustrik> but REQ is just a convenience wrapper over XREQ
| [Thursday 27 May 2010] [10:08:01] <sustrik> which allows you to send arbitrary number of requests without waiting for answer
| [Thursday 27 May 2010] [10:08:14] <sustrik> in that case the queue makes perfect sense
| [Thursday 27 May 2010] [10:08:24] <jugg>    I guess that one isn't documented...
| [Thursday 27 May 2010] [10:08:37] <sustrik> it's not, sorry
| [Thursday 27 May 2010] [10:08:47] <sustrik> it works in same way as REQ
| [Thursday 27 May 2010] [10:09:00] <sustrik> but you don't have to recv after each send
| [Thursday 27 May 2010] [10:09:29] <sustrik> the drawback is that you have to do some bookkeeping by hand then
| [Thursday 27 May 2010] [10:10:00] <jugg>    yah, it would seem the messages would have to have manual sequence numbers tagged on.
| [Thursday 27 May 2010] [10:10:31] <jugg>    maybe not in a 1to1 but in a load-balanced topology, certainly.
| [Thursday 27 May 2010] [10:10:42] <sustrik> it works this way
| [Thursday 27 May 2010] [10:11:13] <sustrik> imagine a complex network of requester and repliers with arbitrary structure of stand-alone queues in the middle
| [Thursday 27 May 2010] [10:11:30] <sustrik> each request travels N hops till it gets to service
| [Thursday 27 May 2010] [10:11:47] <sustrik> the reply has to be routed back the same way, opposite direction
| [Thursday 27 May 2010] [10:12:11] <sustrik> so what happens is that each intermediate node tags the request with it's name
| [Thursday 27 May 2010] [10:12:33] <sustrik> when request arrives at the service
| [Thursday 27 May 2010] [10:12:54] <sustrik> it can has a stack of node names attached to it
| [Thursday 27 May 2010] [10:13:07] <sustrik> what REP socket does
| [Thursday 27 May 2010] [10:13:31] <sustrik> is that it cuts off the stack and provides raw message to the service
| [Thursday 27 May 2010] [10:13:43] <sustrik> (it stores the stack somewhere in the meantime)
| [Thursday 27 May 2010] [10:14:12] <sustrik> when service processes the request and sends the reply, REP socket takes the stored stack and attaches it to the reply
| [Thursday 27 May 2010] [10:14:40] <sustrik> then each node routes the reply right way and chops of one name from the stack
| [Thursday 27 May 2010] [10:15:10] <sustrik> when reply arrives at the original requester there are no more attached names in the message
| [Thursday 27 May 2010] [10:15:14] <sustrik> makes sense?
| [Thursday 27 May 2010] [10:16:05] <jugg>    yes
| [Thursday 27 May 2010] [10:16:26] <sustrik> so, when you use XREQ/XREP instead of REQ/REP
| [Thursday 27 May 2010] [10:16:35] <sustrik> the bookkeeping you have to do is:
| [Thursday 27 May 2010] [10:17:01] <sustrik> 1. in XREP you have to chop and store the stack manually and attach it back the reply manually
| [Thursday 27 May 2010] [10:17:26] <sustrik> 2. in XREQ you have to attach 'bottom of the stack' message part to the request manually
| [Thursday 27 May 2010] [10:17:37] <sustrik> and chop it off from the reply manually
| [Thursday 27 May 2010] [10:17:56] <sustrik> 'bottom of the stack' message part is just a message part zero bytes long
| [Thursday 27 May 2010] [10:18:17] <sustrik> that's all about XREQ/XREP
| [Thursday 27 May 2010] [10:19:16] <mato>    sustrik: maybe it's time to document XREQ/XREP after all? but mark it prominently as "API is experimental" or something?
| [Thursday 27 May 2010] [10:19:52] <sustrik> yes, i think so
| [Thursday 27 May 2010] [10:19:57] <sustrik> people are using it
| [Thursday 27 May 2010] [10:20:09] <sustrik> so no point in hiding the documentation
| [Thursday 27 May 2010] [10:20:12] <mato>    ok
| [Thursday 27 May 2010] [10:20:37] <mato>    do we have a code example that uses it? one of the devices?
| [Thursday 27 May 2010] [10:21:58] <sustrik> zmq_queue
| [Thursday 27 May 2010] [10:22:07] <mato>    ok, good
| [Thursday 27 May 2010] [10:51:12] <jugg>    well, I still cast my vote that a REQ socket should fail if NOBLOCK is set and the REP socket isn't available.   Failing that, I cast a vote for a UNAVAIL flag to be added which would then cause a failure if the REP socket is not available.  (available meaning not bound/connected)
| [Thursday 27 May 2010] [10:59:36] <sustrik> the problem is that it's a distributed system; say if you have a stand-alone queue in the middle, client would send the request (because queue is available) but it it'll linger in the queue because there are no services connected to it
| [Thursday 27 May 2010] [11:00:00] <sustrik> :|
| [Thursday 27 May 2010] [11:01:06] <sustrik> one of the design goals for 0mq is to allow for adding middle nodes into the network without changing semantics for the applications
| [Thursday 27 May 2010] [11:01:19] <jugg>    not at all, if the first hop is available, that is all that matters.  The nodes in the middle shouldn't be using NOBLOCK, and it should wait until the message can be processed further.
| [Thursday 27 May 2010] [11:01:43] <jugg>    The "gateway" received it, therefore the finaly processing should be ensured.
| [Thursday 27 May 2010] [11:02:41] <sustrik> can't you think of the queue in the client as a gateway as well?
| [Thursday 27 May 2010] [11:02:53] <jugg>    no
| [Thursday 27 May 2010] [11:03:02] <sustrik> why so?
| [Thursday 27 May 2010] [11:03:16] <sustrik> because of client application failing?
| [Thursday 27 May 2010] [11:05:38] <jugg>    An application knows how better to queue is data than a messaging handler.  The application is purely interested in knowing whether it can connect to the "system" or not.  If it can, it will send out messages.  If it can't, it'll wait until later.
| [Thursday 27 May 2010] [11:10:39] <sustrik> makes sense
| [Thursday 27 May 2010] [11:10:49] <sustrik> so we have two conflicting user requirements here
| [Thursday 27 May 2010] [11:11:24] <sustrik> 1. "don't bother me with transport details, accept the message and leave me alone"
| [Thursday 27 May 2010] [11:11:51] <sustrik> 2. "let me know if the message cannot be sent immediately"
| [Thursday 27 May 2010] [11:13:02]    * sustrik has to go now
| [Thursday 27 May 2010] [11:13:04] <jugg>    in the general case, it isn't if it can't be sent immediately (queuing is fine, as long as the queue is being processed - ie something is consuming it).  However in the REQ/REP case, where there is only a single message at a time, then yes, it simplifies down to that.
| [Thursday 27 May 2010] [11:13:31] <jugg>    Seems like the UNAVAIL flag satisfies both needs.
| [Thursday 27 May 2010] [11:13:39] <sustrik> jugg: yes, REQ/REP is special in a way
| [Thursday 27 May 2010] [11:13:49] <jugg>    sustrik: thanks for the input and discussion.
| [Thursday 27 May 2010] [11:14:12] <sustrik> I like to think of XREP/XREQ as of IP and REQ/REP as TCP
| [Thursday 27 May 2010] [11:14:23] <sustrik> it's as there were two separate layers there
| [Thursday 27 May 2010] [11:14:35] <sustrik> with distinct interfaces possibly
| [Thursday 27 May 2010] [11:14:37] <sustrik> anyway
| [Thursday 27 May 2010] [11:14:39] <sustrik> see you later
| [Thursday 27 May 2010] [11:14:43] <jugg>    bye
| [Thursday 27 May 2010] [12:20:57] <jugg>    Hmm, this is odd on a REP socket, I call send(msg, SNDMORE) 20 times, and one more time without SNDMORE.  On the REQ socket, I call recv() and check getsockopt(RCVMORE) which only returns 10 times that there are more messages.  The 10 successful recv() calls return every other sent message.  So, every other message is being lost somewhere.
| [Thursday 27 May 2010] [12:28:23] <jugg>    meh, this is quite bothersome...
| [Thursday 27 May 2010] [12:29:13] <zedas>   cremes: thanks.
| [Thursday 27 May 2010] [12:29:18] <zedas>   sustrik: any luck?
| [Thursday 27 May 2010] [12:45:49] <jugg>    there certainly seems to be a bug here.  I can combine my data set into a single message, and it comes accross just fine.  But if I use SNDMORE, every other message is lost.
| [Thursday 27 May 2010] [12:47:09] <cremes>  jugg: fyi, you are using an experimental feature. if you can reproduce a bug, file a report
| [Thursday 27 May 2010] [13:31:34] <jugg>    issue filed: http://github.com/sustrik/zeromq2/issues/issue/28
| [Thursday 27 May 2010] [13:31:58] <cremes>  excellent
| [Thursday 27 May 2010] [16:48:13] <bgranger>    sustrik: I have a question about if/when zmq_free_fn is called if zmq_send fails...
| [Thursday 27 May 2010] [16:49:32] <CIA-17>  pyzmq: 03Brian Granger 07nocopy * r4685c6d 10/ (zmq/_zmq.c zmq/_zmq.pyx): Adding comments about when Py_DECREF is called. - http://bit.ly/aW0sUW
| [Thursday 27 May 2010] [16:53:47] <sjampoo> bgranger, hi
| [Thursday 27 May 2010] [16:53:52] <bgranger>    hi
| [Thursday 27 May 2010] [16:54:11] <sjampoo> i verified it, it does not call zmq_free_fn on error
| [Thursday 27 May 2010] [16:54:31] <sjampoo> not sure if it should though
| [Thursday 27 May 2010] [16:54:49] <bgranger>    sjampoo:  thanks, so I possibly have to clean up myself (I can't rely on zmq_free_fn for that)
| [Thursday 27 May 2010] [16:55:43] <bgranger>    That is a tough one, because it really depends on why the send fails.
| [Thursday 27 May 2010] [16:56:19] <bgranger>    As long as 0mq is consistent and never calls it on error, I can handle it.  
| [Thursday 27 May 2010] [17:19:00] <CIA-17>  pyzmq: 03Brian Granger 07nocopy * rc0dce80 10/ (zmq/_zmq.c zmq/_zmq.pyx): Documentation an minor improvements to Message object. - http://bit.ly/cziApz
| [Thursday 27 May 2010] [17:22:47] <mato>    hi guys, does this work better for a description of the pipeline pattern?
| [Thursday 27 May 2010] [17:22:53] <mato>    The pipeline pattern is used for distributing data to _nodes_ arranged in
| [Thursday 27 May 2010] [17:22:53] <mato>    a pipeline. Data always flows *down* the pipeline, and each stage of the
| [Thursday 27 May 2010] [17:22:53] <mato>    pipeline is connected to at least one _node_. When a pipeline stage is
| [Thursday 27 May 2010] [17:22:53] <mato>    connected to multiple _nodes_, data shall be processed by all connected _nodes_
| [Thursday 27 May 2010] [17:22:53] <mato>    in parallel.
| [Thursday 27 May 2010] [17:23:25]    * mato is trying to find a single paragraph that'll work better than what is now in zmq_socket(3)
| [Thursday 27 May 2010] [17:29:06] <cremes>  mato: sounds better than what is there
| [Thursday 27 May 2010] [17:29:17] <cremes>  as usual, code is the best documentation
| [Thursday 27 May 2010] [17:29:42] <mato>    goodo
| [Thursday 27 May 2010] [18:49:01] <CIA-17>  pyzmq: 03Brian Granger 07master * r88a07bb 10/ (README.rst setup.cfg.template): Updating README.rst and setup.cfg.template. - http://bit.ly/9dVTj5
| [Thursday 27 May 2010] [18:59:46] <CIA-17>  zeromq2: 03Martin Lucina 07master * r5219e4c 10/ (doc/zmq.txt doc/zmq_setsockopt.txt doc/zmq_socket.txt): Clarify socket types in documentation, reinstate ZMQ_PAIR - http://bit.ly/9JerN2
| [Thursday 27 May 2010] [18:59:47] <CIA-17>  zeromq2: 03Mikko Koppanen 07master * r8bd3f74 10/ builds/redhat/zeromq.spec : Import redhat packaging - http://bit.ly/drWjGK
| [Thursday 27 May 2010] [18:59:48] <CIA-17>  zeromq2: 03Mikko Koppanen 07master * rb4cc7b9 10/ Makefile.am : dist-hook for copying zeromq.spec to top-level - http://bit.ly/bLxodo
| [Thursday 27 May 2010] [18:59:49] <CIA-17>  zeromq2: 03Martin Lucina 07master * r74f1a4a 10/ builds/redhat/zeromq.spec : 
| [Thursday 27 May 2010] [18:59:49] <CIA-17>  zeromq2: RPM packaging cleanups
| [Thursday 27 May 2010] [18:59:49] <CIA-17>  zeromq2: - ditch -utils package
| [Thursday 27 May 2010] [18:59:49] <CIA-17>  zeromq2: - add descriptions from Debian packaging - http://bit.ly/aTC42b
| [Thursday 27 May 2010] [19:39:31] <CIA-17>  zeromq2: 03Martin Lucina 07master * rda37c45 10/ (doc/zmq_bind.txt doc/zmq_connect.txt): 
| [Thursday 27 May 2010] [19:39:31] <CIA-17>  zeromq2: Clarify zmq_bind/zmq_connect
| [Thursday 27 May 2010] [19:39:31] <CIA-17>  zeromq2: Use the term 'endpoint' correctly, and drop the nonsense about local/remote addresses which doesn't clearly explain what is going on - http://bit.ly/d3A9wD
| [Thursday 27 May 2010] [20:56:35] <jugg>    are there any online logs of this channel?
| [Friday 28 May 2010] [08:27:02] <Guest1_>   hi there, I saw the impressive throughput using tcp. On my mac I'm getting over 1million messages per sec, 1 byte. Sounds nuts. What is the difference in terms of architecture between zeromq and something like Rabbit MQ which can only do a few thousands?
| [Friday 28 May 2010] [08:31:22] <sjampoo>   0MQ is lighter, not only the protocol (binary instead fo AMQP) but it also has less machinery overhead.
| [Friday 28 May 2010] [08:31:38] <sustrik>   sjampoo is right
| [Friday 28 May 2010] [08:32:00] <sustrik>   however, the actual algorithm that allows this thing is called 'message batching'
| [Friday 28 May 2010] [08:32:01] <Guest1_>   ah is it because the size of the payload is upfront
| [Friday 28 May 2010] [08:32:21] <sustrik>   it means that you send many messages using a single OS call
| [Friday 28 May 2010] [08:32:24] <Guest1_>   message batching is like socket nodelay = false on sockets?
| [Friday 28 May 2010] [08:32:32] <sustrik>   exactly
| [Friday 28 May 2010] [08:32:39] <Guest1_>   so do the messages get released after a timeout?
| [Friday 28 May 2010] [08:32:42] <Guest1_>   I think sockets is 200ms
| [Friday 28 May 2010] [08:32:58] <sustrik>   what exactly do you mean by released?
| [Friday 28 May 2010] [08:33:21] <Guest1_>   if messages are batched, and a listener is waiting for a message
| [Friday 28 May 2010] [08:33:28] <sustrik>   aha
| [Friday 28 May 2010] [08:34:07] <sustrik>   it's answered in faq
| [Friday 28 May 2010] [08:34:11] <sustrik>   but here you go:
| [Friday 28 May 2010] [08:34:12] <sustrik>   When sending messages in batches you have to wait for the last one to send the whole batch. This would make the latency of the first message in the batch much worse, wouldn't it?
| [Friday 28 May 2010] [08:34:12] <sustrik>   MQ batches messages in opportunistic manner. Rather than waiting for a predefined number of messages and/or predefined time interval, it sends all the messages available at the moment in one go. Imagine the network interface card is busy sending data. Once it is ready to send more data it asks MQ for new messages. MQ sends all the messages available at the moment. Does it harm the latency of the first message in the batch? No. The mes
| [Friday 28 May 2010] [08:34:12] <sustrik>   sage won't be sent earlier anyway because the networking card was busy. On the contrary, latency of subsequent messages will be improved because sending single batch to the card is faster then sending lot of small messages. On the other hand, if network card isn't busy, the message is sent straight away without waiting for following messages. Thus it'll have the best possible latency.
| [Friday 28 May 2010] [08:35:04] <Guest1_>   ah makes sense!
| [Friday 28 May 2010] [08:35:22] <Guest1_>   its true that sending a each message asap is slow
| [Friday 28 May 2010] [08:35:32] <Guest1_>   batching makes sense
| [Friday 28 May 2010] [08:35:43] <Guest1_>   nice
| [Friday 28 May 2010] [08:35:47] <sustrik>   :)
| [Friday 28 May 2010] [08:36:36] <Guest1_>   last question, I know you guys must be busy, do you use something like libevent? I quickly scanned the code and it looks like you may be using regular sockets
| [Friday 28 May 2010] [08:37:12] <Guest1_>   I was then thinking you might be using a thread per socket connection 
| [Friday 28 May 2010] [08:37:42] <sustrik>   no libevent, 0mq has almost zero dependencies to make it as portable as possible
| [Friday 28 May 2010] [08:38:04] <sustrik>   as for the threading, there's a thread pool
| [Friday 28 May 2010] [08:38:17] <sustrik>   you can assign one thread to one connection
| [Friday 28 May 2010] [08:38:42] <sustrik>   but in default case the connections are simply load balanced evenly within the thread pool
| [Friday 28 May 2010] [08:39:05] <Guest1_>   were you able to benchmark number of possible connections, should I look in performance section?
| [Friday 28 May 2010] [08:39:27] <Guest1_>   reason being I'm an architect/engineer for a mobile application
| [Friday 28 May 2010] [08:39:42] <Guest1_>   we have an application that requires 30k concurrent connections
| [Friday 28 May 2010] [08:39:56] <Guest1_>   with a throughput of 10k messages per second
| [Friday 28 May 2010] [08:40:06] <sustrik>   for each connection?
| [Friday 28 May 2010] [08:40:18] <Guest1_>   not for each connection
| [Friday 28 May 2010] [08:40:24] <sustrik>   altogether
| [Friday 28 May 2010] [08:40:26] <sustrik>   ok
| [Friday 28 May 2010] [08:40:26] <Guest1_>   yes
| [Friday 28 May 2010] [08:40:38] <sustrik>   it should work, but we haven't really tested with 10k's of connections
| [Friday 28 May 2010] [08:40:57] <sustrik>   what's done however, is:
| [Friday 28 May 2010] [08:41:03] <Guest1_>   thanks for being honest, I will have a look at doing this
| [Friday 28 May 2010] [08:41:31] <sustrik>   1. underlying polling mechanism is epoll/devpoll/kqueue -- if available on the platform
| [Friday 28 May 2010] [08:41:44] <Guest1_>   at the moment we're playing with libevent, but getting a max throughput of 5k messages per second (non batched) over 1Gbps network for 9k connections
| [Friday 28 May 2010] [08:42:01] <sustrik>   2. scheduling algorithms are O(1) with respect to numer of connections
| [Friday 28 May 2010] [08:42:02] <Guest1_>   ah cool using kqueue if available
| [Friday 28 May 2010] [08:42:07] <Guest1_>   nice
| [Friday 28 May 2010] [08:42:56] <Guest1_>   are you guys the developers?
| [Friday 28 May 2010] [08:43:08] <sustrik>   yup
| [Friday 28 May 2010] [08:43:21] <Guest1_>   neato
| [Friday 28 May 2010] [08:44:01] <sustrik>   Guest1_: if you do the test with 30k connections it would be great if you can shared the results
| [Friday 28 May 2010] [08:45:20] <Guest1_>   shall do
| [Friday 28 May 2010] [08:45:41] <Guest1_>   do you have a roadmap btw?
| [Friday 28 May 2010] [08:46:01] <Guest1_>   for example are you planning to go towards being an ESB?
| [Friday 28 May 2010] [08:46:29] <Guest1_>   or being the best multi-platform & language queuing platform?
| [Friday 28 May 2010] [08:46:48] <sustrik>   it can be used in ESB way
| [Friday 28 May 2010] [08:47:18] <sustrik>   the functionality is somehow constrained when compared to enterprise solutions
| [Friday 28 May 2010] [08:47:26] <sustrik>   but that's by design
| [Friday 28 May 2010] [08:47:40] <Guest1_>   just the queue management, orchestration and message mapping would be great
| [Friday 28 May 2010] [08:47:45] <sustrik>   "get rid of bells and whistles"
| [Friday 28 May 2010] [08:47:49] <Guest1_>   yep
| [Friday 28 May 2010] [08:47:58] <Guest1_>   just a thought for you, if you were bored
| [Friday 28 May 2010] [08:48:19] <sustrik>   queue management = monitoring number of messages in queues?
| [Friday 28 May 2010] [08:48:28] <Guest1_>   yes
| [Friday 28 May 2010] [08:48:37] <Guest1_>   and configuring such as security
| [Friday 28 May 2010] [08:49:07] <sustrik>   what about message mapping?
| [Friday 28 May 2010] [08:49:08] <Guest1_>   also massive bonus if you built connectors to mobile phone stacks like J2ME and iPhone/ObjectiveC
| [Friday 28 May 2010] [08:49:32] <Guest1_>   message mapping is taking the raw message such as JSON/XML and mapping it to another structure which is JSON/XML
| [Friday 28 May 2010] [08:49:45] <sustrik>   ah transformation
| [Friday 28 May 2010] [08:49:48] <Guest1_>   aye
| [Friday 28 May 2010] [08:49:49] <sustrik>   can be built on top
| [Friday 28 May 2010] [08:49:52] <Guest1_>   yep
| [Friday 28 May 2010] [08:49:54] <sustrik>   not my concern :)
| [Friday 28 May 2010] [08:50:29] <sustrik>   i am not a java developer, but shouldn't java binding work for j2me?
| [Friday 28 May 2010] [08:50:55] <Guest1_>   no, not J2SE standard
| [Friday 28 May 2010] [08:51:05] <Guest1_>   you have to use the J2ME socket library
| [Friday 28 May 2010] [08:51:21] <Guest1_>   also, when you detect blackberry you have do a special switch
| [Friday 28 May 2010] [08:51:22] <sustrik>   the java binding is just a wrapper on top of c library
| [Friday 28 May 2010] [08:51:33] <sustrik>   all you need from JDK is JNI
| [Friday 28 May 2010] [08:51:33] <Guest1_>   no C library access on J2ME phone
| [Friday 28 May 2010] [08:51:43] <Guest1_>   you can't access it, sandboxed
| [Friday 28 May 2010] [08:51:43] <sustrik>   aha, then no luck
| [Friday 28 May 2010] [08:52:16] <Guest1_>   so we have ported to 13 Nokia models and Blackberry. Luckily 99% the same socket code
| [Friday 28 May 2010] [08:52:24] <Guest1_>   just a suggestion for you
| [Friday 28 May 2010] [08:52:36] <Guest1_>   I will leave you in peace, thanks for talking to me
| [Friday 28 May 2010] [08:52:43] <sustrik>   no problem
| [Friday 28 May 2010] [08:52:46] <sustrik>   bye
| [Friday 28 May 2010] [08:52:49] <Guest1_>   cya
| [Friday 28 May 2010] [16:59:17] <truelyky1e>    help
| [Saturday 29 May 2010] [04:38:54] <truelykyle>  leave
| [Saturday 29 May 2010] [18:11:25] <bert_>   hello
| [Saturday 29 May 2010] [18:13:54] <bert_>   just trying to find some info about 0mq
| [Sunday 30 May 2010] [14:24:37] <zedas> sustrik: so i tried building my stuff on netbsd today.  looks like the kevent call complete chokes after a few runs of zmq_poll
| [Sunday 30 May 2010] [14:24:50] <sustrik>   hi
| [Sunday 30 May 2010] [14:24:58] <sustrik>   what happens exactly?
| [Sunday 30 May 2010] [14:25:22] <sustrik>   mato tried netbsd and said it looks ok some time ok
| [Sunday 30 May 2010] [14:25:29] <sustrik>   ago
| [Sunday 30 May 2010] [14:25:40] <zedas> http://dpaste.de/5esX/
| [Sunday 30 May 2010] [14:25:59] <zedas> so that's with the latest from your git repo
| [Sunday 30 May 2010] [14:26:04] <sustrik>   hang up?
| [Sunday 30 May 2010] [14:26:23] <zedas> yeah it handles a few net calls then blocks permanently right htere
| [Sunday 30 May 2010] [14:26:38] <sustrik>   what scenario?
| [Sunday 30 May 2010] [14:26:45] <sustrik>   the same as with the memory leak?
| [Sunday 30 May 2010] [14:27:06] <zedas> yep just doing the mulletdb test suite
| [Sunday 30 May 2010] [14:27:17] <zedas> but also with just access it off a regular test client
| [Sunday 30 May 2010] [14:27:29] <zedas> oh did you figure out that memory leak on the socket connects?
| [Sunday 30 May 2010] [14:27:37] <zedas> i'm just avoiding connecting too many times :-)
| [Sunday 30 May 2010] [14:27:42] <sustrik>   i've figured out the reason
| [Sunday 30 May 2010] [14:27:47] <sustrik>   haven't fixed it yet
| [Sunday 30 May 2010] [14:27:59] <sustrik>   will do today/tomorrow
| [Sunday 30 May 2010] [14:28:43] <sustrik>   mato: hoo! do you still have the netbsd system available?
| [Sunday 30 May 2010] [14:29:21] <zedas> sustrik: yeah no rush, there's other problems with netbsd so i'm not going to use it on this project.
| [Sunday 30 May 2010] [14:29:41] <zedas> seems in their desperation to not use anything GPLed the just ended up making the whole OS very inconvenient for modern software
| [Sunday 30 May 2010] [14:29:49] <sustrik>   still, we should try it before 2.0.7 release
| [Sunday 30 May 2010] [20:05:35] <versificateur> hello :)
| [Sunday 30 May 2010] [20:06:33] <versificateur> I have some question about compiling java bindings 
| [Sunday 30 May 2010] [20:07:24] <versificateur> ...
| [Sunday 30 May 2010] [20:07:52] <versificateur> if i could have some help i'll be happy
| [Sunday 30 May 2010] [21:09:08] <versificateur> hello
| [Sunday 30 May 2010] [21:14:33] <versificateur> please...
| [Sunday 30 May 2010] [23:37:07] <sustrik>   versificateur: hi
| [Monday 31 May 2010] [00:13:31] <CIA-17>    zeromq2: 03Martin Sustrik 07master * r04fcd4d 10/ src/rep.cpp : memory leak in REP socket fixed - http://bit.ly/d6dQUE
| [Monday 31 May 2010] [00:13:32] <CIA-17>    zeromq2: 03Martin Sustrik 07master * r3bb60da 10/ (7 files in 3 dirs): Merge branch 'master' of git@github.com:sustrik/zeromq2 - http://bit.ly/cgjNYb
| [Monday 31 May 2010] [00:13:39] <sustrik>   zedas: done, try it now
| [Monday 31 May 2010] [00:19:48] <CIA-17>    zeromq2: 03Martin Sustrik 07master * r2e9be56 10/ src/req.cpp : memory leak in REQ socket fixed - http://bit.ly/9ULDmt
| [Monday 31 May 2010] [01:08:31] <zedas> sustrik: cool i'll give it a shot
| [Monday 31 May 2010] [01:08:42] <sustrik>   ok
| [Monday 31 May 2010] [03:30:28] <CIA-17>    zeromq2: 03Martin Sustrik 07master * rbe6019a 10/ src/req.cpp : issue 28. - SNDMORE/ RCVMORE is dropping every other message - http://bit.ly/bQHWhC
| [Monday 31 May 2010] [08:19:15] <CIA-17>    zeromq2: 03Martin Lucina 07master * r8becacf 10/ (doc/zmq_setsockopt.txt doc/zmq_getsockopt.txt): 
| [Monday 31 May 2010] [08:19:15] <CIA-17>    zeromq2: Documentation updates
| [Monday 31 May 2010] [08:19:15] <CIA-17>    zeromq2: Add zmq_getsockopt(3), clean up zmq_setsockopt(3). - http://bit.ly/dyI3wE
| [Monday 31 May 2010] [08:19:15] <CIA-17>    zeromq2: 03Martin Lucina 07master * reb9ff1e 10/ (doc/zmq_getsockopt.txt doc/zmq_recv.txt doc/zmq_send.txt): 
| [Monday 31 May 2010] [08:19:15] <CIA-17>    zeromq2: Documentation updates
| [Monday 31 May 2010] [08:19:16] <CIA-17>    zeromq2: Multi-part messages - http://bit.ly/aVO3PG
| [Monday 31 May 2010] [08:19:18] <CIA-17>    zeromq2: 03Martin Lucina 07master * r0fa73b0 10/ doc/zmq.txt : 
| [Monday 31 May 2010] [08:19:18] <CIA-17>    zeromq2: Documentation updates
| [Monday 31 May 2010] [08:19:18] <CIA-17>    zeromq2: Add getsockopt to index - http://bit.ly/bwZY5J
| [Monday 31 May 2010] [08:19:18] <CIA-17>    zeromq2: 03Martin Lucina 07master * rdfbaf4f 10/ (doc/zmq_recv.txt doc/zmq_send.txt): 
| [Monday 31 May 2010] [08:19:19] <CIA-17>    zeromq2: Documentation updates
| [Monday 31 May 2010] [08:19:19] <CIA-17>    zeromq2: Multi-part messages - http://bit.ly/aj9jbE
| [Monday 31 May 2010] [08:19:20] <CIA-17>    zeromq2: 03Martin Lucina 07master * r8a4df43 10/ doc/Makefile.am : 
| [Monday 31 May 2010] [08:19:20] <CIA-17>    zeromq2: Documentation updates
| [Monday 31 May 2010] [08:19:21] <CIA-17>    zeromq2: Add getsockopt to Makefile.am - http://bit.ly/9i34WB
| [Monday 31 May 2010] [09:42:53] <cremes>    sustrik: i'm available in irc if you want to try anything else with that zmq_poll issue
| [Monday 31 May 2010] [09:54:37] <sustrik>   cremes: have you seen my comment?
| [Monday 31 May 2010] [09:55:03] <cremes>    sustrik: yes; i ran the test and posted my results
| [Monday 31 May 2010] [09:55:14] <sustrik>   a-ha
| [Monday 31 May 2010] [09:56:08] <sustrik>   heve you sent it a message?
| [Monday 31 May 2010] [09:56:15] <sustrik>   i've just posted the receving part
| [Monday 31 May 2010] [10:00:39] <cremes>    no, i thought it was supposed to be self-contained
| [Monday 31 May 2010] [10:00:42] <cremes>    i'll do that now
| [Monday 31 May 2010] [10:00:59] <sustrik>   thx
| [Monday 31 May 2010] [10:05:29] <cremes>    sustrik: fails on OSX, succeeds on linux
| [Monday 31 May 2010] [10:05:53] <sustrik>   fails = reports pollout?
| [Monday 31 May 2010] [10:06:11] <cremes>    the assertion fails; i'll change the program to print out revents
| [Monday 31 May 2010] [10:07:25] <sustrik>   btw, zedas already reported problems when runing on netbsd... this may be the same thing as both use kevent rather than epoll
| [Monday 31 May 2010] [10:08:37] <cremes>    sustrik: zmq_poll returns, but rc == 0 and revents is 0
| [Monday 31 May 2010] [10:09:16] <sustrik>   that's because you've left the timeout value in place, no?
| [Monday 31 May 2010] [10:09:18] <sustrik>   try -1
| [Monday 31 May 2010] [10:09:57] <cremes>    i had it set for 10 seconds
| [Monday 31 May 2010] [10:10:03] <cremes>    however, just saw something interesting...
| [Monday 31 May 2010] [10:10:09] <cremes>    it succeeds when passed -1
| [Monday 31 May 2010] [10:10:17] <cremes>    but fails with 10000000
| [Monday 31 May 2010] [10:10:58] <sustrik>   see man zmq_poll(3)
| [Monday 31 May 2010] [10:11:23] <sustrik>   zmq_poll() shall wait up to timeout microseconds
| [Monday 31 May 2010] [10:11:30] <sustrik>   note *up to* part
| [Monday 31 May 2010] [10:11:45] <cremes>    so it may unblock ahead of time?
| [Monday 31 May 2010] [10:11:53] <sustrik>   yes, this is an optimisation
| [Monday 31 May 2010] [10:12:05] <sustrik>   i can make it to unblock on time
| [Monday 31 May 2010] [10:12:13] <sustrik>   but it will slow zmq_poll down
| [Monday 31 May 2010] [10:12:25]      * sustrik is not sure whats better
| [Monday 31 May 2010] [10:12:28] <cremes>    btw, it fails in the same way on linux when given a timeout value > 0
| [Monday 31 May 2010] [10:12:47] <cremes>    i set it for 20 seconds and then sent a message within 1 or 2 and it failed
| [Monday 31 May 2010] [10:12:48] <sustrik>   same way = reports pollout?
| [Monday 31 May 2010] [10:14:40] <cremes>    reports revents == 0
| [Monday 31 May 2010] [10:14:52] <sustrik>   ah, that's the timeout thing
| [Monday 31 May 2010] [10:14:53] <cremes>    on both osx and linux
| [Monday 31 May 2010] [10:15:03] <sustrik>   yes, it's supposed to work that way
| [Monday 31 May 2010] [10:15:07] <cremes>    but i am clearly sending it a message
| [Monday 31 May 2010] [10:15:24] <sustrik>   ok. some internal details:
| [Monday 31 May 2010] [10:15:46] <sustrik>   zmq_poll unblock on any internal event that affects a 0mq socket in the pollset
| [Monday 31 May 2010] [10:15:55] <sustrik>   in this case what happens is
| [Monday 31 May 2010] [10:16:06] <sustrik>   that "connection is established" event occurs
| [Monday 31 May 2010] [10:16:15] <sustrik>   thus zmq_poll exits
| [Monday 31 May 2010] [10:16:28] <sustrik>   with no messages to delivers
| [Monday 31 May 2010] [10:16:49] <sustrik>   as i said this kind of behaviour can be prevented
| [Monday 31 May 2010] [10:16:57] <sustrik>   but it'll slow zmq_poll down
| [Monday 31 May 2010] [10:17:35] <sustrik>   back to your original problem!
| [Monday 31 May 2010] [10:17:39] <cremes>    i changed the sample program to call zmq_poll a second time; it still returns revents == 0
| [Monday 31 May 2010] [10:17:56] <cremes>    there should have been one in queue
| [Monday 31 May 2010] [10:18:04] <sustrik>   change it to loop forever
| [Monday 31 May 2010] [10:18:45] <sustrik>   afaics there are two events raised when connection is established
| [Monday 31 May 2010] [10:19:09] <sustrik>   i/o thread says the app thead: "here's the pipe you can write messages to"
| [Monday 31 May 2010] [10:19:25] <sustrik>   and afterwards: "here's the pipe you can read messages from"
| [Monday 31 May 2010] [10:20:35] <cremes>    ok
| [Monday 31 May 2010] [10:20:45] <cremes>    let me try this on osx and see if i get my original problem
| [Monday 31 May 2010] [10:20:50] <sustrik>   ok
| [Monday 31 May 2010] [10:27:15] <cremes>    the sample program returns the correct value; i'll try it with my test program to see if it behaves correctly now
| [Monday 31 May 2010] [10:30:04] <sustrik>   ack
| [Monday 31 May 2010] [10:35:47] <cremes>    it still gets a POLLOUT first; i'm going to operate under the assumption this is my bug
| [Monday 31 May 2010] [10:35:52] <cremes>    i'll keep looking into it
| [Monday 31 May 2010] [10:37:03] <sustrik>   i've just checked the code
| [Monday 31 May 2010] [10:37:16] <sustrik>   cannot find a way how POLLOUT may have been signaled
| [Monday 31 May 2010] [10:37:44] <sustrik>   unfortunately, i cannot test on OSX as I don't have it installed
| [Monday 31 May 2010] [10:38:38] <cremes>    i'll keep looking from my end; perhaps i'm doing something stupid (likely) :)
| [Monday 31 May 2010] [11:24:26] <cremes>    sustrik: you can close the issue; it was a bug in my bindings
| [Monday 31 May 2010] [11:24:35] <sustrik>   ah, ok
| [Monday 31 May 2010] [11:24:45] <cremes>    i had a logic error in one of my examples; it was doing a "ping pong" using two REQ sockets
| [Monday 31 May 2010] [11:25:14] <cremes>    apparently it's possible to tie 2 of those together
| [Monday 31 May 2010] [11:25:45] <sustrik>   cremes: ok, the issue is closed
| [Monday 31 May 2010] [11:25:57] <cremes>    but the "receiver" REQ will get POLLOUT on the first received message and POLLIN on all subsequent ones
| [Monday 31 May 2010] [11:26:10] <cremes>    sorry for wasting your time
| [Monday 31 May 2010] [11:32:38] <sustrik>   no problem
| [Monday 31 May 2010] [12:33:58] <alefka>    hi
| [Monday 31 May 2010] [12:34:23] <alefka>    anybody?
| [Monday 31 May 2010] [12:35:32] <alefka>    (