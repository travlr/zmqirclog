===============
2011-March
===============

| [Tuesday 01 March 2011] [00:29:05] <cremes>	andrewvc: for a little bit; what's up?
| [Tuesday 01 March 2011] [00:29:22] <andrewvc>	hey, some good news, wanted your thoughts on something
| [Tuesday 01 March 2011] [00:29:35] <andrewvc>	so, one issue with ffi-rzmq is depending on ffi
| [Tuesday 01 March 2011] [00:29:48] <andrewvc>	which is good in MRI, but bad in RBX and jRuby
| [Tuesday 01 March 2011] [00:30:02] <cremes>	right
| [Tuesday 01 March 2011] [00:30:16] <andrewvc>	https://github.com/andrewvc/em-zeromq/blob/master/em-zeromq.gemspec
| [Tuesday 01 March 2011] [00:30:21] <andrewvc>	did you know you can do that in a gemspec?
| [Tuesday 01 March 2011] [00:30:26] <cremes>	the jruby & rbx guys are working on a solution so the dependencies are tracked properly
| [Tuesday 01 March 2011] [00:30:26] <andrewvc>	I https://github.com/andrewvc/em-zeromq/blob/master/em-zeromq.gemspec#L20
| [Tuesday 01 March 2011] [00:30:29] <andrewvc>	err that line
| [Tuesday 01 March 2011] [00:30:33] <andrewvc>	I think that should work
| [Tuesday 01 March 2011] [00:30:51] <cremes>	true!
| [Tuesday 01 March 2011] [00:30:57] <cremes>	it's just ruby after all
| [Tuesday 01 March 2011] [00:31:01] <andrewvc>	yep
| [Tuesday 01 March 2011] [00:31:19] <andrewvc>	yeah, oruen contributed that bit
| [Tuesday 01 March 2011] [00:31:27] <cremes>	i'll commit something similar; thanks for the idea
| [Tuesday 01 March 2011] [00:31:31] <andrewvc>	but it should really be in ffi-rzmq not em-zeromq
| [Tuesday 01 March 2011] [00:31:36] <andrewvc>	cool, actually, one other thing
| [Tuesday 01 March 2011] [00:31:46] <andrewvc>	he switched me off bones and onto bundler for gem releases
| [Tuesday 01 March 2011] [00:32:01] <cremes>	yeah, i saw that; honeslty, bones has been pissing me off
| [Tuesday 01 March 2011] [00:32:09] <andrewvc>	yeah, it doesn't work well under rbx either
| [Tuesday 01 March 2011] [00:32:12] <cremes>	there is no compatibility between the 2.x and 3.x versions
| [Tuesday 01 March 2011] [00:32:29] <andrewvc>	oh? yeah it's a bit of overkill, the skeleton is nice, the rake tasks, not so much
| [Tuesday 01 March 2011] [00:32:51] <cremes>	it's kind of a big change for so little benefit... i'm open to suggestions and/or patches
| [Tuesday 01 March 2011] [00:33:07] <andrewvc>	yeah, I'll throw one together this week if you like the idea
| [Tuesday 01 March 2011] [00:33:19] <cremes>	sure
| [Tuesday 01 March 2011] [00:33:30] <andrewvc>	I'm excited with these changes it should finally be possible to just gem install and get everything you need
| [Tuesday 01 March 2011] [00:34:05] <cremes>	that is a nice little benefit; the 'ffi' gem situation has been poor for a while now
| [Tuesday 01 March 2011] [00:34:09] <andrewvc>	right now dripdrop needs a custom eventmachine and libzeromq2 and maybe ffi.
| [Tuesday 01 March 2011] [00:34:15] <andrewvc>	such a pain
| [Tuesday 01 March 2011] [00:34:18] <cremes>	true
| [Tuesday 01 March 2011] [00:34:28] <cremes>	every little bit to make it easier is worthwhile
| [Tuesday 01 March 2011] [00:35:22] <andrewvc>	yep, the only missing piece is probably an apt package for a current zeromq
| [Tuesday 01 March 2011] [00:35:47] <andrewvc>	but that's prolly about 2 years off :)
| [Tuesday 01 March 2011] [00:35:59] <cremes>	well, 0mq seems to be moving a little faster again... packages are always out of date
| [Tuesday 01 March 2011] [00:36:04] <cremes>	we live in a git world now
| [Tuesday 01 March 2011] [00:36:20] <andrewvc>	yeah, someone should right an apt adapter to github
| [Tuesday 01 March 2011] [00:36:38] <andrewvc>	or git in general I guess
| [Tuesday 01 March 2011] [00:37:30] <andrewvc>	hmmm, that's definitely going on my spare time ideas list
| [Tuesday 01 March 2011] [00:41:01] <cremes>	i think something like that exists already... but i can't remember where i saw it :(
| [Tuesday 01 March 2011] [00:41:02] <cremes>	time for bed... i've been burning the candle at both ends lately
| [Tuesday 01 March 2011] [02:50:32] <jstrom`>	Hi ppl! I'm playing a bit with async zmq (2.1.1rc) and perl on FreeBSD.. Building a POE socket wrapper (yes i know about the anyevent/moose thingy), works great! However, when I close sockets (pub/sub tcp in same app) it crashes :/ Seems to sometimes crash in mailbox_t::send right after close(), and sometimes it can close both but then crash in kqueue::kevent_add.. Is there any known bugs regarding kqueue/freebsd/perl? I've tried to reproduce in C but canno
| [Tuesday 01 March 2011] [02:52:05] <jstrom`>	if it doesnt crash in close, the kevent_add crash comes right after the close() calls (waiting a bit before calling ctx->terminate()).
| [Tuesday 01 March 2011] [02:58:42] <jstrom`>	the perl unittests seems to work at least.. hrm.. gotta dig deeper i guess :)
| [Tuesday 01 March 2011] [03:00:35] <jstrom`>	the crash in send is hitting errno_assert (nbytes != -1); in mailbox_t::send
| [Tuesday 01 March 2011] [03:15:49] <private_meta>	jstrom`: Your first message was cut off after "reproduce in C but canno"
| [Tuesday 01 March 2011] [03:21:54] <jstrom`>	doh, ah well nothing vital there: I've tried to reproduce in C but cannot 
| [Tuesday 01 March 2011] [03:21:55] <jstrom`>	                    really get it to fail there..
| [Tuesday 01 March 2011] [03:21:59] <jstrom`>	(evil newlines!)
| [Tuesday 01 March 2011] [03:22:31] <jstrom`>	errno=35 (EAGAIN) when i hit the assert btw
| [Tuesday 01 March 2011] [03:37:42] <sustrik>	jstrom`: afaics what's happening there is 0mq filling up the socketpair buffer, so it doubles it's size, checks whether size was doubled and tries to write to the socketpair once again -- it fails but it should not
| [Tuesday 01 March 2011] [03:37:57] <sustrik>	some strange freebsd quirk i assume
| [Tuesday 01 March 2011] [03:39:47] <jstrom`>	maybee, will try harder to reproduce in C (havent gotten around to do select stuff there, only open pub/sub, then send/recv and then close)
| [Tuesday 01 March 2011] [03:40:10] <sustrik>	you don't have to reproduce it
| [Tuesday 01 March 2011] [03:40:23] <sustrik>	the question is why freebsd behaves in such a way
| [Tuesday 01 March 2011] [03:40:31] <sustrik>	and whether it can be worked around
| [Tuesday 01 March 2011] [03:41:09] <jstrom`>	mkey
| [Tuesday 01 March 2011] [03:41:59] <jstrom`>	I'll try to strip it down to a simple test case at least :)
| [Tuesday 01 March 2011] [03:48:59] <private_meta>	The term "workaround" makes me shudder every time I read or hear it...
| [Tuesday 01 March 2011] [03:52:31] <sustrik>	that's often exaclty what you have to do in the case with OS bug :)
| [Tuesday 01 March 2011] [04:01:56] <jstrom`>	hm simple non-FD-based socket(),socket(),send(),recv(),close(),close(),term() works fine.. seems to be in more advanced cases the problem occurs (i can reproduce it fully there). Will continue until i get a working testcase, but will have to do it later today.
| [Tuesday 01 March 2011] [04:07:56] <private_meta>	Hmm... if heartbeats are asynchroneous in both directions and heartbeat sending and receiving are made via zmq_poll on the server side, how can you make independent sending on the client side if you don't have zmq_poll's timeouts?
| [Tuesday 01 March 2011] [04:38:02] <private_meta>	When using socket_t::getsockopt, the equivalent of C's zmq_getsockopt in C++, it works if I call getsockopt in the same function as I create the socket, but fails if I give the socket pointer to a different function and request it there. It gives me an invalid argument error in the function. 
| [Tuesday 01 March 2011] [04:38:20] <private_meta>	According to the man pages, that's "The requested option option_name is unknown, or the requested option_len or option_value is invalid, or the size of the buffer pointed to by option_value, as specified by option_len, is insufficient for storing the option value."
| [Tuesday 01 March 2011] [04:38:43] <private_meta>	But I call it exactly the same, I even call the same pointer, but in two different places, yet the same thread. Any idea what might be the problem there?
| [Tuesday 01 March 2011] [04:45:55] <private_meta>	hmm now it suddenly works... I hate demonstrative effects to the core
| [Tuesday 01 March 2011] [04:46:28] <private_meta>	Somewhat unreliable behavior
| [Tuesday 01 March 2011] [05:48:22] <Guthur>	sustrik: will there be minutes are a webcast of the meetup at san fran
| [Tuesday 01 March 2011] [06:35:32] <jstrom`>	sustrik: i think i found the problem.. I was using IO::Handle to wrap the ZMQ_FD to make it select'able in POE, and i accidentally called close() on the IO::handle, which means close() on the actual FD.. 
| [Tuesday 01 March 2011] [06:37:44] <jstrom`>	so, not a ZMQ/freebsd problem, just buggy code on my end :) 
| [Tuesday 01 March 2011] [06:41:53] <Guest19497>	can any one help me about 0mq
| [Tuesday 01 March 2011] [06:41:56] <skm>	0mq for sending files: stupid idea, yes?
| [Tuesday 01 March 2011] [06:42:15] <Guest19497>	what the 0mq architecture?
| [Tuesday 01 March 2011] [06:42:19] <drbobbeaty>	skim: It's not what I'd use, no.
| [Tuesday 01 March 2011] [06:42:41] <Guest19497>	hi
| [Tuesday 01 March 2011] [06:42:55] <skm>	sweet - ill stick to 0mq for messaging and regular sockets for file sending
| [Tuesday 01 March 2011] [06:43:17] <drbobbeaty>	Guest19497: There's a very nice into to ZeroMQ at http://zguide.zeromq.org/page:all
| [Tuesday 01 March 2011] [06:43:59] <Guest19497>	thanks
| [Tuesday 01 March 2011] [06:44:10] <drbobbeaty>	Guest19497: it contains lots of examples, explanations, even different language bindings.
| [Tuesday 01 March 2011] [06:44:35] <pieterh>	I've made a URL shortener at zero.mq
| [Tuesday 01 March 2011] [06:45:00] <pieterh>	e.g. http://zero.mq/ib->https://github.com/ianbarber/ZeroMQ-Talk
| [Tuesday 01 March 2011] [06:45:08] <pieterh>	if anyone wants access to this, let me know
| [Tuesday 01 March 2011] [06:53:40] <private_meta>	pieterh: hmm... when trying to translate the lazy pirate pattern to C++ I get assertions
| [Tuesday 01 March 2011] [06:54:05] <pieterh>	private_meta: such as...?
| [Tuesday 01 March 2011] [06:54:53] <private_meta>	I have the lazy pirate client, I try to start it, and I would have the setsockopt call for ZMQ_LINGER. When calling it, I get the error "Assertion failed: rc == 0 (zmq_connecter.cpp:47)"
| [Tuesday 01 March 2011] [06:55:00] <pieterh>	please post your code to a gist
| [Tuesday 01 March 2011] [06:55:05] <private_meta>	gist?
| [Tuesday 01 March 2011] [06:55:18] <pieterh>	gist.github.com or another pastebin
| [Tuesday 01 March 2011] [06:55:40] <pieterh>	presumably the connection failed because you have no server running?
| [Tuesday 01 March 2011] [06:55:56] <pieterh>	I don't know, can't tell without code to look at...
| [Tuesday 01 March 2011] [06:56:13] <pieterh>	you've run the C code, and it works?
| [Tuesday 01 March 2011] [06:56:32] <private_meta>	The server is running
| [Tuesday 01 March 2011] [06:56:39] <private_meta>	hmm... No, I didn't try the C version
| [Tuesday 01 March 2011] [06:56:55] <private_meta>	I don't really code in C, I try to avoid it
| [Tuesday 01 March 2011] [06:56:58] <private_meta>	(don't like it)
| [Tuesday 01 March 2011] [06:57:38] <pieterh>	at least run it, as a sanity check
| [Tuesday 01 March 2011] [06:57:55] <private_meta>	meh... I'll try
| [Tuesday 01 March 2011] [06:58:34] <pieterh>	it's a basic tool for problem solving, replace pieces and see when it starts/stops breaking
| [Tuesday 01 March 2011] [07:00:18] <private_meta>	pieterh: btw, you wrote in the docs that you use the lazy pirate client for the paranoid pirate server. You made heartbeats in the server, but apparently not on the client. am I misunderstanding something there?
| [Tuesday 01 March 2011] [07:00:28] <pieterh>	nope, that's how it works
| [Tuesday 01 March 2011] [07:01:02] <pieterh>	there are good reasons to do heartbeating from queue to worker, but not from client to queue, afaics
| [Tuesday 01 March 2011] [07:01:27] <pieterh>	queues don't hold any resources per client
| [Tuesday 01 March 2011] [07:01:39] <pieterh>	clients don't care if the queue is present/absent except when they are doing a request
| [Tuesday 01 March 2011] [07:01:51] <private_meta>	You send a heartbeat out, but the client doesn't even seem to receive one, I don't quite get how that works to assure that there actually IS a working connection
| [Tuesday 01 March 2011] [07:02:08] <pieterh>	the client-to-queue dialog has no heartbeating
| [Tuesday 01 March 2011] [07:02:48] <private_meta>	ok, you say, queue, do you mean the server?
| [Tuesday 01 March 2011] [07:03:10] <pieterh>	I'm avoiding the word 'server' because it's ambiguous
| [Tuesday 01 March 2011] [07:03:19] <pieterh>	we have client, queue, and worker
| [Tuesday 01 March 2011] [07:03:30] <pieterh>	when I say 'queue', I mean 'queue'... :-)
| [Tuesday 01 March 2011] [07:05:14] <private_meta>	ok, then can you define those three, what they do exactly, because I didn't seem to find any good definition in the docs
| [Tuesday 01 March 2011] [07:05:49] <pieterh>	it is always local to the pattern
| [Tuesday 01 March 2011] [07:06:02] <pieterh>	that's why I provide a schema for each pattern with the boxes clearly labelled
| [Tuesday 01 March 2011] [07:06:18] <pieterh>	client is easy
| [Tuesday 01 March 2011] [07:06:21] <pieterh>	queue is easy
| [Tuesday 01 March 2011] [07:06:28] <pieterh>	worker is also unambiguous
| [Tuesday 01 March 2011] [07:06:41] <pieterh>	but "server" is anything that accepts a connection, or does work, or ...
| [Tuesday 01 March 2011] [07:07:42] <private_meta>	So going after figure 21 in the docs, "Client" is what I and everyone I work with always understood as "Server", and "worker" is what I understand as "Client", and the "Server in the figure is something I didn't even name yet in that regard
| [Tuesday 01 March 2011] [07:08:19] <private_meta>	I have never met anyone who defined it the way it's defined here
| [Tuesday 01 March 2011] [07:10:48] <pieterh>	private_meta: figure 21 is really clear 
| [Tuesday 01 March 2011] [07:11:01] <pieterh>	the client is the application that makes a request
| [Tuesday 01 March 2011] [07:11:10] <pieterh>	the server is the host that does the work
| [Tuesday 01 March 2011] [07:11:21] <private_meta>	pieterh: Yeah, according to that, as I said, I never met ANYONE who defined it like that, not even remotely
| [Tuesday 01 March 2011] [07:11:21] <pieterh>	hmm, e.g. web browser and web server
| [Tuesday 01 March 2011] [07:11:30] <pieterh>	so your browser is a "server"?
| [Tuesday 01 March 2011] [07:11:44] <pieterh>	and google.com is the "client" of your browser?
| [Tuesday 01 March 2011] [07:11:59] <private_meta>	No, my browser is a client, google is a server
| [Tuesday 01 March 2011] [07:12:06] <pieterh>	and that's figure 21
| [Tuesday 01 March 2011] [07:12:22] <pieterh>	what's confusing about it?
| [Tuesday 01 March 2011] [07:12:33] <pieterh>	maybe you want the server at the top of the page, and the client below?
| [Tuesday 01 March 2011] [07:12:46] <pieterh>	all the diagrams show the logical flow of requests / tasks from top to bottom
| [Tuesday 01 March 2011] [07:13:23] <private_meta>	Wait, in Figure 21 Google would be the worker?
| [Tuesday 01 March 2011] [07:13:28] <pieterh>	figure 21 shows an application server, in fact
| [Tuesday 01 March 2011] [07:13:41] <pieterh>	workers are applications, if you like
| [Tuesday 01 March 2011] [07:13:55] <pieterh>	server plugins
| [Tuesday 01 March 2011] [07:14:16] <pieterh>	this is all classic stuff, can I please go back to my Majordomo coding now ? :-)
| [Tuesday 01 March 2011] [07:14:37] <private_meta>	Well, you didn't really help me understand it
| [Tuesday 01 March 2011] [07:14:41] <private_meta>	:/
| [Tuesday 01 March 2011] [07:14:51] <pieterh>	since you don't tell me what your confusion is...
| [Tuesday 01 March 2011] [07:15:00] <pieterh>	I'd suggest reading the text like 10 times until it clicks
| [Tuesday 01 March 2011] [07:15:17] <pieterh>	these concepts are slippery, I know
| [Tuesday 01 March 2011] [07:15:32] <pieterh>	but I can't explain them over IRC better than the text and pictures already do
| [Tuesday 01 March 2011] [07:15:54] <private_meta>	Well, just give me a real world example what CLIENT, SERVER and WORKER would be in an example I can understand
| [Tuesday 01 March 2011] [07:15:58] <private_meta>	you're giving me confusing information
| [Tuesday 01 March 2011] [07:16:09] <pieterh>	I've just done that, you're making me repeat myself
| [Tuesday 01 March 2011] [07:16:14] <pieterh>	web browser = client
| [Tuesday 01 March 2011] [07:16:18] <pieterh>	web server = server 
| [Tuesday 01 March 2011] [07:16:31] <pieterh>	PHP application producing web content = worker
| [Tuesday 01 March 2011] [07:16:37] <private_meta>	ok, that was clear
| [Tuesday 01 March 2011] [07:16:41] <pieterh>	there are hundreds of such examples
| [Tuesday 01 March 2011] [07:16:42] <guido_g>	rofl
| [Tuesday 01 March 2011] [07:16:42] <private_meta>	it wasn't clear before
| [Tuesday 01 March 2011] [07:17:15] <private_meta>	hmm... sanity check for lazy pirate pattern worked in C
| [Tuesday 01 March 2011] [07:17:16] <guido_g>	<private_meta> I have never met anyone who defined it the way it's defined here  <- hard to believe
| [Tuesday 01 March 2011] [07:17:23] <pieterh>	private_meta: like I said, re-read the text until it clicks
| [Tuesday 01 March 2011] [07:18:30] <private_meta>	int linger = 0; client->setsockopt(ZMQ_LINGER, &linger, sizeof(linger)); <-- that line fails in c++
| [Tuesday 01 March 2011] [07:19:03] <skm>	i have 3 servers that dish out work (in the form of mp3 files) and 5 clients that need to receive the files - i want to add servers and clients with little effort so im going to have a manager inbetween them all..
| [Tuesday 01 March 2011] [07:19:30] <jugg>	eh, api.zeromq.org is broken...
| [Tuesday 01 March 2011] [07:19:35] <skm>	im using push/pull for the servers - my problem is what if the manager fails then comes back up - what's the best way to resend the files
| [Tuesday 01 March 2011] [07:19:36] <pieterh>	jugg: where?
| [Tuesday 01 March 2011] [07:19:47] <jugg>	http://api.zeromq.org/zmq-setsockopt-html
| [Tuesday 01 March 2011] [07:19:54] <jugg>	but any of the links
| [Tuesday 01 March 2011] [07:20:04] <skm>	(the files exist on the server until a client downloads it from the server - the manager just has a list in a queue)
| [Tuesday 01 March 2011] [07:20:14] <pieterh>	skm: there's no documented patterns for reliable push/pull, I'm working on those
| [Tuesday 01 March 2011] [07:20:18] <pieterh>	jugg: bleh
| [Tuesday 01 March 2011] [07:20:25] <private_meta>	pieterh: yeah, all links from the guide to the api are broken
| [Tuesday 01 March 2011] [07:20:36] <private_meta>	or seem to be
| [Tuesday 01 March 2011] [07:20:37] <jugg>	hmm, looks like api.zeromq.org was cached, forced refresh pulls the new page.
| [Tuesday 01 March 2011] [07:20:44] <pieterh>	private_meta: nope, fixed those about 10 minutes ago, reload
| [Tuesday 01 March 2011] [07:20:44] <jugg>	which has different links
| [Tuesday 01 March 2011] [07:20:57] <pieterh>	jugg: I'll need to make forwards from all the old API pages... bleh
| [Tuesday 01 March 2011] [07:21:07] <jugg>	yah
| [Tuesday 01 March 2011] [07:21:15] <private_meta>	ah ok
| [Tuesday 01 March 2011] [07:21:25] <private_meta>	just reloaded 30 minutes ago XD
| [Tuesday 01 March 2011] [07:22:11] <private_meta>	pieterh: maybe I made a mistake, but I thought it should be a working translation https://gist.github.com/45ae7e2a36ad5c1ca50f https://gist.github.com/a4df2891f9c8edc1ac0c
| [Tuesday 01 March 2011] [07:23:30] <jugg>	v2.1.1 is not tagged in Git
| [Tuesday 01 March 2011] [07:23:51] <pieterh>	private_meta: yeah, it looks OK, I've no idea why the C++ setsockopt would be failing
| [Tuesday 01 March 2011] [07:24:06] <pieterh>	jugg: it's in http://github.com/zeromq/zeromq2-1
| [Tuesday 01 March 2011] [07:24:16] <pieterh>	we forked the repository to make life easier for everyone
| [Tuesday 01 March 2011] [07:24:38] <jugg>	ugh
| [Tuesday 01 March 2011] [07:25:19] <pieterh>	jugg: there are pros and cons but it's simplified our work a lot
| [Tuesday 01 March 2011] [07:25:29] <private_meta>	The setsockopt fails with the error stated 30 minutes ago, and if continued I get the error "Bad file descriptor, nbytes != -1 (mailbox.cpp:241)"
| [Tuesday 01 March 2011] [07:25:38] <jugg>	well, thankfully Git supports multiple remotes...
| [Tuesday 01 March 2011] [07:30:05] <private_meta>	pieterh: Now that I got the terminology described, my worker needs to know if the client is there, and my client needs to know if my worker is there, so i need heartbeats from client to server and vice versa, that's why I was asking before about the heartbeats
| [Tuesday 01 March 2011] [07:31:31] <Guthur>	umm this talk of linger has just made be notice a minor type bug in clrzmq2
| [Tuesday 01 March 2011] [07:31:39] <Guthur>	at least it was good for something, hehe
| [Tuesday 01 March 2011] [07:32:54] <Guthur>	be/me
| [Tuesday 01 March 2011] [07:34:46] <pieterh>	private_meta: what pattern are you talking about?
| [Tuesday 01 March 2011] [07:34:56] <pieterh>	figure 21 is asynchronous server
| [Tuesday 01 March 2011] [07:35:11] <pieterh>	clients don't see workers, workers don't see clients
| [Tuesday 01 March 2011] [07:35:20] <private_meta>	pieterh: I was talking about figure 21 because it made it understandable somewhat more easily
| [Tuesday 01 March 2011] [07:36:01] <pieterh>	jugg: all the old API links should properly redirect now
| [Tuesday 01 March 2011] [07:36:08] <pieterh>	I sent them to 2.1.1
| [Tuesday 01 March 2011] [07:39:21] <private_meta>	pieterh: I need custom routing, something like router-to-dealer, but with heartbeating, but in both directions, as workers and clients should be aware of each other
| [Tuesday 01 March 2011] [07:39:57] <private_meta>	I don't know if there is a pattern more fitting to that
| [Tuesday 01 March 2011] [07:40:06] <pieterh>	take a look at http://zero.mq/md, specifically the server protocol, it may what you need
| [Tuesday 01 March 2011] [07:40:29] <pieterh>	your client could implement the broker part of the protocol
| [Tuesday 01 March 2011] [07:40:56] <jugg>	pieterh, looks like it.
| [Tuesday 01 March 2011] [07:41:05] <pieterh>	if you implement precisely the protocol as specified it'll interoperate with other code using the same spec
| [Tuesday 01 March 2011] [07:41:09] <pieterh>	jugg: great!
| [Tuesday 01 March 2011] [07:46:20] <private_meta>	pieterh: ok, so I would have n Clients and 1 Worker I assume
| [Tuesday 01 March 2011] [08:03:24] <private_meta>	So if I adhere to the protocol specifications best as possible, a guide chapter is in the works to help me with the problem specificied
| [Tuesday 01 March 2011] [08:03:29] <private_meta>	?
| [Tuesday 01 March 2011] [08:15:17] <skm>	if i have 1 client pushing and 3 clients pulling - if the client pushes 100msgs will they be sent to the first client that connects
| [Tuesday 01 March 2011] [08:15:24] <skm>	or in order of each client recving
| [Tuesday 01 March 2011] [08:19:31] <private_meta>	pieterh: should I create an issue for the ZMQ_LINGER problem in the c++ translation?
| [Tuesday 01 March 2011] [08:21:01] <cremes>	private_meta: put up a pastie with the compilation error; that c++ you posted earlier looked correct
| [Tuesday 01 March 2011] [08:21:17] <private_meta>	cremes: there's a runtime error, not a compilation error
| [Tuesday 01 March 2011] [08:21:47] <cremes>	ok, then post that error (all of it)
| [Tuesday 01 March 2011] [08:22:04] <private_meta>	Yeah, just wanted to say that it doesn't change that I should post the error :)
| [Tuesday 01 March 2011] [08:22:12] <cremes>	heh
| [Tuesday 01 March 2011] [08:26:34] <private_meta>	cremes: theoretically, if it's translated correctly, the C server should work with the C++ client, shouldn't it?
| [Tuesday 01 March 2011] [08:27:17] <cremes>	yes; i have 0mq from ruby interacting with 0mq from C on a regular basis
| [Tuesday 01 March 2011] [08:27:39] <cremes>	and it's not even theoretical!
| [Tuesday 01 March 2011] [08:27:43] <cremes>	:)
| [Tuesday 01 March 2011] [08:27:55] <stimpie>	Iam having some problems using an xrep socket on en inproc transport, any way of sniffing or logging the inproc transport?
| [Tuesday 01 March 2011] [08:28:47] <cremes>	stimpie: i am not sure.... there is a new "sys" logging facility that may be of use
| [Tuesday 01 March 2011] [08:29:01] <cremes>	check the mail archives for discussion or the git log for patches
| [Tuesday 01 March 2011] [08:29:09] <private_meta>	ok, c server works with c client, c++ server works with c client, but both servers won't work with c++ client
| [Tuesday 01 March 2011] [08:29:41] <cremes>	private_meta: ok; please post the error *and* the code for all of the components
| [Tuesday 01 March 2011] [08:29:56] <cremes>	you might have something wired wrong
| [Tuesday 01 March 2011] [08:30:46] <cremes>	(i'm expecting a gist with five files: error, c client, c server, c++ client, c++ server)
| [Tuesday 01 March 2011] [08:31:49] <private_meta>	Well, I write 4 gists with the 4 c/c++ files and I write the error in the issue
| [Tuesday 01 March 2011] [08:32:41] <private_meta>	cremes: then again the c client and server are exactly those from the docs
| [Tuesday 01 March 2011] [08:32:50] <private_meta>	so i won't need to "gist" them
| [Tuesday 01 March 2011] [08:34:08] <cremes>	private_meta: i'm reading "cremes, i don't really want your help"
| [Tuesday 01 March 2011] [08:34:20] <private_meta>	lol
| [Tuesday 01 March 2011] [08:34:21] <cremes>	at least send me a link to the components that are from the docs
| [Tuesday 01 March 2011] [08:34:32] <private_meta>	cremes: I intended to put them into the issue
| [Tuesday 01 March 2011] [08:34:36] <cremes>	don't make me do a lot of extra work to help you out; it isn't fair
| [Tuesday 01 March 2011] [08:34:55] <cremes>	i don't think we have established yet that this warrants an issue
| [Tuesday 01 March 2011] [08:35:05] <cremes>	these things interoperate all of the time
| [Tuesday 01 March 2011] [08:35:18] <cremes>	let's dig just a little before opening a ticket
| [Tuesday 01 March 2011] [08:35:33] <private_meta>	If you want to
| [Tuesday 01 March 2011] [08:37:41] <private_meta>	cremes: https://gist.github.com/dadca0c3b776aa5713da sufficient?
| [Tuesday 01 March 2011] [08:38:38] <cremes>	good enough; give me a few to look through it
| [Tuesday 01 March 2011] [08:39:20] <private_meta>	Maybe it's just a problem with me using setsockopt, but I hope not
| [Tuesday 01 March 2011] [08:40:59] <guido_g>	client->connect("tcp://localhost.5555"); <- wrong
| [Tuesday 01 March 2011] [08:41:39] <skm>	uf a pusher has pushed 100msgd, the first client to call recv then gets all 100 msgs (and has to recv 99 more times to see them) - correct?
| [Tuesday 01 March 2011] [08:42:45] <private_meta>	guido_g: I translated it with that url from the C version
| [Tuesday 01 March 2011] [08:42:50] <private_meta>	guido_g: why is it wrong?
| [Tuesday 01 March 2011] [08:42:56] <guido_g>	read it
| [Tuesday 01 March 2011] [08:43:18] <H-nes>	hint: ":"
| [Tuesday 01 March 2011] [08:43:31] <private_meta>	oh
| [Tuesday 01 March 2011] [08:43:31] <guido_g>	right
| [Tuesday 01 March 2011] [08:43:47] <private_meta>	damn me
| [Tuesday 01 March 2011] [08:43:47] <guido_g>	all thar trouble for basically nothing
| [Tuesday 01 March 2011] [08:43:51] <guido_g>	*taht
| [Tuesday 01 March 2011] [08:43:57] <guido_g>	*that
| [Tuesday 01 March 2011] [08:44:06] <guido_g>	how effective
| [Tuesday 01 March 2011] [08:44:48] <cremes>	guido_g: good eye
| [Tuesday 01 March 2011] [08:45:29] <guido_g>	cremes: we in germany are now known for our keen eyes on copied work   ,)
| [Tuesday 01 March 2011] [08:45:36] <Guthur>	guido_g: I did realise that I need to implement these options in the clrzmq2 binding due to this discussion, if that is any consolation, hehe
| [Tuesday 01 March 2011] [08:45:50] <cremes>	guido_g: ;)
| [Tuesday 01 March 2011] [08:46:07] <cremes>	private_meta: after you make that change, let us know if all is well
| [Tuesday 01 March 2011] [08:46:39] <private_meta>	hmm apparently not
| [Tuesday 01 March 2011] [08:47:06] <guido_g>	more typos?
| [Tuesday 01 March 2011] [08:47:48] <private_meta>	I hope not
| [Tuesday 01 March 2011] [08:47:53] <private_meta>	But it's a different error now
| [Tuesday 01 March 2011] [08:53:12] <private_meta>	cremes: update
| [Tuesday 01 March 2011] [08:53:21] <private_meta>	cremes: https://gist.github.com/dadca0c3b776aa5713da
| [Tuesday 01 March 2011] [08:54:40] <cremes>	private_meta: that is oftentimes a buffer sizing problem; what OS are you on?
| [Tuesday 01 March 2011] [08:55:08] <private_meta>	Ubuntu 10.4 x64
| [Tuesday 01 March 2011] [08:56:33] <cremes>	private_meta: give me a gist with:  net.core.rmem_default, net.core.rmem_max, net.core.wmem_default, net.core.wmem_max
| [Tuesday 01 March 2011] [08:57:05] <cremes>	these control the size of the buffers for "socketpairs" which are used for all internal signaling in 0mq
| [Tuesday 01 March 2011] [08:57:28] <private_meta>	How do I get those?
| [Tuesday 01 March 2011] [08:58:15] <cremes>	sysctl -a | egrep 'wmem|rmem'
| [Tuesday 01 March 2011] [08:58:25] <private_meta>	kk
| [Tuesday 01 March 2011] [08:58:49] <cremes>	how long before you saw that error? 10s, 1m, longer?
| [Tuesday 01 March 2011] [08:58:58] <private_meta>	Let me test
| [Tuesday 01 March 2011] [08:59:01] <cremes>	and does it happen on *every* run
| [Tuesday 01 March 2011] [08:59:14] <stimpie>	took me 4 hours to find out I encountered an known issue #issue/82 grrrr
| [Tuesday 01 March 2011] [08:59:45] <cremes>	private_meta: the reason i ask is because the c client should produce the same error in roughly the same timeframe
| [Tuesday 01 March 2011] [08:59:58] <private_meta>	cremes: Immediately, at every run
| [Tuesday 01 March 2011] [09:00:04] <private_meta>	But the C Client works
| [Tuesday 01 March 2011] [09:00:12] <cremes>	now that is odd
| [Tuesday 01 March 2011] [09:01:54] <private_meta>	cremes: https://gist.github.com/6c43ecadae82d425773b
| [Tuesday 01 March 2011] [09:01:58] <cremes>	you should run it run gdb and pastie the backtrace too
| [Tuesday 01 March 2011] [09:02:30] <cremes>	those sizes should be ok
| [Tuesday 01 March 2011] [09:02:39] <private_meta>	cremes: the entire gdb trace?
| [Tuesday 01 March 2011] [09:02:56] <cremes>	i use 5242880 for all of those settings, fyi
| [Tuesday 01 March 2011] [09:03:05] <cremes>	private_meta: yes, all of it
| [Tuesday 01 March 2011] [09:03:13] <cremes>	do: thread apply all bt
| [Tuesday 01 March 2011] [09:03:36] <private_meta>	cremes: https://gist.github.com/8c059893dbec50829e84
| [Tuesday 01 March 2011] [09:06:33] <cremes>	private_meta: i can't make heads or tails of that output
| [Tuesday 01 March 2011] [09:06:51] <cremes>	it looks like nonsense
| [Tuesday 01 March 2011] [09:07:11] <private_meta>	cremes: I never worked closly with gdb or traces, so I gave you what eclipse tagged as "traces"
| [Tuesday 01 March 2011] [09:07:24] <cremes>	oh...
| [Tuesday 01 March 2011] [09:07:33] <private_meta>	gdb traces to be exact
| [Tuesday 01 March 2011] [09:07:48] <cremes>	from a command line, run this:  gdb --args <name of lpclient>
| [Tuesday 01 March 2011] [09:07:52] <private_meta>	sec
| [Tuesday 01 March 2011] [09:07:52] <cremes>	(gdb) run
| [Tuesday 01 March 2011] [09:08:01] <cremes>	(gdb) thread apply all bt
| [Tuesday 01 March 2011] [09:08:04] <cremes>	pastie the output
| [Tuesday 01 March 2011] [09:11:23] <private_meta>	cremes: better? https://gist.github.com/0eba301579e05243a715
| [Tuesday 01 March 2011] [09:12:17] <cremes>	better
| [Tuesday 01 March 2011] [09:14:35] <cremes>	private_meta: change: zmq::poll (items, 1, REQUEST_TIMEOUT * 1000);
| [Tuesday 01 March 2011] [09:14:42] <cremes>	to:  zmq::poll (&items, 1, REQUEST_TIMEOUT * 1000);
| [Tuesday 01 March 2011] [09:14:55] <cremes>	(just added & in front of items)
| [Tuesday 01 March 2011] [09:17:00] <private_meta>	cremes: cannot convert 'zmq::pollitem_t (*)[1]' to 'zmq_pollitem_t*' for argument '1' to 'int zmq::poll(zmq_pollitem_t*, int, long int)'
| [Tuesday 01 March 2011] [09:21:10] <cremes>	private_meta: oops, my mistake; try this:
| [Tuesday 01 March 2011] [09:21:22] <cremes>	zmq::poll (&items[0], 1, REQUEST_TIMEOUT * 1000);
| [Tuesday 01 March 2011] [09:21:36] <guido_g>	yeah, that's c++ :)
| [Tuesday 01 March 2011] [09:21:41] <cremes>	btw, i'm getting all of this from looking at the c++ examples in the zguide
| [Tuesday 01 March 2011] [09:21:54] <guido_g>	hrhrhr
| [Tuesday 01 March 2011] [09:21:57] <cremes>	your translation needs work
| [Tuesday 01 March 2011] [09:22:16] <private_meta>	same
| [Tuesday 01 March 2011] [09:22:46] <cremes>	won't compile?
| [Tuesday 01 March 2011] [09:22:52] <private_meta>	no, same as items
| [Tuesday 01 March 2011] [09:23:01] <private_meta>	so, same runtime error
| [Tuesday 01 March 2011] [09:23:07] <cremes>	can you get any of the c++ examples in the zguide to run?
| [Tuesday 01 March 2011] [09:24:05] <private_meta>	sure
| [Tuesday 01 March 2011] [09:24:07] <guido_g>	just to make sure, try a delay (sleep) after the send and before the poll, might be that the connection is not yet established
| [Tuesday 01 March 2011] [09:24:31] <private_meta>	guido_g: nope
| [Tuesday 01 March 2011] [09:25:02] <guido_g>	why?
| [Tuesday 01 March 2011] [09:25:13] <private_meta>	"nope" as in "doesn't help"
| [Tuesday 01 March 2011] [09:25:53] <Guthur>	guido_g: would polling before the connection establishes cause issues?
| [Tuesday 01 March 2011] [09:26:09] <guido_g>	i'm not sure
| [Tuesday 01 March 2011] [09:26:18] <private_meta>	cremes: I haven't tried ALL of them, but they normally DO work
| [Tuesday 01 March 2011] [09:26:24] <guido_g>	that's why i asked to test it
| [Tuesday 01 March 2011] [09:26:46] <Guthur>	guido_g: ok, the reason I asked was I had an issue like that last night on linux
| [Tuesday 01 March 2011] [09:26:55] <private_meta>	guido_g: A sleep of 1 second didn't help
| [Tuesday 01 March 2011] [09:26:55] <Guthur>	using the clrzmq2 binding
| [Tuesday 01 March 2011] [09:27:08] <guido_g>	private_meta: where was the sleep?
| [Tuesday 01 March 2011] [09:27:35] <private_meta>	after s_send before zmq::pollitem_t, but not after every poll.
| [Tuesday 01 March 2011] [09:28:06] <guido_g>	ok
| [Tuesday 01 March 2011] [09:28:47] <cremes>	when i run it under gdb, it shows that it is spawning 2 client threads and connecting to the server twice
| [Tuesday 01 March 2011] [09:29:34] <cremes>	wtf?
| [Tuesday 01 March 2011] [09:30:39] <cremes>	no, something else is up...
| [Tuesday 01 March 2011] [09:34:36] <private_meta>	pieterh: Just out of premature curiosity, how would I then be able to use the Majordomo Protocol?
| [Tuesday 01 March 2011] [09:37:51] <cremes>	private_meta: fixed it
| [Tuesday 01 March 2011] [09:37:56] <cremes>	change: zmq::pollitem_t items [] = { { client, 0, ZMQ_POLLIN, 0 } };
| [Tuesday 01 March 2011] [09:37:59] <cremes>	to: zmq::pollitem_t items [] = { { *client, 0, ZMQ_POLLIN, 0 } };
| [Tuesday 01 March 2011] [09:38:28] <cremes>	(and keep the other changes)
| [Tuesday 01 March 2011] [09:39:06] <cremes>	wow, i haven't done any c++ in about 10 years and this experience hasn't made me miss it :)
| [Tuesday 01 March 2011] [09:39:22] <guido_g>	hehe
| [Tuesday 01 March 2011] [09:39:56] <private_meta>	cremes: wtf?
| [Tuesday 01 March 2011] [09:39:58] <cremes>	private_meta: do i get a coauthor credit on this translation? :P
| [Tuesday 01 March 2011] [09:40:27] <cremes>	private_meta: look at the other c++ examples; yours is the only one that uses 'new'
| [Tuesday 01 March 2011] [09:41:04] <cremes>	i think you had a pointer to a socket pointer
| [Tuesday 01 March 2011] [09:41:24] <cremes>	or something... i'm out of my depth :)
| [Tuesday 01 March 2011] [09:41:52] <guido_g>	cremes: oh nice, didn't spot that one
| [Tuesday 01 March 2011] [09:42:06] <private_meta>	cremes: It's not that I wanted to use new
| [Tuesday 01 March 2011] [09:42:11] <cremes>	guido_g: better lucky that good   <--- my motto
| [Tuesday 01 March 2011] [09:42:20] <cremes>	s/that/than/
| [Tuesday 01 March 2011] [09:43:09] <private_meta>	cremes: As far as I can see it's the only example where the socket is created in a different method, and for one the first example returned a pointer, so I wanted as well, and I thought it made the same problems as message_t
| [Tuesday 01 March 2011] [09:43:53] <cremes>	private_meta: what i remember about c++ could fit in a thimble; i just started matching up working code against non-working
| [Tuesday 01 March 2011] [09:43:55] <cremes>	and went from there
| [Tuesday 01 March 2011] [09:44:33] <cremes>	seems like the library should do some more sanity checking on passed arguments though
| [Tuesday 01 March 2011] [09:44:41] <private_meta>	cremes: the copy constructor of socket_t is private, so I can't return it as a non-pointer, and I didn't want to push socket_t into the parameters
| [Tuesday 01 March 2011] [09:44:58] <cremes>	it doesn't seem like we should be able to compile and run something with so many errors
| [Tuesday 01 March 2011] [09:45:21] <cremes>	(easy to make errors... i'm not poitning any fingers)
| [Tuesday 01 March 2011] [09:45:29] <Guthur>	sanity and c++?
| [Tuesday 01 March 2011] [09:45:39] <cremes>	Guthur: i know!
| [Tuesday 01 March 2011] [09:45:41] <private_meta>	Well, C takes a pointer, C++ doesn't, it's nasty
| [Tuesday 01 March 2011] [09:46:13] <private_meta>	ok
| [Tuesday 01 March 2011] [09:47:21] <private_meta>	cremes: the problem is that zmq_pollitem_t is in the zmq.h, there is no zmq.hpp version where (void *) is correctly translated to socket_t apparently
| [Tuesday 01 March 2011] [09:47:56] <cremes>	i don't know what that means ;)
| [Tuesday 01 March 2011] [09:48:02] <cremes>	heh
| [Tuesday 01 March 2011] [09:48:38] <cremes>	if that's a genuine hole in the lib, open a ticket with a patch
| [Tuesday 01 March 2011] [09:48:48] <cremes>	sounds like it would be pretty easy to make
| [Tuesday 01 March 2011] [09:49:54] <private_meta>	hmm
| [Tuesday 01 March 2011] [09:50:21] <private_meta>	either a genuine type for c++ or a sanity check in zmq::poll
| [Tuesday 01 March 2011] [09:50:35] <private_meta>	but the latter won't fix the problem at compile time
| [Tuesday 01 March 2011] [09:51:29] <private_meta>	typedef struct { void *socket; int fd; short events; short revents; } zmq_pollitem_t; <-- the void* there is the unfriendly thing
| [Tuesday 01 March 2011] [09:56:10] <private_meta>	hmm
| [Tuesday 01 March 2011] [10:02:38] <private_meta>	cremes: doesn't seem THAT easy
| [Tuesday 01 March 2011] [10:13:07] <CIA-21>	zeromq2: 03Martin Sustrik 07master * r4c74462 10/ src/socket_base.cpp : 
| [Tuesday 01 March 2011] [10:13:07] <CIA-21>	zeromq2: Explicit identities bug in inproc transport fixed.
| [Tuesday 01 March 2011] [10:13:07] <CIA-21>	zeromq2: The identity of bound socket was not used. Instead, transient
| [Tuesday 01 March 2011] [10:13:07] <CIA-21>	zeromq2: identity was generated.
| [Tuesday 01 March 2011] [10:13:07] <CIA-21>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/heLOOL
| [Tuesday 01 March 2011] [10:14:51] <private_meta>	Been led to the following problem, http://stackoverflow.com/questions/231760/what-does-a-type-followed-by-t-underscore-t-represent/231807#231807, don't you concern yourself with the problem because you prefix every type in C with "zmq_"?
| [Tuesday 01 March 2011] [10:40:54] <stimpie>	sustrik, great I was just running in to it.
| [Tuesday 01 March 2011] [11:02:27] <sustrik>	stimpie :)
| [Tuesday 01 March 2011] [11:52:39] <private_meta>	https://gist.github.com/5beb18da2cdb0ed04e02 https://gist.github.com/427a77b7837b5010483a <-- I thought that would be an easy class based example for communicated through zmq_poll, shouldn't I get the "START" message at the worker? What am I doing wrong?
| [Tuesday 01 March 2011] [11:53:26] <ianbarber>	pieterh: are the lazy pirate examples translatable now then?
| [Tuesday 01 March 2011] [12:12:27] <private_meta>	k, got it to work >_>
| [Tuesday 01 March 2011] [12:12:58] <cremes>	private_meta: you're going through some of the same growing pains most of us did when we first
| [Tuesday 01 March 2011] [12:13:02] <cremes>	started playing with 0mq
| [Tuesday 01 March 2011] [12:13:15] <cremes>	though i'll say maybe the c++ aspect is throwing an additional monkey-wrench into the process
| [Tuesday 01 March 2011] [12:13:17] <cremes>	:)
| [Tuesday 01 March 2011] [12:15:58] <private_meta>	cremes: my problem is that we had to switch from a different comm library because it threw it's own monkey wrench into the project, and now everybody tells me "quick, we need it, immediately, if you don't, we have problems"
| [Tuesday 01 March 2011] [12:16:07] <private_meta>	cremes: and I'm completely new with zmq
| [Tuesday 01 March 2011] [12:16:15] <cremes>	uh oh
| [Tuesday 01 March 2011] [12:16:42] <cremes>	not to say you won't have success with 0mq, but it comes with time & experience
| [Tuesday 01 March 2011] [12:17:36] <private_meta>	uhm... do durable sockets send multipart messages with the id as the first part?
| [Tuesday 01 March 2011] [12:19:00] <ianbarber>	xrep does
| [Tuesday 01 March 2011] [12:19:11] <private_meta>	hmm
| [Tuesday 01 March 2011] [12:19:32] <cremes>	the ID is only sent upon connect/bind for each socket type
| [Tuesday 01 March 2011] [12:19:36] <cremes>	this is invisible to the application
| [Tuesday 01 March 2011] [12:19:43] <private_meta>	cremes: quote from my project manager: "If you take too long with zmq I assume it won't help us, and you have to implement communication from scratch"
| [Tuesday 01 March 2011] [12:19:55] <ianbarber>	ouch!
| [Tuesday 01 March 2011] [12:20:11] <ianbarber>	xrep wraps the message with the ID, so it knows who to route back to
| [Tuesday 01 March 2011] [12:20:17] <cremes>	xrep sends the identity as a visible message part as part of a routing envelope on a reply
| [Tuesday 01 March 2011] [12:20:19] <ianbarber>	it'll unwrap when you send back
| [Tuesday 01 March 2011] [12:20:38] <cremes>	private_meta: your manager must have pointy hair
| [Tuesday 01 March 2011] [12:21:13] <private_meta>	cremes: actually, he's a programmer, he even programmed in projects
| [Tuesday 01 March 2011] [12:21:22] <private_meta>	cremes: and apparently the projects didn't fail
| [Tuesday 01 March 2011] [12:21:38] <private_meta>	hmm
| [Tuesday 01 March 2011] [12:21:47] <cremes>	well, making that statement undermines past performance
| [Tuesday 01 March 2011] [12:22:01] <cremes>	he may be a good programmer but he doesn't seem to be too hot of a manager (IMHO)
| [Tuesday 01 March 2011] [12:22:03] <private_meta>	That's the paradox
| [Tuesday 01 March 2011] [12:22:32] <cremes>	we'll help where we can; have you read the guide from start to finish twice yet? ;)
| [Tuesday 01 March 2011] [12:22:53] <ianbarber>	and tried the examples!
| [Tuesday 01 March 2011] [12:23:07] <cremes>	ianbarber: indeed!
| [Tuesday 01 March 2011] [12:23:20] <private_meta>	I read much of it and tried some examples, tried modifying them and stuff
| [Tuesday 01 March 2011] [12:23:45] <ianbarber>	it does help to thing of XREP and XREQ as router and dealer
| [Tuesday 01 March 2011] [12:23:53] <ianbarber>	makes it clearer what they do 
| [Tuesday 01 March 2011] [12:23:56] <ianbarber>	s/thing/think
| [Tuesday 01 March 2011] [12:24:34] <private_meta>	Well, I did try to build a router/dealer
| [Tuesday 01 March 2011] [12:24:35] <private_meta>	sec
| [Tuesday 01 March 2011] [12:24:46] <private_meta>	https://gist.github.com/5beb18da2cdb0ed04e02 https://gist.github.com/427a77b7837b5010483a
| [Tuesday 01 March 2011] [12:25:27] <private_meta>	I was just confused that I got something like <id>\n<message>\n<id>\n<message2>\n<id>\n<message3>
| [Tuesday 01 March 2011] [12:26:07] <sarikan>	greetings
| [Tuesday 01 March 2011] [12:26:10] <ianbarber>	yeah, that's just xrep doing its thing, you can use req and rep for straightforward client server
| [Tuesday 01 March 2011] [12:26:30] <private_meta>	Well, I already established I need something in the range of router/dealer
| [Tuesday 01 March 2011] [12:26:42] <ianbarber>	if you went req -> xrep -> xreq -> rep the 'req' and 'rep' would never see the extra field
| [Tuesday 01 March 2011] [12:26:51] <private_meta>	pieterh said something that would fit my requirements would be the majordomo protocol he is currently working on
| [Tuesday 01 March 2011] [12:28:05] <private_meta>	ianbarber: I don't think the extra layer is all that neccessary
| [Tuesday 01 March 2011] [12:28:26] <private_meta>	damn.... still wanted to buy food :/
| [Tuesday 01 March 2011] [12:28:42] <private_meta>	damn this town and it's stores closing at 18.30
| [Tuesday 01 March 2011] [12:29:30] <ianbarber>	takeaway! friend to the hungry coder :)
| [Tuesday 01 March 2011] [12:30:04] <private_meta>	hmm
| [Tuesday 01 March 2011] [12:30:13] <private_meta>	I don't have a car :D
| [Tuesday 01 March 2011] [12:31:08] <private_meta>	And the only pizza delivery service here requires you to order 2-3 pizzas for them to deliver *sigh*
| [Tuesday 01 March 2011] [12:31:13] <ianbarber>	maybe pieterh has a fast food distribution system planned for chapter 5 of the guide
| [Tuesday 01 March 2011] [12:31:17] <private_meta>	hahaha
| [Tuesday 01 March 2011] [12:31:35] <cremes>	private_meta: it might be best if you described your use-case in detail
| [Tuesday 01 March 2011] [12:31:39] <cremes>	then we can make suggestions
| [Tuesday 01 March 2011] [12:31:45] <private_meta>	hmm
| [Tuesday 01 March 2011] [12:31:46] <cremes>	this might also be a good thing to take to the mailing list
| [Tuesday 01 March 2011] [12:32:04] <cremes>	i'm going to have to go "async" on irc in a few... lots of work to do
| [Tuesday 01 March 2011] [12:32:07] <ianbarber>	yeah, probably better if it's more than a one-line job to describe it
| [Tuesday 01 March 2011] [12:32:14] <cremes>	so following a conversation will be hard for me
| [Tuesday 01 March 2011] [12:32:18] <ianbarber>	also helpful for future people searching
| [Tuesday 01 March 2011] [12:32:43] <cremes>	private_meta: feel free to leave out the super-secret-squirrel-intellectual-property parts
| [Tuesday 01 March 2011] [12:32:47] <private_meta>	I'll start drawing a pic
| [Tuesday 01 March 2011] [12:32:52] <cremes>	that would make your boss mad if they were public :)
| [Tuesday 01 March 2011] [12:40:18] <cremes>	sustrik: ping
| [Tuesday 01 March 2011] [12:40:25] <sustrik>	pong
| [Tuesday 01 March 2011] [12:40:31] <cremes>	anything i can do to make https://github.com/zeromq/zeromq2/issues/174 clearer for you and pieterh?
| [Tuesday 01 March 2011] [12:40:54] <cremes>	he can't seem to repro the problem as stated
| [Tuesday 01 March 2011] [12:41:30] <cremes>	maybe file descriptors need to be bumped for the process to some larger value?
| [Tuesday 01 March 2011] [12:41:53] <cremes>	or src/config.hpp needs to be modified so max_sockets is > 512 (default)
| [Tuesday 01 March 2011] [12:42:07] <cremes>	i usually build the lib with 51200 as my max_sockets :)
| [Tuesday 01 March 2011] [12:42:41] <private_meta>	I have 1 "manager", the worker. I have n clients, nodes. The manager needs to send routed messages to single specified nodes which logon beforehand. Communication needs to be asynchroneous, bidirectional, so both have to initiate communication if neccessary. I also need awareness of connection termination, so a heartbeat on both sides.
| [Tuesday 01 March 2011] [12:43:11] <private_meta>	cremes, ianbarber, that would be an overall description
| [Tuesday 01 March 2011] [12:43:30] <cremes>	private_meta: yep, sounds like pieterh's new mdp project
| [Tuesday 01 March 2011] [12:43:43] <cremes>	he's hard at work on it right now; perhaps there could be collaboration?
| [Tuesday 01 March 2011] [12:43:52] <private_meta>	As soon as these asynchroneous messages arrive at their respective endpoints, a logic is already in place to handle these messages, if needed even to create synchronity out of async messages
| [Tuesday 01 March 2011] [12:44:54] <private_meta>	Well, I would like to help, it would make it faster for me in some respect, I just don't know how I can helpo
| [Tuesday 01 March 2011] [12:44:57] <private_meta>	-o
| [Tuesday 01 March 2011] [12:50:54] <private_meta>	cremes: Well... I can ask pieterh if I could do anything to help, but if not I guess that the best thing to do right now would be to get to understand zmq better until he's done
| [Tuesday 01 March 2011] [12:51:25] <cremes>	good plan... you are kind of diving into the deep end
| [Tuesday 01 March 2011] [12:51:52] <private_meta>	cremes: well, I guess it wouldn't be good for me if he finished it and I still don't know that much about it >_>
| [Tuesday 01 March 2011] [12:52:10] <private_meta>	pieterh: so anything I can do to help, just tell :D
| [Tuesday 01 March 2011] [12:52:55] <private_meta>	k, bbl
| [Tuesday 01 March 2011] [12:57:33] <sarikan>	if I use the java bindings for zeromq in a web application, would I run into threading issues?
| [Tuesday 01 March 2011] [12:58:23] <sarikan>	multiple java threads will be using jni to access zeromq 
| [Tuesday 01 March 2011] [12:59:32] <cremes>	sarikan: only if you try to access the same socket from multiple threads; allocate a 0mq socket per thread and you'll be fine
| [Tuesday 01 March 2011] [13:02:15] <sarikan>	cremes:  so If I create, use and close a socket for each request, I should be fine
| [Tuesday 01 March 2011] [13:03:08] <cremes>	sarikan: sure, but that's an anti-pattern
| [Tuesday 01 March 2011] [13:03:13] <cremes>	what's your use-case?
| [Tuesday 01 March 2011] [13:03:42] <sarikan>	java web services, talking to some native code using 0mq as the middleware
| [Tuesday 01 March 2011] [13:03:53] <sarikan>	each request to java web service ends up being a thread
| [Tuesday 01 March 2011] [13:04:15] <cremes>	sarikan: a new thread or a thread from a pool?
| [Tuesday 01 March 2011] [13:04:17] <sarikan>	so I can't think of anything other than what I've written above
| [Tuesday 01 March 2011] [13:04:34] <sarikan>	more likely to be a thread from a pool
| [Tuesday 01 March 2011] [13:05:00] <cremes>	ok, so allocate a socket for each thread in the pool and reuse the socket just like you're reusing the thread
| [Tuesday 01 March 2011] [13:05:43] <sarikan>	cremes: that is an interesting approach, if I can monitor and control thread creation in the java web server, it should work fine
| [Tuesday 01 March 2011] [13:07:12] <sarikan>	cremes: do you think I need to watch for this if I'm using c++ instead of java? I guess it would be the same
| [Tuesday 01 March 2011] [13:08:45] <sarikan>	cremes: thanks anyway, helpful starting point
| [Tuesday 01 March 2011] [14:03:00] <Guthur>	I just noticed ZMQ_FD, is that not going to be a little problematic if we manage to get named pipes on Windows?
| [Tuesday 01 March 2011] [15:20:14] <Guthur>	is there some overriding technical reason why it is not possible to query for assigned subscription patterns
| [Tuesday 01 March 2011] [16:51:49] <mikko>	man, i love london
| [Tuesday 01 March 2011] [16:51:56] <mikko>	it's full of random things and events
| [Tuesday 01 March 2011] [17:02:38] <Guthur>	mikko, you a londoner then?
| [Tuesday 01 March 2011] [17:02:53] <mikko>	yep
| [Tuesday 01 March 2011] [17:03:01] <Guthur>	I was there last week actually, it's ok.
| [Tuesday 01 March 2011] [17:03:20] <Guthur>	I was only there for 2 days though, and it was mostly business
| [Tuesday 01 March 2011] [17:03:27] <mikko>	you should've told!
| [Tuesday 01 March 2011] [17:03:33] <mikko>	we could've had a mini-meetup
| [Tuesday 01 March 2011] [17:03:43] <Guthur>	never thought actually
| [Tuesday 01 March 2011] [17:04:01] <mikko>	we went out for beers last time sustrik was here
| [Tuesday 01 March 2011] [17:04:12] <mikko>	one other guy from london came out as well
| [Tuesday 01 March 2011] [17:04:55] <Guthur>	i'm sure i'll be there again sometime, i'm only across the irish sea, hehe
| [Tuesday 01 March 2011] [17:05:16] <ianbarber>	definitely up for london mini-meetups if everyone is about
| [Tuesday 01 March 2011] [17:05:22] <Guthur>	actually does anyone leave near Hamburg
| [Tuesday 01 March 2011] [17:05:24] <Guthur>	leave/live
| [Tuesday 01 March 2011] [17:05:25] <mikko>	we could organise one
| [Tuesday 01 March 2011] [17:05:58] <Guthur>	i'm in hamburg for the European Lisp Symposium
| [Tuesday 01 March 2011] [17:06:46] <Guthur>	it's a shame I never thought of setting up some demo with ZeroMQ and Common Lisp,  the theme for this year is concurrency
| [Tuesday 01 March 2011] [17:07:00] <mikko>	ianbarber: why don't we organise one at some point?
| [Tuesday 01 March 2011] [17:07:39] <ianbarber>	mikko: that's a good idea! 
| [Tuesday 01 March 2011] [17:07:51] <ianbarber>	we can setup a meetup event or something, and email the list
| [Tuesday 01 March 2011] [17:07:59] <ianbarber>	mid-late march?
| [Tuesday 01 March 2011] [17:09:00] <ianbarber>	i'm at confoo next week, but maybe the 17th or something like that
| [Tuesday 01 March 2011] [17:09:47] <mikko>	groupspaces
| [Tuesday 01 March 2011] [17:09:52] <mikko>	support local industries
| [Tuesday 01 March 2011] [17:10:56] <ianbarber>	good point :)
| [Tuesday 01 March 2011] [17:18:51] <ianbarber>	done: http://groupspaces.com/zeromq-london/ :)
| [Tuesday 01 March 2011] [19:30:07] <skm>	if a pusher has pushed 100msgd, the first client to call recv then gets all 100 msgs (and has to recv 99 more times to see them) - correct?
| [Tuesday 01 March 2011] [20:22:02] <Guthur>	skm, according to the docs push will go into an exceptional state if there is nothing downstream to recv
| [Tuesday 01 March 2011] [20:22:12] <Guthur>	http://api.zeromq.org/master:zmq-socket#toc12
| [Tuesday 01 March 2011] [20:23:19] <Guthur>	and it's load balanced across any connected downstream peers 
| [Tuesday 01 March 2011] [20:28:16] <skm>	i want to know what happens though when multiple clients connect with 100pending messages
| [Tuesday 01 March 2011] [20:28:23] <skm>	and the first connected client calls recv
| [Tuesday 01 March 2011] [20:28:51] <skm>	does it get one message or are all messages then sent to that
| [Tuesday 01 March 2011] [20:29:37] <skm>	im using the nodejs javascript binding which that is the case - the first recv gets all messages (and needs to call recv another 99 times to read the other messages)
| [Tuesday 01 March 2011] [20:29:59] <skm>	im just wondering if that is because of the binding or if that's the way 0mq works
| [Tuesday 01 March 2011] [20:30:03] <Guthur>	umm does sound right to me
| [Tuesday 01 March 2011] [20:30:06] <Guthur>	doesn't
| [Tuesday 01 March 2011] [20:30:43] <Guthur>	well that doesn't sound like it full fills the load-balancing aspect
| [Tuesday 01 March 2011] [20:32:17] <Guthur>	I can't say for sure to be honest
| [Tuesday 01 March 2011] [20:32:32] <Guthur>	someone else will have to clarify
| [Tuesday 01 March 2011] [21:43:50] <jugg>	pieterh, api.zeromq.org defaults to 'master/2.2.0'.  Perhaps it should default to the current stable release?
| [Tuesday 01 March 2011] [21:44:20] <jugg>	eg, the same as the redirects from the old api pages.
| [Wednesday 02 March 2011] [02:19:25] <Steve-o>	almost complete for next release of OpenPGM, just need platform tests on Autoconf & Cmake
| [Wednesday 02 March 2011] [02:19:58] <Steve-o>	performance docs uploaded for Windows, Linux, Sparc, general latency improvement all around
| [Wednesday 02 March 2011] [03:01:48] <CIA-21>	zeromq2: 03Martin Sustrik 07master * r5fcef1c 10/ (9 files in 3 dirs): 
| [Wednesday 02 March 2011] [03:01:48] <CIA-21>	zeromq2: ZMQ_MAXMSGSIZE option added
| [Wednesday 02 March 2011] [03:01:48] <CIA-21>	zeromq2: The new option allows user to guard against peers sending
| [Wednesday 02 March 2011] [03:01:48] <CIA-21>	zeromq2: oversized messages. Connection to peer sending oversized message
| [Wednesday 02 March 2011] [03:01:48] <CIA-21>	zeromq2: is dropped.
| [Wednesday 02 March 2011] [03:01:48] <CIA-21>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/eXNW24
| [Wednesday 02 March 2011] [03:48:00] <eyecue>	*waves* o/~
| [Wednesday 02 March 2011] [03:48:22] <eyecue>	watching pieters preso, very cool
| [Wednesday 02 March 2011] [04:30:04] <yrashk>	ok so apparently erlang binding (say, ezmq) isn't that slow
| [Wednesday 02 March 2011] [04:30:29] <yrashk>	the perf tests were erroneously scripted as interpreted code
| [Wednesday 02 March 2011] [04:30:33] <yrashk>	which slowed things down
| [Wednesday 02 March 2011] [04:30:52] <sustrik>	heh
| [Wednesday 02 March 2011] [04:30:59] <sustrik>	what are the figures now?
| [Wednesday 02 March 2011] [04:31:25] <yrashk>	11-13mb/s
| [Wednesday 02 March 2011] [04:31:41] <sustrik>	and in msgs/sec?
| [Wednesday 02 March 2011] [04:31:53] <yrashk>	I don't have that data yet, let me ask the guy who discovered this
| [Wednesday 02 March 2011] [04:32:10] <sustrik>	sure
| [Wednesday 02 March 2011] [04:35:39] <yrashk>	750694msg/s
| [Wednesday 02 March 2011] [04:36:34] <yrashk>	minor correction, with erlang-to-erlang local-remote it's rather 6mb/s
| [Wednesday 02 March 2011] [04:36:42] <yrashk>	but still that 750694msg/s
| [Wednesday 02 March 2011] [04:36:54] <yrashk>	still way better
| [Wednesday 02 March 2011] [04:43:35] <yrashk>	this is exciting
| [Wednesday 02 March 2011] [04:43:38] <yrashk>	sustrik: ^^
| [Wednesday 02 March 2011] [04:51:06] <Steve-o>	that's on 100mb or 1gb?
| [Wednesday 02 March 2011] [04:51:45] <yrashk>	that's on localhost I believe
| [Wednesday 02 March 2011] [04:53:00] <Steve-o>	eek
| [Wednesday 02 March 2011] [04:55:50] <Steve-o>	that's a bit of a hit
| [Wednesday 02 March 2011] [05:02:08] <jugg>	yrashk, have you confirmed this, as I tried compiling the code previously and it made no difference.
| [Wednesday 02 March 2011] [05:02:52] <yrashk>	jugg: I can't confirm this myself yet, but the guy clais this is what he gets on compiled modules (not on compiled escripts), and he's promising to send a pull req soon
| [Wednesday 02 March 2011] [05:03:10] <yrashk>	jugg: have you been trying to compile for erlzmq? using -mode(compile) or by converting them into modules?
| [Wednesday 02 March 2011] [05:03:21] <jugg>	both, neither changes performance.
| [Wednesday 02 March 2011] [05:03:24] <pieterh>	re
| [Wednesday 02 March 2011] [05:03:35] <yrashk>	well maybe ezmq is superior? ;)
| [Wednesday 02 March 2011] [05:03:44] <jugg>	:)
| [Wednesday 02 March 2011] [05:03:59] <yrashk>	after all it doesn't have that decoding/encoding overhead
| [Wednesday 02 March 2011] [05:04:23] <jugg>	I'll be interested if you can confirm the results.
| [Wednesday 02 March 2011] [05:06:09] <yrashk>	I am waiting for that pull req
| [Wednesday 02 March 2011] [05:06:14] 	 * eyecue blinks
| [Wednesday 02 March 2011] [05:06:28] <yrashk>	I hope I will be able to confirm this soon
| [Wednesday 02 March 2011] [05:06:35] <eyecue>	reading the guide :]
| [Wednesday 02 March 2011] [05:09:44] <eyecue>	the install guide mentions uuid-dev and uuid/e2fsprogs libs, but the FreeBSD port for ezmq doesnt seem to depend on them. are these conditional/optional dependencies?
| [Wednesday 02 March 2011] [05:11:45] <yrashk>	you mean the fbsd port of 0mq?
| [Wednesday 02 March 2011] [05:11:52] <yrashk>	because ezmq is an erlang library
| [Wednesday 02 March 2011] [05:12:00] <yrashk>	because ezmq is the erlang library for 0mq*
| [Wednesday 02 March 2011] [05:12:18] <eyecue>	apologies :)
| [Wednesday 02 March 2011] [05:12:20] <eyecue>	0mq.
| [Wednesday 02 March 2011] [05:12:35] <eyecue>	under http://www.freshports.org/net/zmq for reference
| [Wednesday 02 March 2011] [05:13:36] <eyecue>	yay, python bindings are in ports too
| [Wednesday 02 March 2011] [05:19:22] <pieterh>	yrashk: are those figures published anywhere?
| [Wednesday 02 March 2011] [05:23:03] <yrashk>	pieterh: not yet, it's the other guy who's fixing perf tests
| [Wednesday 02 March 2011] [05:23:33] <pieterh>	750K, up from, what was it, 20K or so?
| [Wednesday 02 March 2011] [05:23:37] <pieterh>	pretty nice
| [Wednesday 02 March 2011] [05:28:46] <yrashk>	pieterh: ya
| [Wednesday 02 March 2011] [05:28:54] <yrashk>	from 30Kish
| [Wednesday 02 March 2011] [05:33:48] <yrashk>	pieterh: it's basically without changing ezmq, just fixing perf tests
| [Wednesday 02 March 2011] [05:34:04] <yrashk>	although according to jugg the same approach didn't help speeding up erlzmq perf tests
| [Wednesday 02 March 2011] [05:34:37] 	 * pieterh is somewhat confused with all the e{rl}zmq versions
| [Wednesday 02 March 2011] [05:35:06] <pieterh>	ezmq is the latest rewrite, right?
| [Wednesday 02 March 2011] [05:35:20] <yrashk>	pieterh: ezmq is my NIF-based complete rewrite
| [Wednesday 02 March 2011] [05:35:33] <yrashk>	both erlzmqs (yeah, there are two of them) are port driver-based
| [Wednesday 02 March 2011] [05:35:56] <pieterh>	right, so eventually you want to merge all these together and call the result erlzmq again, I guess
| [Wednesday 02 March 2011] [05:36:05] <yrashk>	not necessarily
| [Wednesday 02 March 2011] [05:36:21] <yrashk>	and this is unlikely to happen I think
| [Wednesday 02 March 2011] [05:36:26] <pieterh>	hmm
| [Wednesday 02 March 2011] [05:36:27] <yrashk>	they are both quite different
| [Wednesday 02 March 2011] [05:36:36] <pieterh>	different APIs for apps?
| [Wednesday 02 March 2011] [05:36:40] <yrashk>	different approaches to interfacing with C
| [Wednesday 02 March 2011] [05:37:06] <pieterh>	is that relevant to users, except for performance?
| [Wednesday 02 March 2011] [05:37:25] <yrashk>	it is not
| [Wednesday 02 March 2011] [05:37:32] <yrashk>	for the most part
| [Wednesday 02 March 2011] [05:37:41] <pieterh>	so when I say 'merge' I mean, replace
| [Wednesday 02 March 2011] [05:38:09] <yrashk>	it's really up to saleyn and jugg, really
| [Wednesday 02 March 2011] [05:38:38] <pieterh>	of course
| [Wednesday 02 March 2011] [05:38:43] <yrashk>	I am just trying to maintain my own binding as I personally prefer NIF bindings
| [Wednesday 02 March 2011] [05:39:00] <yrashk>	I don't really care if it will be an official binding or not
| [Wednesday 02 March 2011] [05:39:03] <eyecue>	yrashk; sorry, newbie here, NIF? :)
| [Wednesday 02 March 2011] [05:39:18] <yrashk>	eyecue: Native Implemented Function, erlang term
| [Wednesday 02 March 2011] [05:39:23] <eyecue>	ta :]
| [Wednesday 02 March 2011] [05:39:56] <yrashk>	pieterh: I am fine if ezmq will remain as secondary binding
| [Wednesday 02 March 2011] [05:40:02] <yrashk>	as a*
| [Wednesday 02 March 2011] [05:40:07] <eyecue>	pieterh; btw, loving what i see/read about 0mq so far. trying to figure out how i can apply it to our email architecture
| [Wednesday 02 March 2011] [05:40:50] <pieterh>	yrashk: I'd personally use names that are more explanatory
| [Wednesday 02 March 2011] [05:41:01] <pieterh>	e.g. erlzmq-nif
| [Wednesday 02 March 2011] [05:41:10] <pieterh>	but it's not my call
| [Wednesday 02 March 2011] [05:41:44] <pieterh>	eyecue: glad you like it
| [Wednesday 02 March 2011] [05:41:56] <eyecue>	yrashk; just came across the UUID reference in the guide btw: All ?MQ sockets have identities but by default they are generated 'unique universal identifiers' (UUIDs)
| [Wednesday 02 March 2011] [05:42:31] <eyecue>	perhaps only relevent when using identies with durable sockets?
| [Wednesday 02 March 2011] [05:42:57] <yrashk>	pieterh: well... I don't have an opinion on that right now
| [Wednesday 02 March 2011] [05:43:24] <yrashk>	I think erlzmq and erlzmq-nif implies that the latter is a fork of a sort or soemthing
| [Wednesday 02 March 2011] [05:44:16] <yrashk>	but ezmq is in fact a full rewrite
| [Wednesday 02 March 2011] [05:44:21] <yrashk>	except for the constants
| [Wednesday 02 March 2011] [05:44:29] <yrashk>	I admit I stole the header file
| [Wednesday 02 March 2011] [05:44:52] <yrashk>	either way
| [Wednesday 02 March 2011] [05:45:01] <yrashk>	this is a minor issue (naming and whatnot)
| [Wednesday 02 March 2011] [05:46:12] <pieterh>	there are similarly several versions of clrzmq
| [Wednesday 02 March 2011] [05:46:27] <pieterh>	the latest one simply called itself clrzmq2 
| [Wednesday 02 March 2011] [05:46:34] <yrashk>	.net?
| [Wednesday 02 March 2011] [05:46:47] <pieterh>	yes
| [Wednesday 02 March 2011] [05:47:18] <yrashk>	well
| [Wednesday 02 March 2011] [05:47:24] <pieterh>	naming is always delicate
| [Wednesday 02 March 2011] [05:47:29] <yrashk>	yes and no
| [Wednesday 02 March 2011] [05:47:35] <pieterh>	imagine ezmq really takes off (it's lovely and fast)
| [Wednesday 02 March 2011] [05:47:49] <pieterh>	you'll have confused users asking, for years, why it's 'ezmq' and not 'erlzmq'...
| [Wednesday 02 March 2011] [05:47:54] <pieterh>	just my 5c
| [Wednesday 02 March 2011] [05:48:00] <eyecue>	i can vouch for that already :D
| [Wednesday 02 March 2011] [05:48:03] <yrashk>	I'll take care of this later
| [Wednesday 02 March 2011] [05:48:17] <yrashk>	I am just too lazy to think about this now
| [Wednesday 02 March 2011] [05:48:20] <pieterh>	lol
| [Wednesday 02 March 2011] [05:48:29] <yrashk>	sipping beer feels better
| [Wednesday 02 March 2011] [05:48:47] <yrashk>	I just hate renaming all files and module names
| [Wednesday 02 March 2011] [05:49:07] <eyecue>	pieterh; are you guys talking about various iterations/forks of the same  essential codebase implementing various new structures/patterns/paradigms, or something entirely different?
| [Wednesday 02 March 2011] [05:49:27] <pieterh>	yrashk: it doesn't get easier over time, indeed the name will stick
| [Wednesday 02 March 2011] [05:49:34] <eyecue>	and subsequently what to name the resulting output codebase?
| [Wednesday 02 March 2011] [05:49:36] <pieterh>	eyecue: it's a rewrite, as yrashk said
| [Wednesday 02 March 2011] [05:49:56] <yrashk>	ya from scratch
| [Wednesday 02 March 2011] [05:50:01] <pieterh>	but it exposes the same API to applications, so from users' point of view it's a Version 2
| [Wednesday 02 March 2011] [05:50:07] <eyecue>	whats the purpose /goal / driving motivator behind it ?
| [Wednesday 02 March 2011] [05:50:08] <yrashk>	pieterh: not the same
| [Wednesday 02 March 2011] [05:50:20] <yrashk>	pieterh: it's slightly different
| [Wednesday 02 March 2011] [05:50:26] <eyecue>	internal extensibility, or abstracting away upgrades behind the scenes?
| [Wednesday 02 March 2011] [05:50:27] <pieterh>	yrashk: sure
| [Wednesday 02 March 2011] [05:55:49] <yrashk>	this is ezmq results with fixed perf tests on my mac pro
| [Wednesday 02 March 2011] [05:55:49] <yrashk>	message size: 1 [B]
| [Wednesday 02 March 2011] [05:55:49] <yrashk>	message count: 1000000
| [Wednesday 02 March 2011] [05:55:50] <yrashk>	mean throughput: 1330266.625339717 [msg/s]
| [Wednesday 02 March 2011] [05:55:50] <yrashk>	mean throughput: 10.642133002717735 [Mb/s]
| [Wednesday 02 March 2011] [05:56:17] <pieterh>	yrashk: you should do 10M messages, perhaps
| [Wednesday 02 March 2011] [05:56:54] <pieterh>	I love the 17-digit precision
| [Wednesday 02 March 2011] [05:57:10] <pieterh>	1.3M msg/sec is pretty impressive
| [Wednesday 02 March 2011] [05:57:59] <eyecue>	certainly for sync tasks, id be keen to see the relative changes at incremental message sizes
| [Wednesday 02 March 2011] [05:58:04] <yrashk>	sure
| [Wednesday 02 March 2011] [05:58:05] <yrashk>	message size: 1 [B]
| [Wednesday 02 March 2011] [05:58:05] <yrashk>	message count: 10000000
| [Wednesday 02 March 2011] [05:58:05] <yrashk>	mean throughput: 1312724.6071802885 [msg/s]
| [Wednesday 02 March 2011] [05:58:05] <yrashk>	mean throughput: 10.501796857442308 [Mb/s]
| [Wednesday 02 March 2011] [05:58:30] <eyecue>	yrashk; ipc or?
| [Wednesday 02 March 2011] [05:58:35] <yrashk>	tcp
| [Wednesday 02 March 2011] [05:58:45] <eyecue>	local i take it ?
| [Wednesday 02 March 2011] [05:58:47] <yrashk>	ya
| [Wednesday 02 March 2011] [05:58:52] <eyecue>	sweet
| [Wednesday 02 March 2011] [05:58:56] <yrashk>	not bad
| [Wednesday 02 March 2011] [05:59:01] <yrashk>	jugg: ^^^
| [Wednesday 02 March 2011] [05:59:01] <eyecue>	whats the tcp overhead above ipc ?
| [Wednesday 02 March 2011] [05:59:09] <eyecue>	on the same 'box'
| [Wednesday 02 March 2011] [05:59:10] <yrashk>	I have no #s
| [Wednesday 02 March 2011] [05:59:12] <yrashk>	ah
| [Wednesday 02 March 2011] [05:59:13] <yrashk>	that
| [Wednesday 02 March 2011] [05:59:23] <eyecue>	quite interesting
| [Wednesday 02 March 2011] [05:59:51] <eyecue>	i can so tell im going to be spending alot more time on 0mq.
| [Wednesday 02 March 2011] [06:00:47] <yrashk>	never used ipc
| [Wednesday 02 March 2011] [06:00:54] <yrashk>	what would be an example ipc:// url?
| [Wednesday 02 March 2011] [06:01:21] <eyecue>	correct me if im wrong, but ipc:///tmp/somesocketname?
| [Wednesday 02 March 2011] [06:02:04] <eyecue>	first video on http://www.zeromq.org/intro:read-the-manual shows an example (i may be wrong)
| [Wednesday 02 March 2011] [06:02:42] <yrashk>	pieterh: on my hw c-to-c perf test is about twice as fast
| [Wednesday 02 March 2011] [06:02:50] <yrashk>	it makes me sad :-(
| [Wednesday 02 March 2011] [06:03:09] <pieterh>	yrashk: it's tragic
| [Wednesday 02 March 2011] [06:03:25] <yrashk>	this is on ipc: 
| [Wednesday 02 March 2011] [06:03:25] <yrashk>	mean throughput: 1343429.6550005474 [msg/s]
| [Wednesday 02 March 2011] [06:03:25] <yrashk>	mean throughput: 10.747437240004379 [Mb/s]
| [Wednesday 02 March 2011] [06:03:31] <eyecue>	again, excuse what might be a silly question, c-to-c ?
| [Wednesday 02 March 2011] [06:03:31] <yrashk>	pretty much the same
| [Wednesday 02 March 2011] [06:03:32] <pieterh>	eyecue: yes, that would be a good place to put ipc files
| [Wednesday 02 March 2011] [06:03:42] <eyecue>	yrashk; thats pretty cool
| [Wednesday 02 March 2011] [06:04:06] <yrashk>	eyecue: perf tests from zeromq itself as opposed those implemented in erlang (which is what I am testing right now)
| [Wednesday 02 March 2011] [06:04:13] <pieterh>	ipc:// uses a filename, e.g. ipc://somefile.ipc
| [Wednesday 02 March 2011] [06:04:20] <yrashk>	pieterh: sarcasm? ;)
| [Wednesday 02 March 2011] [06:04:23] <pieterh>	must be writeable by all processes that use it
| [Wednesday 02 March 2011] [06:04:27] <eyecue>	yrashk; thats what i thought :)
| [Wednesday 02 March 2011] [06:04:28] <pieterh>	yrashk: gentle irony
| [Wednesday 02 March 2011] [06:04:33] <eyecue>	pieterh; i saw the uid note for it :]
| [Wednesday 02 March 2011] [06:04:38] <yrashk>	pieterh: do you think this is a good result?
| [Wednesday 02 March 2011] [06:04:43] <pieterh>	yrashk: rather good, yes
| [Wednesday 02 March 2011] [06:05:00] <eyecue>	i find it interesting that an ipc socket and tcp perf is roughly the same
| [Wednesday 02 March 2011] [06:05:17] <pieterh>	eyecue: they are identical, on Linux localhost
| [Wednesday 02 March 2011] [06:05:23] <pieterh>	local domain sockets
| [Wednesday 02 March 2011] [06:05:38] <yrashk>	it's osx
| [Wednesday 02 March 2011] [06:06:01] <pieterh>	osx is linux, it just hasn't quite realized it yet
| [Wednesday 02 March 2011] [06:06:04] <pieterh>	:-)
| [Wednesday 02 March 2011] [06:06:11] <eyecue>	still the file socket stack and tcp stacks often have quite not-the-same performance characteristics, and tuning parameters
| [Wednesday 02 March 2011] [06:06:14] <pieterh>	yrashk: you could try inproc to see what the raw API costs are
| [Wednesday 02 March 2011] [06:06:44] <yrashk>	pieterh: for that I have to tweak tests... not in this beer mode :)
| [Wednesday 02 March 2011] [06:07:26] <pieterh>	ah, beer mode... :-)
| [Wednesday 02 March 2011] [06:07:30] <pieterh>	i'm in coffee mode here
| [Wednesday 02 March 2011] [06:08:04] <eyecue>	i wish i was in coffee mode, food search mode here :)
| [Wednesday 02 March 2011] [06:08:07] <eyecue>	<-- .au
| [Wednesday 02 March 2011] [06:09:03] <sejo>	quick question, if I create a FIFO que with 2 servers and multiple clients, is it possible to save the items in the que somewhere to make sure when the servers crash the items are retrievable?
| [Wednesday 02 March 2011] [06:09:13] <sejo>	or should I write such code myself?
| [Wednesday 02 March 2011] [06:10:27] <pieterh>	sejo: it's being explained in Chapter 4 of the guide
| [Wednesday 02 March 2011] [06:10:34] <eyecue>	workers can die too, so resilience there can often be more important than queue resilience
| [Wednesday 02 March 2011] [06:10:35] <pieterh>	see http://zero.mq/md
| [Wednesday 02 March 2011] [06:10:46] <pieterh>	I'm working on an implementation of that right now
| [Wednesday 02 March 2011] [06:10:50] <eyecue>	ooo, a new page to look at
| [Wednesday 02 March 2011] [06:11:03] <eyecue>	pieterh; why the name majordomo?
| [Wednesday 02 March 2011] [06:11:12] <Guthur>	pieterh: what stage of completeness is Ch4? out of interest
| [Wednesday 02 March 2011] [06:11:13] <pieterh>	eyecue: all the patterns in Ch4 get cute names
| [Wednesday 02 March 2011] [06:11:22] <pieterh>	and Ch4 is about 50% done afaics
| [Wednesday 02 March 2011] [06:11:28] <eyecue>	not worried about the open source app by the same name ? :]
| [Wednesday 02 March 2011] [06:11:32] <pieterh>	Majordomo because it provides a reliable service
| [Wednesday 02 March 2011] [06:11:34] <eyecue>	or are you leveraging it ;)
| [Wednesday 02 March 2011] [06:11:39] <pieterh>	what other app?
| [Wednesday 02 March 2011] [06:11:44] 	 * pieterh is happily ignorant
| [Wednesday 02 March 2011] [06:11:48] <eyecue>	majordomo the mailing list manager :]
| [Wednesday 02 March 2011] [06:11:54] <pieterh>	no idea what you're talking about
| [Wednesday 02 March 2011] [06:12:27] <eyecue>	one of the most widely used open source mailing list management softwares :]
| [Wednesday 02 March 2011] [06:12:40] <pieterh>	does it use 0MQ?
| [Wednesday 02 March 2011] [06:12:48] <eyecue>	nono, its name is just majordomo
| [Wednesday 02 March 2011] [06:13:00] <pieterh>	do they have a trademark on their name?
| [Wednesday 02 March 2011] [06:13:07] 	 * pieterh checks that rapidly...
| [Wednesday 02 March 2011] [06:13:15] <Guthur>	I'd guess no
| [Wednesday 02 March 2011] [06:13:24] <eyecue>	greatcircle software is the company who makes it, but ive never thought of that :)
| [Wednesday 02 March 2011] [06:13:25] <pieterh>	they don't even own majordomo.org
| [Wednesday 02 March 2011] [06:13:34] <ianbarber>	you're probably all right on this one, it's more of a protocol thing than a particular bit of software
| [Wednesday 02 March 2011] [06:13:51] <Guthur>	wiki has this on the majordomo page: Development status	End of life
| [Wednesday 02 March 2011] [06:13:53] <pieterh>	legally, if there is a trademark and risk of confusion, I'd have to choose another name
| [Wednesday 02 March 2011] [06:14:07] <ianbarber>	wordpress inspired the ire of many recently by naming their most recent release django, which was clever
| [Wednesday 02 March 2011] [06:14:18] <eyecue>	yah it was more out of interest than to point out any/possible risks :]
| [Wednesday 02 March 2011] [06:14:23] <Guthur>	last stable release 11 years ago
| [Wednesday 02 March 2011] [06:14:30] <pieterh>	morally, this is a 0MQ pattern name, there is no confusion
| [Wednesday 02 March 2011] [06:14:34] <Guthur>	it's possible it is perfect though
| [Wednesday 02 March 2011] [06:14:39] <pieterh>	like Libero
| [Wednesday 02 March 2011] [06:14:40] <eyecue>	there is of course the issue of user confusion, but i digress
| [Wednesday 02 March 2011] [06:15:04] <pieterh>	Libero is a FSM tool I wrote in the early 90's, which actually had no bugs and no more features to add
| [Wednesday 02 March 2011] [06:15:22] <pieterh>	so perhaps Majordomo-the-software was perfect, but ... probably it's just dead
| [Wednesday 02 March 2011] [06:15:31] 	 * pieterh can digress with the best of them
| [Wednesday 02 March 2011] [06:15:40] <Guthur>	it can even run on newer versions of Unix, apparently
| [Wednesday 02 March 2011] [06:15:41] <eyecue>	its still one of the most widely deployed mailing list managers for open source projects full stop :]
| [Wednesday 02 March 2011] [06:15:47] <Guthur>	all this from the wiki page mind you
| [Wednesday 02 March 2011] [06:15:52] <Guthur>	can/can't
| [Wednesday 02 March 2011] [06:15:55] <eyecue>	im actually quite suprised youd never heard of it
| [Wednesday 02 March 2011] [06:16:29] <pieterh>	aiksaurus suggests 'chamberlain' as an alternative but somehow I prefer 'Majordomo'
| [Wednesday 02 March 2011] [06:16:40] <eyecue>	it sounds authoritive :)
| [Wednesday 02 March 2011] [06:16:59] 	 * pieterh gets back to coding
| [Wednesday 02 March 2011] [06:37:37] <pieterh>	ianbarber: so we're on for the 16th?
| [Wednesday 02 March 2011] [06:38:54] <ianbarber>	yep
| [Wednesday 02 March 2011] [06:40:38] <ianbarber>	just tweeted about it, i haven't actually been to this place before, but mikko knows it
| [Wednesday 02 March 2011] [06:41:46] <ianbarber>	it's near oxford circus so it's just straight down the victoria line for kings cross, if you can come, and come in by train
| [Wednesday 02 March 2011] [06:45:57] <ianbarber>	will be awesome! do you have any clients in London to see or similar, feel bad for your travel if you're just coming to chat to us :) 
| [Wednesday 02 March 2011] [06:58:52] <pieterh>	ianbarber: yes, there are always people to meet in London
| [Wednesday 02 March 2011] [06:59:05] <yrashk>	night everybody :)
| [Wednesday 02 March 2011] [06:59:10] <ianbarber>	:)
| [Wednesday 02 March 2011] [06:59:11] <pieterh>	yrashk: night :-)
| [Wednesday 02 March 2011] [07:12:24] <eyecue>	night
| [Wednesday 02 March 2011] [07:21:14] <private_meta>	haven't been in London for 3 years
| [Wednesday 02 March 2011] [07:45:44] <pieterh>	ianbarber: do you want a link shortener at zero.mq? I've set this up at zero.mq/go
| [Wednesday 02 March 2011] [07:46:00] <ianbarber>	oh, that's an idea
| [Wednesday 02 March 2011] [07:46:21] <ianbarber>	have to chuck canonical links in heads of pages
| [Wednesday 02 March 2011] [07:47:27] <ianbarber>	that looks very handy
| [Wednesday 02 March 2011] [07:47:49] <pieterh>	register at Wikidot if not done, click Join and I'll give you access
| [Wednesday 02 March 2011] [07:49:25] <ianbarber>	done
| [Wednesday 02 March 2011] [07:52:04] <pieterh>	done: to create a shortcut you just enter the short URL you want, then click Create, and enter the target URL in the page title and save
| [Wednesday 02 March 2011] [07:52:53] <pieterh>	ianbarber: I've made you site admin too, so you can give others ccess
| [Wednesday 02 March 2011] [07:52:58] <pieterh>	*access
| [Wednesday 02 March 2011] [07:53:01] <sejo>	ping
| [Wednesday 02 March 2011] [07:53:07] <sejo>	sorry
| [Wednesday 02 March 2011] [07:53:38] <pieterh>	ianbarber: yay :-) it works
| [Wednesday 02 March 2011] [07:53:53] <ianbarber>	cool :)
| [Wednesday 02 March 2011] [07:53:58] <ianbarber>	thanks!
| [Wednesday 02 March 2011] [07:55:48] <pieterh>	hey, thanks to you for zero.mq, it's quite a fun toy
| [Wednesday 02 March 2011] [07:57:09] <pieterh>	have to leave, cyal
| [Wednesday 02 March 2011] [08:44:35] <private_meta>	pieterh: in the majordomo protocol, why does the client have a nullbyte?
| [Wednesday 02 March 2011] [08:45:26] <private_meta>	pieterh: is it because the REQ socket normally inserts it?
| [Wednesday 02 March 2011] [09:05:26] <guyvdb_>	Hi, I am just starting to read about zeromq. Is the socket event driven behind the scenes? I.e. if I do zmq_bind() on a server and then 10K low traffic clients do zmq_connect() is the library doing epoll() or similar in the background?
| [Wednesday 02 March 2011] [09:45:16] <djc>	anyone around? I could use some help with my first zmq thingy
| [Wednesday 02 March 2011] [09:45:49] <drbobbeaty>	djc: I'm no expert, but you can ask, and I can see if I can help.
| [Wednesday 02 March 2011] [09:46:08] <djc>	I'm trying to do a pub/sub thing
| [Wednesday 02 March 2011] [09:46:20] <djc>	but I'm not getting any messages on the client
| [Wednesday 02 March 2011] [09:46:38] <djc>	(the zmq_send() call on the publisher returns 0, so that seems to work at least)
| [Wednesday 02 March 2011] [09:46:45] <drbobbeaty>	Have you looked at the Guide? It's got PUB/SUB examples...
| [Wednesday 02 March 2011] [09:46:48] <djc>	the client just sits there, apparently blocking
| [Wednesday 02 March 2011] [09:46:53] <djc>	yeah, I'm looking at it
| [Wednesday 02 March 2011] [09:46:59] <djc>	that's what I derived my code from :)
| [Wednesday 02 March 2011] [09:47:01] <drbobbeaty>	The client's recv() will block - that's by design.
| [Wednesday 02 March 2011] [09:47:38] <drbobbeaty>	What transport are you using? The URL used by the PUB and SUB to know where to PUB and SUB.
| [Wednesday 02 March 2011] [09:47:55] <guido_g>	djc: paste your code (and any error message) to a paste bin, w/o the code we're guessing
| [Wednesday 02 March 2011] [09:49:36] <guido_g>	https://github.com/ <- nice paste bin
| [Wednesday 02 March 2011] [09:50:08] <guido_g>	oops https://gist.github.com/ <- take this
| [Wednesday 02 March 2011] [09:50:18] <djc>	http://dpaste.com/465507/
| [Wednesday 02 March 2011] [09:50:56] <djc>	is what I have so far
| [Wednesday 02 March 2011] [09:51:01] <guido_g>	tz tz tz
| [Wednesday 02 March 2011] [09:51:12] <guido_g>	you need to subscribe on the sub
| [Wednesday 02 March 2011] [09:51:17] <guido_g>	see manual and guide
| [Wednesday 02 March 2011] [09:52:42] <djc>	oops, missed that
| [Wednesday 02 March 2011] [09:56:01] <guido_g>	case closed, i assume ,)
| [Wednesday 02 March 2011] [09:56:07] <djc>	it works! \o/
| [Wednesday 02 March 2011] [09:56:09] <djc>	thanks :)
| [Wednesday 02 March 2011] [09:56:15] <djc>	(and sorry for not reading better)
| [Wednesday 02 March 2011] [09:57:06] <djc>	btw, kind of weird that the python bindings don't respect SIGINT
| [Wednesday 02 March 2011] [09:57:20] <djc>	oh, I guess it respects it only when it awakes or something
| [Wednesday 02 March 2011] [09:57:49] <guido_g>	depends on the version of the bindings *and* mq
| [Wednesday 02 March 2011] [09:58:29] <guido_g>	with pyzma from git master and 2.1.0 mq ctrl-c works, w/ older mq not
| [Wednesday 02 March 2011] [09:59:22] <djc>	yeah, I just picked up 2.0.10.1 because it's on the py bindings page
| [Wednesday 02 March 2011] [10:00:03] <guido_g>	way to old
| [Wednesday 02 March 2011] [10:00:58] <guido_g>	if you dare to compile mq yourself, use the git://github.com/zeromq/zeromq2-1.git repository I'd say
| [Wednesday 02 March 2011] [10:01:42] <guido_g>	this will be the "stable" for 2.1.x and is now "release candidate" or so
| [Wednesday 02 March 2011] [10:02:42] <djc>	well, it doesn't look like 2.1.x is "stable" yet
| [Wednesday 02 March 2011] [10:03:37] <guido_g>	it is more stable than 2.0.x ever was
| [Wednesday 02 March 2011] [10:04:20] <guido_g>	and if you start using mq there is no need to use the old version
| [Wednesday 02 March 2011] [10:04:44] <guido_g>	i'm using the old 2.1.0 tar and it's fine w/ pyzmq
| [Wednesday 02 March 2011] [10:06:53] <cremes>	sustrik: what is the use-case for setting ZMQ_MAXMSGSIZE to 0? your changes allow that but i don't see the point
| [Wednesday 02 March 2011] [10:39:00] <CIA-21>	zeromq2: 03Martin Sustrik 07master * r18b9ebe 10/ (151 files in 9 dirs): 
| [Wednesday 02 March 2011] [10:39:01] <CIA-21>	zeromq2: The copyrights in file headers updated.
| [Wednesday 02 March 2011] [10:39:01] <CIA-21>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/h7FJB3
| [Wednesday 02 March 2011] [10:47:12] <private_meta>	pieterh: does zmsg.c actually compile for you?
| [Wednesday 02 March 2011] [10:50:41] <cremes>	private_meta: i can't get it to compile on osx; it appears to compile ok on linux
| [Wednesday 02 March 2011] [10:50:56] <private_meta>	I'm trying to compile it on linux, cremes 
| [Wednesday 02 March 2011] [10:51:07] <cremes>	oh
| [Wednesday 02 March 2011] [10:51:30] <private_meta>	for every function in there I get a "multiple definition" error
| [Wednesday 02 March 2011] [10:51:41] <private_meta>	cremes: what's your problem on OSX?
| [Wednesday 02 March 2011] [10:52:23] <cremes>	https://gist.github.com/851138
| [Wednesday 02 March 2011] [10:54:39] <private_meta>	actually, "gcc -o file -lzmq ppqueue.c zmsg.c" SHOULD be sufficient, shouldn't it?
| [Wednesday 02 March 2011] [10:57:32] <private_meta>	cremes: hmm... I get the same result when compiling asyncsrv.c
| [Wednesday 02 March 2011] [10:58:36] <private_meta>	cremes: https://gist.github.com/355144225f76f096c67a
| [Wednesday 02 March 2011] [10:58:49] <private_meta>	cremes: what's your compile command?
| [Wednesday 02 March 2011] [11:00:59] <guido_g>	seems that the errors are in the link phase
| [Wednesday 02 March 2011] [11:01:22] <private_meta>	Seems so
| [Wednesday 02 March 2011] [11:01:29] <guido_g>	try to compile and link step-by-step
| [Wednesday 02 March 2011] [11:01:56] <private_meta>	phew... no idea how...
| [Wednesday 02 March 2011] [11:02:32] <private_meta>	k, -c
| [Wednesday 02 March 2011] [11:02:41] <guido_g>	compile the source files to .o then link these .o files to an executable using the relevant libs
| [Wednesday 02 March 2011] [11:03:05] <private_meta>	yeah, I know the steps, but I just never did them manually
| [Wednesday 02 March 2011] [11:03:13] <private_meta>	I mean, I hardly ever used gcc by hand to start
| [Wednesday 02 March 2011] [11:05:30] <private_meta>	guido_g: it compiled correctly, but the linker had the same error
| [Wednesday 02 March 2011] [11:07:38] <guido_g>	seems that all functions are already defined in the asyncsrv file
| [Wednesday 02 March 2011] [11:07:51] <guido_g>	check the includes i'd say
| [Wednesday 02 March 2011] [11:09:32] <private_meta>	Well, what makes it break is zmsg.c
| [Wednesday 02 March 2011] [11:09:38] <private_meta>	but apparently it should work
| [Wednesday 02 March 2011] [11:09:41] <cremes>	my compile command is "./build all"
| [Wednesday 02 March 2011] [11:09:44] <cremes>	:)
| [Wednesday 02 March 2011] [11:09:46] <guido_g>	*sigh*
| [Wednesday 02 March 2011] [11:10:27] <guido_g>	private_meta: did you really read the error message? it states that the functions are already there, comming from the async file
| [Wednesday 02 March 2011] [11:10:56] <guido_g>	which is strange, becase they also appear in the zmsg file
| [Wednesday 02 March 2011] [11:12:12] <private_meta>	I took it as is from the website. asyncsrv.c includes zhelpers and zmsg, zmsg itself includes zhelpers
| [Wednesday 02 March 2011] [11:12:58] <guido_g>	it includes zmsg.c?
| [Wednesday 02 March 2011] [11:13:08] <private_meta>	Don't ask me, it's treated as a .h file
| [Wednesday 02 March 2011] [11:13:25] <guido_g>	link to code
| [Wednesday 02 March 2011] [11:13:45] <private_meta>	https://github.com/imatix/zguide/tree/chapter4-wip/examples/C <-- zhelpers.h, zmsg.c, asyncsrv.c
| [Wednesday 02 March 2011] [11:13:58] <private_meta>	hmm
| [Wednesday 02 March 2011] [11:14:08] <guido_g>	oh my god
| [Wednesday 02 March 2011] [11:14:13] <private_meta>	wait,I took the non-branch one
| [Wednesday 02 March 2011] [11:14:22] <private_meta>	the master one
| [Wednesday 02 March 2011] [11:14:35] <private_meta>	What?
| [Wednesday 02 March 2011] [11:15:13] <guido_g>	it really includes a .c file
| [Wednesday 02 March 2011] [11:15:28] <guido_g>	one should poke pieter for that
| [Wednesday 02 March 2011] [11:15:52] <guido_g>	private_meta: leave out the zmq.* from the compile/link
| [Wednesday 02 March 2011] [11:16:18] <private_meta>	guido_g: ?
| [Wednesday 02 March 2011] [11:16:30] <guido_g>	what?
| [Wednesday 02 March 2011] [11:16:38] <private_meta>	what do you mean leave it out?
| [Wednesday 02 March 2011] [11:16:45] <guido_g>	drop it from the command
| [Wednesday 02 March 2011] [11:17:18] <private_meta>	oh
| [Wednesday 02 March 2011] [11:17:42] <private_meta>	>_<
| [Wednesday 02 March 2011] [11:17:56] <guido_g>	line noise?
| [Wednesday 02 March 2011] [11:17:59] <private_meta>	ok, then I need to set the file as "exclude from build" in eclipse for it to work
| [Wednesday 02 March 2011] [11:18:08] <guido_g>	in the 21st century?
| [Wednesday 02 March 2011] [11:18:37] <private_meta>	guido_g: k, thanks, stupid of me not to think of that
| [Wednesday 02 March 2011] [11:19:05] <guido_g>	also not very clever to *do that* in the first place
| [Wednesday 02 March 2011] [11:19:15] <private_meta>	ik
| [Wednesday 02 March 2011] [11:19:25] <guido_g>	you should tell pieterh and demand action
| [Wednesday 02 March 2011] [11:21:46] <cremes>	alternately, fix it and submit a patch
| [Wednesday 02 March 2011] [11:23:54] <private_meta>	I'm more interested in a C++ version
| [Wednesday 02 March 2011] [11:24:16] <private_meta>	But then everything should be a proper class and the problem would be gone
| [Wednesday 02 March 2011] [11:25:16] <guido_g>	zhelper thingie is for c
| [Wednesday 02 March 2011] [11:26:04] <guido_g>	you should use the c++ api and build from there, otherwise you put a layer on top of a layer...
| [Wednesday 02 March 2011] [11:26:13] <private_meta>	IK
| [Wednesday 02 March 2011] [11:26:18] <private_meta>	Doing that already
| [Wednesday 02 March 2011] [11:26:40] <private_meta>	In other words, I never intended to use zhelpers.c, but I need it for comparison
| [Wednesday 02 March 2011] [11:27:38] <guido_g>	compare to what?
| [Wednesday 02 March 2011] [11:27:55] <private_meta>	zhelpers.h to zhelpers.hpp equivalents
| [Wednesday 02 March 2011] [11:28:22] <private_meta>	If I use zmsg and translate it, I should do it in a way it's useful for the docs
| [Wednesday 02 March 2011] [11:28:23] <guido_g>	i don't see any benefit
| [Wednesday 02 March 2011] [11:28:48] <private_meta>	anyway, what I want to say is I won't use zhelpers.h for C++
| [Wednesday 02 March 2011] [11:29:01] <guido_g>	a useful c++ helper collection would not look like the c version, i'd guess
| [Wednesday 02 March 2011] [13:29:11] <pieterh>	re
| [Wednesday 02 March 2011] [13:30:03] <pieterh>	private_meta: you still around?
| [Wednesday 02 March 2011] [13:49:05] <pieterh>	guido_g: you around?
| [Wednesday 02 March 2011] [13:50:04] <guido_g>	jepp, now
| [Wednesday 02 March 2011] [13:50:26] <pieterh>	so what's the beef with my C coding style?
| [Wednesday 02 March 2011] [13:50:27] <pieterh>	:-)
| [Wednesday 02 March 2011] [13:51:35] <pieterh>	the idea is to allow people to compile and link individual examples 
| [Wednesday 02 March 2011] [13:51:36] <guido_g>	you're including a a c file
| [Wednesday 02 March 2011] [13:51:41] <pieterh>	rather than have to construct libraries
| [Wednesday 02 March 2011] [13:52:12] <guido_g>	but obviously the normal reflex of a c programmer is to compile c files
| [Wednesday 02 March 2011] [13:52:21] <pieterh>	there's even a 'build' script provided
| [Wednesday 02 March 2011] [13:52:23] <pieterh>	yeah
| [Wednesday 02 March 2011] [13:52:30] <pieterh>	anyhow, I'm renaming these mystery classes to .h
| [Wednesday 02 March 2011] [13:52:42] <guido_g>	would help
| [Wednesday 02 March 2011] [13:52:59] <pieterh>	it's either write 2,000 line examples, or include stuff
| [Wednesday 02 March 2011] [13:53:01] <guido_g>	i think back in the old times one would have used .i or so
| [Wednesday 02 March 2011] [13:53:12] <pieterh>	would that be clearer?
| [Wednesday 02 March 2011] [13:53:21] <guido_g>	imho yes
| [Wednesday 02 March 2011] [13:53:35] <guido_g>	.c is realy ment to be compiled
| [Wednesday 02 March 2011] [13:53:36] <pieterh>	in 2011 we're allowed as many as 3 chars per extension afaik
| [Wednesday 02 March 2011] [13:53:45] <pieterh>	.dnc?
| [Wednesday 02 March 2011] [13:53:48] <guido_g>	.h is for declarations
| [Wednesday 02 March 2011] [13:54:02] <pieterh>	zmsg.h is a class file in face
| [Wednesday 02 March 2011] [13:54:07] <pieterh>	in *fact
| [Wednesday 02 March 2011] [13:54:13] <pieterh>	a mix of declarations and methods
| [Wednesday 02 March 2011] [13:54:18] <pieterh>	aha
| [Wednesday 02 March 2011] [13:54:25] <guido_g>	sure, but it's c++ then
| [Wednesday 02 March 2011] [13:54:25] <pieterh>	#include "zmsg.class"
| [Wednesday 02 March 2011] [13:54:32] <pieterh>	yes :-)
| [Wednesday 02 March 2011] [13:54:44] <pieterh>	no, it's class-oriented C
| [Wednesday 02 March 2011] [13:54:50] <pieterh>	C++ did not take patents on that
| [Wednesday 02 March 2011] [13:55:06] <guido_g>	the only problem was to use an extension that's been assocciated w/ a specific action
| [Wednesday 02 March 2011] [13:55:18] <pieterh>	yes, you're right, makefiles and such get very confused
| [Wednesday 02 March 2011] [13:55:27] <pieterh>	people will ask me wtf the class file business is, and I can then upsell ZFL
| [Wednesday 02 March 2011] [13:55:31] <pieterh>	very neat, thanks!
| [Wednesday 02 March 2011] [13:56:59] <guido_g>	np
| [Wednesday 02 March 2011] [13:57:57] <pieterh>	this makes my evening, in fact
| [Wednesday 02 March 2011] [13:58:09] <pieterh>	I love it when a semantic comes together
| [Wednesday 02 March 2011] [14:00:33] <guido_g>	i'm still touched by the idea of including code this way
| [Wednesday 02 March 2011] [14:00:42] <guido_g>	seems odd after some decades ,)
| [Wednesday 02 March 2011] [14:03:30] <pieterh>	well, however you do it, you need to say "I want to use class XYZ"
| [Wednesday 02 March 2011] [14:03:42] <guido_g>	sure
| [Wednesday 02 March 2011] [14:04:01] <pieterh>	if I break the classes into .h and .c I *force* people to make libraries and maintain them
| [Wednesday 02 March 2011] [14:04:14] <pieterh>	this way, they can build just the single example and it works
| [Wednesday 02 March 2011] [14:04:18] <private_meta>	pieterh:  what is it?
| [Wednesday 02 March 2011] [14:04:18] <guido_g>	i finally figured it from the error messages private_meta got while linking
| [Wednesday 02 March 2011] [14:04:48] <pieterh>	well, people who are smart enough to go make their own compile / link commands instead of using the ones I provided...
| [Wednesday 02 March 2011] [14:04:53] <pieterh>	'build all'
| [Wednesday 02 March 2011] [14:04:57] <pieterh>	'build asyncsrc'
| [Wednesday 02 March 2011] [14:05:09] <guido_g>	this use of import has become uncommon in the last decades, that's all I wanted to mention ,)
| [Wednesday 02 March 2011] [14:05:32] <guido_g>	s/import/include/
| [Wednesday 02 March 2011] [14:05:45] <guido_g>	curse you, python! :)
| [Wednesday 02 March 2011] [14:06:07] <pieterh>	Python uses import, right?
| [Wednesday 02 March 2011] [14:06:19] <guido_g>	yes
| [Wednesday 02 March 2011] [14:06:25] <private_meta>	pieterh:  what did you want?
| [Wednesday 02 March 2011] [14:06:26] <guido_g>	but it's not like include
| [Wednesday 02 March 2011] [14:06:26] <pieterh>	even for basic stuff like command line arguments, which I find very quaint, as a modern C programmer
| [Wednesday 02 March 2011] [14:06:52] <guido_g>	import deals w/ namespaces
| [Wednesday 02 March 2011] [14:07:17] <guido_g>	so it's more like a combination of include w/ c++ namespaces
| [Wednesday 02 March 2011] [14:07:41] <guido_g>	w/ some dynmaic linking...
| [Wednesday 02 March 2011] [14:07:48] <guido_g>	ok
| [Wednesday 02 March 2011] [14:07:59] <guido_g>	in fact, it's not like include
| [Wednesday 02 March 2011] [14:08:53] <Guthur>	are messages beginning with 0 reserved for ZMQ, or am I imagining things?
| [Wednesday 02 March 2011] [14:09:04] <Guthur>	maybe it was identities
| [Wednesday 02 March 2011] [14:09:49] <guido_g>	the latter, afair
| [Wednesday 02 March 2011] [14:10:13] <guido_g>	mq generated identities are starting w/ a 0 byte
| [Wednesday 02 March 2011] [14:10:49] <Guthur>	ok
| [Wednesday 02 March 2011] [14:11:01] <Guthur>	at least I wasn't completely imagining things, hehe
| [Wednesday 02 March 2011] [14:11:27] <guido_g>	yeah
| [Wednesday 02 March 2011] [14:11:49] <guido_g>	it's amazing how much information is in the so sparse looking documentation
| [Wednesday 02 March 2011] [14:12:20] <cremes>	pieterh: any particular roadmap or timeframe until 2.1.1 is blessed as a final release?
| [Wednesday 02 March 2011] [14:12:35] <cremes>	reason i ask is we still have so many folks popping in here asking questions about 2.0.10
| [Wednesday 02 March 2011] [14:12:35] <pieterh>	... phone... busy
| [Wednesday 02 March 2011] [14:12:44] <cremes>	because it is the last "official" release
| [Wednesday 02 March 2011] [14:12:51] <cremes>	sure, answer whenever
| [Wednesday 02 March 2011] [14:13:24] <guido_g>	true
| [Wednesday 02 March 2011] [14:14:16] <guido_g>	and it's somewhat hard to tell people to use a "release candidate" because it's more stable than the "stable" 
| [Wednesday 02 March 2011] [14:14:25] <cremes>	agreed
| [Wednesday 02 March 2011] [14:14:53] <private_meta>	pieterh:  Btw I'm implementing zmsg as a class, I hope that helps with the c++ examples, I just didn't finish yet
| [Wednesday 02 March 2011] [14:15:56] <private_meta>	 c++ class that is
| [Wednesday 02 March 2011] [14:29:01] <pieterh>	ok, back...
| [Wednesday 02 March 2011] [14:29:19] <pieterh>	private_meta: zmsg is IMO useful in any language
| [Wednesday 02 March 2011] [14:29:44] <pieterh>	presumably modified to suit
| [Wednesday 02 March 2011] [14:29:59] <pieterh>	what it does is let you manipulate whole 0MQ multipart messages as single objects
| [Wednesday 02 March 2011] [14:30:10] <pieterh>	this is extremely useful unless you like writing repetitive code
| [Wednesday 02 March 2011] [14:30:26] <pieterh>	cremes: wrt 2.1.x, it's ASAP
| [Wednesday 02 March 2011] [14:30:36] <pieterh>	I'd like to make an rc2 this week
| [Wednesday 02 March 2011] [14:30:49] <pieterh>	and then it's probably 7-10 more days for a final stable release
| [Wednesday 02 March 2011] [14:32:16] <private_meta>	pieterh: I'm just saying I'll write a nice c++ class based version , more or Less
| [Wednesday 02 March 2011] [14:32:48] <pieterh>	IMO it will be useful in general for C++ developers
| [Wednesday 02 March 2011] [14:33:15] <cremes>	pieterh: great, i like that timeline
| [Wednesday 02 March 2011] [14:33:24] <cremes>	only 2 more weeks of questions on 2.0.10 :)
| [Wednesday 02 March 2011] [14:33:45] <pieterh>	cremes: my goal is to make new stable releases every 3 months or so
| [Wednesday 02 March 2011] [14:33:51] <pieterh>	perhaps even faster
| [Wednesday 02 March 2011] [14:34:00] <guido_g>	hmmm
| [Wednesday 02 March 2011] [14:34:01] <pieterh>	but not every six months like before
| [Wednesday 02 March 2011] [14:34:09] <pieterh>	s/six/24/
| [Wednesday 02 March 2011] [14:34:12] <cremes>	good idea; i've been "living" out of master for the past 3 months
| [Wednesday 02 March 2011] [14:34:16] <guido_g>	any news on the (e)pgm problem i reported?
| [Wednesday 02 March 2011] [14:35:21] <pieterh>	guido_g: it wasn't this one? https://github.com/zeromq/zeromq2/commit/29e0e7dbadfcd0bab70feee119bd7c5e623b38d4
| [Wednesday 02 March 2011] [14:35:44] <guido_g>	no idea
| [Wednesday 02 March 2011] [14:36:29] <guido_g>	i was just going to compile from zerom2-1
| [Wednesday 02 March 2011] [14:36:37] <guido_g>	is this fix in there?
| [Wednesday 02 March 2011] [14:37:05] <private_meta>	 pieterh,  how's Majordomo coming along?
| [Wednesday 02 March 2011] [14:37:29] <pieterh>	private_meta: quickly, I have client and worker APIs, and heartbeating in the broker
| [Wednesday 02 March 2011] [14:37:59] <pieterh>	it's all on that chapter4-wip branch that you should not be looking at
| [Wednesday 02 March 2011] [14:38:54] <private_meta>	 I've looked through it but thought as this is much WIP, should wait
| [Wednesday 02 March 2011] [14:39:37] <pieterh>	guido_g: that fix is in the zeromq2-1 git master
| [Wednesday 02 March 2011] [14:40:01] <pieterh>	we've been backporting all bug fixes from 2.2 to 2.1
| [Wednesday 02 March 2011] [14:40:06] <guido_g>	ok, just compiled it 
| [Wednesday 02 March 2011] [14:41:25] <guido_g>	ahhh.. great!
| [Wednesday 02 March 2011] [14:41:33] <guido_g>	multicast is back
| [Wednesday 02 March 2011] [14:41:37] <pieterh>	excellent!
| [Wednesday 02 March 2011] [14:42:08] <private_meta>	 hmm... "Developing a port was quite difficult as it took us guile long to port all the bugs correctly"
| [Wednesday 02 March 2011] [14:42:24] <private_meta>	 -guilt + quite
| [Wednesday 02 March 2011] [15:30:00] <guido_g>	pieterh: care to explain wich application would need a 10ms heartbeat?
| [Wednesday 02 March 2011] [15:30:13] <pieterh>	anything far away
| [Wednesday 02 March 2011] [15:30:15] <guido_g>	just reading ch4 of the guide
| [Wednesday 02 March 2011] [15:30:23] <pieterh>	it's strictly dependent on network architecture
| [Wednesday 02 March 2011] [15:30:27] <pieterh>	sorry!
| [Wednesday 02 March 2011] [15:30:39] <pieterh>	:) I read "would need more than 10ms"
| [Wednesday 02 March 2011] [15:30:49] <guido_g>	ok
| [Wednesday 02 March 2011] [15:30:49] <pieterh>	anything really close and extremely low latency
| [Wednesday 02 March 2011] [15:31:01] <guido_g>	but...
| [Wednesday 02 March 2011] [15:31:11] Notice	-NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Wednesday 02 March 2011] [15:31:14] <guido_g>	heratbeat is going over the same socket as the data
| [Wednesday 02 March 2011] [15:31:17] <pieterh>	if you're getting 1M messages a second and suddenly there's silence for 10msec... that's serious
| [Wednesday 02 March 2011] [15:31:28] <guido_g>	ack
| [Wednesday 02 March 2011] [15:31:32] <pieterh>	you want to know after maybe 1msec
| [Wednesday 02 March 2011] [15:31:36] <pieterh>	and then switch to a backup
| [Wednesday 02 March 2011] [15:31:43] <guido_g>	but you don't send heartbeats when sending data
| [Wednesday 02 March 2011] [15:31:50] <pieterh>	precisely
| [Wednesday 02 March 2011] [15:32:13] <guido_g>	so a received data packet counts as "alive"
| [Wednesday 02 March 2011] [15:32:24] <pieterh>	to do this optimally, you create a slope
| [Wednesday 02 March 2011] [15:32:31] <guido_g>	ack
| [Wednesday 02 March 2011] [15:32:41] <pieterh>	so heartbeat immediately as data stops, then double the time until it's infinite
| [Wednesday 02 March 2011] [15:32:52] <guido_g>	done this in prototype of a rmc protocol
| [Wednesday 02 March 2011] [15:32:55] <pieterh>	but that's a lot of work for an example and overkill for 99% of cases
| [Wednesday 02 March 2011] [15:33:09] <guido_g>	sure
| [Wednesday 02 March 2011] [15:33:36] <pieterh>	I'd suspect the minimum sane heartbeating is around 1msec for low latency apps
| [Wednesday 02 March 2011] [15:33:45] <pieterh>	that's a typical SLA
| [Wednesday 02 March 2011] [15:33:58] <guido_g>	ok
| [Wednesday 02 March 2011] [15:34:28] 	 * pieterh is really liking the zmsg.class style
| [Wednesday 02 March 2011] [15:34:37] <pieterh>	C99 just became C2011
| [Wednesday 02 March 2011] [15:34:48] <guido_g>	but still the sender should only send a marker (heartbeat) when there is no data to send
| [Wednesday 02 March 2011] [15:35:22] <guido_g>	should go into spec7, somnehow
| [Wednesday 02 March 2011] [15:35:28] <guido_g>	*somehow
| [Wednesday 02 March 2011] [15:35:57] <mikko>	hello
| [Wednesday 02 March 2011] [15:36:35] <guido_g>	hiho
| [Wednesday 02 March 2011] [15:38:41] <pieterh>	guido_g: indeed, thanks
| [Wednesday 02 March 2011] [15:39:03] <guido_g>	its a nice read, btw
| [Wednesday 02 March 2011] [15:39:26] <mikko>	i've been at a customer lately and no irc during the day
| [Wednesday 02 March 2011] [15:39:40] <guido_g>	overall i like the idea of sketching these things in this semi-formal form
| [Wednesday 02 March 2011] [15:40:16] <pieterh>	guido_g: it makes life surprisingly easy
| [Wednesday 02 March 2011] [15:40:27] <pieterh>	sketch the protocol, implement it
| [Wednesday 02 March 2011] [15:41:00] <guido_g>	no, not w/ six bytes for the protocol version ,)
| [Wednesday 02 March 2011] [15:41:29] <pieterh>	what do you mean?
| [Wednesday 02 March 2011] [15:41:45] <guido_g>	"Frame 0: "MDPW01" (six bytes, representing MDP/Worker v0.1)" <- that
| [Wednesday 02 March 2011] [15:42:07] <guido_g>	it's even in the heartbeat
| [Wednesday 02 March 2011] [15:42:27] <pieterh>	yes
| [Wednesday 02 March 2011] [15:42:32] <pieterh>	there's a good reason for that
| [Wednesday 02 March 2011] [15:42:43] <guido_g>	i mean, we're talking about the machine where 1byte messages are use for benchmarks, right?
| [Wednesday 02 March 2011] [15:42:50] <pieterh>	I want to make brokers that can handle any mix of protocols over a single socket
| [Wednesday 02 March 2011] [15:43:01] <pieterh>	request-reply is *not* performance sensitive
| [Wednesday 02 March 2011] [15:43:25] <pieterh>	at least not at the 6M msg/second level
| [Wednesday 02 March 2011] [15:43:36] <guido_g>	depend on the amount of packets send on the segment, right?
| [Wednesday 02 March 2011] [15:43:51] <pieterh>	use cases are key
| [Wednesday 02 March 2011] [15:44:01] <pieterh>	data distribution -> millions / second, microsecond latency
| [Wednesday 02 March 2011] [15:44:15] <pieterh>	task distribution -> thousands / second, millisecond latency
| [Wednesday 02 March 2011] [15:44:21] <guido_g>	sure
| [Wednesday 02 March 2011] [15:44:45] <guido_g>	but still, 6 bytes for a protocol version?
| [Wednesday 02 March 2011] [15:45:17] <pieterh>	didn't hurt HTTP
| [Wednesday 02 March 2011] [15:45:31] <pieterh>	it should be printable, unique, and include a version number
| [Wednesday 02 March 2011] [15:45:39] <pieterh>	'M' is not a protocol name
| [Wednesday 02 March 2011] [15:45:47] <guido_g>	ah
| [Wednesday 02 March 2011] [15:45:59] <pieterh>	seriously, this is not worth optimizing, not even marginally
| [Wednesday 02 March 2011] [15:46:02] <guido_g>	so the command doesn't need to be printable then?
| [Wednesday 02 March 2011] [15:46:09] <pieterh>	the payload is opaque binary
| [Wednesday 02 March 2011] [15:46:19] <pieterh>	the command... good suggestion
| [Wednesday 02 March 2011] [15:46:31] <pieterh>	nope
| [Wednesday 02 March 2011] [15:46:37] <pieterh>	identities aren't either
| [Wednesday 02 March 2011] [15:46:44] <guido_g>	i'd say 2 bytes for proto version would be more then enough
| [Wednesday 02 March 2011] [15:47:03] <guido_g>	how many incarnations could one expect?
| [Wednesday 02 March 2011] [15:47:13] <pieterh>	it is two bytes for proto version...
| [Wednesday 02 March 2011] [15:47:19] <pieterh>	MDPSxx
| [Wednesday 02 March 2011] [15:47:33] <guido_g>	*sigh*
| [Wednesday 02 March 2011] [15:47:47] <pieterh>	proto name = 3 chars, proto subname = 1 char, proto version = 2 chars
| [Wednesday 02 March 2011] [15:47:49] <Guthur>	pieterh, do you have a timeframe on when you hope to finished Ch4?
| [Wednesday 02 March 2011] [15:48:05] <pieterh>	Guthur: depends how long guido_g keeps nagging about these six bytes...
| [Wednesday 02 March 2011] [15:48:11] <Guthur>	hehe
| [Wednesday 02 March 2011] [15:48:14] <pieterh>	:-)
| [Wednesday 02 March 2011] [15:48:26] <guido_g>	pfff...
| [Wednesday 02 March 2011] [15:48:27] <cremes>	guido_g: i mentioned the same thing when i reviewed an earlier version of the rfc
| [Wednesday 02 March 2011] [15:48:28] <guido_g>	,)
| [Wednesday 02 March 2011] [15:48:39] <cremes>	guido_g: i agree though that it isn't worth arguing about
| [Wednesday 02 March 2011] [15:48:48] <guido_g>	sure
| [Wednesday 02 March 2011] [15:49:12] <pieterh>	look...
| [Wednesday 02 March 2011] [15:49:21] <pieterh>	the mdbroker opens a single socket for both clients and workers
| [Wednesday 02 March 2011] [15:49:29] <guido_g>	ack
| [Wednesday 02 March 2011] [15:49:33] <pieterh>	that is much easier for admin than two endpoints
| [Wednesday 02 March 2011] [15:49:41] <guido_g>	agreed
| [Wednesday 02 March 2011] [15:49:42] <pieterh>	i want to write a couple more protocols
| [Wednesday 02 March 2011] [15:49:48] <pieterh>	there'll be one for persistence (to disk)
| [Wednesday 02 March 2011] [15:49:52] <guido_g>	dozens?
| [Wednesday 02 March 2011] [15:49:56] <guido_g>	hunderts?
| [Wednesday 02 March 2011] [15:49:57] <pieterh>	nope, a few
| [Wednesday 02 March 2011] [15:50:02] <pieterh>	but that's just me
| [Wednesday 02 March 2011] [15:50:17] <pieterh>	i assume there will be variations on MDP
| [Wednesday 02 March 2011] [15:50:26] <pieterh>	not versions but variations
| [Wednesday 02 March 2011] [15:50:27] <guido_g>	we do have the message-parts
| [Wednesday 02 March 2011] [15:50:35] <guido_g>	so lets start small
| [Wednesday 02 March 2011] [15:50:37] <pieterh>	say you want to experiment with a new command
| [Wednesday 02 March 2011] [15:50:40] <guido_g>	like ip 
| [Wednesday 02 March 2011] [15:51:03] <pieterh>	you can fork spec:7 and create a new spec:8
| [Wednesday 02 March 2011] [15:51:10] <pieterh>	but you will choose a new name
| [Wednesday 02 March 2011] [15:51:13] <guido_g>	would be more 7.1 :)
| [Wednesday 02 March 2011] [15:51:22] <pieterh>	so yes, there can be dozens or hundreds of protocols
| [Wednesday 02 March 2011] [15:51:33] <pieterh>	nope, not 7.1, read COSS if you care
| [Wednesday 02 March 2011] [15:51:41] <guido_g>	yes, the guttenberg-protocol
| [Wednesday 02 March 2011] [15:51:42] <pieterh>	each spec is independent, has its own editor, is forkable
| [Wednesday 02 March 2011] [15:51:48] <guido_g>	because it's mostly copied
| [Wednesday 02 March 2011] [15:52:18] <pieterh>	why do I get link errors on 0MQ of the style crti.o: No such file or directory
| [Wednesday 02 March 2011] [15:52:23] <pieterh>	(new Ubuntu install)
| [Wednesday 02 March 2011] [15:53:07] <guido_g>	compile and link use different versions?
| [Wednesday 02 March 2011] [15:53:29] <pieterh>	could be
| [Wednesday 02 March 2011] [15:53:45] <guido_g>	or some packages not properly installed
| [Wednesday 02 March 2011] [15:54:05] <pieterh>	I just swapped my notebook HDD for an SSD, copied a bunch of stuff across
| [Wednesday 02 March 2011] [15:54:12] <pieterh>	so probably mix of old/new code
| [Wednesday 02 March 2011] [15:54:20] <pieterh>	np
| [Wednesday 02 March 2011] [15:54:35] <pieterh>	look, if you don't like the 6-byte header, you fork MDP and create your own new spec
| [Wednesday 02 March 2011] [15:54:40] <guido_g>	or you didn't install c++ properly (and/or in the correct version)
| [Wednesday 02 March 2011] [15:54:53] <pieterh>	(that is, if I don't accept your suggestions)
| [Wednesday 02 March 2011] [15:54:59] <guido_g>	no, not for this one change
| [Wednesday 02 March 2011] [15:55:36] <pieterh>	it could be improved by adding a more formal start-up handshake
| [Wednesday 02 March 2011] [15:55:37] <guido_g>	btw, ssd in laptop rocks :)
| [Wednesday 02 March 2011] [15:55:54] <pieterh>	yeah, unbreakable...
| [Wednesday 02 March 2011] [15:55:56] <guido_g>	or smaller headers and the possibility for extensions
| [Wednesday 02 March 2011] [15:56:12] <guido_g>	like the ip header extensions
| [Wednesday 02 March 2011] [15:56:15] <pieterh>	bleh... it's a draft protocol, it has to be _simple_ above all
| [Wednesday 02 March 2011] [15:56:23] <guido_g>	sure
| [Wednesday 02 March 2011] [15:56:31] <pieterh>	it is counter-productive to optimize a draft, pathological even
| [Wednesday 02 March 2011] [15:56:53] <guido_g>	but talking (and sometimes even thinking) about it helps
| [Wednesday 02 March 2011] [15:57:09] <pieterh>	clients and workers would have to 'sign in' and specify a protocol
| [Wednesday 02 March 2011] [15:57:28] <guido_g>	or more then one
| [Wednesday 02 March 2011] [15:57:30] <pieterh>	then every message would first require a lookup to determine, "ah, this peer is using protocol XYZ"
| [Wednesday 02 March 2011] [15:57:45] <pieterh>	and then you could remove the protocol header from every command except the first
| [Wednesday 02 March 2011] [15:57:58] <pieterh>	you'd save 6 bytes on requests of 1K and responses of 20K
| [Wednesday 02 March 2011] [15:58:01] <pieterh>	the world would rejoice
| [Wednesday 02 March 2011] [15:58:06] <guido_g>	if workers stick to one protocol yes
| [Wednesday 02 March 2011] [15:58:17] <pieterh>	and every single implementor would get that handshake wrong at least once
| [Wednesday 02 March 2011] [15:58:45] <guido_g>	this is one of those assuptions i generally don't like
| [Wednesday 02 March 2011] [15:59:02] <pieterh>	so spec:7 makes as few assumptions as it can
| [Wednesday 02 March 2011] [15:59:08] <guido_g>	they lead to a "cover foreign asses" mentality
| [Wednesday 02 March 2011] [15:59:41] <pieterh>	i'm not sure we have a good pattern for a connected dialog, yet
| [Wednesday 02 March 2011] [15:59:57] <pieterh>	when we do, this will become much easier
| [Wednesday 02 March 2011] [16:02:25] <guido_g>	i think spec:7 is a nice starting point
| [Wednesday 02 March 2011] [16:02:42] <guido_g>	i'll try to implemnt it w/ pyzmq
| [Wednesday 02 March 2011] [16:03:28] <pieterh>	guido_g: if you take the chapter4-wip branch, there are already working client & worker APIs in mdcliapi and mdwrkapi
| [Wednesday 02 March 2011] [16:03:50] <pieterh>	they expose simple classes to applications
| [Wednesday 02 March 2011] [16:04:04] 	 * pieterh has to go rename them to .class as well... lol
| [Wednesday 02 March 2011] [16:04:14] <guido_g>	uhhh
| [Wednesday 02 March 2011] [16:04:32] <mikko>	pieterh: so you are coming on 16th?
| [Wednesday 02 March 2011] [16:04:33] <guido_g>	pyzmq makes this even more simple
| [Wednesday 02 March 2011] [16:04:39] <pieterh>	mikko: yes
| [Wednesday 02 March 2011] [16:04:45] <pieterh>	guido_g: how so?
| [Wednesday 02 March 2011] [16:04:59] <pieterh>	mikko: I'll be there earlier
| [Wednesday 02 March 2011] [16:05:45] <guido_g>	it has a eventloop built in, including timers etc.  http://zeromq.github.com/pyzmq/eventloop.html
| [Wednesday 02 March 2011] [16:06:22] <mikko>	pieterh: how much earlier?
| [Wednesday 02 March 2011] [16:06:32] <mikko>	pieterh: i work very close to oxford circus
| [Wednesday 02 March 2011] [16:06:48] <pieterh>	mikko: I can be there (in London) at lunchtime
| [Wednesday 02 March 2011] [16:07:02] <pieterh>	might meet some other people for lunch, or before
| [Wednesday 02 March 2011] [16:07:04] <mikko>	pieterh: are you having any meetings during the day?
| [Wednesday 02 March 2011] [16:07:10] <pieterh>	you want to catch up?
| [Wednesday 02 March 2011] [16:07:21] <pieterh>	happy to come and evangelize 0MQ
| [Wednesday 02 March 2011] [16:07:54] <pieterh>	guido_g: the complete worker API, in C, is 200 lines of code
| [Wednesday 02 March 2011] [16:07:56] <mikko>	maybe, not sure about my schedule yet
| [Wednesday 02 March 2011] [16:08:38] <guido_g>	pieterh: http://zeromq.github.com/pyzmq/api/generated/zmq.eventloop.zmqstream.html  <- less then 50 lines w/ this
| [Wednesday 02 March 2011] [16:08:41] <pieterh>	guido_g: of which maybe 30 lines is the central poll loop & timers
| [Wednesday 02 March 2011] [16:10:07] <pieterh>	guido_g: yes, I'm sure it can be even less than 200 lines, maybe 180 or 174, but that's not fair to readers who are learning 0MQ core, rather than language-specific frameworks
| [Wednesday 02 March 2011] [16:10:14] <mikko>	pieterh: but it would be nice to catch up
| [Wednesday 02 March 2011] [16:10:33] <pieterh>	mikko: I'll keep some time free in the afternoon, no problem
| [Wednesday 02 March 2011] [16:10:35] <mikko>	i can ask if devs at the company are interested in hearing about zeromq
| [Wednesday 02 March 2011] [16:10:39] <mikko>	from horse's mouth
| [Wednesday 02 March 2011] [16:10:55] <pieterh>	:-) 
| [Wednesday 02 March 2011] [16:11:03] <mikko>	some of them saw ianbarber last friday
| [Wednesday 02 March 2011] [16:11:13] <guido_g>	pieterh: agreed, but we'll see more bindings with additional functionality i assume
| [Wednesday 02 March 2011] [16:11:31] <pieterh>	guido_g: any useful pattern should be documented in a language neutral form
| [Wednesday 02 March 2011] [16:11:32] <guido_g>	anyway, i'm much more a python than a c programmer nowadays
| [Wednesday 02 March 2011] [16:11:37] <pieterh>	otherwise it's just fragmentation
| [Wednesday 02 March 2011] [16:11:44] <pieterh>	the language is not relevant, barely
| [Wednesday 02 March 2011] [16:11:46] <guido_g>	pieterh: ack, i was going for an implementation
| [Wednesday 02 March 2011] [16:11:51] <guido_g>	the spec:7 is fine
| [Wednesday 02 March 2011] [16:12:01] <pieterh>	guido_g: yeah, but it's a shame to not first translate the guide examples
| [Wednesday 02 March 2011] [16:12:18] <pieterh>	if you Pythonistos can hit 100%, you achieve an ianbarbarism
| [Wednesday 02 March 2011] [16:12:29] <pieterh>	that is, you get a Guide in Python
| [Wednesday 02 March 2011] [16:12:52] <pieterh>	but I guess it's too difficult... :-/ Python has a reputation as harder to use than PHP or C
| [Wednesday 02 March 2011] [16:13:24] <guido_g>	i can't avoid the feeling that some wants to talk me into doing something... but i can't put a finger on it...
| [Wednesday 02 March 2011] [16:13:41] <Guthur>	i really should finish ch3 for clrzmq2
| [Wednesday 02 March 2011] [16:13:52] <pieterh>	no, in fact I formally forbid you from even thinking about it...!
| [Wednesday 02 March 2011] [16:13:57] <Guthur>	I got lazy
| [Wednesday 02 March 2011] [16:14:16] <pieterh>	Guthur: guido_g: race on... C# vs Python! who will be first to get their own Guide???
| [Wednesday 02 March 2011] [16:14:24] <pieterh>	my money is on Perl, to be honest
| [Wednesday 02 March 2011] [16:14:28] <Guthur>	pieterh, you like your reverse physiology
| [Wednesday 02 March 2011] [16:14:33] <Guthur>	hehe
| [Wednesday 02 March 2011] [16:14:37] <mikko>	PHP won ?
| [Wednesday 02 March 2011] [16:14:47] <guido_g>	he has to train it, he has kids :)
| [Wednesday 02 March 2011] [16:14:54] <pieterh>	yup, mikko, Ian Barber won...
| [Wednesday 02 March 2011] [16:15:16] <pieterh>	http://zguide.zeromq.org/php:all
| [Wednesday 02 March 2011] [16:15:19] <Guthur>	my c# examples wouldn't really qualify, I had using blocks to avoid explicit disposal 
| [Wednesday 02 March 2011] [16:15:34] <pieterh>	to be honest, it's pretty cool to see the examples in random other languages
| [Wednesday 02 March 2011] [16:15:47] <Guthur>	and other sugar
| [Wednesday 02 March 2011] [16:16:46] <pieterh>	Guthur: if the sugar makes it easier to write, use it
| [Wednesday 02 March 2011] [16:17:15] <pieterh>	after all, it's about teaching developers in language X how best to use the 0MQ binding/API
| [Wednesday 02 March 2011] [16:17:15] <Guthur>	yeah things like returning and accepting strings, instead of byte arrays
| [Wednesday 02 March 2011] [16:18:00] <Guthur>	even if it can't get its own guide it would be good experience for me with 0MQ
| [Wednesday 02 March 2011] [16:18:16] <Guthur>	the more the better I think, hehe
| [Wednesday 02 March 2011] [16:18:55] <pieterh>	One day, when Google human resources conduct their 10-minute screenings they will ask, "how would you rate your 0MQ knowledge, 0 to 10?"
| [Wednesday 02 March 2011] [16:19:25] <mikko>	haha
| [Wednesday 02 March 2011] [16:19:27] <guido_g>	who cares  ]:->
| [Wednesday 02 March 2011] [16:20:33] <guido_g>	there are already a lot of python examples
| [Wednesday 02 March 2011] [16:20:58] <pieterh>	guido_g: yes, only a few left, your chance for eternal fame is slipping away fast
| [Wednesday 02 March 2011] [16:22:48] <Guthur>	hehe, it's sad but I actually liked seeing my name at the top of the guide
| [Wednesday 02 March 2011] [16:22:58] <Guthur>	my one bit of programming fame
| [Wednesday 02 March 2011] [16:23:27] <pieterh>	To be honest, being named as contributor to a successful open source project is better than a good CV
| [Wednesday 02 March 2011] [16:23:52] <guido_g>	depends on where you want to apply
| [Wednesday 02 March 2011] [16:23:57] <pieterh>	precisely
| [Wednesday 02 March 2011] [16:24:22] <guido_g>	my last gig was at a bank...
| [Wednesday 02 March 2011] [16:24:29] <pieterh>	i mean, any firm that does not google you and check you on github is going to be painful to work for
| [Wednesday 02 March 2011] [16:24:54] <guido_g>	makes approx. 99.99% of all companies :)
| [Wednesday 02 March 2011] [16:25:32] <guido_g>	and the others... well there not that much of them
| [Wednesday 02 March 2011] [16:25:41] <Guthur>	guido_g, Did you find that banks don't dig work on OSS 
| [Wednesday 02 March 2011] [16:25:44] <pieterh>	the thing that eventually caused 0MQ started 6 years ago because someone was once impressed by the C library I wrote
| [Wednesday 02 March 2011] [16:25:53] <pieterh>	and it was a bank
| [Wednesday 02 March 2011] [16:26:25] <guido_g>	sure, there might be exceptions
| [Wednesday 02 March 2011] [16:26:46] <pieterh>	ok, I have a messaging broker to write before the sun rises or the vampires will get me
| [Wednesday 02 March 2011] [16:26:47] <pieterh>	cyal
| [Wednesday 02 March 2011] [16:26:57] <guido_g>	Guthur: dig work on? sorry, don't understand that
| [Wednesday 02 March 2011] [16:27:16] <guido_g>	pieterh: cu
| [Wednesday 02 March 2011] [16:27:28] <pieterh>	guido_g: ciao
| [Wednesday 02 March 2011] [16:28:37] <Guthur>	guido_g, rate approvingly
| [Wednesday 02 March 2011] [16:29:52] <guido_g>	i've been lucky, the bank i worked for used python, this is why i got the job
| [Wednesday 02 March 2011] [16:30:03] <guido_g>	but they didn't know about oss in general
| [Wednesday 02 March 2011] [16:30:39] <guido_g>	and now, neither the bank nor the headhunters did check my (non-existant) oss track record
| [Wednesday 02 March 2011] [16:31:01] <Guthur>	did you mention standout projects in your CV?
| [Wednesday 02 March 2011] [16:31:46] <guido_g>	i mostly worked w/ oss software in the last 12 years, so lots of names in my cv
| [Wednesday 02 March 2011] [16:32:18] <guido_g>	but they don't know even postgresql 
| [Wednesday 02 March 2011] [16:32:35] <guido_g>	totaly closed shop (and minds)
| [Wednesday 02 March 2011] [16:33:49] <Guthur>	yeah that can be quite prevalent in corporate culture
| [Wednesday 02 March 2011] [16:34:27] <guido_g>	http://site.despair.com/images/dpage/consulting03.jpg  <- true :)
| [Wednesday 02 March 2011] [16:40:01] <dijix>	guido_g: sounds like my .NET shop..  I can't even carry on a conversation with most of them - they haven't even heard of things like Python.. and most assuredly, not ZeroMQ..
| [Wednesday 02 March 2011] [16:40:22] <guido_g>	dijix: not even that
| [Wednesday 02 March 2011] [16:41:16] <guido_g>	they run programs, that's it
| [Wednesday 02 March 2011] [16:41:39] <guido_g>	they do have 2 or 3 people w/ some technical know-how
| [Wednesday 02 March 2011] [16:42:21] <guido_g>	but given the fact that of the most important pieces of software there is still written in cobol...
| [Wednesday 02 March 2011] [16:42:36] <eyecue>	*yawn*
| [Wednesday 02 March 2011] [16:42:37] <eyecue>	morning
| [Wednesday 02 March 2011] [16:42:39] <guido_g>	my python gig there was ok
| [Wednesday 02 March 2011] [16:43:09] <guido_g>	howdy
| [Wednesday 02 March 2011] [16:43:16] <eyecue>	:)
| [Wednesday 02 March 2011] [16:43:43] <eyecue>	0mq kinda blew me away last night, i got home at 6:30 after work, and before i knew it had been reading for a good 5 hours
| [Wednesday 02 March 2011] [16:44:16] <guido_g>	i'd treat that as a good start
| [Wednesday 02 March 2011] [16:44:28] <eyecue>	yeh :)
| [Wednesday 02 March 2011] [16:54:40] <cremes>	anyone know why i would get errno=2 and error_string "No such file or directory" when trying to connect using inproc?
| [Wednesday 02 March 2011] [16:57:40] <sustrik>	strange
| [Wednesday 02 March 2011] [16:57:47] <sustrik>	do you have SWAP set?
| [Wednesday 02 March 2011] [16:59:53] <cremes>	no
| [Wednesday 02 March 2011] [17:00:13] <cremes>	will it report that error if i bind/connect two sockets within the same context?
| [Wednesday 02 March 2011] [17:00:34] <cremes>	btw, syntax is: "inproc://some_name" right?
| [Wednesday 02 March 2011] [17:02:03] <sustrik>	right
| [Wednesday 02 March 2011] [17:02:16] <sustrik>	the errno looks to be bogus
| [Wednesday 02 March 2011] [17:02:20] <sustrik>	is it reproducible?
| [Wednesday 02 March 2011] [17:02:41] <cremes>	it might be a problem with my binding... investigating <sigh>
| [Wednesday 02 March 2011] [17:03:36] <sustrik>	cremes: win32?
| [Wednesday 02 March 2011] [17:04:00] <cremes>	no, linux
| [Wednesday 02 March 2011] [17:04:06] <sustrik>	hm
| [Wednesday 02 March 2011] [17:04:14] <sustrik>	no idea then
| [Wednesday 02 March 2011] [17:06:01] <cremes>	now i'm getting:  errno [111], error_string [Connection refused]
| [Wednesday 02 March 2011] [17:18:36] <Guthur>	cremes, which binding is that out of interest
| [Wednesday 02 March 2011] [17:19:13] <cremes>	ruby
| [Wednesday 02 March 2011] [17:19:38] <cremes>	looks like it isn't a binding bug... 0mq throws that error if you try to zmq_connect() an inproc before yu zmq_bind() it
| [Wednesday 02 March 2011] [17:20:57] <guido_g>	ahhh
| [Wednesday 02 March 2011] [17:26:27] <mikko>	cremes: thats a known limitation
| [Wednesday 02 March 2011] [17:27:03] <cremes>	mikko: yeah, but i thought it failed silently 
| [Wednesday 02 March 2011] [17:27:19] <cremes>	it now returns -1.... which is new to 2.1.1 i think
| [Wednesday 02 March 2011] [17:29:25] <guido_g>	effect of an assert that got removed?
| [Wednesday 02 March 2011] [17:37:40] <guido_g>	oh late already, night all!
| [Wednesday 02 March 2011] [17:42:25] <pieterh>	cremes: afaik it always returned a -1
| [Wednesday 02 March 2011] [18:20:25] <JoderCoder>	Hi everyone, I am trying to write some IPC code that can pass data between 2 processes on a single machine. Am I at right place? :)
| [Wednesday 02 March 2011] [18:24:44] <Guthur>	JoderCoder, You can certainly use ZeroMQ to do IPC
| [Wednesday 02 March 2011] [18:24:55] <Guthur>	what platform?
| [Wednesday 02 March 2011] [18:28:16] <JoderCoder>	Guthur, Linux initially, then Windows..
| [Wednesday 02 March 2011] [18:29:19] <JoderCoder>	http://lists.zeromq.org/pipermail/zeromq-dev/2011-March/009637.html
| [Wednesday 02 March 2011] [18:29:25] <Guthur>	you can use IPC transport on Linux but on Windows you would need to use TCP
| [Wednesday 02 March 2011] [18:29:33] <JoderCoder>	this is the mail I sent to the forum
| [Wednesday 02 March 2011] [18:29:45] <Guthur>	IPC via named pipes on windows is not yet available
| [Wednesday 02 March 2011] [18:29:58] <JoderCoder>	yes, I came across with that note on the docs somewhere
| [Wednesday 02 March 2011] [18:30:09] <JoderCoder>	Linux is my priority anyways..
| [Wednesday 02 March 2011] [18:30:59] <JoderCoder>	is there any sample code available somewhere that I could re-use?
| [Wednesday 02 March 2011] [18:31:09] <Guthur>	the guide is a code place to start
| [Wednesday 02 March 2011] [18:31:10] <pieterh>	JoderCoder: have you read the Guide?
| [Wednesday 02 March 2011] [18:31:30] <Guthur>	code/good
| [Wednesday 02 March 2011] [18:31:46] <Guthur>	hehe, too much coding in the brain
| [Wednesday 02 March 2011] [18:32:29] <JoderCoder>	pieterh, I did read it, to some extend. Firstly, I am not sure what pattern to use.
| [Wednesday 02 March 2011] [18:32:49] <pieterh>	JoderCoder: read it again, until it makes sense
| [Wednesday 02 March 2011] [18:32:50] <JoderCoder>	I was recommended to use Router-to-Router
| [Wednesday 02 March 2011] [18:33:02] <pieterh>	this would be your first 0MQ program?
| [Wednesday 02 March 2011] [18:33:12] <JoderCoder>	yes
| [Wednesday 02 March 2011] [18:33:20] <pieterh>	so please start at Ch1 not Ch3
| [Wednesday 02 March 2011] [18:33:27] <pieterh>	do take the time to learn this properly
| [Wednesday 02 March 2011] [18:33:39] <pieterh>	otherwise you're going to get lost
| [Wednesday 02 March 2011] [18:33:52] <pieterh>	walk, then run
| [Wednesday 02 March 2011] [18:33:57] <JoderCoder>	:-)
| [Wednesday 02 March 2011] [18:36:03] <JoderCoder>	well, I guess I am not the first one, but under some pressure due to the tight schedule.. but you're right.. I will read it tomorrow.
| [Wednesday 02 March 2011] [18:36:29] <pieterh>	if you want to save time, hire someone who already knows the technology well
| [Wednesday 02 March 2011] [18:36:51] <JoderCoder>	:-)
| [Wednesday 02 March 2011] [18:36:56] <pieterh>	but jumping into deep water before you can swim will really not save you time
| [Wednesday 02 March 2011] [18:37:18] <pieterh>	it's about 2-3 days to learn the basics and feel them 'click' in your mind
| [Wednesday 02 March 2011] [18:37:33] <pieterh>	you will save that easily on the first app you make properly
| [Wednesday 02 March 2011] [18:37:43] <Guthur>	JoderCoder, what language are you going to use, out of interest
| [Wednesday 02 March 2011] [18:37:43] <JoderCoder>	I will replace my current Sys V MQ with ZMQ since we plan to use it as a MQ across network 
| [Wednesday 02 March 2011] [18:37:51] <JoderCoder>	c++
| [Wednesday 02 March 2011] [18:40:21] <JoderCoder>	OK guys, thanks for your time.. I'll get to it tomorrow morning. g'night
| [Wednesday 02 March 2011] [18:40:34] <pieterh>	JoderCoder: cyat
| [Wednesday 02 March 2011] [18:40:54] <Guthur>	night JoderCoder 
| [Wednesday 02 March 2011] [18:40:59] <Guthur>	it's worth reading the guide
| [Wednesday 02 March 2011] [18:41:05] <Guthur>	lots of idea
| [Wednesday 02 March 2011] [18:41:08] <Guthur>	ideas*
| [Wednesday 02 March 2011] [18:41:36] <JoderCoder>	ok danke schon
| [Wednesday 02 March 2011] [18:42:00] <Guthur>	your welcome, i must sleep now too
| [Wednesday 02 March 2011] [18:56:20] <jugg>	yrashk, pieterh:  The only reason the csrl/erlzmq fork exists is because the zeromq/erlzmq bindings are incomplete/broken.  I'd love to use yrashk/ezmq, but my application runs on R13B04 which can't run ezmq (requires R14).  When I have time to move to R14, I'll most likely move to ezmq.
| [Wednesday 02 March 2011] [18:56:30] <jugg>	yrashk, nice perf results.
| [Wednesday 02 March 2011] [18:56:56] <pieterh>	jugg: makes sense, I'd advise you to agree on one name and two version numbers, for your users' sanity
| [Wednesday 02 March 2011] [20:16:46] <cremes>	ha, figured out why my zmq_connect() calls were returning an error
| [Wednesday 02 March 2011] [20:17:03] <cremes>	i was trying to connect two sockets in *different* contexts via inproc
| [Wednesday 02 March 2011] [20:17:11] <cremes>	that doesn't work :)
| [Wednesday 02 March 2011] [21:58:18] <cremes>	i'm digging this inproc transport
| [Wednesday 02 March 2011] [21:58:48] <cremes>	it reduces latency by at least 30%... me likey
| [Wednesday 02 March 2011] [22:07:59] <Steve-o>	just need a Windows version
| [Thursday 03 March 2011] [01:51:31] <Steve-o>	mikko: pingu
| [Thursday 03 March 2011] [01:58:36] <Steve-o>	mikko: ready for bumping zeromq with autoconf of openpgm
| [Thursday 03 March 2011] [02:44:09] <guido_g>	mornig all
| [Thursday 03 March 2011] [02:44:19] <pieterh>	guido_g: g'morning
| [Thursday 03 March 2011] [02:44:27] <guido_g>	hi pieterh 
| [Thursday 03 March 2011] [02:44:51] <guido_g>	just saw that you've been busy 
| [Thursday 03 March 2011] [02:46:35] <guido_g>	will have a look at the mdp broker later
| [Thursday 03 March 2011] [02:48:13] <pieterh>	it does everything but leaks a little memory, and is slow
| [Thursday 03 March 2011] [02:50:05] <guido_g>	"The biggest improvement in performance is the non-working-to-working
| [Thursday 03 March 2011] [02:50:05] <guido_g>	transition."
| [Thursday 03 March 2011] [02:50:05] <guido_g>	   -- John Ousterhout
| [Thursday 03 March 2011] [02:50:42] <pieterh>	what's nice is how it all handles when you stop/restart pieces
| [Thursday 03 March 2011] [02:51:24] <guido_g>	will use it as counterpart for my python mdp implementation
| [Thursday 03 March 2011] [02:52:40] <pieterh>	I'd start by implementing the client and worker APIs
| [Thursday 03 March 2011] [02:52:49] <pieterh>	you can then test against the existing broker
| [Thursday 03 March 2011] [02:53:03] <guido_g>	that was the idea
| [Thursday 03 March 2011] [02:53:12] <guido_g>	i'm on the client atm
| [Thursday 03 March 2011] [02:53:15] <pieterh>	I'm keen to see what you come up with
| [Thursday 03 March 2011] [02:53:27] <pieterh>	mdp will also solve the problem of reliable pipelines
| [Thursday 03 March 2011] [02:54:04] <pieterh>	today I profile to see where the CPU time is going
| [Thursday 03 March 2011] [02:54:13] <pieterh>	I suspect too much envelope stuffing
| [Thursday 03 March 2011] [02:54:24] <guido_g>	my idea is not to write another mdp example, but a lib that can be used for apps
| [Thursday 03 March 2011] [02:54:37] <pieterh>	this is what the two APIs are meant to be
| [Thursday 03 March 2011] [02:55:07] <guido_g>	so i figured that right at least :)
| [Thursday 03 March 2011] [02:55:44] <pieterh>	so an actual client looks like: https://github.com/imatix/zguide/blob/chapter4-wip/examples/C/mdclient.c
| [Thursday 03 March 2011] [02:55:57] <pieterh>	and the worker: https://github.com/imatix/zguide/blob/chapter4-wip/examples/C/mdworker.c
| [Thursday 03 March 2011] [02:56:14] <guido_g>	sweet
| [Thursday 03 March 2011] [02:56:33] <pieterh>	yeah, I think so too... :-)
| [Thursday 03 March 2011] [02:56:50] <guido_g>	no really
| [Thursday 03 March 2011] [02:56:50] <pieterh>	especially since it's like 3-4 days' total work so far from concept to running code
| [Thursday 03 March 2011] [02:57:10] <guido_g>	as one who is not used to c anymore, this is very easy to read
| [Thursday 03 March 2011] [02:57:27] <pieterh>	well, it's not about the language, just the semantics you implement
| [Thursday 03 March 2011] [02:57:51] <pieterh>	the class-based C style we developed at iMatix is pleasant to work with
| [Thursday 03 March 2011] [02:58:30] <pieterh>	i'm curious to see how that maps into Python
| [Thursday 03 March 2011] [02:58:34] <guido_g>	sure, but you need to know a language quite well to come up w/ a good api for something
| [Thursday 03 March 2011] [02:58:43] <pieterh>	indeed
| [Thursday 03 March 2011] [03:13:13] <yrashk>	I forgot this again -- in the latest 0mq can you or can you not use sockets in diff threads?
| [Thursday 03 March 2011] [03:13:19] <yrashk>	this was getting confusing at some point
| [Thursday 03 March 2011] [03:13:37] <guido_g>	you can, but you should do it *very* carefully
| [Thursday 03 March 2011] [03:13:50] <guido_g>	as always when using threads
| [Thursday 03 March 2011] [03:13:56] <yrashk>	what consitutes carefulness in this case?
| [Thursday 03 March 2011] [03:14:25] <sustrik>	no parallel access
| [Thursday 03 March 2011] [03:14:54] <yrashk>	so if mutexed around, we're fine?
| [Thursday 03 March 2011] [03:15:02] <eyecue>	moin
| [Thursday 03 March 2011] [03:15:04] <guido_g>	which means the same usage-pattern as before, but you can migrate a socket from thread to another
| [Thursday 03 March 2011] [03:15:12] <guido_g>	yrashk: no
| [Thursday 03 March 2011] [03:15:30] <guido_g>	yrashk: doesn't make sense
| [Thursday 03 March 2011] [03:15:47] <sustrik>	guido_g: it would work
| [Thursday 03 March 2011] [03:16:00] <sustrik>	basically it means you migrate the socket each time the mutex is locked
| [Thursday 03 March 2011] [03:16:04] <eyecue>	pieterh; nice coincidence, a vendor we're engaging today uses zeromq to arbitrate their mail and messaging infrastructure :)
| [Thursday 03 March 2011] [03:16:13] <sustrik>	yrashk: it's going to be slow
| [Thursday 03 March 2011] [03:16:18] <yrashk>	sustrik: yeah
| [Thursday 03 March 2011] [03:16:26] <yrashk>	mutexes add a penalty
| [Thursday 03 March 2011] [03:16:31] <sustrik>	yes
| [Thursday 03 March 2011] [03:16:32] <guido_g>	sustrik: technically yes, but you should be the one pointing out that it is broken by design and start to protect the innocent developers...
| [Thursday 03 March 2011] [03:16:32] <pieterh>	eyecue: nice
| [Thursday 03 March 2011] [03:16:39] <eyecue>	pieterh; taguchimail :]
| [Thursday 03 March 2011] [03:16:39] <sustrik>	exactly
| [Thursday 03 March 2011] [03:16:43] <eyecue>	in case youre interested
| [Thursday 03 March 2011] [03:16:49] 	 * pieterh goes to check
| [Thursday 03 March 2011] [03:17:01] <sustrik>	that's why we added scary stuff about memory barriers into docs :)
| [Thursday 03 March 2011] [03:17:21] <guido_g>	obviously didn't work
| [Thursday 03 March 2011] [03:17:24] <guido_g>	]:->
| [Thursday 03 March 2011] [03:17:27] <eyecue>	i might need to pick some irc brains soon for how i can apply 0mq to our stuff
| [Thursday 03 March 2011] [03:17:41] <pieterh>	sustrik: problem is that 'memory barriers' isn't very explanatory
| [Thursday 03 March 2011] [03:17:47] <guido_g>	i'm available for hire ,)
| [Thursday 03 March 2011] [03:17:51] <sustrik>	that's the point
| [Thursday 03 March 2011] [03:18:03] <sustrik>	for most people it translates to "don't do this"
| [Thursday 03 March 2011] [03:18:04] <pieterh>	sustrik: doesn't help to be mysterious
| [Thursday 03 March 2011] [03:18:15] <sustrik>	which is exactly the message
| [Thursday 03 March 2011] [03:18:16] <pieterh>	passing sockets from thread to thread is a valid pattern
| [Thursday 03 March 2011] [03:18:20] <pieterh>	bleh
| [Thursday 03 March 2011] [03:18:40] <eyecue>	pieterh; would this sentence make sense: i would get a developer to build a daemon'able queueing application using the 0mq library and add support for some form of persistant storage?
| [Thursday 03 March 2011] [03:19:05] <pieterh>	eyecue: depends whom you're talking to
| [Thursday 03 March 2011] [03:19:05] <sustrik>	pieterh: we can remove the memory barrier text
| [Thursday 03 March 2011] [03:19:14] <pieterh>	sustrik: the explanation needs to be precise
| [Thursday 03 March 2011] [03:19:26] <sustrik>	but actually, you *do* have to do the memory barrier
| [Thursday 03 March 2011] [03:19:30] <pieterh>	you can create a socket in one thread and pass that to another thread
| [Thursday 03 March 2011] [03:19:32] <eyecue>	pieterh; in the strictest sense that 0mq is a programming 'library' which one can use to then build daemons (instead of say a client app)
| [Thursday 03 March 2011] [03:19:44] <pieterh>	you MUST NOT read/write/close the same socket in multiple threads
| [Thursday 03 March 2011] [03:19:49] <sustrik>	the thing is that in 99% of cases it's done for you
| [Thursday 03 March 2011] [03:20:02] <sustrik>	so you don't have to care about it
| [Thursday 03 March 2011] [03:20:02] <eyecue>	pieterh; compared to say your beanstalkd's, which implement and provide a daemon out of the box
| [Thursday 03 March 2011] [03:20:08] <pieterh>	sustrik: not one person has hit a problem related to memory barriers afaics
| [Thursday 03 March 2011] [03:20:17] <yrashk>	the proble is that we DON'T WANT to do this
| [Thursday 03 March 2011] [03:20:25] <pieterh>	eyecue: yes, 0MQ is a toolkit with which you build frameworks
| [Thursday 03 March 2011] [03:20:26] <yrashk>	but we have to deal with the way erlang uses schedulers
| [Thursday 03 March 2011] [03:20:28] <sustrik>	right, so should we remove the text?
| [Thursday 03 March 2011] [03:20:31] <yrashk>	each scheduler is a differnet OS thread
| [Thursday 03 March 2011] [03:20:32] <eyecue>	pieterh; ta :]
| [Thursday 03 March 2011] [03:20:50] <yrashk>	and we can't tell Erlang to use one specific scheduler only
| [Thursday 03 March 2011] [03:20:54] <pieterh>	eyecue: look at zero.mq/md for an example, that's 3-4 days from concept to running code
| [Thursday 03 March 2011] [03:21:03] <pieterh>	with full APIs etc, and in C
| [Thursday 03 March 2011] [03:21:05] <eyecue>	roger that
| [Thursday 03 March 2011] [03:21:23] <pieterh>	that's less time than it takes to *learn* a conventional messaging API
| [Thursday 03 March 2011] [03:21:47] <eyecue>	pieterh; i read the guide last night, and the most intriguing part was the self-healing slash self adapting node network concept
| [Thursday 03 March 2011] [03:21:49] <pieterh>	sustrik: any text in the docs has to reference people's real questions and needs
| [Thursday 03 March 2011] [03:22:05] <eyecue>	pieterh; yeh, i got one of our django guys to take a look at 0mq today
| [Thursday 03 March 2011] [03:22:14] <pieterh>	sustrik: if you like I'll review that man page and propose changes
| [Thursday 03 March 2011] [03:22:57] <eyecue>	pieterh; i have a particular problem to solve where i dont know what the load of the input system will be ahead of time, nor do i want to care necessarily about the message/payload size (email bodies * mailing list members)
| [Thursday 03 March 2011] [03:23:19] <sustrik>	sure, give it a try
| [Thursday 03 March 2011] [03:23:42] <eyecue>	pieterh; i want to avoid serially queueing campaigns, and i dont really care about fair queueing, so im toying with the concept of an abstract fifo queue per campaign. the issue that i have is the idea that any campaign can 'start' or be scheduled at any time
| [Thursday 03 March 2011] [03:23:47] <pieterh>	eyecue: my advice would be to ask here for someone to spend a short time training & helping your team use 0MQ
| [Thursday 03 March 2011] [03:23:54] <sustrik>	reference should be complete though, so the memory barrier issue should be at least mentioned
| [Thursday 03 March 2011] [03:23:58] <eyecue>	pieterh; we're in .au, know anyone here? :)
| [Thursday 03 March 2011] [03:23:59] <sustrik>	maybe in a note?
| [Thursday 03 March 2011] [03:24:07] <eyecue>	pieterh; id be more than happy to entertain that idea
| [Thursday 03 March 2011] [03:24:53] <eyecue>	*reads mdp*
| [Thursday 03 March 2011] [03:25:08] <pieterh>	sustrik: do we know anyone in .au? 
| [Thursday 03 March 2011] [03:25:20] <sustrik>	let me see
| [Thursday 03 March 2011] [03:25:54] <eyecue>	do you have have an active/developed advocacy network/framework/contact list going?
| [Thursday 03 March 2011] [03:26:00] <sustrik>	i have kind of vague feeling that we do, but not sure
| [Thursday 03 March 2011] [03:26:24] <eyecue>	pieterh; well, apart from taguchimail ;) i may go and pick his brain a bit (since we're already paying him)
| [Thursday 03 March 2011] [03:26:54] <eyecue>	haha very cute -> The Majordomo pattern has no relation to the open source mailing list software with the same name.
| [Thursday 03 March 2011] [03:27:14] <pieterh>	eyecue: someone pointed out the risk of confusion
| [Thursday 03 March 2011] [03:27:21] <eyecue>	that was me last night :]
| [Thursday 03 March 2011] [03:27:24] <eyecue>	too much beer? :]
| [Thursday 03 March 2011] [03:27:24] <pieterh>	ah!
| [Thursday 03 March 2011] [03:27:33] <pieterh>	hey, it's all one big blur...
| [Thursday 03 March 2011] [03:27:41] <eyecue>	amen, and so it should be
| [Thursday 03 March 2011] [03:28:18] <eyecue>	actually mdp may well solve for our problem domain
| [Thursday 03 March 2011] [03:28:33] <eyecue>	each worker can say how many active campaigns are available to dequeue
| [Thursday 03 March 2011] [03:28:48] <eyecue>	it could assign itself one of the 'service names'
| [Thursday 03 March 2011] [03:28:50] <pieterh>	eyecue: yes, mdp seems to cover a lot of problems
| [Thursday 03 March 2011] [03:28:52] <eyecue>	ensuring a 1:1
| [Thursday 03 March 2011] [03:29:01] <sejo>	if I would want to persist all the messages (untill they are processed) what backend would you suggest (need a fast backing)
| [Thursday 03 March 2011] [03:29:24] <eyecue>	pieterh; i could then interleave/loadbalance the MTA injection form that point
| [Thursday 03 March 2011] [03:29:24] <pieterh>	sejo: it's not that simple but you might look at Tokyo Cabinet or similar
| [Thursday 03 March 2011] [03:29:46] <sejo>	pieterh: tokio cabinet, mongodb, couchdb etc?
| [Thursday 03 March 2011] [03:29:57] <eyecue>	hmm, could even spawn new workers based on workload that mdp knows about
| [Thursday 03 March 2011] [03:30:09] <eyecue>	id say threadpool, but i only mean in concept.
| [Thursday 03 March 2011] [03:30:42] <eyecue>	this may be a kicker though -> Workers are idempotent, i.e. it is safe to execute the same request more than once.
| [Thursday 03 March 2011] [03:30:55] <pieterh>	eyecue: that's a matter of shared database
| [Thursday 03 March 2011] [03:30:59] <eyecue>	we need to ensure non-duplicate delivery of mail/messages
| [Thursday 03 March 2011] [03:31:02] <pieterh>	sure
| [Thursday 03 March 2011] [03:31:07] <eyecue>	im not sure how it applies, but yeh
| [Thursday 03 March 2011] [03:31:12] <guido_g>	sejo: redis for speed only, if you have the memory
| [Thursday 03 March 2011] [03:31:42] <sejo>	guido_g: needs to be persistable and distributed :p
| [Thursday 03 March 2011] [03:31:52] <sejo>	(not that I'm asking a lot :p)
| [Thursday 03 March 2011] [03:32:00] <guido_g>	sure, go read
| [Thursday 03 March 2011] [03:32:05] <pieterh>	sejo: what're the performance requirements?
| [Thursday 03 March 2011] [03:32:27] <guido_g>	sejo: mongodb is quite fast too
| [Thursday 03 March 2011] [03:32:30] <pieterh>	eyecue: if you're up for sponsoring work on MDP and/or broker implementations, drop me a line
| [Thursday 03 March 2011] [03:32:36] <sejo>	pieterh: 100-500 reqs a second
| [Thursday 03 March 2011] [03:32:43] <sejo>	might even go up
| [Thursday 03 March 2011] [03:32:56] <pieterh>	sejo: can you wait a week or two? I'm working on a rust-based reliability pattern
| [Thursday 03 March 2011] [03:33:00] <pieterh>	fire and forget
| [Thursday 03 March 2011] [03:33:08] <eyecue>	pieterh; i was just about to ask you about 'pausing' queues, or something semantically similar. i note that some of your socket types block or drop, depending on which is chosen, so that may be a way
| [Thursday 03 March 2011] [03:33:08] <pieterh>	client sends to rust-based broker
| [Thursday 03 March 2011] [03:33:20] <pieterh>	broker then sends to workers
| [Thursday 03 March 2011] [03:33:48] <pieterh>	whole thing is brute-force ack'd 
| [Thursday 03 March 2011] [03:33:52] <sejo>	cool, looks what I need, but sorry no time for wait (startup here and my money isn't unlimited)
| [Thursday 03 March 2011] [03:34:24] <pieterh>	sejo: where do you want your persistence, in client, or in center?
| [Thursday 03 March 2011] [03:34:46] <sejo>	on the broker
| [Thursday 03 March 2011] [03:34:52] <pieterh>	ugh
| [Thursday 03 March 2011] [03:34:56] <pieterh>	that's the worst choice
| [Thursday 03 March 2011] [03:34:59] <sejo>	worker should just execute and send results
| [Thursday 03 March 2011] [03:35:12] <pieterh>	so the problem here is that when you want the broker to hold the state
| [Thursday 03 March 2011] [03:35:35] <sejo>	well not much states just a group of key-value's
| [Thursday 03 March 2011] [03:35:50] <eyecue>	im out, thanks for the help pieter
| [Thursday 03 March 2011] [03:35:50] <pieterh>	you need extra work to speak to that state reliably
| [Thursday 03 March 2011] [03:35:54] <pieterh>	eyecue: ciao
| [Thursday 03 March 2011] [03:36:07] <pieterh>	sejo: if you place the persistence in the client API, for example
| [Thursday 03 March 2011] [03:36:13] <pieterh>	you can use dumb brokers
| [Thursday 03 March 2011] [03:37:26] <sejo>	ok, basicly i need a group of brokers (that share data) which is pulled by workers, the same workers will push new tasks generated from the result to the broker. State is kept in worker, the minute it reaches the broker, only the messagedata is state
| [Thursday 03 March 2011] [03:37:54] <pieterh>	sure
| [Thursday 03 March 2011] [03:38:05] <sejo>	btw redis is master-slave
| [Thursday 03 March 2011] [03:39:37] <pieterh>	sustrik: random question about style
| [Thursday 03 March 2011] [03:39:38] <sejo>	couchdb is master:master
| [Thursday 03 March 2011] [03:39:45] <pieterh>	the man pages are written in the form of specifications
| [Thursday 03 March 2011] [03:39:51] <pieterh>	(which is excellent IMO)
| [Thursday 03 March 2011] [03:40:27] <pieterh>	to make this more contractual, we could use http://tools.ietf.org/html/rfc2119
| [Thursday 03 March 2011] [03:41:00] <pieterh>	e.g. "Applications MAY create a socket in one thread with _zmq_socket()_ and then pass it to a _newly created_ thread as part of thread initialization, for example via a structure passed as an argument to _pthread_create()_. Applications MUST NOT do stupid stuff."
| [Thursday 03 March 2011] [03:44:59] <sejo>	nice did you guys use couchdb already? 
| [Thursday 03 March 2011] [03:45:07] <sejo>	looks pretty good
| [Thursday 03 March 2011] [03:45:11] 	 * sejo plays with it
| [Thursday 03 March 2011] [03:47:11] 	 * sejo just fell in love
| [Thursday 03 March 2011] [03:54:24] <pieterh>	sustrik: ok, patch to zmq_socket sent
| [Thursday 03 March 2011] [03:54:30] <pieterh>	that should help IMO
| [Thursday 03 March 2011] [03:56:54] <djc>	sejo: couchdb is awesome, we use it a lot at work
| [Thursday 03 March 2011] [03:57:10] <sejo>	djc: Yeah going to use it also
| [Thursday 03 March 2011] [03:57:25] <sejo>	already started playing with it :p
| [Thursday 03 March 2011] [03:57:27] <sejo>	=80
| [Thursday 03 March 2011] [03:58:04] <sustrik>	pieterh: does that help in any way?
| [Thursday 03 March 2011] [03:58:13] <sustrik>	it doesn't answer yrashk's question
| [Thursday 03 March 2011] [03:58:13] <pieterh>	does what help?
| [Thursday 03 March 2011] [03:58:17] <sustrik>	the patch
| [Thursday 03 March 2011] [03:58:31] <pieterh>	what's yrashk's question? sorry, I missed something
| [Thursday 03 March 2011] [03:58:43] <sustrik>	the one that started the disussion
| [Thursday 03 March 2011] [03:58:56] <sustrik>	whether sockets can be used from 2 threads
| [Thursday 03 March 2011] [03:59:04] <pieterh>	" can you or can you not use sockets in diff threads?"
| [Thursday 03 March 2011] [03:59:15] <pieterh>	I think the patch makes this very clear
| [Thursday 03 March 2011] [03:59:16] <sustrik>	then the argument was that speaking about memory barriers is not clear
| [Thursday 03 March 2011] [03:59:18] <pieterh>	sure
| [Thursday 03 March 2011] [03:59:25] <pieterh>	the man page started by talking about contexts
| [Thursday 03 March 2011] [03:59:38] <pieterh>	now it says "sockets are not thread safe. period".
| [Thursday 03 March 2011] [03:59:41] <sustrik>	and that haven't changed 
| [Thursday 03 March 2011] [04:00:04] <sustrik>	?
| [Thursday 03 March 2011] [04:00:05] <sustrik>	+0MQ 'sockets' are _not_ thread safe. Applications MAY create a socket in one
| [Thursday 03 March 2011] [04:00:05] <sustrik>	+thread with _zmq_socket()_ and then pass it to a _newly created_ thread as
| [Thursday 03 March 2011] [04:00:05] <sustrik>	+part of thread initialization, for example via a structure passed as an
| [Thursday 03 March 2011] [04:00:09] <sustrik>	+argument to _pthread_create()_. Applications MUST NOT otherwise use a socket
| [Thursday 03 March 2011] [04:00:10] <sustrik>	+from multiple threads except after migrating a socket from one thread to
| [Thursday 03 March 2011] [04:00:13] <sustrik>	+another with a "full fence" memory barrier.
| [Thursday 03 March 2011] [04:00:18] <pieterh>	the first sentence is the most important
| [Thursday 03 March 2011] [04:00:30] <sustrik>	yep, that's ok
| [Thursday 03 March 2011] [04:00:35] <pieterh>	the second sentence provides the ONE valid use case
| [Thursday 03 March 2011] [04:00:41] <pieterh>	the third sentence explains it for those who care
| [Thursday 03 March 2011] [04:00:51] <pieterh>	and fourth, some bla blah about contexts
| [Thursday 03 March 2011] [04:00:55] <sustrik>	why singling out one valid use case?
| [Thursday 03 March 2011] [04:01:01] <pieterh>	it's the only one I know of
| [Thursday 03 March 2011] [04:01:07] <pieterh>	for normal apps
| [Thursday 03 March 2011] [04:01:07] <sustrik>	that's more of a guide stuff
| [Thursday 03 March 2011] [04:01:22] <pieterh>	that was already in the man page... I just trimmed it a little
| [Thursday 03 March 2011] [04:01:39] <pieterh>	plus it really does need to be there
| [Thursday 03 March 2011] [04:01:56] <guido_g>	ha! client just passed first send unittest
| [Thursday 03 March 2011] [04:01:58] <sustrik>	you mean the memory barrier stuff?
| [Thursday 03 March 2011] [04:02:00] <sustrik>	yes
| [Thursday 03 March 2011] [04:02:15] <sustrik>	the one use case should be moved to guide imo
| [Thursday 03 March 2011] [04:02:20] <pieterh>	sustrik: please, no
| [Thursday 03 March 2011] [04:02:30] <pieterh>	don't make life harder for users than it has to be
| [Thursday 03 March 2011] [04:02:50] <pieterh>	i agree that this is explanatory and not a specification
| [Thursday 03 March 2011] [04:02:59] <pieterh>	but this is so important for MT apps
| [Thursday 03 March 2011] [04:03:11] <pieterh>	you can't afford to hide it somewhere in a 1000-page book
| [Thursday 03 March 2011] [04:03:19] <sustrik>	i mean there are many use cases, so singling one of them out gives wrong impression
| [Thursday 03 March 2011] [04:03:24] <sustrik>	what about making it an example?
| [Thursday 03 March 2011] [04:03:25] <pieterh>	there are not many use cases!
| [Thursday 03 March 2011] [04:03:28] <pieterh>	sorry, 
| [Thursday 03 March 2011] [04:03:33] <pieterh>	that's just not accurate
| [Thursday 03 March 2011] [04:03:57] <pieterh>	i've hit precisely one, in 40-50 examples that cover every angle
| [Thursday 03 March 2011] [04:04:06] <pieterh>	you may imagine use cases, that's not the same
| [Thursday 03 March 2011] [04:04:27] <sustrik>	garbage collecting the socket is pretty common
| [Thursday 03 March 2011] [04:04:30] <pieterh>	if you fix the inproc connect/bind issue, this use case disapepars
| [Thursday 03 March 2011] [04:04:33] <pieterh>	*disappears
| [Thursday 03 March 2011] [04:04:47] <pieterh>	that would be ideal IMO
| [Thursday 03 March 2011] [04:05:05] <pieterh>	only 5 people, globally, will ever write a socket garbage collector
| [Thursday 03 March 2011] [04:05:17] <pieterh>	maybe 10, ever
| [Thursday 03 March 2011] [04:05:24] <sustrik>	wait a sec, you are saying that this use case is *necessary*?
| [Thursday 03 March 2011] [04:05:27] <sustrik>	how so?
| [Thursday 03 March 2011] [04:05:28] <pieterh>	yes
| [Thursday 03 March 2011] [04:05:34] <sustrik>	you can pass context to the other thread
| [Thursday 03 March 2011] [04:05:39] <pieterh>	because there's no other way to create a working inproc socket pair
| [Thursday 03 March 2011] [04:05:40] <sustrik>	and create the socket there
| [Thursday 03 March 2011] [04:05:41] <sustrik>	no?
| [Thursday 03 March 2011] [04:05:44] <pieterh>	due to the bind/connect issue
| [Thursday 03 March 2011] [04:05:53] <pieterh>	sustrik: have you read the Guide?
| [Thursday 03 March 2011] [04:05:57] <sustrik>	yes
| [Thursday 03 March 2011] [04:06:03] <pieterh>	read it again until you understand 0MQ
| [Thursday 03 March 2011] [04:06:06] <pieterh>	:-)
| [Thursday 03 March 2011] [04:06:09] <pieterh>	heh
| [Thursday 03 March 2011] [04:06:15] <sustrik>	what's wrong with this:
| [Thursday 03 March 2011] [04:06:26] <sustrik>	c = context()
| [Thursday 03 March 2011] [04:06:35] <sustrik>	s = socket (c);
| [Thursday 03 March 2011] [04:06:44] <sustrik>	s.bind (...);
| [Thursday 03 March 2011] [04:06:57] <sustrik>	pthread_create (c);
| [Thursday 03 March 2011] [04:07:02] <sustrik>	and in the worker thread:
| [Thursday 03 March 2011] [04:07:06] <sustrik>	s = socket(c);
| [Thursday 03 March 2011] [04:07:09] <sustrik>	s.connect (...)
| [Thursday 03 March 2011] [04:07:11] <pieterh>	the example in the Guide has 3 stages
| [Thursday 03 March 2011] [04:07:51] <sustrik>	same thing, no?
| [Thursday 03 March 2011] [04:08:10] <pieterh>	let me double check
| [Thursday 03 March 2011] [04:08:21] <pieterh>	if there is a valid pattern, this use case disappears
| [Thursday 03 March 2011] [04:09:23] <pieterh>	ok, you're right afaics
| [Thursday 03 March 2011] [04:09:33] <pieterh>	bind before creating child threads
| [Thursday 03 March 2011] [04:09:59] <pieterh>	I need to change some stuff in the guide
| [Thursday 03 March 2011] [04:10:25] <pieterh>	we can indeed remove that example from the man page... hang on a sec then...
| [Thursday 03 March 2011] [04:12:38] <pieterh>	sustrik: patch sent, this is much cleaner
| [Thursday 03 March 2011] [04:12:51] <sustrik>	ok, thanks
| [Thursday 03 March 2011] [04:12:57] 	 * pieterh enjoys learning new stuff about 0MQ
| [Thursday 03 March 2011] [04:13:48] <sustrik>	pieterh: you've sent the old patch i think
| [Thursday 03 March 2011] [04:14:04] <sustrik>	looks the same
| [Thursday 03 March 2011] [04:14:40] <pieterh>	git did something... hang on
| [Thursday 03 March 2011] [04:15:39] <pieterh>	weird, git produces the wrong patch
| [Thursday 03 March 2011] [04:16:38] <sustrik>	never mind, i can do it myself
| [Thursday 03 March 2011] [04:16:46] <sustrik>	it's just reversing two paragraphs
| [Thursday 03 March 2011] [04:16:49] <pieterh>	sigh, just use this paragraph:
| [Thursday 03 March 2011] [04:16:51] <sustrik>	and adding a period
| [Thursday 03 March 2011] [04:16:53] <sustrik>	right?
| [Thursday 03 March 2011] [04:16:53] <pieterh>	0MQ 'sockets' are _not_ thread safe. Applications MUST NOT use a socket
| [Thursday 03 March 2011] [04:16:53] <pieterh>	from multiple threads except after migrating a socket from one thread to 
| [Thursday 03 March 2011] [04:16:53] <pieterh>	another with a "full fence" memory barrier.
| [Thursday 03 March 2011] [04:16:59] <pieterh>	and move the context stuff below
| [Thursday 03 March 2011] [04:17:10] <pieterh>	i forgot a 'git add'
| [Thursday 03 March 2011] [04:17:27] <pieterh>	too many little bitty steps
| [Thursday 03 March 2011] [04:18:03] <pieterh>	BTW "full fence" is the proper jargon afaics
| [Thursday 03 March 2011] [04:18:33] <sustrik>	possibly
| [Thursday 03 March 2011] [04:18:51] <sustrik>	btw, we've changed the wording a bit
| [Thursday 03 March 2011] [04:19:00] <sustrik>	but haven't addressed the original issue
| [Thursday 03 March 2011] [04:19:10] <sustrik>	that speaking about 'fences' is mysterious
| [Thursday 03 March 2011] [04:19:15] <sustrik>	rather than helpful
| [Thursday 03 March 2011] [04:19:21] <pieterh>	the question was 'are sockets thread safe'?
| [Thursday 03 March 2011] [04:19:30] <pieterh>	and the answer is 'no'... how is that not answering it?
| [Thursday 03 March 2011] [04:19:50] <sustrik>	the docs said so even before
| [Thursday 03 March 2011] [04:19:57] <pieterh>	they hid that in a lot of other text
| [Thursday 03 March 2011] [04:20:03] <pieterh>	obviously people didn't see it clearly
| [Thursday 03 March 2011] [04:20:48] <sustrik>	ok
| [Thursday 03 March 2011] [04:20:51] <sustrik>	the period helps
| [Thursday 03 March 2011] [04:21:22] <pieterh>	shrug, I'm not sure what you're asking, yrashk's question was clear, and it seems clear the man page had way too much wrapping around the essential statement, "don't do it, but if you must, use full fence memory barriers"
| [Thursday 03 March 2011] [04:23:45] <sustrik>	well, the only real change seems to be the period; what i'm asking is: should it say something like "you can use socket from multiple threads given you synchronise the access"
| [Thursday 03 March 2011] [04:24:11] <pieterh>	people will start using mutexes all over the place
| [Thursday 03 March 2011] [04:24:14] <sustrik>	it's antipattern in most cases, but technically, the statement is sound
| [Thursday 03 March 2011] [04:24:19] <sustrik>	exactly
| [Thursday 03 March 2011] [04:24:55] <sustrik>	that was the original discussion, whether it's ok to scare people using terms like "memory barrier"
| [Thursday 03 March 2011] [04:25:07] <sustrik>	or rather be technically precise
| [Thursday 03 March 2011] [04:25:12] <pieterh>	i don't think fear is a valid tool
| [Thursday 03 March 2011] [04:25:17] <pieterh>	this is a contract
| [Thursday 03 March 2011] [04:25:28] <pieterh>	it should simply state what is allowed, and what is not
| [Thursday 03 March 2011] [04:25:59] <sustrik>	ok, then it should be "you can use socket from multiple threads given you synchronise the access"
| [Thursday 03 March 2011] [04:26:22] <sustrik>	that's more comprehensible than memory barrier stuff
| [Thursday 03 March 2011] [04:26:23] <pieterh>	every contract aims to force the signer to behave in some way
| [Thursday 03 March 2011] [04:26:39] <pieterh>	look, we don't want people to share sockets between threads, period
| [Thursday 03 March 2011] [04:26:45] <pieterh>	it's the cause of repeated failures
| [Thursday 03 March 2011] [04:27:04] <sustrik>	ok, good
| [Thursday 03 March 2011] [04:27:04] <pieterh>	we see one or two bizarre 0MQ crash reports a week due to this
| [Thursday 03 March 2011] [04:27:18] 	 * sustrik has no strong opinion on this matter
| [Thursday 03 March 2011] [04:28:23] 	 * pieterh wants to steer people away from misusing the tool
| [Thursday 03 March 2011] [04:34:53] <pieterh>	I'm ripping out all explanation of socket migration from the guide, we'll use the pattern you explained, bind before starting child thread
| [Thursday 03 March 2011] [04:49:33] <sejo>	if you have a zmq.PULL and recv() something, is it possible to know what worker sent that?
| [Thursday 03 March 2011] [04:49:59] <pieterh>	sejo: you have to add the information yourself to the message
| [Thursday 03 March 2011] [04:50:14] <pieterh>	otherwise, use a ROUTER (XREP) socket instead
| [Thursday 03 March 2011] [04:50:16] <sejo>	pieterh: ok good! thanks!
| [Thursday 03 March 2011] [04:50:30] <sejo>	I think it'll be better to put it in the message
| [Thursday 03 March 2011] [04:52:49] <pieterh>	sustrik: so, I've removed all examples of socket migration from the guide
| [Thursday 03 March 2011] [04:53:09] <pieterh>	your pattern is actually much clearer and simpler than passing sockets around
| [Thursday 03 March 2011] [05:03:47] <sustrik>	ok, good
| [Thursday 03 March 2011] [05:03:56] <sustrik>	i'll update the reference accordingly
| [Thursday 03 March 2011] [05:19:54] 	 * guido_g is going offline, getting new internet! :)
| [Thursday 03 March 2011] [05:58:08] <guido_g>	re with new internet :)
| [Thursday 03 March 2011] [06:03:26] <pieterh>	sustrik: is there any recommended way to trap Ctrl-C in a 0MQ program (C++ or C)?
| [Thursday 03 March 2011] [06:04:22] <sustrik>	standard C way
| [Thursday 03 March 2011] [06:04:27] <sustrik>	no specifics
| [Thursday 03 March 2011] [06:04:40] <pieterh>	ok, I'll give it a shot...
| [Thursday 03 March 2011] [06:16:58] <CIA-21>	zeromq2: 03Martin Sustrik 07master * r97add1e 10/ (doc/zmq_init.txt doc/zmq_socket.txt): 
| [Thursday 03 March 2011] [06:16:58] <CIA-21>	zeromq2: Documentation wrt thread-safety cleaned up.
| [Thursday 03 March 2011] [06:16:58] <CIA-21>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/dLdfr0
| [Thursday 03 March 2011] [06:25:32] <pieterh>	sustrik: cool, signal handling works perfectly to shut down 0MQ...
| [Thursday 03 March 2011] [06:25:39] <pieterh>	I'll document it, it's simple and clean
| [Thursday 03 March 2011] [06:38:28] <sejo>	hmm I created a small zmq.PULL and try to send with telnet a message to it... when debugging it it never gets to recv() 
| [Thursday 03 March 2011] [06:38:51] <AlexB>	Hello. :) I've found an issue with having inproc sockets that are bound but without any connected end-point. With recent versions of ZeroMQ and PyZMQ, closing a context with socket like that hangs. Here's a short test-case: https://gist.github.com/852644
| [Thursday 03 March 2011] [06:39:33] <CIA-21>	zeromq2: 03Martin Sustrik 07master * r184bdb8 10/ src/xrep.cpp : 
| [Thursday 03 March 2011] [06:39:33] <CIA-21>	zeromq2: Bug caused by interaction of REQ/REP routing and HWM fixed.
| [Thursday 03 March 2011] [06:39:33] <CIA-21>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/ec5ykN
| [Thursday 03 March 2011] [06:39:39] <guido_g>	sejo: mq does have its own wire-format
| [Thursday 03 March 2011] [06:40:01] <sejo>	guido_g: ach ok, so i'd better write my client then :p
| [Thursday 03 March 2011] [06:40:04] <sejo>	thanks!
| [Thursday 03 March 2011] [06:40:31] <pieterh>	AlexB: this is a known issue
| [Thursday 03 March 2011] [06:40:40] <pieterh>	you need to close the socket before closing the context
| [Thursday 03 March 2011] [06:46:25] <AlexB>	I see. I found it in the docs now.
| [Thursday 03 March 2011] [06:46:53] <AlexB>	Thanks. :)
| [Thursday 03 March 2011] [06:50:37] <pieterh>	sustrik: can 184bdb8 go to 2.0.x?
| [Thursday 03 March 2011] [06:52:11] <sustrik>	yes, if applicable
| [Thursday 03 March 2011] [06:53:32] <pieterh>	:-) do you really trust me to figure that out and make the change?
| [Thursday 03 March 2011] [06:53:45] <pieterh>	the code in xrep.cpp looks similar enough
| [Thursday 03 March 2011] [06:54:07] <pieterh>	but I'm not comfortable backporting patches that I did not write myself
| [Thursday 03 March 2011] [06:54:44] <private_meta>	pieterh: hmm... renaming the .c files to .class somewhat broke online viewing on github :/
| [Thursday 03 March 2011] [06:54:51] <sustrik>	this is why i said maintaining a stable branch needs a dedicated person :)
| [Thursday 03 March 2011] [06:55:18] <pieterh>	sustrik: the process can work fine if we are consistent about patch flow
| [Thursday 03 March 2011] [06:55:29] <pieterh>	i.e. anyone wants a patch to version X they send it
| [Thursday 03 March 2011] [06:55:43] <pieterh>	separate the work of making the release, and making the code
| [Thursday 03 March 2011] [06:55:52] <pieterh>	it should be two separate hats / people
| [Thursday 03 March 2011] [06:56:28] <pieterh>	imagine it's not you...
| [Thursday 03 March 2011] [06:56:51] <pieterh>	who would be best to backport OpenPGM 5 support to 2.0?
| [Thursday 03 March 2011] [06:57:06] <pieterh>	clearly, the person who made that work in 2.1
| [Thursday 03 March 2011] [06:57:30] <pieterh>	private_meta: well, you were the one trying to compile these classes
| [Thursday 03 March 2011] [06:57:32] <guido_g>	private_meta: i bet that's because .class files are compiled .java files 
| [Thursday 03 March 2011] [06:57:41] <pieterh>	lol java
| [Thursday 03 March 2011] [06:58:13] <pieterh>	private_meta: indeed, nothing shows at all... :-/
| [Thursday 03 March 2011] [06:58:33] <guido_g>	so another rename...
| [Thursday 03 March 2011] [06:58:40] <pieterh>	ok, alternate suggestions?
| [Thursday 03 March 2011] [06:58:42] <private_meta>	pieterh: Well, I wouldn't mind just ".h"
| [Thursday 03 March 2011] [06:58:52] <private_meta>	if it were c++, I'd go with ".hpp" with those classes
| [Thursday 03 March 2011] [06:59:11] <pieterh>	i suppose it's consistent with zhelpers.h
| [Thursday 03 March 2011] [06:59:20] <private_meta>	It would be, yes
| [Thursday 03 March 2011] [06:59:42] <pieterh>	sigh, 'clever' software...
| [Thursday 03 March 2011] [07:00:24] <private_meta>	heh
| [Thursday 03 March 2011] [07:00:30] <guido_g>	hehe
| [Thursday 03 March 2011] [07:00:47] <pieterh>	sustrik: if you want that patch to go into 2.0.11 (which it should IMO), please spend 2 minutes at https://github.com/zeromq/zeromq2-0/blob/master/src/xrep.cpp
| [Thursday 03 March 2011] [07:00:59] <pieterh>	it's not going to work if you ask the release maintainer to do backports
| [Thursday 03 March 2011] [07:01:16] <pieterh>	(a) I refuse, it would be insane, and (b) it's impossible if you have a real community of developers
| [Thursday 03 March 2011] [07:01:43] <pieterh>	just like you ask contributors to provide you with patches, I'm asking you
| [Thursday 03 March 2011] [07:01:47] <pieterh>	pretty please
| [Thursday 03 March 2011] [07:07:40] <sustrik>	well, i don't have resources to maintain 3 branches, sorry
| [Thursday 03 March 2011] [07:07:49] <sustrik>	i've warned you
| [Thursday 03 March 2011] [07:12:30] <pieterh>	this is not about maintaining branches, martin
| [Thursday 03 March 2011] [07:12:42] <pieterh>	it's about how we backport changes when we have N contributors and N release versions
| [Thursday 03 March 2011] [07:12:57] <pieterh>	did you understand my example of OpenPGM?
| [Thursday 03 March 2011] [07:13:09] <pieterh>	if you want this to scale, it's the only way I can see
| [Thursday 03 March 2011] [07:13:52] <pieterh>	it's literally two minutes for you, you know the code perfectly, it's a 10-line patch
| [Thursday 03 March 2011] [07:14:10] <pieterh>	and I take care of delivering that to the user community
| [Thursday 03 March 2011] [07:14:26] <pieterh>	but if you comingle these two tasks, there will never be properly maintained stable releases
| [Thursday 03 March 2011] [07:14:28] <pieterh>	period
| [Thursday 03 March 2011] [07:14:54] <pieterh>	do you have another suggestion?
| [Thursday 03 March 2011] [07:15:58] <sustrik>	it's not a 2 minute work
| [Thursday 03 March 2011] [07:16:15] <sustrik>	the code has changed in the meanwhile and works somewhat differentlu
| [Thursday 03 March 2011] [07:16:31] <sustrik>	so it needs, careful patching, testing etc.
| [Thursday 03 March 2011] [07:16:35] <sustrik>	backporting is hard work
| [Thursday 03 March 2011] [07:16:46] <pieterh>	this is perfectly acceptable as an answer
| [Thursday 03 March 2011] [07:16:48] <pieterh>	"no"
| [Thursday 03 March 2011] [07:18:00] <pieterh>	you have two sets of people, those able to make release packages (follow procedures perfectly) and those able to backport patches
| [Thursday 03 March 2011] [07:18:14] <pieterh>	the intersection of those two sets is close to zero, if not literally zero
| [Thursday 03 March 2011] [07:18:20] <pieterh>	that's the major issue here
| [Thursday 03 March 2011] [07:18:33] <Steve-o>	:O
| [Thursday 03 March 2011] [07:18:58] <pieterh>	in the 0MQ world, specifically
| [Thursday 03 March 2011] [07:19:26] <Steve-o>	backporting networking code is hard and tedious work
| [Thursday 03 March 2011] [07:19:32] <jsimmons>	backporting sucks everywhere
| [Thursday 03 March 2011] [07:19:33] <pieterh>	it gets much worse if you consider a 'release' to include multiple projects
| [Thursday 03 March 2011] [07:19:56] <Steve-o>	I did it once for you guys with pgm 5.0, not again :/
| [Thursday 03 March 2011] [07:20:25] <jsimmons>	forwardport dont go backwards :D
| [Thursday 03 March 2011] [07:20:50] <Steve-o>	I only maintain critical fixes to old branches now
| [Thursday 03 March 2011] [07:20:52] <pieterh>	well, the way I see it, someone *wants* fix X on version Y
| [Thursday 03 March 2011] [07:20:59] <pieterh>	customer needs it, perhaps
| [Thursday 03 March 2011] [07:21:05] <pieterh>	so the backport has an economic basis
| [Thursday 03 March 2011] [07:21:20] <Steve-o>	which is what support contracts are about
| [Thursday 03 March 2011] [07:21:24] <pieterh>	yes
| [Thursday 03 March 2011] [07:22:06] <pieterh>	my goal with 2.0 and 2.1 is to accept and manage backports provided by people who *want* them to be in a specific released version
| [Thursday 03 March 2011] [07:22:55] <pieterh>	so, sustrik, my question was really "do you *want* 184bdb8 to go into 2.0.x?"
| [Thursday 03 March 2011] [07:24:08] <Guthur>	surely it a customer wants a new feature you say 'upgrade'
| [Thursday 03 March 2011] [07:27:11] <Steve-o>	Looks like mikko not about today?
| [Thursday 03 March 2011] [07:30:07] <private_meta>	pieterh: A question about zmsg_recv in the zmsg.[h|class] file. You exit the entire application if a message isn't received, is that intentional?
| [Thursday 03 March 2011] [07:30:23] <pieterh>	private_meta: nope, I've changed that, just now
| [Thursday 03 March 2011] [07:30:29] <private_meta>	oh
| [Thursday 03 March 2011] [07:30:31] <pieterh>	it should return NULL
| [Thursday 03 March 2011] [07:30:34] <private_meta>	ok
| [Thursday 03 March 2011] [07:30:54] <private_meta>	I'll think of something equivalent in C++
| [Thursday 03 March 2011] [07:37:20] <sustrik>	pieterh: it would be nice if someone backported it
| [Thursday 03 March 2011] [07:38:03] <pieterh>	sustrik: that's what I felt but someone has to want to, enough to do it, and then convince the maintainer (me) to accept the patch
| [Thursday 03 March 2011] [07:38:11] <pieterh>	it's the same workflow for all projects, right?
| [Thursday 03 March 2011] [07:38:46] <pieterh>	I think there are compromises possible here...
| [Thursday 03 March 2011] [07:38:59] <sustrik>	yes, i think so
| [Thursday 03 March 2011] [07:38:59] <pieterh>	for example, I'm happy to test a release heavily before it goes out
| [Thursday 03 March 2011] [07:39:08] <pieterh>	but that demands proper test cases for every (new) patch
| [Thursday 03 March 2011] [07:39:20] <sustrik>	right, lot of work
| [Thursday 03 March 2011] [07:39:21] <pieterh>	I'm happy to coordinate with mikko to ensure the rc builds
| [Thursday 03 March 2011] [07:39:28] <pieterh>	divide the work, then it's not so much
| [Thursday 03 March 2011] [07:39:49] <pieterh>	the only thing I totally refuse to do is patch code I did not write
| [Thursday 03 March 2011] [07:40:15] <pieterh>	not in stable production releases 
| [Thursday 03 March 2011] [07:40:19] <sustrik>	so no  backports?
| [Thursday 03 March 2011] [07:40:26] <pieterh>	again: divide the work
| [Thursday 03 March 2011] [07:40:37] <sustrik>	then i would suggest dropping the stable repos and using tags on master instead
| [Thursday 03 March 2011] [07:40:37] <pieterh>	author of code can confidently do a backport if there is incentive
| [Thursday 03 March 2011] [07:40:41] <pieterh>	sigh
| [Thursday 03 March 2011] [07:40:54] <sustrik>	ah, yes, sure
| [Thursday 03 March 2011] [07:41:15] <pieterh>	if you insist on mixing the two roles, we're going to get badly stuck
| [Thursday 03 March 2011] [07:41:25] <pieterh>	that's MHO
| [Thursday 03 March 2011] [07:41:31] <pieterh>	s/you/we/
| [Thursday 03 March 2011] [07:42:21] <pieterh>	look, you provide me with a patch to 2.1, it applies cleanly, ok
| [Thursday 03 March 2011] [07:42:30] <pieterh>	I'm still going to test the thing before it's released
| [Thursday 03 March 2011] [07:42:48] <pieterh>	but you can't assume I know the code well enough to do that manualluy
| [Thursday 03 March 2011] [07:42:50] <pieterh>	*manually
| [Thursday 03 March 2011] [07:42:58] <pieterh>	so there must also be proper test cases for new patches
| [Thursday 03 March 2011] [07:43:05] <pieterh>	all of this makes it possible to scale
| [Thursday 03 March 2011] [07:43:30] <pieterh>	if you depend on unique people able to do *everything*, you cannot scale
| [Thursday 03 March 2011] [07:43:45] <pieterh>	s/you/we/
| [Thursday 03 March 2011] [07:43:57] <sustrik>	ok, let me explain my pov
| [Thursday 03 March 2011] [07:44:02] <pieterh>	shoot
| [Thursday 03 March 2011] [07:44:08] <sustrik>	it's a problem of cost
| [Thursday 03 March 2011] [07:44:21] <sustrik>	the process we've had before was the minimal-cost process
| [Thursday 03 March 2011] [07:44:29] <pieterh>	in what sense was is cheap before?
| [Thursday 03 March 2011] [07:44:36] <pieterh>	*it
| [Thursday 03 March 2011] [07:44:41] <sustrik>	no backporting
| [Thursday 03 March 2011] [07:44:51] <sustrik>	there was maint
| [Thursday 03 March 2011] [07:45:01] <pieterh>	well, there should have been backporting of critical fixes
| [Thursday 03 March 2011] [07:45:04] <sustrik>	the patches to maint were upstreamed to master
| [Thursday 03 March 2011] [07:45:09] <sustrik>	but not other way round
| [Thursday 03 March 2011] [07:45:21] <pieterh>	... ok, and how often did that happen?
| [Thursday 03 March 2011] [07:45:28] <pieterh>	last fix to maint was 1 december afaict
| [Thursday 03 March 2011] [07:45:42] <sustrik>	rarely
| [Thursday 03 March 2011] [07:45:42] <sustrik>	that's why the cost was low
| [Thursday 03 March 2011] [07:45:47] <pieterh>	the process was cheap because the process was never used
| [Thursday 03 March 2011] [07:45:49] <sustrik>	so the user was faced with following choice:
| [Thursday 03 March 2011] [07:45:53] <pieterh>	hey, I can do that now as well
| [Thursday 03 March 2011] [07:46:10] <pieterh>	and we can upstream today just as easily
| [Thursday 03 March 2011] [07:46:14] <pieterh>	it's no different
| [Thursday 03 March 2011] [07:46:19] <sustrik>	1. stay with maint, patch the problem there, submit the patch
| [Thursday 03 March 2011] [07:46:25] <sustrik>	2. move to master
| [Thursday 03 March 2011] [07:46:33] <pieterh>	1. stay with 2.0, patch the problem there, submit the patch
| [Thursday 03 March 2011] [07:46:44] <pieterh>	2. move to 2.1, patch the problem there, submit the patch
| [Thursday 03 March 2011] [07:46:49] <pieterh>	3. move to 2.2 master, etc...
| [Thursday 03 March 2011] [07:46:55] <sustrik>	yeah
| [Thursday 03 March 2011] [07:46:56] <pieterh>	it is exactly the same process
| [Thursday 03 March 2011] [07:47:06] <sustrik>	nope, it's unidirectional
| [Thursday 03 March 2011] [07:47:20] <pieterh>	ok, theoretical question
| [Thursday 03 March 2011] [07:47:36] <pieterh>	if someone provides a patch to 2.0, how does that get upstreamed?
| [Thursday 03 March 2011] [07:47:40] <pieterh>	who does that work?
| [Thursday 03 March 2011] [07:47:46] <sustrik>	myself
| [Thursday 03 March 2011] [07:48:01] <sustrik>	i'm maintainer of master
| [Thursday 03 March 2011] [07:48:10] <sustrik>	so i want it to be bug-free
| [Thursday 03 March 2011] [07:48:15] <pieterh>	but you're not following the old releases
| [Thursday 03 March 2011] [07:48:23] <pieterh>	how do you even know there was a change? 
| [Thursday 03 March 2011] [07:48:31] <sustrik>	so if someone finds a bug in maint and submits a patch
| [Thursday 03 March 2011] [07:48:34] <sustrik>	i want it to get to master
| [Thursday 03 March 2011] [07:48:41] <sustrik>	all the patches flew via myself
| [Thursday 03 March 2011] [07:48:48] <pieterh>	ah
| [Thursday 03 March 2011] [07:48:53] <pieterh>	so you also maintain maint?
| [Thursday 03 March 2011] [07:49:08] <pieterh>	and if there are three branches, you maintain all 3?
| [Thursday 03 March 2011] [07:49:41] <pieterh>	afaics we agree on the problem and the solution
| [Thursday 03 March 2011] [07:50:04] <sustrik>	'maintain' in terms of applying patches that i get from other people
| [Thursday 03 March 2011] [07:50:20] <pieterh>	yes, but you don't want to get patches to old versions, do you
| [Thursday 03 March 2011] [07:50:27] <pieterh>	because that makes you maintainer of those
| [Thursday 03 March 2011] [07:50:43] <sustrik>	git apply
| [Thursday 03 March 2011] [07:50:46] <sustrik>	git commit
| [Thursday 03 March 2011] [07:50:50] <sustrik>	git push
| [Thursday 03 March 2011] [07:50:59] <sustrik>	easy
| [Thursday 03 March 2011] [07:51:23] <pieterh>	that assumes the patch is tested and perfect
| [Thursday 03 March 2011] [07:51:28] <pieterh>	ok, let's assume that
| [Thursday 03 March 2011] [07:51:32] <sustrik>	yes, that's up to submitter
| [Thursday 03 March 2011] [07:51:44] <pieterh>	so we do the same today, except you don't have to do that
| [Thursday 03 March 2011] [07:51:54] <pieterh>	the patch must be tested and perfect
| [Thursday 03 March 2011] [07:52:10] <pieterh>	then *anyone* who follows the process can apply/commit/push
| [Thursday 03 March 2011] [07:52:19] <pieterh>	does not require your time
| [Thursday 03 March 2011] [07:52:30] <pieterh>	that then becomes scalable
| [Thursday 03 March 2011] [07:52:56] <sustrik>	it's up to you what process you use for stable branches
| [Thursday 03 March 2011] [07:53:04] <pieterh>	and if the patch is not perfect, you don't want to be fixing up old branches, do you
| [Thursday 03 March 2011] [07:53:14] <pieterh>	retesting 2.0?
| [Thursday 03 March 2011] [07:53:44] <pieterh>	so what we've done with the separate gits, and why we both like it
| [Thursday 03 March 2011] [07:54:01] <pieterh>	is that you have delegated the grunt work of applying *perfect* patches to old versions
| [Thursday 03 March 2011] [07:54:18] <pieterh>	followed by documentation, release packaging, uploading, emails, etc. etc.
| [Thursday 03 March 2011] [07:54:28] <pieterh>	ack?
| [Thursday 03 March 2011] [07:54:43] <pieterh>	second aspect is upstream vs. downstream
| [Thursday 03 March 2011] [07:55:00] <pieterh>	totally orthogonal, this applies equally if we had 1 repo or 3 repos
| [Thursday 03 March 2011] [07:55:02] <sustrik>	yeah, i've delegated hat work to you
| [Thursday 03 March 2011] [07:55:09] <sustrik>	now i don't care about it amymore
| [Thursday 03 March 2011] [07:55:11] <pieterh>	yes, and that is a big improvement
| [Thursday 03 March 2011] [07:55:22] <sustrik>	life is beautiful now :)
| [Thursday 03 March 2011] [07:55:33] <pieterh>	well, that is what I call a saving in time and cost
| [Thursday 03 March 2011] [07:55:51] <pieterh>	so now we look at the orthogonal issue of up/down streaming
| [Thursday 03 March 2011] [07:56:24] <pieterh>	as maintainer, I'll accept *perfect* patches from anyone I trust
| [Thursday 03 March 2011] [07:57:15] <pieterh>	I don't necessarily see 2.0 as downstream from 2.1, they act as two independent projects, almost
| [Thursday 03 March 2011] [07:57:34] <sustrik>	sure, it's up to you
| [Thursday 03 March 2011] [07:58:46] <pieterh>	do you understand why I want to separate the role of coding from release management?
| [Thursday 03 March 2011] [07:58:58] <ianbarber>	in that process there must be an agent who wants a patch from <new version> in <maintenance version> and is willing to do the work to test and submit the perfect patch. But, the people most likely to be trusted by the maintainer are also mostly likely to be working on the later/latest versions, I would guess. 
| [Thursday 03 March 2011] [07:59:28] <ianbarber>	and the people that are on the older versions don't necessarily have the awareness that there are improvements that would benefit them
| [Thursday 03 March 2011] [07:59:30] <pieterh>	ianbarber: to a point, but if we are smarter, it scales better
| [Thursday 03 March 2011] [07:59:40] <pieterh>	for example, better test cases
| [Thursday 03 March 2011] [07:59:46] <ianbarber>	yeah
| [Thursday 03 March 2011] [07:59:47] <sustrik>	it's hard to get someone to do that kind of work
| [Thursday 03 March 2011] [07:59:59] <sustrik>	linux has GregKH
| [Thursday 03 March 2011] [07:59:59] <pieterh>	sustrik: there has to be an economic incentive in every case
| [Thursday 03 March 2011] [07:59:59] <ianbarber>	better test cases would let you apply patches more speculatively
| [Thursday 03 March 2011] [08:00:13] <ianbarber>	if you could know things will shout if you break stuff
| [Thursday 03 March 2011] [08:00:13] <sustrik>	but i would guess people like that are pretty rare
| [Thursday 03 March 2011] [08:00:31] <pieterh>	ianbarber: indeed, I'd rather trust a test case I can understand than someone's patch
| [Thursday 03 March 2011] [08:00:46] <ianbarber>	definitely. 
| [Thursday 03 March 2011] [08:00:47] <pieterh>	sustrik: not only rare, but counter-productive in the end
| [Thursday 03 March 2011] [08:00:54] <pieterh>	if you know too much, you cut corners
| [Thursday 03 March 2011] [08:01:25] 	 * sustrik doesn't follow
| [Thursday 03 March 2011] [08:01:28] <pieterh>	being naive forces better process in many cases
| [Thursday 03 March 2011] [08:01:40] <pieterh>	e.g. I don't know the internals so I insist on better test cases
| [Thursday 03 March 2011] [08:01:42] <sustrik>	having a dedicated maintainer of stable is counter-productive?
| [Thursday 03 March 2011] [08:01:51] <pieterh>	if I know the code really well, I won't use test cases
| [Thursday 03 March 2011] [08:02:02] <pieterh>	and the product and process will suffer (this has already happened a lot)
| [Thursday 03 March 2011] [08:02:30] <pieterh>	sustrik: you say "maintainer" to mean two different things in my view
| [Thursday 03 March 2011] [08:02:50] <pieterh>	I am the dedicated maintainer but not in the sense of "I own the code"
| [Thursday 03 March 2011] [08:02:55] <pieterh>	I own the release and the process
| [Thursday 03 March 2011] [08:03:04] <pieterh>	the code is owned by its authors
| [Thursday 03 March 2011] [08:03:27] <sustrik>	maintainer in terms of "i am willing to spend all my free time to maintain stable"
| [Thursday 03 March 2011] [08:03:34] <pieterh>	define "maintain" please
| [Thursday 03 March 2011] [08:03:34] <sustrik>	that's pretty rare i would say :)
| [Thursday 03 March 2011] [08:04:18] <pieterh>	look, I maintain the Guide, yes?
| [Thursday 03 March 2011] [08:04:46] <pieterh>	that is, I'm responsible for the repository, publishing it, and I write the text
| [Thursday 03 March 2011] [08:04:57] <pieterh>	but every set of translations has their authors
| [Thursday 03 March 2011] [08:05:03] <pieterh>	they own that code
| [Thursday 03 March 2011] [08:05:09] <pieterh>	I don't maintain it
| [Thursday 03 March 2011] [08:05:10] <sustrik>	this discussion is pointless
| [Thursday 03 March 2011] [08:05:21] <sustrik>	the process in stable is entirely up to you
| [Thursday 03 March 2011] [08:05:27] 	 * sustrik shuts up
| [Thursday 03 March 2011] [08:05:45] <pieterh>	if you want that patch to go into 2.0, send it my way, thanks
| [Thursday 03 March 2011] [08:05:52] 	 * pieterh goes back to work
| [Thursday 03 March 2011] [08:05:57] <Guthur>	pieterh: Do you think it would be nice to have some readily available statistic of the guide example coverage for each language binding?
| [Thursday 03 March 2011] [08:06:07] <pieterh>	Gurthur: hang on...
| [Thursday 03 March 2011] [08:06:23] <Guthur>	it's ok i'm not going anywhere soon
| [Thursday 03 March 2011] [08:06:38] <Guthur>	hehe, and I know you guys are having a heated debate
| [Thursday 03 March 2011] [08:06:43] <pieterh>	Translations (48 in total):
| [Thursday 03 March 2011] [08:06:43] <pieterh>	Ada               0,   0%
| [Thursday 03 March 2011] [08:06:43] <pieterh>	Basic             0,   0%
| [Thursday 03 March 2011] [08:06:43] <pieterh>	C                48, 100%
| [Thursday 03 March 2011] [08:06:43] <pieterh>	C++              33,  68%
| [Thursday 03 March 2011] [08:06:43] <pieterh>	C#               26,  54%
| [Thursday 03 March 2011] [08:06:43] <pieterh>	Common Lisp      32,  66%
| [Thursday 03 March 2011] [08:06:44] <pieterh>	Erlang            0,   0%
| [Thursday 03 March 2011] [08:06:44] <pieterh>	Go                2,   4%
| [Thursday 03 March 2011] [08:06:45] <pieterh>	Haskell           0,   0%
| [Thursday 03 March 2011] [08:06:45] <pieterh>	Java             17,  35%
| [Thursday 03 March 2011] [08:06:46] <pieterh>	Lua               0,   0%
| [Thursday 03 March 2011] [08:06:46] <pieterh>	Objective-C       0,   0%
| [Thursday 03 March 2011] [08:06:47] <pieterh>	ooc               0,   0%
| [Thursday 03 March 2011] [08:06:57] <Guthur>	oh whao
| [Thursday 03 March 2011] [08:07:07] <Guthur>	I wasn't expecting there to be any
| [Thursday 03 March 2011] [08:07:54] <Guthur>	Would that be worth making visible, do you think?
| [Thursday 03 March 2011] [08:08:02] <pieterh>	where?
| [Thursday 03 March 2011] [08:08:17] <Guthur>	top of the guide maybe
| [Thursday 03 March 2011] [08:08:23] <pieterh>	hang on...
| [Thursday 03 March 2011] [08:08:42] <pieterh>	I'll post it next time I do an update, if I remember
| [Thursday 03 March 2011] [08:08:47] <Guthur>	cool
| [Thursday 03 March 2011] [08:09:02] <Guthur>	I need to bump that C# number up a bit, hehe
| [Thursday 03 March 2011] [08:21:00] <private_meta>	pieterh: about zmsg, is it made to cater other types but standard character strings?
| [Thursday 03 March 2011] [08:21:13] <pieterh>	nope
| [Thursday 03 March 2011] [08:21:30] <pieterh>	this is not meant to be production code, it's for the examples
| [Thursday 03 March 2011] [08:21:51] <private_meta>	pieterh: in the dump function you differ between non-character blob and string, that's why I ask
| [Thursday 03 March 2011] [08:22:12] <pieterh>	yes, because a socket can get anything
| [Thursday 03 March 2011] [08:22:26] <pieterh>	the class *could* be expanded to allow binary message parts
| [Thursday 03 March 2011] [08:22:38] <pieterh>	but that gets complex quickly, and was not worth it for here
| [Thursday 03 March 2011] [08:22:51] <pieterh>	I'd do it in zfl_msg, which is a more serious implementation
| [Thursday 03 March 2011] [08:23:14] <private_meta>	hmm ok. If it were string only, i would use std::string and the implementation would be a little more clean
| [Thursday 03 March 2011] [08:23:37] <private_meta>	but the example should follow the same functionality as the C version i guess
| [Thursday 03 March 2011] [08:24:49] <pieterh>	you can implement it any way you like, I'd suggest keeping the API similar so people can follow
| [Thursday 03 March 2011] [08:25:21] <pieterh>	the methods that muck with envelopes... wrap/unwrap/push/ etc.
| [Thursday 03 March 2011] [09:38:36] <guido_g>	pieterh: ping?
| [Thursday 03 March 2011] [09:38:44] <pieterh>	hi guido_g
| [Thursday 03 March 2011] [09:38:56] <guido_g>	question about mdp spec
| [Thursday 03 March 2011] [09:39:00] <pieterh>	shoot
| [Thursday 03 March 2011] [09:39:16] <guido_g>	worker send ready message to broker
| [Thursday 03 March 2011] [09:39:25] <guido_g>	there will be no response to that, right?
| [Thursday 03 March 2011] [09:39:35] <pieterh>	there is a response but it's not immediate
| [Thursday 03 March 2011] [09:39:41] <pieterh>	it's the lru pattern
| [Thursday 03 March 2011] [09:40:01] <guido_g>	i'm talking about the ready message
| [Thursday 03 March 2011] [09:40:03] <pieterh>	worker waits, indefinitely, for a client request to arrive, that's the response
| [Thursday 03 March 2011] [09:40:07] <guido_g>	from the worker
| [Thursday 03 March 2011] [09:40:13] <guido_g>	to the broker
| [Thursday 03 March 2011] [09:40:17] <guido_g>	aka handshake
| [Thursday 03 March 2011] [09:40:32] <guido_g>	ok, half of a handshake
| [Thursday 03 March 2011] [09:40:40] <pieterh>	yes, I do understand what you are asking
| [Thursday 03 March 2011] [09:40:47] <pieterh>	it is the lru pattern
| [Thursday 03 March 2011] [09:41:12] <guido_g>	i can't find any answer to the ready message is the spec
| [Thursday 03 March 2011] [09:41:18] <guido_g>	*in the spec
| [Thursday 03 March 2011] [09:41:20] <pieterh>	there is no answer to the ready spec, as such
| [Thursday 03 March 2011] [09:41:26] <pieterh>	the first REQUEST is the answer
| [Thursday 03 March 2011] [09:41:31] <guido_g>	ahh we're getting closer
| [Thursday 03 March 2011] [09:41:38] <pieterh>	a DISCONNECT would be a negative acknowledgement
| [Thursday 03 March 2011] [09:41:53] <pieterh>	sorry, when I say "lru pattern" does that make any sense?
| [Thursday 03 March 2011] [09:42:03] <guido_g>	ok, so till a request arrives the woker does not know if the broker has his service registered correctly, right?
| [Thursday 03 March 2011] [09:42:34] <guido_g>	no it doesn't, because we're on mdp protcol level
| [Thursday 03 March 2011] [09:42:42] <pieterh>	it can safely assume all is OK unless it (a) gets a disconnect or (b) no heartbeat within whatever time
| [Thursday 03 March 2011] [09:43:06] <pieterh>	ok, good point, I'll add this explicitly
| [Thursday 03 March 2011] [09:43:41] <guido_g>	so a received hb from the broker will count as "registration is fine"
| [Thursday 03 March 2011] [09:44:09] <guido_g>	so we need a basic timeout value for the handshake
| [Thursday 03 March 2011] [09:44:26] <guido_g>	or a dedicated "got your ready" reply
| [Thursday 03 March 2011] [09:45:48] <pieterh>	what is the value of a dedicated "OK" command?
| [Thursday 03 March 2011] [09:46:02] <pieterh>	I'm not against it, but it seems unnecessary
| [Thursday 03 March 2011] [09:46:53] <guido_g>	the value would be that the worker from this point on knows that his service is registered and he does receive heartbeats etc.
| [Thursday 03 March 2011] [09:47:32] <pieterh>	what is the value of the worker knowing?
| [Thursday 03 March 2011] [09:47:46] <guido_g>	would allow for small timeouts in the handshake phase
| [Thursday 03 March 2011] [09:47:54] <pieterh>	I'm being serious, remember we're on disconnected TCP
| [Thursday 03 March 2011] [09:48:01] <pieterh>	so the broker can arrive 30 minutes late
| [Thursday 03 March 2011] [09:48:25] <pieterh>	do we want to break that? I'd rather not, it's valuable
| [Thursday 03 March 2011] [09:48:49] <guido_g>	wouldn't break that, just needs a longer timeout
| [Thursday 03 March 2011] [09:48:56] <pieterh>	which is the heartbeat
| [Thursday 03 March 2011] [09:49:05] <guido_g>	right
| [Thursday 03 March 2011] [09:49:11] <pieterh>	so you don't need a positive ack
| [Thursday 03 March 2011] [09:49:24] <guido_g>	but not the "i'm ok" hb, but the one for the connection handshake
| [Thursday 03 March 2011] [09:49:25] <pieterh>	a negative ack gives you just the same semantics
| [Thursday 03 March 2011] [09:50:15] <guido_g>	example: no broker , worker starts, broker comes 30 seconds later
| [Thursday 03 March 2011] [09:50:25] <guido_g>	general hb interval is 1 sec
| [Thursday 03 March 2011] [09:50:35] <guido_g>	client died due to lots of missed hbs
| [Thursday 03 March 2011] [09:50:38] <pieterh>	worker will reconnect over and over and eventually get a HB back
| [Thursday 03 March 2011] [09:50:46] <pieterh>	clients have different timescales
| [Thursday 03 March 2011] [09:51:07] <pieterh>	the client could easily retry like the worker does
| [Thursday 03 March 2011] [09:51:17] <pieterh>	that's not MDP's problem
| [Thursday 03 March 2011] [09:51:27] <guido_g>	shit, s/client/worker/
| [Thursday 03 March 2011] [09:51:42] <pieterh>	worker does not die, if you look at my API
| [Thursday 03 March 2011] [09:51:45] <guido_g>	again
| [Thursday 03 March 2011] [09:52:00] <pieterh>	it keeps reconnecting forever (or until Ctrl-C in my latest code)
| [Thursday 03 March 2011] [09:52:03] <guido_g>	i do look at the spec
| [Thursday 03 March 2011] [09:52:12] <pieterh>	right
| [Thursday 03 March 2011] [09:52:43] <pieterh>	"If the worker detects that the broker has disconnected, it MUST restart a new conversation."
| [Thursday 03 March 2011] [09:52:55] <pieterh>	I'm not sure that's accurate
| [Thursday 03 March 2011] [09:52:58] <guido_g>	ok
| [Thursday 03 March 2011] [09:53:17] <pieterh>	but it allows the broker to kick workers that come in without doing 'ready'
| [Thursday 03 March 2011] [09:53:29] <guido_g>	would mean: after x missed hbs close socket and start from the beginning
| [Thursday 03 March 2011] [09:53:33] <pieterh>	yes
| [Thursday 03 March 2011] [09:53:47] <pieterh>	"Both broker and worker MUST send heartbeats at regular and agreed-upon intervals. A peer can consider the other peer "disconnected" if no heartbeat arrives within some multiple of that interval (usually 3-5)."
| [Thursday 03 March 2011] [09:53:48] <guido_g>	ok, i'll implement it that way
| [Thursday 03 March 2011] [09:53:57] <pieterh>	s/can/SHOULD/
| [Thursday 03 March 2011] [09:54:14] <guido_g>	MUST even
| [Thursday 03 March 2011] [09:54:25] <guido_g>	otherwise the whole thing would be useless
| [Thursday 03 March 2011] [09:54:52] <guido_g>	i'll start the hb timer after sending the ready message then
| [Thursday 03 March 2011] [09:55:06] <pieterh>	ack, MUST it is
| [Thursday 03 March 2011] [09:55:37] <guido_g>	fine
| [Thursday 03 March 2011] [09:55:43] <pieterh>	I need to reboot this box, it's starting to act funny
| [Thursday 03 March 2011] [09:55:51] <pieterh>	cy in a minute or two
| [Thursday 03 March 2011] [09:55:55] <guido_g>	np
| [Thursday 03 March 2011] [09:59:10] <pieter_hintjens>	back
| [Thursday 03 March 2011] [09:59:18] <pieter_hintjens>	what did I miss? :-)
| [Thursday 03 March 2011] [10:00:11] <cremes>	is your new laptop with the ssd giving you fits?
| [Thursday 03 March 2011] [10:01:40] <pieter_hintjens>	cremes: it all works... :-)
| [Thursday 03 March 2011] [10:01:46] <pieter_hintjens>	it's silent and uses a little less power, and it's faster
| [Thursday 03 March 2011] [10:01:54] <guido_g>	pieter_hintjens: why are you talking about missing x hbs? why not simply set the hb interval and barf if one is missed?
| [Thursday 03 March 2011] [10:02:13] <pieter_hintjens>	guido_g: bitter experience
| [Thursday 03 March 2011] [10:02:19] <guido_g>	uh
| [Thursday 03 March 2011] [10:02:43] <guido_g>	could you explain that a bit?
| [Thursday 03 March 2011] [10:02:55] <pieter_hintjens>	it's relatively easy to miss single HBs due to the two peers each sending out at intervals
| [Thursday 03 March 2011] [10:03:15] <pieter_hintjens>	it's also relatively easy to get them delayed when there's congestion
| [Thursday 03 March 2011] [10:03:32] <pieter_hintjens>	we did extensive testing of this for AMQP
| [Thursday 03 March 2011] [10:04:22] <pieter_hintjens>	you basically really do not want false positives
| [Thursday 03 March 2011] [10:04:39] 	 * pieter_hintjens is not being very clear...
| [Thursday 03 March 2011] [10:04:52] <guido_g>	ah its ok
| [Thursday 03 March 2011] [10:04:59] <pieter_hintjens>	try it yourself, set the liveness to 1, run it in real use
| [Thursday 03 March 2011] [10:07:08] <guido_g>	so basically the hb interval is the max. time w/o a message divided by the liveness as you call it
| [Thursday 03 March 2011] [10:07:33] <pieter_hintjens>	yes
| [Thursday 03 March 2011] [10:07:52] <pieter_hintjens>	this is a simpleminded design, I'm sure we can do better over time
| [Thursday 03 March 2011] [10:08:01] <guido_g>	me too :)
| [Thursday 03 March 2011] [10:08:12] <pieter_hintjens>	here's one key aspect...
| [Thursday 03 March 2011] [10:08:18] <pieter_hintjens>	say the clock is 1 second
| [Thursday 03 March 2011] [10:08:30] <pieter_hintjens>	and a HB comes in at 1.001 seconds
| [Thursday 03 March 2011] [10:08:36] <pieter_hintjens>	and your liveness is 1
| [Thursday 03 March 2011] [10:08:45] <pieter_hintjens>	you now disconnect
| [Thursday 03 March 2011] [10:09:00] <pieter_hintjens>	so liveness must be at least 2 to allow for fractional delays in HBs
| [Thursday 03 March 2011] [10:09:03] <guido_g>	you have to draw the border somwwhere
| [Thursday 03 March 2011] [10:09:08] <guido_g>	*somewhere
| [Thursday 03 March 2011] [10:09:22] <pieter_hintjens>	what border?
| [Thursday 03 March 2011] [10:09:36] <guido_g>	connection alive or not
| [Thursday 03 March 2011] [10:09:37] <pieter_hintjens>	yes, how delayed can a HB be...
| [Thursday 03 March 2011] [10:09:49] <pieter_hintjens>	if it's 0.1% delayed, that's not a dead peer
| [Thursday 03 March 2011] [10:09:50] <guido_g>	infinite?
| [Thursday 03 March 2011] [10:10:01] <pieter_hintjens>	if it's infinite, you don't have heartbeating any more
| [Thursday 03 March 2011] [10:10:05] <guido_g>	by a femto second?
| [Thursday 03 March 2011] [10:10:16] <pieter_hintjens>	by a couple of heartbeats, is the best answer we found
| [Thursday 03 March 2011] [10:10:59] <pieter_hintjens>	it's like your own heart can miss one beat, two if you're really shocked, but three means you're dead
| [Thursday 03 March 2011] [10:11:34] <guido_g>	this is more a problem of how to define the border between alive and not
| [Thursday 03 March 2011] [10:12:06] <pieter_hintjens>	yes, and it's a heuristic you can't really make until you have real apps
| [Thursday 03 March 2011] [10:12:13] <guido_g>	you get the same problem when counting hbs
| [Thursday 03 March 2011] [10:12:15] <pieter_hintjens>	that's why it's configurable in my latest api
| [Thursday 03 March 2011] [10:12:43] <guido_g>	ok
| [Thursday 03 March 2011] [10:13:13] <guido_g>	i'll implement that as a simple counter decremented by a periodically called method
| [Thursday 03 March 2011] [10:13:40] <guido_g>	so one can adjust the interval and the count as he/she/it sees fit
| [Thursday 03 March 2011] [10:19:34] <pieter_hintjens>	kiss...
| [Thursday 03 March 2011] [10:19:40] <guido_g>	thanks :)
| [Thursday 03 March 2011] [10:19:43] <pieter_hintjens>	it just has to detect real failure
| [Thursday 03 March 2011] [10:19:50] <pieter_hintjens>	 :-)
| [Thursday 03 March 2011] [10:20:46] <guido_g>	i need to read http://www.tldp.org/HOWTO/html_single/TCP-Keepalive-HOWTO/ 
| [Thursday 03 March 2011] [10:24:58] <pieter_hintjens>	guido_g: there may also be some threads on the websocket heartbeating discussions
| [Thursday 03 March 2011] [10:27:28] <guido_g>	first i'll implement the simple version
| [Thursday 03 March 2011] [10:32:11] <sustrik>	guido_g: tcp's keepalives in just a afterthought
| [Thursday 03 March 2011] [10:32:30] <sustrik>	even explictly discouraged by the spec
| [Thursday 03 March 2011] [10:32:36] <guido_g>	ah ok
| [Thursday 03 March 2011] [10:32:50] <sustrik>	if you want to read about sane heartbeating mechanism, have a look at SCTP heartbeats
| [Thursday 03 March 2011] [10:32:56] <guido_g>	one tab less open in the browser then :)
| [Thursday 03 March 2011] [10:33:48] <guido_g>	ok, will do, but later
| [Thursday 03 March 2011] [10:33:56] <sustrik>	just a tip :)
| [Thursday 03 March 2011] [11:00:18] <ok2>	hi!
| [Thursday 03 March 2011] [11:02:02] <ok2>	question, how can i see with zmq, on send() that the other end is not here anymore?
| [Thursday 03 March 2011] [11:02:23] <ok2>	zmq simply hangs for me, if the other side crashes
| [Thursday 03 March 2011] [11:05:35] <cremes>	ok2: you need to use zmq_poll(), zmq_send() with ZM_NOBLOCK and setup your own timeout logic
| [Thursday 03 March 2011] [11:06:13] <cremes>	there is some work being done to wrap up this pattern (it gets asked about a lot)
| [Thursday 03 March 2011] [11:06:34] <cremes>	but i have no idea what the status is on that work
| [Thursday 03 March 2011] [11:06:59] <cremes>	i've built this myself but using ruby instead of C
| [Thursday 03 March 2011] [11:08:36] <ok2>	it means that i make zmq_poll(x, NOBLOCK) and wait on zmq_poll for POLLOUT?
| [Thursday 03 March 2011] [11:08:46] <ok2>	zmq_send(x, NONBLOCK)
| [Thursday 03 March 2011] [11:09:08] <ok2>	no, on POLLERR ...
| [Thursday 03 March 2011] [11:20:57] <cremes>	ok2: no, that isn't correct
| [Thursday 03 March 2011] [11:21:27] <cremes>	let's say you are using a req/rep socket pair and you want to timeout on the request 
| [Thursday 03 March 2011] [11:21:43] <cremes>	you would do something like:
| [Thursday 03 March 2011] [11:22:25] <cremes>	zmq_send(req_socket, message, ZM_NOBLOCK)
| [Thursday 03 March 2011] [11:22:46] <cremes>	register req_socket with zmq_poll()
| [Thursday 03 March 2011] [11:23:18] <cremes>	and POLLIN (you are looking for a reply, so that will be a recv operation)
| [Thursday 03 March 2011] [11:24:10] <cremes>	when req_socket returns POLLIN, call zmq_recv(req_socket, replymsg, 0)
| [Thursday 03 March 2011] [11:24:15] <cremes>	OR
| [Thursday 03 March 2011] [11:24:33] <cremes>	generate an application error if your timeout has expired before req_socket returns POLLIN
| [Thursday 03 March 2011] [11:24:39] <cremes>	make sense?
| [Thursday 03 March 2011] [11:39:30] <pieter_hintjens>	ok2: it's explained here: http://zguide.zeromq.org/page:all#toc68
| [Thursday 03 March 2011] [11:42:15] <guido_g>	pieter_hintjens: any chance that the frame order in spec:7 is wrong?
| [Thursday 03 March 2011] [11:42:26] <pieter_hintjens>	where exactly?
| [Thursday 03 March 2011] [11:42:48] <guido_g>	given that the broker is a XREQ type, it needs to prepend the target identity
| [Thursday 03 March 2011] [11:42:55] <pieter_hintjens>	guido_g: you know, I'm so pleased to see you implementing this 
| [Thursday 03 March 2011] [11:43:08] <guido_g>	sarcasm?
| [Thursday 03 March 2011] [11:43:16] <pieter_hintjens>	no
| [Thursday 03 March 2011] [11:43:20] <guido_g>	puh
| [Thursday 03 March 2011] [11:43:24] <guido_g>	:)
| [Thursday 03 March 2011] [11:43:42] <pieter_hintjens>	seriously, it's magic to see someone implement a spec the day after it's published
| [Thursday 03 March 2011] [11:43:49] <pieter_hintjens>	what command are you looking at?
| [Thursday 03 March 2011] [11:44:33] <guido_g>	worker <-> broker
| [Thursday 03 March 2011] [11:44:50] <guido_g>	broker is XREQ
| [Thursday 03 March 2011] [11:44:58] <pieter_hintjens>	this is why all the framing says "on the wire"
| [Thursday 03 March 2011] [11:45:10] <guido_g>	pardon?
| [Thursday 03 March 2011] [11:45:29] <pieter_hintjens>	when you send a message to a router socket you always prepend the address
| [Thursday 03 March 2011] [11:45:33] <pieter_hintjens>	but that does not go on the wire
| [Thursday 03 March 2011] [11:45:41] <pieter_hintjens>	it's not sent, thus is not relevant to the protocol
| [Thursday 03 March 2011] [11:45:56] <pieter_hintjens>	however I'll explain this, it's confusing
| [Thursday 03 March 2011] [11:46:01] <guido_g>	it is
| [Thursday 03 March 2011] [11:53:15] <pieter_hintjens>	guido_g: ok, I've added a note, can you see if it's clear?
| [Thursday 03 March 2011] [11:53:25] <pieter_hintjens>	http://rfc.zeromq.org/spec:7#toc11
| [Thursday 03 March 2011] [11:55:11] <guido_g>	GREAT!
| [Thursday 03 March 2011] [12:01:43] <guido_g>	getting close now
| [Thursday 03 March 2011] [12:01:47] <guido_g>	*closer
| [Thursday 03 March 2011] [12:03:43] <ok2>	cremes and pieter_hintjens: thank you very much, i think i got what i need :-)
| [Thursday 03 March 2011] [12:03:52] <pieter_hintjens>	ok2, np
| [Thursday 03 March 2011] [12:05:02] <guido_g>	first success for the worker
| [Thursday 03 March 2011] [12:09:42] <pieter_hintjens>	broker is tricky to get right
| [Thursday 03 March 2011] [12:10:01] <pieter_hintjens>	am still finding undispatched messages in some cases
| [Thursday 03 March 2011] [12:11:31] <guido_g>	so, short break and then testing my worker against your broker
| [Thursday 03 March 2011] [12:12:09] <pieter_hintjens>	I'll need to commit, almost ready
| [Thursday 03 March 2011] [12:12:28] <guido_g>	ok, no hurry
| [Thursday 03 March 2011] [12:24:00] <Altxp>	Hello there.
| [Thursday 03 March 2011] [12:36:31] <pieter_hintjens>	guido_g: ok, done
| [Thursday 03 March 2011] [12:36:44] <pieter_hintjens>	the broker is, afaict, complete and robust
| [Thursday 03 March 2011] [12:40:49] <pieter_hintjens>	I've pushed this to the website, and committed all the source code
| [Thursday 03 March 2011] [12:41:11] <djc>	okay, I have some questions with my distro hat on
| [Thursday 03 March 2011] [12:41:30] <djc>	are there options to rely on external openpgm instead of the bundled one?
| [Thursday 03 March 2011] [12:41:56] <djc>	what versions of openpgm are compatible with zeromq-2.1.1?
| [Thursday 03 March 2011] [12:42:22] <djc>	does zeromq actually depend on the xmlParser, or can that be disableD?
| [Thursday 03 March 2011] [12:45:22] <guido_g>	pieter_hintjens: thanks
| [Thursday 03 March 2011] [12:45:56] <guido_g>	after some phineas and ferb i'll check it out
| [Thursday 03 March 2011] [12:49:03] <private_meta>	pieter_hintjens: so it's basically finished?
| [Thursday 03 March 2011] [12:52:32] <guido_g>	pieter_hintjens: simple hb works
| [Thursday 03 March 2011] [12:54:08] <guido_g>	ahh my worker crashes when the broker is restarted
| [Thursday 03 March 2011] [13:08:17] <guido_g>	ha! works now
| [Thursday 03 March 2011] [13:24:53] Notice	-tomaw- [Global Notice] Hi all.  As you probably noticed we're experiencing some connectivity issues currently.  We're investigating options and will continue with any updates via wallops (/mode yournick +w to enable)
| [Thursday 03 March 2011] [13:52:56] <guido_g>	pieter_hintjens: python client and worker are running against your broker
| [Thursday 03 March 2011] [14:21:23] <yrashk>	according to our latest fixes to erlzmq tests, ezmq is still way faster
| [Thursday 03 March 2011] [15:07:28] <pieter_hintjens>	guido_g: I'm back... that's great!
| [Thursday 03 March 2011] [15:07:53] <pieter_hintjens>	private_meta: yes, it's finished for now
| [Thursday 03 March 2011] [15:11:36] <guido_g>	pieter_hintjens: wb
| [Thursday 03 March 2011] [15:11:59] <pieter_hintjens>	guido_g: I added you as contributor to the spec, if that's ok
| [Thursday 03 March 2011] [15:12:00] <guido_g>	small thing, the mdbroker segfaults sometimes :)
| [Thursday 03 March 2011] [15:12:08] <guido_g>	thanks
| [Thursday 03 March 2011] [15:12:14] <pieter_hintjens>	can you get me a backtrace?
| [Thursday 03 March 2011] [15:12:29] <pieter_hintjens>	or reproducible case
| [Thursday 03 March 2011] [15:12:29] <guido_g>	i'll try my best
| [Thursday 03 March 2011] [15:12:41] <travlr>	pieter_hintjens: hey pieter, how would suggest I implement a mail list service for an open source community project i'm ready to start?
| [Thursday 03 March 2011] [15:12:45] <pieter_hintjens>	ulimit -u
| [Thursday 03 March 2011] [15:12:46] <guido_g>	it's related to a worker beeing killed
| [Thursday 03 March 2011] [15:12:52] <pieter_hintjens>	and then you'll get core files
| [Thursday 03 March 2011] [15:13:02] <pieter_hintjens>	yeah, cleaning up dead workers is tricky
| [Thursday 03 March 2011] [15:13:18] <pieter_hintjens>	travlr: hmm... I'd avoid email lists altogether, personally
| [Thursday 03 March 2011] [15:13:23] <guido_g>	are your build scripts compiling w/ debug on?
| [Thursday 03 March 2011] [15:13:32] <pieter_hintjens>	guido_g: should be, now
| [Thursday 03 March 2011] [15:13:39] <pieter_hintjens>	try 'c -C' for sure
| [Thursday 03 March 2011] [15:13:54] <travlr>	pieter_hintjens: what might be your suggestion then.
| [Thursday 03 March 2011] [15:13:59] <pieter_hintjens>	travlr: you might take one of the wikis at http://irongiant.wikidot.com
| [Thursday 03 March 2011] [15:14:11] <pieter_hintjens>	that works well for community projects
| [Thursday 03 March 2011] [15:14:29] <pieter_hintjens>	forum + email alerts + wiki combinations
| [Thursday 03 March 2011] [15:14:30] <travlr>	is that just using wikidot's forum widgets?
| [Thursday 03 March 2011] [15:14:48] <pieter_hintjens>	no, pages + comments in those ones
| [Thursday 03 March 2011] [15:15:18] <travlr>	ah, ok so its irongiant specific... let me look at the link, thank you.
| [Thursday 03 March 2011] [15:15:36] <pieter_hintjens>	email lists are ok but a bit useless for dynamic work
| [Thursday 03 March 2011] [15:15:42] <pieter_hintjens>	thus we all hang out here on irc...
| [Thursday 03 March 2011] [15:16:03] <travlr>	yes, i was hoping for forum, email notication integration
| [Thursday 03 March 2011] [15:16:10] <pieter_hintjens>	you got it all there
| [Thursday 03 March 2011] [15:16:17] <pieter_hintjens>	there is an open source project template afair
| [Thursday 03 March 2011] [15:16:24] <travlr>	k
| [Thursday 03 March 2011] [15:16:27] <travlr>	thanks
| [Thursday 03 March 2011] [15:16:33] <pieter_hintjens>	clickety-clone and it's done, very simple
| [Thursday 03 March 2011] [15:16:35] <pieter_hintjens>	np
| [Thursday 03 March 2011] [15:25:27] <guido_g>	pieter_hintjens: https://gist.github.com/853467  is not enough info i guess
| [Thursday 03 March 2011] [15:26:00] <pieter_hintjens>	guido_g: when did you pull the branch from git?
| [Thursday 03 March 2011] [15:26:08] <pieter_hintjens>	this is a bug I fixed afaik
| [Thursday 03 March 2011] [15:26:18] <guido_g>	ok, i'll check
| [Thursday 03 March 2011] [15:26:31] <pieter_hintjens>	also it's not debug, so I think the previous version...
| [Thursday 03 March 2011] [15:26:45] <pieter_hintjens>	I'll have to put a version number in the broker :-)
| [Thursday 03 March 2011] [15:30:28] <guido_g>	it's up-to-date when i do a pull
| [Thursday 03 March 2011] [15:30:53] <pieter_hintjens>	hmm
| [Thursday 03 March 2011] [15:31:06] <pieter_hintjens>	master branch...
| [Thursday 03 March 2011] [15:31:26] <pieter_hintjens>	ok, let me add a version number print...
| [Thursday 03 March 2011] [15:31:36] <guido_g>	https://gist.github.com/853483 <- output of run
| [Thursday 03 March 2011] [15:31:58] <guido_g>	trying to get more info out of gdb
| [Thursday 03 March 2011] [15:33:25] <pieter_hintjens>	can you grab the latest master, rebuild the broker?
| [Thursday 03 March 2011] [15:35:06] <guido_g>	grml the c script ignores the -g
| [Thursday 03 March 2011] [15:35:23] <pieter_hintjens>	how are you building?
| [Thursday 03 March 2011] [15:35:31] <pieter_hintjens>	'./build mdbroker' should work
| [Thursday 03 March 2011] [15:36:00] <guido_g>	the c script does not pass the -g to the compiler
| [Thursday 03 March 2011] [15:36:07] <pieter_hintjens>	nope, it doesn't
| [Thursday 03 March 2011] [15:36:13] <pieter_hintjens>	that's not how it works
| [Thursday 03 March 2011] [15:36:21] <guido_g>	??
| [Thursday 03 March 2011] [15:36:28] <pieter_hintjens>	sigh... it's a long story
| [Thursday 03 March 2011] [15:36:32] <guido_g>	build calls this script
| [Thursday 03 March 2011] [15:36:34] <pieter_hintjens>	can't you just './build all'?
| [Thursday 03 March 2011] [15:36:39] <pieter_hintjens>	ah hang on
| [Thursday 03 March 2011] [15:36:44] <guido_g>	*sigh*
| [Thursday 03 March 2011] [15:36:51] <guido_g>	yes, i can but w/o debug info
| [Thursday 03 March 2011] [15:36:58] <pieter_hintjens>	yes, but it doesn't pass a -g option
| [Thursday 03 March 2011] [15:37:15] <guido_g>	then the header of c should be changed
| [Thursday 03 March 2011] [15:37:21] <guido_g>	there is a -g mentioned
| [Thursday 03 March 2011] [15:37:42] <pieter_hintjens>	yes, that's wrong
| [Thursday 03 March 2011] [15:37:58] <guido_g>	double *sigh*
| [Thursday 03 March 2011] [15:38:07] <pieter_hintjens>	what git commit are you on?
| [Thursday 03 March 2011] [15:38:11] <pieter_hintjens>	git log -1
| [Thursday 03 March 2011] [15:39:39] <guido_g>	new clone and fresh broker (w/o debug info)
| [Thursday 03 March 2011] [15:39:44] <guido_g>	testing...
| [Thursday 03 March 2011] [15:39:56] <pieter_hintjens>	what git commit are you on?
| [Thursday 03 March 2011] [15:40:11] <pieter_hintjens>	the c script is ok, it doesn't pass -g to the compiler as such, it processes it
| [Thursday 03 March 2011] [15:40:17] <pieter_hintjens>	but all this is beside the point
| [Thursday 03 March 2011] [15:40:24] <guido_g>	 git log -1
| [Thursday 03 March 2011] [15:40:24] <guido_g>	commit a8121994b0c25f4d242bbf06074dc6cc389ff336
| [Thursday 03 March 2011] [15:40:42] <pieter_hintjens>	ok
| [Thursday 03 March 2011] [15:40:51] <pieter_hintjens>	take hammer, break glass
| [Thursday 03 March 2011] [15:40:58] <pieter_hintjens>	export BOOM_MODEL=debug; build all
| [Thursday 03 March 2011] [15:41:23] <djc>	pieter_hintjens: if you have a moment later, could you take a peek at my questions from 3h ago?
| [Thursday 03 March 2011] [15:41:46] <pieter_hintjens>	djc: let me look...
| [Thursday 03 March 2011] [15:42:04] <pieter_hintjens>	ok... for openpgm, I don't know
| [Thursday 03 March 2011] [15:42:18] <pieter_hintjens>	for the XML dependency, it's there in some random main programs still being built with 0MQ
| [Thursday 03 March 2011] [15:42:37] <pieter_hintjens>	they resist being killed because they theoretically form part of the 'API' and thus are holy
| [Thursday 03 March 2011] [15:42:49] <djc>	ah yes, that is how it goes
| [Thursday 03 March 2011] [15:42:59] <pieter_hintjens>	guido_g: the build script _should_ be making debug builds
| [Thursday 03 March 2011] [15:43:08] <guido_g>	it does not
| [Thursday 03 March 2011] [15:43:17] <djc>	so for openpgm I should probably stick to .92 and wait for you guys to test something newer?
| [Thursday 03 March 2011] [15:43:26] <pieter_hintjens>	djc: you need to ask steve-o
| [Thursday 03 March 2011] [15:43:33] <djc>	pieter_hintjens: okay, thanks
| [Thursday 03 March 2011] [15:43:45] <djc>	does he come around here, and if so, in what tz?
| [Thursday 03 March 2011] [15:43:50] <pieter_hintjens>	guido_g: ok, can you add 'c -C' to build just before the first if statement?
| [Thursday 03 March 2011] [15:44:08] <pieter_hintjens>	that'll produce a report of the actual C compiler syntax it uses
| [Thursday 03 March 2011] [15:44:17] <guido_g>	w/ debug info https://gist.github.com/853467
| [Thursday 03 March 2011] [15:44:18] 	 * pieter_hintjens is annoyed when small things don't work as they should
| [Thursday 03 March 2011] [15:44:27] <guido_g>	hehe
| [Thursday 03 March 2011] [15:44:41] <guido_g>	i did the export hingie and it seemed to work
| [Thursday 03 March 2011] [15:44:46] <guido_g>	*thingie
| [Thursday 03 March 2011] [15:45:26] <pieter_hintjens>	which the dratted build script is meant to do itself if necessary
| [Thursday 03 March 2011] [15:45:41] <pieter_hintjens>	one line of shell, how complex can it be... :-(
| [Thursday 03 March 2011] [15:46:02] <pieter_hintjens>	ok, looking at that backtrace, thanks
| [Thursday 03 March 2011] [15:46:52] <guido_g>	this happens when the (only) worker exits w/o disconnect (just disapears)
| [Thursday 03 March 2011] [15:47:03] 	 * pieter_hintjens will try to reproduce
| [Thursday 03 March 2011] [15:47:13] <guido_g>	oops
| [Thursday 03 March 2011] [15:47:27] <guido_g>	tested this w/ my worker
| [Thursday 03 March 2011] [15:47:34] <guido_g>	will try the c worker now
| [Thursday 03 March 2011] [15:48:36] <pieter_hintjens>	if your worker makes it crash, send that to me
| [Thursday 03 March 2011] [15:48:41] <pieter_hintjens>	I can't get the crash using the C worker
| [Thursday 03 March 2011] [15:48:50] <guido_g>	i can :)
| [Thursday 03 March 2011] [15:49:19] <guido_g>	you stopped the worker w/ ctrl-c?
| [Thursday 03 March 2011] [15:49:24] <pieter_hintjens>	yes
| [Thursday 03 March 2011] [15:49:28] <guido_g>	tz tz tz
| [Thursday 03 March 2011] [15:49:38] <pieter_hintjens>	kill -9?
| [Thursday 03 March 2011] [15:49:49] <pieter_hintjens>	should not make any difference
| [Thursday 03 March 2011] [15:49:57] <guido_g>	it looks like the woker sends a disconnect on sigint
| [Thursday 03 March 2011] [15:50:09] <pieter_hintjens>	nope, don't think so...
| [Thursday 03 March 2011] [15:50:24] <guido_g>	ok
| [Thursday 03 March 2011] [15:50:59] <pieter_hintjens>	well, valgrind is also real good for this
| [Thursday 03 March 2011] [15:51:09] <pieter_hintjens>	valgrind --tool=memcheck mdbroker
| [Thursday 03 March 2011] [15:51:22] <guido_g>	crash when killing the worker w/ ctrl-c too
| [Thursday 03 March 2011] [15:51:34] <pieter_hintjens>	hmm, can't be a timing issue, it's all one thread
| [Thursday 03 March 2011] [15:51:44] <pieter_hintjens>	are you also running a client?
| [Thursday 03 March 2011] [15:51:45] <guido_g>	bt looks like its the same place
| [Thursday 03 March 2011] [15:52:01] <guido_g>	no, client has been disconnected before
| [Thursday 03 March 2011] [15:52:15] <pieter_hintjens>	but do you start it in the test case?
| [Thursday 03 March 2011] [15:52:37] <guido_g>	i've a one shot client that sends one request
| [Thursday 03 March 2011] [15:52:48] <pieter_hintjens>	this makes a difference
| [Thursday 03 March 2011] [15:52:53] <pieter_hintjens>	yes, I got the crash now
| [Thursday 03 March 2011] [15:53:00] <pieter_hintjens>	need to have a client request
| [Thursday 03 March 2011] [15:53:12] <guido_g>	even a processed one?
| [Thursday 03 March 2011] [15:53:31] <pieter_hintjens>	it all affects the broker state
| [Thursday 03 March 2011] [15:53:49] <guido_g>	obviously
| [Thursday 03 March 2011] [15:54:17] <pieter_hintjens>	ok, I got the error, but will look at it tomorrow
| [Thursday 03 March 2011] [15:54:32] <pieter_hintjens>	i appreciate the feedback enormously, guido_g
| [Thursday 03 March 2011] [15:54:35] <guido_g>	mq is like a time machine, didn't use gdb for 10 years
| [Thursday 03 March 2011] [15:54:42] <pieter_hintjens>	heh
| [Thursday 03 March 2011] [15:57:31] <guido_g>	any idea where to put the python version of mdp?
| [Thursday 03 March 2011] [15:58:07] <guido_g>	i'll make a repo for it
| [Thursday 03 March 2011] [16:05:44] <pieter_hintjens>	guido_g: I'd hope for Python translations that can be used for the Guide
| [Thursday 03 March 2011] [16:06:12] <pieter_hintjens>	these are minimal implementations, we can make a real product & repository after
| [Thursday 03 March 2011] [16:06:14] <guido_g>	sure, but there not translations of the c code, as i said
| [Thursday 03 March 2011] [16:06:46] <guido_g>	this a mdp implementation using the async features of pyzmq
| [Thursday 03 March 2011] [16:07:11] <pieter_hintjens>	that sounds fine
| [Thursday 03 March 2011] [16:07:18] <pieter_hintjens>	the point isn't to write C in Python
| [Thursday 03 March 2011] [16:07:32] <pieter_hintjens>	the point is to show Python programmers how to make the example in question
| [Thursday 03 March 2011] [16:07:38] <pieter_hintjens>	so, client API, worker API, broker
| [Thursday 03 March 2011] [16:07:47] <pieter_hintjens>	using whatever the language offers
| [Thursday 03 March 2011] [16:07:56] <guido_g>	https://gist.github.com/853561  <- the test worker
| [Thursday 03 March 2011] [16:09:04] <pieter_hintjens>	did you read mdwrkapi.c?
| [Thursday 03 March 2011] [16:09:08] <pieter_hintjens>	and mdworker.c
| [Thursday 03 March 2011] [16:09:11] <guido_g>	no
| [Thursday 03 March 2011] [16:09:23] <pieter_hintjens>	probably worth doing
| [Thursday 03 March 2011] [16:09:45] <guido_g>	why?
| [Thursday 03 March 2011] [16:09:51] <pieter_hintjens>	simply to see if we can offer a consistent API
| [Thursday 03 March 2011] [16:10:01] <pieter_hintjens>	worker API in C or Python can look similar
| [Thursday 03 March 2011] [16:10:08] <guido_g>	pieter_hintjens> the point isn't to write C in Python  <- ...
| [Thursday 03 March 2011] [16:10:15] <pieter_hintjens>	the API I made is not C
| [Thursday 03 March 2011] [16:10:19] <pieter_hintjens>	it's implemented in C
| [Thursday 03 March 2011] [16:10:40] <pieter_hintjens>	I'd thought of specifying the API as a rfc
| [Thursday 03 March 2011] [16:10:44] <pieter_hintjens>	both APIs
| [Thursday 03 March 2011] [16:11:04] <pieter_hintjens>	for example, in mdworker.c there is no 0MQ context, it's invisible
| [Thursday 03 March 2011] [16:12:29] <pieter_hintjens>	see https://gist.github.com/853581
| [Thursday 03 March 2011] [16:12:53] <pieter_hintjens>	and yes it includes a .c, please don't complain... :-)
| [Thursday 03 March 2011] [16:15:25] <guido_g>	https://github.com/guidog/pyzmq-mdp <- first go
| [Thursday 03 March 2011] [16:16:11] <guido_g>	see, the api is completely different because of the mechanisms used
| [Thursday 03 March 2011] [16:16:47] <guido_g>	as i said, i want to make use of the async features built into pyzmq
| [Thursday 03 March 2011] [16:17:48] <pieter_hintjens>	for sure
| [Thursday 03 March 2011] [16:18:10] <pieter_hintjens>	though I've no idea what the value is in offering such a complex API to app developers...
| [Thursday 03 March 2011] [16:18:20] <guido_g>	complex?
| [Thursday 03 March 2011] [16:18:51] <pieter_hintjens>	look, my API has three methods
| [Thursday 03 March 2011] [16:18:58] <pieter_hintjens>	create, send/recv, destroy
| [Thursday 03 March 2011] [16:19:05] <pieter_hintjens>	yours exposes the internals of MDP
| [Thursday 03 March 2011] [16:19:10] <pieter_hintjens>	every timeout, every message
| [Thursday 03 March 2011] [16:19:24] <pieter_hintjens>	it's not a wrapper at all, just a deconfobulatorix
| [Thursday 03 March 2011] [16:19:25] <guido_g>	the create is line 31 in the example worker
| [Thursday 03 March 2011] [16:19:35] <pieter_hintjens>	i made that up, btw
| [Thursday 03 March 2011] [16:19:42] <pieter_hintjens>	sorry :-) it's late
| [Thursday 03 March 2011] [16:19:51] <guido_g>	the worker method is the on_request
| [Thursday 03 March 2011] [16:20:04] <guido_g>	and the reply is sent by self.reply
| [Thursday 03 March 2011] [16:20:12] <pieter_hintjens>	i'm not complaining, this is fantastic work
| [Thursday 03 March 2011] [16:20:15] <guido_g>	very complicated, i've to admit
| [Thursday 03 March 2011] [16:20:27] <pieter_hintjens>	please do look at that gist I posted just now
| [Thursday 03 March 2011] [16:20:36] <pieter_hintjens>	that's what the app developer sees
| [Thursday 03 March 2011] [16:20:51] <pieter_hintjens>	when my C code is shorter than your Python code, to do the same work... that's... well...
| [Thursday 03 March 2011] [16:21:02] <pieter_hintjens>	ok
| [Thursday 03 March 2011] [16:21:05] <pieter_hintjens>	projects...
| [Thursday 03 March 2011] [16:21:13] <pieter_hintjens>	MDP is the protocol, not software
| [Thursday 03 March 2011] [16:21:45] <guido_g>	shorter?
| [Thursday 03 March 2011] [16:21:46] <pieter_hintjens>	do you see value in a project with mixed pieces, e.g. brokers / apis in different languages
| [Thursday 03 March 2011] [16:21:54] <pieter_hintjens>	https://gist.github.com/853581
| [Thursday 03 March 2011] [16:21:59] <guido_g>	yes
| [Thursday 03 March 2011] [16:22:03] <pieter_hintjens>	that's the echo worker
| [Thursday 03 March 2011] [16:22:06] <pieter_hintjens>	ok, let'
| [Thursday 03 March 2011] [16:22:10] <pieter_hintjens>	let's invent a name
| [Thursday 03 March 2011] [16:22:18] <guido_g>	i might be shocked, but can still read
| [Thursday 03 March 2011] [16:22:39] <pieter_hintjens>	majordomo already been taken by some random FOSS project apparently
| [Thursday 03 March 2011] [16:23:00] <guido_g>	random... *cough*
| [Thursday 03 March 2011] [16:23:04] 	 * pieter_hintjens searches for random but memorable name...
| [Thursday 03 March 2011] [16:23:18] <pieter_hintjens>	do you prefer memorable or meaningful?
| [Thursday 03 March 2011] [16:23:18] <guido_g>	the interoperability is there
| [Thursday 03 March 2011] [16:23:21] <pieter_hintjens>	yes
| [Thursday 03 March 2011] [16:23:36] <guido_g>	i'm using my worker w/ your broker and and client
| [Thursday 03 March 2011] [16:23:39] <pieter_hintjens>	interop is a funny thing though, it operates at multiple levels
| [Thursday 03 March 2011] [16:23:45] <pieter_hintjens>	e.g. 0mq api is interop
| [Thursday 03 March 2011] [16:24:00] <Guthur>	pieter_hintjens, what's the link to this protocol?
| [Thursday 03 March 2011] [16:24:06] <pieter_hintjens>	zero.mq/md
| [Thursday 03 March 2011] [16:24:18] 	 * pieter_hintjens likes the link shorterner at zero.mq...
| [Thursday 03 March 2011] [16:24:20] <guido_g>	http://rfc.zeromq.org/spec:7
| [Thursday 03 March 2011] [16:24:23] <Guthur>	cheers
| [Thursday 03 March 2011] [16:24:33] <pieter_hintjens>	:-)
| [Thursday 03 March 2011] [16:24:50] <Guthur>	did you find that majordomo is trademarked?
| [Thursday 03 March 2011] [16:25:00] <pieter_hintjens>	nope, it's not afaics
| [Thursday 03 March 2011] [16:25:25] <guido_g>	but still, the name is known for a quite long time
| [Thursday 03 March 2011] [16:25:26] <pieter_hintjens>	but it's a bad idea to mix the pattern - protocol - implementation
| [Thursday 03 March 2011] [16:26:37] <pieter_hintjens>	oh god, a bank email hit the list
| [Thursday 03 March 2011] [16:26:46] <pieter_hintjens>	you can tell them by the 1000-word disclaimers
| [Thursday 03 March 2011] [16:27:02] <pieter_hintjens>	And someone's acidic reply, "It took me a moment to realize your ridiculous disclaimer is not the message itself..."
| [Thursday 03 March 2011] [16:27:04] <pieter_hintjens>	hehe
| [Thursday 03 March 2011] [16:27:15] <guido_g>	hehe
| [Thursday 03 March 2011] [16:29:38] <Guthur>	it then has another link to even more disclaimer talk
| [Thursday 03 March 2011] [16:30:05] <pieter_hintjens>	I think I just sold my soul to BoA by replying to that email
| [Thursday 03 March 2011] [16:31:00] <pieter_hintjens>	ok, guido, let's make a project called Popcorn
| [Thursday 03 March 2011] [16:31:10] <pieter_hintjens>	cause I'm finishing a large bowl I made a while ago
| [Thursday 03 March 2011] [16:31:46] <pieter_hintjens>	there are dozens of FOSS projects called popcorn so there's no chance of confusion
| [Thursday 03 March 2011] [16:31:55] <guido_g>	there was a song called like that... back when music came these black large discs...
| [Thursday 03 March 2011] [16:32:02] <pieter_hintjens>	8" floppies?
| [Thursday 03 March 2011] [16:32:10] 	 * pieter_hintjens vaguely remembers...
| [Thursday 03 March 2011] [16:32:11] <guido_g>	no, harder
| [Thursday 03 March 2011] [16:32:23] <pieter_hintjens>	12" removable winchesters?
| [Thursday 03 March 2011] [16:32:37] <pieter_hintjens>	did they have MP3s in those days? don't think so...
| [Thursday 03 March 2011] [16:32:45] <guido_g>	but drive was open mostly
| [Thursday 03 March 2011] [16:32:47] <pieter_hintjens>	you're making this up as you're going along!
| [Thursday 03 March 2011] [16:33:03] <pieter_hintjens>	so, guido_g, shall I make this as an official zeromq community project?
| [Thursday 03 March 2011] [16:33:20] <guido_g>	let it cook a bit more first
| [Thursday 03 March 2011] [16:33:27] <pieter_hintjens>	embrace the chaos!
| [Thursday 03 March 2011] [16:33:38] <pieter_hintjens>	it burns if you leave it cooking too long
| [Thursday 03 March 2011] [16:34:09] <guido_g>	if we have full interop w/ the c version, then it might be worth to be announced
| [Thursday 03 March 2011] [16:34:29] <guido_g>	for this it needs a broker
| [Thursday 03 March 2011] [16:34:29] <pieter_hintjens>	ah, but the trick with projects is to announce a stunning goal way before you can make it happen
| [Thursday 03 March 2011] [16:34:35] <Guthur>	what is this new project
| [Thursday 03 March 2011] [16:34:45] <pieter_hintjens>	guido_g: see, we have interest already...
| [Thursday 03 March 2011] [16:34:53] <pieter_hintjens>	Guthur: sorry, can't tell you, it's confidential
| [Thursday 03 March 2011] [16:34:55] <guido_g>	*sigh*
| [Thursday 03 March 2011] [16:34:58] <pieter_hintjens>	:-)
| [Thursday 03 March 2011] [16:35:02] <Guthur>	I could try the logs hehe
| [Thursday 03 March 2011] [16:35:09] <Guthur>	they are quite long though
| [Thursday 03 March 2011] [16:35:16] <guido_g>	https://github.com/guidog/pyzmq-mdp
| [Thursday 03 March 2011] [16:35:25] <Guthur>	you guys were chatting for ages, hehe
| [Thursday 03 March 2011] [16:35:48] <pieter_hintjens>	guido_g: cook it a while, anyhow
| [Thursday 03 March 2011] [16:36:17] <pieter_hintjens>	if it was my project, I'd insist on common APIs in all languages
| [Thursday 03 March 2011] [16:36:18] <guido_g>	at the least the broker should be there and working with your worker and client
| [Thursday 03 March 2011] [16:36:24] <pieter_hintjens>	yes
| [Thursday 03 March 2011] [16:36:43] <pieter_hintjens>	defining good, language neutral APIs is quite fun
| [Thursday 03 March 2011] [16:36:52] <pieter_hintjens>	and extraordinarily useful to app developers
| [Thursday 03 March 2011] [16:36:54] <guido_g>	pieter_hintjens: then i'd remove the repo immediately
| [Thursday 03 March 2011] [16:37:32] <pieterh>	i can make event driven APIs in C, that's not the issue
| [Thursday 03 March 2011] [16:37:55] <pieterh>	the issue is just the semantics you show to users, and whether these can be consistent between languages
| [Thursday 03 March 2011] [16:38:15] <pieterh>	I'm pretty adamant they can be consistent
| [Thursday 03 March 2011] [16:38:17] <guido_g>	there is more than language
| [Thursday 03 March 2011] [16:38:39] <pieterh>	guido_g: are you in London by any chance?
| [Thursday 03 March 2011] [16:38:44] <guido_g>	nope
| [Thursday 03 March 2011] [16:38:48] <pieterh>	sigh...
| [Thursday 03 March 2011] [16:39:05] <guido_g>	too expensive just for a beer
| [Thursday 03 March 2011] [16:39:31] <pieterh>	I'd actually take a train somewhere to thrash this out
| [Thursday 03 March 2011] [16:39:57] <guido_g>	wouldn't make it cheaper
| [Thursday 03 March 2011] [16:40:55] <pieterh>	ok, let's cook this a while.
| [Thursday 03 March 2011] [16:41:15] <pieterh>	I need to get onto the rest of Ch4 anyhow
| [Thursday 03 March 2011] [16:41:21] <pieterh>	there is a lot still to do
| [Thursday 03 March 2011] [16:41:55] <pieterh>	I'll fix that broker crash tomorrow when I find an hour, it's a busy day
| [Thursday 03 March 2011] [16:42:06] <guido_g>	fine with me
| [Thursday 03 March 2011] [16:42:57] <pieterh>	ok, gnite !
| [Thursday 03 March 2011] [16:43:02] <guido_g>	good night!
| [Thursday 03 March 2011] [16:55:50] <guido_g>	has been a long day, need some sleep
| [Thursday 03 March 2011] [16:55:57] <guido_g>	cya
| [Thursday 03 March 2011] [17:32:52] <Guthur>	pieterh, umm did the implementation of zhelpers.h not use to be in the guide text
| [Thursday 03 March 2011] [17:33:41] <pieterh>	Guthur: (a) it got very long and (b) the translation model only works for .c files so it was showing C code in the PHP/whatever versions
| [Thursday 03 March 2011] [17:33:59] <Guthur>	ok
| [Thursday 03 March 2011] [17:34:09] <pieterh>	Did you like having it in the guide?
| [Thursday 03 March 2011] [17:34:32] <Guthur>	doesn't matter too much, I just wanted to check the dump implementation
| [Thursday 03 March 2011] [17:35:04] <pieterh>	I think the Guide is moving towards being less focused on C
| [Thursday 03 March 2011] [17:35:16] <Guthur>	true
| [Thursday 03 March 2011] [17:35:36] <pieterh>	Though I think C is the future... but still...
| [Thursday 03 March 2011] [17:35:43] <pieterh>	:-)
| [Thursday 03 March 2011] [17:35:46] <Guthur>	I thought C was the past, hehe
| [Thursday 03 March 2011] [17:35:58] <Guthur>	Lisp is the future, hehe
| [Thursday 03 March 2011] [17:36:06] <pieterh>	Lisp is older than C afair
| [Thursday 03 March 2011] [17:37:10] <Guthur>	that was LISP
| [Thursday 03 March 2011] [17:37:53] <Guthur>	but true, Lisps ancestor is the second oldest high level language
| [Thursday 03 March 2011] [17:38:03] <Guthur>	after Fortran
| [Thursday 03 March 2011] [17:38:19] <Guthur>	First with a Garbage Collector as well
| [Thursday 03 March 2011] [17:38:43] <Guthur>	afaik
| [Thursday 03 March 2011] [17:38:57] 	 * pieterh resists all language discussions
| [Thursday 03 March 2011] [17:39:04] <pieterh>	gawk rules
| [Thursday 03 March 2011] [17:39:29] <Guthur>	Lisp is a very enlightening experience as they say
| [Thursday 03 March 2011] [17:40:25] <Guthur>	Javascript is pretty awesome as well, it's just a pity it always lives in a browser, hehe
| [Thursday 03 March 2011] [17:46:34] <Guthur>	pieterh, have you ever tried Forth? last language mention, I swear
| [Thursday 03 March 2011] [17:47:02] <sp4ke>	hi guys
| [Thursday 03 March 2011] [17:47:06] <pieterh>	Guthur: I used to build Forth machines in 6502 assembler, quite freaky
| [Thursday 03 March 2011] [17:47:29] <pieterh>	hi sp4ke
| [Thursday 03 March 2011] [17:47:44] <Guthur>	pieterh, cool, 6502 was one of my first programming experiences
| [Thursday 03 March 2011] [17:47:54] <pieterh>	The sign of a Real Programmer
| [Thursday 03 March 2011] [17:47:55] <Guthur>	BBC micros
| [Thursday 03 March 2011] [17:48:02] <sp4ke>	want just to post this link for people who want to use zmq with MSVC 2010 i made a tutorial after struggling to make it work
| [Thursday 03 March 2011] [17:48:03] <sp4ke>	http://www.mansysadmin.com/2011/03/using-zeromq-framework-with-visual-studio-2010-tutorial/
| [Thursday 03 March 2011] [17:48:14] <sp4ke>	it could be useful on irc archive 
| [Thursday 03 March 2011] [17:49:00] <pieterh>	sp4ke: ... it's ... 
| [Thursday 03 March 2011] [17:49:04] <pieterh>	it comes down to "VS2010 made some changes to output properties, go to projects properties -> General -> , then change the Output Directory field to"..\..\..\lib\" (the same path as in (Linker -> General -> Output File) property"
| [Thursday 03 March 2011] [17:49:19] <pieterh>	why not add that to http://zero.mq/tips
| [Thursday 03 March 2011] [17:49:54] <sp4ke>	yes indeed but for a new comer to MSVC it is not obvious 
| [Thursday 03 March 2011] [17:50:03] <sp4ke>	ok i will do
| [Thursday 03 March 2011] [17:50:11] <sp4ke>	did not know that link
| [Thursday 03 March 2011] [17:50:39] <pieterh>	lol
| [Thursday 03 March 2011] [17:52:31] <Guthur>	it always works without any bother for me
| [Thursday 03 March 2011] [17:52:38] <Guthur>	I convert and compile
| [Thursday 03 March 2011] [17:53:06] <Guthur>	maybe I'm just lucky, hehe
| [Thursday 03 March 2011] [17:53:35] <pieterh>	yeah, but he made a *screenshot*
| [Thursday 03 March 2011] [18:08:48] <Guthur>	pieterh, the identity.c is setting the identity after connecting
| [Thursday 03 March 2011] [18:09:15] <Guthur>	no sorry
| [Thursday 03 March 2011] [18:09:18] <Guthur>	my bad
| [Thursday 03 March 2011] [18:09:29] <Guthur>	tired eyes
| [Thursday 03 March 2011] [18:09:53] <pieterh>	yeah, it does it twice
| [Thursday 03 March 2011] [18:10:03] <pieterh>	get some sleep, man!
| [Thursday 03 March 2011] [18:10:39] <Guthur>	soon, just want to get this dump working right
| [Thursday 03 March 2011] [18:11:34] <pieterh>	:-) well, I fixed the Last Bug in mdbroker, am now crashing...
| [Thursday 03 March 2011] [20:42:49] <yrashk>	looks like ezmq got much more stable now
| [Thursday 03 March 2011] [20:43:12] <yrashk>	and thanks to evaxsoftware it doesn't have a thread per socket design anymore
| [Thursday 03 March 2011] [20:43:15] <yrashk>	we're multiplexing now :)
| [Thursday 03 March 2011] [21:16:31] <catlee_>	hello
| [Thursday 03 March 2011] [21:16:40] <catlee_>	how does zeromq compare to something like rabbitmq?
| [Thursday 03 March 2011] [22:05:27] <datuanmac>	hi
| [Thursday 03 March 2011] [22:06:42] <datuanmac>	I'm trying integrate zmq to my project in Visual c++ version 6 but it's conflic version winsock2 ?
| [Thursday 03 March 2011] [22:16:04] <datuanmac>	What solution for visual 6 ?
| [Thursday 03 March 2011] [23:43:30] <ctrlc-root>	hello, im trying to run the hello world client/server example from the website on windows with vs2010 and the server isnt running right
| [Thursday 03 March 2011] [23:43:54] <ctrlc-root>	it starts but then it fails with an unhandled exception, error number 156384763
| [Thursday 03 March 2011] [23:44:06] <ctrlc-root>	"The operation cannot be completed because the socket is not in the right state"
| [Thursday 03 March 2011] [23:44:14] <ctrlc-root>	this is on the socket.recv() call in teh c++ api
| [Thursday 03 March 2011] [23:44:19] <ctrlc-root>	anyone know what could be going wrong?
| [Friday 04 March 2011] [01:34:31] <guido_g>	morning all
| [Friday 04 March 2011] [01:45:07] <eyecue>	tgif
| [Friday 04 March 2011] [02:03:06] <guido_g>	hehehe
| [Friday 04 March 2011] [02:07:05] <guido_g>	http://1.bp.blogspot.com/-LkXUSknbalU/TXB1HTDJs_I/AAAAAAAB_gw/q8Njub9H2e4/s1600/ironic_sign_situations_01.jpg  <- see what bad naming can do
| [Friday 04 March 2011] [02:07:42] <guido_g>	and now up for mor mdp fun
| [Friday 04 March 2011] [02:09:59] <eyecue>	that looks like its from the brisbane flood in australia
| [Friday 04 March 2011] [02:10:36] <eyecue>	guido_g; there was also this one during the same event :) http://resources1.news.com.au/images/2011/01/13/1225987/039817-suncorp-stadium.jpg
| [Friday 04 March 2011] [02:11:16] <guido_g>	hehe
| [Friday 04 March 2011] [02:11:35] <guido_g>	this is the humor one would expect 
| [Friday 04 March 2011] [02:11:43] <eyecue>	:]
| [Friday 04 March 2011] [02:11:46] <eyecue>	from aussies? yeh :)
| [Friday 04 March 2011] [02:12:48] <guido_g>	must be hard
| [Friday 04 March 2011] [02:13:12] <guido_g>	living close to water for the larger part of my life, but luckily never got flooded
| [Friday 04 March 2011] [02:14:21] <jsimmons>	i live on a hill, handy.
| [Friday 04 March 2011] [02:14:26] <guido_g>	once i saw a flood mark 1m above a telephoneboth in a small coastal town i lived
| [Friday 04 March 2011] [02:14:50] <guido_g>	coward! :)
| [Friday 04 March 2011] [02:15:31] <jsimmons>	im not going to slum it with the plebs down near the waterline :D
| [Friday 04 March 2011] [02:17:01] <eyecue>	guido_g; http://ian.umces.edu/blog/wp-content/uploads/2011/02/ipswich_in_flood.jpg :)
| [Friday 04 March 2011] [02:17:26] <eyecue>	we do everything bigger and better in .au
| [Friday 04 March 2011] [02:17:40] <guido_g>	seems so
| [Friday 04 March 2011] [02:18:00] <eyecue>	http://images.brisbanetimes.com.au/2011/01/12/2130176/420ipswich-420x0.jpg <-- shopping centre :)
| [Friday 04 March 2011] [02:18:08] <eyecue>	i think they got upwards of 15m in some parts there
| [Friday 04 March 2011] [02:21:11] 	 * guido_g should move to the mountains
| [Friday 04 March 2011] [02:34:36] <jsimmons>	http://www.youtube.com/watch?v=LdOwFTo4Q3I
| [Friday 04 March 2011] [02:34:41] <jsimmons>	weirdo queenslanders
| [Friday 04 March 2011] [03:14:56] <eyecue>	:]
| [Friday 04 March 2011] [04:13:06] <mikko>	good morning
| [Friday 04 March 2011] [04:18:17] <Steve-o>	top of the morning to you mikko
| [Friday 04 March 2011] [04:20:22] <mikko>	i don't fully understand this mingw32 vs mingw64 business
| [Friday 04 March 2011] [04:20:58] <Steve-o>	mingw64 is just an updated fork of mingw32
| [Friday 04 March 2011] [04:21:05] <Steve-o>	with 32-bit and 64-bit compilers
| [Friday 04 March 2011] [04:21:44] <Steve-o>	some rfit causing the split
| [Friday 04 March 2011] [04:21:49] <Steve-o>	rfit
| [Friday 04 March 2011] [04:21:51] <Steve-o>	rift
| [Friday 04 March 2011] [04:21:54] <Steve-o>	third time lucky
| [Friday 04 March 2011] [04:22:19] <mikko>	can i cross-compile 64bit binaries on 32bit machine with it?
| [Friday 04 March 2011] [04:22:36] <mikko>	looks like my own win7 build machine is offline
| [Friday 04 March 2011] [04:22:39] <Steve-o>	I guess you should be able to
| [Friday 04 March 2011] [04:22:45] <mikko>	probably installed updates again *sigh*
| [Friday 04 March 2011] [04:22:51] <Steve-o>	SP1
| [Friday 04 March 2011] [04:23:06] <Steve-o>	haven't installed it myself, 
| [Friday 04 March 2011] [04:23:25] <Steve-o>	looking for api changes, cannot find any docs but just found some notes on getaddrinfo() today
| [Friday 04 March 2011] [04:24:38] <Steve-o>	you can tag interfaces to be excluded from the results using netsh
| [Friday 04 March 2011] [04:24:41] <mikko>	confusing situation
| [Friday 04 March 2011] [04:25:06] <mikko>	are mingw32 dlls compatible with mingw64 binaries?
| [Friday 04 March 2011] [04:25:30] <Steve-o>	are 32-bit and 64-dlls interchangable, no
| [Friday 04 March 2011] [04:25:42] <mikko>	whats about 32bit ones?
| [Friday 04 March 2011] [04:26:03] <Steve-o>	via wow64 you can run 32-bit windows winsock apps on 64-bit windows
| [Friday 04 March 2011] [04:26:15] <Steve-o>	there are api changes that hide the details
| [Friday 04 March 2011] [04:26:33] <Steve-o>	and new apis like getnativesysteminfo() just for wow64
| [Friday 04 March 2011] [04:27:20] <Steve-o>	wow = windows on windows
| [Friday 04 March 2011] [04:34:10] <Steve-o>	but it's all transparent to the user
| [Friday 04 March 2011] [04:36:11] <mikko>	so building 32bit target with mingw64 doesn't really provide value over 32bit mingw32?
| [Friday 04 March 2011] [04:36:14] <mikko>	from user's point of view
| [Friday 04 March 2011] [04:44:57] <Steve-o_>	weeee, Google Chrome's hardware acceleration is definitely not stable yet :/
| [Friday 04 March 2011] [04:55:38] <Steve-o_>	downside with mingw is that it brings in a lot of compiler dependencies and debugging is ass
| [Friday 04 March 2011] [04:56:48] <mikko>	one of the downsides*
| [Friday 04 March 2011] [05:03:47] <Steve-o_>	more annoying is that it is slower than msvc
| [Friday 04 March 2011] [05:05:43] <Steve-o_>	I guess mingw-w64 is more updated and closer to gcc trunk and should be faster
| [Friday 04 March 2011] [05:09:20] <Steve-o_>	Should try ICC on Windows, haven't done that yet
| [Friday 04 March 2011] [05:10:17] <Steve-o_>	any numbers for 0mq and tcp?
| [Friday 04 March 2011] [05:10:37] <mikko>	5 - 6.5 million 1 byte messages over localhost
| [Friday 04 March 2011] [05:10:41] <mikko>	per sec
| [Friday 04 March 2011] [05:10:50] <mikko>	but it's questionable how accurate that is
| [Friday 04 March 2011] [05:11:48] <Steve-o_>	that was msvc on numa?
| [Friday 04 March 2011] [05:12:19] <mikko>	oh you mean windows
| [Friday 04 March 2011] [05:12:23] <mikko>	no numbers on windows
| [Friday 04 March 2011] [05:14:40] <Steve-o_>	ah ok
| [Friday 04 March 2011] [05:16:29] <Steve-o_>	was thinking of testing windows IPC after this release
| [Friday 04 March 2011] [05:17:07] <Steve-o_>	be easy to get something working and then see how the numbers get worse or better
| [Friday 04 March 2011] [05:18:10] <Steve-o_>	I sent an idea for broadcast IPC to sustrik before as an expansion on the idea, but I don't have numa boxes to performance test
| [Friday 04 March 2011] [05:20:13] <mikko>	i think Guthur is working for named pipes for windows
| [Friday 04 March 2011] [05:20:28] <mikko>	to get ipc:// working
| [Friday 04 March 2011] [06:24:32] <Guthur>	mikko: 'working' is a little strong at the moment
| [Friday 04 March 2011] [06:24:52] <Guthur>	Initial research completed at the moment
| [Friday 04 March 2011] [06:25:06] <Guthur>	need to develop a strategy for integration
| [Friday 04 March 2011] [06:26:43] <Guthur>	On my agenda is talk to sustrik more about what an abstraction of the name pipes using IOCP would need to emulate the current functionality provided and required by the polling methods on POSIX
| [Friday 04 March 2011] [06:27:38] <Guthur>	the problem is that plain IOCP is only a completion notification system
| [Friday 04 March 2011] [06:27:54] <Guthur>	and polling on POSIX provides more than that
| [Friday 04 March 2011] [06:41:35] <yrashk>	hey
| [Friday 04 March 2011] [06:41:50] <yrashk>	any idea on how we can check whether there are any unclosed sockets prior to zmq_term?
| [Friday 04 March 2011] [06:42:04] <yrashk>	we need to avoid blocking Erlang's VM in all possible situations
| [Friday 04 March 2011] [06:42:15] <yrashk>	so we'd rather not call zmq_term if we know that it will block
| [Friday 04 March 2011] [07:10:11] <guido_g>	no, that i know of
| [Friday 04 March 2011] [07:10:26] <guido_g>	this kind of information is not ment for us mere mortals
| [Friday 04 March 2011] [07:49:17] <private_meta>	Isn't there a way to tell zmq_term to terminate all sockets without waiting for finished messages? I thought I read something about it
| [Friday 04 March 2011] [07:50:02] <guido_g>	per socket
| [Friday 04 March 2011] [07:50:10] <guido_g>	via LINGER option
| [Friday 04 March 2011] [07:50:26] <guido_g>	but the sockets still have to be closed first
| [Friday 04 March 2011] [07:50:47] <yrashk>	well, we've got around this
| [Friday 04 March 2011] [07:51:05] <yrashk>	we now terminate context in a separate thread that we have anyway
| [Friday 04 March 2011] [09:32:44] <sejo>	hey all what are the pitfals for speed? what is the n* of messages i can send/receive with zeromq?
| [Friday 04 March 2011] [09:35:11] <guido_g>	depends on hardware and message size, so the question is futile
| [Friday 04 March 2011] [09:35:39] <guido_g>	btw, there are benchmarks in the mq git, use them
| [Friday 04 March 2011] [09:36:01] <sejo>	ach I will thx!
| [Friday 04 March 2011] [09:38:25] <sejo>	hmm with my code I only get 1/sec 
| [Friday 04 March 2011] [09:38:30] <sejo>	that is way to few :p
| [Friday 04 March 2011] [09:39:11] <sejo>	but I use it from python
| [Friday 04 March 2011] [09:39:49] <guido_g>	even w/ serialization i get ~4k messages per second using python
| [Friday 04 March 2011] [09:41:10] 	 * sejo slaps own head
| [Friday 04 March 2011] [09:41:35] <sejo>	please accept my apologies... still had time.sleep(1)  in my code :/
| [Friday 04 March 2011] [09:41:41] <sejo>	I'm a moron
| [Friday 04 March 2011] [09:41:59] <guido_g>	ok, we'll take that for granted
| [Friday 04 March 2011] [09:42:02] <guido_g>	:)
| [Friday 04 March 2011] [10:02:17] <sejo>	guido_g: apparently you should :p
| [Friday 04 March 2011] [10:02:35] <sejo>	now get approx 30/s (with saving to chouchdb)
| [Friday 04 March 2011] [10:02:40] <sejo>	so not that bad
| [Friday 04 March 2011] [10:03:19] <guido_g>	slow db?
| [Friday 04 March 2011] [10:13:33] <sejo>	guido_g: no slow way of doing it, I save document after document and not bulk save... that would improve a lot. Also python is owesome to write in but not _the_ fastest language there is
| [Friday 04 March 2011] [10:14:15] <sejo>	if we get funding and have more time I might redo in C, right now... python it is :p
| [Friday 04 March 2011] [10:14:22] <guido_g>	depends on how you do things
| [Friday 04 March 2011] [10:14:49] <guido_g>	usually python is fast enough
| [Friday 04 March 2011] [10:16:52] <guido_g>	ok, time for a break
| [Friday 04 March 2011] [10:16:55] <guido_g>	laters!
| [Friday 04 March 2011] [11:31:47] Notice	-tomaw- [Global Notice] Hi again.  As you will have noticed we're having some connectivity problems again this afternoon.  We're working with sponsors to rectify it.
| [Friday 04 March 2011] [11:57:30] <lt_schmidt_jr>	A couple of quesitons for the experts
| [Friday 04 March 2011] [11:58:11] <lt_schmidt_jr>	If a receiving socket goes unpolled can I detect if HWM has overflowed?
| [Friday 04 March 2011] [12:03:44] <mikko>	lt_schmidt_jr: yes
| [Friday 04 March 2011] [12:03:58] <mikko>	lt_schmidt_jr: non-blocking send should return EAGAIN assuming it's a socket that would block
| [Friday 04 March 2011] [12:05:22] <lt_schmidt_jr>	mikko: I am using pub sub, are you saying the pub socket will return eagain if a subscriber goes unpolled?
| [Friday 04 March 2011] [12:05:35] <mikko>	no, it would drop the message
| [Friday 04 March 2011] [12:05:48] <mikko>	you can't really detect HWM overflow with pub socket
| [Friday 04 March 2011] [12:05:56] <mikko>	as the messages are simply dropped
| [Friday 04 March 2011] [12:06:10] <mikko>	unless you poll
| [Friday 04 March 2011] [12:06:29] <mikko>	i am not sure whether poll indicates that it's writable
| [Friday 04 March 2011] [12:06:52] <lt_schmidt_jr>	interesting
| [Friday 04 March 2011] [12:07:06] <lt_schmidt_jr>	I thought I could have a sub-socket queue
| [Friday 04 March 2011] [12:07:21] <lt_schmidt_jr>	build up and it could overflow there
| [Friday 04 March 2011] [12:07:35] <lt_schmidt_jr>	as opposed on the publisher
| [Friday 04 March 2011] [12:07:55] <mikko>	i'm not really 100% how hwm interacts with pub-sub
| [Friday 04 March 2011] [12:08:18] <mikko>	let me check
| [Friday 04 March 2011] [12:08:37] <lt_schmidt_jr>	I am using inproc btw
| [Friday 04 March 2011] [12:08:47] <mikko>	http://api.zeromq.org/master:zmq-socket
| [Friday 04 March 2011] [12:09:00] <mikko>	if you look at the ZMQ_HWM option action under SUB
| [Friday 04 March 2011] [12:09:03] <mikko>	not applicable
| [Friday 04 March 2011] [12:10:10] <lt_schmidt_jr>	I see
| [Friday 04 March 2011] [12:10:17] <lt_schmidt_jr>	darn
| [Friday 04 March 2011] [12:14:34] <lt_schmidt_jr>	I wanted to pause socket polling on behalf of disconnected clients, but I guess I will have to build my own queue
| [Friday 04 March 2011] [12:14:57] <lt_schmidt_jr>	instead of relying on socket to queue
| [Friday 04 March 2011] [12:21:52] <lt_schmidt_jr>	mikko: thanks for the RTFM :) I forgot about that part of the doc having been studying the Guide
| [Friday 04 March 2011] [12:22:50] <mikko>	no problem
| [Friday 04 March 2011] [13:37:10] <Phantom_>	hello all
| [Friday 04 March 2011] [13:37:17] <Phantom_>	has anyone got the perl binding to work ?  it seems...nonfunctional.
| [Friday 04 March 2011] [13:41:04] <Phantom_>	'ello.  Is anyone out there ?
| [Friday 04 March 2011] [13:45:24] <andrewvc>	cremes: wish I had a better answer re: ffi as a dependency
| [Friday 04 March 2011] [13:45:34] <andrewvc>	the alternate gems thing doesn't really solve it
| [Friday 04 March 2011] [13:45:56] <cremes>	andrewvc: yeah, i hate that solution
| [Friday 04 March 2011] [13:46:12] <cremes>	i'm going to open up a feature request with the rubygems project
| [Friday 04 March 2011] [13:46:13] <andrewvc>	I was thinking actually, it'd be best if maybe the FFI project just did nothing if it was required in a non MRI ruby
| [Friday 04 March 2011] [13:46:21] <andrewvc>	yeah, that's the right long term solution
| [Friday 04 March 2011] [13:46:42] <cremes>	it's not the 'require' step that breaks things
| [Friday 04 March 2011] [13:46:47] <cremes>	it's the installation of the gem
| [Friday 04 March 2011] [13:46:55] <cremes>	it tries to install the 'ffi' gem and blows up
| [Friday 04 March 2011] [13:46:57] <andrewvc>	oh, what happens if you try and install in on rbx or jruby
| [Friday 04 March 2011] [13:47:04] <cremes>	kaboom
| [Friday 04 March 2011] [13:47:06] <andrewvc>	oh, because it tries to compile the ext
| [Friday 04 March 2011] [13:47:08] <andrewvc>	damn
| [Friday 04 March 2011] [13:47:09] <cremes>	right
| [Friday 04 March 2011] [13:48:01] <andrewvc>	yeah, RUBY_PLATFORM isn't enough, rubygems needs RUBY_ENGINE
| [Friday 04 March 2011] [13:48:07] <andrewvc>	is I'm guessing what you're going to request
| [Friday 04 March 2011] [13:48:41] <andrewvc>	it's funny, because the alternate gem thing works fine for jruby, just not rbx
| [Friday 04 March 2011] [13:53:37] <mikko>	pieter_hintjens: there?
| [Friday 04 March 2011] [14:47:49] <mathijs>	Hi all, is zmq_poll edge-triggered? in other words: if I poll on 10 items, and 3 of them have events waiting, but I only handle 1 and poll again, will the second poll call still return the other 2, or those be forgotten, letting poll wait for new events?
| [Friday 04 March 2011] [15:11:59] <mikko>	mathijs: it is
| [Friday 04 March 2011] [15:12:03] <Guthur>	http://api.zeromq.org/master:zmq-poll
| [Friday 04 March 2011] [15:12:11] <Guthur>	oh mikko beat me to it
| [Friday 04 March 2011] [15:12:31] <mathijs>	mikko: so I should take care to handle all events that occured before re-polling?
| [Friday 04 March 2011] [15:12:39] <mikko>	yes
| [Friday 04 March 2011] [15:12:43] <Guthur>	it says level triggered there
| [Friday 04 March 2011] [15:12:55] <mikko>	that sounds wrong
| [Friday 04 March 2011] [15:13:13] <mathijs>	ah, I was reading that page for some minutes but couldn't find it :P
| [Friday 04 March 2011] [15:13:34] <mikko>	i'm almost certain that the manual page there is wrong 
| [Friday 04 March 2011] [15:14:03] <mathijs>	level triggered is wrong I think. level triggered normally means that the trigger keeps popping up as long as the "level"/state is positive
| [Friday 04 March 2011] [15:15:27] <mikko>	see this one from el sustrik: http://www.mail-archive.com/zeromq-dev@lists.zeromq.org/msg01620.html
| [Friday 04 March 2011] [15:15:32] <mikko>	"Say there are two messages available. You read one of them. If you wait 
| [Friday 04 March 2011] [15:15:33] <mikko>	for the fd at this point it may never unblock, because there's still one 
| [Friday 04 March 2011] [15:15:33] <mikko>	message to read. Command saying "there are new messages available" is 
| [Friday 04 March 2011] [15:15:33] <mikko>	sent to your thread only if you've read all the messages before. You can 
| [Friday 04 March 2011] [15:15:33] <mikko>	think of it as edge-triggered polling"
| [Friday 04 March 2011] [15:15:42] <mikko>	longer paste than i expected
| [Friday 04 March 2011] [15:15:59] <Guthur>	is that maybe specific to FD though?
| [Friday 04 March 2011] [15:16:19] <Guthur>	i.e. not a zmq socket
| [Friday 04 March 2011] [15:16:23] <mikko>	it's possible
| [Friday 04 March 2011] [15:16:36] <mikko>	i was always under the impression that zmq socket is edge-triggered as well
| [Friday 04 March 2011] [15:16:38] <mathijs>	yeah, I knew that behavior is like that for FD, it was stated that was truely edge-triggered.
| [Friday 04 March 2011] [15:17:00] <mikko>	double check with sustrik or pieter_hintjens when either one of them is back
| [Friday 04 March 2011] [15:17:17] <mathijs>	well I'll do some quick tests, not too hard to find out
| [Friday 04 March 2011] [15:18:02] <Guthur>	my quick test seems to confirm its level
| [Friday 04 March 2011] [15:18:49] <mikko>	i guess if you need edge triggered you can always get the ZMQ_FD and poll on that
| [Friday 04 March 2011] [15:20:01] <mathijs>	no, I don't really need either of them, just want to make sure my expectations are right and I don't accidentally abuse some loophole
| [Friday 04 March 2011] [15:20:49] <mikko>	level triggered certainly makes it easier
| [Friday 04 March 2011] [15:21:41] <mathijs>	indeed, but not as die-hard :P
| [Friday 04 March 2011] [17:30:01] <lt_schmidt_jr>	What happens when a HWM is reached by a publisher in pub/sub?
| [Friday 04 March 2011] [17:30:14] <lt_schmidt_jr>	are the new messages dropped or the old ones are dequeud?
| [Friday 04 March 2011] [17:33:11] <Guthur>	new messages dropped
| [Friday 04 March 2011] [17:33:28] <lt_schmidt_jr>	Guthur: thanks
| [Friday 04 March 2011] [17:33:46] <Guthur>	you're welcome
| [Friday 04 March 2011] [17:42:36] <yrashk>	so, what would be the best way to add a library to http://www.zeromq.org/bindings:erlang ?
| [Friday 04 March 2011] [17:55:57] <Guthur>	yrashk, you mean add another erlang binding?
| [Friday 04 March 2011] [17:56:11] <yrashk>	yep
| [Friday 04 March 2011] [18:00:14] <Guthur>	is it publicly available
| [Friday 04 March 2011] [18:00:30] <Guthur>	tbh I'm not sure if there is a procedure
| [Friday 04 March 2011] [18:00:41] <Guthur>	pieter_hintjens, ping
| [Friday 04 March 2011] [18:08:22] <kdj>	I am having some trouble getting pyzmq installed on Ubuntu...
| [Friday 04 March 2011] [18:12:09] <kdj>	I follow the steps in the docs, and it works fine, but if I log out and back in, I seem to lose some env variable
| [Friday 04 March 2011] [18:20:26] <yrashk>	Guthur: new binding? yes, it is
| [Friday 04 March 2011] [18:23:09] <Guthur>	yrashk, I'm not sure if there is a process, best to mention it on the mailing list then pieter or martin can see it
| [Friday 04 March 2011] [18:23:51] <Guthur>	I'd imagine you just add a description and links to that page
| [Friday 04 March 2011] [18:24:11] <yrashk>	well they are aware of it
| [Friday 04 March 2011] [18:24:33] <yrashk>	anyway, will take care of this later
| [Saturday 05 March 2011] [02:47:07] <vrc>	hi
| [Saturday 05 March 2011] [02:47:18] <vrc>	had a quick question about the pub-sub model and reliability
| [Saturday 05 March 2011] [02:48:25] <vrc>	i set up a pub-sub model..and if my subscribers receive packets (in a loop) -> and spend a lot of time processing them, will they lose packets
| [Saturday 05 March 2011] [02:49:22] <vrc>	or is the pub-sub model guaranteed to provide reliability i.e, all packets sent by the pub are received by each sub..i do realize that some packets in the beginning could be lost due to connection delays, etc
| [Saturday 05 March 2011] [02:49:31] <vrc>	thanks - i'm new to zeromq
| [Saturday 05 March 2011] [02:51:24] <cremes>	vrc: think of a PUB socket as a radio broadcast
| [Saturday 05 March 2011] [02:51:45] <cremes>	if your subscriber isn't around to "hear" it, there is no guarantee it will get all packets
| [Saturday 05 March 2011] [02:52:21] <cremes>	by default, PUB will queue packets for all connected subscribers but a slow subscriber can cause a huge backlog
| [Saturday 05 March 2011] [02:52:29] <cremes>	and memory pressure on the publisher if they can't keep up
| [Saturday 05 March 2011] [02:52:42] <cremes>	so, there is a mechanism called ZM_HWM (high water mark)
| [Saturday 05 March 2011] [02:53:07] <cremes>	if there are more than X outstanding packets (where X is the HWM) then the pub socket drops them to /dev/null
| [Saturday 05 March 2011] [02:53:34] <cremes>	if you need reliability, then you need to work out some kind of 'ack' mechanism and a pub/sub pattern is no 
| [Saturday 05 March 2011] [02:53:36] <cremes>	longer appropriate
| [Saturday 05 March 2011] [02:53:55] <cremes>	be sure to read all 4 chapters of the guide... of lot of these use-cases are discussed in there
| [Saturday 05 March 2011] [02:54:20] <cremes>	vrc: did that help?
| [Saturday 05 March 2011] [02:57:30] <vrc>	cremes - thank you very much. that was very useful - in fact, i was reading your comments somewhere else on the internet
| [Saturday 05 March 2011] [02:57:47] <cremes>	heh
| [Saturday 05 March 2011] [02:58:00] <cremes>	well, it's bed time; good luck with your investigations
| [Saturday 05 March 2011] [02:58:06] <vrc>	even if you use PUB/SUB over TCP-IP, there's no guaranteed delivery ?
| [Saturday 05 March 2011] [02:58:17] <cremes>	this channel is usually pretty well covered during the weekdays
| [Saturday 05 March 2011] [02:58:38] <cremes>	no
| [Saturday 05 March 2011] [02:59:05] <cremes>	read the guide... this is almost faq :)
| [Saturday 05 March 2011] [02:59:11] <vrc>	ok. thanks - won't keep you up
| [Saturday 05 March 2011] [02:59:16] <cremes>	cool
| [Saturday 05 March 2011] [03:16:49] <guido_g>	good morning all
| [Saturday 05 March 2011] [04:43:17] <pieter_hintjens>	guido_g: good morning
| [Saturday 05 March 2011] [04:43:29] <guido_g>	howdy pieter_hintjens 
| [Saturday 05 March 2011] [04:43:39] <pieter_hintjens>	how's it going... ?
| [Saturday 05 March 2011] [04:44:24] <guido_g>	didn't do anything yesterday
| [Saturday 05 March 2011] [04:44:42] <guido_g>	except finding a glitch in the spec, but i need to verify that first
| [Saturday 05 March 2011] [04:45:05] <pieter_hintjens>	a glitch, interesting
| [Saturday 05 March 2011] [04:45:22] <guido_g>	yep
| [Saturday 05 March 2011] [04:46:05] <guido_g>	in client <-> broker there is no client address mentioned
| [Saturday 05 March 2011] [04:46:36] <guido_g>	but it appears magically (as full list even) in worker <-> broker
| [Saturday 05 March 2011] [04:46:56] <pieter_hintjens>	right, it's the same as for broker-worker
| [Saturday 05 March 2011] [04:47:23] <pieter_hintjens>	that note should be made to cover both sides
| [Saturday 05 March 2011] [04:47:36] <guido_g>	i mean where does the client address in frame 2 come from? that should be explaind
| [Saturday 05 March 2011] [04:47:41] <guido_g>	*ed
| [Saturday 05 March 2011] [04:47:54] <pieter_hintjens>	hmm, one assumes the implementor knows his XREP/ROUTER stuff
| [Saturday 05 March 2011] [04:48:51] <guido_g>	but still it's not clear where the address in frame 2 comes from, itr should be mentioned in the spec -- imho
| [Saturday 05 March 2011] [04:50:23] <pieter_hintjens>	indeed... it assumes too much, I'll fix that
| [Saturday 05 March 2011] [04:50:48] <guido_g>	oh and eventually move the XREQ note to the front of the spec
| [Saturday 05 March 2011] [04:51:18] <guido_g>	so one can see it before its needed
| [Saturday 05 March 2011] [04:52:31] <pieter_hintjens>	indeed
| [Saturday 05 March 2011] [04:53:15] <guido_g>	i think i'll start on some broker parts this afternoon
| [Saturday 05 March 2011] [04:54:21] <guido_g>	if we could get that running, all these "but i need reliability" questions could be answered w/ a link :)
| [Saturday 05 March 2011] [04:55:59] <pieter_hintjens>	ah, almost :-)
| [Saturday 05 March 2011] [04:56:06] <pieter_hintjens>	after this, it's the Titanic pattern
| [Saturday 05 March 2011] [04:56:28] <mikko>	looks like steve got openpgm out
| [Saturday 05 March 2011] [04:56:34] <pieter_hintjens>	"but I need reliability on spinning rust"
| [Saturday 05 March 2011] [04:56:59] <pieter_hintjens>	mikko: saw that...
| [Saturday 05 March 2011] [04:57:00] <guido_g>	rust?
| [Saturday 05 March 2011] [04:57:36] <pieter_hintjens>	guido_g: iron oxide? magnetised brown stuff used to hold data
| [Saturday 05 March 2011] [04:57:49] <guido_g>	ahhh...
| [Saturday 05 March 2011] [04:58:20] <guido_g>	sorry, thought you just got a ssd, so it'll be "built on sand"
| [Saturday 05 March 2011] [04:59:20] <pieter_hintjens>	guido_g: I replaced the HD in my notebook with an SSD that Sustrik gave me a while back
| [Saturday 05 March 2011] [04:59:27] <pieter_hintjens>	quite neat
| [Saturday 05 March 2011] [04:59:38] <djc>	in the guide's fig9, shouldn't the second right-hand box be "Start the SUB sockets before the PUB to avoid loss" (i.e. the other way around)?
| [Saturday 05 March 2011] [04:59:53] <pieter_hintjens>	djc: let me check...
| [Saturday 05 March 2011] [05:00:41] <guido_g>	pieter_hintjens: spec:7 "Clients will issue at most one request at a time, and will wait for a reply in realtime." <- can this be lifted, i can't see why
| [Saturday 05 March 2011] [05:01:13] <djc>	pieter_hintjens: in the bottom box it also says 9zeromq, I think it means #zeromq?
| [Saturday 05 March 2011] [05:01:17] <guido_g>	oops... time for furniture shopping
| [Saturday 05 March 2011] [05:01:25] <guido_g>	l8tr
| [Saturday 05 March 2011] [05:02:07] <pieter_hintjens>	guido_g: it can't be lifted without other changes
| [Saturday 05 March 2011] [05:02:25] <pieter_hintjens>	djc: fixed both errors, thanks
| [Saturday 05 March 2011] [05:02:32] <djc>	awesome, thanks
| [Saturday 05 March 2011] [05:02:42] <djc>	I could write up a list of language refinements if you're interested
| [Saturday 05 March 2011] [05:02:53] <djc>	I presume you're not a native speaker, either? :)
| [Saturday 05 March 2011] [05:03:28] <pieter_hintjens>	djc: of what language?
| [Saturday 05 March 2011] [05:03:46] <djc>	the refinements, or a native speaker?
| [Saturday 05 March 2011] [05:03:57] <djc>	if the former, some things in the guide read awkwardly
| [Saturday 05 March 2011] [05:04:01] <pieter_hintjens>	uhm, English is my native language, yes
| [Saturday 05 March 2011] [05:04:11] <pieter_hintjens>	feel free to point out the awkward parts
| [Saturday 05 March 2011] [05:04:18] <djc>	oh, ok, I assumed from your name
| [Saturday 05 March 2011] [05:04:43] <djc>	sorry about that!
| [Saturday 05 March 2011] [05:04:56] <pieter_hintjens>	np
| [Saturday 05 March 2011] [05:05:13] <pieter_hintjens>	there's an issue tracker on the Guide github
| [Saturday 05 March 2011] [05:05:18] <djc>	ok
| [Saturday 05 March 2011] [05:06:02] <djc>	another question: what's the reason I have to memcpy() my data to the zmq_message, for example in the guide's pub/sub example's publisher
| [Saturday 05 March 2011] [05:06:42] <djc>	it seems like it should be okay to reference it as long as I make sure it stays around until the zmq_msg_close()?
| [Saturday 05 March 2011] [05:07:13] <pieter_hintjens>	sure
| [Saturday 05 March 2011] [05:07:21] <mikko>	djc: with inproc that is ok
| [Saturday 05 March 2011] [05:07:33] <pieter_hintjens>	the examples don't try to optimise
| [Saturday 05 March 2011] [05:08:26] <pieter_hintjens>	mikko: fixed issue #3 on ztools
| [Saturday 05 March 2011] [05:09:18] <mikko>	thanks
| [Saturday 05 March 2011] [05:09:37] <mikko>	im trying to figure out a good build order for zeromq2 in the daily builds
| [Saturday 05 March 2011] [05:09:52] <mikko>	tests use the same ports so concurrent builds have intermittent test fails
| [Saturday 05 March 2011] [05:10:19] <pieter_hintjens>	how so?
| [Saturday 05 March 2011] [05:10:58] <mikko>	well, multiple builds run test that tries to bind to 5555
| [Saturday 05 March 2011] [05:11:12] <mikko>	which throws EADDRINUSE
| [Saturday 05 March 2011] [05:11:20] <mikko>	btw, did you see this: https://github.com/mkoppanen/zeromq2-docs
| [Saturday 05 March 2011] [05:11:35] <mikko>	that uses submobules to bring everything in to same 'workspace'
| [Saturday 05 March 2011] [05:12:17] <pieter_hintjens>	ah, right... tests should use unique ports
| [Saturday 05 March 2011] [05:12:27] <mikko>	you mean randomise the port?
| [Saturday 05 March 2011] [05:12:49] <pieter_hintjens>	not randomize, but allocate sequentially or something
| [Saturday 05 March 2011] [05:12:53] <pieter_hintjens>	number the tests 1 up
| [Saturday 05 March 2011] [05:13:09] <mikko>	that's all fine but i build 4 zeromq builds on the same machine at the same time
| [Saturday 05 March 2011] [05:13:14] <pieter_hintjens>	oh, hang on, it's the same test running in parallel, right
| [Saturday 05 March 2011] [05:13:16] <pieter_hintjens>	bleh
| [Saturday 05 March 2011] [05:13:17] <mikko>	so sequence would be the same
| [Saturday 05 March 2011] [05:13:42] <pieter_hintjens>	no answer except "serialize the tests"
| [Saturday 05 March 2011] [05:14:06] <pieter_hintjens>	btw, we forked off zeromq2-0 as well
| [Saturday 05 March 2011] [05:14:34] <djc>	hmmm, so what does it mean for zmq_msg_init_data() to "take ownership of the supplied buffer"? for example, I want to send a part of a stack-allocated buffer, what would be the optimal way to put this into a message?
| [Saturday 05 March 2011] [05:14:44] <djc>	given that there are no weird threading things going on in my app
| [Saturday 05 March 2011] [05:15:11] <pieter_hintjens>	djc: 'optimal' as in 'save the last CPU cycle' or as in 'don't write code that confuses me'?
| [Saturday 05 March 2011] [05:15:35] <pieter_hintjens>	if you aren't really comfortable with the API you should not be trying to optimize, period
| [Saturday 05 March 2011] [05:15:50] <pieter_hintjens>	and even when you are, you should still not be optimizing
| [Saturday 05 March 2011] [05:16:11] <djc>	this is me trying to become comfortable with the API :)
| [Saturday 05 March 2011] [05:16:24] <djc>	I know, I know, I should only optimize after stress-testing
| [Saturday 05 March 2011] [05:16:34] <djc>	I was just wondering about the underlying model
| [Saturday 05 March 2011] [05:17:04] <pieter_hintjens>	use mempcy and focus on more interesting aspects of the model
| [Saturday 05 March 2011] [05:17:29] <djc>	ok
| [Saturday 05 March 2011] [05:38:13] <mikko>	pieter_hintjens: i updated zfl README.txt last night
| [Saturday 05 March 2011] [05:38:32] <mikko>	but didnt have time to investigate into generating README.md 
| [Saturday 05 March 2011] [05:38:40] <mikko>	can you update that?
| [Saturday 05 March 2011] [05:39:00] <pieter_hintjens>	sure, it uses gitdown
| [Saturday 05 March 2011] [05:39:03] <pieter_hintjens>	will do now
| [Saturday 05 March 2011] [05:39:29] <pieter_hintjens>	done
| [Saturday 05 March 2011] [05:53:54] <mikko>	thanks
| [Saturday 05 March 2011] [09:05:04] <larhat>	Hi, folks! If i set ZMQ_HWM=1 and ZMQ_SWP=N (N>0) on socket, process will store all, that cannot be processed immediately, on disk. But it process fails, can it restore swapped messages and retry sending? I wonder, can i use this for some kind of persistence queue? 
| [Saturday 05 March 2011] [09:13:03] <Guthur>	larhat, I have a feeling it cannot
| [Saturday 05 March 2011] [09:51:40] <mikko>	larhat: no, it cannot be done at the moment
| [Saturday 05 March 2011] [09:51:54] <mikko>	larhat: there has been discussion about creating persistence devices
| [Saturday 05 March 2011] [09:52:12] <mikko>	where you could 'plug in' persistence on sockets you need
| [Saturday 05 March 2011] [09:54:31] <larhat>	ok, thanks, guys
| [Saturday 05 March 2011] [16:45:59] <surikator>	hi! anyone out there who tried ZeroMQ for OCaml?
| [Saturday 05 March 2011] [17:15:30] <Guthur>	is there any reason why rtrouter from the guide should not worker with inproc transport
| [Saturday 05 March 2011] [17:32:10] <Guthur>	surikator, there does not yet seem to be a binding for OCaml
| [Saturday 05 March 2011] [17:32:29] <surikator>	yes, there is...
| [Saturday 05 March 2011] [17:32:41] <Guthur>	oh ok, it's not mentioned on the site
| [Saturday 05 March 2011] [17:32:44] <surikator>	https://github.com/pdhborges/ocaml-zmq
| [Saturday 05 March 2011] [17:33:08] <surikator>	=)
| [Saturday 05 March 2011] [17:35:01] <surikator>	but regarding zeromq in general, can we pass whole data structures and objects through the sockets?
| [Saturday 05 March 2011] [17:38:40] <Guthur>	surikator, you'd need to serialize them
| [Saturday 05 March 2011] [17:39:06] <Guthur>	I'm not familiar with that binding, it may or may not have that built in
| [Saturday 05 March 2011] [17:39:30] <Guthur>	ZeroMQ does not provide it though
| [Saturday 05 March 2011] [17:39:53] <Guthur>	there is some pretty decent serialization solutions out there though
| [Saturday 05 March 2011] [17:43:28] <surikator>	it doesn't have that built in. it mimics ZeroMQ only.
| [Saturday 05 March 2011] [17:51:12] <surikator>	ok, so I'd probably have to use Ocaml Marshal library. which solutions do you mean?
| [Saturday 05 March 2011] [18:08:03] <Guthur>	surikator, protocol buffers, thrift, or maybe even JSON
| [Saturday 05 March 2011] [18:08:24] <Guthur>	i'm not familiar with OCaml though
| [Sunday 06 March 2011] [01:55:25] <guido_g>	hello world!
| [Sunday 06 March 2011] [04:39:39] <pieter_hintjens>	hi all, I just made the 2.1.2 rc2 release
| [Sunday 06 March 2011] [04:40:37] <guido_g>	and lots of old tags on zeromq2-1
| [Sunday 06 March 2011] [04:44:21] <pieter_hintjens>	yeah, I was wondering about those... OK, will delete them...
| [Sunday 06 March 2011] [04:44:32] <guido_g>	pieter_hintjens: can we change the woker side framing of the mdp? would like to have an empty frame before the version, so it's the same as for the client
| [Sunday 06 March 2011] [04:45:16] <guido_g>	makes the code much easier and would be more consistent
| [Sunday 06 March 2011] [04:45:17] <pieter_hintjens>	guido_g: an extra frame for nothing...
| [Sunday 06 March 2011] [04:45:29] <pieter_hintjens>	I'd thought of it but figured it was pointless
| [Sunday 06 March 2011] [04:45:39] <guido_g>	it's not
| [Sunday 06 March 2011] [04:45:49] <pieter_hintjens>	ok, let me think about it a sec
| [Sunday 06 March 2011] [04:46:00] <guido_g>	if all goes over one zmq socket, you need to figure out where the message came from
| [Sunday 06 March 2011] [04:46:53] <guido_g>	if we could strip the return path with a generic function, the first part of the remaining message would be the sender
| [Sunday 06 March 2011] [04:47:14] <pieter_hintjens>	consistency? hmm, a novel idea...
| [Sunday 06 March 2011] [04:47:27] <guido_g>	*sigh*
| [Sunday 06 March 2011] [04:47:30] <guido_g>	,)
| [Sunday 06 March 2011] [04:48:28] <pieter_hintjens>	so the reason there's an empty frame before the version is purely to emulate a REQ socket
| [Sunday 06 March 2011] [04:49:56] <pieter_hintjens>	there's no consistent return path afaics
| [Sunday 06 March 2011] [04:50:12] <pieter_hintjens>	tell me precisely what commands you'd want to change, guido_g
| [Sunday 06 March 2011] [04:50:23] <pieter_hintjens>	ready, heartbeat, request, reply, disconnect?
| [Sunday 06 March 2011] [04:51:12] <guido_g>	it would change all of them
| [Sunday 06 March 2011] [04:51:41] <pieter_hintjens>	it would not make these consistent with client commands
| [Sunday 06 March 2011] [04:51:51] <pieter_hintjens>	because the worker commands all have that frame with the command number
| [Sunday 06 March 2011] [04:52:01] <pieter_hintjens>	i'm unsure what you mean by 'return path'
| [Sunday 06 March 2011] [04:52:22] <pieter_hintjens>	are you talking about the broker or the APIs?
| [Sunday 06 March 2011] [04:52:37] 	 * pieter_hintjens needs more context...
| [Sunday 06 March 2011] [04:52:44] <guido_g>	it make the overall structure more consistent
| [Sunday 06 March 2011] [04:52:53] <pieter_hintjens>	overall structure of *what*?
| [Sunday 06 March 2011] [04:53:06] <guido_g>	i do talk about the sequence of message frames send to the broker
| [Sunday 06 March 2011] [04:53:29] <pieter_hintjens>	ok, so there is a reason the client and worker protocols are quite different
| [Sunday 06 March 2011] [04:53:37] <guido_g>	*sigh*
| [Sunday 06 March 2011] [04:54:10] <guido_g>	it makes the more complex, when using a shared socket in the broker
| [Sunday 06 March 2011] [04:54:16] <pieter_hintjens>	so use two sockets, that's fine
| [Sunday 06 March 2011] [04:54:39] <pieter_hintjens>	you've not actually explained what you mean, except "more consistent" and "*sigh*"
| [Sunday 06 March 2011] [04:54:41] <pieter_hintjens>	:-)
| [Sunday 06 March 2011] [04:54:48] <pieter_hintjens>	please be precise
| [Sunday 06 March 2011] [04:54:53] <guido_g>	to me it's obvious
| [Sunday 06 March 2011] [04:54:58] <pieter_hintjens>	obviously
| [Sunday 06 March 2011] [04:55:30] <guido_g>	the client sends id followed by delimiter (the empty frame)
| [Sunday 06 March 2011] [04:55:47] <pieter_hintjens>	wait, please
| [Sunday 06 March 2011] [04:55:51] <pieter_hintjens>	the client does not send ID
| [Sunday 06 March 2011] [04:55:56] <guido_g>	the worker send id and then immediately the 6 byte proto version
| [Sunday 06 March 2011] [04:56:10] <guido_g>	the req does
| [Sunday 06 March 2011] [04:56:18] <pieter_hintjens>	nope, the client does not send its id
| [Sunday 06 March 2011] [04:56:27] <pieter_hintjens>	if you believe it does, we have a communications issue
| [Sunday 06 March 2011] [04:56:36] <pieter_hintjens>	the xrep socket prepends the ID of the originator
| [Sunday 06 March 2011] [04:56:58] <guido_g>	ok so that is what the app sees
| [Sunday 06 March 2011] [04:57:08] <pieter_hintjens>	the client sends (if it's a REQ) the protocol version followed by the service name followed by the message
| [Sunday 06 March 2011] [04:57:24] <guido_g>	ok, again
| [Sunday 06 March 2011] [04:57:27] <pieter_hintjens>	the client sends (if it's an XREQ) this, prepended by an empty frame
| [Sunday 06 March 2011] [04:57:37] <pieter_hintjens>	the 'app' is *what*?
| [Sunday 06 March 2011] [04:57:47] <pieter_hintjens>	you need to be precise, we have three nodes here, each seeing different things
| [Sunday 06 March 2011] [04:57:48] <guido_g>	the program getting the messages from the xreq sees a leading id
| [Sunday 06 March 2011] [04:58:01] <guido_g>	followed by an empty frame
| [Sunday 06 March 2011] [04:58:16] <guido_g>	this was a recv gives
| [Sunday 06 March 2011] [04:58:20] <pieter_hintjens>	ok
| [Sunday 06 March 2011] [04:58:31] <guido_g>	this should be the same for both sides
| [Sunday 06 March 2011] [04:58:56] <guido_g>	so one could use the same function for splitting this information and the following part reliably
| [Sunday 06 March 2011] [04:58:58] <pieter_hintjens>	well, it's 2 lines of code more or less in the broker
| [Sunday 06 March 2011] [04:59:08] <pieter_hintjens>	and it's an extra frame for the worker protocol for absolutely no advantage
| [Sunday 06 March 2011] [04:59:49] <pieter_hintjens>	i will not make the protocol more complex to create minimal advantage to implementations
| [Sunday 06 March 2011] [04:59:53] <pieter_hintjens>	sorry
| [Sunday 06 March 2011] [05:00:00] <pieter_hintjens>	the frames need to have a *functional* purpose
| [Sunday 06 March 2011] [05:00:02] <guido_g>	says the guy who needs six byte to distinguish 2 protocols and their versions
| [Sunday 06 March 2011] [05:00:08] <pieter_hintjens>	"I can reuse the same code" is not a functional purpose
| [Sunday 06 March 2011] [05:00:11] <guido_g>	it does
| [Sunday 06 March 2011] [05:00:35] <guido_g>	it delimits the routing part from the mdp protocol information
| [Sunday 06 March 2011] [05:00:54] <pieter_hintjens>	here is how my code does it:
| [Sunday 06 March 2011] [05:00:55] <pieter_hintjens>	            char *sender = zmsg_unwrap (msg);
| [Sunday 06 March 2011] [05:00:55] <pieter_hintjens>	            char *header = zmsg_pop (msg);
| [Sunday 06 March 2011] [05:01:13] <pieter_hintjens>	totally generic, works for both client and worker messages
| [Sunday 06 March 2011] [05:01:31] <pieter_hintjens>	            if (strcmp (header, MDPC_CLIENT) == 0)
| [Sunday 06 March 2011] [05:01:31] <pieter_hintjens>	                s_client_process (self, sender, msg);
| [Sunday 06 March 2011] [05:01:31] <pieter_hintjens>	            else
| [Sunday 06 March 2011] [05:01:31] <pieter_hintjens>	            if (strcmp (header, MDPW_WORKER) == 0)
| [Sunday 06 March 2011] [05:01:31] <pieter_hintjens>	                s_worker_process (self, sender, msg);
| [Sunday 06 March 2011] [05:01:45] <pieter_hintjens>	I'm surprised it's easier in C than in Python
| [Sunday 06 March 2011] [05:02:16] <guido_g>	i don't know what these function do
| [Sunday 06 March 2011] [05:02:50] <pieter_hintjens>	unwrap removes an address plus optional empty part
| [Sunday 06 March 2011] [05:02:51] <guido_g>	but the client header start w/ an emty frame per spec, can't see that handled here
| [Sunday 06 March 2011] [05:02:55] <guido_g>	ahhh
| [Sunday 06 March 2011] [05:02:58] <pieter_hintjens>	since this question of empty parts occurs in many places
| [Sunday 06 March 2011] [05:03:02] <guido_g>	only one address
| [Sunday 06 March 2011] [05:03:15] <pieter_hintjens>	you want to manage an address stack?
| [Sunday 06 March 2011] [05:03:23] <guido_g>	there is nothing to manage
| [Sunday 06 March 2011] [05:03:29] <pieter_hintjens>	there is no stack
| [Sunday 06 March 2011] [05:03:46] <guido_g>	it's just a list of ids followed by an empty frame
| [Sunday 06 March 2011] [05:03:52] <pieter_hintjens>	there is no list
| [Sunday 06 March 2011] [05:03:55] <pieter_hintjens>	it's exactly one
| [Sunday 06 March 2011] [05:04:06] <pieter_hintjens>	the only way you can get a list is to chain multiple brokers
| [Sunday 06 March 2011] [05:04:18] <pieter_hintjens>	and that won't work without other changes
| [Sunday 06 March 2011] [05:04:54] <pieter_hintjens>	this, at least, is the broker's view of the world
| [Sunday 06 March 2011] [05:05:04] <pieter_hintjens>	workers, as terminators, can manage a stack without trouble
| [Sunday 06 March 2011] [05:05:52] <pieter_hintjens>	so the request command emulates a REP socket (stack of addresses + empty part + body)
| [Sunday 06 March 2011] [05:06:17] <pieter_hintjens>	guido_g: ok, here's a compromise
| [Sunday 06 March 2011] [05:06:36] <pieter_hintjens>	your point is noted, I had the same idea but it didn't stick
| [Sunday 06 March 2011] [05:07:07] <pieter_hintjens>	we'll probably want to make more radical changes to MDP anyhow, later
| [Sunday 06 March 2011] [05:08:49] <guido_g>	and where's the compromise?
| [Sunday 06 March 2011] [05:09:04] <guido_g>	i mean we *might* do it later doesn't sound like one
| [Sunday 06 March 2011] [05:09:18] <guido_g>	but, ok i'll implement the way it is
| [Sunday 06 March 2011] [05:11:07] <pieter_hintjens>	Meaning, the issue remains open, it's not rejected, but needs more thought
| [Sunday 06 March 2011] [05:11:32] <pieter_hintjens>	I'm not sure the 'many frames' approach is ideal at all
| [Sunday 06 March 2011] [05:12:36] <guido_g>	no, it's significantly slower, but ra performance isn't important here i was told
| [Sunday 06 March 2011] [05:12:56] <guido_g>	s/ra/raw/
| [Sunday 06 March 2011] [05:13:35] <Guthur>	pieter_hintjens, was that second archive i sent yesterday ok?
| [Sunday 06 March 2011] [05:13:58] <pieter_hintjens>	Guthur: yup, I already pushed those translations, thanks
| [Sunday 06 March 2011] [05:14:14] <pieter_hintjens>	guido_g: indeed, I want the semantics of routing to be clear, this is educational
| [Sunday 06 March 2011] [05:14:23] <Guthur>	pieter_hintjens, cool, cheers
| [Sunday 06 March 2011] [05:14:54] <pieter_hintjens>	Guthur: only a dozen or so more, and you can get the Guide in C# :-)
| [Sunday 06 March 2011] [05:15:29] <Guthur>	I hope to have ch3 finished soon enough
| [Sunday 06 March 2011] [05:15:38] <Guthur>	1/2 half through peering2
| [Sunday 06 March 2011] [05:16:21] <Guthur>	I'm going with some friends to airsoft today, so there's likely to little progress today
| [Sunday 06 March 2011] [05:16:50] <pieter_hintjens>	that blasted hintjens guy keeps moving the goal posts...
| [Sunday 06 March 2011] [05:17:15] <Guthur>	is ch4 still in quite a bit of flux
| [Sunday 06 March 2011] [05:17:55] <pieter_hintjens>	What's there now is stable, it's coming to a close
| [Sunday 06 March 2011] [05:18:03] <pieter_hintjens>	two more large patterns and it's done
| [Sunday 06 March 2011] [05:18:17] <Guthur>	nice
| [Sunday 06 March 2011] [05:18:25] <Guthur>	is this the final chapter
| [Sunday 06 March 2011] [05:18:31] <pieter_hintjens>	lol, no :-)
| [Sunday 06 March 2011] [05:18:53] <pieter_hintjens>	there'll be a few more chapters
| [Sunday 06 March 2011] [05:23:53] <Guthur>	ok, got to go, later all
| [Sunday 06 March 2011] [06:09:18] <mikko>	good morning
| [Sunday 06 March 2011] [06:16:03] <pieter_hintjens>	hi mikko!
| [Sunday 06 March 2011] [06:22:56] <mikko>	solaris isn't playing ball :/
| [Sunday 06 March 2011] [06:23:26] <mikko>	i tried to catch up with you on friday i think
| [Sunday 06 March 2011] [06:23:41] <mikko>	i did some build refactoring and would've warned that there might be some emails coming to your way
| [Sunday 06 March 2011] [06:23:52] <mikko>	i think you get failure emails at least for some builds
| [Sunday 06 March 2011] [06:23:54] <pieter_hintjens>	I saw them, np
| [Sunday 06 March 2011] [06:24:05] <pieter_hintjens>	I assumed you were changing something
| [Sunday 06 March 2011] [06:25:03] <mikko>	i am exploring using amazon ec2 to add some capacity
| [Sunday 06 March 2011] [06:25:08] <mikko>	win64 / linux64
| [Sunday 06 March 2011] [06:25:50] <pieter_hintjens>	interesting...
| [Sunday 06 March 2011] [06:26:44] <mikko>	start build slaves on demand and shutdown after they are done
| [Sunday 06 March 2011] [06:26:55] <mikko>	jenkins has a plugin for this so it should be fairly easy
| [Sunday 06 March 2011] [06:27:15] <pieter_hintjens>	and amazon charges only for what is actually used?
| [Sunday 06 March 2011] [06:27:24] <pieter_hintjens>	I've never tried ec2
| [Sunday 06 March 2011] [06:29:55] <mikko>	yeah
| [Sunday 06 March 2011] [06:30:35] <mikko>	linux is $0.025 per hour
| [Sunday 06 March 2011] [06:30:42] <mikko>	and windows is $0.035 per hour
| [Sunday 06 March 2011] [06:30:58] <mikko>	for the smallest instances
| [Sunday 06 March 2011] [06:56:03] <guido_g>	ha! python mdp broker just routed its first requests
| [Sunday 06 March 2011] [06:58:40] <mikko>	nice!
| [Sunday 06 March 2011] [07:01:01] <guido_g>	jepp, write it in ca. 4 hours :)
| [Sunday 06 March 2011] [07:01:11] <guido_g>	s/write/wrote/
| [Sunday 06 March 2011] [07:31:29] <guido_g>	pieter_hintjens: error while compling https://gist.github.com/857252
| [Sunday 06 March 2011] [07:55:28] <guido_g>	tiem for a break
| [Sunday 06 March 2011] [07:55:31] <guido_g>	*time
| [Sunday 06 March 2011] [10:35:01] <pieter_hintjens>	guido_g: 4 hours for a messaging broker, sweet
| [Sunday 06 March 2011] [10:35:14] <pieter_hintjens>	I fixed that error in mdbroker and also added the empty frame as you wanted
| [Sunday 06 March 2011] [10:38:43] <guido_g>	great thanks!
| [Sunday 06 March 2011] [10:49:49] <apexi200sx>	Hi,does this channel get logged to anywhere ?
| [Sunday 06 March 2011] [11:30:12] <travlr>	apexi200sx: IRC log is located at http://travlr.github.com/zmqirclog/
| [Sunday 06 March 2011] [12:13:55] <guido_g>	pieter_hintjens: mdbroker seems to be broken
| [Sunday 06 March 2011] [12:14:19] <pieter_hintjens>	yeah, probably, I didn't retest it
| [Sunday 06 March 2011] [12:14:21] <pieter_hintjens>	sigh
| [Sunday 06 March 2011] [12:14:29] <pieter_hintjens>	am distracted today, sorry
| [Sunday 06 March 2011] [12:14:34] <guido_g>	np
| [Sunday 06 March 2011] [12:14:41] <guido_g>	my broker works :)
| [Sunday 06 March 2011] [12:14:52] <pieter_hintjens>	you win 9,000 internets, sir!
| [Sunday 06 March 2011] [12:14:53] <pieter_hintjens>	:-)
| [Sunday 06 March 2011] [12:15:04] <guido_g>	shit, just bought a new one last week
| [Sunday 06 March 2011] [12:15:11] <pieter_hintjens>	np, keep them in reserve
| [Sunday 06 March 2011] [12:15:17] <guido_g>	right
| [Sunday 06 March 2011] [12:15:47] <guido_g>	as as i can tell from mdclient2, the broker should queue incomming client requests?
| [Sunday 06 March 2011] [12:16:00] <pieter_hintjens>	yes, it should
| [Sunday 06 March 2011] [12:16:35] <guido_g>	ok
| [Sunday 06 March 2011] [12:17:00] <pieter_hintjens>	clearly if N clients send requests at once, the broker has to queue them until workers are available
| [Sunday 06 March 2011] [12:18:04] <guido_g>	"Workers will handle at most one request a time, and will issue exactly one reply for each successful request." <- from the spec
| [Sunday 06 March 2011] [12:18:15] <pieter_hintjens>	workers, yes
| [Sunday 06 March 2011] [12:18:18] <pieter_hintjens>	but clients no
| [Sunday 06 March 2011] [12:18:20] <guido_g>	mdclient2 violates that restriction
| [Sunday 06 March 2011] [12:18:55] <pieter_hintjens>	clients != workers, right
| [Sunday 06 March 2011] [12:18:55] <guido_g>	note to self: read carefully
| [Sunday 06 March 2011] [12:20:45] <guido_g>	what about requests for a service that was never registered?
| [Sunday 06 March 2011] [12:21:07] <pieter_hintjens>	indeed, that is not covered by the spec
| [Sunday 06 March 2011] [12:21:30] <pieter_hintjens>	I think the best semantics are that the broker accepts the client requests anyhow
| [Sunday 06 March 2011] [12:21:46] <pieter_hintjens>	and tries to deliver them at some future time
| [Sunday 06 March 2011] [12:22:11] <guido_g>	on the risk of filling all memory with useless requests
| [Sunday 06 March 2011] [12:22:13] <pieter_hintjens>	however it's open... if the broker does this, it risks accumulating undeliverable messages for non-existent services
| [Sunday 06 March 2011] [12:22:31] <pieter_hintjens>	and if it does not do this, it breaks the asynchronous model where nodes come and go randomly
| [Sunday 06 March 2011] [12:23:03] <guido_g>	so there is room for a version 2 of the spec :)
| [Sunday 06 March 2011] [12:23:14] <pieter_hintjens>	for sure, like I said, this is a learning process...
| [Sunday 06 March 2011] [12:23:22] <guido_g>	i'll implement a queue per service now
| [Sunday 06 March 2011] [12:23:45] <pieter_hintjens>	yes, that's what I've done
| [Sunday 06 March 2011] [12:24:07] <pieter_hintjens>	that lets you dispatch messages to services when workers appear
| [Sunday 06 March 2011] [12:25:11] <guido_g>	done in a few minutes
| [Sunday 06 March 2011] [12:30:49] <pieter_hintjens>	ok, fixed the mdworker api, it didn't add the empty part. broker seemed to be fine
| [Sunday 06 March 2011] [12:30:54] <pieter_hintjens>	pushed to master
| [Sunday 06 March 2011] [12:32:40] <guido_g>	will check
| [Sunday 06 March 2011] [12:33:14] <guido_g>	no output from mdworker or mdbroker
| [Sunday 06 March 2011] [12:36:23] <pieter_hintjens>	set VERBOSE to 1 in mdbroker head, rebuild...
| [Sunday 06 March 2011] [12:36:46] <pieter_hintjens>	I've fixed the spec to clarify how the broker should handle client requests for non-existent services
| [Sunday 06 March 2011] [12:37:08] <guido_g>	getting assertion in worker when using my broker:
| [Sunday 06 March 2011] [12:37:11] <guido_g>	mdworker: mdwrkapi.c:190: mdwrk_recv: Assertion `zmsg_parts (msg) >= 3' failed.
| [Sunday 06 March 2011] [12:37:11] <guido_g>	Aborted (core dumped)
| [Sunday 06 March 2011] [12:37:15] <guido_g>	ok, will do
| [Sunday 06 March 2011] [12:37:22] <pieter_hintjens>	did you add the empty part?
| [Sunday 06 March 2011] [12:37:26] <guido_g>	yes
| [Sunday 06 March 2011] [12:37:29] <pieter_hintjens>	empty + protocol + command = 3
| [Sunday 06 March 2011] [12:38:38] <pieter_hintjens>	you can also enable message debugging in mdworker, pass 1 instead of 0 to API constructor
| [Sunday 06 March 2011] [12:39:03] <guido_g>	ahhh ok
| [Sunday 06 March 2011] [12:46:54] <guido_g>	found it, forgot to adapt the hb message
| [Sunday 06 March 2011] [12:47:19] <pieter_hintjens>	you should use a single method to send to a particular peer, maybe
| [Sunday 06 March 2011] [12:47:25] <guido_g>	now the md* suite works fine
| [Sunday 06 March 2011] [12:47:29] <pieter_hintjens>	nice...
| [Sunday 06 March 2011] [12:47:34] <pieter_hintjens>	we have interoperability!
| [Sunday 06 March 2011] [12:47:39] <guido_g>	yes
| [Sunday 06 March 2011] [12:48:40] <pieter_hintjens>	that was fast
| [Sunday 06 March 2011] [12:49:38] <pieter_hintjens>	where's your git?
| [Sunday 06 March 2011] [12:49:47] <guido_g>	wait, still some glitches 
| [Sunday 06 March 2011] [12:50:05] <guido_g>	and i need to test the queuing
| [Sunday 06 March 2011] [12:51:32] <guido_g>	where is the hb interval set in the broker?
| [Sunday 06 March 2011] [12:51:56] <guido_g>	need to sync mine w/ the md* values
| [Sunday 06 March 2011] [12:52:53] <guido_g>	ahh got it
| [Sunday 06 March 2011] [13:16:44] <pieter_hintjens>	g'night all...
| [Sunday 06 March 2011] [13:17:01] <guido_g>	oh
| [Sunday 06 March 2011] [13:17:02] <guido_g>	night
| [Sunday 06 March 2011] [13:51:30] <guido_g>	full interop betwenn c and python via mdp. goal achieved!
| [Sunday 06 March 2011] [17:22:59] <Guthur>	pieter_hintjens, The C# link in the language list for new examples I sent is not currently bold
| [Sunday 06 March 2011] [18:08:48] <Skaag>	I have an assertion while running the tests under /jzmq/perf
| [Sunday 06 March 2011] [18:09:12] <Skaag>	Assertion failed: msg_->flags & ZMQ_MSG_MORE (req.cpp:86)
| [Monday 07 March 2011] [04:05:05] <sejo>	is there a way to send a message to a que and have mutiple subscribers, but only one handles the message?
| [Monday 07 March 2011] [04:09:31] <guido_g>	with pub/sub not out of the box
| [Monday 07 March 2011] [04:09:49] <guido_g>	check the other socket types like push/pull
| [Monday 07 March 2011] [04:13:13] <pieter_hintjens>	g'morning
| [Monday 07 March 2011] [04:13:29] <guido_g>	howdy pieter_hintjens 
| [Monday 07 March 2011] [04:13:41] <guido_g>	saw a new spec comming up
| [Monday 07 March 2011] [04:13:45] <pieter_hintjens>	:-)
| [Monday 07 March 2011] [04:14:05] <guido_g>	atm fighting w/ github and documentation
| [Monday 07 March 2011] [04:14:26] <guido_g>	see http://guidog.github.com/pyzmq-mdp/  
| [Monday 07 March 2011] [04:14:47] <pieter_hintjens>	hey, nice
| [Monday 07 March 2011] [04:14:53] <pieter_hintjens>	how do you get the subdomain?
| [Monday 07 March 2011] [04:15:02] <guido_g>	it's the standard githup page
| [Monday 07 March 2011] [04:15:33] <pieter_hintjens>	hmm
| [Monday 07 March 2011] [04:15:43] <guido_g>	go to a repo -> admin -< check GitHup Pages
| [Monday 07 March 2011] [04:16:15] <pieter_hintjens>	yes, looking at it...
| [Monday 07 March 2011] [04:16:31] <pieter_hintjens>	nah, forget it, wasted too many years writing HTML already
| [Monday 07 March 2011] [04:16:37] <pieter_hintjens>	this is why I like wikidot
| [Monday 07 March 2011] [04:16:52] <guido_g>	i'm using Sphinx for documentation
| [Monday 07 March 2011] [04:17:08] <guido_g>	just need to fix the css refs and it should work
| [Monday 07 March 2011] [04:17:20] 	 * guido_g is not a web guy
| [Monday 07 March 2011] [04:36:37] <mikko>	good morning
| [Monday 07 March 2011] [04:37:39] <Steve-o>	afternoon
| [Monday 07 March 2011] [04:37:53] <Steve-o>	just installing msvc x64 again to test out win64 builds
| [Monday 07 March 2011] [04:39:51] <mikko>	Steve-o: i was thinking about that as well
| [Monday 07 March 2011] [04:39:55] <mikko>	msvc64 builds
| [Monday 07 March 2011] [04:40:19] <mikko>	i am investigating using amazon EC2 for linux64/win64
| [Monday 07 March 2011] [04:40:35] <mikko>	if win64 works ok i can add daily builds for openpgm as well if you want
| [Monday 07 March 2011] [04:41:05] <Steve-o>	i need to test masm64
| [Monday 07 March 2011] [04:41:52] <Steve-o>	I doubt mingw-w64 is happy with that
| [Monday 07 March 2011] [04:43:01] <Steve-o>	I complete forgot about lack of inline assembler
| [Monday 07 March 2011] [04:44:18] <pieter_hintjens>	Steve-o: afternoon... :-)
| [Monday 07 March 2011] [04:44:28] <Steve-o>	so difficult to work with 8 & 16-bit atomics
| [Monday 07 March 2011] [04:44:35] <pieter_hintjens>	I forgot to ask you whether there were patches to go into 2.1.2 or not...
| [Monday 07 March 2011] [04:45:09] <Steve-o>	I don't know whether you wish to stay on 5.0 or not
| [Monday 07 March 2011] [04:45:22] <pieter_hintjens>	I have no opinion on that...
| [Monday 07 March 2011] [04:45:24] <Steve-o>	5.0.93 was out in December as a large backport
| [Monday 07 March 2011] [04:45:32] <Steve-o>	mainly Win64 stuff, tedious
| [Monday 07 March 2011] [04:45:53] <Steve-o>	but someone else posted patches for 5.1.99 for OSX
| [Monday 07 March 2011] [04:46:08] <Steve-o>	The 5.1 branch brings in OSX support
| [Monday 07 March 2011] [04:46:13] <Steve-o>	forward ported from 3.0
| [Monday 07 March 2011] [04:46:28] <pieter_hintjens>	do you think it's doable to bring that into the 2.1.x branch of 0MQ?
| [Monday 07 March 2011] [04:46:53] <pieter_hintjens>	all I want is people who download the stable 0MQ to get OpenPGM working with it
| [Monday 07 March 2011] [04:47:47] <Steve-o>	The API is very similar, only the definition of restrict changed
| [Monday 07 March 2011] [04:48:05] <Steve-o>	I'm only testing Windows with the 5.1 branch
| [Monday 07 March 2011] [04:48:49] <pieter_hintjens>	Steve-o: are you testing OpenPGM together with 0MQ?
| [Monday 07 March 2011] [04:48:58] <Steve-o>	Mikko's autoconf changes will be really useful though
| [Monday 07 March 2011] [04:49:34] <pieter_hintjens>	mikko: can you shine a light here?
| [Monday 07 March 2011] [04:49:39] <mikko>	pieter_hintjens: sure
| [Monday 07 March 2011] [04:49:54] <mikko>	pieter_hintjens: we've been working on adding autotools build to openpgm
| [Monday 07 March 2011] [04:50:10] <mikko>	and we would invoke that build from zeromq build
| [Monday 07 March 2011] [04:50:25] <pieterh>	it's not yet in the zeromq build, then
| [Monday 07 March 2011] [04:50:28] <Steve-o>	5.1 adds cmake and autoconf build systems for release 
| [Monday 07 March 2011] [04:50:38] <mikko>	pieterh: i have a branch where this works pretty well
| [Monday 07 March 2011] [04:50:47] <pieterh>	mikko: branch off what?
| [Monday 07 March 2011] [04:50:52] <mikko>	pieterh: zeromq2
| [Monday 07 March 2011] [04:50:57] <pieterh>	what version
| [Monday 07 March 2011] [04:50:59] <pieterh>	master?
| [Monday 07 March 2011] [04:50:59] <mikko>	master
| [Monday 07 March 2011] [04:51:07] <pieterh>	ok, close enough...
| [Monday 07 March 2011] [04:51:12] <mikko>	but the changes are easy to port to any branch
| [Monday 07 March 2011] [04:51:36] <mikko>	linux and solaris are now pretty well tested 
| [Monday 07 March 2011] [04:51:39] <pieterh>	do you want to try to get this into 2.1.13?
| [Monday 07 March 2011] [04:51:40] <Steve-o>	and with that I want to test the outstanding github issues again
| [Monday 07 March 2011] [04:52:16] <pieterh>	it can go into a later stable version too but sooner seems better
| [Monday 07 March 2011] [04:52:28] <pieterh>	sorry... 2.1.3!
| [Monday 07 March 2011] [04:52:38] 	 * pieterh has version number confusion
| [Monday 07 March 2011] [04:52:44] <mikko>	well, we can work towards that goal
| [Monday 07 March 2011] [04:53:01] <mikko>	most of the work we've been doing doesn't have visibility in the zeromq community
| [Monday 07 March 2011] [04:53:11] <mikko>	as the changes tend to go to openpgm trunk
| [Monday 07 March 2011] [04:53:19] <pieterh>	indeed, it's been submarinish
| [Monday 07 March 2011] [04:53:49] <mikko>	and this hopefully helps openpgm as well
| [Monday 07 March 2011] [04:54:02] <Steve-o>	apart from I"m looking after three build systems now :O
| [Monday 07 March 2011] [04:54:02] <mikko>	as distros like to package autotools builds
| [Monday 07 March 2011] [04:54:15] <pieterh>	oh, joy... :-)
| [Monday 07 March 2011] [04:54:50] <pieterh>	ok, mikko, let's see if we can backport these changes to the 2.1 branch sometime
| [Monday 07 March 2011] [04:54:57] <pieterh>	i'm happy to help of course
| [Monday 07 March 2011] [04:55:19] <mikko>	Steve-o: what is the situation with freebsd?
| [Monday 07 March 2011] [04:55:24] <mikko>	openpgm + freebsd?
| [Monday 07 March 2011] [04:55:42] <Steve-o>	I use freebsd as part of my network testing suite
| [Monday 07 March 2011] [04:55:49] <Steve-o>	but not as a target platform
| [Monday 07 March 2011] [04:55:56] <Steve-o>	if that makes sense
| [Monday 07 March 2011] [04:56:32] <Steve-o>	I can build and monitor traffic from Solaris, Windows, and Linux perfectly
| [Monday 07 March 2011] [04:57:03] <mikko>	is there anything i can help with the builds?
| [Monday 07 March 2011] [04:57:04] <Steve-o>	but I have problems building the rest of the test suite on it, the FreeBSD networking stack is a bit too different for how the tests are written
| [Monday 07 March 2011] [04:58:35] <Steve-o>	you can try building with the unit tests, -DWITH_CHECK=true and -DWITH_TEST=true in scons
| [Monday 07 March 2011] [04:58:58] <Steve-o>	its just a lot of small differences everywhere
| [Monday 07 March 2011] [04:59:13] <mikko>	ok
| [Monday 07 March 2011] [04:59:14] <Steve-o>	annoying as Sun works fine
| [Monday 07 March 2011] [04:59:33] <mikko>	what about mac os x?
| [Monday 07 March 2011] [04:59:38] <Steve-o>	but no one is paying for it though, so meh
| [Monday 07 March 2011] [04:59:57] <Steve-o>	My desktop is a max mini, so occasionally I boot in and test
| [Monday 07 March 2011] [05:00:11] <Steve-o>	I haven't tried the test suite, basic functionality seems ok
| [Monday 07 March 2011] [05:00:14] <engwan>	Hi, I'm stumped with just a segfault and no other info
| [Monday 07 March 2011] [05:00:24] <engwan>	what might have gone wrong?
| [Monday 07 March 2011] [05:00:30] <engwan>	I'm using the ruby ffi client
| [Monday 07 March 2011] [05:00:36] <engwan>	and traced the segfault to this call
| [Monday 07 March 2011] [05:00:37] <engwan>	msg = @reqs.recv_string(0)
| [Monday 07 March 2011] [05:00:55] <mikko>	cremes: here?
| [Monday 07 March 2011] [05:00:58] <mikko>	andrewvc: here?
| [Monday 07 March 2011] [05:01:05] <mikko>	those two are the rubyists
| [Monday 07 March 2011] [05:01:06] <andrewvc>	mikko: yo
| [Monday 07 March 2011] [05:01:16] <mikko>	as far as i know
| [Monday 07 March 2011] [05:01:34] <andrewvc>	engwan: which ruby/ZMQ version are you using
| [Monday 07 March 2011] [05:02:07] <engwan>	i tried zmq 2.0.8, 2.0.10 and 2.1.0
| [Monday 07 March 2011] [05:02:11] <engwan>	none worked
| [Monday 07 March 2011] [05:02:14] <engwan>	ruby 1.9.2
| [Monday 07 March 2011] [05:02:17] <andrewvc>	hmmm
| [Monday 07 March 2011] [05:02:27] <andrewvc>	it should work well with 1.9.2/HEAD
| [Monday 07 March 2011] [05:02:41] <andrewvc>	generally, we work for compat with HEAD, not the released versions
| [Monday 07 March 2011] [05:02:43] <Steve-o>	mikko: I cannot imagine many businesses wanting to use PGM on OSX though, I wait to be surprised
| [Monday 07 March 2011] [05:02:49] <andrewvc>	however, it should work regardless
| [Monday 07 March 2011] [05:02:52] <engwan>	im actually trying to run my rails app using rack-mongrel2
| [Monday 07 March 2011] [05:02:59] <andrewvc>	what exactly are you trying to do in the code?
| [Monday 07 March 2011] [05:03:00] <mikko>	Steve-o: only developers i guess
| [Monday 07 March 2011] [05:03:16] <engwan>	and segfaults when i try to start the server
| [Monday 07 March 2011] [05:03:34] <Steve-o>	mikko: Oddly enough I was the first to port TIBCO's Rendezvous to OS X
| [Monday 07 March 2011] [05:03:56] <engwan>	i traced the segfault to line 23
| [Monday 07 March 2011] [05:03:58] <engwan>	in https://github.com/darkhelmet/rack-mongrel2/blob/master/lib/mongrel2/connection.rb
| [Monday 07 March 2011] [05:04:05] <Steve-o>	mikko: it made sales and architects happy to show off
| [Monday 07 March 2011] [05:04:57] <Steve-o>	mikko: plus it took nearly 2 years for TIBCO to actually do it themselves
| [Monday 07 March 2011] [05:05:42] <mikko>	hehehe
| [Monday 07 March 2011] [05:05:46] <Steve-o>	mikko: OSX APIs are older than FreeBSD though which is really gnarly
| [Monday 07 March 2011] [05:06:16] <mikko>	Steve-o: but it has a pretty gui!
| [Monday 07 March 2011] [05:06:30] <Steve-o>	I'm under the impression Lion is getting a boost though
| [Monday 07 March 2011] [05:07:22] <Steve-o>	and hopefully a tidy up for IPv6
| [Monday 07 March 2011] [05:08:54] <Steve-o>	I still don't have a Java API yet because the platform is too old, when will Oracle push v7 out of the door?
| [Monday 07 March 2011] [05:10:47] <Steve-o>	bindings are all pretty difficult to implement due to immaturity of IPv6 and SSM support :(
| [Monday 07 March 2011] [05:13:50] <Steve-o>	I've tried Erlang, Java, Perl, and Python.  All I managed to get working was a trivial Perl API.
| [Monday 07 March 2011] [05:18:24] <Guthur>	IPv6 seems to taking along time to get ready, in general
| [Monday 07 March 2011] [05:18:32] <Guthur>	considering it was need like yesterday
| [Monday 07 March 2011] [05:19:06] <Steve-o>	The APIs are hilarious, they have changed like 3-4 times
| [Monday 07 March 2011] [05:20:35] <Steve-o>	And clearly most developers are not going to get scopes or zone identifiers working well
| [Monday 07 March 2011] [05:22:01] <Steve-o>	And Solaris, ugh, you cannot assign a static IPv6 address (!)
| [Monday 07 March 2011] [05:23:42] <Steve-o>	Setup RIP and give everyone else on the network another address for fun
| [Monday 07 March 2011] [05:27:21] <Steve-o>	Also, the PGM protocol is IP agnostic so you can end up with really insane environments hoping between families
| [Monday 07 March 2011] [05:30:22] <Guthur>	Steve-o: sounds like fun times, hehe
| [Monday 07 March 2011] [05:33:28] <Steve-o>	mmm, CMake not generating a Makefile for Win64, ...
| [Monday 07 March 2011] [05:34:11] <Guthur>	pieterh: still not renamed majordomo yet?
| [Monday 07 March 2011] [05:34:31] <pieterh>	Guthur: no intention, that's the name of the pattern
| [Monday 07 March 2011] [05:34:51] <pieterh>	you mean because of the old mailing list software?
| [Monday 07 March 2011] [05:34:55] <Guthur>	yep
| [Monday 07 March 2011] [05:35:00] <pieterh>	nah
| [Monday 07 March 2011] [05:35:04] <Guthur>	cool
| [Monday 07 March 2011] [05:35:17] <stimpie>	is there a limit on the number of 'connections' a socket can have? 
| [Monday 07 March 2011] [05:35:17] <Guthur>	I just thought you were going  to change it
| [Monday 07 March 2011] [05:37:36] <pieterh>	Guthur: the software seems quite dead, sadly
| [Monday 07 March 2011] [05:37:44] <pieterh>	stimpie: not in 0mq, but your OS will have limits
| [Monday 07 March 2011] [05:39:17] <andrewvc>	engwan: I'm not familiar with that codebase
| [Monday 07 March 2011] [05:39:28] <andrewvc>	does it use threading at all by chance?
| [Monday 07 March 2011] [05:39:40] <engwan>	i actually figured out something
| [Monday 07 March 2011] [05:39:44] <andrewvc>	oh?
| [Monday 07 March 2011] [05:39:47] <engwan>	it segfaults when i use threading
| [Monday 07 March 2011] [05:39:53] <engwan>	coz im using a custom loader
| [Monday 07 March 2011] [05:39:59] <engwan>	that forks into separate threads
| [Monday 07 March 2011] [05:40:33] <engwan>	i was trying to achieve this: load rails, then fork 3 processes
| [Monday 07 March 2011] [05:40:44] <engwan>	each connecting to the same zeromq/mongrel
| [Monday 07 March 2011] [05:40:48] <andrewvc>	yeah
| [Monday 07 March 2011] [05:41:02] <engwan>	are there inherent problems with threading and zeromq?
| [Monday 07 March 2011] [05:41:03] <andrewvc>	well, sharing sockets between threads isn't something you're supposed to do with zmq
| [Monday 07 March 2011] [05:41:17] <andrewvc>	you can pass one between threads, but you may not concurrently access one, so far as I know
| [Monday 07 March 2011] [05:41:29] <andrewvc>	at any rate, here's what I'd do
| [Monday 07 March 2011] [05:41:41] <andrewvc>	have a single thread that handles all messages on a single socket
| [Monday 07 March 2011] [05:41:45] <andrewvc>	and delegate to worker processes
| [Monday 07 March 2011] [05:42:12] <andrewvc>	that, or spawn one socket per thread
| [Monday 07 March 2011] [05:43:43] <engwan>	hmm.. but i tried just spawning one thread.. and it still segfaults
| [Monday 07 March 2011] [05:44:01] <andrewvc>	hmmm, if the thread is different than the one that created the socket, you may still have issues
| [Monday 07 March 2011] [05:44:08] <engwan>	my loader forks/execs then creates the socket
| [Monday 07 March 2011] [05:44:12] <engwan>	then segfault
| [Monday 07 March 2011] [05:44:15] <andrewvc>	ohhhhhhhhhh
| [Monday 07 March 2011] [05:44:19] <andrewvc>	there's your problem
| [Monday 07 March 2011] [05:44:23] <engwan>	but if i do it directly
| [Monday 07 March 2011] [05:44:25] <engwan>	without fork
| [Monday 07 March 2011] [05:44:27] <engwan>	it works
| [Monday 07 March 2011] [05:44:30] <andrewvc>	yeah, exactly
| [Monday 07 March 2011] [05:44:41] <pieterh>	sockets are not thread safe
| [Monday 07 March 2011] [05:44:42] <andrewvc>	I've found that requiring ffi-rzmq before forking does not work
| [Monday 07 March 2011] [05:44:52] <andrewvc>	so, don't require ffi-rzmq till after you've forked
| [Monday 07 March 2011] [05:44:53] <engwan>	ohh...
| [Monday 07 March 2011] [05:45:06] <andrewvc>	each process will need its own context anyway
| [Monday 07 March 2011] [05:45:35] <andrewvc>	still, you should have one socket per thread
| [Monday 07 March 2011] [05:45:53] <andrewvc>	or just have an IO dedicated thread that handles a single socket
| [Monday 07 March 2011] [05:46:05] <andrewvc>	you can even use eventmachine for that with em-zeromq
| [Monday 07 March 2011] [05:46:17] <andrewvc>	kinda like a zmq version of thin
| [Monday 07 March 2011] [05:46:35] <andrewvc>	though, I with a low number of sockets there's not much benefit
| [Monday 07 March 2011] [05:50:08] <andrewvc>	pieterh: does that advice make sense for you? Would you go one socket per worker, or just spawn a single thread reading off the sock and delegating to workers
| [Monday 07 March 2011] [05:50:16] <andrewvc>	in a multi-threaded up
| [Monday 07 March 2011] [05:50:51] <pieterh>	... typically, one TCP socket facing clients, and multiple inproc sockets sending work to/from workers
| [Monday 07 March 2011] [05:51:27] <pieterh>	you need to know why you're using multiple threads
| [Monday 07 March 2011] [05:51:35] <andrewvc>	well, it's engwan's thing
| [Monday 07 March 2011] [05:51:40] <andrewvc>	a mongrel2 handler
| [Monday 07 March 2011] [05:51:44] <andrewvc>	each thread has a full rails process
| [Monday 07 March 2011] [05:52:03] <pieterh>	each thread is a handler?
| [Monday 07 March 2011] [05:52:18] <andrewvc>	I tend to think inproc isn't so good in ruby, as there's a serialization cost. In C you can just stuff a struct in one, in ruby you have to serialize/deserialize
| [Monday 07 March 2011] [05:52:32] <andrewvc>	yeah, each thread handles a separate HTTP request using rails
| [Monday 07 March 2011] [05:52:42] <engwan>	I'm just creating an easier way to create lots of rails processes connecting to mongrel2
| [Monday 07 March 2011] [05:52:50] <engwan>	instead of starting each one individually
| [Monday 07 March 2011] [05:52:58] <engwan>	i thought of starting one then forking
| [Monday 07 March 2011] [05:53:06] <andrewvc>	well, here's the other thing about having a master thread
| [Monday 07 March 2011] [05:53:11] <andrewvc>	you can have a local-global request queue
| [Monday 07 March 2011] [05:53:13] <pieterh>	engwan: ok, so give each thread its own context
| [Monday 07 March 2011] [05:53:23] <pieterh>	its own sockets, let them connect independently back to mongrel2
| [Monday 07 March 2011] [05:53:38] <engwan>	yup, thats what im doing
| [Monday 07 March 2011] [05:53:43] <andrewvc>	i mean, as I understand it, ZMQ will round-robin requests to various workers
| [Monday 07 March 2011] [05:53:53] <andrewvc>	so you want the workers pulling work, not getting it pushed to them, ideally
| [Monday 07 March 2011] [05:53:58] <engwan>	you were right andrewvc regarding the require thing
| [Monday 07 March 2011] [05:54:04] <andrewvc>	ah, cool, glad I could help
| [Monday 07 March 2011] [05:54:35] <engwan>	yeah, im not pushing work to the workers, rather the workers themselves connect to mongrel2 and ask for work
| [Monday 07 March 2011] [05:54:41] <andrewvc>	you could either use the router/dealer stuff for that, or the easy way would be just to use a ruby construct to pull the work
| [Monday 07 March 2011] [05:54:46] <pieterh>	engwan: sounds fine, where are you creating the context?
| [Monday 07 March 2011] [05:54:53] <andrewvc>	yeah, I'm not nuts about that part of mongrel2
| [Monday 07 March 2011] [05:55:01] <andrewvc>	since it uses a PUSH socket
| [Monday 07 March 2011] [05:55:06] <engwan>	i created the context after forking
| [Monday 07 March 2011] [05:55:13] <andrewvc>	PUSH has no backpressure right pieter?
| [Monday 07 March 2011] [05:55:16] <pieterh>	so as far as zeromq is concerned, this should all be safe
| [Monday 07 March 2011] [05:55:21] <andrewvc>	so, a slow worker will get equal work, correct
| [Monday 07 March 2011] [05:55:28] <pieterh>	andrewvc: nope, it's just fanout
| [Monday 07 March 2011] [05:55:36] <pieterh>	i mean, yes, you're right
| [Monday 07 March 2011] [05:55:48] <andrewvc>	yeah, so engwan, I think that's kind of a design deficiency in mongrel2
| [Monday 07 March 2011] [05:56:02] <andrewvc>	in that a slow worker will queue messages, even while others are free
| [Monday 07 March 2011] [05:56:16] <andrewvc>	you could mitigate this in your handler by implementing your own global queue
| [Monday 07 March 2011] [05:56:20] <andrewvc>	off a single socket
| [Monday 07 March 2011] [05:56:46] <pieterh>	what mongrel2 should use is the LRU queue pattern
| [Monday 07 March 2011] [05:57:00] <pieterh>	but I think engwan's question is "why is it crashing?" :-)
| [Monday 07 March 2011] [05:57:01] <engwan>	oh, so these workers listen to the socket and receive zeromq messages, plainly round robin?
| [Monday 07 March 2011] [05:57:07] <andrewvc>	oh, the crashing part has been fixed
| [Monday 07 March 2011] [05:57:13] <andrewvc>	it was related to forking
| [Monday 07 March 2011] [05:57:18] <pieterh>	ah, ok, excellent
| [Monday 07 March 2011] [05:57:27] <pieterh>	so engwan, read Chapter 3 of the Guide
| [Monday 07 March 2011] [05:57:30] <pieterh>	(and 1 and 2)
| [Monday 07 March 2011] [05:57:43] <pieterh>	and if you want a really balanced mongrel2 engine...
| [Monday 07 March 2011] [05:57:50] <andrewvc>	pieterh: I agree about the LRU queue
| [Monday 07 March 2011] [05:58:03] <pieterh>	one LRU queue that accepts everything from mongrel2 and then distributes that to workers on a LRU basis
| [Monday 07 March 2011] [05:58:05] <andrewvc>	but mongrel 2 uses PUSH and SUB
| [Monday 07 March 2011] [05:58:09] <pieterh>	np
| [Monday 07 March 2011] [05:58:15] <andrewvc>	ah, I see, just inject it eh
| [Monday 07 March 2011] [05:58:21] <pieterh>	proxy
| [Monday 07 March 2011] [05:58:22] <andrewvc>	that'd be pretty cool actually
| [Monday 07 March 2011] [05:58:33] <engwan>	ok, will read more about zeromq.. i read the mongrel2 docs but forgot to read the zeromq docs
| [Monday 07 March 2011] [05:58:33] <pieterh>	0MQ is a construction kit
| [Monday 07 March 2011] [05:58:34] <engwan>	:D
| [Monday 07 March 2011] [05:58:41] <andrewvc>	that is cool about zmq, that you can fix a design flaw like that so easily
| [Monday 07 March 2011] [05:58:50] <pieterh>	it's not a design flaw
| [Monday 07 March 2011] [05:58:59] <pieterh>	remember that Zed made this before we'd documented any LRU patterns
| [Monday 07 March 2011] [05:59:06] <andrewvc>	ah, yeah, sorry, that's correct
| [Monday 07 March 2011] [05:59:20] <pieterh>	if workers are reasonably behaved, it's simple and fast since there's no chit chat
| [Monday 07 March 2011] [05:59:24] <andrewvc>	yeah
| [Monday 07 March 2011] [06:00:35] <andrewvc>	someone, not me, should write a LRU Queue middleware in some generic fashion for mongrel 2
| [Monday 07 March 2011] [06:01:14] <pieterh>	<insert call for volunteers here> :-)
| [Monday 07 March 2011] [06:01:19] <andrewvc>	lol
| [Monday 07 March 2011] [06:01:26] <engwan>	lol
| [Monday 07 March 2011] [06:02:04] <guido_g>	hehe
| [Monday 07 March 2011] [06:03:03] <guido_g>	pieterh: http://guidog.github.com/pyzmq-mdp/ <- the link you might want to add to the implementions section or mdp project page
| [Monday 07 March 2011] [06:03:12] <andrewvc>	pieterh: well, is it LRU you want really
| [Monday 07 March 2011] [06:03:54] <andrewvc>	nm, I guess any router/dealer would work. the important thing is the clients don't queue messages
| [Monday 07 March 2011] [06:04:18] <pieterh>	guido_g: done
| [Monday 07 March 2011] [06:04:22] <guido_g>	thx
| [Monday 07 March 2011] [06:05:03] <pieterh>	andrewvc: yes, LRU is the pattern that comes back again and again
| [Monday 07 March 2011] [06:05:44] <andrewvc>	is that because it guarantees that our workers service one req at a time and leave queuing to the router
| [Monday 07 March 2011] [06:06:03] <andrewvc>	just making sure I'm on the same page?
| [Monday 07 March 2011] [06:06:24] <pieterh>	yes, it basically:
| [Monday 07 March 2011] [06:06:30] <pieterh>	- allows synchronous workers
| [Monday 07 March 2011] [06:06:39] <pieterh>	- only gives work to a worker that's explicitly ready
| [Monday 07 March 2011] [06:06:49] <pieterh>	- queues requests in one place
| [Monday 07 March 2011] [06:07:19] <pieterh>	all of the more sophisticated queuing broker designs we make are based on LRU
| [Monday 07 March 2011] [06:07:27] <andrewvc>	hmm, is there zdevice for it yet?
| [Monday 07 March 2011] [06:07:31] <pieterh>	sure
| [Monday 07 March 2011] [06:07:49] <pieterh>	mdbroker example, and guido_g's Python implementation he just referred to
| [Monday 07 March 2011] [06:07:56] <pieterh>	this is MDP, rather more than basic LRU
| [Monday 07 March 2011] [06:08:33] <pieterh>	lruqueue example, etc.
| [Monday 07 March 2011] [06:09:03] <andrewvc>	cool
| [Monday 07 March 2011] [06:09:35] <andrewvc>	I'll be  integrating this into my own work for sure. I really need to re-read the guide, there's more and more good stuff in there
| [Monday 07 March 2011] [06:10:24] <guido_g>	i think over time it'll evolve into the standard book for using mq
| [Monday 07 March 2011] [06:10:40] <andrewvc>	yeah
| [Monday 07 March 2011] [06:10:47] <pieterh>	guido_g: that's kind of the idea, yeah
| [Monday 07 March 2011] [06:10:47] <guido_g>	wie might even see a dead tree edition -- will we?
| [Monday 07 March 2011] [06:10:50] <pieterh>	yup
| [Monday 07 March 2011] [06:10:56] <pieterh>	lulu.com eventually
| [Monday 07 March 2011] [06:15:56] <pieterh>	ok, have to go, cyal
| [Monday 07 March 2011] [06:16:47] <guido_g>	cu
| [Monday 07 March 2011] [06:17:19] <guido_g>	oh, lunch time already
| [Monday 07 March 2011] [08:16:45] <yrashk>	hey
| [Monday 07 March 2011] [08:17:02] <yrashk>	out of curiosity, does 0mq work on android and/or iOS?
| [Monday 07 March 2011] [08:22:19] <Guthur>	yrashk: I remember someone mentioning doing it
| [Monday 07 March 2011] [08:22:32] <yrashk>	android or iOS?
| [Monday 07 March 2011] [08:22:32] <Guthur>	sorry I can't remember any other details 
| [Monday 07 March 2011] [08:22:58] <Guthur>	yrashk: I can't remember tbh, it was some smartphone though
| [Monday 07 March 2011] [08:23:10] <yrashk>	I see
| [Monday 07 March 2011] [08:23:13] <Guthur>	sorry
| [Monday 07 March 2011] [08:23:14] <yrashk>	thanks anyway :)
| [Monday 07 March 2011] [08:23:32] <Guthur>	fire something onto the mailing list
| [Monday 07 March 2011] [08:23:54] <yrashk>	not curious enough
| [Monday 07 March 2011] [08:24:05] <yrashk>	was just chatting with a friend about a project he's working on for his employer
| [Monday 07 March 2011] [08:25:29] <Guthur>	http://www.zeromq.org/distro:android
| [Monday 07 March 2011] [08:26:12] <yrashk>	thanks!
| [Monday 07 March 2011] [08:27:04] <Guthur>	http://www.mail-archive.com/zeromq-dev@lists.zeromq.org/msg05684.html
| [Monday 07 March 2011] [08:27:14] <Guthur>	there was the mailing thread ^^^
| [Monday 07 March 2011] [08:44:51] <Guthur>	pieterh: png?
| [Monday 07 March 2011] [08:44:54] <Guthur>	ping*
| [Monday 07 March 2011] [08:45:12] <pieterh>	Guthur: hi
| [Monday 07 March 2011] [08:45:36] <Guthur>	the link to the new C# examples I sent is not bold
| [Monday 07 March 2011] [08:45:45] <Guthur>	in the language list below the example
| [Monday 07 March 2011] [08:45:51] <pieterh>	it should be fixed now, requires a rebuild of the docs
| [Monday 07 March 2011] [08:46:01] <Guthur>	oh ok
| [Monday 07 March 2011] [08:46:27] <Guthur>	oh yeah, sorry i needed to refresh
| [Monday 07 March 2011] [08:46:28] <Guthur>	doh
| [Monday 07 March 2011] [08:46:40] <pieterh>	so you're at 61% :-)
| [Monday 07 March 2011] [08:46:59] <Guthur>	i'm on peering2 at the moment
| [Monday 07 March 2011] [08:47:00] <pieterh>	oh, sorry... 54%...
| [Monday 07 March 2011] [08:47:15] <Guthur>	oh, I thought I was 54% before I sent those
| [Monday 07 March 2011] [08:47:20] <pieterh>	hang on, scoreboard seems wrong...
| [Monday 07 March 2011] [08:47:28] <pieterh>	these pages are not produced dynamically
| [Monday 07 March 2011] [08:51:01] <Guthur>	btw, can more than one socket bind to a named pipe?
| [Monday 07 March 2011] [08:51:22] <pieterh>	named pipe, you mean ipc? nope
| [Monday 07 March 2011] [08:51:24] <Guthur>	ie. IPC
| [Monday 07 March 2011] [08:51:39] <Guthur>	how is peering2 working then
| [Monday 07 March 2011] [08:52:16] <pieterh>	it's using different ipc endpoints but the names may be confusingly similar
| [Monday 07 March 2011] [08:52:21] <Guthur>	    //  Prepare local frontend and backend     void *localfe = zmq_socket (context, ZMQ_XREP);     zmq_bind (localfe, "ipc://localfe.ipc");     void *localbe = zmq_socket (context, ZMQ_XREP);     zmq_bind (localbe, "ipc://localbe.ipc");
| [Monday 07 March 2011] [08:52:24] <Guthur>	arrrgh
| [Monday 07 March 2011] [08:52:25] <Guthur>	sorry
| [Monday 07 March 2011] [08:52:51] <Guthur>	those binds are causing an error when I try to run two instances
| [Monday 07 March 2011] [08:53:12] <pieterh>	yeah, you need different peer names
| [Monday 07 March 2011] [08:53:21] <pieterh>	peering2 you me, peering2 me you
| [Monday 07 March 2011] [08:53:38] <Guthur>	but those are hardcoded strings 
| [Monday 07 March 2011] [08:54:00] <pieterh>	peering2 takes the peer name from the command line
| [Monday 07 March 2011] [08:55:04] <Guthur>	but they are not used for the localfe and localbe
| [Monday 07 March 2011] [08:55:18] <Guthur>	they are used by the cloud ones
| [Monday 07 March 2011] [08:55:47] <Guthur>	am I suppose to change those hardcoded strings
| [Monday 07 March 2011] [08:55:51] <Guthur>	I assume not
| [Monday 07 March 2011] [09:00:13] <private_meta>	dammit... the first character of a message being 0 in the zmsg example causes SERIOUS problems for using any type of intelligent container
| [Monday 07 March 2011] [09:03:09] <pieterh>	Guthur: sorry, was getting a coffee... let me check
| [Monday 07 March 2011] [09:03:36] <pieterh>	heh, IMO peering2 just ignores the error
| [Monday 07 March 2011] [09:04:51] <pieterh>	this used to use inproc and I switched to ipc
| [Monday 07 March 2011] [09:05:25] <pieterh>	localfe and localbe can't be hardcoded on ipc as they are
| [Monday 07 March 2011] [09:06:27] <pieterh>	I changed the client & worker threads to use their own contexts
| [Monday 07 March 2011] [09:06:38] <pieterh>	I'll need to make more changes... thanks for finding this error
| [Monday 07 March 2011] [09:15:11] <Guthur>	pieterh: not a bother
| [Monday 07 March 2011] [09:15:42] <pieterh>	Guthur: ok, I've fixed peering2 and peering3
| [Monday 07 March 2011] [09:16:00] <Guthur>	cheers, I'll update mine later
| [Monday 07 March 2011] [09:16:04] <pieterh>	you can find the new versions in the git, they use unique endpoints and they use assertions properly on binds
| [Monday 07 March 2011] [09:16:13] <Guthur>	cool
| [Monday 07 March 2011] [09:16:28] <Guthur>	I want to get up to Ch4 asap
| [Monday 07 March 2011] [09:16:30] <pieterh>	it's really great that you double-check my work like this
| [Monday 07 March 2011] [09:16:48] <pieterh>	getting the examples right is sometimes delicate
| [Monday 07 March 2011] [09:16:57] <Guthur>	pieterh: tbh it's only because I was implementing the example and wanted to test my own code
| [Monday 07 March 2011] [09:17:31] <Guthur>	if I had had completed then it would have gone by unchecked
| [Monday 07 March 2011] [09:17:32] <pieterh>	it's a treasure trove, the examples archive
| [Monday 07 March 2011] [09:17:43] <private_meta>	hmm
| [Monday 07 March 2011] [09:17:51] <pieterh>	private_meta: still having trouble with nulls?
| [Monday 07 March 2011] [09:18:02] <private_meta>	I circumvented it
| [Monday 07 March 2011] [09:18:05] <private_meta>	I have a different problem now
| [Monday 07 March 2011] [09:18:10] <pieterh>	i had to hack around it too, in zmsg
| [Monday 07 March 2011] [09:18:17] <private_meta>	When I debug the program, it works, when I run it normally, it fails
| [Monday 07 March 2011] [09:18:36] <pieterh>	usually a timing issue... so don't debug it, use prints
| [Monday 07 March 2011] [09:18:39] <private_meta>	In the zmsg test, when normally executing it without gdb, it doesn't receive the "Hello"
| [Monday 07 March 2011] [09:18:53] <pieterh>	multiple threads, I assume
| [Monday 07 March 2011] [09:18:55] <private_meta>	Well, it's the OTHER way around, when I use prints to debug it fails
| [Monday 07 March 2011] [09:18:56] <private_meta>	no
| [Monday 07 March 2011] [09:18:57] <private_meta>	one thread
| [Monday 07 March 2011] [09:19:02] <private_meta>	your zmsg example, c++ified
| [Monday 07 March 2011] [09:19:11] <pieterh>	which zmsg example? there are... a few...
| [Monday 07 March 2011] [09:19:20] <pieterh>	ah, I mean, what test program
| [Monday 07 March 2011] [09:19:22] <private_meta>	the one in the master branch, C folder, zmsg.h
| [Monday 07 March 2011] [09:19:33] <pieterh>	the selftest method?
| [Monday 07 March 2011] [09:19:36] <private_meta>	Yes
| [Monday 07 March 2011] [09:19:40] 	 * pieterh checks
| [Monday 07 March 2011] [09:20:33] <pieterh>	hmm, so it sends a message to itself and checks it read back the right stuff
| [Monday 07 March 2011] [09:20:50] <pieterh>	my advice is (a) forget the case where it works, gdb, and use only the case where it breaks
| [Monday 07 March 2011] [09:21:08] <pieterh>	and (b) put printfs in the recv method to see what you're actually getting back, if anything
| [Monday 07 March 2011] [09:21:56] <private_meta>	damn, i just removed the print statements because it DID work in debug
| [Monday 07 March 2011] [09:23:02] <private_meta>	If I put a sleep(1) before the receive method, it works
| [Monday 07 March 2011] [09:23:51] <pieterh>	you're using the same ipc:// transport?
| [Monday 07 March 2011] [09:24:45] <pieterh>	0MQ has some of these weird timing issues in various places
| [Monday 07 March 2011] [09:24:54] <pieterh>	I'll have to document them, there are a bunch of them
| [Monday 07 March 2011] [09:25:07] <private_meta>	pieterh: It's pretty much a translation, I didn't change anything important in it's meaning
| [Monday 07 March 2011] [09:25:54] <pieterh>	private_meta: ok, first thing is to forget the case where it works, and identify which timing issue it is
| [Monday 07 March 2011] [09:26:12] <pieterh>	move the sleep around... after the bind, before connect
| [Monday 07 March 2011] [09:26:46] <pieterh>	I can't see what it'd be, right away
| [Monday 07 March 2011] [09:27:39] <private_meta>	pieterh: It HAS to be between send and receive
| [Monday 07 March 2011] [09:28:08] <pieterh>	could be between bind and connect
| [Monday 07 March 2011] [09:28:33] <pieterh>	it's one thread, there are only two async things happening
| [Monday 07 March 2011] [09:28:45] <private_meta>	no, I mean, if the sleep isn't between send and receive, it won't work
| [Monday 07 March 2011] [09:29:09] <pieterh>	are you doing a non-blocking recv?
| [Monday 07 March 2011] [09:29:21] <pieterh>	recv should block forever until there's input
| [Monday 07 March 2011] [09:29:32] <private_meta>	Apparently it receives an empty message
| [Monday 07 March 2011] [09:29:38] <private_meta>	Ok, wait a second
| [Monday 07 March 2011] [09:29:55] <private_meta>	I'd like to put it on gist, but git lost my logon information
| [Monday 07 March 2011] [09:30:59] <pieterh>	silly git...
| [Monday 07 March 2011] [09:31:04] <pieterh>	:-)
| [Monday 07 March 2011] [09:32:07] <private_meta>	ok http://codepad.org/7VjMTxTR this is the code
| [Monday 07 March 2011] [09:32:27] <private_meta>	http://codepad.org/rlTpafqH This is the output
| [Monday 07 March 2011] [09:32:49] <private_meta>	The Message, part 2, should read "[005] Hello", but it is empty
| [Monday 07 March 2011] [09:33:32] <private_meta>	http://codepad.org/ucswZvfR output if sleep between zm.send() and zm.recv() is in place
| [Monday 07 March 2011] [09:34:50] <yrashk>	pieterh: speaking of ezmq/erlzmq, if we'll decide to rename, would you consider creating zeromq/erlzmq2 repo?
| [Monday 07 March 2011] [09:35:32] <pieterh>	yrashk: of course
| [Monday 07 March 2011] [09:35:38] <yrashk>	great
| [Monday 07 March 2011] [09:35:54] <pieterh>	private_meta: weird, so it gets a couple of parts correctly and not the remainder...
| [Monday 07 March 2011] [09:36:03] <yrashk>	Dhammika already +1'd this renaming
| [Monday 07 March 2011] [09:36:10] <yrashk>	I am waiting for others to vote
| [Monday 07 March 2011] [09:36:17] <private_meta>	pieterh: It even gets the size of the message right
| [Monday 07 March 2011] [09:37:08] <private_meta>	I've put in a line to output content and size of the message
| [Monday 07 March 2011] [09:37:16] <private_meta>	recv: "", size 17
| [Monday 07 March 2011] [09:37:17] <private_meta>	recv: "", size 5
| [Monday 07 March 2011] [09:37:18] <private_meta>	I get this
| [Monday 07 March 2011] [09:37:27] <pieterh>	private_meta: hang on, there message output is strange
| [Monday 07 March 2011] [09:37:30] <private_meta>	For the first message that's ok, as the "0" prevents a normal output
| [Monday 07 March 2011] [09:37:31] <pieterh>	*the
| [Monday 07 March 2011] [09:37:42] <private_meta>	The second message should show "Hello"
| [Monday 07 March 2011] [09:37:48] <private_meta>	what's strange in the output?
| [Monday 07 March 2011] [09:38:13] <pieterh>	well, we send 1 part, "hello" on an XREQ socket
| [Monday 07 March 2011] [09:38:24] <pieterh>	and we receive on an XREP socket, which should prepend the identity
| [Monday 07 March 2011] [09:38:38] <pieterh>	so the message should be two frames, identity and then hello
| [Monday 07 March 2011] [09:38:49] <pieterh>	http://codepad.org/ucswZvfR is not correct
| [Monday 07 March 2011] [09:39:14] <private_meta>	pieterh: where is it not correct?
| [Monday 07 March 2011] [09:39:28] <private_meta>	Wait, let me change something
| [Monday 07 March 2011] [09:39:49] <pieterh>	it should print two frames, identity + hello body
| [Monday 07 March 2011] [09:40:37] <pieterh>	ok, this is for multiple messages, not just the first one
| [Monday 07 March 2011] [09:40:45] <pieterh>	I think you're assembling the frames wrongly
| [Monday 07 March 2011] [09:41:40] <private_meta>	I've made a new line between each dump now
| [Monday 07 March 2011] [09:41:40] <private_meta>	http://codepad.org/PeaZD9GI
| [Monday 07 March 2011] [09:41:41] <pieterh>	see http://codepad.org/nSsVMEhq
| [Monday 07 March 2011] [09:41:45] <private_meta>	The first one is a dump of sendmessage
| [Monday 07 March 2011] [09:41:52] <private_meta>	the second and third are received messages
| [Monday 07 March 2011] [09:41:57] <pieterh>	ah, ok
| [Monday 07 March 2011] [09:42:48] <pieterh>	so... in the case when it fails
| [Monday 07 March 2011] [09:42:49] <private_meta>	So, the output is at it is supposed to look like, but only if there is some waiting between send and receive
| [Monday 07 March 2011] [09:42:58] <pieterh>	you read the ID frame but not the content frame
| [Monday 07 March 2011] [09:43:24] <pieterh>	can you remove all sleeps, and add printfs until you know the cause of that 'not reading the content frame'?
| [Monday 07 March 2011] [09:43:32] <private_meta>	I read ID size and message, and I read content size, but not content message
| [Monday 07 March 2011] [09:43:43] <pieterh>	how can you read the content size?
| [Monday 07 March 2011] [09:43:49] <private_meta>	How should I know?
| [Monday 07 March 2011] [09:43:56] <private_meta>	I just tested it
| [Monday 07 March 2011] [09:44:13] <private_meta>	see @15:37
| [Monday 07 March 2011] [09:44:13] <pieterh>	:-) I mean, you ask 0MQ for a 'message' and it returns you size+data
| [Monday 07 March 2011] [09:44:22] <private_meta>	I get the message
| [Monday 07 March 2011] [09:44:33] <private_meta>	message.data returns zip, message.size returns the correct size of the message
| [Monday 07 March 2011] [09:44:52] <pieterh>	wow
| [Monday 07 March 2011] [09:45:01] <private_meta>	The message should be "Hello", so the size is correct to be "5"
| [Monday 07 March 2011] [09:45:07] <pieterh>	I've never seen that before
| [Monday 07 March 2011] [09:45:23] <private_meta>	Story of my life
| [Monday 07 March 2011] [09:46:19] <pieterh>	what OS are you using?
| [Monday 07 March 2011] [09:46:23] <private_meta>	Ubuntu
| [Monday 07 March 2011] [09:46:25] <private_meta>	64bit
| [Monday 07 March 2011] [09:46:33] <pieterh>	multicore box?
| [Monday 07 March 2011] [09:46:59] <pieterh>	latest version of 0MQ?
| [Monday 07 March 2011] [09:47:18] <pieterh>	ah, wait...
| [Monday 07 March 2011] [09:47:22] <pieterh>	:-) obviously
| [Monday 07 March 2011] [09:47:25] <pieterh>	hehe
| [Monday 07 March 2011] [09:47:42] <private_meta>	I'm using it on a VirtualBox Virtual Machine
| [Monday 07 March 2011] [09:47:49] <private_meta>	zmq 2.1.1
| [Monday 07 March 2011] [09:48:02] <pieterh>	you are indeed sending 5 bytes
| [Monday 07 March 2011] [09:48:16] <pieterh>	but the buffer you are sending is not hanging around
| [Monday 07 March 2011] [09:48:49] <pieterh>	let me double check how you implemented zmq_send...
| [Monday 07 March 2011] [09:49:11] <pieterh>	The "I send stuff and receive garbage" symptom comes from sending from a transient buffer
| [Monday 07 March 2011] [09:49:34] <pieterh>	socket.send is not copying, I assume
| [Monday 07 March 2011] [09:50:17] <private_meta>	hm?
| [Monday 07 March 2011] [09:50:32] <pieterh>	I'm not familiar with exactly how the C++ API works, but...
| [Monday 07 March 2011] [09:51:00] <pieterh>	but look at how the C zmsg_send function sends a frame:
| [Monday 07 March 2011] [09:51:01] <pieterh>	            zmq_msg_init_size (&message, size);
| [Monday 07 March 2011] [09:51:01] <pieterh>	            memcpy (zmq_msg_data (&message), data, size);
| [Monday 07 March 2011] [09:51:59] <private_meta>	&message is syntactically impossible there
| [Monday 07 March 2011] [09:52:24] <pieterh>	that's not the point (message is a 0MQ message here)
| [Monday 07 March 2011] [09:52:29] <pieterh>	the point is memcpy
| [Monday 07 March 2011] [09:52:39] <private_meta>	ah, that's what you mean
| [Monday 07 March 2011] [09:53:10] <private_meta>	Instead of memcpy I use rebuild... You think rebuild can't be used for that?
| [Monday 07 March 2011] [09:53:53] <private_meta>	Don't tell me I can't use the message without memcpy
| [Monday 07 March 2011] [09:53:55] <pieterh>	I've no idea but when you send "Hello" and receive "?@$AS" it's because the buffer you sent disappeared before 0MQ could asynchronously finish sending
| [Monday 07 March 2011] [09:54:24] <private_meta>	hmm
| [Monday 07 March 2011] [09:54:24] <pieterh>	You should be able to send from the zmsg frames, directly
| [Monday 07 March 2011] [09:54:35] <private_meta>	What do you mean by that?
| [Monday 07 March 2011] [09:55:09] <pieterh>	where is the C++ API documented?
| [Monday 07 March 2011] [09:55:16] <pieterh>	I've never used it
| [Monday 07 March 2011] [09:55:27] <private_meta>	Good question... I honestly don't know
| [Monday 07 March 2011] [09:55:32] <mikko>	zmq.hpp ?
| [Monday 07 March 2011] [09:55:34] <pieterh>	ok, checking
| [Monday 07 March 2011] [09:55:39] <pieterh>	http://api.zeromq.org/2-1-1:zmq-cpp
| [Monday 07 March 2011] [09:56:01] <private_meta>	mikko: there are hardly any comments in there ;)
| [Monday 07 March 2011] [09:56:48] <pieterh>	god, that documentation is terrible
| [Monday 07 March 2011] [09:56:58] <guido_g>	private_meta: memcpy(msg->data(), s.c_str(), ms);
| [Monday 07 March 2011] [09:57:02] <pieterh>	it says rebuild is "equivalent to calling the zmq_msg_close() function followed by the corresponding zmq_msg_init() function."
| [Monday 07 March 2011] [09:57:21] <guido_g>	examples are there -> https://github.com/guidog/cpp/tree/master/zmqcpp
| [Monday 07 March 2011] [09:57:23] <pieterh>	but there's a world of difference between the different zmq_msg_init() functions"
| [Monday 07 March 2011] [09:59:06] <pieterh>	guido_g: seems you already made a multipart message class...
| [Monday 07 March 2011] [09:59:10] <private_meta>	I'll test if memcpy does the trick... if it does, that's terrifying
| [Monday 07 March 2011] [09:59:19] <pieterh>	private_meta: I'm sure there's a proper way to do it
| [Monday 07 March 2011] [09:59:28] <guido_g>	pieterh: yes, long time ago
| [Monday 07 March 2011] [09:59:30] <pieterh>	but you need to know more about the C++ API
| [Monday 07 March 2011] [09:59:57] <private_meta>	pieterh: it doesn't look like it
| [Monday 07 March 2011] [10:00:08] <pieterh>	anyhow, that's your problem here, referring to memory that's deallocated by the time the send happens
| [Monday 07 March 2011] [10:00:28] <pieterh>	check the implementation of rebuild
| [Monday 07 March 2011] [10:00:36] <private_meta>	No, that's not what I meant
| [Monday 07 March 2011] [10:00:45] <private_meta>	I meant, if memcpy is the only way to do that, that's terrible
| [Monday 07 March 2011] [10:01:26] <pieterh>	you mean 'memcpy' the function, or 'copying memory in general'?
| [Monday 07 March 2011] [10:01:35] <private_meta>	the function in general
| [Monday 07 March 2011] [10:02:04] <pieterh>	you can _always_ make it more efficient, the question is whether you need to for the examples
| [Monday 07 March 2011] [10:02:04] <private_meta>	I'm not using classes and proper design to fickle around with friggin memcpy (sorry)
| [Monday 07 March 2011] [10:02:14] <pieterh>	ah, the function
| [Monday 07 March 2011] [10:03:23] <private_meta>	rebuild uses "zmq_msg_init_data"
| [Monday 07 March 2011] [10:03:38] <pieterh>	yes, and it doesn't copy anything
| [Monday 07 March 2011] [10:04:04] <pieterh>	are you destroying messages on send, as the C code did?
| [Monday 07 March 2011] [10:06:55] <private_meta>	More or less
| [Monday 07 March 2011] [10:07:20] <private_meta>	Not in the same way you did. I'm using basic_string as objects, and these objects terminate after they are cleared from the vector
| [Monday 07 March 2011] [10:07:22] <pieterh>	like guido_g says, add the necessary memcpy after rebuild
| [Monday 07 March 2011] [10:08:18] <pieterh>	you can make it cleaner afterwards, presumably using zero copy nicely
| [Monday 07 March 2011] [10:08:49] <guido_g>	i didn't care about zero-copy, was too much of a hassle
| [Monday 07 March 2011] [10:09:16] <guido_g>	i doubt that we have lots of people here that *really* need it
| [Monday 07 March 2011] [10:09:21] <private_meta>	It's rather sad that it now works and I have to use  memcpy to make it work
| [Monday 07 March 2011] [10:09:40] <pieterh>	private_meta: it doesn't work, it's trying to send data it doesn't own
| [Monday 07 March 2011] [10:10:11] <private_meta>	pieterh: not sure if I need it, but what exactly is zero copy and how does it work? I may have a general idea, but I've never heard it before
| [Monday 07 March 2011] [10:10:31] <pieterh>	well, you provide 0MQ with the destructor / free function
| [Monday 07 March 2011] [10:10:38] <pieterh>	then it'll call it when it's sent the message
| [Monday 07 March 2011] [10:11:15] <pieterh>	it avoids the memcpy, basically
| [Monday 07 March 2011] [10:11:42] <pieterh>	relevant for sending messages only, not receiving them
| [Monday 07 March 2011] [10:11:48] <private_meta>	kk
| [Monday 07 March 2011] [10:11:54] <private_meta>	ok, seems to work now
| [Monday 07 March 2011] [10:12:23] <private_meta>	want it in the mailing list as well?
| [Monday 07 March 2011] [10:12:31] <private_meta>	or maybe guido wants to look over it
| [Monday 07 March 2011] [10:13:31] <guido_g>	hm?
| [Monday 07 March 2011] [10:14:00] <guido_g>	private_meta: look over what?
| [Monday 07 March 2011] [10:15:16] <private_meta>	the c++ version of zmsg.h, thought you might wanna take a look at it, as you seem to be ok with c++
| [Monday 07 March 2011] [10:17:12] <guido_g>	which zmsg.h?
| [Monday 07 March 2011] [10:17:30] 	 * guido_g is completely of track
| [Monday 07 March 2011] [10:17:47] <pieterh>	:-) guido_g: private_meta has been translating examples from the Guide
| [Monday 07 March 2011] [10:17:53] <guido_g>	ahhh
| [Monday 07 March 2011] [10:17:57] <pieterh>	zmsg is the multipart message class I made for the C examples
| [Monday 07 March 2011] [10:18:16] <guido_g>	ic
| [Monday 07 March 2011] [10:18:31] <pieterh>	private_meta: to be honest, the code looks nice, I assume you'll call it .cpp not .h...
| [Monday 07 March 2011] [10:18:59] <guido_g>	or .hpp if it's to be included
| [Monday 07 March 2011] [10:19:05] <pieterh>	the advantage of making the class with the same methods is that the more complex C examples will be easy to turn into C++
| [Monday 07 March 2011] [10:20:16] <guido_g>	ouch
| [Monday 07 March 2011] [10:20:30] <guido_g>	should change the licence of my python-mdp stuff
| [Monday 07 March 2011] [10:20:59] <guido_g>	agpl might be a little too much
| [Monday 07 March 2011] [10:23:07] <private_meta>	pieterh: want the updated version via paste on a website or via mailing list?
| [Monday 07 March 2011] [10:23:49] <private_meta>	pieterh: The advantage of translating that stuff to the language I need before trying myself is so I get to know errors like the memcpy one, so I'm able to avoid them
| [Monday 07 March 2011] [10:24:35] <pieterh>	private_meta: mailing list is best, if you translate a bunch of examples, a pull request is also good
| [Monday 07 March 2011] [10:24:44] <private_meta>	pull request?
| [Monday 07 March 2011] [10:24:46] <pieterh>	guido_g: yeah, saw that, did not comment :-)
| [Monday 07 March 2011] [10:24:54] <pieterh>	private_meta: github pull request
| [Monday 07 March 2011] [10:25:04] <private_meta>	Oh, I never used GIT
| [Monday 07 March 2011] [10:25:15] <guido_g>	pieterh: suggestions?
| [Monday 07 March 2011] [10:25:16] <pieterh>	it's worth learning
| [Monday 07 March 2011] [10:25:23] <pieterh>	guido_g: just GPLv3 in this case
| [Monday 07 March 2011] [10:25:23] <private_meta>	somehow I don't feel like going through the hassle of installing and configuring it just to do something like a pull request
| [Monday 07 March 2011] [10:25:32] <guido_g>	pieterh: oki
| [Monday 07 March 2011] [10:25:45] <pieterh>	private_meta: it lets you do things like grab the zguide repository, see versions, changes, etc.
| [Monday 07 March 2011] [10:26:35] <pieterh>	in general a good version control system is worth gold, and git is one of the better ones
| [Monday 07 March 2011] [10:26:43] <private_meta>	We're using SVN here
| [Monday 07 March 2011] [10:26:54] <pieterh>	well, git is to svn like svn is to cvs
| [Monday 07 March 2011] [10:27:48] <private_meta>	Can't say, never used it, although the client configuration somehow feels way more complicated than svn
| [Monday 07 March 2011] [10:28:00] <private_meta>	and to be honest, download from github works, so i haven't felt the need yte
| [Monday 07 March 2011] [10:28:05] <pieterh>	like I say, it's worth learning
| [Monday 07 March 2011] [10:28:22] <private_meta>	In case I need it for more than this, I'll consider it :)
| [Monday 07 March 2011] [10:28:27] <pieterh>	anyhow, send the class to the list, sure
| [Monday 07 March 2011] [10:29:33] <private_meta>	Don't misunderstand me... It's just a matter of experience that when I start looking into GIT now, it will take me an endless amount of time because of the problems I'll face before I can properly use it
| [Monday 07 March 2011] [10:30:07] <private_meta>	So my threshold to start using it is higher than normal I guess
| [Monday 07 March 2011] [10:31:01] <cremes>	i need a little confirmation on how zmq_msg_t's are handled with inproc transport
| [Monday 07 March 2011] [10:31:10] <guido_g>	true, git is not for the faint-hearted
| [Monday 07 March 2011] [10:31:14] <cremes>	the sender needs to call close on the message
| [Monday 07 March 2011] [10:31:27] <cremes>	and the receiver needs to close it too after it's done with the data buffer
| [Monday 07 March 2011] [10:31:29] <cremes>	true?
| [Monday 07 March 2011] [10:32:15] <private_meta>	guido_g: Well, I somewhat compare it to people telling you "Well, if you need that and that, just start using Linux... Linux is so easy if you're proficient" but they dare not say that REAL proficiency takes up to 5-10 years with Linux if you're unlucky
| [Monday 07 March 2011] [10:32:47] <guido_g>	and infinite time for windows...
| [Monday 07 March 2011] [10:33:37] <private_meta>	Don't exaggerate ;)
| [Monday 07 March 2011] [10:34:57] <private_meta>	I mean, I'm using Linux, of course, but for those kind of problems, using the Linux analogy again, It's questionable to learn something for 5 years to do something in a minute which would otherwise take 5
| [Monday 07 March 2011] [10:35:05] <pieterh>	cremes: is there a special case for inproc...?
| [Monday 07 March 2011] [10:35:16] <cremes>	right, that's the question
| [Monday 07 March 2011] [10:35:24] <pieterh>	afaik 0MQ copies the data
| [Monday 07 March 2011] [10:35:35] <cremes>	or do i handle those messages exactly the same as i would for other transport types?
| [Monday 07 March 2011] [10:35:39] <pieterh>	exactly the same
| [Monday 07 March 2011] [10:35:43] <cremes>	perfect
| [Monday 07 March 2011] [10:35:50] <pieterh>	unless there is a line in the man pages saying otherwise
| [Monday 07 March 2011] [10:36:15] <cremes>	nope, but since it just flips pointers around behind the scenes i wondered if there was a special case
| [Monday 07 March 2011] [10:36:20] <cremes>	thanks for the answer
| [Monday 07 March 2011] [10:36:40] <private_meta>	pieterh: hmm... Now I can finally take a look at majordomo ;)
| [Monday 07 March 2011] [10:36:43] <pieterh>	you'd have to ask Sustrik but I'm pretty sure the received message data is a copy
| [Monday 07 March 2011] [10:36:58] <pieterh>	private_meta: :-)
| [Monday 07 March 2011] [10:36:59] <cremes>	pieterh: i believe you :)
| [Monday 07 March 2011] [10:38:36] <private_meta>	pieterh: 11 files prefixed with md are the basic majordomo files, am I missing anything?
| [Monday 07 March 2011] [10:39:13] <pieterh>	private_meta: that's it
| [Monday 07 March 2011] [10:39:25] <pieterh>	you should IMO start at the top of Ch4
| [Monday 07 March 2011] [10:39:57] <pieterh>	because it's easier to understand the MD pattern if you've seen the evolution of it
| [Monday 07 March 2011] [10:40:17] <private_meta>	kk
| [Monday 07 March 2011] [10:41:03] <private_meta>	You said that for my problem, 1 worker (management service) and n clients, I should integrate the broker into the worker?
| [Monday 07 March 2011] [10:41:09] <private_meta>	Do I remember that correctly?
| [Monday 07 March 2011] [10:41:33] <pieterh>	well, it's one way
| [Monday 07 March 2011] [10:41:39] <pieterh>	I've not documented it yet, that's after titanic
| [Monday 07 March 2011] [10:41:41] <private_meta>	-should+can
| [Monday 07 March 2011] [10:41:49] <private_meta>	titanic?
| [Monday 07 March 2011] [10:41:58] <pieterh>	:-) unsinkable etc. etc.
| [Monday 07 March 2011] [10:42:34] <private_meta>	ah, i need to translate zhash and zlist as well it seems
| [Monday 07 March 2011] [10:42:45] <pieterh>	nope, in C++ you'll find lists and hashes IMO
| [Monday 07 March 2011] [10:42:58] <pieterh>	STL, right?
| [Monday 07 March 2011] [10:43:04] <private_meta>	ah ok
| [Monday 07 March 2011] [10:43:14] <private_meta>	so you just implemented a normal hash and list class
| [Monday 07 March 2011] [10:43:18] <pieterh>	yes
| [Monday 07 March 2011] [10:43:24] <private_meta>	ok, good
| [Monday 07 March 2011] [10:43:27] <private_meta>	Good to know
| [Monday 07 March 2011] [10:46:00] <Guthur>	I'm looking forward to implementing majordomo
| [Monday 07 March 2011] [10:46:23] <private_meta>	Ok, let's dive deep into Chapter 4 then
| [Monday 07 March 2011] [10:46:26] <Guthur>	need to do Ch4
| [Monday 07 March 2011] [10:48:14] <guido_g>	pieterh: guide ch4: doesn't mq deactivate nagle?
| [Monday 07 March 2011] [10:48:36] <pieterh>	guido_g: I'm not sure why it would
| [Monday 07 March 2011] [10:48:41] <pieterh>	let me check the source
| [Monday 07 March 2011] [10:48:49] <guido_g>	pieterh: would mean at least a 20ms delay for small messages
| [Monday 07 March 2011] [10:49:25] <pieterh>	yup, indeed it does
| [Monday 07 March 2011] [10:49:27] <guido_g>	ahhh i shouldn't read that now
| [Monday 07 March 2011] [10:49:33] <pieterh>	:-) I'll fix that, thanks
| [Monday 07 March 2011] [10:49:41] <private_meta>	What's Nagle?
| [Monday 07 March 2011] [10:49:47] <guido_g>	*sigh*
| [Monday 07 March 2011] [10:49:48] <pieterh>	google is your buddy :-)
| [Monday 07 March 2011] [10:50:18] <guido_g>	http://en.wikipedia.org/wiki/Nagle's_algorithm   <- copied from the guide, ch4
| [Monday 07 March 2011] [10:50:53] <guido_g>	private_meta: remember, the guide!  it knows *everything*!
| [Monday 07 March 2011] [10:50:57] <private_meta>	ah
| [Monday 07 March 2011] [10:51:31] <private_meta>	The answer to life, the universe, and everything?
| [Monday 07 March 2011] [10:51:41] <guido_g>	yes
| [Monday 07 March 2011] [10:51:46] <private_meta>	nice
| [Monday 07 March 2011] [10:51:53] <private_meta>	Google Calculator knows that too
| [Monday 07 March 2011] [10:52:08] <guido_g>	who's google?
| [Monday 07 March 2011] [10:52:20] <private_meta>	Ask the Guide, it should know
| [Monday 07 March 2011] [10:52:22] <guido_g>	it's not in the guide, so it's not existing
| [Monday 07 March 2011] [10:52:40] <Guthur>	it's some small startup company
| [Monday 07 March 2011] [10:52:53] <Guthur>	doing webby stuff
| [Monday 07 March 2011] [10:53:09] <Guthur>	it'll never last...
| [Monday 07 March 2011] [10:53:13] <guido_g>	ahh this web crap doesn't have a future
| [Monday 07 March 2011] [10:54:23] <private_meta>	Yeah, that'll never last... what would be next? Social Networks? Preposterous
| [Monday 07 March 2011] [10:55:12] <private_meta>	pieterh: Just out of curiosity, what does it take for your rfc drafts to become stable?
| [Monday 07 March 2011] [10:55:31] <pieterh>	private_meta: that's explained in the sidebar, I think
| [Monday 07 March 2011] [10:55:31] <guido_g>	as if ordinary people will spend hours in front of a computer... unthinkable
| [Monday 07 March 2011] [10:55:38] <Guthur>	when he stops making changes
| [Monday 07 March 2011] [10:55:48] <private_meta>	Ah
| [Monday 07 March 2011] [10:55:48] <guido_g>	hrhrhr
| [Monday 07 March 2011] [10:56:34] <private_meta>	not seeing the forest for the trees
| [Monday 07 March 2011] [11:08:22] <pieterh>	private_meta: the state of a specification is a contract with its users, basically
| [Monday 07 March 2011] [11:08:58] <pieterh>	the whole thing is explained here: http://www.digistan.org/spec:1/COSS
| [Monday 07 March 2011] [11:11:11] <private_meta>	so, if I use Majordomo somewhere, it would become stable. How far, in your COS System, could a protocol be modified to be still considered as "deployed"?
| [Monday 07 March 2011] [11:11:12] <Guthur>	it would be nice to have a few language bindings interop'ing using the majordomo protocol
| [Monday 07 March 2011] [11:11:35] <pieterh>	private_meta: once a protocol is deployed to real users it can't be modified any more
| [Monday 07 March 2011] [11:11:57] <pieterh>	instead you fork it, make a new version
| [Monday 07 March 2011] [11:12:17] <private_meta>	So if I deviate from the protocol slightly, it doesn't count as deployed?
| [Monday 07 March 2011] [11:12:32] <private_meta>	Guthur: I'll make a C++ binding for Majordomo
| [Monday 07 March 2011] [11:12:40] <pieterh>	deviate? then you're implementing something else
| [Monday 07 March 2011] [11:12:47] <private_meta>	kk
| [Monday 07 March 2011] [11:13:14] <pieterh>	which of course anyone can do, but the point is you as implementer need assurance the spec won't change randomly
| [Monday 07 March 2011] [11:14:01] <private_meta>	Yeah, so the protocol can be referred to, makes oversight easier I guess?
| [Monday 07 March 2011] [11:14:50] <pieterh>	what do you mean by 'oversight'?
| [Monday 07 March 2011] [11:15:11] <private_meta>	Ah well
| [Monday 07 March 2011] [11:15:59] <private_meta>	overlook, for problem solving, I think you mentioned something like that... "So, you need help with that? You kept to that protocol? Good, that's a starting point"
| [Monday 07 March 2011] [11:16:11] <pieterh>	yes, indeed
| [Monday 07 March 2011] [11:16:32] <pieterh>	the core reason for a formal spec is that multiple teams can work on pieces of the problem
| [Monday 07 March 2011] [11:16:39] <pieterh>	so the spec is their contract
| [Monday 07 March 2011] [11:16:44] <private_meta>	k
| [Monday 07 March 2011] [11:16:59] <guido_g>	works quite well
| [Monday 07 March 2011] [11:17:00] <pieterh>	this is why guido_g and I have been arguing over words, if they're unclear, the contract is unclear
| [Monday 07 March 2011] [11:17:15] <guido_g>	yeah
| [Monday 07 March 2011] [11:17:32] <private_meta>	So if something is unclear in the Protocol it should be mentioned?
| [Monday 07 March 2011] [11:17:42] <private_meta>	(sounds obvious)
| [Monday 07 March 2011] [11:17:44] <pieterh>	yes, as you implement it, you'll find areas that are unclear
| [Monday 07 March 2011] [11:18:02] <pieterh>	assumptions the author made, or things he knows but other people don't
| [Monday 07 March 2011] [11:18:25] <private_meta>	Yeah, I assume there might be stuff in there you both are clear about, but others like me may not be
| [Monday 07 March 2011] [11:18:29] <pieterh>	especially if the author is also writing a reference implementation
| [Monday 07 March 2011] [11:19:07] <pieterh>	in the case of Majordomo, we assume working knowledge of the Guide
| [Monday 07 March 2011] [11:20:05] <private_meta>	sure
| [Monday 07 March 2011] [11:51:24] <Guthur>	pieterh: is PPP completely superseded by MDP
| [Monday 07 March 2011] [11:52:10] <pieterh>	yes
| [Monday 07 March 2011] [11:52:45] <Guthur>	PPP was a little short lived
| [Monday 07 March 2011] [11:53:04] <pieterh>	Poor PPP... it didn't get much market traction
| [Monday 07 March 2011] [11:55:05] <stimpie>	I have installed zmq with --prefix=$HOME/bin/  and Iam trying to build jzmq but it keeps failing with configure: error: cannot find zmq.h even with --includedir pointing to the location
| [Monday 07 March 2011] [12:18:02] <guido_g>	ahhh more guide stuff...
| [Monday 07 March 2011] [12:41:34] <pieterh>	guido_g: cyl, I'm off for a while...
| [Monday 07 March 2011] [12:41:47] <guido_g>	habv fun
| [Monday 07 March 2011] [12:41:52] <guido_g>	7me is impmenting mmi
| [Monday 07 March 2011] [12:41:56] <pieterh>	:-)
| [Monday 07 March 2011] [15:41:13] <cremes>	has anyone seen a "double free" error from zmq_msg_close() before?  https://gist.github.com/859170
| [Monday 07 March 2011] [15:41:41] <cremes>	it's possible/probably that my code is calling zmq_msg_close() twice and i just havent' found it yet, but
| [Monday 07 March 2011] [15:41:50] <mikko>	double freeing message?
| [Monday 07 March 2011] [15:41:53] <cremes>	i thought i would ask in case this error popped up under other conditions
| [Monday 07 March 2011] [15:42:09] <cremes>	mikko: that's what it says
| [Monday 07 March 2011] [15:42:23] <cremes>	the reason i am curious though is because this is one worker of 3 
| [Monday 07 March 2011] [15:42:31] <cremes>	they are all running the same code off of the same box
| [Monday 07 March 2011] [15:42:51] <cremes>	but the same one craps out with this error after about an hour of running
| [Monday 07 March 2011] [15:42:55] <cremes>	so, i'm puzzled
| [Monday 07 March 2011] [15:42:58] <mikko>	is the message data copied?
| [Monday 07 March 2011] [15:43:16] <cremes>	yes
| [Monday 07 March 2011] [15:43:40] <mikko>	very hard to say what it could be without seeing larger context
| [Monday 07 March 2011] [15:43:56] <mikko>	i guess most likely that zmq_msg_data has been freed before calling zmq_msg_close
| [Monday 07 March 2011] [15:44:12] <andrewvc_>	cremes, could it be some object finalizer bug?
| [Monday 07 March 2011] [15:44:53] <cremes>	andrewvc_: improbable; it happens under jruby and mri 1.9.2 which handle finalizers differently
| [Monday 07 March 2011] [15:45:45] <cremes>	i was kind of hoping someone would have seen something similar and knew what mistake i had made
| [Monday 07 March 2011] [15:45:50] <andrewvc>	cremes: ah, well nm then
| [Monday 07 March 2011] [15:46:11] <andrewvc>	btw, what are your thoughts on finalizers? Evan's not a fan?
| [Monday 07 March 2011] [15:46:12] <cremes>	whenever i see a malloc or free bug, i'm reminded that it could just be heap corruption
| [Monday 07 March 2011] [15:46:27] <cremes>	and malloc/free are the first to stumble across it and bitch
| [Monday 07 March 2011] [15:46:44] <cremes>	andrewvc: i think they are necessary
| [Monday 07 March 2011] [15:47:00] <andrewvc>	better than the alternative of manual freeing then
| [Monday 07 March 2011] [15:47:09] <cremes>	particularly when you need to interface managed code (ruby/python/etc) with unmanaged memory (c/c++//etc)
| [Monday 07 March 2011] [15:47:42] <cremes>	ok, well, i'm off to audit my worker code *again* to see where this could be getting triggered
| [Monday 07 March 2011] [15:47:53] <andrewvc>	cremes: good luck :)
| [Monday 07 March 2011] [15:48:05] <andrewvc>	let me know if there's a passage that could use a second set of eye
| [Monday 07 March 2011] [15:48:07] <andrewvc>	*eyes
| [Monday 07 March 2011] [15:48:18] <cremes>	andrewvc: thank you, will do
| [Monday 07 March 2011] [15:48:35] <mikko>	cremes: run inside valgrind
| [Monday 07 March 2011] [15:48:41] <mikko>	and see if you can reproduc
| [Monday 07 March 2011] [15:48:49] <mikko>	would probably give a lot more insight
| [Monday 07 March 2011] [15:49:08] <cremes>	mikko: don't i have to recompile 0mq with some make-valgrind-happy flag?
| [Monday 07 March 2011] [15:49:15] <mikko>	cremes: nope
| [Monday 07 March 2011] [15:49:21] <cremes>	oh, good
| [Monday 07 March 2011] [15:49:23] <mikko>	there are just some 'false' alerts
| [Monday 07 March 2011] [15:49:42] <mikko>	'x points to unitialized bytes"
| [Monday 07 March 2011] [16:08:25] <cremes>	andrewvc: ping
| [Monday 07 March 2011] [16:08:43] <andrewvc>	cremes: yo, on a call, i'll be around in a bit
| [Monday 07 March 2011] [16:08:59] <cremes>	ok, ping me when you are... i need to pick your brain
| [Monday 07 March 2011] [17:11:31] <andrewvc>	cremes: what's up?
| [Monday 07 March 2011] [17:13:35] <cremes>	so, i think i found the problem; it requires a change to an api 'contract' in ffi-rzmq
| [Monday 07 March 2011] [17:14:17] <cremes>	right now when you call #send it handles calling Message#close for you
| [Monday 07 March 2011] [17:14:30] <cremes>	however, this can be a problem if the #send fails
| [Monday 07 March 2011] [17:14:42] <andrewvc>	oh, interesting
| [Monday 07 March 2011] [17:15:00] <cremes>	zmqmachine has a #send_messages method that automatically sets the right flags for multi-part messages, etc
| [Monday 07 March 2011] [17:15:13] <cremes>	and it uses this lower level method from ffi-rzmq to handle the sending
| [Monday 07 March 2011] [17:15:14] <andrewvc>	yeah, one of the nice features in it
| [Monday 07 March 2011] [17:15:36] <andrewvc>	just Socket#send right
| [Monday 07 March 2011] [17:15:41] <cremes>	right
| [Monday 07 March 2011] [17:15:58] <andrewvc>	I see an ensure there
| [Monday 07 March 2011] [17:16:05] <cremes>	so as i built even more abstractions on top of these functions, i painted myself into a corner
| [Monday 07 March 2011] [17:16:09] <andrewvc>	ensure message.close
| [Monday 07 March 2011] [17:16:19] <cremes>	yes, i think that's the "bug"
| [Monday 07 March 2011] [17:16:22] <andrewvc>	oh?
| [Monday 07 March 2011] [17:16:26] <cremes>	let me get you a gist... 
| [Monday 07 March 2011] [17:16:33] <andrewvc>	cool
| [Monday 07 March 2011] [17:17:22] <cremes>	take a look at the logic for #write:  https://gist.github.com/859387
| [Monday 07 March 2011] [17:17:47] <cremes>	if the call to send_messages returns a failure, it keeps the messages on the internal queue and
| [Monday 07 March 2011] [17:18:09] <cremes>	tries to resend them in 10ms
| [Monday 07 March 2011] [17:18:33] <cremes>	however, the only way this would fail is if at least one part of a multi-part message failed
| [Monday 07 March 2011] [17:18:55] <cremes>	but any parts *before* that one already had Message#close called on them
| [Monday 07 March 2011] [17:19:09] <cremes>	so when i try to resend and then close them, kaboom, double free
| [Monday 07 March 2011] [17:19:18] <andrewvc>	ohhh
| [Monday 07 March 2011] [17:19:25] <andrewvc>	how does one part of a multipart fail?
| [Monday 07 March 2011] [17:19:27] <andrewvc>	HWM?
| [Monday 07 March 2011] [17:19:30] <cremes>	i don't know
| [Monday 07 March 2011] [17:19:47] <cremes>	it's my only theory and the backtraces kind of led me to here
| [Monday 07 March 2011] [17:20:10] <andrewvc>	hmmm, I mean, do you have a HWM set?
| [Monday 07 March 2011] [17:20:14] <cremes>	regardless, changing the contract for Socket#send moves the api a little closer back to the C version
| [Monday 07 March 2011] [17:20:26] <andrewvc>	so, no more 'ensure'
| [Monday 07 March 2011] [17:20:38] <andrewvc>	do users need to manually message.close then?
| [Monday 07 March 2011] [17:21:03] <cremes>	correct
| [Monday 07 March 2011] [17:21:11] <cremes>	on both counts
| [Monday 07 March 2011] [17:22:02] <andrewvc>	That sounds OK to me. However, it'll break all current code
| [Monday 07 March 2011] [17:22:12] <andrewvc>	any ideas for compat?
| [Monday 07 March 2011] [17:22:14] <cremes>	right, that's why i wanted to bring this up with you
| [Monday 07 March 2011] [17:22:26] <cremes>	you're the only one (other than me) who has projects that depend on this
| [Monday 07 March 2011] [17:22:39] <andrewvc>	hehe, well, others are picking it up, I think they're just quiet
| [Monday 07 March 2011] [17:22:50] <andrewvc>	I think there's a silent minority, or not
| [Monday 07 March 2011] [17:22:53] <cremes>	so, it's a backward-incompatible change
| [Monday 07 March 2011] [17:23:13] <andrewvc>	yeah, it's no big deal to me, I just rely on em-zeromq these days
| [Monday 07 March 2011] [17:23:15] <cremes>	it *is* a pre-1.0 release, so this kind of thing can happen
| [Monday 07 March 2011] [17:23:18] <andrewvc>	so, it's like 1 line
| [Monday 07 March 2011] [17:23:24] <cremes>	good to hear
| [Monday 07 March 2011] [17:23:36] <cremes>	does dripdrop need changes too or no?
| [Monday 07 March 2011] [17:23:44] <andrewvc>	shouldn't
| [Monday 07 March 2011] [17:24:00] <andrewvc>	well, yeah, my bad dripdrop needs one
| [Monday 07 March 2011] [17:24:03] <andrewvc>	em-zeromq actually doesn't
| [Monday 07 March 2011] [17:24:32] <andrewvc>	since you end up writing straight to the socket there, it's not  its responsibility
| [Monday 07 March 2011] [17:24:48] <andrewvc>	hmmm, here's an idea
| [Monday 07 March 2011] [17:24:50] <cremes>	i've documented the change and breakage in the History.txt / changelog but i don't know if folks really read those
| [Monday 07 March 2011] [17:24:59] <andrewvc>	maybe we could deprecate it somehow
| [Monday 07 March 2011] [17:25:10] <andrewvc>	one thing I've never liked is the collision between #send and Object#send
| [Monday 07 March 2011] [17:25:18] <andrewvc>	I know it's in the ZMQ guidelines, but in ruby, 'send' is special
| [Monday 07 March 2011] [17:25:29] <andrewvc>	it might be a good way to phase that out at the same time
| [Monday 07 March 2011] [17:25:41] <andrewvc>	maybe deprecate #send, and implement a #send_message
| [Monday 07 March 2011] [17:25:43] <cremes>	what's an alternative name that you think works?
| [Monday 07 March 2011] [17:25:58] <andrewvc>	or send_msg for brevity
| [Monday 07 March 2011] [17:26:36] <cremes>	then i'm going to want to change #recv so that they are symmetrical :)
| [Monday 07 March 2011] [17:26:49] <andrewvc>	ohh, damn, yeah, good point
| [Monday 07 March 2011] [17:27:06] <andrewvc>	I like short names, recv_msg is better than rcv_message
| [Monday 07 March 2011] [17:27:13] <andrewvc>	in terms of consistency
| [Monday 07 March 2011] [17:27:56] <cremes>	well, i'm going to pull the trigger on this right now
| [Monday 07 March 2011] [17:28:04] <cremes>	i'll do send_msg and recv_msg
| [Monday 07 March 2011] [17:28:15] <andrewvc>	awesome, yeah, I was bit trying to dynamically use Object#send on a socket ages ago, this'll be awesome. Usually I justp deprecate by throwing a STDERR.write("Socket#send is deprecated, use Socket#send_msg")
| [Monday 07 March 2011] [17:28:19] <andrewvc>	in there
| [Monday 07 March 2011] [17:28:37] <cremes>	you could always use _send_
| [Monday 07 March 2011] [17:28:40] <andrewvc>	dunno if that might break people's apps terribly, but on the other hand it *would* annoy them terribly, to great effect
| [Monday 07 March 2011] [17:28:41] <cremes>	i think that's an alias
| [Monday 07 March 2011] [17:28:49] <andrewvc>	I never knew about that, is that on all objects?
| [Monday 07 March 2011] [17:28:55] <cremes>	yes
| [Monday 07 March 2011] [17:29:16] <andrewvc>	not on my ruby
| [Monday 07 March 2011] [17:29:20] <andrewvc>	oh, in ffi-rzmq?
| [Monday 07 March 2011] [17:29:28] <cremes>	no, it's a ruby thing
| [Monday 07 March 2011] [17:29:57] <andrewvc>	ruby-1.9.2-p180 :008 > Object._send_
| [Monday 07 March 2011] [17:29:58] <andrewvc>	does not work
| [Monday 07 March 2011] [17:30:05] <andrewvc>	undefined method
| [Monday 07 March 2011] [17:30:05] <cremes>	oh, it's __send__ with two underscores
| [Monday 07 March 2011] [17:30:08] <andrewvc>	ohhhhh
| [Monday 07 March 2011] [17:30:14] <cremes>	i had to look that up
| [Monday 07 March 2011] [17:30:29] <andrewvc>	interesting, maybe I should use that elsewhere
| [Monday 07 March 2011] [17:30:46] <andrewvc>	I'd argue that's a bit of a deficiency in ruby, shoulda been named send_method or something
| [Monday 07 March 2011] [17:31:00] <andrewvc>	because what programmer would ever want a method named 'send' in their library
| [Monday 07 March 2011] [17:31:19] <cremes>	heh
| [Monday 07 March 2011] [17:32:01] <andrewvc>	we have define_method, but no send_method
| [Monday 07 March 2011] [17:32:17] <andrewvc>	anway... so, basically now, you send a message, and must close each one you send
| [Monday 07 March 2011] [17:32:38] <cremes>	correct
| [Monday 07 March 2011] [17:32:45] <cremes>	just like the c api
| [Monday 07 March 2011] [17:32:45] <andrewvc>	how does this affect send_string
| [Monday 07 March 2011] [17:32:57] <andrewvc>	kinda makes that a bit odd eh?
| [Monday 07 March 2011] [17:32:58] <cremes>	that will get a line added to it to release the message
| [Monday 07 March 2011] [17:33:28] <cremes>	it's never exposed to the end user anyway so they don't even know a Message object was created there
| [Monday 07 March 2011] [17:33:40] <cremes>	it's behavior will be unchanged
| [Monday 07 March 2011] [17:33:58] <andrewvc>	yeah, so, if I send a multi-part message based out of strings
| [Monday 07 March 2011] [17:34:06] <andrewvc>	send_string will still have this bug no?
| [Monday 07 March 2011] [17:34:13] <cremes>	no
| [Monday 07 March 2011] [17:34:28] <cremes>	it doesn't try to resend the *same* Message object
| [Monday 07 March 2011] [17:34:35] <cremes>	it allocates a new one for every #send_string call
| [Monday 07 March 2011] [17:34:40] <andrewvc>	oh, gotcha
| [Monday 07 March 2011] [17:34:53] <cremes>	y'know, i'm bothered by this deprecation thing
| [Monday 07 March 2011] [17:35:08] <andrewvc>	yeah, it isn't nice, maybe we should think about it a bit
| [Monday 07 March 2011] [17:35:14] <cremes>	the way it works now is just wrong
| [Monday 07 March 2011] [17:35:35] <cremes>	maybe i could create a #fire_and_forget that behaves like the original #send
| [Monday 07 March 2011] [17:35:44] <cremes>	it would manage the message close for you
| [Monday 07 March 2011] [17:36:01] <cremes>	so the functionality could still be in the library but it wouldn't be the default
| [Monday 07 March 2011] [17:36:16] <andrewvc>	hmmm
| [Monday 07 March 2011] [17:36:39] <cremes>	#send_and_close(message)  ??
| [Monday 07 March 2011] [17:36:45] <andrewvc>	much better
| [Monday 07 March 2011] [17:37:26] <cremes>	i like that better too
| [Monday 07 March 2011] [17:41:25] <cremes>	andrewvc: done... https://gist.github.com/859387
| [Monday 07 March 2011] [17:51:57] <andrewvc>	lookin good
| [Monday 07 March 2011] [18:41:27] <cremes>	what are the conditions that raise this assertion?
| [Monday 07 March 2011] [18:41:28] <cremes>	Assertion failed: !more || pipes [current] != pipe_ (fq.cpp:62)
| [Monday 07 March 2011] [18:44:53] <cremes>	i am seeing it when writing a 2-part message to a pub socket using an inproc transport
| [Monday 07 March 2011] [18:45:25] <cremes>	it's not super high-volume either... maybe 1000 msgs/sec
| [Monday 07 March 2011] [18:45:57] <cremes>	size of the first message part is under 10 bytes and the second part is under 200 bytes
| [Monday 07 March 2011] [18:46:14] <cremes>	i'll try to put together some C code to reproduce
| [Monday 07 March 2011] [18:46:19] <cremes>	it
| [Monday 07 March 2011] [19:20:18] <lt_schmidt_jr>	Hello
| [Monday 07 March 2011] [19:20:33] <lt_schmidt_jr>	anyone here familiar with cross compilation?
| [Monday 07 March 2011] [19:20:57] <lt_schmidt_jr>	I would like to compile for mutliple unix platforms from mac OSX
| [Monday 07 March 2011] [19:21:21] <lt_schmidt_jr>	ubuntu and centos both x64
| [Monday 07 March 2011] [19:21:51] <lt_schmidt_jr>	Windows x64 would be a nice bonus, but I am not expecting it
| [Monday 07 March 2011] [20:04:49] <ctrlc-root>	im trying to make an application with ZeroMQ on Windows XP using VS2010 and the server code (http://tinypaste.com/e2187a)  throws an exception when I call "zmqSocket.recv(...)". What am i doing wrong?
| [Monday 07 March 2011] [20:06:24] <ctrlc-root>	it says something like "Operation cannot be completed because socket isn't in the correct state" i think
| [Monday 07 March 2011] [20:16:12] <ctrlc-root>	nevermind, i figured it out
| [Monday 07 March 2011] [20:44:18] <lt_schmidt_jr>	anyone has tips on cross-compiling?
| [Monday 07 March 2011] [20:46:00] <cremes>	lt_schmidt_jr: cross-compiling is typically done with mingw
| [Monday 07 March 2011] [20:46:11] <cremes>	there is a thread on the mailing list and an open issue
| [Monday 07 March 2011] [20:46:23] <lt_schmidt_jr>	thanks cremes
| [Monday 07 March 2011] [20:46:25] <cremes>	regarding the inability for 0mq to cleanly compile using mingw-w64 (64-bit mingw
| [Monday 07 March 2011] [20:46:32] <lt_schmidt_jr>	ah
| [Monday 07 March 2011] [20:46:43] <cremes>	i suggest you compare notes and experiences with the folks who
| [Monday 07 March 2011] [20:46:46] <cremes>	have already indicated interest
| [Monday 07 March 2011] [20:46:50] <lt_schmidt_jr>	that would really be  a nice-to-have
| [Monday 07 March 2011] [20:46:56] <cremes>	honestly, in about a month this is going to be important to me too :)
| [Monday 07 March 2011] [20:47:12] <lt_schmidt_jr>	but just cross-compiling for unix is what I am really after tonight
| [Monday 07 March 2011] [20:47:32] <lt_schmidt_jr>	I am sort  of a java weenie so this is all a bit overwhelming
| [Monday 07 March 2011] [20:47:34] <cremes>	ok, then there are various guides on the 'net on how to do it
| [Monday 07 March 2011] [20:47:46] <lt_schmidt_jr>	ok, thanks
| [Monday 07 March 2011] [20:47:47] <cremes>	sorry that it's a google-is-your-friend answer but... ;)
| [Monday 07 March 2011] [20:47:57] <cremes>	check out mingw.org
| [Monday 07 March 2011] [20:48:03] <cremes>	and also lookup the site for mingw-w64
| [Monday 07 March 2011] [20:48:08] <cremes>	they have FAQs on this stuff
| [Monday 07 March 2011] [20:48:09] <lt_schmidt_jr>	hey, if someone had just done it, it would save me some time
| [Monday 07 March 2011] [20:48:14] <lt_schmidt_jr>	thanks
| [Monday 07 March 2011] [20:48:23] <cremes>	yeah, unfortunately i don't think anyone has yet
| [Monday 07 March 2011] [20:48:44] <cremes>	if you figure it out, put up a page on the wiki!
| [Monday 07 March 2011] [20:49:06] <lt_schmidt_jr>	:) I'll try
| [Tuesday 08 March 2011] [01:14:52] <andrewvc>	cremes: around?
| [Tuesday 08 March 2011] [01:22:58] <engwan>	hi andrewvc, got another problem with my rails app.. it might not be related to zeromq / mongrel2 but related to the threading problem
| [Tuesday 08 March 2011] [01:23:09] <andrewvc>	engwan: yo
| [Tuesday 08 March 2011] [01:23:14] <engwan>	now im getting this
| [Tuesday 08 March 2011] [01:23:16] <engwan>	Unhandled exception when trying to join handler #<ThreadError: deadlock; recursive locking>.
| [Tuesday 08 March 2011] [01:23:16] <engwan>	/opt/palmade/development/rvm/gems/ruby-1.9.2-p136/gems/actionpack-2.3.11/lib/action_controller/reloader.rb:31:in `lock'
| [Tuesday 08 March 2011] [01:23:16] <engwan>	/opt/palmade/development/rvm/gems/ruby-1.9.2-p136/gems/actionpack-2.3.11/lib/action_controller/reloader.rb:31:in `run'
| [Tuesday 08 March 2011] [01:23:16] <engwan>	/opt/palmade/development/rvm/gems/ruby-1.9.2-p136/gems/actionpack-2.3.11/lib/action_controller/dispatcher.rb:108:in `call'
| [Tuesday 08 March 2011] [01:23:18] <engwan>	/opt/palmade/development/rvm/gems/ruby-1.9.2-p136/gems/thin-1.2.7/lib/rack/adapter/rails.rb:74:in `call'
| [Tuesday 08 March 2011] [01:23:20] <engwan>	on every other request
| [Tuesday 08 March 2011] [01:23:28] <engwan>	so when i open up the page, it works fine
| [Tuesday 08 March 2011] [01:23:29] <andrewvc>	hmmm, i'm not familiar with that one
| [Tuesday 08 March 2011] [01:23:33] <engwan>	when i refresh it
| [Tuesday 08 March 2011] [01:23:37] <engwan>	that error
| [Tuesday 08 March 2011] [01:23:48] <engwan>	then my master process respawns the dead process
| [Tuesday 08 March 2011] [01:23:51] <engwan>	then repeat..
| [Tuesday 08 March 2011] [01:23:51] <engwan>	hehe
| [Tuesday 08 March 2011] [01:24:33] <andrewvc>	hmmm
| [Tuesday 08 March 2011] [01:24:42] <andrewvc>	btw, have you set Thread.abort_on_exception = true
| [Tuesday 08 March 2011] [01:25:17] <andrewvc>	looks like the magic class reloading in rails is having issues
| [Tuesday 08 March 2011] [01:25:46] <engwan>	yeah, that reloading class has wrapper locking / unlocking mechanism
| [Tuesday 08 March 2011] [01:27:01] <andrewvc>	well, it looks like there's an exception somewhere
| [Tuesday 08 March 2011] [01:27:15] <andrewvc>	that gets rescued, question is, what's the exception
| [Tuesday 08 March 2011] [01:27:54] <engwan>	hmm.. isnt the exception #<ThreadError: deadlock; recursive locking>?
| [Tuesday 08 March 2011] [01:28:03] <engwan>	related to mutex?
| [Tuesday 08 March 2011] [01:29:38] <engwan>	:w
| [Tuesday 08 March 2011] [01:29:59] <andrewvc>	hmmm
| [Tuesday 08 March 2011] [01:30:47] <engwan>	i solved the problem
| [Tuesday 08 March 2011] [01:30:59] <engwan>	the lock was actually not unlocked
| [Tuesday 08 March 2011] [01:31:28] <andrewvc>	well, yeah
| [Tuesday 08 March 2011] [01:31:31] <engwan>	its a bug in rack-mongrel2.. it should call close on the response body of the rack app
| [Tuesday 08 March 2011] [01:31:38] <andrewvc>	cool
| [Tuesday 08 March 2011] [01:31:41] <engwan>	as rails hooks the unlock into that method
| [Tuesday 08 March 2011] [01:31:42] <andrewvc>	so, the other question is
| [Tuesday 08 March 2011] [01:32:09] <andrewvc>	it looks like exceptions that don't get handled cause mutex to complain that it now won't get unlocked.
| [Tuesday 08 March 2011] [01:32:18] <andrewvc>	does that sound right, or am I misunderstanding this?
| [Tuesday 08 March 2011] [01:32:44] <engwan>	no, its just that the mutex was locked twice
| [Tuesday 08 March 2011] [01:32:47] <engwan>	without getting unlocked
| [Tuesday 08 March 2011] [01:32:53] <engwan>	so it gave out that exception
| [Tuesday 08 March 2011] [01:33:01] <andrewvc>	ohhhhhhh, gotcha
| [Tuesday 08 March 2011] [01:33:52] <andrewvc>	I was thinking what I said didn't quite made sense
| [Tuesday 08 March 2011] [01:33:55] <andrewvc>	btw
| [Tuesday 08 March 2011] [01:34:07] <andrewvc>	we're making a rather significant change to ffi-rzmq
| [Tuesday 08 March 2011] [01:34:26] <engwan>	what would that change be?
| [Tuesday 08 March 2011] [01:35:03] <andrewvc>	well, it won't affect you if you use Socket#send_string
| [Tuesday 08 March 2011] [01:35:14] <andrewvc>	but if you use Socket#send directly, instantiating zmq objects
| [Tuesday 08 March 2011] [01:35:18] <andrewvc>	it will
| [Tuesday 08 March 2011] [01:35:41] <andrewvc>	we're going to require that you manually close any sent messages after the send
| [Tuesday 08 March 2011] [01:35:58] <andrewvc>	#send won't manually close the message for you any more
| [Tuesday 08 March 2011] [01:36:16] <andrewvc>	and #send will likely be renamed as well, just be on the look out for it, we'll likely bump it this week
| [Tuesday 08 March 2011] [01:36:17] <engwan>	any reason for the change?
| [Tuesday 08 March 2011] [01:36:21] <andrewvc>	yeah
| [Tuesday 08 March 2011] [01:36:29] <andrewvc>	basically, here's the deal
| [Tuesday 08 March 2011] [01:37:27] <andrewvc>	lets say you're sending a multi-part message
| [Tuesday 08 March 2011] [01:37:33] <andrewvc>	and its got 4 parts
| [Tuesday 08 March 2011] [01:38:12] <andrewvc>	and it fails on part 2
| [Tuesday 08 March 2011] [01:38:32] <andrewvc>	then lets say you try and resend the message, starting from part 1
| [Tuesday 08 March 2011] [01:39:00] <andrewvc>	well, #send has modified those Message objects, they've been closed, so you can't resend part 1 and 2
| [Tuesday 08 March 2011] [01:39:06] <andrewvc>	you have to recreate the Message objects
| [Tuesday 08 March 2011] [01:39:23] <andrewvc>	what you really want to do is send all 4, then close all 4, not send each, closing them one at a time as you go
| [Tuesday 08 March 2011] [01:39:29] <engwan>	ohh.. yeah, that makes sense..
| [Tuesday 08 March 2011] [01:39:55] <andrewvc>	though, something still seems odd about it to me, maybe there's a better way
| [Tuesday 08 March 2011] [01:40:10] <andrewvc>	though, the other thing we discussed was renaming send, as it conflicts with Object#send
| [Tuesday 08 March 2011] [01:40:24] <andrewvc>	though the proper zmq api uses #send
| [Tuesday 08 March 2011] [01:40:37] <andrewvc>	anyway, it's late and I'm rambling
| [Tuesday 08 March 2011] [01:40:45] <andrewvc>	looking forward to your M2 handler btw
| [Tuesday 08 March 2011] [01:41:23] <engwan>	sure, i'll post it up on github when ready
| [Tuesday 08 March 2011] [03:08:20] <guido_g>	good morning
| [Tuesday 08 March 2011] [03:20:02] <guido_g>	pieter_hintjens: http://www.inspirel.com/yami4/  <- competitors ahead -- and thy have a book already!!!  ,)
| [Tuesday 08 March 2011] [03:22:48] <siggimoo>	zmq has a better name and license, imo
| [Tuesday 08 March 2011] [03:27:35] <Steve-o>	it's a lulu book
| [Tuesday 08 March 2011] [03:27:49] <Steve-o>	plus they don't have a good multicast protocol :)
| [Tuesday 08 March 2011] [03:30:27] <guido_g>	*shhh*
| [Tuesday 08 March 2011] [03:31:20] <guido_g>	i wanted to persuade pieter to publish the guide as book
| [Tuesday 08 March 2011] [03:37:06] <Steve-o>	mmm, odd, 
| [Tuesday 08 March 2011] [03:37:17] <guido_g>	what?
| [Tuesday 08 March 2011] [03:37:22] <Steve-o>	Windows and Linux PGM is working perfectly fine now
| [Tuesday 08 March 2011] [03:37:29] <Steve-o>	but I get double the performance number on Windows
| [Tuesday 08 March 2011] [03:38:16] <Steve-o>	out of the box, ~100mb/s Linux and ~200mb/s Windows
| [Tuesday 08 March 2011] [03:39:21] <guido_g>	odd indeed
| [Tuesday 08 March 2011] [03:40:13] <Steve-o>	i think it's supposed to default to 100kb/s too :D
| [Tuesday 08 March 2011] [03:40:56] <guido_g>	at least this is the default rate set by mq
| [Tuesday 08 March 2011] [03:41:04] <guido_g>	afair
| [Tuesday 08 March 2011] [03:45:35] <pieter_hintjens>	re
| [Tuesday 08 March 2011] [03:46:49] <guido_g>	wb
| [Tuesday 08 March 2011] [03:46:51] <pieter_hintjens>	0MQ doesn't really have competitors
| [Tuesday 08 March 2011] [03:47:20] <guido_g>	the former nokia ceo said the same once...
| [Tuesday 08 March 2011] [03:47:44] <pieter_hintjens>	It's still true, Nokia tyres are the best in the world
| [Tuesday 08 March 2011] [03:48:09] <pieter_hintjens>	as for the Guide as a book, I thought that was the obvious goal from the start
| [Tuesday 08 March 2011] [03:48:16] <guido_g>	yeah, unfortunately i've no use for them
| [Tuesday 08 March 2011] [03:48:27] <pieter_hintjens>	yeah, they insist on Windows 7...
| [Tuesday 08 March 2011] [03:49:47] <pieter_hintjens>	"yet another messaging interface, version 4"?
| [Tuesday 08 March 2011] [03:50:33] <pieter_hintjens>	anyhow, 0MQ is above all a community of experts
| [Tuesday 08 March 2011] [03:51:07] <pieter_hintjens>	guido_g: thanks for the feedback on Ch4, I'm making those fixes now
| [Tuesday 08 March 2011] [03:51:26] <guido_g>	no problem
| [Tuesday 08 March 2011] [03:51:57] <guido_g>	the titanic idea is nice
| [Tuesday 08 March 2011] [03:56:15] <pieter_hintjens>	guido_g: do you know http://lmgtfy.com/?q=spinning+rust ?
| [Tuesday 08 March 2011] [03:56:44] <pieter_hintjens>	too sarcastic for a serious book on messaging?
| [Tuesday 08 March 2011] [03:56:55] <guido_g>	pieter_hintjens: not when reading a book or article
| [Tuesday 08 March 2011] [03:57:39] <guido_g>	you've to admit that the term is not that widely known
| [Tuesday 08 March 2011] [03:58:06] <mikko>	good morning
| [Tuesday 08 March 2011] [03:58:10] <pieter_hintjens>	it isn't? I thought it was pretty standard
| [Tuesday 08 March 2011] [03:58:17] <pieter_hintjens>	hi mikko
| [Tuesday 08 March 2011] [03:58:32] <guido_g>	howdy mikko 
| [Tuesday 08 March 2011] [04:06:56] <Steve-o>	erk, local_thr.exe is crashing
| [Tuesday 08 March 2011] [04:07:38] <mikko>	Steve-o: win64?
| [Tuesday 08 March 2011] [04:08:05] <Steve-o>	win32 on 2008 r2 sp1
| [Tuesday 08 March 2011] [04:09:15] <Steve-o>	remote_thr.exe runs fine
| [Tuesday 08 March 2011] [04:09:40] <Steve-o>	and of course linux doesn't crash
| [Tuesday 08 March 2011] [04:20:22] <Steve-o>	one guess is that zeromq is sending as two threads, which matches the double bandwidth
| [Tuesday 08 March 2011] [04:27:31] <stimpie>	does any one has a clue what could cause /cm/shared/apps/gcc/4.3.4/lib/../lib/libstdc++.so: could not read symbols: File in wrong format?
| [Tuesday 08 March 2011] [04:28:41] <stimpie>	aha I do, It should use lib64 
| [Tuesday 08 March 2011] [04:41:27] <stimpie>	anyone knows howto specify from which location libstdc++.so is linked (for jzmq)?
| [Tuesday 08 March 2011] [04:45:55] <pieter_hintjens>	stimpie: sorry,... nope
| [Tuesday 08 March 2011] [04:46:41] <stimpie>	I will try to link 'manualy' 
| [Tuesday 08 March 2011] [04:46:44] <mikko>	stimpie: i would assume that's based on runtime linkers config
| [Tuesday 08 March 2011] [04:46:53] <mikko>	stimpie: or compilers
| [Tuesday 08 March 2011] [04:47:58] <mikko>	stimpie: echo | g++ -v -x c -E -
| [Tuesday 08 March 2011] [04:49:07] <stimpie>	mikko, strange that gives X86_64 as the first option 
| [Tuesday 08 March 2011] [04:50:07] <mikko>	i wonder if adding -m64 to compiler flags would help
| [Tuesday 08 March 2011] [04:56:21] <stimpie>	-m64 appears to have no effect, output of g++ -v -x c -E  posted at http://pastebin.com/aumWMsxT 
| [Tuesday 08 March 2011] [05:05:21] <sejo>	can you have multiple PULL receivers ? (PUSH sender)
| [Tuesday 08 March 2011] [05:06:07] <sejo>	the guide states yes :p
| [Tuesday 08 March 2011] [05:06:09] <sejo>	nvm
| [Tuesday 08 March 2011] [05:09:14] <Steve-o>	doh, 2.1.2 drops txw_max_rte so there is no rate limiting
| [Tuesday 08 March 2011] [05:30:35] <Steve-o>	oh yay, doesn't crash now, fruity compiling
| [Tuesday 08 March 2011] [05:34:56] <stimpie>	my libstdc++ issue appears to be a very old bug in libtool http://lists.gnu.org/archive/html/libtool/2005-08/msg00041.html
| [Tuesday 08 March 2011] [08:09:47] <Steve-o>	living on the bleeding edge gives bleeding wounds
| [Tuesday 08 March 2011] [08:10:12] <Steve-o>	nice /feature/ of MSVC release mode and local scope __restrict
| [Tuesday 08 March 2011] [08:10:30] <Steve-o>	randomly makes pointers appear as NULL unless they are used a lot
| [Tuesday 08 March 2011] [08:41:51] <mikko>	https://build.zero.mq/job/code-coverage-test/2/cobertura/_default_/
| [Tuesday 08 March 2011] [08:41:54] <CIA-103>	zeromq2: 03Brett Cameron 07master * rb00be26 10/ (5 files in 2 dirs): 
| [Tuesday 08 March 2011] [08:41:54] <CIA-103>	zeromq2: Different fixed to make OpenVMS port work.
| [Tuesday 08 March 2011] [08:41:54] <CIA-103>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/g79MvJ
| [Tuesday 08 March 2011] [08:41:56] <mikko>	zeromq2 code coverage
| [Tuesday 08 March 2011] [08:44:05] <Steve-o>	mikko: so the win64 updates and solaris x86 fixes can be found in the new 5.1.113 tarball
| [Tuesday 08 March 2011] [08:44:18] <Steve-o>	I hope nothing else appears too soon
| [Tuesday 08 March 2011] [08:45:17] <mikko>	Steve-o: will carry on testing those
| [Tuesday 08 March 2011] [08:46:11] <Steve-o>	cmake on win64 is odd, it doesn't produce makefiles by default
| [Tuesday 08 March 2011] [08:46:55] <Steve-o>	at least the packager works reasonably well
| [Tuesday 08 March 2011] [08:50:34] <cremes>	hmmm, yami4 has a wireshark plugin for inspecting frames on the wire
| [Tuesday 08 March 2011] [08:50:52] <cremes>	that's a pretty good idea (pretty good ideas are usually worth stealing)
| [Tuesday 08 March 2011] [08:52:11] <Steve-o>	PGM has been in Wireshark a lot longer :P
| [Tuesday 08 March 2011] [08:52:35] <Steve-o>	not forgetting tcpdump
| [Tuesday 08 March 2011] [08:53:15] <Steve-o>	you could chain the decoders all the way through to your data format
| [Tuesday 08 March 2011] [09:08:10] <Clement>	Hello
| [Tuesday 08 March 2011] [09:08:28] <Guest85177>	I've a problem inside ZMQ DLL
| [Tuesday 08 March 2011] [09:08:43] <Guest85177>	Somebody can help me?
| [Tuesday 08 March 2011] [09:09:07] <Steve-o>	which socket type and binding?
| [Tuesday 08 March 2011] [09:09:29] <Guest85177>	I use CLRZMQ as input
| [Tuesday 08 March 2011] [09:09:38] <Guest85177>	for publishing
| [Tuesday 08 March 2011] [09:09:52] <Guest85177>	I've a memcopy problem
| [Tuesday 08 March 2011] [09:10:15] <Guest85177>	I've used the ZMQ source code
| [Tuesday 08 March 2011] [09:10:20] <Guest85177>	in VS 2010
| [Tuesday 08 March 2011] [09:10:35] <Guest85177>	and I've found this problem
| [Tuesday 08 March 2011] [09:10:48] <Guest85177>	I use TCP binding
| [Tuesday 08 March 2011] [09:11:25] <Steve-o>	k, is it reproducible with a small example?
| [Tuesday 08 March 2011] [09:11:47] <Guest85177>	Badly I don't think so
| [Tuesday 08 March 2011] [09:11:57] <Guest85177>	I reproduce this problem
| [Tuesday 08 March 2011] [09:12:00] <Steve-o>	and have you tried 2.1. or is this 2.0?
| [Tuesday 08 March 2011] [09:14:10] <Steve-o>	have you followed the c# examples in the guide?
| [Tuesday 08 March 2011] [09:14:54] <Guest85177>	I use the 2.1
| [Tuesday 08 March 2011] [09:15:23] <Guest85177>	The problem is that run with few data
| [Tuesday 08 March 2011] [09:15:47] <Guest85177>	and when data rate is bigger
| [Tuesday 08 March 2011] [09:16:04] <Guest85177>	It failed with a C++ exception
| [Tuesday 08 March 2011] [09:16:27] <Steve-o>	out of memory?
| [Tuesday 08 March 2011] [09:16:39] <Guest85177>	No
| [Tuesday 08 March 2011] [09:17:07] <Guest85177>	memcopy
| [Tuesday 08 March 2011] [09:17:45] <Steve-o>	k, sounds like you need one of the C# binding guys to help
| [Tuesday 08 March 2011] [09:18:00] <Steve-o>	stick around for a bit or post more detail on the mailling list
| [Tuesday 08 March 2011] [09:18:31] <Guest85177>	I dont think that it comes from C# bindings
| [Tuesday 08 March 2011] [09:18:50] <Guest85177>	because I've used two wrappers and twice failed
| [Tuesday 08 March 2011] [09:20:19] <mikko>	Guest85177: have you got any debug info?
| [Tuesday 08 March 2011] [09:20:24] <mikko>	backtrace or similar
| [Tuesday 08 March 2011] [09:21:26] <Guest85177>	encoder.hpp line 115
| [Tuesday 08 March 2011] [09:21:35] <Guest85177>	It failed at this line
| [Tuesday 08 March 2011] [09:22:07] <Guest85177>	I use VS with the source code
| [Tuesday 08 March 2011] [09:22:19] <Guest85177>	and pdb
| [Tuesday 08 March 2011] [09:24:14] <Guest85177>	write_pos is designated as a bad pointer
| [Tuesday 08 March 2011] [11:34:17] <andrewvc>	cremes: ping
| [Tuesday 08 March 2011] [12:27:16] <pieter_hintjens>	guido_g: have a new RFC, if you want to review it: http://rfc.zeromq.org/spec:9
| [Tuesday 08 March 2011] [12:30:10] <guido_g>	will do
| [Tuesday 08 March 2011] [12:30:48] <pieter_hintjens>	guido_g: :-)
| [Tuesday 08 March 2011] [12:41:05] <guido_g>	and changes on spec:7
| [Tuesday 08 March 2011] [12:42:12] <private_meta>	Is there any good reason to use a pointer to std::string in the zhelpers for c++? I'm just curious if anyone of you knows
| [Tuesday 08 March 2011] [12:42:18] <private_meta>	in s_recv that is
| [Tuesday 08 March 2011] [12:42:36] <guido_g>	link?
| [Tuesday 08 March 2011] [12:43:45] <private_meta>	sec
| [Tuesday 08 March 2011] [12:43:59] <private_meta>	https://github.com/imatix/zguide/blob/master/examples/C%2B%2B/zhelpers.hpp Line 59
| [Tuesday 08 March 2011] [12:46:28] <guido_g>	it's just because the string is allocated on the heap
| [Tuesday 08 March 2011] [12:48:09] <private_meta>	I'd rather have it on the Stack and not having to handle pointers
| [Tuesday 08 March 2011] [12:50:42] <guido_g>	then you need to pass it to the function
| [Tuesday 08 March 2011] [12:51:06] <private_meta>	I'd use a return value
| [Tuesday 08 March 2011] [12:51:47] <guido_g>	the stack is gone after the return
| [Tuesday 08 March 2011] [12:53:16] <guido_g>	one could return a std::string and rely on the c++ copy semantics, but this might be a problem when optimization is on
| [Tuesday 08 March 2011] [12:53:36] <private_meta>	Why would that be a problen?
| [Tuesday 08 March 2011] [12:53:39] <private_meta>	*problem
| [Tuesday 08 March 2011] [12:53:42] <private_meta>	I do that all the time
| [Tuesday 08 March 2011] [12:53:58] <guido_g>	then it might work ,)
| [Tuesday 08 March 2011] [12:55:02] <private_meta>	doing "std::string func();" just copies the string from the stack of the function to the stack of the function caller
| [Tuesday 08 March 2011] [12:55:29] <guido_g>	right
| [Tuesday 08 March 2011] [12:55:30] <private_meta>	It makes it easier and you don't have to think about dealing with pointers and deletes
| [Tuesday 08 March 2011] [12:55:47] <guido_g>	true
| [Tuesday 08 March 2011] [12:55:50] <private_meta>	It's an advantage in convenience and clean code, but it has a small advantage that you, in fact, do copy code
| [Tuesday 08 March 2011] [12:55:57] <private_meta>	*small disadvantage
| [Tuesday 08 March 2011] [12:56:05] <private_meta>	erm
| [Tuesday 08 March 2011] [12:56:07] <private_meta>	copy data
| [Tuesday 08 March 2011] [12:56:19] <guido_g>	it should be noted that references are not allowed
| [Tuesday 08 March 2011] [12:56:46] <private_meta>	Well, references in return values are problematic anyway
| [Tuesday 08 March 2011] [12:57:04] <private_meta>	References are to be used in parameters
| [Tuesday 08 March 2011] [12:59:23] <guido_g>	const std::string& res = fnc(); <- that would be a problem, right?
| [Tuesday 08 March 2011] [13:00:58] <private_meta>	Well, you are referencing a temporary variable
| [Tuesday 08 March 2011] [13:01:00] <private_meta>	so, yes
| [Tuesday 08 March 2011] [13:01:16] <private_meta>	You could make the value you return static, but that wouldn't work well for multiple threads
| [Tuesday 08 March 2011] [13:01:50] <pieter_hintjens>	private_meta: you can't return references to (a) static values or (b) stack values
| [Tuesday 08 March 2011] [13:03:48] <private_meta>	private_meta: why wouldn't you be able to return static values?
| [Tuesday 08 March 2011] [13:04:25] <private_meta>	int & test() { static int test1 = 5; return test1; }
| [Tuesday 08 March 2011] [13:04:25] <private_meta>	int main() { int blubb = test(); return 0; }
| [Tuesday 08 March 2011] [13:04:33] <private_meta>	theoretically, this works in C++
| [Tuesday 08 March 2011] [13:05:43] <pieter_hintjens>	private_meta: ... reference to A is not the same as value of A
| [Tuesday 08 March 2011] [13:06:08] <private_meta>	I return test1 by reference
| [Tuesday 08 March 2011] [13:06:40] <pieter_hintjens>	int & test()... ok
| [Tuesday 08 March 2011] [13:08:13] <pieter_hintjens>	so you return reference to value on the stack, stack is now unwound, value no longer exists...
| [Tuesday 08 March 2011] [13:09:07] <pieter_hintjens>	sorry, my C++ fu is too limited, /me sits down and shuts up
| [Tuesday 08 March 2011] [13:09:29] <private_meta>	Well, that's what static would be for
| [Tuesday 08 March 2011] [13:09:44] <private_meta>	static means the value remains and isn't killed once the function is done.
| [Tuesday 08 March 2011] [13:10:06] <private_meta>	The problem with that is that you get troubles with threads, so concurrent access of the function
| [Tuesday 08 March 2011] [13:10:12] <pieter_hintjens>	yes, but then it's not thread safe
| [Tuesday 08 March 2011] [13:10:16] <private_meta>	Yes
| [Tuesday 08 March 2011] [13:10:19] <private_meta>	As I said
| [Tuesday 08 March 2011] [13:11:01] <private_meta>	So, basically you have some ways to return values. As a reference to a static value, but that is not thread safe. as a pointer, but you always have to delete the pointer afterwards.
| [Tuesday 08 March 2011] [13:11:05] <pieter_hintjens>	ok, so you *shouldn't* return references (or pointers, in C) to static items or items on the stack
| [Tuesday 08 March 2011] [13:11:41] <private_meta>	It's pretty much the same with everything in C++
| [Tuesday 08 March 2011] [13:11:51] <private_meta>	You can use it if you really know what you are doing and you REALLY need it that way
| [Tuesday 08 March 2011] [13:12:03] <pieter_hintjens>	you can *safely* return a value (1, 'c') or a newly allocated buffer
| [Tuesday 08 March 2011] [13:12:32] <private_meta>	continuing: Why I don't like returning a pointer to std::string: You use the return mechanism. Returning it, immediately being able to use it further, let's say in a different function
| [Tuesday 08 March 2011] [13:12:44] <private_meta>	but as you have to DELETE the value to avoid memory leaks, you have to store it somewhere
| [Tuesday 08 March 2011] [13:13:01] <private_meta>	which makes the entire mechanic of returning by "return;" kindof useless
| [Tuesday 08 March 2011] [13:13:33] <private_meta>	If you do it like that, you can also return it as an in/out parameter
| [Tuesday 08 March 2011] [13:14:02] <pieter_hintjens>	afaik 0MQ does this for new messages, allocates them on the stack if small, heap if large
| [Tuesday 08 March 2011] [13:14:19] <private_meta>	Example: you want to transform clock time into a string. The clean C++ Way is to push it into a stringstream.
| [Tuesday 08 March 2011] [13:14:37] <private_meta>	Now You receive the message, push it into the stringstream and extract an integer
| [Tuesday 08 March 2011] [13:16:15] <private_meta>	For me "sstream.str(s_recv(endpoint)); ss >> number;" looks way better than "std::string * string = s_recv(endpoint); ss.str(*string); ss>>number; delete string;"
| [Tuesday 08 March 2011] [13:16:33] <private_meta>	Don't know if I bring across my point properly
| [Tuesday 08 March 2011] [13:17:54] <private_meta>	So, it's for neatness of code, and for the fact that I would like any and all possibilities to safeguard against memory leaks
| [Tuesday 08 March 2011] [13:31:46] <pieter_hintjens>	the neater the better
| [Tuesday 08 March 2011] [13:32:07] <pieter_hintjens>	it was unclear what you were asking, tbh
| [Tuesday 08 March 2011] [13:37:58] <andrewvc>	cremes: ping
| [Tuesday 08 March 2011] [13:38:09] <private_meta>	pieter_hintjens: is it clearer now, or is it still unclear?
| [Tuesday 08 March 2011] [13:38:12] <cremes>	andrewvc: pong
| [Tuesday 08 March 2011] [13:38:36] <pieter_hintjens>	private_meta: it's clear and my opinion, fwiw, is that neatness is always worth it
| [Tuesday 08 March 2011] [13:38:55] <pieter_hintjens>	IMO the original code was a straight conversion of the C code
| [Tuesday 08 March 2011] [13:39:11] <pieter_hintjens>	cremes: wireshark is a great idea, want to add it to the wiki (GSoC page?)
| [Tuesday 08 March 2011] [13:39:23] <private_meta>	pieter_hintjens: Then I'll change the receive method for zhelpers.hpp and update all the already translated files
| [Tuesday 08 March 2011] [13:39:35] <private_meta>	pieter_hintjens: is that ok?
| [Tuesday 08 March 2011] [13:39:39] <pieter_hintjens>	for sure...
| [Tuesday 08 March 2011] [13:39:43] <pieter_hintjens>	you're not using git, right?
| [Tuesday 08 March 2011] [13:39:50] <private_meta>	No
| [Tuesday 08 March 2011] [13:40:09] <private_meta>	I could try to start using it, but I'm absolutely not knowledgeable about it
| [Tuesday 08 March 2011] [13:40:16] <pieter_hintjens>	it's unsafe to send full modified versions of files
| [Tuesday 08 March 2011] [13:40:20] <pieter_hintjens>	patches are better
| [Tuesday 08 March 2011] [13:40:48] <pieter_hintjens>	if you want, I'll walk you through an instant git course
| [Tuesday 08 March 2011] [13:40:55] <pieter_hintjens>	it'll take a few minutes
| [Tuesday 08 March 2011] [13:41:07] <private_meta>	Which OS are you using?
| [Tuesday 08 March 2011] [13:41:11] <pieter_hintjens>	Linux
| [Tuesday 08 March 2011] [13:41:21] <private_meta>	kk
| [Tuesday 08 March 2011] [13:41:25] <pieter_hintjens>	you are on?
| [Tuesday 08 March 2011] [13:41:44] <private_meta>	Well, my coding environment is Ubuntu in a virtual machine, my host system is Windows, so I pretty much have both
| [Tuesday 08 March 2011] [13:41:45] <cremes>	pieter_hintjens: i'll add it!
| [Tuesday 08 March 2011] [13:42:11] <private_meta>	Wireshark is a fine tool
| [Tuesday 08 March 2011] [13:42:12] <pieter_hintjens>	private_meta: ok, either Windows or Ubuntu is fine, first install git and make sure it works from the command line
| [Tuesday 08 March 2011] [13:42:33] <pieter_hintjens>	apt-get install git-all
| [Tuesday 08 March 2011] [13:43:06] <pieter_hintjens>	hmm, or just the 'git' package, git-all may be large
| [Tuesday 08 March 2011] [13:43:13] <private_meta>	"Couldn't find package git-all" :D
| [Tuesday 08 March 2011] [13:44:06] <private_meta>	Neither git or git-all are in my repos
| [Tuesday 08 March 2011] [13:44:21] <pieter_hintjens>	'sudo apt-get dist-upgrade' :-)
| [Tuesday 08 March 2011] [13:44:32] <pieter_hintjens>	'sudo apt-get git<TAB>'
| [Tuesday 08 March 2011] [13:44:34] <private_meta>	I do that regularily
| [Tuesday 08 March 2011] [13:45:08] <pieter_hintjens>	sorry... 'sudo apt-get install git<TAB>'
| [Tuesday 08 March 2011] [13:45:09] <private_meta>	I got git-core
| [Tuesday 08 March 2011] [13:45:12] <pieter_hintjens>	install it
| [Tuesday 08 March 2011] [13:45:22] <private_meta>	apt-get doesn't have autocomplete
| [Tuesday 08 March 2011] [13:47:36] <pieter_hintjens>	installed?
| [Tuesday 08 March 2011] [13:48:09] <pieter_hintjens>	configure git so we know who you are:
| [Tuesday 08 March 2011] [13:48:10] <pieter_hintjens>	git config --global user.name "Your Name"
| [Tuesday 08 March 2011] [13:48:11] <pieter_hintjens>	git config --global user.email you@example.com
| [Tuesday 08 March 2011] [13:48:16] <private_meta>	There is no git-all
| [Tuesday 08 March 2011] [13:48:31] <pieter_hintjens>	'sudo apt-get install git-core' was what I meant...
| [Tuesday 08 March 2011] [13:48:36] <pieter_hintjens>	by 'install it'
| [Tuesday 08 March 2011] [13:48:37] <pieter_hintjens>	sorry
| [Tuesday 08 March 2011] [13:49:00] 	 * pieter_hintjens is noting these steps, will make a quick guide for new git users
| [Tuesday 08 March 2011] [13:49:47] <private_meta>	I'm using my nickname for username
| [Tuesday 08 March 2011] [13:50:31] <pieter_hintjens>	you need to use your real name and email for contributions
| [Tuesday 08 March 2011] [13:50:38] <private_meta>	meh
| [Tuesday 08 March 2011] [13:51:09] <pieter_hintjens>	it's about being able to reuse what you make
| [Tuesday 08 March 2011] [13:51:21] <private_meta>	sure,doen
| [Tuesday 08 March 2011] [13:51:23] <private_meta>	*done
| [Tuesday 08 March 2011] [13:51:29] <pieter_hintjens>	if you are (e.g.) prohibited by your company from making FOSS contributions, etc. etc.
| [Tuesday 08 March 2011] [13:51:40] <pieter_hintjens>	ok, next, http://www.zeromq.org/docs:contributing
| [Tuesday 08 March 2011] [13:51:53] <private_meta>	We're in academic research, it should be ok :p
| [Tuesday 08 March 2011] [13:52:04] <pieter_hintjens>	Read the 'Contributing to 0MQ Core' part
| [Tuesday 08 March 2011] [13:52:15] <private_meta>	Ah yeah... github blocked me
| [Tuesday 08 March 2011] [13:52:33] <pieter_hintjens>	we'll clone the Guide: 
| [Tuesday 08 March 2011] [13:52:35] <pieter_hintjens>	git clone git://github.com/imatix/zguide.git
| [Tuesday 08 March 2011] [13:53:04] <pieter_hintjens>	this gives you a full fork of the main repository, history and everything
| [Tuesday 08 March 2011] [13:53:46] <pieter_hintjens>	that is the main difference between SVN and git, lots of copies of the whole repository, all over the place
| [Tuesday 08 March 2011] [13:54:12] <private_meta>	ok, so my username on github is still taken
| [Tuesday 08 March 2011] [13:54:22] <private_meta>	but none of my email addresses are still connected to that account
| [Tuesday 08 March 2011] [13:54:55] <private_meta>	As far as I've heard is that the main point of it is using forks all over
| [Tuesday 08 March 2011] [13:55:25] <private_meta>	pieter_hintjens: it's odne
| [Tuesday 08 March 2011] [13:55:26] <pieter_hintjens>	we can forget github at this point except as a URI to clone off
| [Tuesday 08 March 2011] [13:55:29] <private_meta>	*done
| [Tuesday 08 March 2011] [13:55:39] <pieter_hintjens>	ok, now you can 'cd zguide' and look around
| [Tuesday 08 March 2011] [13:56:04] <pieter_hintjens>	cd examples/C++
| [Tuesday 08 March 2011] [13:57:02] <pieter_hintjens>	git log --name-only .
| [Tuesday 08 March 2011] [13:57:03] <private_meta>	yeah, got the files there
| [Tuesday 08 March 2011] [13:57:26] <pieter_hintjens>	now you make any changes you want, build, test (:-)) and then...
| [Tuesday 08 March 2011] [13:57:47] <pieter_hintjens>	git add .
| [Tuesday 08 March 2011] [13:58:09] <pieter_hintjens>	git commit -s -m "Explain what you fixed"
| [Tuesday 08 March 2011] [13:58:23] <pieter_hintjens>	git format-patch origin/master
| [Tuesday 08 March 2011] [13:58:44] <private_meta>	Doing it like that is somewhat annoying... I'm using eclipse cdt, and as every file has a main (almost), compiling is a hassle in eclipse
| [Tuesday 08 March 2011] [13:59:21] <pieter_hintjens>	open a console, use './build all'
| [Tuesday 08 March 2011] [13:59:32] <private_meta>	I don't want console build logs
| [Tuesday 08 March 2011] [13:59:41] <private_meta>	I'm not using an IDE to build like that
| [Tuesday 08 March 2011] [13:59:46] <private_meta>	at least I don't want to
| [Tuesday 08 March 2011] [13:59:52] <pieter_hintjens>	console build logs?
| [Tuesday 08 March 2011] [14:00:29] <pieter_hintjens>	perhaps try what I suggest before explaining why you don't want to use it... ?
| [Tuesday 08 March 2011] [14:02:01] <private_meta>	Yeah, I did, but it's exactly what i don't like
| [Tuesday 08 March 2011] [14:02:17] 	 * pieter_hintjens doesn't follow...
| [Tuesday 08 March 2011] [14:02:29] <pieter_hintjens>	how do you intend to start/stop these examples?
| [Tuesday 08 March 2011] [14:02:43] <private_meta>	Eclipse has integration (duh, [I]DE), i can jump to error lines by click, error lines are neatly formatted, I don't want to compile by command line
| [Tuesday 08 March 2011] [14:03:19] <private_meta>	I build/debug within eclipse, but I either use different projects for different files, or I use build targets
| [Tuesday 08 March 2011] [14:03:28] <pieter_hintjens>	sorry, I can't help you, your 'Easier to use environment' is making your life harder
| [Tuesday 08 March 2011] [14:03:44] <private_meta>	and, I know you can do /build <examplename>, but imho that's not my point
| [Tuesday 08 March 2011] [14:04:01] <pieter_hintjens>	there's a reason I can produce 300-500 *tested* and documented lines of C code in a day
| [Tuesday 08 March 2011] [14:04:08] <private_meta>	Well, wasn't before ;)
| [Tuesday 08 March 2011] [14:04:20] 	 * cremes ooh, ide smack down!
| [Tuesday 08 March 2011] [14:04:26] <private_meta>	What editor do you use?
| [Tuesday 08 March 2011] [14:04:29] <pieter_hintjens>	Kate
| [Tuesday 08 March 2011] [14:05:11] <private_meta>	I don't want to use that, I got used to autocomplete and other stoff
| [Tuesday 08 March 2011] [14:05:14] <private_meta>	*stuff
| [Tuesday 08 March 2011] [14:05:18] <pieter_hintjens>	exactly
| [Tuesday 08 March 2011] [14:05:37] <pieter_hintjens>	ok, make the changes, test, any way you feel happy, not my world
| [Tuesday 08 March 2011] [14:06:13] <pieter_hintjens>	'git diff' at any point to show the differences
| [Tuesday 08 March 2011] [14:06:27] <pieter_hintjens>	and once you have the formatted patch, email it to the zeromq-dev list
| [Tuesday 08 March 2011] [14:06:39] <private_meta>	hmm... how do you debug?
| [Tuesday 08 March 2011] [14:06:40] <pieter_hintjens>	that's the official contribution process
| [Tuesday 08 March 2011] [14:06:43] <pieter_hintjens>	debug? 
| [Tuesday 08 March 2011] [14:06:46] <pieter_hintjens>	don't make errors
| [Tuesday 08 March 2011] [14:06:47] <pieter_hintjens>	:-)
| [Tuesday 08 March 2011] [14:06:54] <pieter_hintjens>	just kidding...
| [Tuesday 08 March 2011] [14:07:08] <private_meta>	Don't worry, didn't take it seriously
| [Tuesday 08 March 2011] [14:07:21] <pieter_hintjens>	first, if you write methods, test them explicitly
| [Tuesday 08 March 2011] [14:07:40] <pieter_hintjens>	so anything abstracted has its own selftests
| [Tuesday 08 March 2011] [14:07:54] <private_meta>	You don't answer my question with that
| [Tuesday 08 March 2011] [14:08:01] <private_meta>	(how) do you debug?
| [Tuesday 08 March 2011] [14:08:04] <pieter_hintjens>	second, I use printfs
| [Tuesday 08 March 2011] [14:08:11] <pieter_hintjens>	optional verbose tracing
| [Tuesday 08 March 2011] [14:08:16] <pieter_hintjens>	message dumps
| [Tuesday 08 March 2011] [14:08:27] <pieter_hintjens>	never debuggers
| [Tuesday 08 March 2011] [14:08:35] <private_meta>	I didn't get into perl to avoid exactly THAT
| [Tuesday 08 March 2011] [14:08:35] <pieter_hintjens>	never stepping through code, fgs
| [Tuesday 08 March 2011] [14:09:06] <private_meta>	fgs?
| [Tuesday 08 March 2011] [14:09:08] 	 * guido_g just got this above mentioned silly productivty tool to work w/ git
| [Tuesday 08 March 2011] [14:09:22] <pieter_hintjens>	expression of hope
| [Tuesday 08 March 2011] [14:10:02] <private_meta>	"for gods sake"?
| [Tuesday 08 March 2011] [14:10:05] <pieter_hintjens>	indeed
| [Tuesday 08 March 2011] [14:10:23] <private_meta>	kk
| [Tuesday 08 March 2011] [14:11:23] <pieter_hintjens>	how to debug? it depends on the kind of problem you're facing
| [Tuesday 08 March 2011] [14:11:56] <private_meta>	no, don't worry, your kind of "debugging" isn't what I would want to do
| [Tuesday 08 March 2011] [14:12:00] <private_meta>	it's ok
| [Tuesday 08 March 2011] [14:12:39] <pieter_hintjens>	if you know a faster way to produce perfect code, please tell me
| [Tuesday 08 March 2011] [14:12:59] <pieter_hintjens>	always keen to learn
| [Tuesday 08 March 2011] [14:13:25] <pieter_hintjens>	anyhowl y
| [Tuesday 08 March 2011] [14:13:32] <pieter_hintjens>	anyhow, you have git working
| [Tuesday 08 March 2011] [14:13:45] <pieter_hintjens>	stay away from branches, merges, etc. for a few weeks
| [Tuesday 08 March 2011] [14:13:51] <private_meta>	If it works for you, just do it that way, it's ok, as I said
| [Tuesday 08 March 2011] [14:14:01] <private_meta>	I couldn't do it that way, it would drive me insane
| [Tuesday 08 March 2011] [14:14:26] <private_meta>	Don't worry, I won't use it for anything other than this for quite some time I guess
| [Tuesday 08 March 2011] [14:15:11] <pieter_hintjens>	cremes: random question
| [Tuesday 08 March 2011] [14:15:33] <cremes>	pieter_hintjens: then you won't mind a random answer?
| [Tuesday 08 March 2011] [14:15:42] <pieter_hintjens>	that'll do fine
| [Tuesday 08 March 2011] [14:16:21] <pieter_hintjens>	hang on, you answered with a  question, doesn't count
| [Tuesday 08 March 2011] [14:16:31] <cremes>	heh
| [Tuesday 08 March 2011] [14:16:38] <pieter_hintjens>	so I'm wondering, do I make a massive Ch4 with all reliability, all patterns
| [Tuesday 08 March 2011] [14:17:00] <pieter_hintjens>	or split it up, so reliable request-reply in Ch4, reliable pubsub Ch5
| [Tuesday 08 March 2011] [14:17:07] <cremes>	split 'em
| [Tuesday 08 March 2011] [14:17:19] <pieter_hintjens>	excellent, thanks
| [Tuesday 08 March 2011] [14:18:03] <pieter_hintjens>	BTW I have full disconnected acknowledged persistent disk-based reliability working
| [Tuesday 08 March 2011] [14:18:19] <pieter_hintjens>	I'm kind of afraid to measure its performance
| [Tuesday 08 March 2011] [14:18:22] <cremes>	very nice
| [Tuesday 08 March 2011] [14:18:43] <cremes>	don't worry, you can always improve perf by throwing a memory cache in between
| [Tuesday 08 March 2011] [14:18:45] <cremes>	;)
| [Tuesday 08 March 2011] [14:18:49] <pieter_hintjens>	lol
| [Tuesday 08 March 2011] [14:37:14] <moore>	hey any one else have issues with the easy install?
| [Tuesday 08 March 2011] [14:37:24] <moore>	I get a trace back with debian
| [Tuesday 08 March 2011] [14:37:29] <moore>	err
| [Tuesday 08 March 2011] [14:37:30] <moore>	ubuntu
| [Tuesday 08 March 2011] [14:37:43] <moore>	IndexError: list index out of range
| [Tuesday 08 March 2011] [14:42:37] <private_meta>	pieter_hintjens: how do i update for new changes?
| [Tuesday 08 March 2011] [14:42:37] <guido_g>	easy install of what?
| [Tuesday 08 March 2011] [14:42:57] <guido_g>	moore: you need to tell at least what you did
| [Tuesday 08 March 2011] [14:43:03] <pieter_hintjens>	private_meta: you mean if the repository you cloned is updated?
| [Tuesday 08 March 2011] [14:43:21] <pieter_hintjens>	i.e. with your patches...?
| [Tuesday 08 March 2011] [14:43:42] <private_meta>	no. let's say I have 5 files I work on, 15 files I don't, and I want those 15 files updated with the master repo
| [Tuesday 08 March 2011] [14:43:42] <guido_g>	private_meta: you might want to try egit w/ eclipse, seems to work fine
| [Tuesday 08 March 2011] [14:44:07] <pieter_hintjens>	guido_g: hang on, let'
| [Tuesday 08 March 2011] [14:44:16] <pieter_hintjens>	let's see what private meta wants to achieve...
| [Tuesday 08 March 2011] [14:44:27] <guido_g>	ok
| [Tuesday 08 March 2011] [14:44:28] <pieter_hintjens>	the 15 files you don't touch, you just don't touch...
| [Tuesday 08 March 2011] [14:44:34] <private_meta>	Well, ok 
| [Tuesday 08 March 2011] [14:44:42] <private_meta>	I have my offline cloned repository
| [Tuesday 08 March 2011] [14:44:46] <pieter_hintjens>	yes
| [Tuesday 08 March 2011] [14:44:51] <private_meta>	I take your files and translate them to C
| [Tuesday 08 March 2011] [14:44:59] <private_meta>	let's say you add a new file
| [Tuesday 08 March 2011] [14:45:03] <pieter_hintjens>	to C?
| [Tuesday 08 March 2011] [14:45:05] <private_meta>	Yes
| [Tuesday 08 March 2011] [14:45:13] <pieter_hintjens>	you take my C code and translate to C?
| [Tuesday 08 March 2011] [14:45:14] <private_meta>	and you add the stubs to C++
| [Tuesday 08 March 2011] [14:45:20] 	 * pieter_hintjens is confused
| [Tuesday 08 March 2011] [14:45:27] <private_meta>	how do I get your C versions and the C++ stub to my repostiory
| [Tuesday 08 March 2011] [14:45:30] <private_meta>	repository
| [Tuesday 08 March 2011] [14:45:55] <pieter_hintjens>	so you spoke about making a change to zhelpers.hpp and matching changes to programs that used it
| [Tuesday 08 March 2011] [14:46:22] <private_meta>	Well, that's ok, i do my diff, and blah...
| [Tuesday 08 March 2011] [14:46:32] <private_meta>	but suppose you add a file and I wanna get that into my repo
| [Tuesday 08 March 2011] [14:46:36] <pieter_hintjens>	ah, ok
| [Tuesday 08 March 2011] [14:46:43] <pieter_hintjens>	so I have added two new files for the Titanic pattern
| [Tuesday 08 March 2011] [14:47:26] <pieter_hintjens>	so you will update your repo by pulling the latest version from mine
| [Tuesday 08 March 2011] [14:47:32] <pieter_hintjens>	that is, 'git pull origin master'
| [Tuesday 08 March 2011] [14:47:55] <pieter_hintjens>	this fetches the master branch from 'origin', which is where you cloned your repo from
| [Tuesday 08 March 2011] [14:48:02] <pieter_hintjens>	and it then merges that into your repo
| [Tuesday 08 March 2011] [14:48:10] <private_meta>	Does it merge with files I modified?
| [Tuesday 08 March 2011] [14:48:14] <pieter_hintjens>	if the merge fails, you have conflicts etc.
| [Tuesday 08 March 2011] [14:48:41] <pieter_hintjens>	the main problem with the files you modified is that if I apply your formatted patch, you'll get a bunch of conflicts
| [Tuesday 08 March 2011] [14:49:27] <pieter_hintjens>	basically, this is why github pull requests are safer & easier (if you can get your github account working)
| [Tuesday 08 March 2011] [14:49:29] <private_meta>	So if I want to get new files, I have to pull all changes from the master
| [Tuesday 08 March 2011] [14:49:54] <pieter_hintjens>	you can take individual changes if you want, but it's more hassle
| [Tuesday 08 March 2011] [14:50:38] <pieter_hintjens>	in order for me to *safely* merge your changes into my repo, I have to set-up your repo as a remote, and do 'pull' from it
| [Tuesday 08 March 2011] [14:50:49] <pieter_hintjens>	which isn't possible in this case
| [Tuesday 08 March 2011] [14:50:54] <private_meta>	Why so?
| [Tuesday 08 March 2011] [14:51:01] <pieter_hintjens>	you have a git server running?
| [Tuesday 08 March 2011] [14:51:32] <private_meta>	No. That seems to be the kind of stuff to set up that made me think normal git is complicated to setup
| [Tuesday 08 March 2011] [14:51:36] <pieter_hintjens>	I mean, it's not very difficult, but unless you have that, your repository is not going to respond to my git pull requests
| [Tuesday 08 March 2011] [14:51:43] <pieter_hintjens>	even I can set-up a git server
| [Tuesday 08 March 2011] [14:51:51] <pieter_hintjens>	however I *far* prefer to use github
| [Tuesday 08 March 2011] [14:52:10] <pieter_hintjens>	so, after sending me the formatted patch, you reset your repository to where it was before
| [Tuesday 08 March 2011] [14:52:23] <pieter_hintjens>	'git reset --hard <whatever>'
| [Tuesday 08 March 2011] [14:52:33] <pieter_hintjens>	or, reclone the whole thing
| [Tuesday 08 March 2011] [14:52:51] <pieter_hintjens>	or, resolve a bunch of conflicts afterwards
| [Tuesday 08 March 2011] [14:53:03] <pieter_hintjens>	or, just get github working, and send me a pull request
| [Tuesday 08 March 2011] [14:53:04] <mikko>	good evening
| [Tuesday 08 March 2011] [14:53:13] <pieter_hintjens>	hi mikko!
| [Tuesday 08 March 2011] [14:53:16] <private_meta>	I think I prefer the reset
| [Tuesday 08 March 2011] [14:53:29] <pieter_hintjens>	yeah, it's what I do when I send sustrik a zeromq patch
| [Tuesday 08 March 2011] [15:31:36] <private_meta>	pieter_hintjens: do i need to execute those git add and git commit lines even if I don't actually write anything to the server, just to generate a patch?
| [Tuesday 08 March 2011] [15:31:53] <pieter_hintjens>	if you want a signed-off and formatted patch, yes
| [Tuesday 08 March 2011] [15:32:05] <pieter_hintjens>	however you can also run 'git diff' and capture the output
| [Tuesday 08 March 2011] [15:32:33] <private_meta>	and git format-patch origin/master <-- origin is the url with .git at the end?
| [Tuesday 08 March 2011] [15:32:41] <pieter_hintjens>	origin is a 'remote'
| [Tuesday 08 March 2011] [15:32:47] <pieter_hintjens>	try 'git remote -v'
| [Tuesday 08 March 2011] [15:33:15] <pieter_hintjens>	you'd type that command as-is
| [Tuesday 08 March 2011] [15:33:20] <private_meta>	ah ok
| [Tuesday 08 March 2011] [15:33:49] <Guthur>	on linux I seem to be getting a lot interrupt system call errors
| [Tuesday 08 March 2011] [15:33:52] <pieter_hintjens>	all I can say for git is it gets easier and more obvious over time
| [Tuesday 08 March 2011] [15:33:53] <private_meta>	so origin is somewhat of a variable in git, and master is the repo in there
| [Tuesday 08 March 2011] [15:33:57] <Guthur>	anyone noticed this behaviour before
| [Tuesday 08 March 2011] [15:33:59] <pieter_hintjens>	yes
| [Tuesday 08 March 2011] [15:34:22] <pieter_hintjens>	Guthur: you upgraded to a more recent version of 0MQ?
| [Tuesday 08 March 2011] [15:34:47] <Guthur>	I should be on a pretty recent version
| [Tuesday 08 March 2011] [15:34:49] <Guthur>	let me check
| [Tuesday 08 March 2011] [15:35:45] <Guthur>	2.2
| [Tuesday 08 March 2011] [15:36:04] <pieter_hintjens>	source repository, thus
| [Tuesday 08 March 2011] [15:36:17] <pieter_hintjens>	did you recently upgrade from an older version?
| [Tuesday 08 March 2011] [15:36:21] <pieter_hintjens>	e.g. 2.0.10?
| [Tuesday 08 March 2011] [15:36:30] <Guthur>	pieter_hintjens, yep
| [Tuesday 08 March 2011] [15:36:45] <pieter_hintjens>	then presumably interrupt handling changed
| [Tuesday 08 March 2011] [15:36:58] <pieter_hintjens>	have you checked the release notes?
| [Tuesday 08 March 2011] [15:37:35] <pieter_hintjens>	finally, an example of what you are doing would be helpful
| [Tuesday 08 March 2011] [15:37:58] <nadime>	in 2.1.2, we can migrate all sockets between threads (including inproc), right (with full memory barriers)
| [Tuesday 08 March 2011] [15:38:02] <nadime>	?
| [Tuesday 08 March 2011] [15:38:05] <pieter_hintjens>	a minimal example that reproduces an interrupted system call
| [Tuesday 08 March 2011] [15:38:24] <pieter_hintjens>	nadime: don't do it unless you are happy writing full fence memory barriers
| [Tuesday 08 March 2011] [15:39:07] <pieter_hintjens>	slightly imperfect socket migration causes 0MQ to fail with random errors under stress
| [Tuesday 08 March 2011] [15:39:11] <nadime>	don't really have a good choice unless i want to rewrite our threadng libraries
| [Tuesday 08 March 2011] [15:39:50] <pieter_hintjens>	be warned, then, when you get weird assertion failures in 0MQ, and you're moving sockets between threads, this is a major cause
| [Tuesday 08 March 2011] [15:39:56] <pieter_hintjens>	having said that, yes, it works
| [Tuesday 08 March 2011] [15:39:58] <nadime>	yeah i know
| [Tuesday 08 March 2011] [15:40:09] <nadime>	i'm in such a case right now ;)
| [Tuesday 08 March 2011] [15:40:23] <Guthur>	pieter_hintjens, I'll try to get a minimal example
| [Tuesday 08 March 2011] [15:40:32] <pieter_hintjens>	Guthur: ok, pl;ease
| [Tuesday 08 March 2011] [15:40:41] <Guthur>	the same code works fine enough on Win32, just as an FYI
| [Tuesday 08 March 2011] [15:40:41] <pieter_hintjens>	*please post to list, I'm not here all the time
| [Tuesday 08 March 2011] [15:40:48] <pieter_hintjens>	yeah, "it works" is often random
| [Tuesday 08 March 2011] [15:42:16] <Guthur>	I've never seen anything similar on Win32, but it's very frequent on linux (Ubuntu 10.04)
| [Tuesday 08 March 2011] [15:42:47] <Guthur>	but I know what you're going to ask me to do...
| [Tuesday 08 March 2011] [15:42:56] <Guthur>	show a C example, hehe
| [Tuesday 08 March 2011] [15:43:02] <pieter_hintjens>	Guthur: if you want help on an issue, telling me where it works is useless
| [Tuesday 08 March 2011] [15:43:04] <Guthur>	this is C# code
| [Tuesday 08 March 2011] [15:43:15] <pieter_hintjens>	what we need is a *minimal* example in any language
| [Tuesday 08 March 2011] [15:43:28] <pieter_hintjens>	we then translate that to C or C++ to ensure we're not hitting a language binding issue
| [Tuesday 08 March 2011] [15:43:50] <pieter_hintjens>	that lets us triangulate the problem
| [Tuesday 08 March 2011] [15:46:26] <private_meta>	pieter_hintjens: does git also store file permissions, like "executable"? It seems so
| [Tuesday 08 March 2011] [15:46:45] <pieter_hintjens>	private_meta: yes, and it also realizes that text files are... text... automatically
| [Tuesday 08 March 2011] [15:47:08] <private_meta>	pieter_hintjens: in your examples folder, C, "asyncsrv.c" is executable, I doubt that's intended
| [Tuesday 08 March 2011] [15:47:19] <pieter_hintjens>	let me check.. 
| [Tuesday 08 March 2011] [15:47:33] <pieter_hintjens>	hah! nice catch
| [Tuesday 08 March 2011] [15:50:55] <private_meta>	oy... lruqueue.cpp throws an exception
| [Tuesday 08 March 2011] [15:51:02] <private_meta>	the unmodified one in the repo
| [Tuesday 08 March 2011] [15:51:28] <Guthur>	pieter_hintjens: https://gist.github.com/861018
| [Tuesday 08 March 2011] [15:51:50] <Guthur>	if i remove that sleep I get the error pretty consistently
| [Tuesday 08 March 2011] [15:52:31] <pieter_hintjens>	you get the error *where*?
| [Tuesday 08 March 2011] [15:52:39] <pieter_hintjens>	on the poll?
| [Tuesday 08 March 2011] [15:53:43] <Guthur>	yep
| [Tuesday 08 March 2011] [15:54:09] <pieter_hintjens>	perhaps it's not an error at all
| [Tuesday 08 March 2011] [15:54:21] <pieter_hintjens>	'interrupted system call' means something interrupted the system call
| [Tuesday 08 March 2011] [15:54:24] <Guthur>	errno is set to 4#
| [Tuesday 08 March 2011] [15:54:30] <pieter_hintjens>	shrug
| [Tuesday 08 March 2011] [15:54:34] <Guthur>	and the poll is returning -1
| [Tuesday 08 March 2011] [15:55:01] <pieter_hintjens>	ok, now make a C version, should be easy
| [Tuesday 08 March 2011] [15:55:26] <pieter_hintjens>	the example looks straight-forward so I'd primarily suspect the C# binding
| [Tuesday 08 March 2011] [15:55:27] <Guthur>	I knew you were going to say that, hehe
| [Tuesday 08 March 2011] [15:55:56] <pieter_hintjens>	are you checking what the zmq_poll() call itself returns?
| [Tuesday 08 March 2011] [15:56:02] <Guthur>	yeah
| [Tuesday 08 March 2011] [15:56:13] <Guthur>	that's what I use to throw the exception
| [Tuesday 08 March 2011] [15:56:18] <pieter_hintjens>	hmm
| [Tuesday 08 March 2011] [15:56:40] <Guthur>	if it's less than 0 I throw the exception which checks the errno
| [Tuesday 08 March 2011] [15:56:54] <pieter_hintjens>	the code really looks fine...
| [Tuesday 08 March 2011] [15:57:07] <Guthur>	I know and with the sleep it works
| [Tuesday 08 March 2011] [15:57:17] 	 * pieter_hintjens doesn't care when it works... 
| [Tuesday 08 March 2011] [15:57:22] 	 * pieter_hintjens really doesn't
| [Tuesday 08 March 2011] [15:57:39] <Guthur>	well without the sleep it doesn't work then
| [Tuesday 08 March 2011] [15:58:22] <pieterh>	without the "exit" it doesn't work either
| [Tuesday 08 March 2011] [15:58:35] <pieterh>	can you get me a C version then?
| [Tuesday 08 March 2011] [15:59:02] <Guthur>	it'll take a bit of time
| [Tuesday 08 March 2011] [15:59:09] <Guthur>	I've no C dev env setup
| [Tuesday 08 March 2011] [15:59:55] <pieterh>	ok, can you then instead
| [Tuesday 08 March 2011] [16:00:08] <pieterh>	expand your example to actually show the error happening (I don't see any exception handling)
| [Tuesday 08 March 2011] [16:00:13] <pieterh>	and post to the zeromq-dev list?
| [Tuesday 08 March 2011] [16:00:43] <Guthur>	oh yeah I can catch the exception
| [Tuesday 08 March 2011] [16:01:19] <Guthur>	but i'm not sure why I should be getting it in the first place
| [Tuesday 08 March 2011] [16:09:53] <pieterh>	g'night all
| [Tuesday 08 March 2011] [16:31:11] <yrashk>	https://github.com/rigtorp/nanomq heh
| [Tuesday 08 March 2011] [16:54:59] <noah>	does anyone know if it is possible to determine if a bidirectional socket has been closed?
| [Tuesday 08 March 2011] [16:55:18] <noah>	through ZMQ, without pinging and such
| [Tuesday 08 March 2011] [16:55:23] <mikko>	noah: you mean the other end has been closed?
| [Tuesday 08 March 2011] [16:55:28] <noah>	right
| [Tuesday 08 March 2011] [16:55:45] <mikko>	bidirectional being PAIR? 
| [Tuesday 08 March 2011] [16:55:58] <mikko>	and to answer your question, not directly
| [Tuesday 08 March 2011] [17:02:48] <Guthur>	can anyone see why the SUB doesn't receive anything?
| [Tuesday 08 March 2011] [17:02:49] <Guthur>	https://gist.github.com/861182
| [Tuesday 08 March 2011] [17:03:26] <mikko>	Guthur: zmq_bind(skt, "tcp://*5555");
| [Tuesday 08 March 2011] [17:03:28] <guido_g>	"tcp://*5555"  <- wrong
| [Tuesday 08 March 2011] [17:03:29] <mikko>	missing color
| [Tuesday 08 March 2011] [17:03:31] <mikko>	colon*
| [Tuesday 08 March 2011] [17:03:38] <Guthur>	oh doh
| [Tuesday 08 March 2011] [17:03:45] <Guthur>	never seen that at all
| [Tuesday 08 March 2011] [17:03:56] <Guthur>	cheers mikko 
| [Tuesday 08 March 2011] [17:03:59] <guido_g>	use larger font ,)
| [Tuesday 08 March 2011] [17:04:16] 	 * Guthur  feels a little silly
| [Tuesday 08 March 2011] [17:05:29] <guido_g>	time get some sleep
| [Tuesday 08 March 2011] [17:05:33] <guido_g>	night all!
| [Tuesday 08 March 2011] [17:06:00] <mikko>	night 
| [Tuesday 08 March 2011] [17:18:10] <Guthur>	ah this is so frightfully annoying, the errno 4 doesn't happen in the C code
| [Tuesday 08 March 2011] [17:18:25] <Guthur>	but it does using the C# code in Mono
| [Tuesday 08 March 2011] [17:18:36] <Guthur>	but I'm pretty confident the issue isn't with binding
| [Tuesday 08 March 2011] [17:41:05] <lt_schmidt_jr>	Hmm, looks like the latest 2.1.2 tar is failing to compile on centos
| [Tuesday 08 March 2011] [17:41:14] <mikko>	lt_schmidt_jr: which centos?
| [Tuesday 08 March 2011] [17:41:18] <mikko>	and what error message
| [Tuesday 08 March 2011] [17:41:47] <lt_schmidt_jr>	5.5
| [Tuesday 08 March 2011] [17:42:04] <mikko>	hmm, i got i385 centos 5.5
| [Tuesday 08 March 2011] [17:42:10] <mikko>	and it seems to succeed
| [Tuesday 08 March 2011] [17:42:14] <mikko>	what error are you getting?
| [Tuesday 08 March 2011] [17:42:37] <lt_schmidt_jr>	I am getting libtool errors
| [Tuesday 08 March 2011] [17:42:48] <lt_schmidt_jr>	trying to cut and paste here
| [Tuesday 08 March 2011] [17:42:49] <mikko>	can you put them to gist.github.com?
| [Tuesday 08 March 2011] [17:44:13] <lt_schmidt_jr>	https://gist.github.com/861270
| [Tuesday 08 March 2011] [17:44:44] <mikko>	looks very odd
| [Tuesday 08 March 2011] [17:45:01] <mikko>	i just built successfully under centos 5.5
| [Tuesday 08 March 2011] [17:45:13] <mikko>	CentOS release 5.5 (Final)
| [Tuesday 08 March 2011] [17:45:22] <mikko>	Linux localhost.localdomain 2.6.18-194.el5 #1 SMP Fri Apr 2 14:58:14 EDT 2010 x86_64 x86_64 x86_64 GNU/Linux
| [Tuesday 08 March 2011] [17:48:06] <lt_schmidt_jr>	that is what I have as well
| [Tuesday 08 March 2011] [17:48:23] <lt_schmidt_jr>	mikko are you running a VM also?
| [Tuesday 08 March 2011] [17:56:34] <mikko>	lt_schmidt_jr: yes
| [Tuesday 08 March 2011] [17:56:49] <mikko>	lt_schmidt_jr: i got centos 5.5 in the daily build cluster (i386)
| [Tuesday 08 March 2011] [17:56:55] <mikko>	and x86_64 vm locally
| [Tuesday 08 March 2011] [17:59:22] <lt_schmidt_jr>	hmm, I got the ISO files, which were not daily builds
| [Tuesday 08 March 2011] [17:59:41] <lt_schmidt_jr>	not using cluster
| [Tuesday 08 March 2011] [18:07:09] <lt_schmidt_jr>	I am runing 5.5 x86_64 in the vm
| [Tuesday 08 March 2011] [18:07:22] <lt_schmidt_jr>	got the same error on non-vm machine as well
| [Tuesday 08 March 2011] [18:07:47] <lt_schmidt_jr>	builds fine on OSX
| [Tuesday 08 March 2011] [18:07:59] <lt_schmidt_jr>	I was just building the new image for jzmq
| [Tuesday 08 March 2011] [18:08:14] <lt_schmidt_jr>	prev version 2.1.1 was building
| [Tuesday 08 March 2011] [18:21:59] <lt_schmidt_jr>	apparently centos is like windows- a kernel update and a reboot and compiling again
| [Tuesday 08 March 2011] [18:22:04] <lt_schmidt_jr>	strange
| [Tuesday 08 March 2011] [22:49:41] <yrashk>	what's the purpose for zeromq2-1 repo?
| [Wednesday 09 March 2011] [02:00:59] <suzan_shakya>	hi all, can anyone explain me what is zmq Context ?
| [Wednesday 09 March 2011] [02:01:58] <suzan_shakya>	and why 1 zmq Context should be used in 1 process
| [Wednesday 09 March 2011] [02:02:19] <guido_g>	it's the data structure holding the memory and other stuff needed to make the sockets work
| [Wednesday 09 March 2011] [02:05:59] <suzan_shakya>	and can multiple threads use multiple contexts ?
| [Wednesday 09 March 2011] [02:06:15] <guido_g>	why should they?
| [Wednesday 09 March 2011] [02:40:02] <suzan_shakya>	because i dont want to pass the context to all the threads
| [Wednesday 09 March 2011] [02:42:14] <guido_g>	it's hard to talk to someone who has half an hour delays in his answers
| [Wednesday 09 March 2011] [02:43:01] <guido_g>	use one context per process, as described in the guide
| [Wednesday 09 March 2011] [02:43:20] <guido_g>	otherwise you're not able to use inproc sockets
| [Wednesday 09 March 2011] [02:44:17] <guido_g>	i'm off, getting some breakfast
| [Wednesday 09 March 2011] [03:02:35] <suzan_shakya>	ok. thanks guido_g. I was also away for some breakfast :)
| [Wednesday 09 March 2011] [03:14:42] <mikko>	suzan_shakya: threads can use inproc:// transport within the same context
| [Wednesday 09 March 2011] [03:15:00] <mikko>	suzan_shakya: that is probably the most important thing you lose if you setup context per thread
| [Wednesday 09 March 2011] [03:18:26] <suzan_shakya>	mikey_w: oh. thanks mikko
| [Wednesday 09 March 2011] [03:18:50] <suzan_shakya>	mikko: i got it now. thanks for the answer
| [Wednesday 09 March 2011] [03:27:01] <sejo>	hey all I'm trying to use multiple workers (with zmq.PULL) but when i send a document to the socket, I never neem to receive it?
| [Wednesday 09 March 2011] [03:32:20] <guido_g>	re
| [Wednesday 09 March 2011] [03:40:20] <seb`>	sejo: what zeromq version do you use
| [Wednesday 09 March 2011] [03:42:56] <seb`>	+?
| [Wednesday 09 March 2011] [03:48:54] <guido_g>	sejo: first and before all, show the code you run, otherwise everything else would be guessing
| [Wednesday 09 March 2011] [03:49:27] <guido_g>	sejo: use a pste-bin like https://gist.github.com/
| [Wednesday 09 March 2011] [03:52:11] <Guthur>	pieterh: I tried a C version of that code last night
| [Wednesday 09 March 2011] [03:52:20] <Guthur>	no errno 4, unfortunately
| [Wednesday 09 March 2011] [04:16:34] <mikko>	what is errno 4 on your platform?
| [Wednesday 09 March 2011] [04:19:30] <Guthur>	mikko: Interrupted System Call
| [Wednesday 09 March 2011] [04:19:44] <Guthur>	Ubuntu 10.04
| [Wednesday 09 March 2011] [04:20:16] <mikko>	EINTR, hmm
| [Wednesday 09 March 2011] [04:20:27] <Guthur>	I'm a little stumped as to what to do about it
| [Wednesday 09 March 2011] [04:20:37] <mikko>	there are a couple of situations where you see EINTR
| [Wednesday 09 March 2011] [04:20:43] <mikko>	one is that the context is being terminated
| [Wednesday 09 March 2011] [04:21:00] <Guthur>	I think it's something to do with Mono
| [Wednesday 09 March 2011] [04:21:14] <mikko>	can it be mono gcing the context?
| [Wednesday 09 March 2011] [04:22:09] <Guthur>	I don't think so, I can actually catch the exception and try again and it works
| [Wednesday 09 March 2011] [04:22:20] <Guthur>	its on Recv that I get it
| [Wednesday 09 March 2011] [04:22:36] <Guthur>	no sorry Poll
| [Wednesday 09 March 2011] [04:23:08] <Guthur>	Actually it would be interesting to see if I can get it on Recv as well
| [Wednesday 09 March 2011] [04:23:18] <mikko>	if context is being terminated each blocking socket call should exit with EINTR
| [Wednesday 09 March 2011] [04:27:12] <Guthur>	mikko: But if that was the case surely subsequent Polls on the same socket wouldn't work
| [Wednesday 09 March 2011] [04:29:51] <Guthur>	is there a way of checking the source of the signal
| [Wednesday 09 March 2011] [05:10:11] <private_meta>	pieterh: I thought I read that for every thread used in a program you should use your own zmq context, or was I mistaken?
| [Wednesday 09 March 2011] [05:11:23] <guido_g>	no, that's not the case
| [Wednesday 09 March 2011] [05:11:34] <guido_g>	as said, one process should use one context
| [Wednesday 09 March 2011] [05:11:47] <private_meta>	hmm
| [Wednesday 09 March 2011] [05:12:33] <private_meta>	Well, the problem is, if a context is used by more than one thread, apparently, the read throws an exception in the thread if one of the threads terminates the context
| [Wednesday 09 March 2011] [05:13:12] <private_meta>	I'm just curious as in none of the C++ examples this behavior is treated
| [Wednesday 09 March 2011] [05:13:22] <guido_g>	there is no problem at all
| [Wednesday 09 March 2011] [05:13:26] <guido_g>	just don't do it
| [Wednesday 09 March 2011] [05:13:32] <private_meta>	don't do what?
| [Wednesday 09 March 2011] [05:13:52] <guido_g>	what did you say?
| [Wednesday 09 March 2011] [05:14:12] <private_meta>	Well, did you mean "Don't use the same context"?
| [Wednesday 09 March 2011] [05:14:27] <guido_g>	<private_meta> Well, the problem is, if a context is used by more than one thread, apparently, the read throws an exception in the thread if one of the threads terminates the context
| [Wednesday 09 March 2011] [05:14:30] <mikko>	dont terminate the context
| [Wednesday 09 March 2011] [05:14:57] <private_meta>	Well, someone HAS to terminate the context in the end
| [Wednesday 09 March 2011] [05:15:02] <mikko>	private_meta: yes
| [Wednesday 09 March 2011] [05:15:10] <private_meta>	yeah
| [Wednesday 09 March 2011] [05:15:16] <mikko>	but dont terminate it before the threads are done with it
| [Wednesday 09 March 2011] [05:15:18] <private_meta>	and if the main thread does, exceptions fly wild in the threads
| [Wednesday 09 March 2011] [05:15:43] <private_meta>	At least in the guide examples
| [Wednesday 09 March 2011] [05:19:25] <private_meta>	Parts of the C examples use a separte context in each thread, the others use the same context as the main thread. Yet, in none of the examples the threads EVER terminate
| [Wednesday 09 March 2011] [05:19:37] <private_meta>	so, in case of C++ the worker threads naturally will have exceptions
| [Wednesday 09 March 2011] [06:18:00] <Guthur>	private_meta: In the examples pieter is often illustrating multiple processes in a single process
| [Wednesday 09 March 2011] [06:18:10] <Guthur>	eg. the clienttasks and servertasks
| [Wednesday 09 March 2011] [06:18:18] <private_meta>	multiple threads, yes
| [Wednesday 09 March 2011] [06:18:25] <private_meta>	but he is not consistent with his use of context
| [Wednesday 09 March 2011] [06:18:30] <Guthur>	no multiple process
| [Wednesday 09 March 2011] [06:18:52] <Guthur>	that's why he uses multiple contexts
| [Wednesday 09 March 2011] [06:19:02] <Guthur>	they are of course only on threads
| [Wednesday 09 March 2011] [06:19:24] <private_meta>	He is using pthread, and for some he uses a new context, for others he doesn't
| [Wednesday 09 March 2011] [06:19:38] <private_meta>	Sometimes he uses the same context for all threads, in others he doesn't
| [Wednesday 09 March 2011] [06:20:20] <guido_g>	read -> Guthur> private_meta: In the examples pieter is often illustrating multiple processes in a single process
| [Wednesday 09 March 2011] [06:20:20] <Guthur>	yeah, though he does often comment saying which ones would likely be a separate process
| [Wednesday 09 March 2011] [06:20:39] <private_meta>	still doesn't change what I said
| [Wednesday 09 March 2011] [06:21:19] <Guthur>	check rtdealer it has a comment like so...
| [Wednesday 09 March 2011] [06:21:39] <Guthur>	We have two workers, here we copy the code, normally these would
| [Wednesday 09 March 2011] [06:21:44] <private_meta>	Yes
| [Wednesday 09 March 2011] [06:21:47] <Guthur>	run on different boxes...
| [Wednesday 09 March 2011] [06:21:57] <private_meta>	And he uses a copied context there
| [Wednesday 09 March 2011] [06:22:10] <private_meta>	Of course it's just for illustration
| [Wednesday 09 March 2011] [06:22:33] <private_meta>	but, for example, the lruqueue, the c++ version, uses the same context for each thread as well, and it leads to errors
| [Wednesday 09 March 2011] [06:22:55] <private_meta>	Because termination of the context leads to an exception that is not treated
| [Wednesday 09 March 2011] [06:23:39] <private_meta>	It's not that big of a deal, but in my opinion, it's a bit of a problem
| [Wednesday 09 March 2011] [06:24:23] <Guthur>	but in the original lruqueue it is not sharing contexts
| [Wednesday 09 March 2011] [06:24:30] <private_meta>	No it isn't
| [Wednesday 09 March 2011] [06:24:41] <Guthur>	so it's a problem with the c++ translation not the guide
| [Wednesday 09 March 2011] [06:24:58] <private_meta>	It's a general issue with copying contexts in the guide, imho
| [Wednesday 09 March 2011] [06:49:40] <sejo>	is there a workin twisted reactor for zmq?
| [Wednesday 09 March 2011] [06:50:16] <mikko>	sejo: does twisted allow you to poll normal filehandle?
| [Wednesday 09 March 2011] [06:50:54] <sejo>	mikko: I don't know
| [Wednesday 09 March 2011] [06:50:55] <guido_g>	mikko: sure
| [Wednesday 09 March 2011] [06:51:12] <guido_g>	sejo: why not try the provided tornado event loop?
| [Wednesday 09 March 2011] [06:51:24] <sejo>	guido?
| [Wednesday 09 March 2011] [06:51:30] <mikko>	i don't really know much about python
| [Wednesday 09 March 2011] [06:51:31] <sejo>	the what?
| [Wednesday 09 March 2011] [06:52:24] <guido_g>	sejo: http://zeromq.github.com/pyzmq/index.html   http://zeromq.github.com/pyzmq/api/generated/zmq.eventloop.ioloop.html
| [Wednesday 09 March 2011] [06:52:55] <sejo>	aha!
| [Wednesday 09 March 2011] [06:53:15] <mikko>	hmm
| [Wednesday 09 March 2011] [06:53:16] <Guthur>	I was about to do lmgtfy
| [Wednesday 09 March 2011] [06:53:19] <sejo>	but I'm calling smq from a twisted app, so need to test whether that will work
| [Wednesday 09 March 2011] [06:53:20] <mikko>	maybe python would be worth learning
| [Wednesday 09 March 2011] [06:53:27] <Guthur>	but it's blocked at work, boohoo
| [Wednesday 09 March 2011] [07:32:20] <sejo>	ok writing a reactor is a bit too highlevel for me
| [Wednesday 09 March 2011] [07:32:49] <sejo>	perhaps i should just write a small socket receiver and send from there my smq messages
| [Wednesday 09 March 2011] [07:32:53] <sejo>	zmq
| [Wednesday 09 March 2011] [07:34:06] <Guthur>	sejo: what's your aim?
| [Wednesday 09 March 2011] [07:36:46] <sejo>	Guthur: I use scrapy to craml websites (twisted based) and want to process the pages distributed, so send the results to a workergroup
| [Wednesday 09 March 2011] [07:49:27] <Guthur>	well I've found that Mono  on windows doesn't throw that exception, from earlier
| [Wednesday 09 March 2011] [07:49:46] <Guthur>	it seems to be specific to linux
| [Wednesday 09 March 2011] [08:31:00] <mikko>	Steve-o: new issue!
| [Wednesday 09 March 2011] [08:31:15] <mikko>	exclamation mark added for emphasis
| [Wednesday 09 March 2011] [08:37:26] <private_meta>	How do I add multiline commit comments in git?
| [Wednesday 09 March 2011] [08:38:47] <mikko>	private_meta: probably the easiest way is to type the message on multiple lines using $EDITOR
| [Wednesday 09 March 2011] [08:39:22] <private_meta>	mikko: how?
| [Wednesday 09 March 2011] [08:39:33] <mikko>	git commit 
| [Wednesday 09 March 2011] [08:39:37] <mikko>	then type your message
| [Wednesday 09 March 2011] [08:40:38] <private_meta>	ah thanks
| [Wednesday 09 March 2011] [08:47:22] <private_meta>	pieterh: I hope the patch works like that
| [Wednesday 09 March 2011] [08:51:25] <pieterh>	private_meta: I'm back online... just reading my emails, seen your patch, looks perfect
| [Wednesday 09 March 2011] [08:51:35] <private_meta>	ok
| [Wednesday 09 March 2011] [08:52:40] <yrashk>	pieterh: can you please create zeromq/erlzmq2 repo with me 'yrashk' and 'evax' added as collaborators?
| [Wednesday 09 March 2011] [08:52:55] <pieterh>	yrashk: will do asap
| [Wednesday 09 March 2011] [08:53:03] <yrashk>	thx
| [Wednesday 09 March 2011] [08:53:17] <yrashk>	once it'll be there I'll do the renamings and push it
| [Wednesday 09 March 2011] [09:03:15] <pieterh>	yrashk: since dhammika and saleyn are already admins of erlzmq, I'll make all four of you admins of erlzmq2, that ok?
| [Wednesday 09 March 2011] [09:04:43] <yrashk>	pieterh: sure
| [Wednesday 09 March 2011] [09:07:04] <pieterh>	yrashk: just to confirm, you're happy with a new empty repository?
| [Wednesday 09 March 2011] [09:07:11] <pieterh>	rather than a fork of some existing one...
| [Wednesday 09 March 2011] [09:07:21] <yrashk>	pieterh: yes, I will do renames and push it to the new repo
| [Wednesday 09 March 2011] [09:07:31] <pieterh>	ok, you're good to go: git@github.com:zeromq/erlzmq2.git
| [Wednesday 09 March 2011] [09:07:33] <pieterh>	:-)
| [Wednesday 09 March 2011] [09:08:19] <yrashk>	thanks!
| [Wednesday 09 March 2011] [09:09:59] <private_meta>	pieterh: about git, now that I made the patch. should I wait until it's commited to make a reset and work from there?
| [Wednesday 09 March 2011] [09:10:30] <pieterh>	probably best, I'll do that now
| [Wednesday 09 March 2011] [09:13:25] 	 * yrashk is done renaming, testing
| [Wednesday 09 March 2011] [09:14:23] <yrashk>	pieterh: how should we address v2 introduction at the 0mq website?
| [Wednesday 09 March 2011] [09:14:33] <yrashk>	right now the erlang binding page is solely dedicated to v1
| [Wednesday 09 March 2011] [09:16:01] <pieterh>	yrashk: we had this issue with Lua
| [Wednesday 09 March 2011] [09:16:12] <pieterh>	there are in fact several bindings with two or more versions
| [Wednesday 09 March 2011] [09:16:27] <pieterh>	I solved it for Lua by just documenting both bindings on the same page, see http://www.zeromq.org/bindings:lua
| [Wednesday 09 March 2011] [09:17:04] <pieterh>	In the case of erlzmq, document v2 at the top, and v1 below
| [Wednesday 09 March 2011] [09:17:53] <yrashk>	ok
| [Wednesday 09 March 2011] [09:17:59] <Steve-o>	mikko: oh!
| [Wednesday 09 March 2011] [09:24:38] <pieterh>	private_meta: ok, patch applied... for some reason it complained on lpclient/lpserver but I fixed that up
| [Wednesday 09 March 2011] [09:25:04] <pieterh>	if you reset and 'git pull origin master' you should get a clean state with your changes
| [Wednesday 09 March 2011] [09:25:10] <private_meta>	pieterh: so the patch there was broken?
| [Wednesday 09 March 2011] [09:25:21] <pieterh>	I don't think it was broken, no
| [Wednesday 09 March 2011] [09:25:52] <yrashk>	pieterh: pushed
| [Wednesday 09 March 2011] [09:25:59] <pieterh>	yrashk: nice!
| [Wednesday 09 March 2011] [09:26:08] <private_meta>	mhm
| [Wednesday 09 March 2011] [09:26:09] <private_meta>	CONFLICT (content): Merge conflict in examples/C++/lpclient.cpp
| [Wednesday 09 March 2011] [09:26:22] <pieterh>	private_meta: yeah, something like that
| [Wednesday 09 March 2011] [09:26:34] <private_meta>	pieterh: wouldn't a reset be beter there?
| [Wednesday 09 March 2011] [09:26:49] <pieterh>	private_meta: did you not do a reset?
| [Wednesday 09 March 2011] [09:27:01] <private_meta>	uhm not after the commit
| [Wednesday 09 March 2011] [09:28:00] <pieterh>	so, do 'git log' to see the last commit before yours, then do 'git reset --hard committag'
| [Wednesday 09 March 2011] [09:28:14] <pieterh>	committag is the UUID (or first 6 chars thereof)
| [Wednesday 09 March 2011] [09:28:29] <pieterh>	then pull the master branch again, it'll fetch &merge everything that changed since
| [Wednesday 09 March 2011] [09:29:13] <pieterh>	these are the joys of distributed vcs, it remains a lot easier than handling merges in svn
| [Wednesday 09 March 2011] [09:30:42] <private_meta>	why reset to the one before mine?
| [Wednesday 09 March 2011] [09:31:16] <pieterh>	you changed file X, I changed file X
| [Wednesday 09 March 2011] [09:31:25] <pieterh>	we changed the same lines
| [Wednesday 09 March 2011] [09:31:30] <pieterh>	(obviously, I used your patch)
| [Wednesday 09 March 2011] [09:31:59] <pieterh>	well, you can resolve the conflicts by hand if you prefer
| [Wednesday 09 March 2011] [09:32:27] <pieterh>	actually, simplest is just delete your repository entirely and re-clone from github...
| [Wednesday 09 March 2011] [09:32:50] <pieterh>	you don't want to have commits on your history that don't exist anywhere else
| [Wednesday 09 March 2011] [09:33:11] <private_meta>	k, I went with the latter choice
| [Wednesday 09 March 2011] [09:33:28] <private_meta>	Is there a way to only clone the examples folder?
| [Wednesday 09 March 2011] [09:33:35] <pieterh>	nope
| [Wednesday 09 March 2011] [09:33:52] <pieterh>	we could eventually make the examples into a separate project
| [Wednesday 09 March 2011] [09:34:05] <pieterh>	or even lots of projects, 1 per language
| [Wednesday 09 March 2011] [09:34:34] <pieterh>	then you can become committer on the C++ project and it's much much simpler
| [Wednesday 09 March 2011] [09:34:35] <private_meta>	Well, I don't think it's necessary
| [Wednesday 09 March 2011] [09:34:43] <pieterh>	kind of overkill at the moment
| [Wednesday 09 March 2011] [09:34:50] <private_meta>	ah, so you can't allow someone commits to only one subtree?
| [Wednesday 09 March 2011] [09:34:54] <pieterh>	nope
| [Wednesday 09 March 2011] [09:35:00] <private_meta>	too bad
| [Wednesday 09 March 2011] [09:35:07] <private_meta>	works quite well that way in svn :/
| [Wednesday 09 March 2011] [09:35:19] <pieterh>	yeah, but creating a single SVN repository is a serious task
| [Wednesday 09 March 2011] [09:35:24] <pieterh>	creating *lots* of git repositories is trivial
| [Wednesday 09 March 2011] [09:35:42] <private_meta>	a serious task?
| [Wednesday 09 March 2011] [09:36:19] <pieterh>	especially if you want it to be secure and maintained and backed up
| [Wednesday 09 March 2011] [09:36:33] <pieterh>	one does not create 1,000 svn repositories for fun
| [Wednesday 09 March 2011] [09:37:10] <pieterh>	whereas you can literally use git repositories as an organizational tool
| [Wednesday 09 March 2011] [09:38:51] <pieterh>	now I'm actually considering breaking the Guide into multiple repos... :-)
| [Wednesday 09 March 2011] [09:40:03] <yrashk>	http://zeromq.github.com/erlzmq2/ :)
| [Wednesday 09 March 2011] [09:40:42] <pieterh>	yrashk: I already tweeted that :-)
| [Wednesday 09 March 2011] [09:41:02] <pieterh>	hang on... hey!
| [Wednesday 09 March 2011] [09:41:03] <pieterh>	nice
| [Wednesday 09 March 2011] [09:42:49] <yrashk>	pieterh: you used yrashk as a hashtag :D
| [Wednesday 09 March 2011] [09:43:04] 	 * pieterh checks the spelling...
| [Wednesday 09 March 2011] [09:43:18] <pieterh>	ah, yes, sorry
| [Wednesday 09 March 2011] [09:43:37] <pieterh>	fixed
| [Wednesday 09 March 2011] [09:44:17] <yrashk>	thx!
| [Wednesday 09 March 2011] [09:51:30] <yrashk>	pieterh: we'll most likely update the binding page today, I asked evax if he can do it (I am tired :)
| [Wednesday 09 March 2011] [09:52:37] <pieterh>	yrashk: no stress... note that the current page is mostly HTML copied/pasted from another site.
| [Wednesday 09 March 2011] [09:53:39] <yrashk>	yeah I can see that
| [Wednesday 09 March 2011] [09:54:09] <faha>	hello, provide zeromq some kind of message encryption or it's necessary secure transport between client and server using *vpn* solution ?
| [Wednesday 09 March 2011] [09:55:29] <Steve-o>	faha: or you can use tls above zeromq
| [Wednesday 09 March 2011] [09:57:51] <faha>	Steve-o: it sounds great thx
| [Wednesday 09 March 2011] [09:58:31] <pieterh>	faha: http://www.zeromq.org/topics:encryption
| [Wednesday 09 March 2011] [09:58:37] <pieterh>	there is no great solution today
| [Wednesday 09 March 2011] [09:58:46] <mikko>	Steve-o: im getting unresolved symbols with zeromq/openpgm 5.1.113
| [Wednesday 09 March 2011] [09:59:00] <Steve-o>	which platform?
| [Wednesday 09 March 2011] [09:59:09] <mikko>	solaris / oracle solaris studio 12.2
| [Wednesday 09 March 2011] [09:59:15] <mikko>	sec
| [Wednesday 09 March 2011] [09:59:38] <mikko>	http://build.zero.mq/job/openpgm-autoconf-sunstudio-solaris10/5/console
| [Wednesday 09 March 2011] [09:59:48] <mikko>	pgm_build_revision etc are undefined
| [Wednesday 09 March 2011] [10:00:00] <mikko>	im wondering whether those are accepted by visibility flags on the compiler?
| [Wednesday 09 March 2011] [10:00:14] <mikko>	and oddly enough I wasn't seeing these with 5.1.110
| [Wednesday 09 March 2011] [10:01:41] <Steve-o>	missing the two dynamic generated files
| [Wednesday 09 March 2011] [10:02:40] <Steve-o>	but I see the GEN lines
| [Wednesday 09 March 2011] [10:03:15] <Steve-o>	but, line 1: warning: empty translation unit ?
| [Wednesday 09 March 2011] [10:03:28] <Steve-o>	the GEN failed?
| [Wednesday 09 March 2011] [10:03:35] <Steve-o>	no perl, python?
| [Wednesday 09 March 2011] [10:03:49] <mikko>	possible
| [Wednesday 09 March 2011] [10:04:06] <mikko>	i seem to have both
| [Wednesday 09 March 2011] [10:04:10] <Steve-o>	checking for perl... /usr/bin/perl 
| [Wednesday 09 March 2011] [10:04:15] <Steve-o>	checking for python... /opt/csw/bin/python 
| [Wednesday 09 March 2011] [10:04:51] <Steve-o>	check the content of the files?
| [Wednesday 09 March 2011] [10:05:03] <mikko>	This is perl, v5.10.1 (csw-5.10.1*) built for i86pc-solaris-thread-multi
| [Wednesday 09 March 2011] [10:05:19] <mikko>	Python 2.6.6 (r266:84292, Oct 12 2010, 15:43:32) [C] on sunos5
| [Wednesday 09 March 2011] [10:07:04] <faha>	Steve-o: TLS/SSL seems to be a clean solutions ( not support multicast is not problem for me), what doest it  mean "notion of hops over devices", it's something like retranslate message or "ICMP redirect"?
| [Wednesday 09 March 2011] [10:08:14] <mikko>	faha: if you for example have a forwarder or similar device running
| [Wednesday 09 March 2011] [10:08:25] <mikko>	your tls/ssl would be between the client and the forwarder
| [Wednesday 09 March 2011] [10:08:33] <Steve-o>	actually I think that refers to zeromq over TLS, not TLS over zeromq
| [Wednesday 09 March 2011] [10:09:07] <Steve-o>	faha: read this http://en.wikipedia.org/wiki/Datagram_Transport_Layer_Security
| [Wednesday 09 March 2011] [10:09:58] <Steve-o>	mikko: GEN is building fine on Linux, check out version.c and galois_tables.c to see what the scripts produced
| [Wednesday 09 March 2011] [10:11:21] <mikko>	Steve-o: ok, sec
| [Wednesday 09 March 2011] [10:11:53] <mikko>	Steve-o: version.c is empty
| [Wednesday 09 March 2011] [10:12:11] <mikko>	galois_tables.c is empty as well
| [Wednesday 09 March 2011] [10:13:54] <Steve-o>	try a configure --disable-silent-rules --with-pgm to see the command line used for the GEN steps
| [Wednesday 09 March 2011] [10:16:05] <Steve-o>	or just trying running perl galois_generator.pl and python version_generator.py for valid output
| [Wednesday 09 March 2011] [10:17:48] <pieterh>	mikko, Steve-o, you're doing these tests against the 2.2 git master?
| [Wednesday 09 March 2011] [10:19:02] <Steve-o>	I tested Windows with the rc2 and Linux with mikko's autoconf branch
| [Wednesday 09 March 2011] [10:19:32] <mikko>	pieterh: roughly
| [Wednesday 09 March 2011] [10:20:48] <Steve-o>	mikko: is Solaris x86 make going to break on $< or something stupid?
| [Wednesday 09 March 2011] [10:21:22] <mikko>	Steve-o: i wonder if that is an issue with dmake vs gmake or ksh vs bash
| [Wednesday 09 March 2011] [10:22:33] <Steve-o>	I've seen warnings that it shouldn't be used, but I've never encountered a platform that doesn't like it
| [Wednesday 09 March 2011] [10:22:42] <Steve-o>	but then I'm using scons on Solaris
| [Wednesday 09 March 2011] [10:23:13] <mikko>	https://build.zero.mq/job/openpgm-autoconf-sunstudio-solaris10/7/console
| [Wednesday 09 March 2011] [10:23:15] <mikko>	builds now
| [Wednesday 09 March 2011] [10:23:21] <mikko>	it's fairly slow, solaris in vm
| [Wednesday 09 March 2011] [10:24:44] <Steve-o>	lol at the long command lines
| [Wednesday 09 March 2011] [10:25:57] <Steve-o>	yup, /opt/csw/bin/python  > version.c 
| [Wednesday 09 March 2011] [10:26:06] <evaxsoftware>	hi. thanks for the erlzmq2 inclusion
| [Wednesday 09 March 2011] [10:26:08] <Steve-o>	lmao
| [Wednesday 09 March 2011] [10:26:25] <mikko>	/usr/bin/perl  > galois_tables.c
| [Wednesday 09 March 2011] [10:26:27] <mikko>	same with perl
| [Wednesday 09 March 2011] [10:26:49] <Steve-o>	use gmake or replace $< with the source file name
| [Wednesday 09 March 2011] [10:26:56] <mikko>	trying the same thing with gmake now
| [Wednesday 09 March 2011] [10:26:57] <mikko>	sec
| [Wednesday 09 March 2011] [10:31:05] <mikko>	https://build.zero.mq/job/openpgm-autoconf-sunstudio-solaris10/9/console
| [Wednesday 09 March 2011] [10:31:08] <mikko>	gmake building now
| [Wednesday 09 March 2011] [10:34:06] <pieterh>	evaxsoftware: np
| [Wednesday 09 March 2011] [10:34:29] <pieterh>	mikko: Steve-o: when you guys have this working I want to fold it into 2.1.x and make a new stable release for that
| [Wednesday 09 March 2011] [10:34:39] <pieterh>	everyone is impatient to play with the new OpenPGM! :-)
| [Wednesday 09 March 2011] [10:35:10] <pieterh>	you will get multiple opportunities to improve things afterwards, not an issue
| [Wednesday 09 March 2011] [10:35:11] <Steve-o>	don't forget the other patch on the ML
| [Wednesday 09 March 2011] [10:35:18] <Steve-o>	someone removed rate limiting by mistake
| [Wednesday 09 March 2011] [10:35:38] <evaxsoftware>	pieterh: i'm about to edit the bindings:erlang page, is it ok if I remove the old autogenerated doc copy and paste, and rely on links to the gh-pages instead ?
| [Wednesday 09 March 2011] [10:35:46] <pieterh>	Steve-o: ah, by default all patches on the ML go to sustrik, 2.2, not to me
| [Wednesday 09 March 2011] [10:36:00] <Steve-o>	mikko: looks good:  /opt/csw/bin/python version_generator.py > version.c 
| [Wednesday 09 March 2011] [10:36:15] <pieterh>	evaxsoftware: make any changes you like but remember there are people using erlzmq1 in production, they need docs or links to docs
| [Wednesday 09 March 2011] [10:36:40] <pieterh>	Steve-o: shall I apply that patch to 2.1.x?
| [Wednesday 09 March 2011] [10:36:55] <evaxsoftware>	pieterh: thanks, np
| [Wednesday 09 March 2011] [10:37:14] <CIA-103>	zeromq2: 03Martin Sustrik 07master * r7b95c59 10/ src/ip.cpp : 
| [Wednesday 09 March 2011] [10:37:14] <CIA-103>	zeromq2: Windows build fixed
| [Wednesday 09 March 2011] [10:37:14] <CIA-103>	zeromq2: Compilation of ip.cpp have failed because EPROTONOSUPPORT
| [Wednesday 09 March 2011] [10:37:36] <Steve-o>	pieterh: I think sustrik must have removed it between rc1 and rc2?  I have looked back at the commit log to find out
| [Wednesday 09 March 2011] [10:37:49] <yrashk>	pieterh: well there will be a link to github pages published docs for erlzmqv1
| [Wednesday 09 March 2011] [10:37:57] <yrashk>	so I think we're fine then
| [Wednesday 09 March 2011] [10:38:00] <pieterh>	Sustrik isn't touching 2.1.x
| [Wednesday 09 March 2011] [10:38:03] <Steve-o>	well at least it helped to find a bug on windows
| [Wednesday 09 March 2011] [10:38:40] <pieterh>	but there was a patch to OpenPGM for rc2, let me check what that changed...
| [Wednesday 09 March 2011] [10:40:56] <pieterh>	commit f4c1040ddcb579ca53fb34ef0ef83b130424070d
| [Wednesday 09 March 2011] [10:41:08] <pieterh>	'Incorrect PGM sender/receiver creation fixed'
| [Wednesday 09 March 2011] [10:41:42] <Steve-o>	mistake in commit fcfad5682ed7a7f51088
| [Wednesday 09 March 2011] [10:42:03] <Steve-o>	oops, that was december
| [Wednesday 09 March 2011] [10:43:46] <Steve-o>	fixing the windows size
| [Wednesday 09 March 2011] [10:44:02] <Steve-o>	transmit window size, https://github.com/zeromq/zeromq2-1/commit/fcfad5682ed7a7f5108853d2a7039aedfd9a9ac2#src/pgm_socket.cpp
| [Wednesday 09 March 2011] [10:46:03] <Steve-o>	Windows performs really badly on RX without rate limit, TX is a lot better today
| [Wednesday 09 March 2011] [10:46:23] <Steve-o>	anyway this is the new patch for 2.1:  http://lists.zeromq.org/pipermail/zeromq-dev/2011-March/009723.html
| [Wednesday 09 March 2011] [10:46:52] <Steve-o>	alongside merging 5.1.113 and mikko's autoconf changes
| [Wednesday 09 March 2011] [10:47:16] <mikko>	Steve-o: gmake works
| [Wednesday 09 March 2011] [10:47:29] <Steve-o>	todo for mikko: add silent rules to zeromq autoconf
| [Wednesday 09 March 2011] [10:47:44] <Steve-o>	mikko: yup, good, I think I can live with gmake only
| [Wednesday 09 March 2011] [10:51:49] <mikko>	Steve-o: cool
| [Wednesday 09 March 2011] [10:55:54] <pieterh>	Steve-o: congrats, your patch made it into 2.1 stable :-)
| [Wednesday 09 March 2011] [10:58:06] <Steve-o>	pieterh: then someone needs to push 5.1.113 and then mikko can push the autoconf changes
| [Wednesday 09 March 2011] [10:58:30] <mikko>	the autoconf stuff feels pretty solid to me
| [Wednesday 09 March 2011] [10:58:30] <pieterh>	what's involved in pushing 5.1.113 and who can do that?
| [Wednesday 09 March 2011] [10:58:40] <mikko>	pieterh: el sustrik
| [Wednesday 09 March 2011] [10:58:41] <pieterh>	you mean into 2.1?
| [Wednesday 09 March 2011] [10:58:45] <pieterh>	or into 2.2?
| [Wednesday 09 March 2011] [10:58:51] <mikko>	first to master
| [Wednesday 09 March 2011] [10:58:54] <pieterh>	that is the large patch you sent a few days ago?
| [Wednesday 09 March 2011] [10:59:02] <mikko>	did i send a large patch?
| [Wednesday 09 March 2011] [10:59:13] <pieterh>	I meant Steve-o
| [Wednesday 09 March 2011] [10:59:17] <mikko>	oh
| [Wednesday 09 March 2011] [10:59:28] <Steve-o>	i posted 5.1.110 first
| [Wednesday 09 March 2011] [11:00:04] <Steve-o>	then mikko found a Solaris x86 bug, I found a few win64 bugs, and then a significant win32 compiler 'feature'
| [Wednesday 09 March 2011] [11:00:11] <pieterh>	oookay
| [Wednesday 09 March 2011] [11:00:34] <mikko>	and i've been sending incomprehensible midnight mails to steven
| [Wednesday 09 March 2011] [11:00:36] <Steve-o>	all small one liner changes, but bumped upto 113
| [Wednesday 09 March 2011] [11:00:39] <mikko>	and he incorporated the solaris changes
| [Wednesday 09 March 2011] [11:00:46] <pieterh>	so let's think how to get this into 2.1 rather than bottlenecking el sustrik on it
| [Wednesday 09 March 2011] [11:01:01] <mikko>	it needs to go to master first i think
| [Wednesday 09 March 2011] [11:01:06] <pieterh>	there is no master
| [Wednesday 09 March 2011] [11:01:14] <pieterh>	there is a 2.2 source git, a 2.1 release git
| [Wednesday 09 March 2011] [11:01:20] <pieterh>	they all have master branches
| [Wednesday 09 March 2011] [11:01:25] <pieterh>	sorry 
| [Wednesday 09 March 2011] [11:01:29] <mikko>	2.2 source git in that case
| [Wednesday 09 March 2011] [11:01:34] <pieterh>	2.1 and 2.2 are very very close internally
| [Wednesday 09 March 2011] [11:01:54] <pieterh>	so it's possible, still to upstream or downstream patches with minimum effort
| [Wednesday 09 March 2011] [11:01:54] <Steve-o>	is "zeromq2" 2.2?
| [Wednesday 09 March 2011] [11:02:10] <pieterh>	zeromq2 is "latest development version of 0MQ/2.x.x"
| [Wednesday 09 March 2011] [11:02:13] <pieterh>	currently at 2.2
| [Wednesday 09 March 2011] [11:02:25] <Steve-o>	so effectively trunk
| [Wednesday 09 March 2011] [11:02:40] <pieterh>	svn terminology? hey, it's 2011, c'mon...!
| [Wednesday 09 March 2011] [11:03:08] <Steve-o>	I'm on SVN and not moving in a hurry
| [Wednesday 09 March 2011] [11:03:45] 	 * pieterh is not going to thump any bibles today
| [Wednesday 09 March 2011] [11:04:16] <pieterh>	can we prepare a patch that feeds *all* these changes into 2.1?
| [Wednesday 09 March 2011] [11:04:22] <Steve-o>	I don't know if googlecode even supports GIT, they have some other distributed repo
| [Wednesday 09 March 2011] [11:04:25] <pieterh>	I will test the patch, we can then upstream it to sustrik
| [Wednesday 09 March 2011] [11:04:50] <pieterh>	I'll provide you with test packages for sanity checking
| [Wednesday 09 March 2011] [11:05:23] <pieterh>	sustrik: if you're around, does this sound sane?
| [Wednesday 09 March 2011] [11:05:29] <Steve-o>	googlecode has Mercurial, I'll pass on that
| [Wednesday 09 March 2011] [11:06:47] <pieterh>	mikko: how are you and Steve-o exchanging versions now?
| [Wednesday 09 March 2011] [11:07:08] <pieterh>	you have an autoconf branch on what repository?
| [Wednesday 09 March 2011] [11:07:38] <Steve-o>	here:  https://github.com/mkoppanen/zeromq2/tree/openpgm-autoconf
| [Wednesday 09 March 2011] [11:08:34] <pieterh>	ok, and does that contain OpenPGM 5.1.113 as well?
| [Wednesday 09 March 2011] [11:08:50] <Steve-o>	looks like it
| [Wednesday 09 March 2011] [11:08:55] <pieterh>	mikko: confirm?
| [Wednesday 09 March 2011] [11:09:27] <Steve-o>	I can see it here: https://github.com/mkoppanen/zeromq2/tree/openpgm-autoconf/foreign/openpgm
| [Wednesday 09 March 2011] [11:15:21] <mikko>	pieterh: sorry, slightly tied up
| [Wednesday 09 March 2011] [11:15:24] <mikko>	will be back in 10 mins
| [Wednesday 09 March 2011] [11:15:45] <pieterh>	mikko: np, I'm checking the changes you guys made so far
| [Wednesday 09 March 2011] [11:16:51] <mikko>	pieterh: majority of the changes are in configure.in
| [Wednesday 09 March 2011] [11:17:03] <mikko>	pieterh: there might be some unrelated changes in that branch as well
| [Wednesday 09 March 2011] [11:17:07] <pieterh>	so it's Makefile.am, configure.in, and a new OpenPGM package in foreign
| [Wednesday 09 March 2011] [11:17:16] <mikko>	yes, roughly that
| [Wednesday 09 March 2011] [11:17:22] 	 * pieterh needs precise, precise
| [Wednesday 09 March 2011] [11:17:29] <pieterh>	this is going into the stable 2.1 release :-)
| [Wednesday 09 March 2011] [11:17:31] <pieterh>	no hurry...
| [Wednesday 09 March 2011] [11:17:42] <mikko>	pieterh: i can create a pull request?
| [Wednesday 09 March 2011] [11:17:46] <mikko>	with the exact changes
| [Wednesday 09 March 2011] [11:17:55] <pieterh>	hmm, yes, that would be perfect
| [Wednesday 09 March 2011] [11:18:30] <pieterh>	i've cloned your repo, refreshed both master and openpgm-autoconf branches from the source master
| [Wednesday 09 March 2011] [11:18:34] <pieterh>	no conflicts, all clean
| [Wednesday 09 March 2011] [11:19:02] <pieterh>	mikko: to here, please: https://github.com/zeromq/zeromq2-1
| [Wednesday 09 March 2011] [11:19:04] <mikko>	does it build --with-pgm for you?
| [Wednesday 09 March 2011] [11:19:07] <mikko>	pieterh: sure
| [Wednesday 09 March 2011] [11:19:17] <pieterh>	mikko: let me assert that, 30 seconds...
| [Wednesday 09 March 2011] [11:21:01] <pieterh>	mikko: that seems to work, one or two warnings/errors
| [Wednesday 09 March 2011] [11:21:02] <pieterh>	configure.ac:7: installing `./missing'
| [Wednesday 09 March 2011] [11:21:03] <pieterh>	Makefile.am: installing `./depcomp'
| [Wednesday 09 March 2011] [11:21:03] <pieterh>	mkdir: cannot create directory `foreign/openpgm/build-staging/config': No such file or directory
| [Wednesday 09 March 2011] [11:21:15] <pieterh>	however it completes
| [Wednesday 09 March 2011] [11:21:34] <pieterh>	and it builds... :-)
| [Wednesday 09 March 2011] [11:22:13] <pieterh>	I'm on Ubuntu 10.10 fwiw
| [Wednesday 09 March 2011] [11:22:21] <mikko>	pieterh: might be some of the changes i was trying out
| [Wednesday 09 March 2011] [11:22:36] <mikko>	pieterh: will clean up and send pull request against zeromq2-1
| [Wednesday 09 March 2011] [11:22:40] <pieterh>	ack
| [Wednesday 09 March 2011] [11:22:59] <pieterh>	afaics this is the last piece for 2.1 stable
| [Wednesday 09 March 2011] [11:23:16] <mikko>	this is a major improvement
| [Wednesday 09 March 2011] [11:23:19] <mikko>	i think
| [Wednesday 09 March 2011] [11:23:28] <Steve-o>	the autoconf in 2.1rc2 is terrible
| [Wednesday 09 March 2011] [11:23:41] <mikko>	also --with-pgm=libpgm-5.1.113~dfsg works
| [Wednesday 09 March 2011] [11:23:46] <mikko>	Steve-o: zeromq?
| [Wednesday 09 March 2011] [11:24:08] <Steve-o>	mikko: before your autoconf changes
| [Wednesday 09 March 2011] [11:24:20] <mikko>	oh, i thought that after them :D
| [Wednesday 09 March 2011] [11:25:10] <pieterh>	I'm going to rapidly double-check that 2.2 source builds on win32
| [Wednesday 09 March 2011] [11:25:26] <Steve-o>	and win64
| [Wednesday 09 March 2011] [11:25:41] <pieterh>	don't have win64... :-/
| [Wednesday 09 March 2011] [11:25:46] <pieterh>	actually, :-)
| [Wednesday 09 March 2011] [11:26:41] <Steve-o>	ok, was wondering if you can get away with just installing sdk 7.1 for the 64-bit compiler
| [Wednesday 09 March 2011] [11:27:05] <mikko>	pieterh: amazon!
| [Wednesday 09 March 2011] [11:27:10] <mikko>	ec2 has windows
| [Wednesday 09 March 2011] [11:27:45] <pieterh>	oh, I just want to see if 7b95c5920c3318935b8cd8f3591cd5c65509f819 worked
| [Wednesday 09 March 2011] [11:30:40] <Steve-o>	ok, catch you all tomorrow
| [Wednesday 09 March 2011] [11:32:03] <mikko>	see you tomorrow 
| [Wednesday 09 March 2011] [11:34:09] <pieterh>	bye Steve-o
| [Wednesday 09 March 2011] [11:45:09] <pieterh>	mikko, I'll just double-check that all your changes so far work on 2.1
| [Wednesday 09 March 2011] [11:51:08] <private_meta>	pieterh: What's "EFSM" an abbreviation for?
| [Wednesday 09 March 2011] [12:02:49] <private_meta>	pieterh: http://zguide.zeromq.org/page:all#toc67 second point in the first list, typo, "if no reply arrived"
| [Wednesday 09 March 2011] [12:03:52] <guido_g>	req sockets are state-bound
| [Wednesday 09 March 2011] [12:04:21] <guido_g>	so if try to recv before a send, you get this error
| [Wednesday 09 March 2011] [12:04:26] <guido_g>	*if you
| [Wednesday 09 March 2011] [12:05:44] <private_meta>	ah ok, but what does EFSM actually stand for, as an abbreviation?
| [Wednesday 09 March 2011] [12:06:06] <guido_g>	FSM := finite state machine
| [Wednesday 09 March 2011] [12:06:12] <guido_g>	E stands for error
| [Wednesday 09 March 2011] [12:06:56] <jfkw>	New to zeromq, mq's in general, planning to use zeromq for remote-sites to home office replicator/aggregator.
| [Wednesday 09 March 2011] [12:07:37] <jfkw>	Got a question about integrating pgmq (AQMP, STOMP, OpenWire) as one of the endpoints. 
| [Wednesday 09 March 2011] [12:07:53] <jfkw>	"PGMQ embeds messaging directly into PostgreSQL so that committed tuples can be published to message queues via various popular messaging protocols (AMQP, STOMP, OpenWire). Supports ActiveMQ (STOMP, OpenWire) and any transport supporting AMQP."
| [Wednesday 09 March 2011] [12:08:27] <private_meta>	guido_g: so, the behavior of REQ Sockets can be viewed as a finite state machine where a reply can only come after a request, that is why it's called that?
| [Wednesday 09 March 2011] [12:09:25] <guido_g>	http://api.zeromq.org/2-1-2:zmq-socket ZMQ_REQ
| [Wednesday 09 March 2011] [12:09:27] <jfkw>	Would the application here be to read from zeromq, and have pgmq report on successful commits, removing messages as committed?
| [Wednesday 09 March 2011] [12:11:11] <private_meta>	ah, i knew that, i was only curious about the naming
| [Wednesday 09 March 2011] [12:11:41] <pieterh>	re
| [Wednesday 09 March 2011] [12:11:46] <guido_g>	wb
| [Wednesday 09 March 2011] [12:11:54] <pieterh>	private_meta: I'll clarify what EFSM means
| [Wednesday 09 March 2011] [12:12:37] <pieterh>	jfkw: sound fine, bridging is classic way to mix different messaging technologies
| [Wednesday 09 March 2011] [12:14:36] 	 * pieterh wants to write one more protocol spec, PGBF/0.1
| [Wednesday 09 March 2011] [12:14:47] <pieterh>	hi guido_g :-)
| [Wednesday 09 March 2011] [12:15:17] <guido_g>	pieterh: i've nothing to complain about today ,)
| [Wednesday 09 March 2011] [12:15:28] <pieterh>	me neither... weird...
| [Wednesday 09 March 2011] [12:17:01] 	 * guido_g is bringing his c++ zmq code in shape
| [Wednesday 09 March 2011] [12:17:36] <private_meta>	pieterh: should I tell you C guide typos (e.g. in commentaries) here or should I add that to the next patch?
| [Wednesday 09 March 2011] [12:17:59] <pieterh>	typos in the C code?
| [Wednesday 09 March 2011] [12:18:34] <pieterh>	either make an issue, or a patch, as you prefer
| [Wednesday 09 March 2011] [12:19:05] <private_meta>	It's just a typo in the commentary, no need to make an issue... and I will have another patch soon I guess, I'll just add it
| [Wednesday 09 March 2011] [12:19:14] <pieterh>	or just tell me now by irc
| [Wednesday 09 March 2011] [12:20:31] <private_meta>	lpclient.c, in the header commentary you say to start piserver, but there's no piserver, shouldn't it be lpserver?
| [Wednesday 09 March 2011] [12:20:52] <pieterh>	indeed, I renamed pi* to lp* at some point, thanks
| [Wednesday 09 March 2011] [12:20:56] <pieterh>	will fix it now
| [Wednesday 09 March 2011] [12:22:10] <private_meta>	pieterh: in the C++ folder, there still is a file called "piclient.cpp"
| [Wednesday 09 March 2011] [12:22:31] <pieterh>	mikko: fyi I've patched 0MQ/2.1 with diffs from master..openpgm-autoconf, it builds nicely
| [Wednesday 09 March 2011] [12:22:36] <private_meta>	and piqueue
| [Wednesday 09 March 2011] [12:22:44] <pieterh>	private_meta: hmm, probably in all the example folders, let me remove all those then
| [Wednesday 09 March 2011] [12:22:45] <pieterh>	thanks
| [Wednesday 09 March 2011] [12:23:07] <private_meta>	yes, they are in least one other example folder as well
| [Wednesday 09 March 2011] [12:23:18] <pieterh>	these stubs get generated automatically
| [Wednesday 09 March 2011] [12:23:31] <private_meta>	They weren't deleted at rename properly
| [Wednesday 09 March 2011] [12:23:32] <private_meta>	?
| [Wednesday 09 March 2011] [12:23:58] <private_meta>	Well, not important
| [Wednesday 09 March 2011] [12:24:26] <pieterh>	private_meta: when someone builds a tool that lets me build the Guide, I'll use it... :-)
| [Wednesday 09 March 2011] [12:24:37] <pieterh>	until then, it's an artistic process...
| [Wednesday 09 March 2011] [12:24:54] <private_meta>	pieterh: I wasn't complaining ;)
| [Wednesday 09 March 2011] [12:25:17] <pieterh>	nah, I know, I meant some things just require manual work
| [Wednesday 09 March 2011] [12:25:22] <pieterh>	they're gone now...
| [Wednesday 09 March 2011] [12:25:34] <pieterh>	the hard thing isn't doing the work, it's just realizing it needs done
| [Wednesday 09 March 2011] [12:25:40] <pieterh>	so thanks :-)
| [Wednesday 09 March 2011] [12:26:02] <mikko>	pieterh: nice!
| [Wednesday 09 March 2011] [12:26:22] <mikko>	pieterh: i will try to make sure that the changes are correct
| [Wednesday 09 March 2011] [12:26:25] <pieterh>	mikko: I'll reset it all now and wait for your pull request
| [Wednesday 09 March 2011] [12:26:50] <mikko>	i'll try today
| [Wednesday 09 March 2011] [12:26:50] <pieterh>	after that I'll post a test .tar.gz so we can double-check it *really* works
| [Wednesday 09 March 2011] [12:26:52] <mikko>	been a crazy day
| [Wednesday 09 March 2011] [12:26:54] <pieterh>	:-)
| [Wednesday 09 March 2011] [12:27:01] <private_meta>	pieterh: do you use Wikidot as is?
| [Wednesday 09 March 2011] [12:27:19] <pieterh>	private_meta: I spent several years making Wikidot a lot nicer to use
| [Wednesday 09 March 2011] [12:27:29] <pieterh>	most of that work is on http://irongiant.wikidot.com
| [Wednesday 09 March 2011] [12:27:45] <jfkw>	Is there an overview of zeromq built-in support for communicating with any of (AMQP, STOMP, OpenWire)? Most search results discuss 'vs.' not 'with'.
| [Wednesday 09 March 2011] [12:27:58] <pieterh>	jfkw: there is no such support
| [Wednesday 09 March 2011] [12:28:11] <pieterh>	"feel free to submit a patch" is the motto of this community
| [Wednesday 09 March 2011] [12:28:20] <private_meta>	pieterh: just thought it might be nice if you could switch to a different language viewing of a guide example IN the example page without github redirect
| [Wednesday 09 March 2011] [12:28:27] <private_meta>	but I don't know if that's hard to do
| [Wednesday 09 March 2011] [12:28:48] <pieterh>	private_meta: ... it can be done
| [Wednesday 09 March 2011] [12:28:52] <private_meta>	like, click on C++ and the example viewed in there is C++ instead of C
| [Wednesday 09 March 2011] [12:29:08] <pieterh>	but it needs translation of the examples to be more complete
| [Wednesday 09 March 2011] [12:29:49] <pieterh>	there are some tricks that can be used...
| [Wednesday 09 March 2011] [12:29:52] <private_meta>	hmm... You already mark the examples translated by printing the language binding name in bold, so only allowing the bold ones to be selected might be a solution there
| [Wednesday 09 March 2011] [12:29:57] <private_meta>	but, it's just a nice to have
| [Wednesday 09 March 2011] [12:29:59] <pieterh>	it's not that simple...
| [Wednesday 09 March 2011] [12:30:24] <pieterh>	first problem is that currently the C code is included inline in the page
| [Wednesday 09 March 2011] [12:30:43] <pieterh>	including every language would make the pages (much) too large
| [Wednesday 09 March 2011] [12:30:55] <pieterh>	so it means moving examples to their own page
| [Wednesday 09 March 2011] [12:31:04] <private_meta>	Not necessarily
| [Wednesday 09 March 2011] [12:31:07] <pieterh>	that could be nice anyhow, it would avoid githubbing
| [Wednesday 09 March 2011] [12:31:11] <pieterh>	yes, necessarily
| [Wednesday 09 March 2011] [12:31:26] <private_meta>	Using Javascript you could replace text in certain places
| [Wednesday 09 March 2011] [12:31:54] <pieterh>	I'm not even going to think about writing Javascript
| [Wednesday 09 March 2011] [12:32:31] <private_meta>	Well, the Page is already using Javascript in the Language hide/show button
| [Wednesday 09 March 2011] [12:33:03] <private_meta>	The advantage of using js there I guess would be to avoid having to reload the page
| [Wednesday 09 March 2011] [12:33:08] <pieterh>	Just because you cross a river on a bridge that someone built does not mean you want to build bridges
| [Wednesday 09 March 2011] [12:33:15] <private_meta>	haha
| [Wednesday 09 March 2011] [12:33:33] <pieterh>	one of the *great* benefits of Wikidot is precisely that I do not write HTML or JS
| [Wednesday 09 March 2011] [12:33:43] <pieterh>	I write text, which magically appears
| [Wednesday 09 March 2011] [12:34:01] <pieterh>	second problem is just visualization, Wikidot has a limited set of options
| [Wednesday 09 March 2011] [12:34:12] <pieterh>	collapse/hide, hyperlink
| [Wednesday 09 March 2011] [12:34:52] <private_meta>	So it would be changing a core feature
| [Wednesday 09 March 2011] [12:36:27] <lt_schmidt_jr>	Should I expect to need a separate zmq libary compilation for AMD x64 as opposed to intel?
| [Wednesday 09 March 2011] [12:36:44] <pieterh>	private_meta: if it takes more than 1 hour, it's out of scope
| [Wednesday 09 March 2011] [12:36:59] <pieterh>	lt_schmidt_jr: don't think so, depends on the compiler
| [Wednesday 09 March 2011] [12:37:36] <lt_schmidt_jr>	pieterh: thank you, I will give it a whirl
| [Wednesday 09 March 2011] [12:38:10] <pieterh>	private_meta: what I'll think about is publishing the code examples on their own pages, so they are easier to look at
| [Wednesday 09 March 2011] [12:38:23] <pieterh>	and then at least showing those in new tabs when you click on them
| [Wednesday 09 March 2011] [12:38:50] <pieterh>	then it's possible to do collapsible blocks that include each language
| [Wednesday 09 March 2011] [12:42:39] <private_meta>	hmm
| [Wednesday 09 March 2011] [12:42:55] <private_meta>	I removed the git repo and made a new clone and the new updates weren't in there :/
| [Wednesday 09 March 2011] [12:44:41] <private_meta>	pieterh: so WHAT of my changes did you put into the repository?
| [Wednesday 09 March 2011] [12:45:01] <pieterh>	private_meta: all of them, maybe I forgot to push, let me check
| [Wednesday 09 March 2011] [12:45:57] <pieterh>	private_meta: https://github.com/imatix/zguide/commit/62cae9ab3412065dabfcdb7bd227e00f43ccd066
| [Wednesday 09 March 2011] [12:46:22] <pieterh>	all done, 3 hours ago
| [Wednesday 09 March 2011] [12:46:44] <pieterh>	I'll make a fresh clone to double-check
| [Wednesday 09 March 2011] [12:46:57] <private_meta>	pieterh: according to my patch file:  20 files changed, 217 insertions(+), 166 deletions(-)
| [Wednesday 09 March 2011] [12:47:10] <private_meta>	According to your commit, Showing 2 changed files with 8 additions and 10 deletions. 
| [Wednesday 09 March 2011] [12:47:51] <pieterh>	ah, indeed... :-(
| [Wednesday 09 March 2011] [12:48:08] <pieterh>	<insert expletive>
| [Wednesday 09 March 2011] [12:48:16] <pieterh>	give me 4 minutes...
| [Wednesday 09 March 2011] [12:48:23] <private_meta>	sure, take your time
| [Wednesday 09 March 2011] [12:50:47] <pieterh>	private_meta: for some reason the patches to lpclient.c and lpserver.c came with ^M line endings
| [Wednesday 09 March 2011] [12:51:04] <pieterh>	you edited those two files on Windows and then copied them to your virtual machine?
| [Wednesday 09 March 2011] [12:51:15] <private_meta>	hmm...
| [Wednesday 09 March 2011] [12:51:19] <pieterh>	I just see that now, in vim
| [Wednesday 09 March 2011] [12:51:34] <pieterh>	so your patch failed on those two files, I fixed them, committed them, and the rest were lost
| [Wednesday 09 March 2011] [12:51:43] <private_meta>	I don't know
| [Wednesday 09 March 2011] [12:51:57] <private_meta>	might be possible
| [Wednesday 09 March 2011] [12:52:00] <pieterh>	probably some feature of your Eclipse gui :-)
| [Wednesday 09 March 2011] [12:52:20] <pieterh>	anyhow, that's the autopsy
| [Wednesday 09 March 2011] [12:52:30] <private_meta>	shouldn't have happenend
| [Wednesday 09 March 2011] [12:52:33] <private_meta>	happened
| [Wednesday 09 March 2011] [12:52:49] <pieterh>	Windows should never have happened, indeed
| [Wednesday 09 March 2011] [12:52:56] <pieterh>	we live with the consequences...
| [Wednesday 09 March 2011] [12:53:18] <pieterh>	the illegitimate child of CP/M and too much weed
| [Wednesday 09 March 2011] [12:54:46] <pieterh>	private_meta: ok, re-clone now, it'll be good
| [Wednesday 09 March 2011] [12:55:16] <private_meta>	k
| [Wednesday 09 March 2011] [12:55:43] <private_meta>	good
| [Wednesday 09 March 2011] [13:37:13] <Eruquen>	how would I translate socklisten; while (1) { sockaccept; fork, work and communicate with client; } to zmq? further communication between clients and workers could consist of a single reply or a stream of multiple replies, sometimes requiring input from clients. clients could disconnect along the way and reconnect later. no data should be lost.
| [Wednesday 09 March 2011] [13:39:30] <pieterh>	Eruquen: have you read the Guide yet?
| [Wednesday 09 March 2011] [13:42:10] <Eruquen>	not completely.. I'm working through the patterns right now. it all makes sense but it also makes my head explode
| [Wednesday 09 March 2011] [13:43:02] <pieterh>	take your time
| [Wednesday 09 March 2011] [14:07:21] <Guthur>	would polling on an inproc socket use similar mechanisms in the 0MQ engine?
| [Wednesday 09 March 2011] [14:15:19] <Guthur>	ah ha
| [Wednesday 09 March 2011] [14:15:39] <Guthur>	I think I may have isolated the problem with clrzmq2 on Mono on linux
| [Wednesday 09 March 2011] [14:16:06] <Guthur>	it would appear to be something to do with Mono's implementation of threads
| [Wednesday 09 March 2011] [14:16:36] <Guthur>	remove the threading stuff and there is no exceptions
| [Wednesday 09 March 2011] [14:23:46] <devinus>	can somebody explain to me the difference between zeromq and rabbitmq?
| [Wednesday 09 March 2011] [14:25:45] <cremes>	pieterh: just saw your note on the ML about critical issues for the next release
| [Wednesday 09 March 2011] [14:25:47] <cremes>	https://github.com/zeromq/zeromq2/issues#issue/174
| [Wednesday 09 March 2011] [14:26:01] <cremes>	looks like another user was able to confirm on a different linux (ubuntu)
| [Wednesday 09 March 2011] [14:26:24] <cremes>	i'll do what i can to help get this fixed
| [Wednesday 09 March 2011] [15:01:13] <Guthur>	devinus, http://www.zeromq.org/whitepapers:brokerless
| [Wednesday 09 March 2011] [15:02:48] <devinus>	Guthur: thanks
| [Wednesday 09 March 2011] [16:33:51] <Guthur>	binding authors, any recommendation on dealing with EINTR...
| [Wednesday 09 March 2011] [16:34:13] <Guthur>	add logic to the binding code, or leave it to the user to catch and deal with
| [Wednesday 09 March 2011] [17:15:35] <lt_schmidt_jr>	Hi, what version of Visual Studio is expected to work for ZMQ compilation?
| [Wednesday 09 March 2011] [17:15:50] <lt_schmidt_jr>	Should Visual Studio 2008 suffice?
| [Wednesday 09 March 2011] [17:17:08] <Guthur>	lt_schmidt_jr, I think it should be
| [Wednesday 09 March 2011] [17:17:27] <lt_schmidt_jr>	thank you
| [Wednesday 09 March 2011] [17:17:37] <Guthur>	the solution file says version 10
| [Wednesday 09 March 2011] [17:17:40] <Guthur>	with is 2008
| [Wednesday 09 March 2011] [17:17:50] <lt_schmidt_jr>	ah, great
| [Wednesday 09 March 2011] [17:17:58] <Guthur>	I think it was created by visual studio 2008 express
| [Wednesday 09 March 2011] [17:18:23] <Guthur>	studio/c++
| [Wednesday 09 March 2011] [17:18:28] <lt_schmidt_jr>	ah, so it should work with the express version,  excellent
| [Wednesday 09 March 2011] [23:04:20] <qw_>	The 2nd video on http://www.zeromq.org/intro:read-the-manual has left channel audio problem
| [Wednesday 09 March 2011] [23:05:49] <Steve-o>	yup
| [Wednesday 09 March 2011] [23:05:59] <Steve-o>	could do with a filtering
| [Wednesday 09 March 2011] [23:08:16] <qw_>	the top video was excellent
| [Wednesday 09 March 2011] [23:10:09] <Steve-o>	prod pieter when he's online later
| [Thursday 10 March 2011] [00:58:51] <notostraca>	agh...  I am trying to get lua to work with 0MQ, to no avail.
| [Thursday 10 March 2011] [00:59:12] <notostraca>	I am on Windows 7 64-bit
| [Thursday 10 March 2011] [00:59:50] <notostraca>	and I am not quite sure how to install the compiled libzmq dlls so that luarocks and/or cmake can find them
| [Thursday 10 March 2011] [01:00:09] <notostraca>	Has anyone gotten lua to work with 0MQ on windows?
| [Thursday 10 March 2011] [02:26:14] <datuanmac>	hello
| [Thursday 10 March 2011] [02:26:38] <rem7>	I was going over the guide, and on the topic of multithreading it says that you should  create a context and pass that to the threads... but down in chapter 3 some of the examples are creating a context in their own threads... whats up with that?
| [Thursday 10 March 2011] [02:29:01] <guido_g>	here the threads stand for processes
| [Thursday 10 March 2011] [02:29:51] <datuanmac>	can you send to me link chapter 3 to refer ?
| [Thursday 10 March 2011] [02:30:26] <guido_g>	rem7: the rule for real applications is: one context per process
| [Thursday 10 March 2011] [02:31:16] <rem7>	so if I'm not going to use inproc in the same application, its safe to create a context in every thread...?
| [Thursday 10 March 2011] [02:31:52] <guido_g>	rem7: the rule for real applications is: one context per process
| [Thursday 10 March 2011] [02:34:02] <rem7>	... confused... define process?
| [Thursday 10 March 2011] [02:34:55] <guido_g>	not thread, a process
| [Thursday 10 March 2011] [02:35:01] <uhu>	process == task
| [Thursday 10 March 2011] [02:36:27] <guido_g>	http://en.wikipedia.org/wiki/Process_(computing)   <- learn the basics
| [Thursday 10 March 2011] [02:38:29] <rem7>	re-wording from the first paragraph then... one context per application instance.
| [Thursday 10 March 2011] [02:39:34] <uhu>	hi didn't know : a thread is part of a process/task
| [Thursday 10 March 2011] [02:39:48] <guido_g>	omg
| [Thursday 10 March 2011] [02:41:20] <rem7>	lol
| [Thursday 10 March 2011] [02:42:21] <datuan>	Are you integrate with system ?
| [Thursday 10 March 2011] [02:50:40] <uhu>	system() or system
| [Thursday 10 March 2011] [03:01:02] <datuan>	system 
| [Thursday 10 March 2011] [03:49:06] <larhat>	Hi, folks! Is it possible to implement zeromq as native library in some language and not as language bindings? i.e. implement zero-mq protocol on top of wrapped sockets. I thinks, it's possible, but i don't see any attempts to do it. am i missing smth? 
| [Thursday 10 March 2011] [03:50:03] <guido_g>	zeromq is mostly the high-speed implementation of the existing library
| [Thursday 10 March 2011] [03:51:47] <guido_g>	the network-framing is described somewhere on zeromq.org
| [Thursday 10 March 2011] [03:52:57] <guido_g>	i doubt that new implementations will comme close to the performance of this implementation in the foreseeable future
| [Thursday 10 March 2011] [03:55:21] <larhat>	so, there isn't native library because it's not needed?
| [Thursday 10 March 2011] [03:56:13] <guido_g>	native to what?
| [Thursday 10 March 2011] [03:56:41] <larhat>	"native", yes. native to some language (ocaml, python, etc. )
| [Thursday 10 March 2011] [03:56:57] <guido_g>	ah, no wouldn't make sense
| [Thursday 10 March 2011] [03:57:06] <guido_g>	consider how slow this would be
| [Thursday 10 March 2011] [03:57:18] <guido_g>	and how much trouble to maintain
| [Thursday 10 March 2011] [03:58:59] <Guthur>	larhat: atm imo, zeromq is quite a good to produce a binding for
| [Thursday 10 March 2011] [03:59:09] <Guthur>	quite a/quite
| [Thursday 10 March 2011] [03:59:27] <guido_g>	thanks to the simple c api
| [Thursday 10 March 2011] [03:59:33] <Guthur>	indeed
| [Thursday 10 March 2011] [03:59:53] <guido_g>	i'm even tempted to use the c api in c++, much easier
| [Thursday 10 March 2011] [04:00:12] <Guthur>	which means there would very little to be gained from implementing in another language
| [Thursday 10 March 2011] [04:06:22] <Guthur>	At the weekend I had a strange notion of implementing a zeromq system in C++
| [Thursday 10 March 2011] [04:06:40] <Guthur>	I soon realised live is too short for such pain
| [Thursday 10 March 2011] [04:06:45] <Guthur>	life*
| [Thursday 10 March 2011] [04:14:35] <uhu>	anyone here, who has exp. with smartsockets (talarian/Tibco)
| [Thursday 10 March 2011] [04:15:10] <Steve-o>	I've heard of them
| [Thursday 10 March 2011] [04:15:16] <uhu>	need pro/cons for discussion next week
| [Thursday 10 March 2011] [04:15:37] <Steve-o>	aren't smartsockets eol?
| [Thursday 10 March 2011] [04:15:55] <Steve-o>	smartpgm eol'ed a year or two ago
| [Thursday 10 March 2011] [04:16:42] <uhu>	talarian invented long times ago, later tibco bought talarian
| [Thursday 10 March 2011] [04:16:55] <Steve-o>	I'm a former TIBCO guy :D
| [Thursday 10 March 2011] [04:17:31] <uhu>	u hv worked with them ?
| [Thursday 10 March 2011] [04:18:18] <Steve-o>	I was the maintenance dev for TIB2MQ/TIB Adapter for MQ Series and Rendezvous 5
| [Thursday 10 March 2011] [04:19:01] <uhu>	i see
| [Thursday 10 March 2011] [04:19:17] <Steve-o>	nobody in Finance used smartsockets though, so I never touched it
| [Thursday 10 March 2011] [04:20:12] <uhu>	are smartsockets not the base of the TIB ESB
| [Thursday 10 March 2011] [04:20:14] <Steve-o>	shouldn't your comparison be with EMS?
| [Thursday 10 March 2011] [04:20:46] <uhu>	just working for a big german logistics ...
| [Thursday 10 March 2011] [04:21:05] <uhu>	now the plan a redesign of the whole stuff
| [Thursday 10 March 2011] [04:21:22] <uhu>	the -> they
| [Thursday 10 March 2011] [04:21:41] <guido_g>	if you need mq know-how, i'm available :)
| [Thursday 10 March 2011] [04:21:55] <Steve-o>	tibco ems is tibco's jaunt to TCP comms away from multicast - http://www.tibco.com/products/soa/messaging/enterprise-mesage-service/default.jsp
| [Thursday 10 March 2011] [04:22:19] <Steve-o>	it came before the talarian purchase I think
| [Thursday 10 March 2011] [04:23:01] <uhu>	our management prefer the oracle esb stuff
| [Thursday 10 March 2011] [04:23:21] <uhu>	but i think, they don't know what they talking about
| [Thursday 10 March 2011] [04:23:42] <Guthur>	does 0MQ run on any mainframe hardware/OS
| [Thursday 10 March 2011] [04:23:53] <Steve-o>	s390
| [Thursday 10 March 2011] [04:24:01] <Steve-o>	and vms
| [Thursday 10 March 2011] [04:24:03] <guido_g>	uhu: you said it already "management"
| [Thursday 10 March 2011] [04:24:24] <uhu>	is there a port on HP Nonstop ???
| [Thursday 10 March 2011] [04:24:50] <Steve-o>	openvms
| [Thursday 10 March 2011] [04:25:08] <Steve-o>	the dev is from HP, on the ML 
| [Thursday 10 March 2011] [04:25:24] <Steve-o>	http://zeromqonopenvms.blogspot.com/
| [Thursday 10 March 2011] [04:26:49] <Guthur>	guido_g: do you maintain one of the language bindings?
| [Thursday 10 March 2011] [04:27:02] <guido_g>	nope
| [Thursday 10 March 2011] [04:27:05] <guido_g>	why?
| [Thursday 10 March 2011] [04:27:40] <Guthur>	looking for advice on some course of action for EINTR on things like poll and recv
| [Thursday 10 March 2011] [04:28:03] <Guthur>	I'm wondering whether clrzmq2 should try to deal with it, or leave it for the user
| [Thursday 10 March 2011] [04:28:08] <guido_g>	uhhh... there was something going on for the python bindings
| [Thursday 10 March 2011] [04:28:31] <Guthur>	oh ok, I'mm have a wee look at that
| [Thursday 10 March 2011] [04:28:38] <Guthur>	I'mm/I'll
| [Thursday 10 March 2011] [04:29:05] <guido_g>	http://lists.zeromq.org/pipermail/zeromq-dev/2010-September/005822.html
| [Thursday 10 March 2011] [04:29:41] <uhu>	sorry, i know ... the stoneage is over ... but our company is still using this machines 
| [Thursday 10 March 2011] [04:30:25] <guido_g>	hey, the ise in ny is still using vms too i think :)
| [Thursday 10 March 2011] [04:32:06] <Steve-o>	well at least they have a tcp/ip stack
| [Thursday 10 March 2011] [04:32:39] <pieterh>	hi guys
| [Thursday 10 March 2011] [04:32:41] <Guthur>	guido_g: I think that is fixed now though, because I am getting -1 errno=EINTR
| [Thursday 10 March 2011] [04:33:19] <guido_g>	Guthur: the discussion was lengthy, i don't remember it
| [Thursday 10 March 2011] [04:33:26] <guido_g>	pieterh: howdy
| [Thursday 10 March 2011] [04:33:43] <Guthur>	I'm in two minds what to do now
| [Thursday 10 March 2011] [04:33:47] <guido_g>	Guthur: but i think in certain cases the binding should handle eintr
| [Thursday 10 March 2011] [04:34:43] <pieterh>	hi guido_g
| [Thursday 10 March 2011] [04:35:08] <Guthur>	guido_g: I was considering trying to handle it in the binding
| [Thursday 10 March 2011] [04:35:24] <Guthur>	would make life simpler for the user
| [Thursday 10 March 2011] [04:36:07] <guido_g>	Guthur: i can have a look at the python binding, might be that there is some help
| [Thursday 10 March 2011] [04:36:31] <Guthur>	guido_g: cool
| [Thursday 10 March 2011] [04:40:58] <guido_g>	so far no eintr found...
| [Thursday 10 March 2011] [04:43:59] <Guthur>	from the way I am understanding the code, it would not matter to pyzmq
| [Thursday 10 March 2011] [04:44:15] <Guthur>	it just returns a list of r/w able sockets
| [Thursday 10 March 2011] [04:44:23] <guido_g>	no, pyzmq.core will deliver upwards
| [Thursday 10 March 2011] [04:44:37] <guido_g>	*deliver it
| [Thursday 10 March 2011] [04:45:10] <Guthur>	ok
| [Thursday 10 March 2011] [04:46:17] <guido_g>	Guthur: you're on the low-level bindings atm?
| [Thursday 10 March 2011] [04:50:18] <Guthur>	i'm maintainer for clrzmq2, and I'm hoping to improve the handling of this issue there
| [Thursday 10 March 2011] [04:50:30] <Guthur>	It just binds the low level C lib
| [Thursday 10 March 2011] [04:50:38] <Guthur>	was that your question?
| [Thursday 10 March 2011] [04:50:44] <Guthur>	or do you mean the pyzmq
| [Thursday 10 March 2011] [04:51:15] <Guthur>	I was looking at https://github.com/ellisonbg/pyzmq
| [Thursday 10 March 2011] [04:51:29] <guido_g>	i meant if your're currently working on the lower levels of the binding or some language dependant abstractions on top
| [Thursday 10 March 2011] [04:52:05] <guido_g>	nahh... the official one is https://github.com/zeromq/pyzmq
| [Thursday 10 March 2011] [04:52:42] <Guthur>	oh, ok
| [Thursday 10 March 2011] [04:53:13] <guido_g>	Guthur: if you provide the low-level api in clrzmq2, it should simply signal that an EINTR happend, same as the C version
| [Thursday 10 March 2011] [04:53:37] <Guthur>	yeah that's what happens at the moment
| [Thursday 10 March 2011] [04:53:43] <Guthur>	it throws an exception
| [Thursday 10 March 2011] [04:53:57] <Guthur>	so the user can catch it if they wish
| [Thursday 10 March 2011] [04:54:04] <guido_g>	if you have some more .net like abstractions on top of that, it's a matter of the overall architecture of the environment, i'd say
| [Thursday 10 March 2011] [04:54:24] <guido_g>	should be fine
| [Thursday 10 March 2011] [05:23:45] <Guthur>	this experience with EINTR has made me think I don't like linux's signalling mechanism much
| [Thursday 10 March 2011] [05:24:03] <Guthur>	it can be a bit of PITA
| [Thursday 10 March 2011] [05:24:28] <guido_g>	it's not only linux
| [Thursday 10 March 2011] [05:27:46] <Guthur>	implementing the later guide examples in C# has definitely proved more challenging than it should have been.
| [Thursday 10 March 2011] [05:28:05] <Guthur>	no IPC on windows, and signalling headaches on POSIX OSs
| [Thursday 10 March 2011] [05:40:42] <Guthur>	...really need to get working on that IPC for windows stuff
| [Thursday 10 March 2011] [05:44:09] <Guthur>	is there 2.2 roadmap?
| [Thursday 10 March 2011] [05:44:29] <Guthur>	pieterh: you mentioned it on the mailing list, but I don't see it
| [Thursday 10 March 2011] [05:44:57] <Guthur>	oh nvm
| [Thursday 10 March 2011] [05:44:59] <Guthur>	found it
| [Thursday 10 March 2011] [05:45:30] <pieterh_>	Guthur: sorry about that
| [Thursday 10 March 2011] [05:45:57] <pieterh_>	we need to get IPC working better IMO
| [Thursday 10 March 2011] [05:46:07] <pieterh_>	even the Linux / POSIX implementation is sucky
| [Thursday 10 March 2011] [05:46:40] <pieterh_>	I'd like to make a portable IPC based on shared memory
| [Thursday 10 March 2011] [05:47:04] <pieterh_>	Guthur: did you get any further with those signaling issues? 
| [Thursday 10 March 2011] [05:47:32] <Guthur>	pieterh_: yeah, it's just something that will happen on POSIX
| [Thursday 10 March 2011] [05:47:52] <pieterh_>	... I'm using Linux all the time, have never hit it
| [Thursday 10 March 2011] [05:48:01] <pieterh_>	or am just somehow ignoring it?
| [Thursday 10 March 2011] [05:48:39] <Guthur>	it's more likely to happen on Mono due to the GC using signals
| [Thursday 10 March 2011] [05:48:59] <pieterh_>	more likely vs. never happens, I'd say it's a Mono issue
| [Thursday 10 March 2011] [05:49:12] <pieterh_>	thus perhaps solvable
| [Thursday 10 March 2011] [05:49:57] <Guthur>	yeah, it's a catchable exception, I was in two minds whether to try and solve it in the clrzmq binding or leave it for the user to deal with
| [Thursday 10 March 2011] [05:50:23] <pieterh_>	would you summarize what you know about it, send that to the list?
| [Thursday 10 March 2011] [05:50:46] <Guthur>	sure, I'll do that when I get home from work
| [Thursday 10 March 2011] [05:50:53] <pieterh_>	IMO it's not something the user should see, it's has no sense within 0MQ
| [Thursday 10 March 2011] [05:51:10] <pieterh_>	making the examples is in any case like doing 0MQ University :-)
| [Thursday 10 March 2011] [05:51:16] <Guthur>	pieterh_: it actually appears that it never used to be in 0MQ
| [Thursday 10 March 2011] [05:51:19] <Guthur>	it was added
| [Thursday 10 March 2011] [05:51:28] <Guthur>	http://lists.zeromq.org/pipermail/zeromq-dev/2010-September/005822.html
| [Thursday 10 March 2011] [05:51:43] 	 * pieterh_ is reading that...
| [Thursday 10 March 2011] [05:52:27] <pieterh_>	ah, this is the famous Ctrl-C handling
| [Thursday 10 March 2011] [05:52:50] <pieterh_>	yes, signals should be passed up to the binding, however...
| [Thursday 10 March 2011] [05:53:00] <pieterh_>	it seems abnormal that you are getting EINTR *all the time*
| [Thursday 10 March 2011] [05:54:56] <pieterh_>	brb, need to switch message apps, this one is terrible...
| [Thursday 10 March 2011] [05:55:08] <guido_g>	hehe
| [Thursday 10 March 2011] [05:57:27] <pieterh_1>	re
| [Thursday 10 March 2011] [05:59:26] <guido_g>	wb
| [Thursday 10 March 2011] [05:59:44] <guido_g>	w/ different color, how nice  :)
| [Thursday 10 March 2011] [06:02:38] <pieterh_1>	I think the colors are entirely in the imagination of your IRC client :-)
| [Thursday 10 March 2011] [06:03:54] <guido_g>	hmmm
| [Thursday 10 March 2011] [06:06:36] <Guthur>	pieterh_1: it seems to be at startup that the Mono runtime is generating some signals that were bubbling up when I was trying to Poll or Recv
| [Thursday 10 March 2011] [06:06:58] <Guthur>	after a talk with a Mono Dev I am of the understanding that it may be related to the GC
| [Thursday 10 March 2011] [06:07:56] <pieterh_1>	Guthur: that sounds plausible
| [Thursday 10 March 2011] [06:09:54] <pieterh_1>	those signals shouldn't appear to 0MQ users, obvously
| [Thursday 10 March 2011] [06:11:14] <Guthur>	pieterh_1: would you be of the opinion that I should try to deal with EINTR in the clrzmq binding
| [Thursday 10 March 2011] [06:11:22] <sejo>	can you send a smq message without using smq? is there a way to recontruct a message?
| [Thursday 10 March 2011] [06:12:26] <pieterh_1>	Guthur: if it's Mono generating random EINTRs, I'd probably take a large stick to that developer until he fixes it
| [Thursday 10 March 2011] [06:12:42] <pieterh_1>	if it's other signals you can filter them
| [Thursday 10 March 2011] [06:13:17] <pieterh_1>	sejo: what exactly do you mean by "smq message"?
| [Thursday 10 March 2011] [06:13:43] <sejo>	zmq sorry
| [Thursday 10 March 2011] [06:13:56] <pieterh_1>	how would you send a zmq message without zmq?
| [Thursday 10 March 2011] [06:14:01] <pieterh_1>	and why?
| [Thursday 10 March 2011] [06:14:02] <sejo>	well i'm still stuck with the twisted loop and trying to figure out how to fix it
| [Thursday 10 March 2011] [06:14:39] <Guthur>	pieterh_1: i think it's due to 0MQ being in a blocking syscall, and so the signal will cause that to return with EINTR
| [Thursday 10 March 2011] [06:14:56] <Guthur>	my understanding may be flawed though
| [Thursday 10 March 2011] [06:15:17] <pieterh_1>	Guthur: yeah... but if you know what signals the GC is generating you can set up your own handler for them, so 0MQ never sees them
| [Thursday 10 March 2011] [06:15:32] <Guthur>	ah ok
| [Thursday 10 March 2011] [06:15:59] <pieterh_1>	bleh, I'm confusing two things
| [Thursday 10 March 2011] [06:16:12] <pieterh_1>	EINTR is the errno after an interrupted system call, it's not the signal
| [Thursday 10 March 2011] [06:16:23] <pieterh_1>	Ctrl-C would be SIGINT for example
| [Thursday 10 March 2011] [06:16:54] <pieterh_1>	so IMO you want to discover what actual signals the Mono GC is generating, and then set up handlers to ignore them
| [Thursday 10 March 2011] [06:17:11] <pieterh_1>	then 0MQ's system calls won't be interrupted by *those* signals
| [Thursday 10 March 2011] [06:20:15] <sejo>	pieterh: so I'm trying to get messages into a queue. but when pushing from twisted it slows down my reactor
| [Thursday 10 March 2011] [06:22:05] <pieterh_1>	sejo: is there anyone else using twisted with 0MQ?
| [Thursday 10 March 2011] [06:23:20] <sejo>	no, there was a poc on github, but not working
| [Thursday 10 March 2011] [06:23:46] <pieterh_1>	ok, so I know nothing at all about twisted, however...
| [Thursday 10 March 2011] [06:24:08] <guido_g>	sejo: where does the slowdonw happen? care to show the code?
| [Thursday 10 March 2011] [06:24:21] <pieterh_1>	this is Python, there is a large community of pyzmq users
| [Thursday 10 March 2011] [06:24:35] <pieterh_1>	make a minimal test case, publish that, discuss on zeromq-dev and here
| [Thursday 10 March 2011] [06:24:55] <sejo>	guido_g: each time you do a blocking io, the twisted main_reactor waits on it
| [Thursday 10 March 2011] [06:25:10] <pieterh_1>	you do need to come up with code if you want help on specific problems
| [Thursday 10 March 2011] [06:25:11] <guido_g>	this is why it's call blocking
| [Thursday 10 March 2011] [06:25:13] <guido_g>	*called
| [Thursday 10 March 2011] [06:25:18] <sejo>	that's why twisted is used to circumvent the blocking io as much as possible
| [Thursday 10 March 2011] [06:25:43] <guido_g>	simply don't use blocking call then...
| [Thursday 10 March 2011] [06:25:43] <sejo>	yeah but there is no way to do a nen-blocking connection to zmq, or I should use a basic socket protocol that already exists
| [Thursday 10 March 2011] [06:26:01] <guido_g>	w/o code, it's all guessing
| [Thursday 10 March 2011] [06:26:31] <sejo>	guido if I use the smq.send_json it blocks the reactor in such way i only can send one a sec (I crawl now 5-10 urls/s)
| [Thursday 10 March 2011] [06:26:43] <sejo>	if I add the seromq.send_json it goes to 1/s
| [Thursday 10 March 2011] [06:26:53] <sejo>	zmq 
| [Thursday 10 March 2011] [06:27:08] <pieterh_1>	sejo: it's not 'slow'
| [Thursday 10 March 2011] [06:27:26] <sejo>	pieterh_1: i know zmq isn't slow
| [Thursday 10 March 2011] [06:27:58] <sejo>	and the twisted neither, it's combining them that creates 2 diffrent eventloops and they don't work together imho
| [Thursday 10 March 2011] [06:28:02] <sejo>	which is logic
| [Thursday 10 March 2011] [06:28:17] <pieterh_1>	no, I mean it's not 'slowing down', you're using it wrong
| [Thursday 10 March 2011] [06:28:18] <pieterh_1>	and without seeing an example of your code, this discussion is fruitless
| [Thursday 10 March 2011] [06:28:44] <sejo>	let me paste an example
| [Thursday 10 March 2011] [06:28:55] <pieterh_1>	sejo: yes, please, a working minimal example
| [Thursday 10 March 2011] [06:29:25] <guido_g>	sejo: use non-blocking calls then
| [Thursday 10 March 2011] [06:46:03] <sejo>	http://dpaste.com/485798/
| [Thursday 10 March 2011] [06:46:06] <sejo>	sending
| [Thursday 10 March 2011] [06:46:31] <sejo>	http://dpaste.com/485800/
| [Thursday 10 March 2011] [06:46:38] <sejo>	receiver and sender to the workers
| [Thursday 10 March 2011] [06:47:51] <sejo>	brb food
| [Thursday 10 March 2011] [06:48:50] <guido_g>	sejo: read the guid and ahve a look at the pyzmq examples
| [Thursday 10 March 2011] [06:48:59] <guido_g>	sejo: this all weird
| [Thursday 10 March 2011] [07:01:17] <sejo>	I did I used the taskvent/tasksink/taskworker examples from the python guide
| [Thursday 10 March 2011] [07:03:26] <guido_g>	sejo: your code is broken, please try to get the mq basics first
| [Thursday 10 March 2011] [07:15:43] <sejo>	meh
| [Thursday 10 March 2011] [07:18:07] <sejo>	not wanting to be rude but i don't see what I'm doing wrong if I look at these examples: https://github.com/imatix/zguide/blob/master/examples/Python/taskvent.py https://github.com/imatix/zguide/blob/master/examples/Python/taskwork.py
| [Thursday 10 March 2011] [07:18:09] <pieterh_1>	sejo: in sender, what's the lifespan of the context object?
| [Thursday 10 March 2011] [07:18:30] <sejo>	pieterh_1: the time of a full crawl +- 5000 messages
| [Thursday 10 March 2011] [07:19:05] <pieterh_1>	where is recv_json defined? is that a standard pyzmq method?
| [Thursday 10 March 2011] [07:19:16] <pieterh_1>	hmm, presumably so...
| [Thursday 10 March 2011] [07:19:18] <sejo>	yes
| [Thursday 10 March 2011] [07:19:49] <sejo>	the couchdbkit people showed me that :p
| [Thursday 10 March 2011] [07:20:17] <pieterh_1>	where is the reactor in all of this? and twisted? 
| [Thursday 10 March 2011] [07:20:26] <pieterh_1>	this is not complete code, there's a lot missing
| [Thursday 10 March 2011] [07:20:39] <sejo>	pietthe reactor is basicly hidder from my spider
| [Thursday 10 March 2011] [07:20:45] <sejo>	so that's in the back
| [Thursday 10 March 2011] [07:21:02] <sejo>	the process_response is a callback 
| [Thursday 10 March 2011] [07:21:18] <pieterh_1>	look, could you please make a *working minimal example*
| [Thursday 10 March 2011] [07:21:24] <pieterh_1>	do you understand what I mean when I say that?
| [Thursday 10 March 2011] [07:21:33] <pieterh_1>	fragments of code are not useful
| [Thursday 10 March 2011] [07:22:17] <sejo>	actually then I need to provide the full scrapy code... nvm
| [Thursday 10 March 2011] [07:22:27] <pieterh_1>	you are not understanding IMO
| [Thursday 10 March 2011] [07:22:45] <pieterh_1>	this is not us being difficult, it is an essential step in your own understanding of the problem
| [Thursday 10 March 2011] [07:22:50] <pieterh_1>	look...
| [Thursday 10 March 2011] [07:22:59] <sejo>	i understand also
| [Thursday 10 March 2011] [07:23:02] <pieterh_1>	you use 0MQ + twisted + whatever within a complex environment
| [Thursday 10 March 2011] [07:23:05] <pieterh_1>	things do not work
| [Thursday 10 March 2011] [07:23:10] <pieterh_1>	so far, all normal
| [Thursday 10 March 2011] [07:23:22] <pieterh_1>	your first step is to isolate your 0MQ code from the rest
| [Thursday 10 March 2011] [07:23:28] <pieterh_1>	minimal working test case
| [Thursday 10 March 2011] [07:23:42] <pieterh_1>	if the problem goes away, you know immediately that it was in whatever you removde
| [Thursday 10 March 2011] [07:23:45] <pieterh_1>	*removed
| [Thursday 10 March 2011] [07:23:54] <pieterh_1>	if the problem is still there, you can ask for help
| [Thursday 10 March 2011] [07:24:08] <pieterh_1>	no-one here is going to help you if you don't take this first step
| [Thursday 10 March 2011] [07:24:32] <sejo>	pieterh: i understand
| [Thursday 10 March 2011] [07:40:28] <Guthur>	pieterh_1: revisiting the EINTR issue, I think the blocking syscalls will always return EINTR if there is a signal, no matter if a handler is set or not
| [Thursday 10 March 2011] [07:40:51] <pieterh_1>	have you tried it, or are you speculating?
| [Thursday 10 March 2011] [07:41:02] <Guthur>	pieterh_1: going by how the spec reads
| [Thursday 10 March 2011] [07:41:06] <pieterh_1>	what spec?
| [Thursday 10 March 2011] [07:41:16] <Guthur>	man page for poll
| [Thursday 10 March 2011] [07:41:21] <pieterh_1>	zmq_poll?
| [Thursday 10 March 2011] [07:41:26] <Guthur>	no linux poll
| [Thursday 10 March 2011] [07:41:29] <Guthur>	the syscall
| [Thursday 10 March 2011] [07:41:30] <pieterh_1>	ok
| [Thursday 10 March 2011] [07:41:52] <Guthur>	the GC does use two signals
| [Thursday 10 March 2011] [07:41:59] <Guthur>	but it should catch them itself
| [Thursday 10 March 2011] [07:42:07] <pieterh_1>	should, doesn't, I assume
| [Thursday 10 March 2011] [07:42:17] <pieterh_1>	what signals are they?
| [Thursday 10 March 2011] [07:42:40] <pieterh_1>	all signals can be trapped except SIGKILL and SIGSTOP
| [Thursday 10 March 2011] [07:42:52] <Guthur>	it does, but if my understanding is correct during some blocking syscalls such as Poll and Recv it can't catch them
| [Thursday 10 March 2011] [07:43:07] <pieterh_1>	sigh
| [Thursday 10 March 2011] [07:43:23] <pieterh_1>	system calls are not special magic
| [Thursday 10 March 2011] [07:44:06] <pieterh_1>	thus the Mono GC is broken and not properly handling those signals
| [Thursday 10 March 2011] [07:44:19] <Guthur>	Poll: A signal occurred before any requested event. Recv: The receive was interrupted by delivery of a signal before any data were available.
| [Thursday 10 March 2011] [07:44:25] <Guthur>	from the man page ^
| [Thursday 10 March 2011] [07:44:35] <Guthur>	that's for EINTR
| [Thursday 10 March 2011] [07:44:47] <Guthur>	Poll is the most telling
| [Thursday 10 March 2011] [07:44:55] <pieterh_1>	Guthur: I can read man pages too, these sentences do not say "you cannot catch signals during a poll"
| [Thursday 10 March 2011] [07:45:13] <Guthur>	Poll says if it occurs
| [Thursday 10 March 2011] [07:45:15] <pieterh_1>	they say, "a signal (THAT YOU DID NOT HANDLE) arrived"
| [Thursday 10 March 2011] [07:45:34] <pieterh_1>	"delivery of a signal"
| [Thursday 10 March 2011] [07:47:27] <Guthur>	I can run the code later with the GC turned off
| [Thursday 10 March 2011] [07:47:36] <pieterh_1>	try "signal (whatever-signal-mono-uses, SIG_IGN)" if you can
| [Thursday 10 March 2011] [07:48:13] <pieterh_1>	file a bug report with the Mono people, this is not a 0MQ issue afaics...
| [Thursday 10 March 2011] [07:48:40] <pieterh_1>	perhaps note in the C# binding page, "Mono is broken, see issue #xyz here"
| [Thursday 10 March 2011] [07:49:48] <Guthur>	Certainly not a 0MQ issue
| [Thursday 10 March 2011] [07:50:10] <Guthur>	I'd just like to deal with it nicely in the clrzmq binding
| [Thursday 10 March 2011] [07:50:15] <Guthur>	if possible
| [Thursday 10 March 2011] [07:50:23] <pieterh_1>	if (running on Mono) 
| [Thursday 10 March 2011] [07:50:43] <pieterh_1>	exit "friends don't let friends use this rubbish"
| [Thursday 10 March 2011] [07:50:45] <pieterh_1>	endif
| [Thursday 10 March 2011] [07:51:29] <pieterh_1>	I'd seriously choose another language if you want portability
| [Thursday 10 March 2011] [07:51:32] <Guthur>	http://www.ustash.com/mono/Embedding_Mono.html#Signal_handling
| [Thursday 10 March 2011] [07:51:44] <Guthur>	that's the signals Mono
| [Thursday 10 March 2011] [07:51:46] <Guthur>	uses
| [Thursday 10 March 2011] [07:52:11] <Guthur>	pieterh_1: I'm the clrzmq2 maintainer, choosing another language is not really an option in that capacity
| [Thursday 10 March 2011] [07:52:16] <pieterh_1>	:-)
| [Thursday 10 March 2011] [07:52:29] <pieterh_1>	So harass the Mono developers until they fix this
| [Thursday 10 March 2011] [07:53:02] <pieterh_1>	You can't work around it because you have no way of knowing what signal actually interrupted poll
| [Thursday 10 March 2011] [07:54:00] <pieterh_1>	If you ignore EINTR systematically your applications won't exit on real signals like SIGINT
| [Thursday 10 March 2011] [08:30:59] <Guthur>	pieterh_1: It would appear that Poll and Recv will return EINTR if there is a signal
| [Thursday 10 March 2011] [08:31:42] <Guthur>	I was talking to someone on ##kernel
| [Thursday 10 March 2011] [08:31:55] <Guthur>	and he mentioned that SA_RESTART can be used to restart the syscall
| [Thursday 10 March 2011] [08:32:18] <pieterh_1>	did you specifically ask whether this applied to handled signals or unhandled signals?
| [Thursday 10 March 2011] [08:32:22] <Guthur>	or rather it wont return -1
| [Thursday 10 March 2011] [08:32:28] <Guthur>	yeap
| [Thursday 10 March 2011] [08:32:48] <Guthur>	oh wait, bugger
| [Thursday 10 March 2011] [08:32:51] <Guthur>	I meant to 
| [Thursday 10 March 2011] [08:32:56] <Guthur>	two secs
| [Thursday 10 March 2011] [08:32:58] <pieterh_1>	we do know what the man page says
| [Thursday 10 March 2011] [08:33:08] <pieterh_1>	please ask this, specifically:
| [Thursday 10 March 2011] [08:33:26] <pieterh_1>	"if I raise a user-defined signal which I've set SIG_IGN for, will that interrupt poll?"
| [Thursday 10 March 2011] [08:34:20] <Guthur>	it should be able to mask them out if that is what you mean by SIG_IGN
| [Thursday 10 March 2011] [08:35:34] <Guthur>	When a system call is slow and a signal arrives while it was blocked, waiting for something, the call is aborted and returns -EINTR, so that the library function will return -1 and set errno to EINTR. Just before the system call returns, the user program's signal handler is called.
| [Thursday 10 March 2011] [08:35:34] <pieterh_1>	SIG_IGN has a specific meaning, read the signal() man page
| [Thursday 10 March 2011] [08:35:48] <Guthur>	that is taken from here http://www.win.tue.nl/~aeb/linux/lk/lk-4.html
| [Thursday 10 March 2011] [08:37:07] <pieterh_1>	yes
| [Thursday 10 March 2011] [08:37:16] <pieterh_1>	ok, makes sense
| [Thursday 10 March 2011] [08:37:38] <pieterh_1>	the handling of the signal can be set to SA_RESTART
| [Thursday 10 March 2011] [08:37:48] <pieterh_1>	meaning the system call will continue
| [Thursday 10 March 2011] [08:38:11] <Guthur>	yeah, I should check with the Mono Devs to see if they do that
| [Thursday 10 March 2011] [08:39:59] <hoschi>	Hi, how can I do RPC with zeromq when I have different services (aka REP)? Should I use another socket combination, or must I write a address-based router like in the manual?
| [Thursday 10 March 2011] [08:40:01] <Guthur>	hehe, I was never expecting to have dive into Syscalls and Signals when developing this binding
| [Thursday 10 March 2011] [08:46:41] <pieterh_1>	it's surprising... but we learn something new every day
| [Thursday 10 March 2011] [08:47:10] <pieterh_1>	hoschi: how much of the Guide have you read and digested?
| [Thursday 10 March 2011] [08:48:01] <hoschi>	pieterh_1: I read chapter one and had a look at chapter 3
| [Thursday 10 March 2011] [08:48:42] <hoschi>	I also read the introduction blog post from nicholas
| [Thursday 10 March 2011] [08:48:53] <pieterh_1>	so please read all four chapters, and take the time to understand what they say
| [Thursday 10 March 2011] [08:48:56] <pieterh_1>	thanks
| [Thursday 10 March 2011] [09:12:41] <Guthur>	is sustrik still in the US
| [Thursday 10 March 2011] [09:27:22] <pieterh_1>	Guthur: afaik he's traveling back about now
| [Thursday 10 March 2011] [09:39:16] <private_meta>	So he finished his San Francisco Meetup? :D
| [Thursday 10 March 2011] [09:40:26] <Guthur>	yep, sounds like it was a great success
| [Thursday 10 March 2011] [09:41:06] <Guthur>	I hope there will be similar setup on this side of 'pond' sometime
| [Thursday 10 March 2011] [09:41:34] <pieterh_1>	Next week, in London
| [Thursday 10 March 2011] [09:42:14] <Guthur>	yeah, i kind of mean a more formal setup, a little like Martin mentioned
| [Thursday 10 March 2011] [09:42:40] <Guthur>	personally I'm not overly interested in trip to the pub
| [Thursday 10 March 2011] [09:42:50] <Guthur>	personal thing
| [Thursday 10 March 2011] [09:42:56] <pieterh_1>	You're in London?
| [Thursday 10 March 2011] [09:43:23] <Guthur>	nope, but I am in the UK
| [Thursday 10 March 2011] [09:43:53] <pieterh_1>	well, if you can find an "more formal" place in London, for next Wednesday around 5-6pm, we can do that
| [Thursday 10 March 2011] [09:44:21] <pieterh_1>	it's not really about hope, more about making it happen... :-)
| [Thursday 10 March 2011] [09:44:37] <Guthur>	very true
| [Thursday 10 March 2011] [09:44:38] <pieterh_1>	I'm there all day, happy to be anywhere in London
| [Thursday 10 March 2011] [09:44:49] <Guthur>	next time maybe, it's a little short notice now for me
| [Thursday 10 March 2011] [09:45:01] <pieterh_1>	this is the 21st century...1
| [Thursday 10 March 2011] [09:45:03] <pieterh_1>	!
| [Thursday 10 March 2011] [09:45:12] <Guthur>	tell that too my employer
| [Thursday 10 March 2011] [09:45:23] <pieterh_1>	"employer"...?
| [Thursday 10 March 2011] [09:45:33] <pieterh_1>	sorry to hear that
| [Thursday 10 March 2011] [09:45:40] <pieterh_1>	:-) just kidding
| [Thursday 10 March 2011] [09:45:51] <Guthur>	I'm technically suppose to give about 2 weeks notice
| [Thursday 10 March 2011] [09:46:05] <pieterh_1>	to attend a technical seminar in the evening?
| [Thursday 10 March 2011] [09:46:25] <pieterh_1>	your employer should be paying your costs...
| [Thursday 10 March 2011] [09:46:26] <Guthur>	ah yes, well when I say the UK, I mean Northern Ireland
| [Thursday 10 March 2011] [09:46:34] <pieterh_1>	sigh
| [Thursday 10 March 2011] [09:46:35] <Guthur>	it does require a little more logistics, hehe
| [Thursday 10 March 2011] [09:47:44] <Guthur>	I sometimes have business trips to London though
| [Thursday 10 March 2011] [09:47:54] <Guthur>	our main regional office is there
| [Thursday 10 March 2011] [09:48:06] <pieterh_1>	fair enough
| [Thursday 10 March 2011] [09:48:31] <pieterh_1>	if and when you get the opportunity to find a formal location in London, we can do a meetup
| [Thursday 10 March 2011] [09:48:39] <pieterh_1>	I'll make sure I get there
| [Thursday 10 March 2011] [09:48:46] <Guthur>	cool
| [Thursday 10 March 2011] [09:48:52] <Guthur>	are you going next wednesday
| [Thursday 10 March 2011] [09:48:57] <pieterh_1>	for sure, it's in a pub!
| [Thursday 10 March 2011] [09:49:13] <Guthur>	hehe
| [Thursday 10 March 2011] [09:49:22] <guido_g>	*sigh*
| [Thursday 10 March 2011] [09:49:25] <pieterh_1>	personal thing... :-) anyhow, they don't actually have *beer* in the UK
| [Thursday 10 March 2011] [09:49:45] <guido_g>	guinness would do :)
| [Thursday 10 March 2011] [09:50:07] <pieterh_1>	guido_g: I'm going to have to smuggle some real beer across from Brussels with me
| [Thursday 10 March 2011] [09:50:20] <guido_g>	hehe
| [Thursday 10 March 2011] [09:50:40] <Guthur>	what about coffee shops, I do like coffee
| [Thursday 10 March 2011] [09:51:01] <pieterh_1>	coffee shops are great, but not after 5pm or so
| [Thursday 10 March 2011] [09:51:15] <pieterh_1>	I suspect the timing of this meetup is "after work", easier for most people
| [Thursday 10 March 2011] [09:53:55] <pieterh_1>	Guthur: how about a real event, in Brussels, later in the spring?
| [Thursday 10 March 2011] [09:54:10] <pieterh_1>	a proper 0MQ seminar / workshop
| [Thursday 10 March 2011] [09:55:21] <Guthur>	I'd be up for that
| [Thursday 10 March 2011] [09:55:29] <Guthur>	I haven't been to brussels before
| [Thursday 10 March 2011] [09:55:56] 	 * guido_g too
| [Thursday 10 March 2011] [09:56:04] <Guthur>	Sounds a great idea actually, imo
| [Thursday 10 March 2011] [09:56:09] <pieterh_1>	I'm wondering whether there'd be demand for a proper seminar session
| [Thursday 10 March 2011] [09:56:29] <pieterh_1>	independently of a meetup later on
| [Thursday 10 March 2011] [09:56:59] <pieterh_1>	seminar = your company pays $$$ to send you
| [Thursday 10 March 2011] [09:57:07] <guido_g>	shit
| [Thursday 10 March 2011] [09:57:17] <guido_g>	i'm my company
| [Thursday 10 March 2011] [09:57:44] <pieterh_1>	guido_g: ah, but there is also an organizing team
| [Thursday 10 March 2011] [09:58:06] <guido_g>	ok
| [Thursday 10 March 2011] [09:58:55] 	 * guido_g managed to use ordinary makefile in eclipse
| [Thursday 10 March 2011] [09:59:03] 	 * guido_g can do everything now
| [Thursday 10 March 2011] [09:59:20] <pieterh_1>	eclipse, is that like an emacs clone but Java instead of Lisp?
| [Thursday 10 March 2011] [09:59:27] <guido_g>	*NO*
| [Thursday 10 March 2011] [09:59:30] <guido_g>	emacs works
| [Thursday 10 March 2011] [09:59:55] <pieterh_1>	lol
| [Thursday 10 March 2011] [09:59:55] <guido_g>	my $HOME is where I lay my .emacs
| [Thursday 10 March 2011] [10:00:06] <pieterh_1>	vi is much better
| [Thursday 10 March 2011] [10:00:22] <guido_g>	matter of taste
| [Thursday 10 March 2011] [10:00:30] <guido_g>	i do use vi
| [Thursday 10 March 2011] [10:00:36] 	 * pieterh_1 will stop trolling #zeromq
| [Thursday 10 March 2011] [10:00:46] <guido_g>	strangely, when i edit cofnig files etc. i use vi
| [Thursday 10 March 2011] [10:01:00] <guido_g>	or when i'm root
| [Thursday 10 March 2011] [10:01:04] <pieterh_1>	yeah, anything system feels more natural using vi
| [Thursday 10 March 2011] [10:01:16] <pieterh_1>	it's supposed to look ugly and be nasty
| [Thursday 10 March 2011] [10:01:16] <guido_g>	matter of age :)
| [Thursday 10 March 2011] [10:01:43] <pieterh_1>	OK, I'm designing a simple name service for 0MQ
| [Thursday 10 March 2011] [10:01:52] <pieterh_1>	going to be the last example in Ch4
| [Thursday 10 March 2011] [10:01:57] <guido_g>	cool
| [Thursday 10 March 2011] [10:02:15] <pieterh_1>	the idea is client-service reliability with no broker
| [Thursday 10 March 2011] [10:02:33] <guido_g>	i'm on writing a zmq reactor/ioloop in c++
| [Thursday 10 March 2011] [10:02:33] <pieterh_1>	clients connect to N services then do a kind of paranoid pirate on them
| [Thursday 10 March 2011] [10:02:56] <pieterh_1>	hmm, would you care to document that upfront in a language-neutral fashion?
| [Thursday 10 March 2011] [10:03:06] <guido_g>	uh
| [Thursday 10 March 2011] [10:03:13] <pieterh_1>	I'd like to make a reactor as an example for later in the guide
| [Thursday 10 March 2011] [10:04:02] <guido_g>	it's just a glorified zmq_poll
| [Thursday 10 March 2011] [10:04:33] <pieterh_1>	(a) take zmq_poll, (b) glorify it.
| [Thursday 10 March 2011] [10:04:36] <pieterh_1>	ok, that's clear
| [Thursday 10 March 2011] [10:04:43] <guido_g>	*sigh*
| [Thursday 10 March 2011] [10:07:05] <guido_g>	https://github.com/guidog/cpp/blob/master/zmqcpp/reactor.cpp <- example/test how it could work
| [Thursday 10 March 2011] [10:09:09] <guido_g>	but i'm not sure if this is the way to go in/with c++
| [Thursday 10 March 2011] [10:09:27] <pieterh_1>	i assume you also want timer events
| [Thursday 10 March 2011] [10:10:10] 	 * pieterh_1 is switching computers...
| [Thursday 10 March 2011] [10:10:18] <guido_g>	again?
| [Thursday 10 March 2011] [10:12:44] <Guthur>	emacs rocks
| [Thursday 10 March 2011] [10:13:34] <guido_g>	yeah
| [Thursday 10 March 2011] [10:13:53] <pieterh>	guido_g: yeah
| [Thursday 10 March 2011] [10:54:46] <private_meta>	quitting a client because of a computer switch... preposterous
| [Thursday 10 March 2011] [11:08:44] <guido_g>	pieterh: reactor/ioloop page https://github.com/guidog/cppzmq/wiki/ioloop
| [Thursday 10 March 2011] [11:11:09] <pieterh>	guido_g: hmm, what I miss in these models is any kind of FSM
| [Thursday 10 March 2011] [11:11:58] <pieterh>	i.e. "if current socket state is S and I get event E then execute steps F1, F2, F3"
| [Thursday 10 March 2011] [11:12:12] <pieterh>	"however if state is S2 then execute F5"
| [Thursday 10 March 2011] [11:12:20] <pieterh>	"and ignore event in any other state"
| [Thursday 10 March 2011] [11:12:21] <pieterh>	etc.
| [Thursday 10 March 2011] [11:12:22] <guido_g>	that would mean to track the sockets and their states
| [Thursday 10 March 2011] [11:12:26] <pieterh>	sure
| [Thursday 10 March 2011] [11:12:44] <guido_g>	because mq doesn't give us the required information
| [Thursday 10 March 2011] [11:13:08] <pieterh>	np, I'll make a FSM reactor pattern at some stage
| [Thursday 10 March 2011] [11:13:11] <pieterh>	it's not hard
| [Thursday 10 March 2011] [11:13:25] <pieterh>	just unusual
| [Thursday 10 March 2011] [11:13:29] <guido_g>	the hard part is to track the socket states reliably
| [Thursday 10 March 2011] [11:13:45] <pieterh>	you don't need to
| [Thursday 10 March 2011] [11:13:55] <guido_g>	explain
| [Thursday 10 March 2011] [11:14:30] <pieterh>	in the FSM definition, a given state/event transition always results in a specific next state
| [Thursday 10 March 2011] [11:14:51] <guido_g>	the finite part
| [Thursday 10 March 2011] [11:14:51] <pieterh>	socket "state" is not a 0MQ concept, it's an application concept
| [Thursday 10 March 2011] [11:14:59] <guido_g>	aahhhh
| [Thursday 10 March 2011] [11:15:02] <pieterh>	imagine implementing MDP like this
| [Thursday 10 March 2011] [11:15:11] 	 * guido_g was focused on the mq sockets
| [Thursday 10 March 2011] [11:15:14] <pieterh>	sure
| [Thursday 10 March 2011] [11:15:26] <guido_g>	it's more a general fsm thingie then
| [Thursday 10 March 2011] [11:15:30] <pieterh>	yes
| [Thursday 10 March 2011] [11:15:38] <pieterh>	but hooked into zmq sockets
| [Thursday 10 March 2011] [11:15:47] <guido_g>	sorry, won't do that, not related to mq :)
| [Thursday 10 March 2011] [11:16:06] <pieterh>	but hooked into zmq sockets
| [Thursday 10 March 2011] [11:16:07] <Guthur>	that's focus for you
| [Thursday 10 March 2011] [11:16:22] <Guthur>	dogged even
| [Thursday 10 March 2011] [11:16:31] <pieterh>	very dogged
| [Thursday 10 March 2011] [11:16:44] <guido_g>	pieterh: i'd say layered on top of something that can deal w/ mq socket
| [Thursday 10 March 2011] [11:16:48] <guido_g>	+s
| [Thursday 10 March 2011] [11:17:05] <pieterh>	weird, this is what I'm talking about
| [Thursday 10 March 2011] [11:17:09] <pieterh>	it's like you read my mind...
| [Thursday 10 March 2011] [11:17:14] <guido_g>	+sigh*
| [Thursday 10 March 2011] [11:17:20] <pieterh>	oh, wait, I just said this, yeah :-)
| [Thursday 10 March 2011] [11:17:50] <guido_g>	you said "hooked into", which imo is not the way it'll work
| [Thursday 10 March 2011] [11:18:15] <guido_g>	the sockets are just another event source in this case
| [Thursday 10 March 2011] [11:18:22] <pieterh>	if you *really* want to know...
| [Thursday 10 March 2011] [11:18:36] <pieterh>	go find an old project called Libero
| [Thursday 10 March 2011] [11:18:57] <pieterh>	there are more modern FSMs but I like the Libero FSM model, it's simple
| [Thursday 10 March 2011] [11:19:18] 	 * pieterh really has to stop trolling #zeromq... 
| [Thursday 10 March 2011] [11:20:13] <guido_g>	code generation...
| [Thursday 10 March 2011] [11:20:19] <guido_g>	hmm hmm hmm
| [Thursday 10 March 2011] [11:20:33] <pieterh>	that's how Libero does it, yes, but it's not mandatory
| [Thursday 10 March 2011] [11:21:23] <guido_g>	allone the task of inventing a dsl for this daring
| [Thursday 10 March 2011] [11:21:32] <guido_g>	*this is
| [Thursday 10 March 2011] [11:21:40] <pieterh>	dsl?
| [Thursday 10 March 2011] [11:21:49] <guido_g>	domain specific language
| [Thursday 10 March 2011] [11:21:53] <pieterh>	ah, :-)
| [Thursday 10 March 2011] [11:22:01] <Guthur>	crack out the Lisp
| [Thursday 10 March 2011] [11:22:05] <guido_g>	or how to express the fsm in a programming lanugage
| [Thursday 10 March 2011] [11:22:07] <Guthur>	only way to go for DSLs
| [Thursday 10 March 2011] [11:22:08] <pieterh>	no, these days we just use XML or JSON or s-expressions or whatever
| [Thursday 10 March 2011] [11:22:40] <pieterh>	trivial, and we have generic code generators for (e.g.) XML which are infinitely more powerful than Libero
| [Thursday 10 March 2011] [11:22:45] <guido_g>	http://www.mcternan.me.uk/mscgen/  <- nice dsl :)
| [Thursday 10 March 2011] [11:22:47] <pieterh>	if you like code generation, check out GSL4 on github
| [Thursday 10 March 2011] [11:22:58] <guido_g>	no thanks
| [Thursday 10 March 2011] [11:23:02] <pieterh>	the DSL is as such irrelevant as long as it has structure
| [Thursday 10 March 2011] [11:23:12] <Guthur>	I'd rather tear my hair than use XML as a language
| [Thursday 10 March 2011] [11:23:16] <guido_g>	i'm the only code generator i trust (sometimes)
| [Thursday 10 March 2011] [11:23:20] <Guthur>	hair out*
| [Thursday 10 March 2011] [11:23:25] <pieterh>	sure, shrug
| [Thursday 10 March 2011] [11:23:37] <guido_g>	Guthur: almost done :)
| [Thursday 10 March 2011] [11:29:40] <nadime>	Anyone know if it's an issue to set up pollitems in multiple threads?  (but only run zmq_poll in a threadsafe manner)?  getting weird behavior.
| [Thursday 10 March 2011] [11:29:54] <guido_g>	we need to stop pieterh somehow, otherwise the ch4 of teh guide will become a tome in itself ,)
| [Thursday 10 March 2011] [11:30:04] <nadime>	sorry let me be clearer:  these pollitems in other threads share a socket
| [Thursday 10 March 2011] [11:30:06] <pieterh>	ssh, don't tell him...
| [Thursday 10 March 2011] [11:30:34] <pieterh>	nadime: sharing the same socket from multiple threads?
| [Thursday 10 March 2011] [11:30:34] <guido_g>	nadime: sounds weird, "don't do this" i'd say
| [Thursday 10 March 2011] [11:31:50] <nadime>	yeah, so I have 10 worker threads.  10 pollitems.  they all share 1 subscribe socket.   However,, i only run zmq_poll in a threadsafe manner (i.e. only 1 thread at a time polls, then receives anything that needs to be received, then releases its memory barrier).
| [Thursday 10 March 2011] [11:32:03] <pieterh>	nadime: how much of the Guide have you read?
| [Thursday 10 March 2011] [11:32:06] <nadime>	all of it
| [Thursday 10 March 2011] [11:32:21] <nadime>	i have no choice to do what i'm doing unless i completely rearchitect using XREQ/REP.
| [Thursday 10 March 2011] [11:32:26] <pieterh>	did you read the part where it says in big letters, "DON'T SHARE SOCKETS BETWEEN THREADS!"
| [Thursday 10 March 2011] [11:32:32] <pieterh>	like several times
| [Thursday 10 March 2011] [11:32:47] <nadime>	ok, but then you made it possible to do so in 2.1?
| [Thursday 10 March 2011] [11:32:55] <guido_g>	omg
| [Thursday 10 March 2011] [11:32:56] <nadime>	what did you expect, people not to use functionality that's there?
| [Thursday 10 March 2011] [11:33:06] <pieterh>	yeah, which I regret we even documented
| [Thursday 10 March 2011] [11:33:18] <guido_g>	nadime: you've been warned, so...
| [Thursday 10 March 2011] [11:33:21] <pieterh>	because people systematically do what you do, think "Hey, this is cool" and then...
| [Thursday 10 March 2011] [11:33:24] <pieterh>	weird stuff happens
| [Thursday 10 March 2011] [11:33:30] <pieterh>	we get this all the time, literally
| [Thursday 10 March 2011] [11:33:37] <pieterh>	"hey dudes, weird stuff happens!?"
| [Thursday 10 March 2011] [11:33:43] <pieterh>	"stop sharing sockets between threads"
| [Thursday 10 March 2011] [11:33:48] <pieterh>	"hey, how did you know...?"
| [Thursday 10 March 2011] [11:34:10] <pieterh>	the functionality was added for low-level work such as in language bindings
| [Thursday 10 March 2011] [11:34:33] <pieterh>	I'm really sorry, but sockets are not thread safe
| [Thursday 10 March 2011] [11:34:37] <nadime>	I understand, and perhaps I shouldn't bother using zeromq, but you do get that it's a big pain in the ass not to be able to share sockets between threads, right?
| [Thursday 10 March 2011] [11:34:55] <pieterh>	I get it
| [Thursday 10 March 2011] [11:34:57] <nadime>	I can give you countless examples, and you can certainly rearchitect them to not share sockets
| [Thursday 10 March 2011] [11:35:02] <nadime>	but it requires annoying rearchitecture
| [Thursday 10 March 2011] [11:35:09] <pieterh>	but if you make sockets threadsafe (inside 0MQ)
| [Thursday 10 March 2011] [11:35:14] <pieterh>	you basically make a different product
| [Thursday 10 March 2011] [11:35:23] <pieterh>	which is slow, locky, but easier to use
| [Thursday 10 March 2011] [11:35:25] <nadime>	for example, designing a generic messaging library for other people to use without sharing sockets between threads (i.e. similar to your language binding example)
| [Thursday 10 March 2011] [11:35:35] <guido_g>	nadime: why did you architect it that way, then?
| [Thursday 10 March 2011] [11:35:54] 	 * pieterh guesses, reimplementing a non-0MQ design over 0MQ
| [Thursday 10 March 2011] [11:36:25] <cremes>	nadime: no need to redesign
| [Thursday 10 March 2011] [11:36:54] <cremes>	put a FORWARDER device in the thread handling the polling
| [Thursday 10 March 2011] [11:36:59] <pieterh>	indeed
| [Thursday 10 March 2011] [11:37:04] <cremes>	have each worker thread subscribe to the forwarder
| [Thursday 10 March 2011] [11:37:08] <pieterh>	use 0MQ, don't fight it
| [Thursday 10 March 2011] [11:37:10] <cremes>	piece of cake; this is a great pattern
| [Thursday 10 March 2011] [11:37:53] <nadime>	yes, i can do that, and it will likely be what i end up doing, but the point is that it's (a) extra latency, (b) if you say you now can migrate sockets, then it should be ok!
| [Thursday 10 March 2011] [11:38:08] <pieterh>	(a) it's not, it's inproc and near zero latency
| [Thursday 10 March 2011] [11:38:25] <pieterh>	(b) 'migrate sockets using full memory barriers' is not the same as 'share from 10 threads at once'
| [Thursday 10 March 2011] [11:38:33] <pieterh>	sorry, please do read the man page carefully
| [Thursday 10 March 2011] [11:38:36] <cremes>	right, inproc is a few microsecons
| [Thursday 10 March 2011] [11:38:51] <pieterh>	migration means you move the socket from thread A to thread B, where you then use it
| [Thursday 10 March 2011] [11:39:30] <pieterh>	what you are doing is rather different afaics
| [Thursday 10 March 2011] [11:40:57] <pieterh>	(c) if you care about latency, you don't use shared state concurrency, period
| [Thursday 10 March 2011] [11:41:15] <pieterh>	(d) this is all covered in the Guide, isn't it?
| [Thursday 10 March 2011] [11:42:02] <cremes>	pieterh: i don't know if telling people to read the guide *again* is a good answer
| [Thursday 10 March 2011] [11:42:14] <cremes>	i think nadime is doing the right thing here
| [Thursday 10 March 2011] [11:42:22] <nadime>	(a) isn't inproc implemented with tcp on windows?
| [Thursday 10 March 2011] [11:42:27] <cremes>	he's brining up a challenge and asking "why doesn't this work?"
| [Thursday 10 March 2011] [11:42:37] <pieterh>	cremes: he's not explaining his use case
| [Thursday 10 March 2011] [11:42:41] <nadime>	(b) i will look at the documentation again, but i believe 2.1+ claims to be threadsafe as long as you are (which is another story)
| [Thursday 10 March 2011] [11:42:41] <cremes>	nadime: no, ipc uses tcp, inproc is flipping pointers
| [Thursday 10 March 2011] [11:42:56] <pieterh>	nadime: next time please explain what you want to do, ask how to do it, if you don't see the obvious answer
| [Thursday 10 March 2011] [11:42:58] <nadime>	(c) that's not totally true, but a longer argument
| [Thursday 10 March 2011] [11:42:58] <cremes>	pieterh: that's a common problem :)
| [Thursday 10 March 2011] [11:43:09] <nadime>	(d) see (b)
| [Thursday 10 March 2011] [11:43:26] <pieterh>	complaining about things not working as you expect is pointless unless you are quite expert in 0MQ and your expectations already work the right way
| [Thursday 10 March 2011] [11:43:30] <nadime>	let me give you an example that's annoying and you can tell me if i'm missing something stupid
| [Thursday 10 March 2011] [11:43:37] <pieterh>	go for it
| [Thursday 10 March 2011] [11:43:39] <cremes>	the docs should probably be changed to say that sockets have enough thread safety to allow 
| [Thursday 10 March 2011] [11:43:48] <pieterh>	cremes: sigh
| [Thursday 10 March 2011] [11:43:57] <cremes>	language bindings to safely handle them from gc threads, etc
| [Thursday 10 March 2011] [11:44:04] <pieterh>	nope, the docs should say, "if you share sockets you deserve the worst you get"
| [Thursday 10 March 2011] [11:44:12] <cremes>	but they should *not* be used from multiple threads as a design pattern
| [Thursday 10 March 2011] [11:44:19] <cremes>	pieterh: sure, that works too 
| [Thursday 10 March 2011] [11:44:19] <nadime>	i create a log server which receives a bunch of messages from anyone who cares to tell it anything.  
| [Thursday 10 March 2011] [11:44:27] <pieterh>	with a footnote saying, "if you're a language binding author, contact us offlist"
| [Thursday 10 March 2011] [11:44:35] <nadime>	to go along witht his log server, i make a "logger" that instantiates a class capable of logging to this server.
| [Thursday 10 March 2011] [11:44:50] <pieterh>	nadime: so far so good
| [Thursday 10 March 2011] [11:44:57] <nadime>	all you do is run logger.log(<msg>) and it logs it for youl.
| [Thursday 10 March 2011] [11:44:58] <cremes>	nadime: go on... i wrote this exact thing recently...
| [Thursday 10 March 2011] [11:45:21] <nadime>	now let's say my friend bob uses my logger library.  he basically has to create one logger per thread
| [Thursday 10 March 2011] [11:45:31] <pieterh>	yes
| [Thursday 10 March 2011] [11:45:35] <cremes>	yep
| [Thursday 10 March 2011] [11:45:40] <pieterh>	that costs... nothing... so great
| [Thursday 10 March 2011] [11:45:46] <nadime>	of course it costs something
| [Thursday 10 March 2011] [11:45:56] <pieterh>	not as much as this conversation
| [Thursday 10 March 2011] [11:45:58] <pieterh>	I'm serious
| [Thursday 10 March 2011] [11:46:02] <cremes>	pieterh: come on
| [Thursday 10 March 2011] [11:46:22] <cremes>	nadime: anything more?
| [Thursday 10 March 2011] [11:46:24] <pieterh>	sigh, provide me with a measurable significant cost, not "non zero"
| [Thursday 10 March 2011] [11:46:31] <pieterh>	nadime: apologies
| [Thursday 10 March 2011] [11:46:51] <nadime>	i don't understand, i'm not arguing your software is useless, obviously i think it's great
| [Thursday 10 March 2011] [11:47:00] <pieterh>	you have a design that works, ok?
| [Thursday 10 March 2011] [11:47:02] <nadime>	i'm pointing out an issue, if the gain is greater than the loss, great
| [Thursday 10 March 2011] [11:47:09] <pieterh>	each thread creates a logger, has its own sockets, etc.
| [Thursday 10 March 2011] [11:47:18] <pieterh>	that is the brute force design, obvious, simple, scalable
| [Thursday 10 March 2011] [11:47:29] <cremes>	nadime: here is how i solved this *exact* case
| [Thursday 10 March 2011] [11:47:30] <pieterh>	you can break the threads into their own processes, it still works
| [Thursday 10 March 2011] [11:47:32] <pieterh>	right?
| [Thursday 10 March 2011] [11:47:32] <nadime>	sure, but let's say you use a threadpool
| [Thursday 10 March 2011] [11:47:38] <pieterh>	now you believe you have a cost issue
| [Thursday 10 March 2011] [11:47:40] <nadime>	now the function you call within the pool has to create a new logger
| [Thursday 10 March 2011] [11:47:46] <pieterh>	and you try to optimize that away
| [Thursday 10 March 2011] [11:47:47] <cremes>	each thread has a pub socket
| [Thursday 10 March 2011] [11:47:59] <pieterh>	and you instead create a much larger design and complexity cost
| [Thursday 10 March 2011] [11:48:02] <cremes>	the log server, which handles writing the messages to persistent storage, has a sub socket
| [Thursday 10 March 2011] [11:48:34] <cremes>	i make sure to use a single context so that i can communicate via inproc transport (no tcp or ipc overhead)
| [Thursday 10 March 2011] [11:48:52] <nadime>	right, and that's easy using a factory
| [Thursday 10 March 2011] [11:48:54] <cremes>	the log server binds to the well-known port first (important for inproc)
| [Thursday 10 March 2011] [11:49:16] <cremes>	each thread instantiates a logger object (a few hundred bytes) and connects to the well-known port
| [Thursday 10 March 2011] [11:49:19] 	 * Guthur is having great difficulty following this convo
| [Thursday 10 March 2011] [11:49:20] <cremes>	done
| [Thursday 10 March 2011] [11:49:35] <cremes>	Guthur: it's happening async! :)
| [Thursday 10 March 2011] [11:49:53] <Guthur>	ZeroMQ is the answer then
| [Thursday 10 March 2011] [11:50:05] <nadime>	no question, i'm not saying it's that hard.  i'm just saying it's a really, really different paradigm to say that if you make a library that uses zeromq it's a once per thread library
| [Thursday 10 March 2011] [11:50:16] <pieterh>	ah, paradigms... why didn't you say so?
| [Thursday 10 March 2011] [11:50:39] <pieterh>	you started with "I'd need to rearchitect using XREP sockets"...
| [Thursday 10 March 2011] [11:50:53] <nadime>	well no, i have two possible solutions to be fair
| [Thursday 10 March 2011] [11:50:57] <nadime>	use a forwarder as cremes suggested
| [Thursday 10 March 2011] [11:51:11] <nadime>	or use XREP to evenly distribute messages
| [Thursday 10 March 2011] [11:51:19] <pieterh>	hang on, nadime, please explain something missing here
| [Thursday 10 March 2011] [11:51:23] <nadime>	sure?
| [Thursday 10 March 2011] [11:51:33] <pieterh>	you have N clients sending to 1 logger, right?
| [Thursday 10 March 2011] [11:51:41] <pieterh>	that is one half of your problem
| [Thursday 10 March 2011] [11:51:51] <pieterh>	you then have 1 logger talking to N workers, is that so?
| [Thursday 10 March 2011] [11:51:58] <pieterh>	could you please explain that, I missed it somehow
| [Thursday 10 March 2011] [11:52:02] <nadime>	so the logger actually doesn't migrate sockets, i just gave you that as an example.  my more complicated multithreaded app is a market data distributor
| [Thursday 10 March 2011] [11:52:14] 	 * cremes did that too :)
| [Thursday 10 March 2011] [11:52:18] <nadime>	let me explain it in more detail
| [Thursday 10 March 2011] [11:52:46] <pieterh>	please do explain the use case, otherwise it's like asking for a gallon of gas but driving up an hour later
| [Thursday 10 March 2011] [11:53:04] <nadime>	i have a server which receives multiple market data feeds and distributes them via pub to clients which use a single sub socket.
| [Thursday 10 March 2011] [11:53:19] <pieterh>	sure
| [Thursday 10 March 2011] [11:53:25] <pieterh>	that's it?
| [Thursday 10 March 2011] [11:53:30] <nadime>	my data server will handle historical data as well as realtime, and for that i want to pump it up to as fast as possible
| [Thursday 10 March 2011] [11:53:33] <nadime>	no, hold on
| [Thursday 10 March 2011] [11:53:51] <nadime>	so i'm operating right now at something like 100x realtime on level 2 data
| [Thursday 10 March 2011] [11:53:55] <nadime>	which means a lot of messages
| [Thursday 10 March 2011] [11:53:59] <pieterh>	sure
| [Thursday 10 March 2011] [11:54:01] <nadime>	it's soemthing like 4 million/sec
| [Thursday 10 March 2011] [11:54:12] <nadime>	zeromq is fantastic.  it's working very well.  
| [Thursday 10 March 2011] [11:54:21] <pieterh>	continue...
| [Thursday 10 March 2011] [11:54:28] <nadime>	the problem i have is that on my client, i.e. the data receiver, i offer a callback functionality
| [Thursday 10 March 2011] [11:54:48] <nadime>	i.e. when the client gets message-type X, it runs a callback inline
| [Thursday 10 March 2011] [11:54:59] <nadime>	if the callback isn't lightning fast, that can slow down message receipt
| [Thursday 10 March 2011] [11:55:00] <pieterh>	sure
| [Thursday 10 March 2011] [11:55:05] <nadime>	which at 4 million/sec blows things up
| [Thursday 10 March 2011] [11:55:05] <pieterh>	sure
| [Thursday 10 March 2011] [11:55:09] <nadime>	so
| [Thursday 10 March 2011] [11:55:35] <nadime>	i wanted to create multiple threads so that another thread can be receiving a message while the other threads are running the callback
| [Thursday 10 March 2011] [11:55:42] <nadime>	now let me point out
| [Thursday 10 March 2011] [11:55:53] <nadime>	this is a case where i can easily change this to support not migrating the sockets
| [Thursday 10 March 2011] [11:56:02] <pieterh>	hang on, nadime
| [Thursday 10 March 2011] [11:56:19] <pieterh>	publisher and subscribers are all on different boxes?
| [Thursday 10 March 2011] [11:56:22] <nadime>	yes
| [Thursday 10 March 2011] [11:56:34] <pieterh>	so one subscriber has a large multicore box to play with
| [Thursday 10 March 2011] [11:56:43] <nadime>	all of these boxes are pretty powerful, yep
| [Thursday 10 March 2011] [11:56:52] <pieterh>	how many cores? just for info...
| [Thursday 10 March 2011] [11:57:04] <nadime>	server has 12, clients have 6
| [Thursday 10 March 2011] [11:57:12] <nadime>	that's physical
| [Thursday 10 March 2011] [11:57:12] <cremes>	a forwarder device isn't even necessary in this case
| [Thursday 10 March 2011] [11:57:14] <pieterh>	ok, great
| [Thursday 10 March 2011] [11:57:36] <pieterh>	so imagine you have a blank sheet, and can design this from scratch
| [Thursday 10 March 2011] [11:58:09] <nadime>	k
| [Thursday 10 March 2011] [11:58:15] <pieterh>	you have one app thread subscribing and pulling down messages as fast as it can
| [Thursday 10 March 2011] [11:58:31] <pieterh>	you may be able to filter, conflate, etc. but that's not important
| [Thursday 10 March 2011] [11:58:44] <pieterh>	every now and then it decides to invoke a callback for a message
| [Thursday 10 March 2011] [11:59:02] <pieterh>	the callbacks run as separate 0MQ threads, each waiting on a REP socket
| [Thursday 10 March 2011] [11:59:29] <pieterh>	you can use any of a number of patterns here, including XREP routing to those callback threads
| [Thursday 10 March 2011] [11:59:35] <pieterh>	you use inproc, of course
| [Thursday 10 March 2011] [11:59:55] <nadime>	yes, and that's a great design, again i'm sort of not being clear here, and i apologize .. i know i can rearchitect this without that much trouble, it will probably take me half a day
| [Thursday 10 March 2011] [11:59:56] <pieterh>	that adds effectively nothing as you invoke the callback
| [Thursday 10 March 2011] [12:00:36] <nadime>	(a) i thought inproc was tcp on windows, so higher latency, and now i know it's not (my fault), but (b) i don't think your documentation is clear enough on support for multithreading
| [Thursday 10 March 2011] [12:01:07] <Guthur>	something I have been meaning to ask...
| [Thursday 10 March 2011] [12:01:09] <pieterh>	possibly
| [Thursday 10 March 2011] [12:01:14] <Guthur>	does subscribe support regexp
| [Thursday 10 March 2011] [12:01:24] <pieterh>	Guthur: nope, just prefix match
| [Thursday 10 March 2011] [12:01:49] <Guthur>	ok cheers
| [Thursday 10 March 2011] [12:02:22] <pieterh>	nadime: if you can point to anything more I can add on multithreading, to the guide, tell me
| [Thursday 10 March 2011] [12:02:41] <pieterh>	it's hard to know what people expect, coming from other paradigms
| [Thursday 10 March 2011] [12:02:49] <cremes>	pieterh: add a chapter on it; single line "Don't!" :)
| [Thursday 10 March 2011] [12:02:53] <nadime>	ok, i will read through it and email the list
| [Thursday 10 March 2011] [12:03:01] <pieterh>	cremes: half of the Guide examples are multithreaded
| [Thursday 10 March 2011] [12:03:15] <cremes>	yes, but one socket per thread
| [Thursday 10 March 2011] [12:03:40] <pieterh>	nadime: in very brief: use inproc from frontend to worker threads, one TCP socket to talk to the outside world
| [Thursday 10 March 2011] [12:03:53] <pieterh>	this is a classic server model, scalable and simple
| [Thursday 10 March 2011] [12:04:43] <pieterh>	thanks for explaining your use case, sorry if I sounded unpolite earlier
| [Thursday 10 March 2011] [12:05:08] <nadime>	it's ok, i don't take offense, i know how annoying it is to field questions
| [Thursday 10 March 2011] [12:05:18] <nadime>	thanks for spending so much time in here
| [Thursday 10 March 2011] [12:07:46] <pieterh>	it's the only way to know what people are doing with 0MQ
| [Thursday 10 March 2011] [12:08:15] <pieterh>	please do tell me how to improve the explanations of multithreading, and if you get your architecture working, it'd be cool to know
| [Thursday 10 March 2011] [12:08:41] <nadime>	oh the architecture's been working for awhile, before i decided to launch a zillion threads on the client side ;)
| [Thursday 10 March 2011] [12:09:07] <pieterh>	yeah, you do want to keep two cores free for your frontend
| [Thursday 10 March 2011] [12:09:23] <pieterh>	one for the 0MQ I/O thread, one for the app thread
| [Thursday 10 March 2011] [12:11:10] <nadime>	i've been using 4 i/o threads, but i haven't played that parameter much yet
| [Thursday 10 March 2011] [12:11:21] <pieterh>	4 is way too high
| [Thursday 10 March 2011] [12:11:30] <pieterh>	inproc does not need an i/o thread
| [Thursday 10 March 2011] [12:11:58] <pieterh>	you're not doing other I/O except the sub socket, per your explanation
| [Thursday 10 March 2011] [12:12:07] <pieterh>	so you want precisely 1 IO thread
| [Thursday 10 March 2011] [12:12:08] <nadime>	yep, but it's a lot of messages
| [Thursday 10 March 2011] [12:12:12] <pieterh>	lol
| [Thursday 10 March 2011] [12:12:19] <pieterh>	you think two threads will magically make that faster?
| [Thursday 10 March 2011] [12:12:31] <nadime>	not magically, no :)
| [Thursday 10 March 2011] [12:12:36] <nadime>	depends on what you're doing in your library
| [Thursday 10 March 2011] [12:12:44] <nadime>	which i haven't read much
| [Thursday 10 March 2011] [12:13:02] <pieterh>	well, you can set-up two or four SUB sockets, partition your data into four streams, and then use 4 IO threads
| [Thursday 10 March 2011] [12:13:19] <pieterh>	when you have 12-core client boxes, a nice architecture
| [Thursday 10 March 2011] [12:13:26] <nadime>	in other words: you're doing little enough processing that you would set up 1 i/o thread per i/o socket
| [Thursday 10 March 2011] [12:13:59] <nadime>	and yes, my next plan was to add additional outward facing sockets as necessary
| [Thursday 10 March 2011] [12:14:10] <pieterh>	in other words...
| [Thursday 10 March 2011] [12:14:15] <nadime>	sorry, by i/o socket i mean outward facing
| [Thursday 10 March 2011] [12:14:55] <pieterh>	0MQ will spread sockets between I/O threads (at socket creation time!) though you can be explicit about it too
| [Thursday 10 March 2011] [12:15:11] <nadime>	yes, i saw the affinity setup
| [Thursday 10 March 2011] [12:15:11] <pieterh>	and you want to eliminate contention for cores
| [Thursday 10 March 2011] [12:15:28] <pieterh>	the IO threads option should never have been placed into zmq_init()
| [Thursday 10 March 2011] [12:15:39] <pieterh>	one more 'feature' people use without knowing why
| [Thursday 10 March 2011] [12:15:59] <pieterh>	the only use case for it is when your main IO thread is clearly overloaded
| [Thursday 10 March 2011] [12:16:23] <pieterh>	i.e. you're doing >80% CPU on it during peaks
| [Thursday 10 March 2011] [12:16:55] <pieterh>	which will hit at 6-8M msg/sec or so, depending
| [Thursday 10 March 2011] [12:17:32] <pieterh>	I'm not an expert in this area, sustrik will be able to give more precise figures
| [Thursday 10 March 2011] [12:18:18] <nadime>	why didn't you guys dynamically create i/o threads when new non-inproc sockets are created?
| [Thursday 10 March 2011] [12:18:43] <pieterh>	creating too many threads is as bad as creating too few
| [Thursday 10 March 2011] [12:18:50] <pieterh>	and much easier
| [Thursday 10 March 2011] [12:19:16] <nadime>	no, what i mean is, start with one thread per socket (i.e. don't even bother telling the user he can change the number) and then increment as you make new sockets
| [Thursday 10 March 2011] [12:19:25] <pieterh>	yes, I understand what you mean
| [Thursday 10 March 2011] [12:19:49] <pieterh>	how many threads per socket would you like? 1? 0.1? 0.000001?
| [Thursday 10 March 2011] [12:20:09] <nadime>	obviously if you want it to be asynchronous you need 1
| [Thursday 10 March 2011] [12:20:23] <guido_g>	i'd start w/ pinning the nic intr to a fixed core
| [Thursday 10 March 2011] [12:20:48] <guido_g>	did make a difference in some tests i made
| [Thursday 10 March 2011] [12:20:57] <pieterh>	so you have 10 sockets, of which one is a high volume SUB receiver, and 9 are low volume req/rep for other work
| [Thursday 10 March 2011] [12:21:05] <nadime>	ah, i see your point
| [Thursday 10 March 2011] [12:21:11] <pieterh>	your 6-core box spends its time switching between threads
| [Thursday 10 March 2011] [12:21:24] <pieterh>	and your SUB socket mysteriously gets latency spikes
| [Thursday 10 March 2011] [12:21:47] <pieterh>	wow, every time I do a REQ/REP, I lose 50usecs!
| [Thursday 10 March 2011] [12:22:11] <pieterh>	whereas a single IO thread can handle all 10 sockets without even sweating
| [Thursday 10 March 2011] [12:22:49] <pieterh>	guido_g: indeed, you want the NIC to talk to one core
| [Thursday 10 March 2011] [12:23:52] <nadime>	you could try some dynamic management, but i guess the user knows more about his traffic than zeromq can and that's a whole big set of code to write to do intelligent prediction
| [Thursday 10 March 2011] [12:24:09] <pieterh>	indeed
| [Thursday 10 March 2011] [12:26:11] <pieterh>	nadime: if you want really high capacity, you'd use multiple NICs, a matching number of IO threads and SUB sockets, and multiple PUB sockets, one per segment
| [Thursday 10 March 2011] [12:26:36] <nadime>	if you want really high capacity, you will make your own hardware
| [Thursday 10 March 2011] [12:26:53] <nadime>	which is what the best high frequency trading shops are doing
| [Thursday 10 March 2011] [12:27:09] <pieterh>	'make' = 'have built to custom specs'?
| [Thursday 10 March 2011] [12:27:20] <pieterh>	or literally going out and boiling sand down into CPUs...?
| [Thursday 10 March 2011] [12:28:13] <nadime>	some are actually doing their own hardware creation, i.e. having someone build chips for them
| [Thursday 10 March 2011] [12:28:21] <pieterh>	FPGAs... 
| [Thursday 10 March 2011] [12:28:26] <nadime>	some are using FPGAs
| [Thursday 10 March 2011] [12:28:54] <nadime>	some just use custom NICs with the ability to write assembly onto the nic
| [Thursday 10 March 2011] [12:29:30] <nadime>	it's an expensive business, which is why i am not in it!
| [Thursday 10 March 2011] [12:29:48] <pieterh>	it'll all end in tears as they fight for socket space on the exchange motherboard
| [Thursday 10 March 2011] [12:30:23] <nadime>	it will all end in tears when it's regulated away, in any case
| [Thursday 10 March 2011] [12:31:13] <pieterh>	you're really doing 4M msg/sec on Windows?
| [Thursday 10 March 2011] [12:31:26] <nadime>	yep
| [Thursday 10 March 2011] [12:31:29] <pieterh>	I think that's a world record
| [Thursday 10 March 2011] [12:31:31] <nadime>	small msgs
| [Thursday 10 March 2011] [12:31:36] <nadime>	it's more like 3.6
| [Thursday 10 March 2011] [12:31:41] <nadime>	and that's peak
| [Thursday 10 March 2011] [12:32:00] <pieterh>	still extraordinary
| [Thursday 10 March 2011] [12:32:03] <pieterh>	nice
| [Thursday 10 March 2011] [12:32:58] <nadime>	it's very cool, let's us normalize our data feeds between our data providers so that our quants don't have to code to specific data provider specs, but still run historical backtests at many times realtime 
| [Thursday 10 March 2011] [12:34:10] <pieterh>	clearly
| [Thursday 10 March 2011] [12:34:52] <cremes>	pieterh: new topic... did you ever have any luck reproducing issue #174?
| [Thursday 10 March 2011] [12:35:27] <pieterh>	cremes: not yet... I was looking at it yesterday
| [Thursday 10 March 2011] [12:35:35] <pieterh>	we do want to resolve that for 2.1 stable
| [Thursday 10 March 2011] [12:35:52] <cremes>	great; anything i can do to help, let me know
| [Thursday 10 March 2011] [12:36:02] <pieterh>	will do
| [Thursday 10 March 2011] [12:36:06] <cremes>	i've worked around it by using inproc (my new favorite transport)
| [Thursday 10 March 2011] [12:36:13] <pieterh>	:-) inproc is nice
| [Thursday 10 March 2011] [12:36:25] <cremes>	we really need to rename it for 3.0 though
| [Thursday 10 March 2011] [12:36:48] <nadime>	why not call it local?
| [Thursday 10 March 2011] [12:37:11] <cremes>	nadime: it only works between sockets in the *same* context
| [Thursday 10 March 2011] [12:37:21] <cremes>	so :incontext or similar would be more accurate
| [Thursday 10 March 2011] [12:37:37] <nadime>	is there a reason to create more than one context per application that i am unaware of?
| [Thursday 10 March 2011] [12:37:43] <cremes>	inproc makes it sound as though it can be used within the same process regardless of other restrictions
| [Thursday 10 March 2011] [12:38:03] <cremes>	nadime: when interfacing to a 3rd party library that also uses 0mq, for example
| [Thursday 10 March 2011] [12:38:51] <nadime>	yeah i guess if they make their context private
| [Thursday 10 March 2011] [12:39:03] <nadime>	our they don't match what you need on the i/o thread front
| [Thursday 10 March 2011] [12:39:04] <cremes>	99% of the time you only need 1 context per process
| [Thursday 10 March 2011] [12:39:34] <cremes>	the fear is that you could have endpoint collisions, e.g. same name for an ipc or inproc transport
| [Thursday 10 March 2011] [12:39:59] <cremes>	also, the default max_sockets for 0mq is 512; if you don't know how many the lib is using you could run out
| [Thursday 10 March 2011] [12:40:10] <nadime>	right
| [Thursday 10 March 2011] [12:40:12] <cremes>	so it comes down to properly segregating your resources
| [Thursday 10 March 2011] [12:40:15] <pieterh>	cremes: what's wrong with the old suggestion itc:
| [Thursday 10 March 2011] [12:40:34] <pieterh>	or simply ctx:
| [Thursday 10 March 2011] [12:40:37] <cremes>	pieterh: what did that stand for again? inter-thread-communication or similar?
| [Thursday 10 March 2011] [12:40:40] <pieterh>	yeah
| [Thursday 10 March 2011] [12:40:53] <cremes>	i like :intracontext
| [Thursday 10 March 2011] [12:41:04] <cremes>	it says everything (to me)
| [Thursday 10 March 2011] [12:41:18] <pieterh>	why not usethesamecontextifyouexpectthistowork:// ?
| [Thursday 10 March 2011] [12:41:27] <cremes>	best one yet!
| [Thursday 10 March 2011] [12:42:26] <pieterh>	nadime: there are quite a lot of cases where processes use multiple contexts
| [Thursday 10 March 2011] [12:42:56] <pieterh>	e.g. you could wrap the SUB socket up in a framework that creates/destroys a context automatically 
| [Thursday 10 March 2011] [12:43:07] <nadime>	that's what i do, but i use a factory
| [Thursday 10 March 2011] [12:43:22] <nadime>	as in: if context exists, return, otherwise create one
| [Thursday 10 March 2011] [12:43:49] <pieterh>	I mean, you can create a context invisibly, use that for just one object, terminate it when you destroy the object
| [Thursday 10 March 2011] [12:44:04] <pieterh>	as long as that socket works over TCP, not inproc
| [Thursday 10 March 2011] [13:23:31] <private_meta>	pieterh: do you want the version assert in the later c++ examples as well?
| [Thursday 10 March 2011] [13:34:14] <Bob___>	is there any way to find out when a connection has been made to a PUB socket?
| [Thursday 10 March 2011] [13:35:12] <Bob___>	I have two applications that are subscribing to each other's pub sockets to transfer messages between them, but I'm loosing messages because connection order is non-deterministic
| [Thursday 10 March 2011] [13:36:35] <guido_g>	no
| [Thursday 10 March 2011] [13:36:52] <Bob___>	is Pub/Sub the right model to use for that?
| [Thursday 10 March 2011] [13:37:30] <Bob___>	here's what I'm trying to do:  I have a number of simulation engines that are started up and share messages between them
| [Thursday 10 March 2011] [13:37:34] <guido_g>	you've to describe the use case
| [Thursday 10 March 2011] [13:38:13] <Bob___>	I have a multicast beacon that each sim engine broadcasts to identify itself.  When another engine receives the beacon message (which contains it's pub socket address/port) it connects to it if hasn't already
| [Thursday 10 March 2011] [13:38:34] <Bob___>	over time this gives me a fully connected network of sim engines (which is what I think I want)
| [Thursday 10 March 2011] [13:39:05] <Bob___>	but I need to send some startup messages on connect to make the engine forward certain types of messages over it's network connection
| [Thursday 10 March 2011] [13:39:14] <guido_g>	why not using one multicast channel for that?
| [Thursday 10 March 2011] [13:39:51] <Bob___>	guido_g: I'm not sure I follow what you mean.  I am using a multicast channel for identifying sim engines 
| [Thursday 10 March 2011] [13:39:55] <guido_g>	btw, pub/sub doesn't do connections, it's more like a radion transmission
| [Thursday 10 March 2011] [13:40:11] <guido_g>	s/radion/radio/
| [Thursday 10 March 2011] [13:40:48] <Bob___>	ok
| [Thursday 10 March 2011] [13:40:55] <guido_g>	just have bus structure for all participants, will make alles messages available to all subscribed nodes
| [Thursday 10 March 2011] [13:48:04] <Bob___>	guido_g: thanks!  I guess I need to rethink my connection scheme.  maybe creating  new pair sockets is the way to go.
| [Thursday 10 March 2011] [13:48:24] <guido_g>	no, pair ist not the way to go
| [Thursday 10 March 2011] [13:49:26] <Bob___>	you think pub/sub is right?
| [Thursday 10 March 2011] [13:50:49] <guido_g>	if you want to communicate from every node to every other node a bus structure would fit
| [Thursday 10 March 2011] [13:59:42] <private_meta>	pieterh: btw, building single files doesn't seem to be possible with the C++ builder
| [Thursday 10 March 2011] [14:10:30] <private_meta>	pieterh: interestingly, if i simulate the behavior in the C build file, it still doesn't work
| [Thursday 10 March 2011] [14:16:48] <private_meta>	ah ok, fixed
| [Thursday 10 March 2011] [14:33:59] <private_meta>	pieterh: maybe I made a mistake, but spqueue.c, as found in the repo, seems broken
| [Thursday 10 March 2011] [14:34:30] <private_meta>	pieterh: it never let's the client connect. I haven't yet had the time to look properly though, I'll check again tomorrow
| [Thursday 10 March 2011] [14:58:24] <mikko>	pieterh: it's ready now
| [Thursday 10 March 2011] [14:58:28] <mikko>	tested quickly locally
| [Thursday 10 March 2011] [15:22:36] <pieterh>	private_meta: version assert... normally only if the code needs 2.1+ functionality
| [Thursday 10 March 2011] [15:23:11] <pieterh>	mikko: yay!
| [Thursday 10 March 2011] [15:23:31] <mikko>	pieterh: daily builds around 5am should run the same thing on more platforms
| [Thursday 10 March 2011] [15:23:39] <mikko>	im exchausted
| [Thursday 10 March 2011] [15:26:09] <pieterh>	mikko: can you tell me very briefly what the new tooling fixes?
| [Thursday 10 March 2011] [15:26:25] <pieterh>	openpgm 5.1.113, obviously
| [Thursday 10 March 2011] [15:26:55] <pieterh>	builds on specific platforms?
| [Thursday 10 March 2011] [15:26:59] <mikko>	updated openpgm, removes the build duplication from zeromq side
| [Thursday 10 March 2011] [15:27:16] <pieterh>	so it uses the openpgm build directly, right
| [Thursday 10 March 2011] [15:27:20] <mikko>	the biggest benefit is that now it should be easier to upgrade openpgm in the future
| [Thursday 10 March 2011] [15:27:23] <mikko>	yes
| [Thursday 10 March 2011] [15:27:26] <mikko>	it invokes openpgm autotools build
| [Thursday 10 March 2011] [15:27:33] <mikko>	the 'old way' was a huge hack
| [Thursday 10 March 2011] [15:28:05] <pieterh>	this is wonderful
| [Thursday 10 March 2011] [15:28:15] <mikko>	also, there is a hidden feature
| [Thursday 10 March 2011] [15:28:26] <mikko>	it's not advertised much as its not well tested
| [Thursday 10 March 2011] [15:28:34] <mikko>	you can drop in new version of libpgm
| [Thursday 10 March 2011] [15:28:36] <mikko>	and do:
| [Thursday 10 March 2011] [15:28:47] <mikko>	./configure --with-pgm=libpgm-x.y.z
| [Thursday 10 March 2011] [15:29:00] <mikko>	it searches for libpgm-x.y.z.tar.gz in foreign/openpgm
| [Thursday 10 March 2011] [15:29:05] <pieterh>	ah, you mentioned that... sweet
| [Thursday 10 March 2011] [15:29:16] <mikko>	also, autotools builds on both packages paves way for including them in distros
| [Thursday 10 March 2011] [15:29:26] <mikko>	which would be ideal in longer run
| [Thursday 10 March 2011] [15:29:37] <mikko>	hopefully the new build doesn't break many things
| [Thursday 10 March 2011] [15:32:51] <pieterh>	mikko: I'll commit this to the 2.1 and push, then we can test it with the autobuild system...
| [Thursday 10 March 2011] [15:33:00] <mikko>	pieterh: yeah
| [Thursday 10 March 2011] [15:33:03] <mikko>	sounds good
| [Thursday 10 March 2011] [15:33:03] <pieterh>	done
| [Thursday 10 March 2011] [15:33:12] <pieterh>	excellent, lovely, amazing stuff!
| [Thursday 10 March 2011] [15:33:14] <mikko>	we can always revert if things break left right and center
| [Thursday 10 March 2011] [15:33:24] <pieterh>	nah, never back, always forwards!
| [Thursday 10 March 2011] [15:33:41] <pieterh>	after that we can prepare a patch to send to Sustrik upstream...
| [Thursday 10 March 2011] [15:35:43] <pieterh>	g'nite, my kids are destroying my TV, I need to intervene...
| [Thursday 10 March 2011] [15:37:26] <mikko>	nite!
| [Thursday 10 March 2011] [15:59:57] <Guthur>	pieterh, how many kids you got, if you don't mind me asking?
| [Thursday 10 March 2011] [16:30:02] <private_meta>	pieterh: I figured that, but zhelpers in c++ doesn't offer the functionality, so it's missing in all files up to now
| [Thursday 10 March 2011] [17:16:17] <guido_g>	good night all!
| [Thursday 10 March 2011] [17:17:37] <Guthur>	night guido_g 
| [Friday 11 March 2011] [01:38:17] <sena>	hi I have a bit of cleanup problem when using zeromq.
| [Friday 11 March 2011] [01:38:33] <sena>	i am using the c++ classes for coding
| [Friday 11 March 2011] [01:39:53] <sena>	when deleting the object windows gives an run time error which says that the application was shutdown in an unusual way
| [Friday 11 March 2011] [01:40:26] <sena>	before deleting the objects i am deleting the sockets and then contexts 
| [Friday 11 March 2011] [01:40:50] <phaplt>	i am newbee zmq
| [Friday 11 March 2011] [01:40:57] <sena>	the delete is fine but when trying to delete the encapsulating class the program gives the error
| [Friday 11 March 2011] [01:41:03] <sena>	any suggestions
| [Friday 11 March 2011] [01:41:03] <phaplt>	anybody help me tutorial
| [Friday 11 March 2011] [01:41:14] <sena>	The version is 2.1 rc2
| [Friday 11 March 2011] [01:41:28] <sena>	all the sockets are using ZMQ_PAIR
| [Friday 11 March 2011] [01:42:04] <sena>	this is all inter thread communication
| [Friday 11 March 2011] [01:53:43] <guido_g>	sena: try to give a minimal working code example and the complete error message, otherwise it's not possible to help you
| [Friday 11 March 2011] [01:54:38] <guido_g>	sena: put both on a paste-bin like https://gist.github.com/
| [Friday 11 March 2011] [03:35:05] <sena>	got the problem solved
| [Friday 11 March 2011] [03:49:20] <pieterh>	g'morning folks
| [Friday 11 March 2011] [03:51:44] <guido_g>	mornin
| [Friday 11 March 2011] [04:00:52] <pieterh>	hi guido_g!
| [Friday 11 March 2011] [04:05:13] <sena>	in PAIR socket pattern can one socket pair with many sockets
| [Friday 11 March 2011] [04:18:17] <Guthur>	sena: From the man: A socket of type ZMQ_PAIR can only be connected to a single peer at any one time. No message routing or filtering is performed on messages sent over a ZMQ_PAIR socket.
| [Friday 11 March 2011] [04:18:33] <Guthur>	http://api.zeromq.org/master:zmq-socket#toc15
| [Friday 11 March 2011] [04:23:18] <sena>	thanx for clarifying.
| [Friday 11 March 2011] [04:24:26] <Guthur>	you're welcome
| [Friday 11 March 2011] [04:49:12] <Guthur>	pieterh: Should the EINTR situation be documented?
| [Friday 11 March 2011] [04:49:25] <Guthur>	or is the mailing list message enough
| [Friday 11 March 2011] [04:49:27] <pieterh>	Guthur: certainly in the C# binding page...
| [Friday 11 March 2011] [04:49:47] <pieterh>	the mailing list message was clear
| [Friday 11 March 2011] [04:49:49] <Guthur>	yeah, it's not specific to C# and Mono though
| [Friday 11 March 2011] [04:49:54] <pieterh>	indeed...
| [Friday 11 March 2011] [04:50:08] <Guthur>	just more apparent due to the runtimes use of signals
| [Friday 11 March 2011] [04:50:18] <pieterh>	I'm still somewhat... surprised... that Linux poll() seems broken this way
| [Friday 11 March 2011] [04:50:40] <pieterh>	i.e. any user signaling at all will cause EINTR
| [Friday 11 March 2011] [04:51:06] <Guthur>	yeah, it's not nice
| [Friday 11 March 2011] [04:51:10] <pieterh>	there is perhaps a workaround
| [Friday 11 March 2011] [04:51:51] <pieterh>	there are two issues. first, trapping a real interrupt, i.e. SIGINT (Ctrl-C)
| [Friday 11 March 2011] [04:52:04] <pieterh>	second, continuing with the poll if it's not a real interrupt
| [Friday 11 March 2011] [04:52:19] <Guthur>	yep
| [Friday 11 March 2011] [04:52:36] <pieterh>	for the first, a normal signal handler will do it, I've an example in zhelpers.h, at the end
| [Friday 11 March 2011] [04:52:59] <pieterh>	for the second, the problem is calculating the time properly so the remaining poll is not longer than expected
| [Friday 11 March 2011] [04:53:15] <Guthur>	hehe, that was just on the tip of my tongue
| [Friday 11 March 2011] [04:53:21] <pieterh>	I believe there is an example of code that does this, since zmq_poll used to have the same issue of exiting randomly
| [Friday 11 March 2011] [04:53:30] <pieterh>	it's on the wiki somewhere, afair, let me check
| [Friday 11 March 2011] [04:53:52] <pieterh>	heh
| [Friday 11 March 2011] [04:53:52] <pieterh>	http://www.zeromq.org/topics:zmq-poll-workaround
| [Friday 11 March 2011] [04:55:25] <Guthur>	I could work that into clrzmq2 at the very least
| [Friday 11 March 2011] [04:56:12] <Guthur>	cheers for the suggestion pieterh 
| [Friday 11 March 2011] [04:56:30] <pieterh>	np :-)
| [Friday 11 March 2011] [04:56:42] <Guthur>	this has been a nice adventure, hehe
| [Friday 11 March 2011] [04:56:53] <Guthur>	it would be good to end it with some sort of solution
| [Friday 11 March 2011] [04:57:20] <pieterh>	it's great that we have the binding layer where we can fix up this kind of stuff
| [Friday 11 March 2011] [04:58:49] <Guthur>	yeah I'm happy doing that, my worst case scenario was having to leave it for the user to deal with
| [Friday 11 March 2011] [04:59:17] <Guthur>	would make app code necessarily complex imo 
| [Friday 11 March 2011] [05:13:23] <Guthur>	unnecessarily*
| [Friday 11 March 2011] [05:16:09] <guido_g>	unbelievable, c++ socket_t miss a close method
| [Friday 11 March 2011] [05:17:25] <guido_g>	so you can't close a socket in c++
| [Friday 11 March 2011] [05:20:37] <pieterh>	srsly? wow
| [Friday 11 March 2011] [05:21:01] <pieterh>	guido_g: can you provide a patch for that?
| [Friday 11 March 2011] [05:21:06] <guido_g>	on the way
| [Friday 11 March 2011] [05:21:12] <guido_g>	first issue
| [Friday 11 March 2011] [05:21:17] <guido_g>	then ranting
| [Friday 11 March 2011] [05:21:22] <guido_g>	then patch
| [Friday 11 March 2011] [05:21:24] <pieterh>	excellent :-) I'll make sure it gets into 2.1 stable
| [Friday 11 March 2011] [05:21:27] <guido_g>	stick to the process :)
| [Friday 11 March 2011] [05:21:43] <pieterh>	process is everything
| [Friday 11 March 2011] [05:21:54] <Guthur>	guido_g: I thought you were a python hack
| [Friday 11 March 2011] [05:22:06] <guido_g>	Guthur: sure
| [Friday 11 March 2011] [05:22:22] <guido_g>	re-learning c++ atm
| [Friday 11 March 2011] [05:23:04] <Guthur>	you have my utmost sympathies
| [Friday 11 March 2011] [05:24:14] <guido_g>	it's wanted in the industry, so i've close to no choice :/
| [Friday 11 March 2011] [05:24:42] <Guthur>	crumbs, which industry?
| [Friday 11 March 2011] [05:24:47] <Guthur>	broadcast?
| [Friday 11 March 2011] [05:24:58] <Guthur>	media*
| [Friday 11 March 2011] [05:27:50] <guido_g>	it consulting in generall, i'm only little conslutant ,)
| [Friday 11 March 2011] [05:28:59] <guido_g>	pieterh: will a simple pull req on zeromq2/master do?
| [Friday 11 March 2011] [05:29:13] <pieterh>	guido_g: nope, that's the one thing that won't work
| [Friday 11 March 2011] [05:29:22] <pieterh>	sustrik is not accepting pull requests
| [Friday 11 March 2011] [05:29:26] <pieterh>	(yet)
| [Friday 11 March 2011] [05:29:27] <guido_g>	*sigh*
| [Friday 11 March 2011] [05:29:57] <pieterh>	feel free to lobby him to do so, I've tried and failed (hi sustrik!)
| [Friday 11 March 2011] [05:30:15] <pieterh>	simplest is to send a signed patch to zeromq-dev
| [Friday 11 March 2011] [05:30:55] <guido_g>	forgot how to do this...
| [Friday 11 March 2011] [05:30:58] <pieterh>	then I can apply that to zeromq2-1/master (my git for 2.1 releases) and sustrik can do the same for zeromq2/master (source development git)
| [Friday 11 March 2011] [05:31:03] <pieterh>	easy
| [Friday 11 March 2011] [05:31:03] <guido_g>	so reading
| [Friday 11 March 2011] [05:31:30] <pieterh>	yeah, I don't keep it in memory cache either...
| [Friday 11 March 2011] [05:31:45] <pieterh>	i assume this fix can also go into 2.0 stable?
| [Friday 11 March 2011] [05:31:59] <guido_g>	yes, it's extremly small
| [Friday 11 March 2011] [05:32:04] <pieterh>	lovely lovely
| [Friday 11 March 2011] [05:32:53] <Guthur>	I'm sure there is benefits to going with the patch strategy
| [Friday 11 March 2011] [05:32:58] <pieterh>	not really
| [Friday 11 March 2011] [05:33:17] <pieterh>	it's better than nothing but it's weak compared to pull requests
| [Friday 11 March 2011] [05:33:24] 	 * guido_g is off reading git book
| [Friday 11 March 2011] [05:34:14] <pieterh>	when all our gits are on github there is really no excuse for NOT doing pull requests except "not familiar with it, won't use it, don't trust github". Sigh.
| [Friday 11 March 2011] [05:46:16] <guido_g>	hope that goes through
| [Friday 11 March 2011] [05:47:01] <guido_g>	https://gist.github.com/865705  <- for review
| [Friday 11 March 2011] [05:48:04] <pieterh>	guido_g: this affects just the C++ API?
| [Friday 11 March 2011] [05:48:13] <guido_g>	yes
| [Friday 11 March 2011] [05:48:23] <guido_g>	in zmq.hpp, nothing else
| [Friday 11 March 2011] [05:48:24] <pieterh>	you have a test case?
| [Friday 11 March 2011] [05:48:41] <guido_g>	you're joking?
| [Friday 11 March 2011] [05:48:57] <pieterh>	ok, my question is 'what's your confidence level that this patch is correct?'
| [Friday 11 March 2011] [05:49:01] <pieterh>	assume I don't know the code
| [Friday 11 March 2011] [05:50:42] <guido_g>	this is mostly stolen from the existing destructor code and a the error reporting of other methods.
| [Friday 11 March 2011] [05:51:08] <guido_g>	so, given that all the other mthods are tested well... *cough*
| [Friday 11 March 2011] [05:51:24] <guido_g>	i sure that the patch is ok
| [Friday 11 March 2011] [05:51:43] <guido_g>	btw, will use it myself in a few seconds :)
| [Friday 11 March 2011] [05:52:00] <pieterh>	ok, I don't want to be ungrateful, but since I'd like to put this into two stable version (2.0, 2.1), could you please confirm that it actually works by running a before/after test?
| [Friday 11 March 2011] [05:52:10] <pieterh>	*versions
| [Friday 11 March 2011] [05:52:31] <guido_g>	i'm on my to compile w/ and test w/ the patch
| [Friday 11 March 2011] [05:52:38] <guido_g>	just a few seconds...
| [Friday 11 March 2011] [05:52:42] <pieterh>	ack
| [Friday 11 March 2011] [05:53:03] <guido_g>	oh
| [Friday 11 March 2011] [05:53:12] <guido_g>	this is master...
| [Friday 11 March 2011] [05:53:32] <guido_g>	are thre known issues?
| [Friday 11 March 2011] [05:55:30] <pieterh>	what do you mean?
| [Friday 11 March 2011] [05:56:06] <guido_g>	i'm using zeromq2-1 as development env
| [Friday 11 March 2011] [05:56:17] <guido_g>	normally
| [Friday 11 March 2011] [05:56:59] <pieterh>	sure
| [Friday 11 March 2011] [05:57:15] <pieterh>	I've already pushed your patch to the 2-1 master, at https://github.com/zeromq/zeromq2-1
| [Friday 11 March 2011] [05:58:52] <guido_g>	ok, the close works
| [Friday 11 March 2011] [05:58:55] <guido_g>	but...
| [Friday 11 March 2011] [05:59:30] <guido_g>	the destructor doesn't like it.
| [Friday 11 March 2011] [05:59:35] <guido_g>	next patch
| [Friday 11 March 2011] [05:59:50] <pieterh>	bah, pull requests only work between forks of the same repository... :-/
| [Friday 11 March 2011] [06:00:53] <pieterh>	cumulative patches, guido_g, or one clean one with all changes?
| [Friday 11 March 2011] [06:01:02] <pieterh>	I'll go undo that last patch then
| [Friday 11 March 2011] [06:01:14] <guido_g>	no
| [Friday 11 March 2011] [06:01:19] <lestrrat>	you don't really need a pullreq to do inter-repo merges.
| [Friday 11 March 2011] [06:01:21] <lestrrat>	in git.
| [Friday 11 March 2011] [06:01:22] <guido_g>	i'll send an addition
| [Friday 11 March 2011] [06:01:30] <guido_g>	+inal one
| [Friday 11 March 2011] [06:01:48] <pieterh>	lestrrat: I've used fetching + cherry-picking
| [Friday 11 March 2011] [06:01:52] <pieterh>	is that what you mean?
| [Friday 11 March 2011] [06:02:07] <pieterh>	guido_g: you'll want to submit a single clean patch to the list
| [Friday 11 March 2011] [06:02:18] <pieterh>	for me, fine to patch the patch
| [Friday 11 March 2011] [06:03:00] <lestrrat>	so if guido wants to you to pull what he's got, 1) guido fetch+merge from main repo master, 2) perterh fetches and merges from guido's repo
| [Friday 11 March 2011] [06:03:12] <lestrrat>	this is by far the cleanest way to merge stuff 
| [Friday 11 March 2011] [06:03:34] <lestrrat>	cherry-picking is great if you have a really complex patch application, but generally you just want to merge
| [Friday 11 March 2011] [06:03:49] <lestrrat>	just make sure merging to the mainline is done cleanly
| [Friday 11 March 2011] [06:03:54] <lestrrat>	(i.e., fast-forward only)
| [Friday 11 March 2011] [06:04:15] <pieterh>	lestrrat: hang on, you overloaded my git jargon buffer... :-)
| [Friday 11 March 2011] [06:04:18] <guido_g>	ok
| [Friday 11 March 2011] [06:04:33] <guido_g>	unfortunately i send the first one to the list
| [Friday 11 March 2011] [06:04:36] <pieterh>	guido_g: let's try what lestrrat is describing here...
| [Friday 11 March 2011] [06:04:36] <guido_g>	*sent
| [Friday 11 March 2011] [06:04:43] <pieterh>	guido_g: just email again to cancel it...
| [Friday 11 March 2011] [06:05:12] <pieterh>	lestrrat: can you please walk us through this with actual git commands? Afterwards I'll document it, useful stuff
| [Friday 11 March 2011] [06:05:23] <Guthur>	pieterh: does patches not become more trackable
| [Friday 11 March 2011] [06:05:33] <lestrrat>	sure, but let me rephrase what I was saying
| [Friday 11 March 2011] [06:05:37] <Guthur>	making it easier to review and possibly back out
| [Friday 11 March 2011] [06:05:42] <pieterh>	Guthur: on an email list? up to a point, yes
| [Friday 11 March 2011] [06:06:01] <lestrrat>	you basically don't want to make conflicts in master. you want the cleanest possible git merge, which is "fast-forward"
| [Friday 11 March 2011] [06:06:12] <pieterh>	ok
| [Friday 11 March 2011] [06:06:30] <lestrrat>	to do this, the merge target ( guido's ) need to be aligned with the mater's history
| [Friday 11 March 2011] [06:06:48] <lestrrat>	that can only be done by hand -- and guido needs to do this by pulling from master
| [Friday 11 March 2011] [06:07:38] <pieterh>	lestrrat: hang on, let me explain the context a little
| [Friday 11 March 2011] [06:07:44] <lestrrat>	sure
| [Friday 11 March 2011] [06:08:06] <pieterh>	we have three gits, a 2-2 master, a 2-1 master, and a fork of the 2-1 master which guido_g is working on
| [Friday 11 March 2011] [06:08:30] <guido_g>	going to make a clean patch now
| [Friday 11 March 2011] [06:08:35] <pieterh>	we want to get changes from guido_g's git into the two other gits
| [Friday 11 March 2011] [06:09:07] <pieterh>	the 2-2 master and 2-1 master have diverged some time ago
| [Friday 11 March 2011] [06:09:14] <lestrrat>	k
| [Friday 11 March 2011] [06:09:24] <pieterh>	2-1 cherry-picks specific commits from 2-2, over time
| [Friday 11 March 2011] [06:09:36] <pieterh>	we also have a 2-0 master
| [Friday 11 March 2011] [06:09:40] <pieterh>	:-) that's our arrangement
| [Friday 11 March 2011] [06:09:56] <pieterh>	we're now looking for a simple process everyone can use
| [Friday 11 March 2011] [06:10:23] <lestrrat>	between 2-2 and 2-1 ,  you'd need to cherry-pick
| [Friday 11 March 2011] [06:10:29] <pieterh>	right
| [Friday 11 March 2011] [06:10:37] <lestrrat>	between 2-1 and guido_g, you shouldn't
| [Friday 11 March 2011] [06:10:48] <pieterh>	we'd have made 2-1 and 2-0 *forks* except github doesn't allow that within one username
| [Friday 11 March 2011] [06:11:14] <pieterh>	ok, so guido_g first pulls from 2-1 master, makes sure his history is correct
| [Friday 11 March 2011] [06:11:19] <lestrrat>	well
| [Friday 11 March 2011] [06:11:26] <lestrrat>	forking doesn't change anything in this context
| [Friday 11 March 2011] [06:11:29] <pieterh>	ok'
| [Friday 11 March 2011] [06:12:03] <lestrrat>	if you want to merge 2-1 and 2-0 (or whatever else), all you really need to do is to let your local git repo know about these repos
| [Friday 11 March 2011] [06:12:08] <lestrrat>	using "git remote"
| [Friday 11 March 2011] [06:12:18] <lestrrat>	and then, git merge would just allow you to merge these.
| [Friday 11 March 2011] [06:12:24] <lestrrat>	(no pullreqs required)
| [Friday 11 March 2011] [06:12:30] <pieterh>	right
| [Friday 11 March 2011] [06:12:43] <lestrrat>	you merge, tweak, and then "git push 2-1 mybranch" or whatever.
| [Friday 11 March 2011] [06:13:02] <pieterh>	the advantage of pullreqs is that they are like issues, trackable, discussion, etc.
| [Friday 11 March 2011] [06:13:39] <lestrrat>	yeah, that's understood, but if somebody wants to make changes to 2-1 and 2-0, you just going to have to
| [Friday 11 March 2011] [06:14:11] <lestrrat>	1) fork 2-1 2) make changes and send pullreq to 2-1 3) do the above git remove dance, and merge stuff to 2-0 3) push to github 2-0
| [Friday 11 March 2011] [06:14:39] <pieterh>	yeah, and forking isn't an option, so pull reqs are basically out
| [Friday 11 March 2011] [06:15:07] <pieterh>	ok, fast-forward merging, makes sense
| [Friday 11 March 2011] [06:15:19] <pieterh>	thanks, I'll do my reading and make sure I understand that
| [Friday 11 March 2011] [06:15:39] <Guthur>	we have just had the craziest enquiry from one of our clients, a rather large internet based firm, their legal team fears that because of the OCaml and Ruby code generators in the Thrift library their code maybe infected by GPL
| [Friday 11 March 2011] [06:15:51] <Guthur>	we don't even use these code generators, doh
| [Friday 11 March 2011] [06:15:58] <Guthur>	I think they need a new legal team
| [Friday 11 March 2011] [06:16:30] <lestrrat>	on a different project with about 10 devs, they just follow that rule: "all merges to master MUST be fast-forwards (to make sure they apply cleanly)" "Otherwise, create your own branch and do whatever you want to do. When you're done, let us know the name of the branch so we can merge to master"
| [Friday 11 March 2011] [06:17:42] <pieterh>	guido_g: ok, waiting for your new patch
| [Friday 11 March 2011] [06:18:30] <lestrrat>	well, good luck with the merges :)
| [Friday 11 March 2011] [06:18:40] <pieterh>	:-) thanks
| [Friday 11 March 2011] [06:18:49] 	 * lestrrat goes back to dealing with the quake aftershocks 
| [Friday 11 March 2011] [06:19:10] <pieterh>	lestrrat: good luck, I hope things aren't too bad
| [Friday 11 March 2011] [06:19:50] <lestrrat>	things around my home is sane enough that I can blab about git merges :) but thanks anyways
| [Friday 11 March 2011] [06:23:36] <guido_g>	https://gist.github.com/865763 < -the new and better tested one
| [Friday 11 March 2011] [06:24:59] <pieterh>	"tested", that has a nice ring about it
| [Friday 11 March 2011] [06:25:12] <pieterh>	guido_g: ok, thanks, applying that now to 2-0 and 2-1
| [Friday 11 March 2011] [06:25:39] <guido_g>	tested means compiled and used in a program w/o problems
| [Friday 11 March 2011] [06:28:02] <guido_g>	and now for the ml again
| [Friday 11 March 2011] [06:30:07] <pieterh>	ok, applied to 2-0 and 2-1
| [Friday 11 March 2011] [06:30:26] <guido_g>	and sent to the ml
| [Friday 11 March 2011] [06:30:49] <guido_g>	i should really become more patient
| [Friday 11 March 2011] [06:31:40] <pieterh>	nah, we release maintainers just have to make sure to ask the right questions
| [Friday 11 March 2011] [06:33:18] <guido_g>	btw, why did you disable multicast loop in 2.1?
| [Friday 11 March 2011] [06:33:41] <pieterh>	Steve-o's contribution
| [Friday 11 March 2011] [06:35:08] <guido_g>	should be mentioned at a prominent place in the release notes, because it will break single-box testing
| [Friday 11 March 2011] [06:35:39] <pieterh>	there was iirc some discussion of this on the list, let me check...
| [Friday 11 March 2011] [06:38:57] <pieterh>	there is some discussion about a week ago but tbh I'm not following it totally
| [Friday 11 March 2011] [06:39:00] <guido_g>	yes, but everyone is reading the ml or remembers all topics going on there
| [Friday 11 March 2011] [06:39:08] <guido_g>	*but *not*
| [Friday 11 March 2011] [06:39:24] <pieterh>	yes, I meant just for us, now, to understand this
| [Friday 11 March 2011] [06:39:43] <pieterh>	afaics Steve says multicast loop doesn't work on Linux and lo is lossy
| [Friday 11 March 2011] [06:40:40] <guido_g>	going to read the patch...
| [Friday 11 March 2011] [06:44:53] <guido_g>	seems like the socket optoin for multicast loopback is turned off, nothing to w/ the lo interface
| [Friday 11 March 2011] [06:45:14] <pieterh>	I'd suggest asking Steve, on the ml, where he posted the patch, what the rationale is
| [Friday 11 March 2011] [06:46:55] <guido_g>	ok
| [Friday 11 March 2011] [06:51:20] <guido_g>	time for a break (http://2.bp.blogspot.com/_ELzM_S573r8/SJthznx2u3I/AAAAAAAAGgU/dqPtF2Xr718/s400/computer-pause.jpg)
| [Friday 11 March 2011] [06:51:46] <pieterh>	:-)
| [Friday 11 March 2011] [07:12:52] <Eruquen>	Just one quick question: "When sending messages a ZMQ_XREP socket shall remove the first part of the message [..]". Is that my job or is it what XREP does automatically?
| [Friday 11 March 2011] [07:14:04] <pieterh>	Eruquen: this is how the XREP / ROUTER socket works, read Ch3 of the guide for extensive explanation
| [Friday 11 March 2011] [07:14:24] <pieterh>	the socket gives you an extra frame on recv and expects an extra frame on send
| [Friday 11 March 2011] [07:14:38] <pieterh>	that frame has the identity of the sender, and the recipient, respectively
| [Friday 11 March 2011] [07:15:13] <Eruquen>	great, thank you.. I think that was the only piece of the puzzle I was missing
| [Friday 11 March 2011] [08:10:00] <guido_g>	re
| [Friday 11 March 2011] [11:08:44] <Guthur>	has anyone ever looked at using ZeroMQ as the transport for Thrift RPC stuff?
| [Friday 11 March 2011] [11:19:02] 	 * guido_g is looking at http://msgpack.org/
| [Friday 11 March 2011] [11:33:06] <Guthur>	guido_g: It was more the RPC stuff
| [Friday 11 March 2011] [11:33:29] <Guthur>	Thrift seems to have succumb to the we will do everything project syndrome
| [Friday 11 March 2011] [11:34:12] <Guthur>	It even offers transport and server solutions
| [Friday 11 March 2011] [11:34:57] <Guthur>	guido_g: sorry I should have read closer
| [Friday 11 March 2011] [11:35:02] <Guthur>	it does RPC
| [Friday 11 March 2011] [11:35:07] <Guthur>	msgpack
| [Friday 11 March 2011] [11:35:16] <guido_g>	i know :)
| [Friday 11 March 2011] [11:35:38] <guido_g>	and can read thrift idl
| [Friday 11 March 2011] [11:35:46] <guido_g>	at least they claim that it can
| [Friday 11 March 2011] [11:54:50] <guido_g>	at least, it compiles :)
| [Friday 11 March 2011] [12:08:40] <Guthur>	guido_g: is there more marketing than substance
| [Friday 11 March 2011] [12:08:51] <jobytaffey>	Hi, I'm having a problem with zeromq-2.1.0. I have a program in C, using libev to have one ZMQ REP socket and stdin. I'm compiling against libefence for malloc checking and I'm getting ocassional crashes. But, when I remove libefence I can't reproduce the problem. Could it be a problem with efence's malloc wrappers not being thread safe? Or a 0mq bug? http://pastebin.com/cLdQ8Fms
| [Friday 11 March 2011] [12:09:03] <guido_g>	Guthur: yes, it's all a little shallow
| [Friday 11 March 2011] [12:09:05] <Guthur>	the 4x faster than protocol buffers seems hard to believe
| [Friday 11 March 2011] [12:09:28] <Guthur>	in all but the most contrived test
| [Friday 11 March 2011] [12:11:06] <guido_g>	otoh, i like the dynamic typing feature
| [Friday 11 March 2011] [12:17:34] <pieterh>	jobytaffey: could well be a problem with efence, yes
| [Friday 11 March 2011] [12:17:48] <pieterh>	I'd suggest valgrind instead
| [Friday 11 March 2011] [12:18:34] <jobytaffey>	Thanks, I'll try it.
| [Friday 11 March 2011] [12:23:40] <pieterh>	jobytaffey: http://zguide.zeromq.org/page:all#toc31
| [Friday 11 March 2011] [12:24:17] <pieterh>	all, I've rewritten the contribution tutorial, it was a bit messy
| [Friday 11 March 2011] [12:24:38] <jobytaffey>	Thanks again.
| [Friday 11 March 2011] [12:24:45] <pieterh>	np
| [Friday 11 March 2011] [12:41:40] <cremes>	can someone put the link to the 0mq irc logs up in the channel topic please?
| [Friday 11 March 2011] [12:41:48] <cremes>	i always forget what it is...
| [Friday 11 March 2011] [12:43:32] <pieterh>	cremes: it's travlr who keeps it, afair, perhaps the link should go on this page http://www.zeromq.org/chatroom
| [Friday 11 March 2011] [12:43:46] <pieterh>	we don't seem to have a channel admin
| [Friday 11 March 2011] [12:44:59] <cremes>	indeed, you are correct
| [Friday 11 March 2011] [12:45:11] <cremes>	i'll add a link to travlr's github page to the wiki
| [Friday 11 March 2011] [12:48:01] <cremes>	oh, it's already there
| [Friday 11 March 2011] [12:48:07] <pieterh>	:-)
| [Friday 11 March 2011] [12:48:08] <cremes>	i'll make it more prominent
| [Friday 11 March 2011] [12:48:37] <pieterh>	I didn't even see it...
| [Friday 11 March 2011] [12:49:03] <cremes>	refresh and look
| [Friday 11 March 2011] [12:49:16] <cremes>	it's slightly easier to find
| [Friday 11 March 2011] [12:50:39] <pieterh>	still seems very bland, let me try...
| [Friday 11 March 2011] [12:52:05] <pieterh>	try now, cremes
| [Friday 11 March 2011] [12:52:24] <cremes>	ooh, even better
| [Friday 11 March 2011] [12:53:35] <pieterh>	someday a student of technology history will read these logs and gaze in wonder...
| [Friday 11 March 2011] [12:53:46] <pieterh>	"how did they actually *do* anything, with all that inane chatter...?"
| [Friday 11 March 2011] [12:55:17] <michelp>	now that I know they exist i'll be reading them myself ;)
| [Friday 11 March 2011] [12:55:56] <cremes>	s/inane/insane/
| [Friday 11 March 2011] [12:56:03] <michelp>	BTW freenode policy asks that you inform all channel users of logging in a topic or autojoin notice of some kind.
| [Friday 11 March 2011] [12:56:05] <cremes>	though both fit
| [Friday 11 March 2011] [12:56:16] <pieterh>	cremes: you take insane, I'm better with inane
| [Friday 11 March 2011] [12:56:37] <pieterh>	michelp: true, but we seem to have lost our channel admin somewhere in 2009
| [Friday 11 March 2011] [12:57:38] <pieterh>	michelp: I guess stating this on the IRC page on the wiki is almost good enough
| [Friday 11 March 2011] [12:57:48] <michelp>	ah i see.  i bet there are some freenode peoples who can help you with that
| [Friday 11 March 2011] [12:58:00] <michelp>	yeah, as long as you say it somewhere it's better than nowhere ;)
| [Friday 11 March 2011] [12:58:52] <michelp>	is the topic locked down? in other channels I am in anyone can change it
| [Friday 11 March 2011] [12:59:04] <michelp>	yeah :(
| [Friday 11 March 2011] [12:59:44] <pieterh>	op
| [Friday 11 March 2011] [12:59:58] <pieterh>	nope, that didn't work :-)
| [Friday 11 March 2011] [13:00:18] <michelp>	i'll ask in #freenode
| [Friday 11 March 2011] [13:00:30] <michelp>	i bet we can either get the topic unlocked or get someone op'ed
| [Friday 11 March 2011] [13:00:34] <michelp>	or both ;)
| [Friday 11 March 2011] [13:01:55] <pieterh>	unlocked would be simplest, we don't need an op otherwise
| [Friday 11 March 2011] [13:04:55] <michelp>	well there's no staff currently in #freenode, i'll try again in a bit
| [Friday 11 March 2011] [13:05:03] <pieterh>	yeah, no hurry
| [Friday 11 March 2011] [13:05:23] <pieterh>	actually I wanted the topic to say, "Have you read the Guide yet?"
| [Friday 11 March 2011] [13:06:01] <michelp>	i've been reading through the docs myself the past couple of days, 0mq is pretty fascinating
| [Friday 11 March 2011] [13:06:10] <michelp>	that's why i jumped in here was to see what was going on
| [Friday 11 March 2011] [13:06:23] <pieterh>	it's pretty fascinating, indeed... :-)
| [Friday 11 March 2011] [13:06:33] <pieterh>	have you read the Guide yet?
| [Friday 11 March 2011] [13:07:24] <michelp>	we use amqp currently where i work and personally I'm pretty unhappy with it
| [Friday 11 March 2011] [13:07:46] <pieterh>	amqp/0-9-1?
| [Friday 11 March 2011] [13:07:47] <michelp>	skimmed it, i've started with the docs comparing amqp to 0mq mostly to try and get my head around it
| [Friday 11 March 2011] [13:09:33] <michelp>	i'm not sure which protocol version, we use rabbitmq.  i didn't build  that part of the system, i just inject messages into it and pray they get somewhere
| [Friday 11 March 2011] [13:09:48] <pieterh>	0-9-1, then
| [Friday 11 March 2011] [13:09:53] <michelp>	i may end up writing the bit that replaces it ;)
| [Friday 11 March 2011] [13:10:52] <pieterh>	it's a good implementation but the protocol is clunkier than it should be
| [Friday 11 March 2011] [13:11:26] <michelp>	are there centralized brokers written on top of 0mq?  the docs say that it can be done as one of the many possible patterns but some digging around i didn't find any.  preferably one written in python which is our primary shop language
| [Friday 11 March 2011] [13:11:40] <michelp>	i didn't dig to hard or necessarily in the right direction
| [Friday 11 March 2011] [13:12:11] <pieterh>	so... in fact we only recently finished our first protocol spec able to turn into real brokers and clients
| [Friday 11 March 2011] [13:12:34] <pieterh>	http://rfc.zeromq.org/spec:7
| [Friday 11 March 2011] [13:13:03] <pieterh>	there is a small implementation in C, and one in Python by guido_g
| [Friday 11 March 2011] [13:13:03] <michelp>	ah nice
| [Friday 11 March 2011] [13:13:30] <michelp>	i'll check that out
| [Friday 11 March 2011] [13:13:50] <pieterh>	depending on the kind of messaging you're doing, you may want brokers (of various types), or not
| [Friday 11 March 2011] [13:14:08] <michelp>	we might be able to give it some production time, we have been kicking around the idea of having a "shadow" message system that runs alongside rabbit so we can evaluate other technologies
| [Friday 11 March 2011] [13:14:28] <michelp>	we push a few hundred thousand message through per day so it would be a good medium-scale test
| [Friday 11 March 2011] [13:14:29] <pieterh>	0MQ architects end up making their own mini brokers, highly customized, for the places that need them
| [Friday 11 March 2011] [13:14:53] <pieterh>	this is what 0MQ is really for, a toolkit to make the architectures you need
| [Friday 11 March 2011] [13:15:03] <pieterh>	reliable messages?
| [Friday 11 March 2011] [13:15:27] <michelp>	reliable in the sense that they can't be dropped?
| [Friday 11 March 2011] [13:15:39] <pieterh>	have to survive crashes etc.
| [Friday 11 March 2011] [13:15:46] <michelp>	yeah, they are critical to our business flows
| [Friday 11 March 2011] [13:15:57] <michelp>	lots of our backend is async
| [Friday 11 March 2011] [13:16:00] <pieterh>	so, read the Guide and especially Ch4
| [Friday 11 March 2011] [13:16:18] <michelp>	awesome, thanks for the pointers, i'll check them out this weekend
| [Friday 11 March 2011] [13:16:41] <pieterh>	np
| [Friday 11 March 2011] [13:17:04] <michelp>	i'm sure i'll have some questions so hopefully i don't annoy you too much until it all sinks in my head
| [Friday 11 March 2011] [13:17:55] <kdj>	I've found the examples in the guide really helpful
| [Friday 11 March 2011] [13:18:10] <pieterh>	ideally, read the Guide slowly over a week, try every example, and it'll become clear
| [Friday 11 March 2011] [13:18:36] <pieterh>	kdj: thanks :-)
| [Friday 11 March 2011] [13:26:18] <michelp>	kdj, oh hey Kyle ;)  not at pycon?
| [Friday 11 March 2011] [13:26:37] <kdj>	Heh, I wish
| [Friday 11 March 2011] [13:26:50] <kdj>	Are you there?
| [Friday 11 March 2011] [13:26:54] <michelp>	kdj, not that I've seen you in here I'm going to have to bug you about giving a 0mq talk at the next pdxpython meetings
| [Friday 11 March 2011] [13:27:34] <michelp>	nah... i've been to enough pycons.  i always end up just hanging out with jaded zope programmers from the good old days and drinking too much whiskey
| [Friday 11 March 2011] [13:27:46] <kdj>	pieterh: Thanks for putting together the guide. :)
| [Friday 11 March 2011] [13:27:52] <kdj>	michelp: Haha
| [Friday 11 March 2011] [13:28:07] <pieterh>	kdj: my pleasure, this will hopefully become a printed book
| [Friday 11 March 2011] [13:28:13] <michelp>	kdj, what do you guys use 0mq for?
| [Friday 11 March 2011] [13:29:29] <kdj>	michelp: A couple pretty simple work broker and task status implementations
| [Friday 11 March 2011] [13:30:09] <michelp>	using python?
| [Friday 11 March 2011] [13:30:54] <kdj>	Python and C#
| [Friday 11 March 2011] [13:31:16] <michelp>	how long did you think you could get away with not giving a presentation at pdxpython on that? ;)
| [Friday 11 March 2011] [13:32:36] <kdj>	Long enough to actually have something worth presenting. :)
| [Friday 11 March 2011] [13:32:56] <pieterh>	Ian Barber raised the 0MQ presentation stakes somewhat
| [Friday 11 March 2011] [13:33:41] <michelp>	is there a video?
| [Friday 11 March 2011] [13:34:49] <michelp>	looks like he's talking at pycon
| [Friday 11 March 2011] [13:35:31] <kdj>	Here are some slides, it looks like? http://www.slideshare.net/IanBarber/zeromq-is-the-answer
| [Friday 11 March 2011] [13:36:17] <michelp>	ah zed is talking too
| [Friday 11 March 2011] [13:36:21] <michelp>	http://us.pycon.org/2011/schedule/presentations/98/
| [Friday 11 March 2011] [13:37:49] <kdj>	Nice
| [Friday 11 March 2011] [13:38:08] <michelp>	now i kinda want to go to pycon just to see that one talk ;)
| [Friday 11 March 2011] [13:40:04] <kdj>	Gah. Yes. How long does it usually take for them to get the videos up? :)
| [Friday 11 March 2011] [13:40:27] <michelp>	days, weeks, never
| [Friday 11 March 2011] [13:40:50] <kdj>	Never is a long time. 
| [Friday 11 March 2011] [13:41:41] <kdj>	I hope those presentations happen to get put up
| [Friday 11 March 2011] [13:51:34] <michelp>	so it looks like dermoth sustrik and mato are channel admins
| [Friday 11 March 2011] [13:51:50] <michelp>	according to chanserv
| [Friday 11 March 2011] [13:53:05] <michelp>	so if dermoth|home can op someone else we can get the channel topic unlocked
| [Friday 11 March 2011] [14:00:54] <michelp>	pieterh, so a freenode staffer said if you follow this process they can help unlock the channel http://freenode.net/group_registration.shtml
| [Friday 11 March 2011] [14:01:32] <michelp>	the process is verified by phone, apparently
| [Friday 11 March 2011] [14:01:37] <pieterh>	ok, will take care of it
| [Friday 11 March 2011] [14:01:49] <michelp>	here is a blog post about it http://freenode.net/group_registration.shtml
| [Friday 11 March 2011] [14:01:51] <michelp>	oops
| [Friday 11 March 2011] [14:01:54] <michelp>	http://blog.freenode.net/2010/06/group-registration-form-verifications/
| [Friday 11 March 2011] [14:03:24] <michelp>	the staffer wants me to tell him when it's sent, i can do that or you can contact him directly
| [Friday 11 March 2011] [14:05:03] <michelp>	pieterh, his nick is 'niko' and he says you can contact him directly when it's filed
| [Friday 11 March 2011] [14:05:13] <pieterh>	ok, will do...
| [Friday 11 March 2011] [14:05:27] <pieterh>	thanks a lot michelp
| [Friday 11 March 2011] [14:05:31] <michelp>	yeah no sweat
| [Friday 11 March 2011] [14:05:42] <michelp>	it's the least I can do until i crank out some 0mq using code :)
| [Friday 11 March 2011] [14:07:59] <pieterh>	I'm randomly electing myself "Chair" of the 0MQ community so I can tell them what my role is here
| [Friday 11 March 2011] [14:08:44] <pieterh>	Anyone wants to fight me for chair, please wait until the music stops
| [Friday 11 March 2011] [14:09:10] <pieterh>	michelp: form is submitted, why not ping niko, he'll be happy to hear from you
| [Friday 11 March 2011] [14:09:39] 	 * pieterh has no idea how to send a direct message to someone, in fact :-)
| [Friday 11 March 2011] [14:09:49] <michelp>	sure thing
| [Friday 11 March 2011] [14:10:18] <michelp>	for future reference the syntax for a private message is "/msg <nick> blah blah blah..."
| [Friday 11 March 2011] [14:10:34] <pieterh>	I'm so happy in my ignorance...
| [Friday 11 March 2011] [14:10:58] <michelp>	irc is the original distributed message system ;)
| [Friday 11 March 2011] [14:11:18] <pieterh>	indeed
| [Friday 11 March 2011] [14:15:57] <guido_g>	pieterh: is it ok to call all the message frames between empty frames a message segment?
| [Friday 11 March 2011] [14:16:32] <pieterh>	'segment' has no defined meaning, nor do two empty frames have any semantics that I'm aware of
| [Friday 11 March 2011] [14:16:44] <pieterh>	I tend to stick to "envelope" vs. "body"
| [Friday 11 March 2011] [14:17:00] <pieterh>	what's the context?
| [Friday 11 March 2011] [14:17:01] <guido_g>	but we make heavy use of empty frame separated multipart messages
| [Friday 11 March 2011] [14:17:21] <guido_g>	a multipart message class
| [Friday 11 March 2011] [14:17:25] <pieterh>	'we' is your project, right?
| [Friday 11 March 2011] [14:17:37] <pieterh>	then 'segment' seems fine
| [Friday 11 March 2011] [14:17:58] <guido_g>	we as in mdp protocol
| [Friday 11 March 2011] [14:18:04] <guido_g>	ok
| [Friday 11 March 2011] [14:18:11] <pieterh>	ah, hang on, nope in that case
| [Friday 11 March 2011] [14:18:22] <guido_g>	huh?
| [Friday 11 March 2011] [14:18:46] <pieterh>	we don't, in MDP, give any special meaning to bunches of frames separated by empty frames
| [Friday 11 March 2011] [14:18:47] <pieterh>	do we?
| [Friday 11 March 2011] [14:19:16] <pieterh>	if you add such meaning in your implementation, it can break arbitrarily when we modify the protocol
| [Friday 11 March 2011] [14:19:30] <guido_g>	it's not about the meaning, it's just for the fact that there are logical groupings of frames
| [Friday 11 March 2011] [14:19:45] <pieterh>	the only two cases I see are in REQUEST and REPLY
| [Friday 11 March 2011] [14:19:52] <guido_g>	in mdp, yes
| [Friday 11 March 2011] [14:20:11] <guido_g>	but i'm on a general multipart message class
| [Friday 11 March 2011] [14:20:13] <pieterh>	and there, the first empty part is... meaning free
| [Friday 11 March 2011] [14:20:27] <pieterh>	in MDP what we have are 'envelope' and 'body'
| [Friday 11 March 2011] [14:20:40] <guido_g>	so i came up with the idea of having a method that helps on getting these groups
| [Friday 11 March 2011] [14:20:56] <pieterh>	personally I'd not invent concepts that don't come from actual use
| [Friday 11 March 2011] [14:21:08] <pieterh>	weird semantics that don't quite work
| [Friday 11 March 2011] [14:21:20] <guido_g>	can't follow you
| [Friday 11 March 2011] [14:21:54] <pieterh>	well, in all the examples I've made so far, this notion of groups of frames doesn't occur once
| [Friday 11 March 2011] [14:22:06] <pieterh>	we use frames in MDP because we're too lazy to do encoding
| [Friday 11 March 2011] [14:22:23] <pieterh>	the real semantics, the meaning, in MDP is a stack
| [Friday 11 March 2011] [14:22:34] <pieterh>	the body is the last set of frames
| [Friday 11 March 2011] [14:22:42] <pieterh>	the envelope comes before that
| [Friday 11 March 2011] [14:22:50] <pieterh>	both may contain empty frames
| [Friday 11 March 2011] [14:23:15] <pieterh>	0MQ REP socket has a similar notion, of envelope ending in empty frame, followed by body
| [Friday 11 March 2011] [14:23:23] <pieterh>	a stack
| [Friday 11 March 2011] [14:23:31] <pieterh>	do I make sense?
| [Friday 11 March 2011] [14:24:11] <guido_g>	nevertheless an empty frame is a very easy and already implemented method of doing this logical grouping
| [Friday 11 March 2011] [14:24:38] <pieterh>	two problems
| [Friday 11 March 2011] [14:25:03] <pieterh>	a. "groups of frames" is not a concept I've seen actually used or useful
| [Friday 11 March 2011] [14:25:14] <Bloudermilk>	Hi all. I was hoping someone could voice their opinion/experience on using 0mq with media streaming. My initial estimate is that it adds significant overhead, but I'm not sure
| [Friday 11 March 2011] [14:25:20] <pieterh>	b. when you could claim "groups" in real cases, they can contain empty frames
| [Friday 11 March 2011] [14:25:39] <pieterh>	Bloudermilk: why would it add overhead? Compared to what?
| [Friday 11 March 2011] [14:25:54] <cremes>	Bloudermilk: i'm using it for disseminating market data which needs low latency and low overhead
| [Friday 11 March 2011] [14:25:56] <Bloudermilk>	pieterh: Comapred to vanilla TCP
| [Friday 11 March 2011] [14:25:59] <cremes>	i wouldn't have chosen 0mq otherwise
| [Friday 11 March 2011] [14:26:24] <pieterh>	Bloudermilk: ... what is your estimate based on?
| [Friday 11 March 2011] [14:26:34] <pieterh>	and how do you define "significant"?
| [Friday 11 March 2011] [14:26:49] <Bloudermilk>	pieterh: Absolutely nothing :) That's why I wanted to ask
| [Friday 11 March 2011] [14:27:24] <Bloudermilk>	pieterh: I'd define significant as a subjective point where the performance overhead  outweighs the convenience
| [Friday 11 March 2011] [14:27:27] <pieterh>	ok, no, it does not add significant, or even moderate overhead
| [Friday 11 March 2011] [14:27:35] <pieterh>	not even small overhead
| [Friday 11 March 2011] [14:27:43] <Bloudermilk>	That's great news!
| [Friday 11 March 2011] [14:27:48] <pieterh>	something between "tiny" and "insignificant", I'd say
| [Friday 11 March 2011] [14:27:52] <Bloudermilk>	Haha
| [Friday 11 March 2011] [14:28:00] <pieterh>	it is easy to measure with running code, and you should try
| [Friday 11 March 2011] [14:28:43] <pieterh>	guido_g: go for it, it could work, my initial feeling is it's not a natural 'pattern' for using multipart messages but it could be within some applications
| [Friday 11 March 2011] [14:28:56] <guido_g>	ok
| [Friday 11 March 2011] [14:29:11] <pieterh>	just don't come back and ask me to make MDP work better with 'segments' :-)
| [Friday 11 March 2011] [14:29:22] <guido_g>	nope
| [Friday 11 March 2011] [14:29:27] <guido_g>	its working fine
| [Friday 11 March 2011] [14:29:39] <guido_g>	using it to test my c++ ioloop :)
| [Friday 11 March 2011] [14:29:45] <pieterh>	nice...
| [Friday 11 March 2011] [14:30:04] <pieterh>	do announce your implementation on zeromq-dev and the Labs page so people know about it
| [Friday 11 March 2011] [14:30:17] <guido_g>	https://github.com/guidog/cppzmq/blob/master/work/messages.cpp <- the test program, so far
| [Friday 11 March 2011] [14:30:47] <guido_g>	will do, after some more tests and some *sigh* documentation
| [Friday 11 March 2011] [14:31:19] <pieterh>	guido_g: do you have a dedicated key on your keyboard that prints *sigh*?
| [Friday 11 March 2011] [14:31:31] <guido_g>	not yet
| [Friday 11 March 2011] [14:31:51] <pieterh>	lol
| [Friday 11 March 2011] [14:59:59] <mikko>	howdy
| [Friday 11 March 2011] [15:57:40] <troutwine>	Compiling 2.0.10 from source on a Posix system I find that there's no .pc for pkg-config, than pkg-config does not list libzmq as a known package. I'm doing the standard ./configure&&make&&make install. Am I forgetting something?
| [Friday 11 March 2011] [16:02:29] <guido_g>	get 2.1.x, the build system was improved
| [Friday 11 March 2011] [16:02:44] <guido_g>	and it's more stable
| [Friday 11 March 2011] [16:10:01] <troutwine>	guido_g: More stable? 
| [Friday 11 March 2011] [16:10:16] <guido_g>	yes
| [Friday 11 March 2011] [16:10:23] <guido_g>	lots of bugs removed
| [Friday 11 March 2011] [16:12:45] <troutwine>	Thanks.
| [Friday 11 March 2011] [16:57:25] <troutwine>	I'm running wuserver with wuclient from the Guide on 2.1.2. When I netstat -ant I see the following: https://gist.github.com/866653
| [Friday 11 March 2011] [16:57:45] <troutwine>	For each pub/sub connection made to the wuserver, why are two sockets in use?
| [Friday 11 March 2011] [17:02:09] <troutwine>	I am reading netstat's output correctly, yes?
| [Friday 11 March 2011] [17:15:37] <guido_g>	no
| [Friday 11 March 2011] [17:15:54] <guido_g>	read the heading of the netstat output
| [Friday 11 March 2011] [17:16:13] <guido_g>	it says local and foreign address
| [Friday 11 March 2011] [17:16:49] <guido_g>	and a tcp connection has 2 endpoints, so for every endpoint is a local and a foreign view
| [Friday 11 March 2011] [17:17:20] <guido_g>	add the -p flag and see which processes are using the connections
| [Friday 11 March 2011] [17:21:13] <troutwine>	guido_g: Thanks. I need to read up on TCP more, clearly.
| [Friday 11 March 2011] [17:23:02] <michelp>	might I suggest http://www.amazon.com/Internetworking-TCP-IP-Vol-5th/dp/0131876716
| [Friday 11 March 2011] [17:34:55] <michelp>	the guide is pretty mindblowing
| [Friday 11 March 2011] [17:35:16] <michelp>	i got a chuckle that it goes Chapters One, Two, Three and 4
| [Friday 11 March 2011] [21:36:35] <dermoth|home>	michelp, yes?
| [Friday 11 March 2011] [21:43:02] <dermoth|home>	michelp, pieterh, i don't think this channel needs to be "unlocked" - chanserv admins can change or unlock the topic as needed. I could remove the topic lock, but anyone including spammers could change it...
| [Friday 11 March 2011] [21:43:48] <dermoth|home>	michelp, pieterh, and fwiw i'm "dermoth", this nick is linked to it. The normal name used to be on a bouncer and I lost the server somewhere in 2009 ;)
| [Saturday 12 March 2011] [03:14:22] <pieterh>	hi dermoth|home... who are the chanserv admins then?
| [Saturday 12 March 2011] [03:53:59] <guido_g>	good morning all
| [Saturday 12 March 2011] [03:55:03] <pieterh>	hi guido_g!
| [Saturday 12 March 2011] [03:55:10] <guido_g>	howdy pieterh 
| [Saturday 12 March 2011] [03:55:42] 	 * pieterh is trying to get router-to-router routing working...
| [Saturday 12 March 2011] [03:56:24] 	 * guido_g discovered this his ioloop concecpt has some flaws
| [Saturday 12 March 2011] [03:56:44] <guido_g>	but in general in works :)
| [Saturday 12 March 2011] [03:57:11] <pieterh>	nice
| [Saturday 12 March 2011] [03:58:30] <guido_g>	did my first steps with oprofile last night
| [Saturday 12 March 2011] [03:59:20] <pieterh>	sounds like a profiler... any good?
| [Saturday 12 March 2011] [03:59:30] <guido_g>	oh yes
| [Saturday 12 March 2011] [03:59:40] <guido_g>	one need to knwo al lot in advance
| [Saturday 12 March 2011] [03:59:46] <guido_g>	omg
| [Saturday 12 March 2011] [03:59:50] <guido_g>	more coffee
| [Saturday 12 March 2011] [03:59:54] <pieterh>	heh
| [Saturday 12 March 2011] [04:00:07] <guido_g>	this thing does a overall profiling of the whole system
| [Saturday 12 March 2011] [04:00:27] <guido_g>	so you can see how your app is interfering w/ the kernel 
| [Saturday 12 March 2011] [04:00:34] <guido_g>	amazing
| [Saturday 12 March 2011] [04:00:49] <guido_g>	as well in complexity as in usefulness
| [Saturday 12 March 2011] [04:00:52] <pieterh>	hmm, do keep notes, this sounds like useful stuff
| [Saturday 12 March 2011] [04:01:43] <guido_g>	and i only discovered it because i got crashes when i tried to use the -pg option (gprof)
| [Saturday 12 March 2011] [04:02:47] <guido_g>	as i said, it's a beast http://oprofile.sourceforge.net/docs/ <- just for short look, if you dare
| [Saturday 12 March 2011] [04:02:54] <pieterh>	nope, I don't dare
| [Saturday 12 March 2011] [04:03:10] <pieterh>	but do keep notes and perhaps make a page explaining how you used it to profile your 0MQ app...
| [Saturday 12 March 2011] [04:03:36] <guido_g>	ok
| [Saturday 12 March 2011] [04:04:01] <guido_g>	will try, but i'm not good at keeping notes :/
| [Saturday 12 March 2011] [04:04:28] <pieterh>	just copy the commands you used, with one line of 'why' each time
| [Saturday 12 March 2011] [04:04:36] <pieterh>	if you like I'll help turn that into a tutorial
| [Saturday 12 March 2011] [04:04:42] <pieterh>	if it's useful and I can understand it... 
| [Saturday 12 March 2011] [04:04:49] <guido_g>	ok
| [Saturday 12 March 2011] [04:05:03] <guido_g>	i'm sure i'll have a deeper look at it next week
| [Saturday 12 March 2011] [04:05:04] <pieterh>	I was going to use -pg/gprof but didn't have time to yet
| [Saturday 12 March 2011] [04:05:28] <guido_g>	as i said, -pg crashes w/ the normal libzmq build
| [Saturday 12 March 2011] [07:21:00] <Guthur>	pieterh, I think this signal catching will working as a solution for clrzmq2 on MONO
| [Saturday 12 March 2011] [07:21:24] <Guthur>	it's made the binding code a little bit messier though
| [Saturday 12 March 2011] [07:21:42] <Guthur>	too many precompiler directives flying around for my liking now
| [Saturday 12 March 2011] [07:38:10] <Guthur>	welcome back sustrik 
| [Saturday 12 March 2011] [07:38:22] <Guthur>	hope you had a nice time in the USA
| [Saturday 12 March 2011] [07:39:00] <sustrik>	hi
| [Saturday 12 March 2011] [07:39:18] <sustrik>	yeah, it was quite ok
| [Saturday 12 March 2011] [07:40:09] <Guthur>	sounds like the meetup was productive, at least
| [Saturday 12 March 2011] [07:40:36] <sustrik>	yeah, seem the minutes?
| [Saturday 12 March 2011] [07:42:17] <Guthur>	seen the messages on the mailing list
| [Saturday 12 March 2011] [07:43:06] <sustrik>	meeting in office space seems to be more productive than meeting in a pub :)
| [Saturday 12 March 2011] [07:43:35] <sustrik>	where are you located, btw?
| [Saturday 12 March 2011] [07:43:44] <Guthur>	Northern Ireland
| [Saturday 12 March 2011] [07:44:26] <Guthur>	I would be hard pushed to take time off for the london meetup this month, even if it wasn't a pub
| [Saturday 12 March 2011] [07:44:47] <Guthur>	I'd already arranged to go to the European Lisp Symposium this month in Hamburg
| [Saturday 12 March 2011] [07:45:08] <sustrik>	you can meet guido_g there
| [Saturday 12 March 2011] [07:45:13] <sustrik>	he's from hamburg iirc
| [Saturday 12 March 2011] [07:45:24] <Guthur>	oh, i'd know that
| [Saturday 12 March 2011] [07:45:30] <Guthur>	i didn't*
| [Saturday 12 March 2011] [07:45:47] <guido_g>	hmm what?
| [Saturday 12 March 2011] [07:45:56] <guido_g>	oh yes, i'm in hamburg
| [Saturday 12 March 2011] [07:46:16] <Guthur>	I'm there for a Lisp conference at the end of the month
| [Saturday 12 March 2011] [07:46:29] <guido_g>	Guthur: cool, drop me a note if you see time to meet
| [Saturday 12 March 2011] [07:46:36] <Guthur>	sure
| [Saturday 12 March 2011] [07:47:11] <Guthur>	I'm there from 30th march to 2n april
| [Saturday 12 March 2011] [07:47:43] <sustrik>	i would suggest asking on the mailing list, there may be more 0mq users in that location
| [Saturday 12 March 2011] [07:47:52] <guido_g>	Guthur: that's nice
| [Saturday 12 March 2011] [07:47:57] <Guthur>	super Idea
| [Saturday 12 March 2011] [07:50:21] <Guthur>	It's a shame I never thought of producing a presentation for the ELS of Common Lisp and 0MQ
| [Saturday 12 March 2011] [07:50:34] <Guthur>	the main topic this year is Concurrent Computing
| [Saturday 12 March 2011] [07:51:31] <Guthur>	well one of the topics at least
| [Saturday 12 March 2011] [07:52:47] <sustrik>	it would fit it
| [Saturday 12 March 2011] [07:52:49] <sustrik>	in
| [Saturday 12 March 2011] [07:53:10] <mikko>	sustrik: welcome back
| [Saturday 12 March 2011] [07:53:18] <sustrik>	hi
| [Saturday 12 March 2011] [07:53:22] <sustrik>	how it's going?
| [Saturday 12 March 2011] [07:53:26] <Guthur>	I'll definitely be mentioning 0MQ to anyone I speak to
| [Saturday 12 March 2011] [07:53:30] <mikko>	same old same old
| [Saturday 12 March 2011] [07:53:33] <Guthur>	spread the word and all... hehe
| [Saturday 12 March 2011] [07:53:45] <mikko>	how was US?
| [Saturday 12 March 2011] [07:53:50] <sustrik>	good
| [Saturday 12 March 2011] [07:53:55] <sustrik>	met a lot of people there
| [Saturday 12 March 2011] [07:54:10] <sustrik>	i've met the original author of Tibco RV :)
| [Saturday 12 March 2011] [07:54:21] <Guthur>	oh cool
| [Saturday 12 March 2011] [07:54:40] <sustrik>	btw, i've wanted to update openpgm in master but got some compilation errors
| [Saturday 12 March 2011] [07:54:43] <Guthur>	There has been some interest in work at comparing 0MQ to Tibco RV
| [Saturday 12 March 2011] [07:54:54] <sustrik>	Guthur: yes, seen it
| [Saturday 12 March 2011] [07:55:31] <sustrik>	mikko: pieter mentioned you've already experimented with that in stable
| [Saturday 12 March 2011] [07:56:25] <guido_g>	Guthur: your attending the welcome at freiheit.com on march 30?
| [Saturday 12 March 2011] [07:57:54] <guido_g>	Guthur: if this is the right event at all http://www.european-lisp-symposium.org/content-programme-full.html
| [Saturday 12 March 2011] [07:58:46] <Guthur>	guido_g, I unfortunately booked the flights before I knew about the welcome event
| [Saturday 12 March 2011] [07:58:57] <Guthur>	that is the correct event
| [Saturday 12 March 2011] [07:59:02] <guido_g>	ok
| [Saturday 12 March 2011] [07:59:21] <Guthur>	they only added that date later, a shame
| [Saturday 12 March 2011] [07:59:25] <guido_g>	Guthur: the event is quite a bit outside of hamburg city
| [Saturday 12 March 2011] [07:59:51] <Guthur>	yeah, it's proofing bothersome on the accomodation  front
| [Saturday 12 March 2011] [07:59:57] <guido_g>	Guthur: so planning in advance is unavoidable for a good overall experience 
| [Saturday 12 March 2011] [08:00:52] <Guthur>	guido_g, is the public transport good in hamburg
| [Saturday 12 March 2011] [08:01:06] <Guthur>	I've only been to Berlin, top rate there
| [Saturday 12 March 2011] [08:01:10] <guido_g>	Guthur: it's ok
| [Saturday 12 March 2011] [08:01:33] <guido_g>	Guthur: and friday night counts as weekend, so no problem
| [Saturday 12 March 2011] [08:01:58] <guido_g>	Guthur: but harburg <-> city takes some time
| [Saturday 12 March 2011] [08:06:03] <guido_g>	Guthur: for your bookmarks: http://www.hvv.de/en/index.php public transport in and around hamburg
| [Saturday 12 March 2011] [08:06:17] <guido_g>	Guthur: if you've questions, feel free to ask
| [Saturday 12 March 2011] [08:06:28] <Guthur>	cool, cheers guido_g 
| [Saturday 12 March 2011] [08:14:01] <pieterh>	sustrik: welcome back!
| [Saturday 12 March 2011] [08:14:13] <pieterh>	Guthur: glad you got the signal handling working
| [Saturday 12 March 2011] [08:15:05] <sustrik>	hi!
| [Saturday 12 March 2011] [08:15:15] <sustrik>	Guthur: yust reading the signal thread
| [Saturday 12 March 2011] [08:15:23] <sustrik>	have you solved the problem?
| [Saturday 12 March 2011] [08:16:20] <pieterh>	sustrik: wrt multicast loop
| [Saturday 12 March 2011] [08:16:53] <sustrik>	yes?
| [Saturday 12 March 2011] [08:16:56] <pieterh>	do you really consider this part of the 0MQ API?
| [Saturday 12 March 2011] [08:17:12] <sustrik>	it would definitely break the applications using it
| [Saturday 12 March 2011] [08:17:20] <pieterh>	do we know of any using it?
| [Saturday 12 March 2011] [08:17:43] <sustrik>	people ask about it once a while on the ml
| [Saturday 12 March 2011] [08:17:54] <guido_g>	and here too
| [Saturday 12 March 2011] [08:17:56] <pieterh>	ok, I'll restore it in 2.1 then
| [Saturday 12 March 2011] [08:18:08] <sustrik>	ok
| [Saturday 12 March 2011] [08:18:24] <sustrik>	as for the rate limit, i am not sure
| [Saturday 12 March 2011] [08:18:34] <pieterh>	btw, we've tested Mikko's patch for OpenPGM 5.x integration, it appears to work perfectly
| [Saturday 12 March 2011] [08:18:54] <sustrik>	great, send it to the ml
| [Saturday 12 March 2011] [08:18:54] <pieterh>	so mikko should be able to send you a patch for 2.2
| [Saturday 12 March 2011] [08:18:56] <pieterh>	yes
| [Saturday 12 March 2011] [08:19:00] <sustrik>	i'll port it to master
| [Saturday 12 March 2011] [08:19:24] <pieterh>	also btw, the contribution-to-release process is starting to work
| [Saturday 12 March 2011] [08:19:54] <pieterh>	you saw I rewrote the contributing page because it wasn't fully accurate
| [Saturday 12 March 2011] [08:20:14] <sustrik>	yes, nice
| [Saturday 12 March 2011] [08:21:34] <pieterh>	it's based on walking people through the actual process...
| [Saturday 12 March 2011] [08:21:57] <pieterh>	so we'll have releases for 2.0 and 2.1 in a few days
| [Saturday 12 March 2011] [08:22:08] <sustrik>	goodo
| [Saturday 12 March 2011] [08:22:19] <sustrik>	i though of actually moving to 3.0 afterwards
| [Saturday 12 March 2011] [08:22:30] <sustrik>	the sooner it's done the less pain it will involve
| [Saturday 12 March 2011] [08:22:38] <pieterh>	we should close 2.2 functionality first, no?
| [Saturday 12 March 2011] [08:22:49] <pieterh>	or do we jump from 2.1 to 3.x?
| [Saturday 12 March 2011] [08:22:54] <sustrik>	the latter
| [Saturday 12 March 2011] [08:22:58] <pieterh>	I like it.
| [Saturday 12 March 2011] [08:23:15] <pieterh>	however, note that people will be using 2.1.x for a long time
| [Saturday 12 March 2011] [08:23:29] <pieterh>	maybe even several months... :-)
| [Saturday 12 March 2011] [08:23:31] <sustrik>	that's why we have stable
| [Saturday 12 March 2011] [08:24:07] <sustrik>	it's less contentious to break the backward compatibility now
| [Saturday 12 March 2011] [08:24:14] <pieterh>	what I mean is, it's quite hard to backport fixes from 2.2 to 2.0, we should be careful about big internal changes for 3.0
| [Saturday 12 March 2011] [08:24:22] <pieterh>	external API changes is perfectly fine
| [Saturday 12 March 2011] [08:24:40] <sustrik>	the 2->3 shift is about API/ABI
| [Saturday 12 March 2011] [08:24:48] <sustrik>	it would involve a lot of pain in bindings
| [Saturday 12 March 2011] [08:24:57] <sustrik>	and a slighly less pain for end users
| [Saturday 12 March 2011] [08:24:57] <pieterh>	shrug, we've been through that, it's moderate
| [Saturday 12 March 2011] [08:25:06] <sustrik>	but it has to be done
| [Saturday 12 March 2011] [08:25:21] <pieterh>	I mean, the pain seems to be tolerable
| [Saturday 12 March 2011] [08:25:32] <pieterh>	so indeed the sooner the better
| [Saturday 12 March 2011] [08:25:36] <sustrik>	exactly
| [Saturday 12 March 2011] [08:25:44] <sustrik>	so i'll wait for stable 2.1 release
| [Saturday 12 March 2011] [08:25:51] <sustrik>	and move on afterwards
| [Saturday 12 March 2011] [08:26:01] <pieterh>	... hmm, so...
| [Saturday 12 March 2011] [08:26:12] <pieterh>	there'll be no 2.2 release then
| [Saturday 12 March 2011] [08:26:18] <sustrik>	yes
| [Saturday 12 March 2011] [08:26:30] <pieterh>	and the source repository should be called zeromq3 in that case
| [Saturday 12 March 2011] [08:26:45] 	 * sustrik has no idea whether github allows renaming
| [Saturday 12 March 2011] [08:26:54] <pieterh>	rename/fork it's all the same
| [Saturday 12 March 2011] [08:27:04] <pieterh>	pure rename means old links break, which you don't really want
| [Saturday 12 March 2011] [08:27:13] <pieterh>	I'd keep the zeromq2, start a new zeromq3
| [Saturday 12 March 2011] [08:27:33] <sustrik>	what with zeromq2 then?
| [Saturday 12 March 2011] [08:27:41] <sustrik>	it won't be used at all
| [Saturday 12 March 2011] [08:27:43] <pieterh>	well, true, it becomes irrelevant
| [Saturday 12 March 2011] [08:27:55] <pieterh>	we have zeromq2-1, zeromq2-0, zeromq3
| [Saturday 12 March 2011] [08:27:58] <pieterh>	nice enough
| [Saturday 12 March 2011] [08:28:20] <pieterh>	I'd just like to keep the naming consistent with version numbers
| [Saturday 12 March 2011] [08:28:32] <sustrik>	it will break build tools :(
| [Saturday 12 March 2011] [08:28:33] <pieterh>	so later we can make zeromq3-0 for releases, etc.
| [Saturday 12 March 2011] [08:28:41] <pieterh>	the build tools... mikko will take care of it
| [Saturday 12 March 2011] [08:28:43] <sustrik>	but it's up to mikko, i assume
| [Saturday 12 March 2011] [08:29:13] <pieterh>	mikko uses git submodules to pull in the zeromq repos for building
| [Saturday 12 March 2011] [08:29:15] <pieterh>	quite neat
| [Saturday 12 March 2011] [08:29:47] <pieterh>	hmm, if we stop using zeromq2 for development, I can change that README to act as an index
| [Saturday 12 March 2011] [08:29:59] <pieterh>	that'll work nicely for people still using the old URL
| [Saturday 12 March 2011] [08:30:34] <pieterh>	sustrik: I only have one concern with the stuff you discussed in London...
| [Saturday 12 March 2011] [08:31:09] <pieterh>	having spent several weeks making reliability designs *on top* of 0MQ, for the Guide, I'm going to gnash my teeth when it all goes into the core and my work is for nothing...
| [Saturday 12 March 2011] [08:31:10] <pieterh>	:-)
| [Saturday 12 March 2011] [08:32:12] <sustrik>	index?
| [Saturday 12 March 2011] [08:32:19] <sustrik>	i don't get it
| [Saturday 12 March 2011] [08:32:36] <pieterh>	index = web page that sends people off to the correct gits
| [Saturday 12 March 2011] [08:33:03] <pieterh>	table of contents
| [Saturday 12 March 2011] [08:33:12] <sustrik>	don't make it part of any particular git
| [Saturday 12 March 2011] [08:33:27] <dermoth|home>	pieterh, I registered the channel (if you don't want to go trough the lengthy registration process the channel needs to be empty so you can get OP), and the admins are zmq developers afaik...
| [Saturday 12 March 2011] [08:33:50] <pieterh>	dermoth|home: yesterday I asked to register the channel too
| [Saturday 12 March 2011] [08:34:03] <pieterh>	but I don't know who the admins are...
| [Saturday 12 March 2011] [08:34:14] <pieterh>	hello admins, are you there?
| [Saturday 12 March 2011] [08:34:16] <sustrik>	admins of what?
| [Saturday 12 March 2011] [08:34:19] <pieterh>	this channel
| [Saturday 12 March 2011] [08:34:35] <sustrik>	dermoth: you've done the setting up iirc
| [Saturday 12 March 2011] [08:34:44] <sustrik>	i think you said i am an admin back then
| [Saturday 12 March 2011] [08:34:57] <pieterh>	sustrik, try /kick pieterh
| [Saturday 12 March 2011] [08:35:15] <sustrik>	i have to log in first
| [Saturday 12 March 2011] [08:35:21] 	 * sustrik wonders how to do that
| [Saturday 12 March 2011] [08:35:25] <pieterh>	:-)
| [Saturday 12 March 2011] [08:35:35] <sustrik>	a sec
| [Saturday 12 March 2011] [08:35:44] <pieterh>	dermoth|home: anyhow, it'd be useful if anyone can change the topic IMO
| [Saturday 12 March 2011] [08:35:58] <pieterh>	if and when we find spammers coming here we can lock it down
| [Saturday 12 March 2011] [08:36:44] <dermoth|home>	pieterh, what should the topic be?
| [Saturday 12 March 2011] [08:37:00] <pieterh>	two things
| [Saturday 12 March 2011] [08:37:14] <pieterh>	a welcome message to new joiners explaining that the IRC channel is logged
| [Saturday 12 March 2011] [08:37:35] <yrashk>	"You are under surveillance. Beware!" :)
| [Saturday 12 March 2011] [08:37:38] <sustrik>	hm, "You're not channel operator"
| [Saturday 12 March 2011] [08:37:45] <pieterh>	and secondly, either in the topic or the welcome message, something like "Before asking for advice here, Please Read the Guide"
| [Saturday 12 March 2011] [08:38:15] <sustrik>	dermoth|home: any idea how can i log in as a channel operator?
| [Saturday 12 March 2011] [08:38:18] <pieterh>	perhaps also a third warnings, "And ps., don't share sockets between threads, even if it seems excellent design, seriously, just don't do it!"
| [Saturday 12 March 2011] [08:38:30] <sustrik>	:)
| [Saturday 12 March 2011] [08:38:30] <yrashk>	sustrik: /msg chanserv op #zeromq
| [Saturday 12 March 2011] [08:38:37] <yrashk>	may be add your name too
| [Saturday 12 March 2011] [08:38:39] <yrashk>	dont remember
| [Saturday 12 March 2011] [08:38:49] <pieterh>	yay!
| [Saturday 12 March 2011] [08:38:54] <dermoth|home>	pieterh, where are the logs?
| [Saturday 12 March 2011] [08:38:54] Kick	pieterh has been kicked from the channel by sustrik (pieterh).
| [Saturday 12 March 2011] [08:39:08] <yrashk>	power trip!
| [Saturday 12 March 2011] [08:39:08] <yrashk>	:D
| [Saturday 12 March 2011] [08:39:12] <sustrik>	:D
| [Saturday 12 March 2011] [08:39:23] <pieterh>	all bow before our sustrik overlords
| [Saturday 12 March 2011] [08:39:27] <dermoth|home>	pieterh, where are the logs?
| [Saturday 12 March 2011] [08:39:27] <sustrik>	ok
| [Saturday 12 March 2011] [08:39:27] <pieterh>	aight
| [Saturday 12 March 2011] [08:39:30] <sustrik>	what now
| [Saturday 12 March 2011] [08:39:34] <sustrik>	?
| [Saturday 12 March 2011] [08:39:49] <pieterh>	dermoth|home: http://travlr.github.com/zmqirclog/
| [Saturday 12 March 2011] [08:39:50] <dermoth|home>	i'll point to the url rather than just saying it's logged
| [Saturday 12 March 2011] [08:40:30] <pieterh>	sustrik: shrug, it's enough for now we know dermoth|home and you are chanops
| [Saturday 12 March 2011] [08:40:40] <sustrik>	ok
| [Saturday 12 March 2011] [08:40:55] <pieterh>	heh :-) magic
| [Saturday 12 March 2011] [08:41:15] <pieterh>	BTW if anyone wants short URLs for 0MQ projects, give me a shout
| [Saturday 12 March 2011] [08:41:28] <pieterh>	The Guide is e.g. also at http://zero.mq/zg
| [Saturday 12 March 2011] [08:42:06] <pieterh>	and I've just created http://zero.mq/irc -> http://travlr.github.com/zmqirclog/
| [Saturday 12 March 2011] [08:42:56] <pieterh>	:-)
| [Saturday 12 March 2011] [08:44:06] <pieterh>	sustrik: leaping to 3.0 is a great idea, I see San Francisco inspired you
| [Saturday 12 March 2011] [08:44:54] <sustrik>	it calmed down my fear wrt the api breakage
| [Saturday 12 March 2011] [08:45:07] <sustrik>	the people haven't seem to mind it that much
| [Saturday 12 March 2011] [08:45:17] <sustrik>	although there were no binding maintainers there
| [Saturday 12 March 2011] [08:45:44] <pieterh>	I think a key thing is to prove we have a healthy 2.1
| [Saturday 12 March 2011] [08:45:51] <sustrik>	ack
| [Saturday 12 March 2011] [08:46:14] <sustrik>	when there's a stable branch, the changes to master become somehow less threatening
| [Saturday 12 March 2011] [08:46:20] <pieterh>	indeed
| [Saturday 12 March 2011] [08:47:03] <sustrik>	Guthur: you there?
| [Saturday 12 March 2011] [08:47:24] <pieterh>	btw, there's a really good article by Zed Shaw on coders vs. sysadmins: http://sheddingbikes.com/posts/1299555462.html
| [Saturday 12 March 2011] [08:47:33] <pieterh>	very relevant to this discussion
| [Saturday 12 March 2011] [08:52:45] <yrashk>	interesting to know what his ideas are that he has mentioned in the very end
| [Saturday 12 March 2011] [08:53:22] <yrashk>	with Zed you can never predict what he comes up with next
| [Saturday 12 March 2011] [08:53:22] <pieterh>	with 0MQ we split the traffic right up front, at the zeromq.org main page
| [Saturday 12 March 2011] [08:53:39] <pieterh>	ah, yrashk, yes, you can... Zed will always create a new project :-)
| [Saturday 12 March 2011] [08:54:05] <yrashk>	pieterh: well that, yes
| [Saturday 12 March 2011] [08:54:09] <yrashk>	but what will be there...
| [Saturday 12 March 2011] [08:54:25] <Guthur>	sustrik, back
| [Saturday 12 March 2011] [08:54:30] <Guthur>	sorry was AFK there
| [Saturday 12 March 2011] [08:54:48] <sustrik>	i've just read the EINTR thread
| [Saturday 12 March 2011] [08:54:54] <Guthur>	As I binding author I'm actually in a small way looking forward to the jump to ZMQ3
| [Saturday 12 March 2011] [08:54:56] <sustrik>	have you solved that already?
| [Saturday 12 March 2011] [08:55:03] <Guthur>	it'll let me make some changes
| [Saturday 12 March 2011] [08:55:09] <yrashk>	when zmq3 is due?
| [Saturday 12 March 2011] [08:55:21] <sustrik>	when, 2.1 is stable
| [Saturday 12 March 2011] [08:55:24] <yrashk>	I as a binding author is interested in it, too
| [Saturday 12 March 2011] [08:55:37] <Guthur>	sustrik, For clrzmq2, yes, I just catch SYSINT and SYSTERM, and exit the program
| [Saturday 12 March 2011] [08:55:50] <sustrik>	so, the bump is actually just an API/ABI change, so it can be done quickly
| [Saturday 12 March 2011] [08:55:55] <sustrik>	basically in 1 go
| [Saturday 12 March 2011] [08:55:59] <yrashk>	hey my binding ends with 2, too!
| [Saturday 12 March 2011] [08:56:01] <pieterh>	Guthur: do you re-enter the poll call?
| [Saturday 12 March 2011] [08:56:11] <Guthur>	pieterh, yeah
| [Saturday 12 March 2011] [08:56:20] <Guthur>	I have a timer to track how long has elapsed
| [Saturday 12 March 2011] [08:56:21] <pieterh>	so that worked... excellent...
| [Saturday 12 March 2011] [08:56:27] <Guthur>	yep, all good
| [Saturday 12 March 2011] [08:56:33] <Guthur>	pieterh, cheers for the suggestion
| [Saturday 12 March 2011] [08:56:45] <pieterh>	np, happy to help
| [Saturday 12 March 2011] [08:57:04] <sustrik>	yrashk: what's that, a collision in binding names?
| [Saturday 12 March 2011] [08:57:19] <yrashk>	sustrik: nope
| [Saturday 12 March 2011] [08:57:25] <sustrik>	ok, good
| [Saturday 12 March 2011] [08:57:28] <yrashk>	sustrik: clrzmq2 and erlzmq2
| [Saturday 12 March 2011] [08:57:33] <yrashk>	just both are -twos
| [Saturday 12 March 2011] [08:57:34] <yrashk>	:D
| [Saturday 12 March 2011] [08:57:41] <pieterh>	sustrik: just happy naming conventions
| [Saturday 12 March 2011] [08:57:58] <sustrik>	as for 3.0 bump
| [Saturday 12 March 2011] [08:58:10] <sustrik>	anybody who's interested in the bump, check the wiki page
| [Saturday 12 March 2011] [08:58:14] <pieterh>	Guthur: yrashk: please do *not* bump that to x3 when 0MQ/3 comes out...
| [Saturday 12 March 2011] [08:58:20] <Guthur>	oh
| [Saturday 12 March 2011] [08:58:21] <yrashk>	is 3.0 api gonna be significantly different btw?
| [Saturday 12 March 2011] [08:58:28] <sustrik>	not really
| [Saturday 12 March 2011] [08:58:32] <pieterh>	just cleaner
| [Saturday 12 March 2011] [08:58:37] <sustrik>	there are some shortcoming though
| [Saturday 12 March 2011] [08:58:38] <sustrik>	yes
| [Saturday 12 March 2011] [08:58:42] <Guthur>	pieterh, my rational is that I would like to clean up some API issues I perceive
| [Saturday 12 March 2011] [08:58:44] <yrashk>	pieterh: sure. erlzmq2 is v2 to erlzmq only
| [Saturday 12 March 2011] [08:58:59] <Guthur>	I can't remove them for backwards compatibility reasons
| [Saturday 12 March 2011] [08:59:24] <pieterh>	Guthur: you can in fact make your own version jump any time you like
| [Saturday 12 March 2011] [08:59:30] <sustrik>	i guess the C and Erlang APIs are not tightly connected
| [Saturday 12 March 2011] [08:59:34] <sustrik>	exactly
| [Saturday 12 March 2011] [08:59:34] <pieterh>	that's a contract between you and your users
| [Saturday 12 March 2011] [08:59:47] <pieterh>	feel free to refer to the 0MQ contract as your guide
| [Saturday 12 March 2011] [08:59:56] <pieterh>	'release policy' is the page
| [Saturday 12 March 2011] [09:00:12] <yrashk>	sustrik: they are not, but they are very close
| [Saturday 12 March 2011] [09:00:13] <Guthur>	pieterh, I suppose I was being slightly sneaky and was going to spin it as a move to ZMQ3
| [Saturday 12 March 2011] [09:00:16] <Guthur>	sorry, hehe
| [Saturday 12 March 2011] [09:00:32] <pieterh>	sustrik: I found another case where one *has* to set linger on a socket or term freezes
| [Saturday 12 March 2011] [09:00:36] <yrashk>	sustrik: I effectively imitate 0mq api more or less
| [Saturday 12 March 2011] [09:00:41] <pieterh>	that's when there are pending outgoing connects
| [Saturday 12 March 2011] [09:00:51] <yrashk>	sustrik: http://zeromq.github.com/erlzmq2/
| [Saturday 12 March 2011] [09:01:16] <sustrik>	pieterh: yes
| [Saturday 12 March 2011] [09:01:16] <pieterh>	that doesn't seem accurate semantics
| [Saturday 12 March 2011] [09:01:17] <yrashk>	sustrik: they only addition is brecv which is a vm blocking receive (if somebody will ever need that)
| [Saturday 12 March 2011] [09:01:44] <sustrik>	pieterh: 0mq has to connect first to be able to send pending messages
| [Saturday 12 March 2011] [09:02:05] <pieterh>	hmm, true but IMO at termination time, pending connections should be killed
| [Saturday 12 March 2011] [09:02:11] <pieterh>	well
| [Saturday 12 March 2011] [09:02:14] <pieterh>	sigh
| [Saturday 12 March 2011] [09:02:16] <pieterh>	indeed
| [Saturday 12 March 2011] [09:02:21] <pieterh>	*sigh*
| [Saturday 12 March 2011] [09:02:37] <pieterh>	it's all logical but my fear is lots and lots of people are going to stumble on this
| [Saturday 12 March 2011] [09:02:38] <sustrik>	yrashk: however, the changes between 2 and 3 likely have no counterpart in Erlang API
| [Saturday 12 March 2011] [09:02:50] <yrashk>	btw with erlang api, you can terminate the context and then start closing sockets in parallel :)
| [Saturday 12 March 2011] [09:02:57] <pieterh>	sustrik: any chance we can revert zmq_term() to acting like 2.0, in 2.1 stable?
| [Saturday 12 March 2011] [09:03:28] <sustrik>	pieterh: why would you want that?
| [Saturday 12 March 2011] [09:03:33] <pieterh>	recall, we discussed it
| [Saturday 12 March 2011] [09:03:36] <yrashk>	our zmq_term even has an optional timeout value
| [Saturday 12 March 2011] [09:03:42] <pieterh>	two zmq_term methods, one blocking and one non-blocking
| [Saturday 12 March 2011] [09:03:50] <pieterh>	blocking with timeout
| [Saturday 12 March 2011] [09:03:56] <sustrik>	yes?
| [Saturday 12 March 2011] [09:04:00] <pieterh>	old name, old semantics, compatible
| [Saturday 12 March 2011] [09:04:06] <pieterh>	new name, new semantics
| [Saturday 12 March 2011] [09:04:19] <pieterh>	in fact the 2.1 change broke the API IMO
| [Saturday 12 March 2011] [09:04:26] <sustrik>	pieterh: ah, backward compatibility
| [Saturday 12 March 2011] [09:04:30] <pieterh>	I know it was for good reasons but it broke the API
| [Saturday 12 March 2011] [09:04:40] <pieterh>	and people are going to bitch when they move from 2.0 and stuff stops working
| [Saturday 12 March 2011] [09:04:42] <sustrik>	yes, it would make sense to make linger default to 0
| [Saturday 12 March 2011] [09:04:44] <pieterh>	yes
| [Saturday 12 March 2011] [09:05:11] <sustrik>	but at the moment most people are using 2.1 with default of "infinite" :(
| [Saturday 12 March 2011] [09:05:25] <pieterh>	2.1 is not stable yet, it's rc2
| [Saturday 12 March 2011] [09:05:30] <sustrik>	it was a fault not to preserve backward compatibility when moving to 2.1
| [Saturday 12 March 2011] [09:05:42] <pieterh>	well, I did argue for it quite loudly iirc
| [Saturday 12 March 2011] [09:05:55] <sustrik>	well, it's more about how many people you are going to hurt
| [Saturday 12 March 2011] [09:06:04] <sustrik>	you did
| [Saturday 12 March 2011] [09:06:20] <pieterh>	to be honest there are marginal areas we *should* improve but don't because of the API contract
| [Saturday 12 March 2011] [09:06:31] <pieterh>	and here we have something that breaks a majority of code...
| [Saturday 12 March 2011] [09:06:32] <sustrik>	yes
| [Saturday 12 March 2011] [09:06:43] <sustrik>	that's why 3.0 should be done asap
| [Saturday 12 March 2011] [09:07:06] <sustrik>	it was a fault back then
| [Saturday 12 March 2011] [09:07:07] <pieterh>	that would help, but doesn't make 2.1 less dangerous IMO
| [Saturday 12 March 2011] [09:07:10] <sustrik>	i am sorry for it
| [Saturday 12 March 2011] [09:07:28] <pieterh>	sorry shmorry, can we fix this before it's too lare?
| [Saturday 12 March 2011] [09:07:30] <pieterh>	*late
| [Saturday 12 March 2011] [09:07:49] <sustrik>	it's already to late
| [Saturday 12 March 2011] [09:07:55] <pieterh>	why?
| [Saturday 12 March 2011] [09:07:59] <pieterh>	2.1 is not stable
| [Saturday 12 March 2011] [09:08:03] <sustrik>	majority has already migrated
| [Saturday 12 March 2011] [09:08:14] <pieterh>	you have figures?
| [Saturday 12 March 2011] [09:08:23] <pieterh>	to be honest I don't believe that
| [Saturday 12 March 2011] [09:08:33] <pieterh>	besides, it's not the point
| [Saturday 12 March 2011] [09:08:46] <pieterh>	we have a release policy, which 2.1 broke, and should unbreak
| [Saturday 12 March 2011] [09:08:59] <sustrik>	that means second breaking
| [Saturday 12 March 2011] [09:09:04] <sustrik>	one was enough
| [Saturday 12 March 2011] [09:09:05] <pieterh>	otherwise the release policy is not credible and when you refer to it, I'll mock you bitterly
| [Saturday 12 March 2011] [09:09:16] <pieterh>	"oh, it's fine when YOU want to break it..."...
| [Saturday 12 March 2011] [09:09:19] <pieterh>	seriously... :-/
| [Saturday 12 March 2011] [09:09:26] <sustrik>	the problem is that the contract was written after 2.1
| [Saturday 12 March 2011] [09:09:32] <pieterh>	that is untrue
| [Saturday 12 March 2011] [09:09:41] <pieterh>	you modified it afterwards, but it's from 2.0
| [Saturday 12 March 2011] [09:09:49] <sustrik>	it was discussed because of 2.1
| [Saturday 12 March 2011] [09:09:57] <pieterh>	I'll provide you the date it was written... hang on
| [Saturday 12 March 2011] [09:09:57] <sustrik>	and introduced
| [Saturday 12 March 2011] [09:10:19] <sustrik>	yep
| [Saturday 12 March 2011] [09:10:25] <pieterh>	it was written for 2.0 to be precise
| [Saturday 12 March 2011] [09:10:43] <pieterh>	I flatly disagree that it did not apply, does not *now* apply to 2.1
| [Saturday 12 March 2011] [09:10:48] <pieterh>	that is completely wrong
| [Saturday 12 March 2011] [09:11:00] <sustrik>	i recall explicitly addressing 2.1 compatibility issues when writing it
| [Saturday 12 March 2011] [09:11:12] <pieterh>	We wrote it in August
| [Saturday 12 March 2011] [09:11:29] <pieterh>	your memory is ... curious
| [Saturday 12 March 2011] [09:11:36] <sustrik>	ah, yes, i think thr 2.1 work started back then
| [Saturday 12 March 2011] [09:11:36] <pieterh>	Check the history
| [Saturday 12 March 2011] [09:11:51] <sustrik>	remember the great heats in BTS?
| [Saturday 12 March 2011] [09:12:12] <pieterh>	please, sustrik, check the dates when you introduced the zmq_term blocking
| [Saturday 12 March 2011] [09:12:24] <pieterh>	anyhow, this is irrelevant
| [Saturday 12 March 2011] [09:12:34] <sustrik>	yes, it was at the same time
| [Saturday 12 March 2011] [09:12:35] <pieterh>	you have a release policy and we are about to release a stable 2.1
| [Saturday 12 March 2011] [09:12:41] <pieterh>	which breaks the release policy
| [Saturday 12 March 2011] [09:12:51] <pieterh>	I'm formally against that
| [Saturday 12 March 2011] [09:12:58] <pieterh>	and formally asking you to respect the documented policy
| [Saturday 12 March 2011] [09:13:05] <sustrik>	i am against repeated breaking of API
| [Saturday 12 March 2011] [09:13:13] <sustrik>	2.1.1->2.1.2
| [Saturday 12 March 2011] [09:13:13] <pieterh>	the API includes the semantics of zmq_term
| [Saturday 12 March 2011] [09:13:39] <sustrik>	well, let's do a poll then
| [Saturday 12 March 2011] [09:13:46] <pieterh>	blocking or non-blocking?
| [Saturday 12 March 2011] [09:13:59] <pieterh>	yes, let's do a poll
| [Saturday 12 March 2011] [09:14:05] <sustrik>	default linger of 0 vs. infinite
| [Saturday 12 March 2011] [09:14:08] <pieterh>	indeed
| [Saturday 12 March 2011] [09:14:44] <pieterh>	note, you can add zmq_term_blocking () which does infinite blocking with a timeout
| [Saturday 12 March 2011] [09:15:02] <sustrik>	sure, but that's not the point
| [Saturday 12 March 2011] [09:15:06] <pieterh>	yes it is
| [Saturday 12 March 2011] [09:15:13] <pieterh>	if people absolutely need the semantics, they are present
| [Saturday 12 March 2011] [09:15:23] <sustrik>	we are discussing backward comaptibility not new apis
| [Saturday 12 March 2011] [09:15:27] <pieterh>	ok, setting LINGER gives the same results
| [Saturday 12 March 2011] [09:15:29] <sustrik>	anyway, let's ask people
| [Saturday 12 March 2011] [09:15:37] <yrashk>	I vote for keeping it as is
| [Saturday 12 March 2011] [09:15:39] <yrashk>	:)
| [Saturday 12 March 2011] [09:15:44] <yrashk>	if anybody's interested :)
| [Saturday 12 March 2011] [09:15:50] <sustrik>	i am against :)
| [Saturday 12 March 2011] [09:15:52] <pieterh>	yrashk: 'as is' depends where you are today
| [Saturday 12 March 2011] [09:15:56] <yrashk>	master
| [Saturday 12 March 2011] [09:15:57] <sustrik>	let me ask on ml
| [Saturday 12 March 2011] [09:16:07] <pieterh>	could you please be specific: infinite blocking, or not
| [Saturday 12 March 2011] [09:16:11] <yrashk>	infinite
| [Saturday 12 March 2011] [09:16:11] <sustrik>	yes
| [Saturday 12 March 2011] [09:16:33] <sustrik>	there are two sides to the problem
| [Saturday 12 March 2011] [09:16:42] <sustrik>	i'll try to explain on the ml
| [Saturday 12 March 2011] [09:17:06] <pieterh>	sustrik: please, do point out this is for the stable 2.1 to be released shortly
| [Saturday 12 March 2011] [09:17:19] <pieterh>	and do explain that infinite blocking means all existing apps are likely to break
| [Saturday 12 March 2011] [09:17:25] <pieterh>	when they migrate from 2.0 to 2.1
| [Saturday 12 March 2011] [09:17:27] <sustrik>	2.0 apps
| [Saturday 12 March 2011] [09:17:35] <sustrik>	in the opposite case
| [Saturday 12 March 2011] [09:17:42] <sustrik>	the 2.1 apps are going to break
| [Saturday 12 March 2011] [09:17:48] <sustrik>	i'll explain that
| [Saturday 12 March 2011] [09:17:56] <pieterh>	all the ones that don't explicitly set LINGER to zero, which is loads and loads
| [Saturday 12 March 2011] [09:18:09] <pieterh>	(loads and loads take the effort to set LINGER to zero)
| [Saturday 12 March 2011] [09:18:54] <pieterh>	yes, a poll will be interesting...
| [Saturday 12 March 2011] [09:19:26] <pieterh>	BTW there's a line in the Release Policies page I am going to remove
| [Saturday 12 March 2011] [09:19:32] <pieterh>	"In general we have a stable and an unstable releases of the product, e.g. 2.0.x and 2.1.x"
| [Saturday 12 March 2011] [09:19:36] <pieterh>	that is just wrong
| [Saturday 12 March 2011] [09:21:22] <pieterh>	bleh, the contract is vague for minor releases
| [Saturday 12 March 2011] [09:21:29] <pieterh>	"It may even run"
| [Saturday 12 March 2011] [09:21:38] <pieterh>	some lawyer has been editing that page...
| [Saturday 12 March 2011] [09:30:06] <Guthur>	is the reactor pattern still ear marked for 3.0
| [Saturday 12 March 2011] [09:30:48] <Guthur>	just thinking that if it was to replace Poll it might be a good opportunity to work IOCP into the windows version
| [Saturday 12 March 2011] [09:31:39] <Guthur>	which would obviously immediately open up IPC
| [Saturday 12 March 2011] [09:32:06] <pieterh>	Guthur: I don't think that's on the 3.0 roadmap
| [Saturday 12 March 2011] [09:32:38] <Guthur>	it is according to the website
| [Saturday 12 March 2011] [09:32:52] <Guthur>	http://www.zeromq.org/docs:3-0#toc3
| [Saturday 12 March 2011] [09:33:19] <Guthur>	it does say replacing OR supplementing though
| [Saturday 12 March 2011] [09:33:23] <pieterh>	indeed, but I don't think it's on the roadmap
| [Saturday 12 March 2011] [09:33:44] <Guthur>	ok, is there a more up to date doc
| [Saturday 12 March 2011] [09:34:34] <pieterh>	sorry to be unhelpful but the only accurate doc is the NEWS when a feature's been released
| [Saturday 12 March 2011] [09:34:43] <pieterh>	and then the man page...
| [Saturday 12 March 2011] [10:29:07] <zedas>	pieterh: or write a book :-)
| [Saturday 12 March 2011] [10:29:26] <pieterh>	:-) yeah, that's always a good option
| [Saturday 12 March 2011] [10:31:14] <sustrik>	3.0 road map is out of date
| [Saturday 12 March 2011] [10:31:24] <sustrik>	:(
| [Saturday 12 March 2011] [10:32:11] <sustrik>	i would rather use the page to collect the API changes
| [Saturday 12 March 2011] [10:32:25] <pieterh>	sustrik: ctrl-e (stuff) ctrl-s
| [Saturday 12 March 2011] [10:32:34] <sustrik>	new features, otoh, will anyway be only those that people contribute
| [Saturday 12 March 2011] [10:32:55] <sustrik>	right
| [Saturday 12 March 2011] [10:36:32] <Skaag>	sustrik: you heard about Sector and UDT?
| [Saturday 12 March 2011] [10:36:48] <sustrik>	i know UDT
| [Saturday 12 March 2011] [10:36:56] <sustrik>	don't know about Sector
| [Saturday 12 March 2011] [10:37:04] <Skaag>	that's the funny thing
| [Saturday 12 March 2011] [10:37:12] <Skaag>	I thought about implementing a filesystem based on ZMQ
| [Saturday 12 March 2011] [10:37:22] <Skaag>	and while looking for prior work, I found Sector...
| [Saturday 12 March 2011] [10:37:24] <Skaag>	http://sector.sourceforge.net/
| [Saturday 12 March 2011] [10:37:34] <Skaag>	I'm currently installing it and about to try it out
| [Saturday 12 March 2011] [10:37:42] <Skaag>	on paper, it looks very interesting
| [Saturday 12 March 2011] [10:38:16] <sustrik>	there are several distributed databases out there
| [Saturday 12 March 2011] [10:38:25] <sustrik>	i am not an expert in the topic though
| [Saturday 12 March 2011] [10:38:30] <Skaag>	this one offers a fuse client which makes it interesting
| [Saturday 12 March 2011] [10:38:43] <Skaag>	the reason I mentioned it is UDT actually
| [Saturday 12 March 2011] [10:39:31] <sustrik>	like in "uses UDT" fro communication between nodes, right?
| [Saturday 12 March 2011] [10:39:36] <Skaag>	yes
| [Saturday 12 March 2011] [10:39:46] <sustrik>	nice
| [Saturday 12 March 2011] [10:40:03] <sustrik>	could work well for large-scale synchronisations over a WAN
| [Saturday 12 March 2011] [10:40:12] <Skaag>	that's what I need to establish now
| [Saturday 12 March 2011] [10:40:50] <Skaag>	I have at the moment machines in 7 ~ 8 different data centers
| [Saturday 12 March 2011] [10:41:02] <Skaag>	by the way, zmq is working wonders for us
| [Saturday 12 March 2011] [10:41:17] <Skaag>	we are graphing in real-time the data from 20+ nodes
| [Saturday 12 March 2011] [10:41:46] <Skaag>	without the illnesses we were experiencing while using rabbitmq
| [Saturday 12 March 2011] [10:43:43] <pieterh>	Skaag: we'd welcome a short story that we could publish on the wiki...
| [Saturday 12 March 2011] [10:43:54] <pieterh>	about your experiences in moving to 0MQ
| [Saturday 12 March 2011] [10:43:54] <Skaag>	ok
| [Saturday 12 March 2011] [10:44:30] <sustrik>	Skaag: what's the project?
| [Saturday 12 March 2011] [10:45:00] <Skaag>	it's a control panel for a CDN
| [Saturday 12 March 2011] [10:45:08] <sustrik>	is there a link?
| [Saturday 12 March 2011] [10:45:26] <Skaag>	I'm still making the site for it :-\
| [Saturday 12 March 2011] [10:45:32] <sustrik>	i see
| [Saturday 12 March 2011] [10:45:52] <sustrik>	when you have it, share the link
| [Saturday 12 March 2011] [10:45:58] <Skaag>	 will do
| [Saturday 12 March 2011] [10:45:59] <sustrik>	it would be interesting to have a look
| [Saturday 12 March 2011] [11:17:22] <CIA-103>	zeromq2: 03Guido Goldstein 07master * rd0c8edd 10/ include/zmq.hpp : 
| [Saturday 12 March 2011] [11:17:22] <CIA-103>	zeromq2: Added missing close method w/ check if socket is already closed.
| [Saturday 12 March 2011] [11:17:22] <CIA-103>	zeromq2: Signed-off-by: Guido Goldstein <github@a-nugget.de> - http://bit.ly/ggZZI6
| [Saturday 12 March 2011] [11:37:29] <dermoth|home>	I just fixed the cia auto-voice in chanserv...
| [Saturday 12 March 2011] [12:04:00] <guido_g>	sustrik: thx for mentioning the sign-off thingie
| [Saturday 12 March 2011] [12:04:41] <guido_g>	didn't move the .gitconfig to the new machine
| [Saturday 12 March 2011] [17:48:28] <nadime>	any zmq gurus around to help me figure out a performance bottleneck issue?
| [Saturday 12 March 2011] [17:49:07] <nadime>	i think it's kind of interesting!
| [Saturday 12 March 2011] [17:53:56] <mikko>	nadime: what's the issue?
| [Saturday 12 March 2011] [17:54:06] <nadime>	i have the following setup
| [Saturday 12 March 2011] [17:54:52] <nadime>	push socket fans out from a thread into N (defaults to 4) IO threads using push/pull to distribute the work to the io threads
| [Saturday 12 March 2011] [17:55:04] <nadime>	the io threads then talk 1 to 1 with N io threads on a client
| [Saturday 12 March 2011] [17:55:18] <nadime>	the io threads use pub/sub since it's 1 to 1
| [Saturday 12 March 2011] [17:55:36] <nadime>	each io thread has 1 zmq io thread
| [Saturday 12 March 2011] [17:55:40] <nadime>	and i set affinities
| [Saturday 12 March 2011] [17:55:45] <nadime>	to make it as quick as possible
| [Saturday 12 March 2011] [17:55:50] <nadime>	the issue i'm having
| [Saturday 12 March 2011] [17:56:03] <nadime>	is that i see about 500k msgs/sec go into my push socket
| [Saturday 12 March 2011] [17:56:09] <nadime>	but i fall way behind on my 4 io sockets
| [Saturday 12 March 2011] [17:56:25] <nadime>	sorry the io sockets are tcp
| [Saturday 12 March 2011] [17:56:49] <nadime>	so i didn't expec tthem to keep up, but i figured with 4 and a pretty solid machine (12 cores, about 1 thread per core)
| [Saturday 12 March 2011] [17:56:59] <nadime>	they'd be ok
| [Saturday 12 March 2011] [17:57:06] <mikko>	are they tcp over local loopback?
| [Saturday 12 March 2011] [17:57:10] <mikko>	or over network?
| [Saturday 12 March 2011] [17:57:15] <nadime>	local 1 GB network
| [Saturday 12 March 2011] [17:57:29] <mikko>	what is your message size?
| [Saturday 12 March 2011] [17:57:37] <nadime>	avg prolly 50b
| [Saturday 12 March 2011] [17:57:47] <nadime>	sorry B
| [Saturday 12 March 2011] [17:57:48] <nadime>	bytes
| [Saturday 12 March 2011] [17:59:18] <mikko>	so, 50b messages x 500k would be roughly 238 megabytes per second
| [Saturday 12 March 2011] [17:59:38] <nadime>	yeah but i fall WAY behind
| [Saturday 12 March 2011] [17:59:49] <nadime>	like the io threads barely do 80kmsg/s
| [Saturday 12 March 2011] [17:59:53] <mikko>	one gigabit per second is 128 megabytes per second
| [Saturday 12 March 2011] [18:00:50] <nadime>	50b is probably wrong, i don't see anywhere near full bandwidth utilization
| [Saturday 12 March 2011] [18:01:30] <nadime>	the point though is that what the io threads do is nowhere near even 20% capacity
| [Saturday 12 March 2011] [18:02:32] <mikko>	are you seeing high utilisation anywhere?
| [Saturday 12 March 2011] [18:02:37] <mikko>	or just falling rates?
| [Saturday 12 March 2011] [18:03:21] <nadime>	no high network utilization usually around 15%
| [Saturday 12 March 2011] [18:03:44] <mikko>	what os is this?
| [Saturday 12 March 2011] [18:03:49] <nadime>	win7
| [Saturday 12 March 2011] [18:03:53] <nadime>	64b
| [Saturday 12 March 2011] [18:04:03] <mikko>	hmm, can't help you much there
| [Saturday 12 March 2011] [18:04:14] <mikko>	i have got very little experience with windows and performance
| [Saturday 12 March 2011] [18:04:20] <nadime>	i'm not missing anything though in terms of things you'd do with zmq?
| [Saturday 12 March 2011] [18:05:17] <mikko>	sounds ok
| [Saturday 12 March 2011] [18:05:25] <mikko>	i would maybe use zmq_pair socket for 1:1
| [Saturday 12 March 2011] [18:05:34] <nadime>	k, i can try that
| [Saturday 12 March 2011] [18:05:46] <nadime>	is the push/pull fair queuing slow?
| [Saturday 12 March 2011] [18:05:57] <mikko>	shouldn't be
| [Saturday 12 March 2011] [18:06:03] <nadime>	k
| [Saturday 12 March 2011] [18:06:03] <mikko>	it's very simple algorithm
| [Saturday 12 March 2011] [18:06:18] <nadime>	i would think
| [Saturday 12 March 2011] [18:06:29] <mikko>	if you have a profiler available that might help
| [Saturday 12 March 2011] [18:06:35] <mikko>	to see where time is spent
| [Saturday 12 March 2011] [18:06:35] <nadime>	yeah i do
| [Saturday 12 March 2011] [18:06:38] <nadime>	i will use it
| [Saturday 12 March 2011] [18:06:58] <nadime>	i just thught i might be missing something obvious that would help
| [Saturday 12 March 2011] [18:08:48] <mikko>	so, do i understand your architecture correctly:
| [Saturday 12 March 2011] [18:09:03] <mikko>	you have push/pull socket, which balances work to four threads
| [Saturday 12 March 2011] [18:09:24] <mikko>	each one of the threads has pub socket which publishes messages over tcp to workers
| [Saturday 12 March 2011] [18:09:27] <mikko>	?
| [Saturday 12 March 2011] [18:14:48] <mikko>	i gotta head to bed
| [Saturday 12 March 2011] [18:15:19] <mikko>	nadime: the channel is usually more lively during the day time in europe (large amount of devs from eu)
| [Saturday 12 March 2011] [18:39:20] <cremes>	nadime: i have a few suggestions for things to look at
| [Saturday 12 March 2011] [18:39:52] <cremes>	1. if your PUSH socket is in the same process as your "io thread PULL sockets" you should be using inproc transport instead of tcp
| [Saturday 12 March 2011] [18:40:16] <cremes>	2. take a look at your message serialization; sometimes deserialization is more costly than serialization
| [Saturday 12 March 2011] [18:40:38] <cremes>	however, i assume you are sending packed structures so you are probably just casting a pointer to get to your data
| [Saturday 12 March 2011] [18:41:21] <cremes>	3. instrument your messages so that you can measure how many nano/micro/milliseconds it takes for the PUSH to deliver to the PULL socket
| [Saturday 12 March 2011] [18:42:14] <cremes>	4. instrument the messages that go from the "server io threads" to the "client io threads" via PUB/SUB to measure latency
| [Saturday 12 March 2011] [19:04:32] <nadime>	i am using inproc for anything local, cremes
| [Saturday 12 March 2011] [19:04:42] <nadime>	the only thing i use tcp for is external
| [Saturday 12 March 2011] [19:05:41] <nadime>	thanks for the suggestions, re: instrumentation
| [Saturday 12 March 2011] [19:06:13] <nadime>	oh incidentally, mikko, we were doing the math wrong.  50B x 500k = 25MB/s
| [Saturday 12 March 2011] [19:06:19] <nadime>	which makes much more sense
| [Saturday 12 March 2011] [19:06:28] <nadime>	since i'm seeing 10% utilization
| [Saturday 12 March 2011] [19:06:30] <nadime>	10-15
| [Saturday 12 March 2011] [20:03:04] <Guest51726>	hello, anyone awake tonight ?
| [Saturday 12 March 2011] [20:04:56] <Evet_>	:)
| [Saturday 12 March 2011] [20:17:03] <Guest51726>	Hello Evet, how are you ?
| [Saturday 12 March 2011] [20:17:21] <Evet>	fine, Guest51726. you?
| [Saturday 12 March 2011] [20:18:48] <Guest51726>	not so bad !
| [Saturday 12 March 2011] [20:19:12] <Guest51726>	I was doing some experimenting with 0MQ, 2.1.2 the other day - tell me, is the load balancing stable ?
| [Saturday 12 March 2011] [20:26:33] <Guest51726>	Yep.
| [Saturday 12 March 2011] [20:41:06] <Evet>	Guest51726: i think so
| [Saturday 12 March 2011] [20:41:49] <Guest51726>	hmmm...that wasn't what I was seeing :(
| [Saturday 12 March 2011] [21:04:25] <emacsen>	I have a, hopefully basic question:   I'm learning zeromq. I only have my laptop and I'm trying to test push and pull requests. I heard that pull requests will be balanced across pullers. But I'm testing with ipc and all the requests go to one listener. Is that because of ipc?
| [Saturday 12 March 2011] [21:05:01] <Guest51726>	thats a good question:  I don't know.
| [Saturday 12 March 2011] [21:05:51] <Guest51726>	the requests really should be balanced across pullers, regardless of the transport.  However I have observed uneven load balancing myself.
| [Sunday 13 March 2011] [01:19:07] <guido_g>	hello world!
| [Sunday 13 March 2011] [01:34:28] <pieterh>	hey guido_g, hi!
| [Sunday 13 March 2011] [01:34:38] <guido_g>	morning pieterh 
| [Sunday 13 March 2011] [01:35:10] <pieterh>	another day, another little protocol spec :-)
| [Sunday 13 March 2011] [01:35:12] <guido_g>	just pulled the zeromq2-1 changes and compiled
| [Sunday 13 March 2011] [01:35:19] <guido_g>	ohh...
| [Sunday 13 March 2011] [01:35:50] <guido_g>	spec:10
| [Sunday 13 March 2011] [01:36:00] <pieterh>	yeah, brokerless reliability
| [Sunday 13 March 2011] [01:36:12] <pieterh>	final part of chapter 4... finally... :-)
| [Sunday 13 March 2011] [01:36:18] <guido_g>	yes!
| [Sunday 13 March 2011] [01:36:19] <guido_g>	:)
| [Sunday 13 March 2011] [01:37:03] <pieterh>	for 2.1 I defined ZMQ_DEALER and ZMQ_ROUTER as aliases
| [Sunday 13 March 2011] [01:37:19] <guido_g>	seen it
| [Sunday 13 March 2011] [01:37:30] <guido_g>	good move imho
| [Sunday 13 March 2011] [01:38:08] <pieterh>	I'm going to change the man pages, leave the old names as deprecated
| [Sunday 13 March 2011] [01:38:18] <pieterh>	this will make it easier for people to move to 3.0
| [Sunday 13 March 2011] [01:38:53] <guido_g>	ok
| [Sunday 13 March 2011] [01:39:06] <guido_g>	from spec10: "From the MQ Reference Manual[Bibliography item zmqsocket not found.]:"
| [Sunday 13 March 2011] [01:39:18] <guido_g>	seems that a link can't be resolved
| [Sunday 13 March 2011] [01:39:37] <pieterh>	just fixed that, thanks
| [Sunday 13 March 2011] [01:39:53] <guido_g>	ahh
| [Sunday 13 March 2011] [01:40:08] <guido_g>	reload did it
| [Sunday 13 March 2011] [01:40:35] <pieterh>	I figured out how to do router-to-router connections between clients and servers
| [Sunday 13 March 2011] [01:40:41] <guido_g>	great
| [Sunday 13 March 2011] [01:40:54] <guido_g>	will be fun to read
| [Sunday 13 March 2011] [01:40:56] <pieterh>	it's rather fun because neither side can talk to the other without knowing their identity first
| [Sunday 13 March 2011] [01:41:28] <guido_g>	using ahh... router sockets
| [Sunday 13 March 2011] [01:41:59] <guido_g>	need to get used to the new name
| [Sunday 13 March 2011] [01:42:10] <pieterh>	:-)
| [Sunday 13 March 2011] [01:43:39] <guido_g>	example program adjusted
| [Sunday 13 March 2011] [06:47:53] <Guthur>	pieterh, Ch4 is turning into a bit of a monster
| [Sunday 13 March 2011] [06:48:30] <Guthur>	good stuff though
| [Sunday 13 March 2011] [06:49:29] <Guthur>	After sorting out my POSIX issues, and fix a bug I found during the process, I'm now ready to finish ch3
| [Sunday 13 March 2011] [06:49:37] <Guthur>	looking forward to ch4
| [Sunday 13 March 2011] [12:02:24] <pieterh>	Guthur: CH4 is now finished
| [Sunday 13 March 2011] [12:03:19] <Guthur>	cool, i'm just debugging my peering3 and then i can start on ch4
| [Sunday 13 March 2011] [12:03:26] <pieterh>	:-)
| [Sunday 13 March 2011] [12:17:33] <mikko>	\\o
| [Sunday 13 March 2011] [12:17:34] <mikko>	o//
| [Sunday 13 March 2011] [12:18:06] <mikko>	pieterh: we got some more fixes going on in openpgm with steve
| [Sunday 13 March 2011] [12:18:19] <pieterh>	mikko: nice, what's the issue?
| [Sunday 13 March 2011] [12:18:31] <mikko>	sun linker visibility with sungcc compiler
| [Sunday 13 March 2011] [12:18:35] <pieterh>	ah, ok
| [Sunday 13 March 2011] [12:18:45] <mikko>	and i think i've found zeromq compile warning on freebsd 8.1
| [Sunday 13 March 2011] [12:19:02] <mikko>	pgm_receiver.cpp:154: warning: dereferencing type-punned pointer will break strict-aliasing rules
| [Sunday 13 March 2011] [12:19:17] <pieterh>	that definitely looks like a warning :-)
| [Sunday 13 March 2011] [12:19:25] <mikko>	it breaks the build nowadays
| [Sunday 13 March 2011] [12:19:39] <mikko>	previously zeromq was compiled without -Werror when openpgm was enabled
| [Sunday 13 March 2011] [12:19:59] <mikko>	now that openpgm is built separately i added -Werror back in
| [Sunday 13 March 2011] [12:23:03] <pieterh>	mikko: sanity check, do you see a man page for zmq_device() in your zeromq source tree?
| [Sunday 13 March 2011] [12:24:14] <mikko>	https://github.com/zeromq/zeromq2-1/tree/master/doc
| [Sunday 13 March 2011] [12:24:26] <mikko>	doesn't seem to be there
| [Sunday 13 March 2011] [12:24:54] <pieterh>	funny, the method isn't documented, but I recall writing a man page for it
| [Sunday 13 March 2011] [12:25:05] <pieterh>	which is installed on my box...
| [Sunday 13 March 2011] [12:25:10] <pieterh>	hmm
| [Sunday 13 March 2011] [12:25:22] <mikko>	maybe you haven't committed / pushed it?
| [Sunday 13 March 2011] [12:25:53] <pieterh>	nope, it was reverted by the maintainers...
| [Sunday 13 March 2011] [12:25:57] <pieterh>	sep 4
| [Sunday 13 March 2011] [12:26:02] <pieterh>	ok, I'm adding it back to 2.0 and 2.1
| [Sunday 13 March 2011] [12:26:53] <mikko>	when are you flying back?
| [Sunday 13 March 2011] [12:27:09] <pieterh>	as soon as these mushrooms wear off
| [Sunday 13 March 2011] [12:27:12] <pieterh>	what? what?
| [Sunday 13 March 2011] [12:27:19] <pieterh>	:-) I'm not away, Mikko, happily working at home
| [Sunday 13 March 2011] [12:27:26] <mikko>	i mean from london
| [Sunday 13 March 2011] [12:27:43] <pieterh>	ah, I take the train, easy ride from London to Brussels
| [Sunday 13 March 2011] [12:27:53] <mikko>	ah, ok
| [Sunday 13 March 2011] [12:27:57] <pieterh>	if you want to meet up I'm around Wednesday afternoon
| [Sunday 13 March 2011] [12:27:59] <mikko>	i noticed that cloudcamp (http://www.cloudcamp.org/london) is on 17th
| [Sunday 13 March 2011] [12:28:24] <mikko>	if that is of interest to you
| [Sunday 13 March 2011] [12:28:26] <pieterh>	sigh, yeah, won't make it
| [Sunday 13 March 2011] [12:28:44] <mikko>	i'm gonna be on client site all next week so probably earliest we meet is in the pub
| [Sunday 13 March 2011] [12:28:53] <mikko>	been hectic last week
| [Sunday 13 March 2011] [12:28:57] <mikko>	setting up my own company
| [Sunday 13 March 2011] [12:29:03] <pieterh>	nice!
| [Sunday 13 March 2011] [12:29:21] <mikko>	almost everything ready
| [Sunday 13 March 2011] [12:29:27] <mikko>	still need to sort out bank account
| [Sunday 13 March 2011] [12:29:36] <mikko>	(i think at some point it would be nice to get paid)
| [Sunday 13 March 2011] [12:31:13] <pieterh>	that's always a nice option
| [Sunday 13 March 2011] [13:44:58] <Guthur>	I'm getting an "Operation cannot be accomplished in current state" in the clientTask of peering3
| [Sunday 13 March 2011] [13:45:09] <Guthur>	it works for a while then that error on a recv
| [Sunday 13 March 2011] [13:45:19] <Guthur>	any suggestions on how to find the route of the error
| [Sunday 13 March 2011] [13:53:21] <mikko>	Guthur: req/rep sockets?
| [Sunday 13 March 2011] [13:53:23] <pieterh>	hmm, sounds like a REQ socket state error
| [Sunday 13 March 2011] [13:53:26] <pieterh>	let me check that
| [Sunday 13 March 2011] [13:53:29] <mikko>	yeah, was thinking the same
| [Sunday 13 March 2011] [13:53:52] <Guthur>	yeah re
| [Sunday 13 March 2011] [13:53:54] <mikko>	wrong order of recv/send causes that
| [Sunday 13 March 2011] [13:53:56] <Guthur>	req/rep
| [Sunday 13 March 2011] [13:53:58] <mikko>	usually
| [Sunday 13 March 2011] [13:54:27] <mikko>	so for example send/recv/recv on req socket would cause that
| [Sunday 13 March 2011] [13:54:27] <Guthur>	oh ok, it's possible there is an error with my code
| [Sunday 13 March 2011] [13:54:45] <pieterh>	Guthur: it could be a bug in the design, as well
| [Sunday 13 March 2011] [13:54:47] <mikko>	there possibly should be a way to recover the socket
| [Sunday 13 March 2011] [13:55:02] <pieterh>	well, what I do is close it and reopen, in later examples
| [Sunday 13 March 2011] [13:55:29] <pieterh>	kind of annoying but finally it works ok
| [Sunday 13 March 2011] [13:59:47] <Guthur>	dinner time, I'll check my code later
| [Sunday 13 March 2011] [15:10:05] <guido_g>	http://pycon.blip.tv/file/4878885/  <- zeds mq talk at pycon
| [Sunday 13 March 2011] [15:22:21] <mikko>	interesting observations
| [Sunday 13 March 2011] [15:25:29] <Skaag>	mikko: getting paid is very important, but can be dangerous if not done right
| [Sunday 13 March 2011] [15:25:44] <Skaag>	need to consider it strategically
| [Sunday 13 March 2011] [15:26:25] <Skaag>	but no doubt, it has to happen
| [Sunday 13 March 2011] [15:32:25] <mikko>	Skaag: i really haven't got much savings so there isnt that much room for strategy
| [Sunday 13 March 2011] [15:32:28] <mikko>	:)
| [Sunday 13 March 2011] [15:32:53] <Skaag>	well ok but here's what I mean:
| [Sunday 13 March 2011] [15:33:05] <Skaag>	Assuming you have a client who wishes to hire your services - what does he need exactly?
| [Sunday 13 March 2011] [15:33:16] <mikko>	services?
| [Sunday 13 March 2011] [15:33:17] <Skaag>	And the question is, of course, how many such offers you get
| [Sunday 13 March 2011] [15:33:34] <Skaag>	the danger i'm talking about is one of stifling innovation
| [Sunday 13 March 2011] [15:33:46] <Skaag>	basically the elimination of time for creativity
| [Sunday 13 March 2011] [15:34:23] <Skaag>	sometimes you need to delegate work to a team, make a cut from the top, but remain "CTO" and continue to research and develop the core technology
| [Sunday 13 March 2011] [15:34:38] <Skaag>	you don't have a day job?
| [Sunday 13 March 2011] [15:34:46] <Skaag>	I was certain you were hired for good pay at the very least :)
| [Sunday 13 March 2011] [15:34:48] <mikko>	i have but not soon
| [Sunday 13 March 2011] [15:34:59] <Skaag>	company closing?
| [Sunday 13 March 2011] [15:35:00] <mikko>	i resigned to start my own company
| [Sunday 13 March 2011] [15:35:12] <Skaag>	ah, good luck!!
| [Sunday 13 March 2011] [15:35:33] <mikko>	thanks
| [Sunday 13 March 2011] [15:35:40] <Skaag>	it's not easy, the path you have chosen
| [Sunday 13 March 2011] [15:35:44] <Skaag>	:)
| [Sunday 13 March 2011] [15:35:51] <Skaag>	but certainly, most fulfilling :)
| [Sunday 13 March 2011] [15:36:28] <Skaag>	some would say, easiest is to be the cow in the shed, slowly milked, given music and food...
| [Sunday 13 March 2011] [15:36:32] <Skaag>	:)
| [Sunday 13 March 2011] [15:36:52] <mikko>	probably
| [Sunday 13 March 2011] [15:36:59] <mikko>	i like the excitement of setting up a company
| [Sunday 13 March 2011] [15:37:03] <mikko>	even if it fails eventually
| [Sunday 13 March 2011] [15:37:19] <mikko>	knowing that there won't be food on the table unless you do something about it
| [Sunday 13 March 2011] [15:38:12] <guido_g>	hmmm i gained ~20kg in the 2 years since i went freelancing
| [Sunday 13 March 2011] [15:38:20] <mikko>	sustrik: there?
| [Sunday 13 March 2011] [15:43:37] <Skaag>	mikko: I so know what you're talking about, that I can't help but remember all the pain :)
| [Sunday 13 March 2011] [15:44:10] <Skaag>	If you need any help, I am here
| [Sunday 13 March 2011] [15:44:38] <mikko>	i'm not overly worried at the moment
| [Sunday 13 March 2011] [15:44:53] <mikko>	not yet at least :)
| [Sunday 13 March 2011] [15:52:02] <Skaag>	what's the goal of the company?
| [Sunday 13 March 2011] [15:53:50] <mikko>	i got a few SaaS ideas but i guess initially just bring the food to table
| [Sunday 13 March 2011] [15:53:58] <mikko>	initially providing services i would guess
| [Sunday 13 March 2011] [15:54:24] <Skaag>	ok so the classic "Tech Guy opens a Company" scenario, as I thought :)
| [Sunday 13 March 2011] [15:54:58] <mikko>	yeah
| [Sunday 13 March 2011] [15:55:05] <mikko>	initially it will just be me
| [Sunday 13 March 2011] [15:55:10] <Skaag>	(not saying it in any negative way!)
| [Sunday 13 March 2011] [15:55:12] <mikko>	i haven't really planned things very far
| [Sunday 13 March 2011] [15:55:27] <mikko>	i just kinda felt that i need new challenges
| [Sunday 13 March 2011] [15:55:40] <Skaag>	I did it for other reasons
| [Sunday 13 March 2011] [15:55:53] <Skaag>	I wanted a stable passive income to allow me to research things in my free time
| [Sunday 13 March 2011] [15:56:16] <mikko>	did it work out?
| [Sunday 13 March 2011] [15:56:18] <Skaag>	corporate took too much of my time, they were the hungry pig that never had enough
| [Sunday 13 March 2011] [15:56:22] <Skaag>	actually yes :)
| [Sunday 13 March 2011] [15:56:32] <Skaag>	thanks to my wife though
| [Sunday 13 March 2011] [15:56:43] <Skaag>	if she hadn't taken the financial parts from me, it would have failed miserably
| [Sunday 13 March 2011] [15:56:54] <Skaag>	not ashamed to admit it
| [Sunday 13 March 2011] [15:57:11] <Skaag>	she's a woman who is not afraid to bill customers for her husband's work/hours :)
| [Sunday 13 March 2011] [15:57:25] <Skaag>	and she will hunt them down, until hell freezes, or they pay!!
| [Sunday 13 March 2011] [15:57:46] <Skaag>	and better not tell her the payment is late, for she will unleash upon you her furious anger, and terrible might!! :)
| [Sunday 13 March 2011] [15:58:06] <Skaag>	ok I may be exaggerating it a bit, but more or less that's how it is! :)
| [Sunday 13 March 2011] [15:58:19] <mikko>	in UK it seems very common to delay 50+ or so days
| [Sunday 13 March 2011] [15:58:33] <Skaag>	never go down that route
| [Sunday 13 March 2011] [15:58:35] <Skaag>	never.
| [Sunday 13 March 2011] [15:58:45] <Skaag>	do not agree to that.
| [Sunday 13 March 2011] [15:59:07] <mikko>	no, i mean companies just not paying even when the terms say 30 days or so
| [Sunday 13 March 2011] [15:59:48] <Skaag>	don't even agree for 30 days
| [Sunday 13 March 2011] [16:00:11] <mikko>	30 days is common here
| [Sunday 13 March 2011] [16:00:16] <Skaag>	7 days from the presentation of the invoice.
| [Sunday 13 March 2011] [16:00:38] <mikko>	back in finland 7 days was reasonable
| [Sunday 13 March 2011] [16:00:43] <mikko>	here, i don't think so
| [Sunday 13 March 2011] [16:00:52] <Skaag>	and I don't know how tax authorities work in the UK, but VAT in Israel want their chunk of the money whether or not you received payment, for any invoices you produced.
| [Sunday 13 March 2011] [16:01:02] <Skaag>	mikko, seriously, who cares what is common
| [Sunday 13 March 2011] [16:01:10] <Skaag>	start with 7 days and let the customer squirm
| [Sunday 13 March 2011] [16:01:23] <Skaag>	and then if you do heed the 30 days, at least he will feel he won something
| [Sunday 13 March 2011] [16:01:25] <Skaag>	he earned them ;)
| [Sunday 13 March 2011] [16:01:55] <Skaag>	I hate seeing people get fucked, especially if I care about them and their future
| [Sunday 13 March 2011] [16:04:26] <mikko>	pieterh: have you done work on zns or still gathering ideas?
| [Sunday 13 March 2011] [16:06:34] <nadime>	if mikko or cremes are here -- solved my IO bottleneck problem
| [Sunday 13 March 2011] [16:06:53] <nadime>	profiler did the trick
| [Sunday 13 March 2011] [16:14:25] <michelp>	i have to agree with Skaag on this one, when the customer balks that 30 days is normal, tell them to go hire a normal person.  you're better than normal.
| [Sunday 13 March 2011] [16:18:27] <Skaag>	exactly my point - this is Mikko!!!! Not some random developer.
| [Sunday 13 March 2011] [16:18:37] <Skaag>	I mean c'mon, is nothing holy anymore?!
| [Sunday 13 March 2011] [16:18:40] <Skaag>	:)
| [Sunday 13 March 2011] [16:38:04] <mikko>	nadime: what was the issue?
| [Sunday 13 March 2011] [18:17:49] <nadime>	mikko - i was using a poller in a bottleneck thread for no good reason
| [Sunday 13 March 2011] [18:40:32] <Guthur>	should a SUB socket connect block until it's connected to an endpoint?
| [Sunday 13 March 2011] [18:43:48] <Guthur>	the example in peering3 seems to block
| [Sunday 13 March 2011] [18:44:00] <Guthur>	but mine does not which has me scratching my head
| [Sunday 13 March 2011] [18:44:20] <yo>	yo
| [Sunday 13 March 2011] [18:44:26] <yo>	what's up
| [Sunday 13 March 2011] [20:06:28] <travlr>	Zed's Presentation -- PyCon 2011: Advanced Network Architectures With ZeroMQ : http://blip.tv/file/4878885
| [Sunday 13 March 2011] [20:07:02] <Guthur>	decent presentation, a bit lightning fast though
| [Sunday 13 March 2011] [20:07:33] <travlr>	ahh, i now see guido_g beat me to the link.
| [Sunday 13 March 2011] [20:07:46] <travlr>	Guthur: yeah i'm watching it now
| [Sunday 13 March 2011] [20:08:02] <Guthur>	pieterh sent it on the mailing list
| [Sunday 13 March 2011] [20:08:22] <travlr>	credit to pieter then. ;)
| [Sunday 13 March 2011] [20:19:36] <Guthur>	ah it's not blocking, question from before, just printf was not showing
| [Sunday 13 March 2011] [21:16:50] <gholt>	I can't beleive he only got 30mins for 0mq. 0mq does run length encoding?
| [Monday 14 March 2011] [00:02:39] <cleifer>	kind of random question, but if i'm using a pub/sub style interaction and want to "flush" the queue of messages waiting to be published, is there a good way?
| [Monday 14 March 2011] [02:11:57] <CIA-103>	zeromq2: 03Martin Sustrik 07master * r2970d6c 10/ src/pgm_socket.cpp : 
| [Monday 14 March 2011] [02:11:57] <CIA-103>	zeromq2: Remove obsolete assert from pgm_socket.cpp
| [Monday 14 March 2011] [02:11:57] <CIA-103>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/eTHjYC
| [Monday 14 March 2011] [02:19:33] <sustrik>	mikko: hi, are you there by chance?
| [Monday 14 March 2011] [02:45:58] <dermoth|home>	hi sustrik 
| [Monday 14 March 2011] [02:46:04] <sustrik>	hi
| [Monday 14 March 2011] [02:46:38] <dermoth|home>	you may remember my issue with the devices deadlocking due to a blocking socket...
| [Monday 14 March 2011] [02:49:43] <dermoth|home>	src/signaler.cpp, making the send MSG_DONTWAIT in zmq::signaler_t::send...
| [Monday 14 March 2011] [02:50:11] <dermoth|home>	I believe i've seen talks abot who to make is non-blocking, was this solved yet?
| [Monday 14 March 2011] [02:50:48] <dermoth|home>	in 2.1 I think the code is in mailbox.cpp...
| [Monday 14 March 2011] [02:53:46] <dermoth|home>	well, sustrik if not I was just wondering if you have considered the use of a pipe... I've used them in the past, and one nice thing about them is that a non-blocking pipe write (up to a defined limit) is atomic, it either goes trough entirely or fail, whihc I feel is what the current problem was with making sockets non-blocking...
| [Monday 14 March 2011] [02:55:26] <dermoth|home>	POSIX.1-2001  says  that write(2)s of less than PIPE_BUF bytes must be atomic: the output data is written to the pipe as a contiguous sequence. [...] O_NONBLOCK enabled, n <= PIPE_BUF: If there is room to write n bytes to the pipe, then write(2) succeeds immediately, writing all n bytes; otherwise write(2) fails, with errno set to EAGAIN.
| [Monday 14 March 2011] [02:56:54] <sustrik>	dermoth: is pipe different from a socket pair in this respect?
| [Monday 14 March 2011] [02:58:53] <sustrik>	the nice thing at least is that pipe is unidirectional rather than bidrectional
| [Monday 14 March 2011] [02:59:07] <sustrik>	meaning it will consume less buffer memory
| [Monday 14 March 2011] [02:59:16] <dermoth|home>	sustrik, I have little experience with sockets, but afaik a non-blocking write can he partial and there's no threshold for atomicity. OTOH  POSIX.1-2001 says that anything less than or equal to PIPE_BUF must be written atomically. IIRC it also defines PIPE_BUF be at least 512 bytes, iirc in Linux it's 4096 though...
| [Monday 14 March 2011] [03:00:45] <dermoth|home>	as with above, from "man 7 pipe" on Ubuntu: POSIX.1-2001 requires PIPE_BUF to be at least 512 bytes.  (On Linux, PIPE_BUF  is  4096 bytes.)
| [Monday 14 March 2011] [03:01:44] <sustrik>	yep
| [Monday 14 March 2011] [03:01:53] <sustrik>	i recall reading the same about socketpair
| [Monday 14 March 2011] [03:01:58] <dermoth|home>	note that if you wish to poll on a pipe, it must be open with O_RDWR
| [Monday 14 March 2011] [03:02:00] <sustrik>	cannot find that now though
| [Monday 14 March 2011] [03:02:42] <sustrik>	anyway, i can try using pipes
| [Monday 14 March 2011] [03:02:54] <sustrik>	however, it's likely to break on some OSes
| [Monday 14 March 2011] [03:03:13] <sustrik>	so i would postpone the experiment till stable 2.1 is out
| [Monday 14 March 2011] [03:03:53] <sustrik>	hm, can you set SNDBUF on a pipe?
| [Monday 14 March 2011] [03:04:56] <dermoth|home>	likely not...
| [Monday 14 March 2011] [03:08:28] <dermoth|home>	well I just thought i'd share this in case it can be of any help, although i'm far from understanding all the magic that happens behind the zmq api :) 
| [Monday 14 March 2011] [03:11:40] <dermoth|home>	btw the MSG_DONTWAIT fix worked like a charm, I can get occasional restarts but no more communication deadlock. BTW it seems the data is help on the devices, not the PUSH clients - and when I kill them (SIGTERM) all data is flushed to the PULL clients
| [Monday 14 March 2011] [03:11:47] <dermoth|home>	data is *held*
| [Monday 14 March 2011] [03:53:10] <pieterh>	g'morning
| [Monday 14 March 2011] [03:54:00] <guido_g>	morning
| [Monday 14 March 2011] [03:54:57] <pieterh>	random poll to 0MQ users here: does anyone use the devices packaged with the library?
| [Monday 14 March 2011] [03:59:25] <pieterh>	{poll timeout: ENORESPONSE}
| [Monday 14 March 2011] [04:01:49] <guido_g>	pieterh: saw the guide ch4 checkins yesterday, when will the online version of the be updated?
| [Monday 14 March 2011] [04:02:00] <pieterh>	guido_g: was going to do that now in fact
| [Monday 14 March 2011] [04:02:05] <pieterh>	am just reviewing the text once again
| [Monday 14 March 2011] [04:02:16] <guido_g>	ok, won't disturb you then ,)
| [Monday 14 March 2011] [04:02:41] <pieterh>	np, let me launch it then...
| [Monday 14 March 2011] [04:03:06] <guido_g>	no hurry, page set to auto-reload
| [Monday 14 March 2011] [04:06:41] <mikko>	sustrik: i am now
| [Monday 14 March 2011] [04:10:00] <sustrik>	mikko: the bsd bug
| [Monday 14 March 2011] [04:10:08] <sustrik>	if i send you a patch can you check it?
| [Monday 14 March 2011] [04:10:13] <mikko>	sustrik: sure
| [Monday 14 March 2011] [04:10:18] <sustrik>	ok
| [Monday 14 March 2011] [04:10:27] <mikko>	the pgm type punned pointer?
| [Monday 14 March 2011] [04:10:44] <mikko>	pgm_receiver.cpp:154: warning: dereferencing type-punned pointer will break strict-aliasing rules
| [Monday 14 March 2011] [04:10:47] <mikko>	this one?
| [Monday 14 March 2011] [04:12:18] <sustrik>	yes
| [Monday 14 March 2011] [04:13:31] <sustrik>	sent
| [Monday 14 March 2011] [04:17:48] <mikko>	will test later today!
| [Monday 14 March 2011] [04:25:07] <pieterh>	mikko: when the openpgm integration is stable, can you send a patch to the ML?
| [Monday 14 March 2011] [04:28:36] <sustrik>	pieterh: is there any particular reason why you want to drop devices in 2.1?
| [Monday 14 March 2011] [04:28:55] <pieterh>	sustrik: I'm not dropping devices, just those undocumented, unmaintained examples
| [Monday 14 March 2011] [04:29:06] <pieterh>	0MQ core should not have these, period
| [Monday 14 March 2011] [04:29:06] <pieterh>	I'
| [Monday 14 March 2011] [04:29:24] <pieterh>	I've been asking for this cleanup since September and each time it's been refused for... no good reason
| [Monday 14 March 2011] [04:29:25] <sustrik>	it's more work to do and you risk annoying users
| [Monday 14 March 2011] [04:29:28] <pieterh>	nope
| [Monday 14 March 2011] [04:29:40] <pieterh>	I've asked now several times if anyone uses these
| [Monday 14 March 2011] [04:29:46] <sustrik>	and it's going to be removed from master once 2.1 is out anyway
| [Monday 14 March 2011] [04:30:01] <sustrik>	so you would have to reconcile both patches afterwards
| [Monday 14 March 2011] [04:30:04] <pieterh>	I want 2.1 to be clean
| [Monday 14 March 2011] [04:30:13] <sustrik>	sure, i don't care
| [Monday 14 March 2011] [04:30:15] <pieterh>	currently it has junk in it
| [Monday 14 March 2011] [04:30:20] <pieterh>	undocumented, bleh :-/
| [Monday 14 March 2011] [04:30:34] <pieterh>	these should have gone ages ago
| [Monday 14 March 2011] [04:30:45] <pieterh>	also I've restored the zmq_device(3) man page which seems essential
| [Monday 14 March 2011] [04:30:58] <pieterh>	lastly, having these devices in there gives them special weight they do not deserve
| [Monday 14 March 2011] [04:31:10] <pieterh>	and which contradicts developing *real* apps elsewhere
| [Monday 14 March 2011] [04:31:19] <pieterh>	finally, they are unmaintained
| [Monday 14 March 2011] [04:31:26] <pieterh>	and have survived several attempts at improvement
| [Monday 14 March 2011] [04:31:31] <pieterh>	which is inexcusable
| [Monday 14 March 2011] [04:31:33] <sustrik>	well, i would say that 2.1 should be called something else than stable then
| [Monday 14 March 2011] [04:31:41] <pieterh>	when unused code resists improvement, it has to be killed
| [Monday 14 March 2011] [04:31:50] <sustrik>	what about "iMatix enterprise distribution"?
| [Monday 14 March 2011] [04:31:54] <pieterh>	"stable and clean" if you prefer
| [Monday 14 March 2011] [04:32:14] <pieterh>	you focus on making the core, I'll take responsibility for clean packages, ok?
| [Monday 14 March 2011] [04:32:20] <sustrik>	sure
| [Monday 14 March 2011] [04:32:23] <pieterh>	thanks
| [Monday 14 March 2011] [04:32:55] <pieterh>	I note that both Jon Dyte and myself contributed documented, cleaned up improvements to those devices
| [Monday 14 March 2011] [04:33:01] <pieterh>	both times, rejected for no good reason
| [Monday 14 March 2011] [04:33:10] <pieterh>	this annoys me to a point you perhaps can't appreciate
| [Monday 14 March 2011] [04:33:14] <sustrik>	they are scheduled for removeal
| [Monday 14 March 2011] [04:33:16] <sustrik>	freezed
| [Monday 14 March 2011] [04:33:26] <pieterh>	bogus argument
| [Monday 14 March 2011] [04:33:36] <pieterh>	for the last 6 months?
| [Monday 14 March 2011] [04:33:40] <sustrik>	yes
| [Monday 14 March 2011] [04:33:41] <sustrik>	till 3.0
| [Monday 14 March 2011] [04:33:43] <pieterh>	lol
| [Monday 14 March 2011] [04:33:59] <pieterh>	I'm not even going to argue this
| [Monday 14 March 2011] [04:34:08] <pieterh>	you want a distribution with rubbish in it, make it
| [Monday 14 March 2011] [04:34:10] <sustrik>	well, if you want a stable stable you have to maintain it for 5+ years
| [Monday 14 March 2011] [04:34:20] <sustrik>	backward compatible
| [Monday 14 March 2011] [04:34:21] <pieterh>	I'm not interested in releasing crap
| [Monday 14 March 2011] [04:34:25] <pieterh>	no excuses
| [Monday 14 March 2011] [04:34:44] <pieterh>	and everything in the distribution must be maintained or documented, or removed
| [Monday 14 March 2011] [04:34:46] <sustrik>	maintaining crap is what "stable" means
| [Monday 14 March 2011] [04:34:46] <pieterh>	no excuses
| [Monday 14 March 2011] [04:34:56] <sustrik>	otherwise you are doing dev branch
| [Monday 14 March 2011] [04:35:11] <sustrik>	anyway, it's up to you
| [Monday 14 March 2011] [04:35:22] <pieterh>	no Martin, and with all due respect, maintaining releases over years is something I'm expert in, whereas you are not
| [Monday 14 March 2011] [04:35:56] <sustrik>	i don't really care
| [Monday 14 March 2011] [04:36:08] <pieterh>	then don't argue with me
| [Monday 14 March 2011] [04:36:09] <sustrik>	do it as you believe it's best
| [Monday 14 March 2011] [04:36:13] <pieterh>	I always do
| [Monday 14 March 2011] [04:36:15] <sustrik>	just warning you
| [Monday 14 March 2011] [04:36:24] <pieterh>	and I'm intensely interested in the opinions of real users
| [Monday 14 March 2011] [04:36:43] <pieterh>	but not interested in discussing "policies" that are unhelpful and arbitrary in this case
| [Monday 14 March 2011] [04:40:59] <pieterh>	again, if *anyone* here is actually using these device apps, please speak up
| [Monday 14 March 2011] [04:41:07] <pieterh>	I'll ask again on the ML before taking a final decision
| [Monday 14 March 2011] [04:41:46] <pieterh>	mikko: there's been some changes to the Wikidot API, so it broke
| [Monday 14 March 2011] [04:42:02] <pieterh>	if you're generating the api.zeromq.org it'll have stopped working
| [Monday 14 March 2011] [04:54:21] <guido_g>	pieterh: fig62.png seems to be missing
| [Monday 14 March 2011] [04:54:37] <pieterh>	guido_g: thanks, let me fix that
| [Monday 14 March 2011] [04:55:37] <guido_g>	and a feature request: is it possible to fold the code listings like the toc?
| [Monday 14 March 2011] [04:56:21] <pieterh>	guido_g: yes, it's a good idea
| [Monday 14 March 2011] [04:56:37] <pieterh>	I'm redesigning the whole code listing UI, will do this as part of that
| [Monday 14 March 2011] [04:56:40] <guido_g>	they're simply too large for the main text now
| [Monday 14 March 2011] [04:56:52] <pieterh>	yup, monsterous :-)
| [Monday 14 March 2011] [04:56:53] <guido_g>	great! thanks in advance
| [Monday 14 March 2011] [04:58:13] <pieterh>	guido_g: ok, the images should all be working now, may need a reload
| [Monday 14 March 2011] [04:58:35] <guido_g>	works now
| [Monday 14 March 2011] [04:58:40] <Guthur>	+1 for code folding
| [Monday 14 March 2011] [04:58:58] <guido_g>	:)
| [Monday 14 March 2011] [05:00:07] 	 * guido_g is going to do the chores first
| [Monday 14 March 2011] [05:21:48] <Guthur>	pieterh: 5 specifications within 13 days, that's quite a feat
| [Monday 14 March 2011] [07:28:08] <pieterh>	Guthur: ... am in meetings all day...
| [Monday 14 March 2011] [07:28:16] <pieterh>	making specifications is kind of a hobby of mine
| [Monday 14 March 2011] [07:28:29] <pieterh>	I think it's time to properly document the 0MQ wire protocols, all of them
| [Monday 14 March 2011] [07:28:38] <dermoth|home>	pieterh, i do - I run a pool of streamer devices
| [Monday 14 March 2011] [07:28:56] <pieterh>	dermoth|home: do you use the code from the repository or have you made your own versions?
| [Monday 14 March 2011] [07:30:47] <Guthur>	+1 on 0MQ wire protocols
| [Monday 14 March 2011] [07:30:47] <dermoth|home>	pieterh, not sure if we're talking about the same repo... i'm running the devices from the code zmq library, not the separate (newer) project. The goal is to flush asap the httpd workers asap to avoid loss when they crash/restart, and also simplify the configuration (everything connect to the same pool of "servers"
| [Monday 14 March 2011] [07:30:59] <Guthur>	better to get it done sooner rather than later in imo
| [Monday 14 March 2011] [07:31:07] <dermoth|home>	from the *core* library
| [Monday 14 March 2011] [08:24:12] <Guthur>	is there a minimum language version requirement for the python or perl binding
| [Monday 14 March 2011] [08:24:46] <private_meta>	Is the lack of a dedicated zmq::version call intended?
| [Monday 14 March 2011] [08:25:27] <Guthur>	also, how is 0MQ on solaris?
| [Monday 14 March 2011] [08:57:51] <Guthur>	re My solaris question; I notice the daily build is on solaris 10, anyone know if 0MQ is working on solaris 8
| [Monday 14 March 2011] [09:00:36] <Steve-o>	I wouldn't expect much unless you try G++ 
| [Monday 14 March 2011] [09:03:48] <Steve-o>	Wasn't it EOL a while ago?
| [Monday 14 March 2011] [09:04:56] <Steve-o>	Forte might be too old, but I think at least one of the Sun ONE Studio's runs on 8?
| [Monday 14 March 2011] [09:05:22] <Guthur>	Steve-o: Yeah we need to move soon
| [Monday 14 March 2011] [09:05:36] <private_meta>	pieterh: I know it's just a wrapper, but for uniformity it would be nice to have the zmq::version call in the C++ version
| [Monday 14 March 2011] [09:05:46] <Guthur>	I wish we could easily migrate to RH
| [Monday 14 March 2011] [09:05:59] <Guthur>	that's an option, but probably a painful one
| [Monday 14 March 2011] [09:07:03] <Steve-o>	Guthur: you actually using Solaris on x86/x64?
| [Monday 14 March 2011] [09:09:32] <Steve-o>	it's bad enough that studio 12 is still out-of-date, Google Protobufs doesn't work well with Sun's STL stack
| [Monday 14 March 2011] [11:15:31] <jstrom>	hm i sent an email to zeromq-dev a few hours ago, haven't showed up in archives yet.. any problems with mail delivery/bad spam detection?
| [Monday 14 March 2011] [11:15:40] <jstrom>	or is there moderation?
| [Monday 14 March 2011] [11:24:39] <private_meta>	jstrom: The last time I sent an email it showed up immediately, so I doubt there is moderation
| [Monday 14 March 2011] [11:25:03] <jstrom>	okey, wierd
| [Monday 14 March 2011] [11:25:12] <private_meta>	jstrom: and,I see an email by you in my mailbox
| [Monday 14 March 2011] [11:25:16] <jstrom>	Just signed up but that usually doenst make any difference in mailman..
| [Monday 14 March 2011] [11:25:18] <jstrom>	oh, okey
| [Monday 14 March 2011] [11:25:40] <private_meta>	depending on your time zone, 1[1|2]:36
| [Monday 14 March 2011] [11:25:48] <jstrom>	Guess its just the archive beeing slow then :) I opted for digest mail, so I didnt get the mail myself directly
| [Monday 14 March 2011] [11:25:53] <jstrom>	yep
| [Monday 14 March 2011] [11:27:12] <private_meta>	By the way, it's in the archive as well
| [Monday 14 March 2011] [11:28:45] <private_meta>	jstrom: I have no idea why, but apparently your mail, if sorted by Topic, was considered as a reply to "[zeromq-dev] Poll about linger and termination behaviour!"
| [Monday 14 March 2011] [11:29:17] <jstrom>	hah.. yeah, there I see it.. thats very wierd indeed.. the gmane archive has it correct though: http://news.gmane.org/gmane.network.zeromq.devel
| [Monday 14 March 2011] [12:34:07] <troutwine>	Aside from tunneling, what are my options for secure transmission? SSL is not natively supported, right?
| [Monday 14 March 2011] [12:42:33] <cremes>	troutwine: there are no built-in options for security
| [Monday 14 March 2011] [12:42:41] <cremes>	tunneling is probably the easiest solution at this point
| [Monday 14 March 2011] [12:42:55] <troutwine>	cremes: Tunneling is out of the question, sadly.
| [Monday 14 March 2011] [12:42:57] <cremes>	you might want to search the mailing list archives for this question; it has come up a few times
| [Monday 14 March 2011] [12:43:08] <cremes>	and there might be a solution for you listed there
| [Monday 14 March 2011] [12:43:16] <troutwine>	cremes: I did, but didn't find anything terribly promising. 
| [Monday 14 March 2011] [12:43:34] <cremes>	too bad... perhaps you could try asking again and describe your use-case
| [Monday 14 March 2011] [12:43:56] <cremes>	maybe someone has come up with a clever solution and is waiting for someone to ask about it before sharing :)
| [Monday 14 March 2011] [12:44:29] <troutwine>	cremes: Maybe. Thanks.
| [Monday 14 March 2011] [12:44:33] <nadime>	it wouldn't be terribly hard to write your own ZMQ-SSL wrapper
| [Monday 14 March 2011] [12:44:47] <nadime>	someone may have done so, and just not released it
| [Monday 14 March 2011] [12:45:30] <nadime>	cremes -- question for you
| [Monday 14 March 2011] [12:45:39] <cremes>	nadime: shoot
| [Monday 14 March 2011] [12:46:02] <troutwine>	nadime: I think that's what I'm going to do, but I know squat about SSL implementations, or really about ZMQ internals. Any pointers?
| [Monday 14 March 2011] [12:47:08] <nadime>	i don't think you need to know anything about zmq internals
| [Monday 14 March 2011] [12:47:17] <nadime>	but you do need to look at a few SSL implementations probably
| [Monday 14 March 2011] [12:47:40] <nadime>	you basically want to create a message class where you're encrypting the dataload
| [Monday 14 March 2011] [12:47:51] <nadime>	you can do something much simpler than a full implementation
| [Monday 14 March 2011] [12:47:53] <cremes>	i recommend looking at this UML diagram for a "taste" of the 0mq internals
| [Monday 14 March 2011] [12:47:53] <cremes>	https://github.com/thijsterlouw/zeromq2-uml
| [Monday 14 March 2011] [12:48:31] <nadime>	cremes - for high I/O throughput scenarios, is it basically recommended to have 1 input and 1 output thread (or N input/output) to avoid using a poller?
| [Monday 14 March 2011] [12:48:54] <nadime>	the zmq implementation of poll seems incredibly slow, it was what was causing my i/o bottleneck yesterday
| [Monday 14 March 2011] [12:50:49] <nadime>	troutwine -- how scalable do you need your solution to be?
| [Monday 14 March 2011] [12:51:32] <nadime>	cremes - sorry, that was unclear.  i'm asking -- is it recommended to never use zmq_poll for high throughput
| [Monday 14 March 2011] [12:51:52] <troutwine>	nadime: A few thousand concurrent clients; not terribly.
| [Monday 14 March 2011] [12:52:13] <cremes>	nadime: it's hard to say; are you using zmq_poll with a timeout or do you use it to block?
| [Monday 14 March 2011] [12:52:36] <nadime>	either, both are slow
| [Monday 14 March 2011] [12:53:06] <cremes>	nadime: interesting; i don't think anyone has done any real benchmarks in this area
| [Monday 14 March 2011] [12:53:10] <nadime>	i was running about 500k msgs/s, avg. 50B msgs, so about 25MB
| [Monday 14 March 2011] [12:53:31] <nadime>	and i was falling behind because of a poll (with either block or timeout, tried both)
| [Monday 14 March 2011] [12:53:42] <nadime>	so i was pushing 500k until i hit the poll, then only getting about 100k/s
| [Monday 14 March 2011] [12:53:50] <cremes>	you only had a handful of sockets, right? like 4 or 5 of them?
| [Monday 14 March 2011] [12:53:51] <nadime>	and my app was blowing up because of the buffering
| [Monday 14 March 2011] [12:53:56] <nadime>	yep
| [Monday 14 March 2011] [12:54:02] <cremes>	wow, that's terrible
| [Monday 14 March 2011] [12:54:14] <nadime>	the memcpy was killing me
| [Monday 14 March 2011] [12:54:25] <cremes>	any chance you could open an issue illustrating this problem?
| [Monday 14 March 2011] [12:54:30] <nadime>	i'm on win7, so i think zmq_poll uses select()
| [Monday 14 March 2011] [12:54:48] <cremes>	ah... windows
| [Monday 14 March 2011] [12:54:48] <nadime>	sure in a day or two, i can probably make an example case pretty quickly
| [Monday 14 March 2011] [12:55:04] <cremes>	windows has probably gotten the least attention out of all of the platforms
| [Monday 14 March 2011] [12:55:05] <troutwine>	nadime: Limited by human latency, I'd guess each client is going to push one message a half-second. So a few thousand sockets, 4,000 msgs/s. 
| [Monday 14 March 2011] [12:55:11] <troutwine>	nadime: Why do you ask?
| [Monday 14 March 2011] [12:55:25] <cremes>	the 0mq project doesn't have a lot of windows-savvy devs working on it yet; there are a few but progress is slow
| [Monday 14 March 2011] [12:55:32] <nadime>	worried about key exchange, troutwine
| [Monday 14 March 2011] [12:55:37] <nadime>	not throughput
| [Monday 14 March 2011] [12:56:03] <nadime>	you should basically look up how SSL handles key exchange, once you have keys on both sides, it's really easy to use ZMQ to do secure xfer
| [Monday 14 March 2011] [12:56:18] <cremes>	nadime: you might want to ping Guthur and ask him about his work on using windows-native-api poll stuff
| [Monday 14 March 2011] [12:56:34] <troutwine>	nadime: I'm reading up on SSL now. Clearly I know nothing about it. 
| [Monday 14 March 2011] [12:57:17] <nadime>	thanks, i will do that
| [Monday 14 March 2011] [12:57:30] <nadime>	i was planning on taking a look at the implementation when i have a sec, gotta finish this project though
| [Monday 14 March 2011] [12:57:39] <nadime>	but if he's already working on it, maybe we can team up
| [Monday 14 March 2011] [12:57:51] <cremes>	nadime: good idea; i'm sure he would appreciate a hand
| [Monday 14 March 2011] [12:58:05] <cremes>	nadime: his focus is on getting ipc transport working on windows
| [Monday 14 March 2011] [12:58:21] <cremes>	but that stuff is all tied in with polling for events and handling i/o completion
| [Monday 14 March 2011] [12:58:27] <nadime>	ah, well i don't care about that, but happy to help re: poll implementation ;)
| [Monday 14 March 2011] [12:58:47] <cremes>	i think a solution for both pretty much go hand in hand
| [Monday 14 March 2011] [12:58:58] <nadime>	gotcha
| [Monday 14 March 2011] [12:59:01] <cremes>	based on what Guthur was posting here last week and the week before
| [Monday 14 March 2011] [12:59:09] <nadime>	he wants to do ipc using files?
| [Monday 14 March 2011] [12:59:21] <nadime>	and the windows poll implementationc an't handle sockets and files?
| [Monday 14 March 2011] [12:59:55] <cremes>	nadime: it's best just to ask him; he can explain it with the minimum amount of confusion (that i might add if i try)
| [Monday 14 March 2011] [13:00:11] <nadime>	k
| [Monday 14 March 2011] [13:00:40] <Guthur>	did I hear my name, hehe
| [Monday 14 March 2011] [13:00:49] <cremes>	Guthur: you did!
| [Monday 14 March 2011] [13:00:59] <nadime>	you did -- cremes was just asking me to ping you about your work on windows zmq_poll implementation
| [Monday 14 March 2011] [13:01:03] <cremes>	nadime has noticed that zmq_poll() sucks donkey on windows
| [Monday 14 March 2011] [13:01:31] <Guthur>	it's a 'feature'
| [Monday 14 March 2011] [13:01:40] <Guthur>	windows comes with extra donkeys for just such cases
| [Monday 14 March 2011] [13:01:45] <nadime>	haha
| [Monday 14 March 2011] [13:02:08] <Guthur>	but yeah, we really need to look at getting IOCP
| [Monday 14 March 2011] [13:02:29] <Guthur>	or possibly, at the very least, WSA_POLL (I think thats the name)
| [Monday 14 March 2011] [13:02:44] <nadime>	what is zmq_poll implemented using right now? select()?
| [Monday 14 March 2011] [13:02:53] <Guthur>	IOCP would be the bigger win because it would give IPC
| [Monday 14 March 2011] [13:03:02] <Guthur>	nadime: I believe so
| [Monday 14 March 2011] [13:03:23] <Guthur>	It only does TCP though
| [Monday 14 March 2011] [13:03:41] <Guthur>	Select doesn't support named pipes unfortunately
| [Monday 14 March 2011] [13:03:53] <cremes>	nadime, Guthur: i'll leave you two windows experts to hash things out :)
| [Monday 14 March 2011] [13:03:55] <nadime>	and i take it wsa_poll doesn't either
| [Monday 14 March 2011] [13:04:13] <Guthur>	nadime: As far as I am aware, nope
| [Monday 14 March 2011] [13:05:03] <nadime>	IOPC looks pretty nifty
| [Monday 14 March 2011] [13:05:41] <Guthur>	I think the only realistic option for named pipes is IOCP or WaitForMultipleObjects
| [Monday 14 March 2011] [13:05:43] <nadime>	would eliminate the need to memcpy the fd list for in, out, err every cycle which is i think what slows down the poller on high throughput
| [Monday 14 March 2011] [13:05:49] <Guthur>	IOCP is pretty sweet
| [Monday 14 March 2011] [13:06:26] <Guthur>	but it doesn't naturally fit into the 0MQ engine as is, afaik
| [Monday 14 March 2011] [13:07:01] <Guthur>	it will require an abstraction layer over named pipes and IOCP 
| [Monday 14 March 2011] [13:07:44] <Guthur>	I think it's due to the fact that 0MQ needs some state reflection which IOCP doesn't cover, sustrik is the man to talk to for 0MQs needs though
| [Monday 14 March 2011] [13:07:47] <nadime>	it looks like it will actually need to loop over all requested sockets/pipes instead of operating like select()
| [Monday 14 March 2011] [13:08:11] <nadime>	nm
| [Monday 14 March 2011] [13:08:56] <Guthur>	sorry I need to go, but i'll be back in an hour or so
| [Monday 14 March 2011] [13:18:17] <private_meta>	github is amazingly stupid
| [Monday 14 March 2011] [13:18:28] <private_meta>	my account doesn't work, I can't log in
| [Monday 14 March 2011] [13:18:35] <private_meta>	they're sending me to the support page
| [Monday 14 March 2011] [13:18:41] <private_meta>	which you can only access when you're logged in
| [Monday 14 March 2011] [13:20:27] <michelp>	morning/afternoon/evening everybody
| [Monday 14 March 2011] [13:21:30] <private_meta>	pieterh: If you don't mind adding that in a future release, add this to zmq.hpp: https://gist.github.com/94ced4a644021248f4d7 <- just for unifying the c++ binding and for not having to use C calls
| [Monday 14 March 2011] [13:22:16] <private_meta>	pieterh: I don't want to clone the entire thing just to get a patch for that if you don't mind
| [Monday 14 March 2011] [13:22:28] <guido_g>	you know how to submit patches
| [Monday 14 March 2011] [13:22:41] <guido_g>	there is *a lot* of information missing
| [Monday 14 March 2011] [13:23:04] <private_meta>	Ok, then leave it out
| [Monday 14 March 2011] [13:44:23] <pieterh>	re
| [Monday 14 March 2011] [13:44:27] <pieterh>	sorry, am in meetings all day
| [Monday 14 March 2011] [13:44:46] <pieterh>	private_meta: patches need to follow contribution policy
| [Monday 14 March 2011] [13:45:25] <private_meta>	So i need to go through all that (imho annoying) stuff to see a 1 line method in there?
| [Monday 14 March 2011] [13:45:35] <pieterh>	private_meta: wrt to github are you trying to login with an organization id? 
| [Monday 14 March 2011] [13:45:45] <pieterh>	private_meta: yes, even for a 1-line patch, sorry
| [Monday 14 March 2011] [13:45:57] <pieterh>	well, perhaps I can make the change, hang on...
| [Monday 14 March 2011] [13:47:23] <private_meta>	Working on zguid I'm doing multiple changes, and I understand that a patch is necessary
| [Monday 14 March 2011] [13:47:26] <pieterh>	private_meta: I'll make that change myself, and send a patch to martin, tomorrow
| [Monday 14 March 2011] [13:47:28] <private_meta>	a *patch
| [Monday 14 March 2011] [13:47:46] <pieterh>	i'll get all the credit for it, be warned
| [Monday 14 March 2011] [13:47:55] 	 * pieterh is going to tweet how he fixed the version method!
| [Monday 14 March 2011] [13:47:57] <pieterh>	:-)
| [Monday 14 March 2011] [13:47:59] <private_meta>	sure, I don't need the credit anyway
| [Monday 14 March 2011] [13:48:17] <pieterh>	it's kind of a joke, credit for a 1-line method
| [Monday 14 March 2011] [13:48:24] <private_meta>	ik
| [Monday 14 March 2011] [13:48:27] <private_meta>	I mean creadit there in general
| [Monday 14 March 2011] [13:48:30] <private_meta>	*credit
| [Monday 14 March 2011] [13:48:35] <pieterh>	it's more about blame than credit
| [Monday 14 March 2011] [13:48:43] <pieterh>	ok, have to flee, cyl
| [Monday 14 March 2011] [13:48:47] <private_meta>	thanks
| [Monday 14 March 2011] [14:10:04] <nadime>	anyone know: what's the behavior of the io threads f you set socket affinities to threads out of range, e.g. you have 1 io thread but you set a socket's affinity to 8
| [Monday 14 March 2011] [14:45:25] <loxs>	hi folks, jus saw Zed's talk on 0mq at PyCon and there I saw him saying it's not a good idea to put it on the internet...
| [Monday 14 March 2011] [14:45:44] <loxs>	uhm, it kind looks really promising for things like game networking
| [Monday 14 March 2011] [14:46:32] <loxs>	so, are there any plans to make suitable to work on the internet?
| [Monday 14 March 2011] [14:50:44] <loxs>	Zed said "they are working on it", but what does this mean?
| [Monday 14 March 2011] [14:53:39] <cremes>	loxs: you need to remember the context in which zed said that
| [Monday 14 March 2011] [14:53:51] <cremes>	he likes to 'fuzz' all of his projects (send random data to them)
| [Monday 14 March 2011] [14:54:05] <cremes>	he noted that 0mq still has assertions that will trigger when bad data is received on the port
| [Monday 14 March 2011] [14:54:24] <cremes>	so a perfect DOS attack would be to send random data to a 0mq socket and crash the lib
| [Monday 14 March 2011] [14:54:42] <cremes>	the 0mq guys are 'working on it' in the sense that they are slowly but surely removing those assertions
| [Monday 14 March 2011] [14:54:53] <cremes>	and fixing the library's behavior in the face of bad data
| [Monday 14 March 2011] [15:01:55] <michelp>	if you can handle the overhead of it openvpn might be a good solution to securing a 0mq network over the internet
| [Monday 14 March 2011] [15:02:11] <michelp>	i hear some game networks are using it successfully
| [Monday 14 March 2011] [15:02:38] <michelp>	it also lets you do things like revoke access to rogue clients
| [Monday 14 March 2011] [15:03:29] 	 * michelp is anxious to get some time to queue up zed's talk
| [Monday 14 March 2011] [15:04:16] <cremes>	zed's talk was only "okay"; due to time pressures he touched so lightly on 85% of the important stuff
| [Monday 14 March 2011] [15:04:34] <cremes>	that unless you were already a 0mq practitioner i doubt the audience got much out of it
| [Monday 14 March 2011] [15:06:32] <loxs>	well, I didn't, but the idea of "one messaging system to rull them all" started some bells in my head :)
| [Monday 14 March 2011] [15:07:29] <loxs>	michelp, well, it's not an option if you don't trust the client (if it's a game, people will try to do all kinds of hacks to cheat the game)
| [Monday 14 March 2011] [15:07:59] <loxs>	michelp, which game networks use zeromq?
| [Monday 14 March 2011] [15:09:43] <michelp>	loxs, i don't know, just something i read while i was cruising through google setting up my own private vpn
| [Monday 14 March 2011] [15:12:46] <mikko>	sustrik: tested and works
| [Monday 14 March 2011] [15:16:10] <michelp>	loxs, sorry i misread your question, i meant some game networks are using openvpn, not 0mq
| [Monday 14 March 2011] [15:16:13] <michelp>	based on what i read only, not on any direct knowledge
| [Monday 14 March 2011] [15:17:07] <michelp>	my suggestion was that if you were going to use 0mq over the internet, using it on a vpn might be a good approach to avoid fuzz hacks on an open port
| [Monday 14 March 2011] [15:18:13] <loxs>	I see. Yep, you are right
| [Monday 14 March 2011] [15:19:00] <loxs>	but it would be really cool if you could use zeromq directly for client server communication
| [Monday 14 March 2011] [15:19:57] <sustrik>	mikko: thx
| [Monday 14 March 2011] [15:30:08] <CIA-103>	zeromq2: 03Martin Sustrik 07master * rf987f4b 10/ src/pgm_receiver.cpp : 
| [Monday 14 March 2011] [15:30:08] <CIA-103>	zeromq2: FreeBSD complation error fixed
| [Monday 14 March 2011] [15:30:08] <CIA-103>	zeromq2: There was an error in pgm_receiver wrt strict aliasing.
| [Monday 14 March 2011] [15:30:08] <CIA-103>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/ecz5VG
| [Monday 14 March 2011] [15:34:57] <andrewvc>	cremes: around?
| [Monday 14 March 2011] [15:37:54] <cremes>	andrewvc: for about 20m
| [Monday 14 March 2011] [15:38:02] <andrewvc>	a couple things
| [Monday 14 March 2011] [15:38:11] <andrewvc>	1: you know the deal with all the finalizer errors on the specs
| [Monday 14 March 2011] [15:38:23] <andrewvc>	also, I added a zdevice branch to ffi-rzmq with a new ZMQ::Device class
| [Monday 14 March 2011] [15:39:17] <mikko>	sustrik: i'm confused
| [Monday 14 March 2011] [15:39:59] <mikko>	sustrik: do fixes go first to zeromq2 or zeromq2-1 repo?
| [Monday 14 March 2011] [15:46:34] <cremes>	andrewvc: i'll take a look at the zdevice branch tonight/tomorrow and give you feedback if anything pops
| [Monday 14 March 2011] [15:46:50] <andrewvc>	cool
| [Monday 14 March 2011] [15:46:53] <cremes>	however, i'm not sure what you mean about finalizer errors; i'm not getting any
| [Monday 14 March 2011] [15:47:09] <cremes>	can you pastie the errors you see? (i might have fixed 'em and forgot to push them)
| [Monday 14 March 2011] [15:47:12] <andrewvc>	sure
| [Monday 14 March 2011] [15:47:13] <andrewvc>	one sec
| [Monday 14 March 2011] [15:51:01] <andrewvc>	cremes: https://gist.github.com/869738
| [Monday 14 March 2011] [15:51:20] <andrewvc>	actually, there's a variety of errors
| [Monday 14 March 2011] [15:51:37] <andrewvc>	that's on rbx
| [Monday 14 March 2011] [15:52:16] <cremes>	huh
| [Monday 14 March 2011] [15:52:29] <cremes>	i don't get those under mri; i'll try under rbx and get them patched up
| [Monday 14 March 2011] [15:52:42] <cremes>	looks like we found another hole in rbx's ffi support
| [Monday 14 March 2011] [15:57:50] <andrewvc>	interesting
| [Monday 14 March 2011] [15:59:29] <sustrik>	mikko: i'm maintaining master (zeromq2)
| [Monday 14 March 2011] [16:00:39] <sustrik>	pieter volunteered to do stable releases
| [Monday 14 March 2011] [16:01:13] <sustrik>	so he should decide on the process for zeromq2-1
| [Monday 14 March 2011] [16:02:36] <mikko>	sustrik: so they should be treated as separate projects?
| [Monday 14 March 2011] [16:04:40] <sustrik>	you should ask pieter
| [Monday 14 March 2011] [16:05:03] <sustrik>	my understanding of stable is maintaining the backward compatibility while backporting patches
| [Monday 14 March 2011] [16:05:37] <mikko>	i shall ask him when we meet
| [Monday 14 March 2011] [16:05:43] <sustrik>	ok
| [Monday 14 March 2011] [16:07:09] <mikko>	sustrik: where is subscription forwarding going on?
| [Monday 14 March 2011] [16:07:15] <mikko>	is it stable?
| [Monday 14 March 2011] [16:07:26] <sustrik>	mikko: it's still on a branch
| [Monday 14 March 2011] [16:07:33] <sustrik>	not finished yet
| [Monday 14 March 2011] [16:07:37] <mikko>	ok
| [Monday 14 March 2011] [16:07:58] <sustrik>	then it'll go to master obviously
| [Monday 14 March 2011] [16:08:04] <sustrik>	not sure about stables
| [Monday 14 March 2011] [16:08:19] <mikko>	it crossed my mind yesterday
| [Monday 14 March 2011] [16:08:27] <mikko>	was writing a small utility that uses pub/sub sockets
| [Monday 14 March 2011] [16:08:40] <mikko>	so, next i need to get pieterh to merge the freebsd pgm build fix
| [Monday 14 March 2011] [16:08:54] <mikko>	and test steve's upstream changes 
| [Monday 14 March 2011] [16:08:55] <sustrik>	he'll do i so, i think
| [Monday 14 March 2011] [16:09:15] <sustrik>	ack
| [Monday 14 March 2011] [19:42:26] <Guthur>	any suggestions on why i might get a phantom POLLIN event
| [Monday 14 March 2011] [19:44:09] <Guthur>	oh wait nvm, something more fundamentally wrong with my code
| [Monday 14 March 2011] [19:47:03] <Guthur>	yep I was being a silly programmer
| [Monday 14 March 2011] [23:40:48] <michelp>	has anyone yet in the community explored distributed shared memory stores in python over 0mq?
| [Monday 14 March 2011] [23:41:15] <michelp>	thinking in terms of doing transactional changes to objects that get propagated to N nodes
| [Monday 14 March 2011] [23:43:58] <michelp>	it's something i've always taken an interest in, but the problem of distributing changes to threads, processes, and boxes uniformly has stumped me
| [Tuesday 15 March 2011] [04:46:06] <guido_g>	good morning
| [Tuesday 15 March 2011] [05:20:35] <sustrik>	morning
| [Tuesday 15 March 2011] [05:28:34] <Evet>	morning
| [Tuesday 15 March 2011] [05:29:10] <gambi>	morning :)
| [Tuesday 15 March 2011] [05:44:33] <pieter_hintjens>	g'morning
| [Tuesday 15 March 2011] [06:31:06] <private_meta>	sustrik: mind i talk to you about it outside the mailing lisT?
| [Tuesday 15 March 2011] [06:31:08] <private_meta>	*list
| [Tuesday 15 March 2011] [06:31:29] <private_meta>	sustrik: the zmq::version i mean
| [Tuesday 15 March 2011] [06:39:31] <sustrik>	sure
| [Tuesday 15 March 2011] [06:39:33] <sustrik>	what's up?
| [Tuesday 15 March 2011] [06:41:29] <private_meta>	about the pointer vs reference thing
| [Tuesday 15 March 2011] [06:42:07] <private_meta>	imho the only valid reason to use that would be to be coherent with the other function prototypes
| [Tuesday 15 March 2011] [06:44:03] <sustrik>	right
| [Tuesday 15 March 2011] [06:44:08] <sustrik>	it's a matter of style
| [Tuesday 15 March 2011] [06:44:20] <private_meta>	Bad style, according to a lot of people
| [Tuesday 15 March 2011] [06:44:32] <sustrik>	sure
| [Tuesday 15 March 2011] [06:44:46] <sustrik>	the point is that it's the style that C++ API uses now
| [Tuesday 15 March 2011] [06:44:52] <sustrik>	you can fork and restyle it
| [Tuesday 15 March 2011] [06:46:13] <private_meta>	Wouldn't really help anyway
| [Tuesday 15 March 2011] [06:46:56] <sustrik>	the thing with the style is you have to decide on it once and then keep it
| [Tuesday 15 March 2011] [06:47:04] <sustrik>	some may consider it ugly
| [Tuesday 15 March 2011] [06:47:13] <sustrik>	but that's how it goes
| [Tuesday 15 March 2011] [06:48:52] <private_meta>	hmm... it's just nowhere near defensive programming, maybe that's what bothers me, I was taught to do that over and over
| [Tuesday 15 March 2011] [06:49:30] <sustrik>	shrug
| [Tuesday 15 March 2011] [06:49:34] <sustrik>	you can fork it
| [Tuesday 15 March 2011] [06:50:03] <sustrik>	breaking backward comatibility because of styling issues is not worth it
| [Tuesday 15 March 2011] [06:50:33] <private_meta>	Yeah, but as I said, it wouldn't really help, and I would break my own compatibility
| [Tuesday 15 March 2011] [06:50:39] <private_meta>	It's not worth it
| [Tuesday 15 March 2011] [06:50:43] <sustrik>	ack
| [Tuesday 15 March 2011] [06:53:23] <private_meta>	well ok, even if I'm not quite agree with the reasoning, I can't change it anyway (and no, changing it by forking isn't what I call a helpful solution)
| [Tuesday 15 March 2011] [06:54:21] <sustrik>	would you prefer breaking everyone's applications instead?
| [Tuesday 15 March 2011] [06:54:33] <private_meta>	That's why I said I can't change it
| [Tuesday 15 March 2011] [06:54:37] <sustrik>	exactly
| [Tuesday 15 March 2011] [06:54:42] <sustrik>	nothing to do here
| [Tuesday 15 March 2011] [06:54:51] <private_meta>	"Go on, nothing to see"
| [Tuesday 15 March 2011] [06:54:56] <sustrik>	:)
| [Tuesday 15 March 2011] [06:55:27] <private_meta>	"Change what you can't accept, accept what you can't change" <-- accepting can be hard
| [Tuesday 15 March 2011] [07:38:38] <pieter_hintjens>	consistency is more important than accuracy in some cases
| [Tuesday 15 March 2011] [07:41:33] <pieter_hintjens>	private_meta: actually, it would be possible to change the C++ style for 3.0
| [Tuesday 15 March 2011] [07:58:51] <private_meta>	pieter_hintjens: ad consistency, I understand
| [Tuesday 15 March 2011] [07:59:04] <private_meta>	pieter_hintjens: ad 3.0, do you not plan backwards compatibility for 3.0?
| [Tuesday 15 March 2011] [08:11:41] <CIA-103>	zeromq2: 03Martin Sustrik 07master * r7045a4a 10/ (src/named_session.cpp src/named_session.hpp): 
| [Tuesday 15 March 2011] [08:11:41] <CIA-103>	zeromq2: Dead code removed from named_session.cpp
| [Tuesday 15 March 2011] [08:11:41] <CIA-103>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/fkOsT0
| [Tuesday 15 March 2011] [09:19:23] <Evet>	sustrik: have you benchmarked zeromq on debian-kfreebsd?
| [Tuesday 15 March 2011] [09:24:17] <sustrik>	Evet: no
| [Tuesday 15 March 2011] [09:24:18] <sustrik>	did you?
| [Tuesday 15 March 2011] [09:27:58] <Evet>	sustrik: downloading it now
| [Tuesday 15 March 2011] [09:28:57] <Evet>	it seems an interesting project
| [Tuesday 15 March 2011] [09:34:07] <sustrik>	yes
| [Tuesday 15 March 2011] [09:34:31] <sustrik>	have a look at http://www.zeromq.org/area:results
| [Tuesday 15 March 2011] [09:34:48] <sustrik>	if you get any numbers we can post the results on the website
| [Tuesday 15 March 2011] [10:06:57] <private_meta>	pieter_hintjens: What might be nice (and not too much work) for the guide, imho, would be a small example output of your code. 1) for those who go through the code to make sure they understood it right without running it 2) for those who want to translate to see a rough outline what the intended result is
| [Tuesday 15 March 2011] [10:32:04] <private_meta>	actually, overloading the C++ binding with by reference methods would be a good way to add the by reference functionality without breaking backwards compatibility
| [Tuesday 15 March 2011] [10:35:36] <pieter_hintjens>	private_meta: back, sorry, in meetings all day...
| [Tuesday 15 March 2011] [10:35:48] <pieter_hintjens>	actually you can make a new C++ binding at any time at all
| [Tuesday 15 March 2011] [10:35:50] <private_meta>	np, IRC is a patient protocol
| [Tuesday 15 March 2011] [10:36:06] <pieter_hintjens>	just as we have improvements to the other language bindings, orthogonally to 0MQ releases
| [Tuesday 15 March 2011] [10:37:12] <pieter_hintjens>	re the guide, yes, this is a good idea, I've done it in a few places but not systematically
| [Tuesday 15 March 2011] [10:38:28] <Evet>	do you think something like mongrel2 for xitami?
| [Tuesday 15 March 2011] [10:39:48] <pieter_hintjens>	Evet: xitami is dead, for several reasons
| [Tuesday 15 March 2011] [10:40:04] <pieter_hintjens>	i'm not sure what your question is... :-)
| [Tuesday 15 March 2011] [10:41:46] <Evet>	oh, xitami was my very first webserver
| [Tuesday 15 March 2011] [10:41:59] <Evet>	i have learnt perl on it :)
| [Tuesday 15 March 2011] [10:43:14] <private_meta>	pieter_hintjens: sorry for being slow and only arriving at the paranoid pirate pattern now, but I have a small question there. According to Figure 59 of the guide, the Lazy Pirate Client, the Paranoid Pirate Queue and the Paranoid Pirate Worker run at the same time, am I correct?
| [Tuesday 15 March 2011] [10:43:35] <pieter_hintjens>	yes, that's right
| [Tuesday 15 March 2011] [10:44:29] <pieter_hintjens>	I made them as three processes, rather than three threads in one process, so you can stop and start them independently
| [Tuesday 15 March 2011] [10:44:34] <private_meta>	So, I seem to be doing something wrong. I run ppqueue, then I run ppworker and I get an "Address already in use" error for the lpserver (which ought to run 2nd)
| [Tuesday 15 March 2011] [10:45:31] <private_meta>	ah wait
| [Tuesday 15 March 2011] [10:45:34] <pieter_hintjens>	you don't want to run lpserver
| [Tuesday 15 March 2011] [10:45:39] <private_meta>	i just realized that
| [Tuesday 15 March 2011] [10:45:40] <private_meta>	stupid me
| [Tuesday 15 March 2011] [10:45:48] <private_meta>	I wanted lpclient and ran lpserver
| [Tuesday 15 March 2011] [10:45:51] <pieter_hintjens>	it's not as simple as it could be...
| [Tuesday 15 March 2011] [10:45:51] <private_meta>	>_<
| [Tuesday 15 March 2011] [10:46:06] <private_meta>	argh
| [Tuesday 15 March 2011] [10:46:26] <private_meta>	I'm looking through it and thinking and thinking and I don't realize I use the wrong one
| [Tuesday 15 March 2011] [10:46:31] <private_meta>	lemme see
| [Tuesday 15 March 2011] [10:47:40] <private_meta>	Sorry for bothering you :/
| [Tuesday 15 March 2011] [10:48:18] <sustrik>	guys, an idea: what about factoring the C++ binding out of 0mq core in 3.0?
| [Tuesday 15 March 2011] [10:48:53] <yrashk>	sustrik: ....and merging erlzmq2 in :D haha, kidding, sorry
| [Tuesday 15 March 2011] [10:49:19] <sustrik>	well, i mean, all the other bindings are separate projects, why should c++ differ
| [Tuesday 15 March 2011] [10:50:58] <yrashk>	yeah, it makes some sense
| [Tuesday 15 March 2011] [10:51:17] <yrashk>	although I am ok with c++ binding living in there
| [Tuesday 15 March 2011] [10:51:21] <guido_g>	good idea
| [Tuesday 15 March 2011] [10:51:58] <sustrik>	the downside is that it ties the C++ binding to the core too much
| [Tuesday 15 March 2011] [10:52:23] <sustrik>	so there's little space for alternative implementations
| [Tuesday 15 March 2011] [10:52:40] <sustrik>	binding-only releases (without dragging the core along)
| [Tuesday 15 March 2011] [10:52:43] <sustrik>	etc.
| [Tuesday 15 March 2011] [10:54:01] <yrashk>	sustrik: I'd vote for keeping c++ binding
| [Tuesday 15 March 2011] [10:54:59] <pieter_hintjens>	sustrik: that was the idea, forking it out, but it needs to be folded back in for a real distribution
| [Tuesday 15 March 2011] [10:55:18] <sustrik>	sure, same as other bindings
| [Tuesday 15 March 2011] [10:55:24] <pieter_hintjens>	exactly the same
| [Tuesday 15 March 2011] [10:55:41] <pieter_hintjens>	makes it much easier to contribute to, improve, etc.
| [Tuesday 15 March 2011] [10:55:49] <sustrik>	ack
| [Tuesday 15 March 2011] [10:55:57] <sustrik>	i am +1 myself
| [Tuesday 15 March 2011] [10:56:08] <pieter_hintjens>	I'm +1 for making it consistent with other languages
| [Tuesday 15 March 2011] [10:56:08] <sustrik>	so far 3 +1's and a single -1
| [Tuesday 15 March 2011] [10:56:44] <pieter_hintjens>	in any case I want to explore how to make packages that include the popular bindings
| [Tuesday 15 March 2011] [10:57:06] <sustrik>	that's something i am wondering about for a long time
| [Tuesday 15 March 2011] [10:57:28] <sustrik>	core + java + ruby + python + .net
| [Tuesday 15 March 2011] [10:57:34] <pieter_hintjens>	the languages are: C++, C#, clisp, Java, Perl, PHP, Python, Ruby
| [Tuesday 15 March 2011] [10:57:47] <pieter_hintjens>	going by the % of translations of the guide examples
| [Tuesday 15 March 2011] [10:58:08] <sustrik>	ack
| [Tuesday 15 March 2011] [10:58:13] <mato>	pieter_hintjens: you'll want to keep in mind that $LANGUAGE generally has it's own way of distributing extensions...
| [Tuesday 15 March 2011] [10:58:23] <pieter_hintjens>	mato: indeed, this is the fun part
| [Tuesday 15 March 2011] [10:58:30] <mato>	pieter_hintjens: e.g. Perl -> CPAN, Ruby -> gem, etc.
| [Tuesday 15 March 2011] [10:58:43] <pieter_hintjens>	exactl
| [Tuesday 15 March 2011] [10:58:47] <pieter_hintjens>	y
| [Tuesday 15 March 2011] [10:58:58] <sustrik>	and on win32 people expect monolithic installer, i would say
| [Tuesday 15 March 2011] [10:59:02] <mato>	then you have the linux distribution people packaging stuff on top of that separately
| [Tuesday 15 March 2011] [10:59:26] <pieter_hintjens>	so Windows is the easiest case, in many ways
| [Tuesday 15 March 2011] [11:00:47] <pieterh>	the process can't replace existing $LANGUAGE distribution processes but it can automate them
| [Tuesday 15 March 2011] [11:01:58] <pieterh>	i'll spend some time studying this and make a few proposals
| [Tuesday 15 March 2011] [11:02:18] <pieterh>	it probably will need cooperation from binding authors / communities to make work well
| [Tuesday 15 March 2011] [11:02:27] <sustrik>	that will be useful
| [Tuesday 15 March 2011] [11:02:37] <pieterh>	ok
| [Tuesday 15 March 2011] [11:04:06] <pieterh>	sustrik: the poll for zmq_term is tied afaics, 4/4
| [Tuesday 15 March 2011] [11:04:51] <pieterh>	there was one vote for infinity here on irc afair
| [Tuesday 15 March 2011] [11:06:07] <Guthur>	+1 the extraction of C++ from core
| [Tuesday 15 March 2011] [11:06:21] <Guthur>	+1 for extraction of C++ from the world
| [Tuesday 15 March 2011] [11:06:29] <sustrik>	:)
| [Tuesday 15 March 2011] [11:06:50] <sustrik>	pieterh: let's wait couple of days more
| [Tuesday 15 March 2011] [11:07:08] <pieterh>	I do want to close the 2.1 release
| [Tuesday 15 March 2011] [11:07:22] <pieterh>	there is not sufficient mandate afaics to revert the behavior
| [Tuesday 15 March 2011] [11:07:40] <sustrik>	looks like
| [Tuesday 15 March 2011] [11:07:47] <sustrik>	let's go for current solution then
| [Tuesday 15 March 2011] [11:08:15] <pieterh>	well, this saves me a lot of work in the Guide, but I have this sinking feeling about it
| [Tuesday 15 March 2011] [11:08:30] <pieterh>	these semantics won't change again in 3.0, right?
| [Tuesday 15 March 2011] [11:08:46] <sustrik>	nope
| [Tuesday 15 March 2011] [11:09:30] <pieterh>	then it's defensible, and the poll shows we did discuss the issue ad nauseam
| [Tuesday 15 March 2011] [11:09:43] <pieterh>	if anyone still complains, they should have spoken up in time
| [Tuesday 15 March 2011] [11:09:43] <sustrik>	ok
| [Tuesday 15 March 2011] [11:09:49] <pieterh>	excellent
| [Tuesday 15 March 2011] [11:10:03] <private_meta>	aw not again
| [Tuesday 15 March 2011] [11:10:29] <pieterh>	private_meta: port in use?
| [Tuesday 15 March 2011] [11:10:33] <private_meta>	no
| [Tuesday 15 March 2011] [11:10:42] <private_meta>	Bad file descriptor
| [Tuesday 15 March 2011] [11:10:42] <private_meta>	nbytes != -1 (mailbox.cpp:241)
| [Tuesday 15 March 2011] [11:10:55] <private_meta>	don't remember right now what the error was when I had that one previously
| [Tuesday 15 March 2011] [11:11:07] <mato>	pieterh: so what is the decision on zmq_term? 
| [Tuesday 15 March 2011] [11:11:17] <mato>	pieterh: keep the current behaviour?
| [Tuesday 15 March 2011] [11:11:21] <pieterh>	mato: yes
| [Tuesday 15 March 2011] [11:11:27] <sustrik>	private_meta: is it a reproducible use case?
| [Tuesday 15 March 2011] [11:11:29] <mato>	ok, understood
| [Tuesday 15 March 2011] [11:11:45] <pieterh>	the problem, and the reason for the discussion, is that people migrating from 2.0 _will_ be systematically hit by this
| [Tuesday 15 March 2011] [11:11:47] <private_meta>	sustrik: it's my translation of ppworker (not yet submitted)
| [Tuesday 15 March 2011] [11:11:56] <cremes>	private_meta:  i have seen that assert when i ran out of sockets and/or ran out of file descriptors
| [Tuesday 15 March 2011] [11:12:01] <cremes>	should be easy to reproduce
| [Tuesday 15 March 2011] [11:12:11] <sustrik>	private_meta: iirc such a problem can happen if you close the fd you get fromZMQ_FD
| [Tuesday 15 March 2011] [11:12:34] <sustrik>	socket option i mean
| [Tuesday 15 March 2011] [11:12:34] <cremes>	yep, that causes it too
| [Tuesday 15 March 2011] [11:12:55] <sustrik>	cremes: if you can reproduce it, i would fix it
| [Tuesday 15 March 2011] [11:14:12] <bpl29>	Is there a reference page for ZMQ objects such as context and socket?
| [Tuesday 15 March 2011] [11:14:31] <pieterh>	bpl29: yes, at http://rfc.zeromq.org
| [Tuesday 15 March 2011] [11:14:34] <private_meta>	happens when calling zmq::poll
| [Tuesday 15 March 2011] [11:14:49] <pieterh>	bpl29: sorry! http://api.zeromq.org...
| [Tuesday 15 March 2011] [11:14:50] <private_meta>	wait, i think I know
| [Tuesday 15 March 2011] [11:15:04] <private_meta>	k, got it
| [Tuesday 15 March 2011] [11:15:30] <bpl29>	thanks pieterh.  Am I wrong or is this just a function reference though?
| [Tuesday 15 March 2011] [11:15:52] <pieterh>	bpl29: these objects are not accessed except via functions
| [Tuesday 15 March 2011] [11:15:56] <pieterh>	opaque structures
| [Tuesday 15 March 2011] [11:16:24] <bpl29>	Ah, I see!  Thank you!
| [Tuesday 15 March 2011] [11:17:34] <cremes>	sustrik: i'll submit a small C example that reproduces the EBADF
| [Tuesday 15 March 2011] [11:26:31] <Guthur>	Is 0MQ buildable on solaris 8
| [Tuesday 15 March 2011] [11:26:39] <Guthur>	and is Sun Studio the only option
| [Tuesday 15 March 2011] [11:26:41] <private_meta>	pieterh: again a (for you maybe opaque) question: In the ppqueue, ppworker, lpclient scenario, shouldn't lpclient connect at least ONCE? it only tells me it's trying to connect
| [Tuesday 15 March 2011] [11:33:18] <Guthur>	pieter: which pattern would you suggest for a  N client to N servers, where the servers are processing requests to retrieve data from files
| [Tuesday 15 March 2011] [11:49:51] <cremes>	Guthur: i'd use a REQ socket on the client, REP on the server and a QUEUE device in the middle to load balance
| [Tuesday 15 March 2011] [11:56:00] <Guthur>	cremes: Probably a wise choice, I have to resist the temptation to over engineer
| [Tuesday 15 March 2011] [11:57:18] <cremes>	Guthur: i suspect that over the next several months the "lazy pirate" patterns will become dominant
| [Tuesday 15 March 2011] [11:57:43] <Guthur>	I was being drawn to Ch4 patterns actually
| [Tuesday 15 March 2011] [11:57:50] <Guthur>	I've only started reading it though
| [Tuesday 15 March 2011] [11:58:10] <Guthur>	I got hung up debugging peering3 in C#
| [Tuesday 15 March 2011] [11:58:29] <Guthur>	massive 'doh' moment on my part there
| [Tuesday 15 March 2011] [12:04:08] <private_meta>	I'm still curious if the way the zguide C variant of the paranoid pirate is intended behavior. If i run the c example, the lazy pirate client never connects
| [Tuesday 15 March 2011] [12:04:14] <private_meta>	It shouldn't be intended
| [Tuesday 15 March 2011] [12:04:30] <private_meta>	But somehow I don't think it should be an error on my side, I didn't really change anything
| [Tuesday 15 March 2011] [12:47:19] <michelp>	morning
| [Tuesday 15 March 2011] [12:48:04] <michelp>	i asked this q last night but i think everyone was in bed.  has anyone in the community experimented with using 0mq to do shared memory objects across threads/procs/boxes in python?
| [Tuesday 15 March 2011] [12:48:35] <michelp>	it's something that's always interested me but i've never found a suitable transport for the underlying data transfer
| [Tuesday 15 March 2011] [12:49:24] <michelp>	seems like 0mq is ideal for things like distributing new versions of objects and doing two or three phase commit between a group of data managers
| [Tuesday 15 March 2011] [13:15:54] <Guthur>	michelp: sounds like an interesting project
| [Tuesday 15 March 2011] [13:16:31] <Guthur>	you could maybe utilize something like tokyo cabinet as well
| [Tuesday 15 March 2011] [13:17:28] <michelp>	for storage?  i was thinking of shipping around pickles so those would go well into a key value store where the key is the oid
| [Tuesday 15 March 2011] [13:18:29] <michelp>	it would be nice for there to be a way for a new node to easily bootstrap objects and for objects to survive cluster destruction
| [Tuesday 15 March 2011] [13:19:57] <michelp>	might even be possible for there to be more objects in the store than nodes have memory if there was a way to manage that.  thanks for the idea Guthur :)
| [Tuesday 15 March 2011] [13:20:34] <Guthur>	also check out some of the stuff from Ch4 of the guide
| [Tuesday 15 March 2011] [13:20:39] <Guthur>	for reliability
| [Tuesday 15 March 2011] [13:20:46] <michelp>	yeah i'm about halfway through ch 3 :)
| [Tuesday 15 March 2011] [13:21:00] <michelp>	almost there, it's a big guide, which is totally awesome
| [Tuesday 15 March 2011] [13:21:41] <michelp>	the best documentation i've found on rabbit is a blog post.  the guide alone has convinced me that 0mq is the future, i haven't even written any code yet :)
| [Tuesday 15 March 2011] [13:22:51] <michelp>	the guide would make an excellent 5 day course.  does anyone do 0mq training?
| [Tuesday 15 March 2011] [13:23:14] <Guthur>	not that I am aware
| [Tuesday 15 March 2011] [13:23:32] <Guthur>	I'm sure for corporate customers Imatix might be available for such
| [Tuesday 15 March 2011] [13:23:39] <Guthur>	but don't quote me on that
| [Tuesday 15 March 2011] [13:24:25] <michelp>	their services page does have various support level costs, but we're a US non-profit so it's a little out of our price range for a whole week
| [Tuesday 15 March 2011] [13:25:11] <michelp>	if i worked for a corporation i'd be spending their money on it in a minute :)
| [Tuesday 15 March 2011] [13:26:01] <michelp>	know if anyone in the 0mq community is going to OSCON this year?  It's here in my home town and we could get together for a BOF session
| [Tuesday 15 March 2011] [13:27:44] <Guthur>	I'm not sure
| [Tuesday 15 March 2011] [13:27:50] <Guthur>	there is sometimes meetups 
| [Tuesday 15 March 2011] [13:28:00] <Guthur>	there was one in San Fran recently
| [Tuesday 15 March 2011] [13:35:33] <Guthur>	anyone built jzmq on windows recently
| [Tuesday 15 March 2011] [13:38:15] <pieterh>	michelp: iMatix does 0MQ training, sure
| [Tuesday 15 March 2011] [13:39:35] <michelp>	pieterh, is it the usual services rate quoted here? http://www.imatix.com/services
| [Tuesday 15 March 2011] [13:39:54] <pieterh>	private_meta: (a) lpclient should connect, yes, I had '-v' to enable verbose tracing of messages in the C code, that helps. (b) let me retest the C code...
| [Tuesday 15 March 2011] [13:40:02] <pieterh>	michelp: yes, those are the usual rates
| [Tuesday 15 March 2011] [13:40:32] <pieterh>	however if you're a non-profit, and you need help, you will find that it's readily available here
| [Tuesday 15 March 2011] [13:41:13] <michelp>	yeah you guys have definitely be a great help so far!
| [Tuesday 15 March 2011] [13:41:14] <pieterh>	mostly, you will benefit most by also contributing somehow to the community
| [Tuesday 15 March 2011] [13:41:44] <Guthur>	I'm getting an error building the jzmq binding, error copying files
| [Tuesday 15 March 2011] [13:41:57] <Guthur>	and Java users around
| [Tuesday 15 March 2011] [13:41:59] <pieterh>	Guthur: I've not tried it in a long time... what's the error?
| [Tuesday 15 March 2011] [13:42:35] <Guthur>	Error	1	error MSB3073: The command "copy ..\config.hpp ..\..\..\src javac ..\..\..\src\org\zeromq\ZMQ.java ..\..\..\src\org\zeromq\ZMQException.java ..\..\..\src\org\zeromq\ZMQForwarder.java ..\..\..\src\org\zeromq\ZMQQueue.java ..\..\..\src\org\zeromq\ZMQStreamer.java  :VCEnd" exited with code 9009.	C:\Program Files\MSBuild\Microsoft.Cpp\v4.0\Microsoft.CppCommon.targets	103	6	jzmq 
| [Tuesday 15 March 2011] [13:42:49] <pieterh>	michelp: with respect to shared objects across threads/processes, it's a design I'm going to make for Ch5 of the Guide
| [Tuesday 15 March 2011] [13:42:58] <private_meta>	pieterh: thanks for retesting
| [Tuesday 15 March 2011] [13:44:24] <pieterh>	Guthur: I'm searching what exit code 9009 means...
| [Tuesday 15 March 2011] [13:44:40] <pieterh>	try running that command by hand in a shell, does it work?
| [Tuesday 15 March 2011] [13:45:47] <pieterh>	"9009	DNS server not authoritative for zone."???
| [Tuesday 15 March 2011] [13:45:49] <Guthur>	2 secs
| [Tuesday 15 March 2011] [13:46:06] <michelp>	pieterh, wow awesome.  i'm tinkering with the idea here in python, what language were you going to focus on?
| [Tuesday 15 March 2011] [13:46:37] <pieterh>	michelp: I always make the examples in C, but they can be translated into other languages quite simply
| [Tuesday 15 March 2011] [13:47:01] <pieterh>	the idea is to make a distributed key-value store using a mix of pubsub and req/rep
| [Tuesday 15 March 2011] [13:47:44] <Guthur>	umm syntax is incorrect
| [Tuesday 15 March 2011] [13:48:09] <pieterh>	Guthur: syntax looks correct, yes, and the command runs successfully?
| [Tuesday 15 March 2011] [13:48:19] <pieterh>	private_meta: indeed, it doesn't work... checking why...
| [Tuesday 15 March 2011] [13:53:15] <Guthur>	oh wait
| [Tuesday 15 March 2011] [13:53:30] <michelp>	pieterh, sound very interesting, i'll keep tinkering on my end for learning purposes until it comes out.  I'm also happy to proof read anything from a beginners point of view if you need that
| [Tuesday 15 March 2011] [13:53:51] <pieterh>	michelp: what really helps is running the examples from the guide, each one, and verifying that they work
| [Tuesday 15 March 2011] [13:54:14] <michelp>	yeah i've been doing that, which is why i'm only up to ch 3 at this point
| [Tuesday 15 March 2011] [13:54:32] <michelp>	i've been running them in python but I know C so i've been using both as a guide to understanding
| [Tuesday 15 March 2011] [13:54:44] <pieterh>	:-) you won't need any training
| [Tuesday 15 March 2011] [13:55:27] <michelp>	hopefully not, but we have 7 folks on our team and i was thinking it might be worth having a group training session in the future if we can swing it
| [Tuesday 15 March 2011] [13:55:34] <Guthur>	pieterh: the javac wasn't in the Path
| [Tuesday 15 March 2011] [13:55:41] <Guthur>	hopefully should work now
| [Tuesday 15 March 2011] [13:55:47] <michelp>	which is one reason why i was hoping maybe someone from imatix would be at OSCON :)
| [Tuesday 15 March 2011] [13:56:08] <pieterh>	Guthur: worth noting on the Java bindings page, perhaps (you can edit it)
| [Tuesday 15 March 2011] [13:56:17] <Guthur>	sure
| [Tuesday 15 March 2011] [13:56:33] <pieterh>	michelp: we didn't plan to go
| [Tuesday 15 March 2011] [13:56:43] <Guthur>	How does one generate a lib file again?
| [Tuesday 15 March 2011] [13:56:52] <Guthur>	oh wait I think that is documented
| [Tuesday 15 March 2011] [13:56:58] <michelp>	yeah it's expensive.  not to mention travel.  are you guys in the netherlands?
| [Tuesday 15 March 2011] [13:57:22] <pieterh>	Brussels
| [Tuesday 15 March 2011] [13:57:29] <pieterh>	Belgium
| [Tuesday 15 March 2011] [13:58:05] <pieterh>	It's more a question of time really, plus we've found that presentations from actual 0MQ users are more effective than our own, often
| [Tuesday 15 March 2011] [13:59:04] <michelp>	ah nice, i've never been.  been to just about every country around it except Luxembourg
| [Tuesday 15 March 2011] [13:59:41] <michelp>	one of these days hopefully
| [Tuesday 15 March 2011] [14:00:10] <Guthur>	ok binding page updated
| [Tuesday 15 March 2011] [14:02:13] <pieterh>	private_meta: there was a bug in ppqueue
| [Tuesday 15 March 2011] [14:02:24] <pieterh>	it was inserting an extra null frame at the front of the message
| [Tuesday 15 March 2011] [14:03:11] <pieterh>	line 165, in the C code:
| [Tuesday 15 March 2011] [14:03:13] <pieterh>	-            zmsg_wrap (msg, identity, "");
| [Tuesday 15 March 2011] [14:03:13] <pieterh>	+            zmsg_push (msg, identity);
| [Tuesday 15 March 2011] [14:03:21] <pieterh>	thanks for catching this!
| [Tuesday 15 March 2011] [14:06:14] <private_meta>	thanks for fixing it
| [Tuesday 15 March 2011] [14:06:25] <private_meta>	I'll test it a lil while later
| [Tuesday 15 March 2011] [14:06:53] <sustrik>	pieterh: an idea about version numbering
| [Tuesday 15 March 2011] [14:07:19] <Guthur>	is there something on the wiki about building libzmq as a static lib
| [Tuesday 15 March 2011] [14:07:24] <sustrik>	the guarantees for minor version number bump is not clear atm
| [Tuesday 15 March 2011] [14:07:36] <Guthur>	the java binding seems to want one
| [Tuesday 15 March 2011] [14:07:55] <sustrik>	what if it says: "minor version number is incremented when stable branch is forked from the master"
| [Tuesday 15 March 2011] [14:09:25] <sustrik>	Guthur: what OS?
| [Tuesday 15 March 2011] [14:09:56] <Guthur>	sustrik: Win32
| [Tuesday 15 March 2011] [14:10:00] <Guthur>	I think I have it though
| [Tuesday 15 March 2011] [14:10:02] <Guthur>	sorry
| [Tuesday 15 March 2011] [14:10:13] <Guthur>	sustrik: btw why is there an @ before your name
| [Tuesday 15 March 2011] [14:10:27] <Guthur>	are you ops
| [Tuesday 15 March 2011] [14:10:34] <sustrik>	Guthur: iirc building a static lib on win32 is a problem
| [Tuesday 15 March 2011] [14:10:47] <sustrik>	yup
| [Tuesday 15 March 2011] [14:11:04] <Guthur>	umm yeah it does seem to be an issue
| [Tuesday 15 March 2011] [14:11:10] <Guthur>	this is problematic
| [Tuesday 15 March 2011] [14:11:25] <Guthur>	jzmq wants a lib
| [Tuesday 15 March 2011] [14:11:33] <sustrik>	but jzmq used to work with dlls before
| [Tuesday 15 March 2011] [14:11:42] <sustrik>	have that changed?
| [Tuesday 15 March 2011] [14:12:01] <Guthur>	umm not sure, it's complaining at me about not finding a libzmq.lib
| [Tuesday 15 March 2011] [14:13:58] <sustrik>	ah
| [Tuesday 15 March 2011] [14:14:03] <sustrik>	win32 is strange
| [Tuesday 15 March 2011] [14:14:10] <Guthur>	yes, that it is
| [Tuesday 15 March 2011] [14:14:25] <Guthur>	not my first choice to be sure
| [Tuesday 15 March 2011] [14:14:31] <sustrik>	.lib is used even when doing dynamic linking
| [Tuesday 15 March 2011] [14:14:41] <sustrik>	it's basically a table of entry points
| [Tuesday 15 March 2011] [14:14:55] <sustrik>	it's located in lib subdir afterm msvc build
| [Tuesday 15 March 2011] [14:14:56] <sustrik>	iirc
| [Tuesday 15 March 2011] [14:17:08] <Guthur>	so it should be getting generated
| [Tuesday 15 March 2011] [14:22:32] <Guthur>	where is the platform tweaks
| [Tuesday 15 March 2011] [14:27:18] <Guthur>	i can generate a lib but then I get loads of unresolved external symbols
| [Tuesday 15 March 2011] [14:42:13] <sustrik>	like zmq_init() and such?
| [Tuesday 15 March 2011] [14:44:13] <Guthur>	__imp__zmq_init
| [Tuesday 15 March 2011] [14:44:15] <Guthur>	etc
| [Tuesday 15 March 2011] [14:48:23] <sustrik>	can you report that on the mailing list
| [Tuesday 15 March 2011] [14:48:57] <sustrik>	it looks like it is possibly connected to the recent changes regarding symbol visibility
| [Tuesday 15 March 2011] [14:49:32] <Guthur>	ah sure, I'll an old version to check
| [Tuesday 15 March 2011] [14:49:40] <Guthur>	I'd really like to have something for tomorrw
| [Tuesday 15 March 2011] [14:49:54] <Guthur>	I colleague wants to bridge from JMS to C#
| [Tuesday 15 March 2011] [14:50:16] <Guthur>	with possibility for client/server setup
| [Tuesday 15 March 2011] [14:50:28] <Guthur>	I'd like to show him a 0MQ solution
| [Tuesday 15 March 2011] [14:51:31] <Guthur>	sustrik: when was that update you mentioned
| [Tuesday 15 March 2011] [15:22:46] <mikko>	pieterh: there?
| [Tuesday 15 March 2011] [16:00:35] <sustrik>	Guthur: december, i think
| [Tuesday 15 March 2011] [16:04:47] <Guthur>	sustrik, ok, I'll try an earlier version
| [Tuesday 15 March 2011] [16:05:49] <Guthur>	I'm back home now though, on a much saner platform, hehe
| [Tuesday 15 March 2011] [17:11:26] <mikko>	pieterh: there now?
| [Tuesday 15 March 2011] [18:05:49] <mikko>	Guthur: are you michael?
| [Tuesday 15 March 2011] [18:07:07] <Guthur>	mikko, Indeed
| [Tuesday 15 March 2011] [18:07:52] <mikko>	http://www.mansysadmin.com/2011/03/using-zeromq-framework-with-visual-studio-2010-tutorial/
| [Tuesday 15 March 2011] [18:08:00] <mikko>	is this related to your problem?
| [Tuesday 15 March 2011] [18:08:10] <mikko>	i remember something related to VS2010 being funny
| [Tuesday 15 March 2011] [18:08:46] <Guthur>	I haven't been encountering any issues until I tried jzmq
| [Tuesday 15 March 2011] [18:09:22] <Guthur>	I'll double check that though
| [Tuesday 15 March 2011] [18:09:40] <Guthur>	but I am confident it was outputting to the correct directory
| [Tuesday 15 March 2011] [18:09:56] <Guthur>	I'm just freeing up some space on my wins VM here, then I will try again
| [Tuesday 15 March 2011] [18:10:25] 	 * Guthur made the mistake of thinking 20gb would be enough for windows and some tools
| [Tuesday 15 March 2011] [18:23:38] <sed>	Is anyone around to answer a couple of questions about ZMQ
| [Tuesday 15 March 2011] [18:23:40] <sed>	?
| [Tuesday 15 March 2011] [18:28:41] <Guthur>	ask and you shall receive...
| [Tuesday 15 March 2011] [18:28:44] <Guthur>	...maybe
| [Tuesday 15 March 2011] [18:31:37] <cremes>	sed: that means yes
| [Tuesday 15 March 2011] [18:31:57] <sed>	we have been testing out ZMQ for about a month and are very impressed with what it can do.  However we have noticed memory issues with the bindings in C C++ and perl.  
| [Tuesday 15 March 2011] [18:32:29] <sed>	over the course of several weeks we see memory usage rise uniformally across multiple servers
| [Tuesday 15 March 2011] [18:32:51] <sed>	also when running tests on single nodes top shows usage increasing
| [Tuesday 15 March 2011] [18:33:22] <mikko>	sed: are you closing the messages ?
| [Tuesday 15 March 2011] [18:33:24] <sed>	qwe are trying to identify the cause of this and what steps can be taken to avoid having to restart every 2 weeks
| [Tuesday 15 March 2011] [18:33:27] <sed>	yes
| [Tuesday 15 March 2011] [18:33:54] <cremes>	sed: are you closing and recreating sockets often?
| [Tuesday 15 March 2011] [18:34:21] <sed>	no  the sockets remain open
| [Tuesday 15 March 2011] [18:35:05] <cremes>	it's hard to say; an example that illustrates the problem in C or C++ would be great
| [Tuesday 15 March 2011] [18:35:28] <cremes>	i have seen some memory leaks but they are due to closing/reopening sockets very rapidly
| [Tuesday 15 March 2011] [18:35:43] <cremes>	i haven't heard about memory leakage with sockets that remain open indefinitely
| [Tuesday 15 March 2011] [18:36:06] <cremes>	are you running 2.1.x or 2.0.x?
| [Tuesday 15 March 2011] [18:36:56] <sed>	2.1.x
| [Tuesday 15 March 2011] [18:37:31] <cremes>	what kind of sockets? (btw, feel free to provide more details without requiring us to interrogate you)
| [Tuesday 15 March 2011] [18:38:11] <sed>	pulling up example code now   1 sec
| [Tuesday 15 March 2011] [18:39:29] <sed>	#include <stdio.h>
| [Tuesday 15 March 2011] [18:39:29] <sed>	#include <iostream>
| [Tuesday 15 March 2011] [18:39:29] <sed>	#include "zmq.hpp"
| [Tuesday 15 March 2011] [18:39:29] <sed>	int main(int argc, char *argv[]) {
| [Tuesday 15 March 2011] [18:39:29] <sed>	    int type, tm, uid, pid, city;
| [Tuesday 15 March 2011] [18:39:30] <sed>	    char msg[20000], ip[20],  host[100], cont[100], act[100], post[2000], get[2000];
| [Tuesday 15 March 2011] [18:39:32] <sed>	     // prepare our sockets and context with 1 I/O thread
| [Tuesday 15 March 2011] [18:39:34] <sed>	    zmq::context_t context(1);
| [Tuesday 15 March 2011] [18:39:36] <sed>	    // Connect to subscriber
| [Tuesday 15 March 2011] [18:39:38] <sed>	    zmq::socket_t subscriber(context, ZMQ_SUB);
| [Tuesday 15 March 2011] [18:39:40] <sed>	    subscriber.setsockopt(ZMQ_SUBSCRIBE, "", 0);
| [Tuesday 15 March 2011] [18:39:42] <sed>	    subscriber.connect("tcp://s2hs-mw-cas1:5566");
| [Tuesday 15 March 2011] [18:39:44] <sed>	    while(1) {
| [Tuesday 15 March 2011] [18:39:46] <sed>	        zmq::message_t* message = new zmq::message_t;
| [Tuesday 15 March 2011] [18:39:48] <sed>	        subscriber.recv(message, ZMQ_NOBLOCK);
| [Tuesday 15 March 2011] [18:39:50] <sed>	        strncpy(msg, static_cast<char *>(message->data()), message->size());
| [Tuesday 15 March 2011] [18:39:54] <sed>	        delete message;
| [Tuesday 15 March 2011] [18:39:56] <sed>	        type = atoi(&msg[0]);
| [Tuesday 15 March 2011] [18:39:58] <sed>	        if (type == 3)
| [Tuesday 15 March 2011] [18:40:00] <sed>	        {
| [Tuesday 15 March 2011] [18:40:02] <sed>	            sscanf(msg,"%d %d %d %s %s %d %d %s %s %s %s", &type, &tm, &uid, &ip, &host, &pid, &city, &cont, &act, &post, &get);
| [Tuesday 15 March 2011] [18:40:05] <sed>	            std::cout << msg << "\n";
| [Tuesday 15 March 2011] [18:40:07] <sed>	        }
| [Tuesday 15 March 2011] [18:40:09] <sed>	        memset ( (void *) &msg, 0, sizeof(msg));
| [Tuesday 15 March 2011] [18:40:11] <sed>	    }
| [Tuesday 15 March 2011] [18:40:13] <sed>	    free (subscriber);
| [Tuesday 15 March 2011] [18:40:15] <sed>	    return 0;
| [Tuesday 15 March 2011] [18:40:17] <sed>	}
| [Tuesday 15 March 2011] [18:40:19] <sed>	that is a simple example script that we see the leak on
| [Tuesday 15 March 2011] [18:40:24] <Guthur>	sed: you really really, should use pastebin
| [Tuesday 15 March 2011] [18:40:52] <cremes>	sed: yeah, i can't read that; use gist.github.com or pastie.org to post code
| [Tuesday 15 March 2011] [18:41:25] <sed>	http://pastebin.com/mp9uJpCs
| [Tuesday 15 March 2011] [18:44:09] <cremes>	sed: how quickly does it leak? a few bytes for each message? is it a time based leak? e.g. it leaks even when messages aren't coming in
| [Tuesday 15 March 2011] [18:44:55] <sed>	we have 40000 messages/sec at all times.  Would have to run seperate tests to get that data
| [Tuesday 15 March 2011] [18:46:44] <Guthur>	i know it's not really relevant to the issue, but should that recv not be a blocking call
| [Tuesday 15 March 2011] [18:47:17] <cremes>	sed: does the publisher leak memory or just the subscriber?
| [Tuesday 15 March 2011] [18:47:19] <sed>	est 24k per minute
| [Tuesday 15 March 2011] [18:47:32] <cremes>	cool
| [Tuesday 15 March 2011] [18:47:55] <jond>	sed: I don't think recv should be non blocking, the message doesnt need to be on the heap and the free at end is just wrong
| [Tuesday 15 March 2011] [18:47:58] <cremes>	i see this is over tcp transport; any chance you could do a test where publisher & subscriber communicate via inproc transport?
| [Tuesday 15 March 2011] [18:50:11] <sed>	going to get a script running on the same box
| [Tuesday 15 March 2011] [18:50:47] <Guthur>	sed: Which platform, out of curiosity
| [Tuesday 15 March 2011] [18:52:07] <sed>	centos
| [Tuesday 15 March 2011] [18:54:34] <mikko>	sed: you shouldnt free subscriber
| [Tuesday 15 March 2011] [18:54:44] <mikko>	at the ed
| [Tuesday 15 March 2011] [18:55:07] <mikko>	end*
| [Tuesday 15 March 2011] [18:55:47] <mikko>	sed: also, you dont need to dynamically allocate 'message'
| [Tuesday 15 March 2011] [18:56:11] <sed>	yeah  that was just testing if it was related
| [Tuesday 15 March 2011] [18:56:46] <mikko>	that shouldnt leak
| [Tuesday 15 March 2011] [18:56:52] <mikko>	as far as i can see
| [Tuesday 15 March 2011] [18:57:20] <jond>	mikko: what time are you going to the pub tomorrow? hoping not to get my bag stolen this time.....
| [Tuesday 15 March 2011] [18:57:30] <mikko>	jond: dont take a bag with you!
| [Tuesday 15 March 2011] [18:57:43] <mikko>	jond: i probably get off from work around 17:30
| [Tuesday 15 March 2011] [18:57:53] <mikko>	heading to white horse after that so will be there around 18:00
| [Tuesday 15 March 2011] [18:58:03] <jond>	mikko: i have started doing that, learned the hard way
| [Tuesday 15 March 2011] [18:58:20] <mikko>	jond: hows life nowadays?
| [Tuesday 15 March 2011] [18:58:49] <mikko>	i guess we can chat tomorrow
| [Tuesday 15 March 2011] [18:59:08] <jond>	better than before xmas .....
| [Tuesday 15 March 2011] [18:59:09] <mikko>	sed: the only thing i can think of is if messages pile up
| [Tuesday 15 March 2011] [18:59:22] <jond>	i've found a bug in xrep today
| [Tuesday 15 March 2011] [18:59:48] <mikko>	jond: is it related to identities?
| [Tuesday 15 March 2011] [19:01:09] <jond>	when the pipe is full when processing identity message leaves socket in bad state
| [Tuesday 15 March 2011] [19:01:42] <jond>	i also don't think the HWM is honoured correctly but I'd need to show martin
| [Tuesday 15 March 2011] [19:02:05] <jond>	I'm just reading up on how to submit a patch cos I havent done one for months....
| [Tuesday 15 March 2011] [19:12:24] <mikko>	clone the repo, commit the change
| [Tuesday 15 March 2011] [19:12:31] <mikko>	and do git format-patch -s
| [Tuesday 15 March 2011] [19:19:59] <cremes>	this project has the most F'ed up submission policy; it's different from nearly every other github project
| [Tuesday 15 March 2011] [19:24:58] <jond>	mikko: I've sent patch to list. I think I got it right ...
| [Tuesday 15 March 2011] [19:26:09] <jond>	cremes: yep, it's like the version numbering. using master seems to be safest!!!
| [Tuesday 15 March 2011] [19:26:42] <cremes>	jond: don't get me started on that either :)
| [Tuesday 15 March 2011] [19:27:03] <cremes>	this is the only project i know that spawns a *new* repository for a branch
| [Tuesday 15 March 2011] [19:30:18] <Guthur>	a conscientious should be reached on this issue
| [Tuesday 15 March 2011] [19:30:30] <Guthur>	it seems to annoy a few people
| [Tuesday 15 March 2011] [19:30:32] <cremes>	concensus?
| [Tuesday 15 March 2011] [19:30:39] <Guthur>	cremes, yep
| [Tuesday 15 March 2011] [19:30:39] <cremes>	:)
| [Tuesday 15 March 2011] [19:30:50] <Guthur>	hehe trusted the spell checker too much
| [Tuesday 15 March 2011] [19:31:20] <cremes>	i don't feel like fighting this particular battle; i'm not much of a C guy so my patches (if any) will be rare
| [Tuesday 15 March 2011] [19:31:37] <mikko>	jond: didnt look at the contents but the format of the patch looks good
| [Tuesday 15 March 2011] [19:31:40] <cremes>	but it seems to me like it increases the learning curve quite a bit for people new to the project
| [Tuesday 15 March 2011] [19:32:10] <mikko>	im not fan of the dual repos either
| [Tuesday 15 March 2011] [19:32:19] <mikko>	but that seems to work for pieterh and sustrik so i guess its ok
| [Tuesday 15 March 2011] [19:32:35] <mikko>	the version numbering though is very odd for 2.1.x
| [Tuesday 15 March 2011] [19:33:14] <cremes>	yes
| [Tuesday 15 March 2011] [19:37:28] <jond>	mikko: just posted a note to the list about the operator void * on socket which allows that call to free to compile in example code above
| [Tuesday 15 March 2011] [20:00:37] <Guthur>	mikko, That Visual studio fix worked
| [Tuesday 15 March 2011] [20:00:45] <Guthur>	I successfully built the jzmq
| [Tuesday 15 March 2011] [20:00:47] <Guthur>	cheers
| [Tuesday 15 March 2011] [20:06:54] <sed>	set up an ipc connection and still see the memory increasing
| [Tuesday 15 March 2011] [20:18:56] <Guthur>	sed: I think that would be worth putting on the mail list
| [Tuesday 15 March 2011] [20:19:08] <Guthur>	to get wider exposure to the community
| [Tuesday 15 March 2011] [20:24:40] <cremes>	sed: try inproc; ipc still uses sockets
| [Tuesday 15 March 2011] [20:24:58] <sed>	k  will give that a shot
| [Tuesday 15 March 2011] [21:15:30] <sed>	thanks for answering questions guys.  Will be looking at this tomorow so will reach out further to the community.
| [Tuesday 15 March 2011] [22:43:47] <Honeyman>	Hello. I am using PyZMQ, and trying to do the REQ-REP communication, polling for the replies with the zmq.core.poll.select(), using timeout = 5.0 (seconds). But most of the times, this call returns immediately, without waiting for 5 seconds, returning empty lists, like if the socket is not available.
| [Tuesday 15 March 2011] [22:47:19] <Honeyman>	What could be the reason of this problem? A bug in the PyZMQ? If pyzmq's select() is using zmq_poll(), maybe it is zmq_poll who returns prematurely, not complying to the timeouts?
| [Tuesday 15 March 2011] [22:50:39] <Honeyman>	It is interesting that if I read from this socket no matter that it is absent from the rlist, the read always succeeds...
| [Tuesday 15 March 2011] [23:13:38] <Honeyman>	Uh, found myself, that's that known bug in ZMQ 2.0
| [Wednesday 16 March 2011] [04:14:45] <pieterh_>	g'morning
| [Wednesday 16 March 2011] [04:15:23] <pieterh_>	mikko: i'll be happy to explain the sanity behind the version numbering and release gits, this evening
| [Wednesday 16 March 2011] [04:18:35] <mikko>	pieterh_: sent you my mobile number
| [Wednesday 16 March 2011] [04:19:03] <mikko>	to work ->
| [Wednesday 16 March 2011] [04:19:38] <pieterh_>	mikko: ok, will send you mine too
| [Wednesday 16 March 2011] [04:54:29] <CIA-103>	zeromq2: 03Jon Dyte 07master * rb79d07b 10/ src/xrep.cpp : 
| [Wednesday 16 March 2011] [04:54:29] <CIA-103>	zeromq2: reset socket state when identity message cannot be written to xrep
| [Wednesday 16 March 2011] [04:54:29] <CIA-103>	zeromq2:  Signed-off-by: Jon Dyte <jon@totient.co.uk> - http://bit.ly/g67Cnf
| [Wednesday 16 March 2011] [05:32:29] <Steve-o>	mikko: I'll add autoconf output into new tarballs
| [Wednesday 16 March 2011] [06:16:06] <Steve-o>	mikko__
| [Wednesday 16 March 2011] [06:34:39] <mikko__>	hi steve
| [Wednesday 16 March 2011] [07:15:29] <Guthur>	can anyone download the tarball from github?
| [Wednesday 16 March 2011] [07:15:41] <mikko__>	Guthur: probably
| [Wednesday 16 March 2011] [07:15:49] <Guthur>	I can't at the moment
| [Wednesday 16 March 2011] [07:15:51] <mikko__>	Guthur: you can use snapshots if you want the master
| [Wednesday 16 March 2011] [07:15:58] <Guthur>	it could be my company firewall though
| [Wednesday 16 March 2011] [07:15:59] <mikko__>	snapshot.zero.mq
| [Wednesday 16 March 2011] [07:16:26] <mikko__>	latest is 16-Mar-2011 05:19
| [Wednesday 16 March 2011] [07:16:29] <Guthur>	mikko__: is that from github?
| [Wednesday 16 March 2011] [07:16:58] <mikko__>	sorry
| [Wednesday 16 March 2011] [07:17:01] <mikko__>	i keep killing cgi irc
| [Wednesday 16 March 2011] [07:17:02] <Guthur>	np
| [Wednesday 16 March 2011] [07:17:07] <mikko__>	yes, it's master
| [Wednesday 16 March 2011] [07:17:14] <Guthur>	It's more github i'm interested in
| [Wednesday 16 March 2011] [07:17:19] <Guthur>	I actually want clrzmq2
| [Wednesday 16 March 2011] [07:17:35] <Guthur>	but it keeps giving me a bad gateway wrror
| [Wednesday 16 March 2011] [07:17:39] <Guthur>	error*
| [Wednesday 16 March 2011] [07:18:08] <Guthur>	I suspect the company has started blocking the traffic, worked yesterday though
| [Wednesday 16 March 2011] [07:18:42] <mikko__>	times out for me
| [Wednesday 16 March 2011] [07:18:46] <Guthur>	oh
| [Wednesday 16 March 2011] [07:18:55] <Guthur>	maybe it's not just me then
| [Wednesday 16 March 2011] [08:22:54] <stimpie>	works for me
| [Wednesday 16 March 2011] [08:24:28] <stimpie>	try: http://www.klaproos.net/zeromq-clrzmq2-f420936.tar.gz
| [Wednesday 16 March 2011] [08:26:36] <CIA-103>	zeromq2: 03Martin Sustrik 07master * r32ded2b 10/ (9 files): 
| [Wednesday 16 March 2011] [08:26:36] <CIA-103>	zeromq2: Duplicate identities now checked with zmq_connect
| [Wednesday 16 March 2011] [08:26:36] <CIA-103>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/fgzmQX
| [Wednesday 16 March 2011] [08:49:20] <CIA-103>	zeromq2: 03Martin Sustrik 07master * rf5015f4 10/ src/tcp_listener.cpp : 
| [Wednesday 16 March 2011] [08:49:20] <CIA-103>	zeromq2: Incorrect errno reported from tcp_listener_t::set_address
| [Wednesday 16 March 2011] [08:49:20] <CIA-103>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/hvsEGl
| [Wednesday 16 March 2011] [09:31:22] <Guthur>	stimpie: cheers
| [Wednesday 16 March 2011] [09:31:41] <Guthur>	It's actually working for me now as well
| [Wednesday 16 March 2011] [09:31:55] <Guthur>	must have been an issue at the github end
| [Wednesday 16 March 2011] [10:30:18] <sustrik>	cremes: hi, are you here?
| [Wednesday 16 March 2011] [11:26:38] <cremes>	sustrik: i am here; how can i help?
| [Wednesday 16 March 2011] [11:26:50] <sustrik>	i had a look at your issue
| [Wednesday 16 March 2011] [11:27:00] <sustrik>	the one with leaks
| [Wednesday 16 March 2011] [11:27:17] <sustrik>	trying to reproduce it i hit a max fd limit
| [Wednesday 16 March 2011] [11:27:23] <sustrik>	how can i increase it
| [Wednesday 16 March 2011] [11:27:26] <sustrik>	on linux?
| [Wednesday 16 March 2011] [11:27:38] <cremes>	let me check...
| [Wednesday 16 March 2011] [11:27:38] 	 * sustrik is lame admin
| [Wednesday 16 March 2011] [11:27:42] <cremes>	:)
| [Wednesday 16 March 2011] [11:28:42] <cremes>	http://www.cyberciti.biz/faq/linux-increase-the-maximum-number-of-open-files/
| [Wednesday 16 March 2011] [11:28:46] <cremes>	that gives all of the details
| [Wednesday 16 March 2011] [11:28:52] <cremes>	but i would just do "sudo sysctl -w fs.file-max=100000"
| [Wednesday 16 March 2011] [11:29:57] <sustrik>	let me try
| [Wednesday 16 March 2011] [11:30:14] <cremes>	fyi, this change won't survive a reboot
| [Wednesday 16 March 2011] [11:30:58] <sustrik>	"Too many open files"
| [Wednesday 16 March 2011] [11:31:04] <sustrik>	doesn't seem to help
| [Wednesday 16 March 2011] [11:31:09] <mato>	sustrik: ulimit
| [Wednesday 16 March 2011] [11:31:13] <cremes>	what is the output of ulimit ?
| [Wednesday 16 March 2011] [11:31:17] <sustrik>	1024
| [Wednesday 16 March 2011] [11:32:11] <mato>	sustrik: you need to change ulimit -n to some higher value, as root
| [Wednesday 16 March 2011] [11:32:17] <mikko__>	hi mato
| [Wednesday 16 March 2011] [11:32:19] <mikko__>	welcome back
| [Wednesday 16 March 2011] [11:32:25] <mato>	hi mikko
| [Wednesday 16 March 2011] [11:32:26] <mato>	thx
| [Wednesday 16 March 2011] [11:32:34] <mikko__>	a lot of changes in the builds
| [Wednesday 16 March 2011] [11:33:12] <mato>	sustrik: and then from that shell where you changed it, start another shell as yourself 
| [Wednesday 16 March 2011] [11:33:37] <mato>	sustrik: so 1) sudo bash 2) ulimit -n 8192 3) su - sustrik 4) run what you need
| [Wednesday 16 March 2011] [11:33:45] <mato>	mikko__: yes, i noticed, lots of work
| [Wednesday 16 March 2011] [11:33:47] <sustrik>	le t me try
| [Wednesday 16 March 2011] [11:34:04] <mato>	mikko__: also lots of release changes, etc. i'm completely out of the loop :-)
| [Wednesday 16 March 2011] [11:34:17] <mato>	mikko__: good work taking over the autobuilds :-)
| [Wednesday 16 March 2011] [11:34:27] <CIA-103>	zeromq2: 03Martin Sustrik 07master * rfac9c2d 10/ (doc/zmq_setsockopt.txt doc/zmq_socket.txt): 
| [Wednesday 16 March 2011] [11:34:27] <CIA-103>	zeromq2: zmq_socket(3) and zmq_setsockopt(3) man pages improved
| [Wednesday 16 March 2011] [11:34:27] <CIA-103>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/i8ZYxS
| [Wednesday 16 March 2011] [11:34:46] <cremes>	sustrik: mato is correct; the change i gave you only changed the system-wide setting
| [Wednesday 16 March 2011] [11:34:53] <cremes>	you now need ulimit to change your user setting
| [Wednesday 16 March 2011] [11:36:04] <mikko__>	mato: we are currently integrating with openpgm autotools build
| [Wednesday 16 March 2011] [11:36:12] <mikko__>	mato: to remove duplication of the build logic
| [Wednesday 16 March 2011] [11:37:19] <sustrik>	mato: works! thanks!
| [Wednesday 16 March 2011] [12:49:28] <cremes>	sustrik: any luck with reproducing that issue?
| [Wednesday 16 March 2011] [12:50:19] <sustrik>	yup
| [Wednesday 16 March 2011] [12:50:40] <sustrik>	i've just posted a short test case
| [Wednesday 16 March 2011] [12:51:05] <cremes>	great!
| [Wednesday 16 March 2011] [12:52:37] <sustrik>	cremes: can you test with that program
| [Wednesday 16 March 2011] [12:52:48] <sustrik>	and let me know whether you are seeing the same behaviour?
| [Wednesday 16 March 2011] [12:52:50] <cremes>	yes; i'll report back in a few
| [Wednesday 16 March 2011] [13:02:29] <cremes>	sustrik: can't compile it on my linux box
| [Wednesday 16 March 2011] [13:02:46] <cremes>	i get this error:  /usr/local/include/zmq.hpp:26:19: fatal error: cassert: No such file or directory
| [Wednesday 16 March 2011] [13:03:44] <sustrik>	interesting
| [Wednesday 16 March 2011] [13:03:51] <sustrik>	it should be a standard header file
| [Wednesday 16 March 2011] [13:04:00] <sustrik>	are you compiling it with g++?
| [Wednesday 16 March 2011] [13:04:25] <sustrik>	g++ -pthread -luuid -o leaker leaker.cpp .libs/libzmq.a
| [Wednesday 16 March 2011] [13:04:38] <cremes>	i was using pieterh's 'build' script
| [Wednesday 16 March 2011] [13:04:43] <cremes>	let me try your line
| [Wednesday 16 March 2011] [13:05:24] <sustrik>	well, libzmq.a should be on library path
| [Wednesday 16 March 2011] [13:05:26] <cremes>	compiled
| [Wednesday 16 March 2011] [13:05:29] <sustrik>	good
| [Wednesday 16 March 2011] [13:05:36] <sustrik>	does it leak?
| [Wednesday 16 March 2011] [13:06:00] <cremes>	yes; heap jumped from 4MB to 24MB and stayed there
| [Wednesday 16 March 2011] [13:06:12] <sustrik>	osx?
| [Wednesday 16 March 2011] [13:06:14] <cremes>	and CPU is at 400%
| [Wednesday 16 March 2011] [13:06:16] <cremes>	linux
| [Wednesday 16 March 2011] [13:06:51] <cremes>	CPU dropped to 0, heap is now at 18MB
| [Wednesday 16 March 2011] [13:07:02] <cremes>	10554 cremes    20   0  399m  18m 1148 S    0  0.2   1:44.09 leaker9                      
| [Wednesday 16 March 2011] [13:07:28] <sustrik>	same as with the original test case?
| [Wednesday 16 March 2011] [13:07:34] <cremes>	pretty much the same
| [Wednesday 16 March 2011] [13:07:45] <cremes>	my original case ran longer and therefore created a larger heap
| [Wednesday 16 March 2011] [13:07:49] <cremes>	but the idea is the same
| [Wednesday 16 March 2011] [13:08:16] <sustrik>	well, i checked the malloc's you've reported to be leaking
| [Wednesday 16 March 2011] [13:08:27] <sustrik>	(in yqueue_t)
| [Wednesday 16 March 2011] [13:08:47] <sustrik>	the number of chunks get to something like 2600
| [Wednesday 16 March 2011] [13:08:57] <sustrik>	den it gradually falls down to 0
| [Wednesday 16 March 2011] [13:09:25] <cremes>	so this program does *not* leak on your system?
| [Wednesday 16 March 2011] [13:09:39] <sustrik>	hard to say as it never finishes
| [Wednesday 16 March 2011] [13:09:47] <sustrik>	let me look at mem usage
| [Wednesday 16 March 2011] [13:09:57] <cremes>	i don't think this is a genuine leak where the mallocs are lost
| [Wednesday 16 March 2011] [13:10:10] <cremes>	i think some structure is holding on to their references instead of freeing them up like it should
| [Wednesday 16 March 2011] [13:10:19] <cremes>	that's why the conventional leak detectors aren't finding it
| [Wednesday 16 March 2011] [13:10:39] <cremes>	the mallocs aren't getting orphaned; something in the lib is holding the references
| [Wednesday 16 March 2011] [13:11:20] <sustrik>	the number of allocated chunks in yqueue_t drops to 0
| [Wednesday 16 March 2011] [13:11:27] <sustrik>	but memory usage stays the same
| [Wednesday 16 March 2011] [13:11:40] <sustrik>	that means that either some other object is leaking
| [Wednesday 16 March 2011] [13:11:58] <sustrik>	or that OS simply doesn't return the allocated memory to the global pool
| [Wednesday 16 March 2011] [13:12:21] <cremes>	i don't think it's an OS issue
| [Wednesday 16 March 2011] [13:12:27] <sustrik>	how did you figured out that yqueue_t is leaking?
| [Wednesday 16 March 2011] [13:13:13] <cremes>	on OSX i ran the "Instruments" application; it can track every malloc in the program and give you a trace of where it's happening
| [Wednesday 16 March 2011] [13:13:25] <cremes>	i can send you a screenshot if you would like
| [Wednesday 16 March 2011] [13:13:32] <sustrik>	no need
| [Wednesday 16 March 2011] [13:13:53] <sustrik>	what i done was increment and print out a global variable after each malloc in yqueue_t
| [Wednesday 16 March 2011] [13:14:03] <sustrik>	and decrement it and print out after each free
| [Wednesday 16 March 2011] [13:14:15] <sustrik>	the program ends at zero :|
| [Wednesday 16 March 2011] [13:14:36] <sustrik>	i can try with the other object you pointed out...
| [Wednesday 16 March 2011] [13:15:19] <cremes>	i just sent you the screen shot; it can't hurt to look at it
| [Wednesday 16 March 2011] [13:15:24] <sustrik>	ok
| [Wednesday 16 March 2011] [13:16:22] <cremes>	convince pieterh that you need your own OSX box to test some of this stuff
| [Wednesday 16 March 2011] [13:16:28] <cremes>	it has some really good dev tools
| [Wednesday 16 March 2011] [13:17:56] <sustrik>	i am working on my own on this
| [Wednesday 16 March 2011] [13:17:57] <sustrik>	anyway
| [Wednesday 16 March 2011] [13:18:15] <sustrik>	so the leak either happens on osx and not on linux
| [Wednesday 16 March 2011] [13:18:25] <mikko__>	ok, time to head out to the pubmeet
| [Wednesday 16 March 2011] [13:18:35] <sustrik>	or the osx tools are incorrectly reporting the leak
| [Wednesday 16 March 2011] [13:18:41] <sustrik>	mikko__: have a nice evening
| [Wednesday 16 March 2011] [13:20:47] <cremes>	i see the leak on both osx and linux; the memory is never freed on the linux side
| [Wednesday 16 March 2011] [13:21:03] <cremes>	i thought you saw the same
| [Wednesday 16 March 2011] [13:35:17] <Guthur>	it's a wonder this was never noticed before
| [Wednesday 16 March 2011] [13:35:31] <Guthur>	was the leak introduced recently
| [Wednesday 16 March 2011] [13:36:50] <sustrik>	cremes: i did (using the top tool)
| [Wednesday 16 March 2011] [13:37:15] <sustrik>	however, as for mallocs/free's in yqueue_t, those match perfectly
| [Wednesday 16 March 2011] [13:37:21] <sustrik>	so either:
| [Wednesday 16 March 2011] [13:37:37] <sustrik>	1. the leak is somewhere else and osx tools are reporting false positives
| [Wednesday 16 March 2011] [13:37:57] <sustrik>	2. the leaks on linux and osx are different problems
| [Wednesday 16 March 2011] [13:38:12] <sustrik>	3. processes don't return memory to os
| [Wednesday 16 March 2011] [13:38:30] <sustrik>	(3) is know to be true in many cases
| [Wednesday 16 March 2011] [13:38:49] <sustrik>	but contradicsts the report from the osx tool
| [Wednesday 16 March 2011] [13:45:02] <cremes>	it's a head scratcher, that's for sure
| [Wednesday 16 March 2011] [17:04:08] <jobytaffey>	Other than the data itself, is there any space in a zmq_msg_t for some user data? I have a buffer full of messages which I need to attach TTL values to. I could wrap each zmq_msg_t in a struct containing a TTL, but I'm wondering if there's a way of hiding it inside. Could I abuse the msg_content_t.hint pointer safely?
| [Wednesday 16 March 2011] [17:17:46] <Seta00>	what's the value of EAGAIN/
| [Wednesday 16 March 2011] [17:17:49] <Seta00>	? *
| [Wednesday 16 March 2011] [17:18:08] <Seta00>	er.. nevermind
| [Wednesday 16 March 2011] [17:20:24] <Seta00>	clrzmq2 doesn't let me detect EAGAIN's >_>
| [Wednesday 16 March 2011] [17:43:30] <sustrik>	jobytaffey: check multi-part messages
| [Wednesday 16 March 2011] [17:43:51] <sustrik>	ZMQ_SNDMORE, ZMQ_RCVMORE
| [Wednesday 16 March 2011] [17:48:22] <jobytaffey>	I'm using multi-part msgs for some thing already. I suspect that my approach here is not very 0mq-ish. I'm generating data for clients, then storing it until they poll. Each message needs a TTL and there's a garbage collector to destroy when TTL reaches 0. It's not strictly a queue, so I'm storing zmq_msgs in RAM until they're polled for. To be honest, I've just wrapped them in a struct with a ttl...
| [Wednesday 16 March 2011] [18:03:41] <Guthur>	sustrik, did you get any further with the mem leak investigation?
| [Wednesday 16 March 2011] [20:01:18] <believa_>	What tag/branch to use of the zeromq github repository to get the same source as the v2.0 stable release on the zeromq website?
| [Wednesday 16 March 2011] [20:03:27] <believa_>	actually - should be the v2.0.10 tag I'm guessing.
| [Wednesday 16 March 2011] [20:14:07] <tokyodan>	Trying to install in Ubuntu 10.04 LTS server. I followed all the instructions. did './configure'. Then when I execute 'make' I get 'No targets specified and no makefile found'. What is wrong?
| [Wednesday 16 March 2011] [20:14:45] <tokyodan>	all the LINUX dependencies have also been installed.
| [Wednesday 16 March 2011] [20:17:55] <bpl29>	My make check is failing on OS X.  It's failing on test_shutdown_stress
| [Wednesday 16 March 2011] [20:19:52] <bpl29>	I'm reading there is an assertion error in mailbox.cpp, and in fact it's commented in the source to say that this assertion should never fail.
| [Wednesday 16 March 2011] [20:20:54] <tokyodan>	bp129 doesn't seem to be much help forthcoming here.
| [Wednesday 16 March 2011] [20:21:44] <bpl29>	right, I'm wondering if people have actually installed on OS X.
| [Wednesday 16 March 2011] [20:21:57] <bpl29>	There is a developer thread about this particular error, but it's dated
| [Wednesday 16 March 2011] [20:22:33] <bpl29>	https://github.com/zeromq/zeromq2/issues#issue/161
| [Wednesday 16 March 2011] [20:22:48] <bpl29>	Perhaps someone has gotten about this.
| [Wednesday 16 March 2011] [20:22:55] <Guthur>	bpl29, I know someone was running on OSX today
| [Wednesday 16 March 2011] [20:23:07] <Guthur>	and indeed I have a user of clrzmq2 who runs on OSX
| [Wednesday 16 March 2011] [20:23:21] <tokyodan>	bp129 I'm trying on Ubuntu 10.04 server now with not much luck. I'm afraid to install on my Snow Leopard machine right now.
| [Wednesday 16 March 2011] [20:23:21] <Guthur>	I don't use it myself so I can't really help
| [Wednesday 16 March 2011] [20:23:46] <Guthur>	tokyodan, zeromq built fine on ubuntu 10.04 for me recently
| [Wednesday 16 March 2011] [20:23:51] <tokyodan>	thanks bp129
| [Wednesday 16 March 2011] [20:23:51] <Guthur>	which version are you using
| [Wednesday 16 March 2011] [20:24:54] <Guthur>	I wasn't running server mind you
| [Wednesday 16 March 2011] [20:25:10] <bpl29>	I just downloaded from git
| [Wednesday 16 March 2011] [20:25:11] <tokyodan>	What causes make to error out with ''No targets specified and no makefile found' ?
| [Wednesday 16 March 2011] [20:25:54] <tokyodan>	Guthur Did you just type 'make' with no arguments?
| [Wednesday 16 March 2011] [20:25:59] <Guthur>	you ran autogen first, right>
| [Wednesday 16 March 2011] [20:26:02] <Guthur>	?
| [Wednesday 16 March 2011] [20:26:23] <tokyodan>	autogen> no. Didn't see that explained anywhere.
| [Wednesday 16 March 2011] [20:26:39] <Guthur>	I think I ran autogen first then configure then make
| [Wednesday 16 March 2011] [20:27:08] <tokyodan>	what does autogen do? And does it take arguments?
| [Wednesday 16 March 2011] [20:27:31] <Guthur>	I think it should try to automatically detect settings for you platform
| [Wednesday 16 March 2011] [20:27:57] <tokyodan>	I'm using the latest version of OMQ 2.1 (rc2)
| [Wednesday 16 March 2011] [20:28:21] <tokyodan>	I thought that's what ./configure also did.
| [Wednesday 16 March 2011] [20:28:41] <tokyodan>	did you run autogen on OS X or Ubuntu?
| [Wednesday 16 March 2011] [20:28:55] <Guthur>	Ubuntu
| [Wednesday 16 March 2011] [20:29:00] <Guthur>	you are right though
| [Wednesday 16 March 2011] [20:29:11] <Guthur>	configure should do it
| [Wednesday 16 March 2011] [20:29:38] <tokyodan>	Yeah. frome its output that's what it looked like it was doing.
| [Wednesday 16 March 2011] [20:30:03] <Guthur>	my make fu is pretty weak tbh
| [Wednesday 16 March 2011] [20:30:37] <tokyodan>	Seems like it should have created a makefile of something too, but didnt. although I got Makefile.am and Makefile.in
| [Wednesday 16 March 2011] [20:31:26] <Guthur>	i'm just downloading fresh here to check
| [Wednesday 16 March 2011] [20:33:09] <Guthur>	you must have ran autogen at some point
| [Wednesday 16 March 2011] [20:33:32] <Guthur>	I have no ./configure in a fresh download
| [Wednesday 16 March 2011] [20:34:30] <Guthur>	tokyodan, the configure completes ok?
| [Wednesday 16 March 2011] [20:35:04] <cremes>	if you get a mailbox assertion on OSX, you need to do some kernel tuning
| [Wednesday 16 March 2011] [20:35:21] <cremes>	search the zeromq.org site for the 'tuning guide' 
| [Wednesday 16 March 2011] [20:35:31] <Seta00>	anyone here using clrzmq2?
| [Wednesday 16 March 2011] [20:35:45] <cremes>	it has an entry on how to expand the socket buffers used by the kernel
| [Wednesday 16 March 2011] [20:35:54] <Guthur>	Seta00, I do
| [Wednesday 16 March 2011] [20:36:03] <Guthur>	Seta00, any issues?
| [Wednesday 16 March 2011] [20:36:13] <cremes>	bpl29: look at the tuning guide
| [Wednesday 16 March 2011] [20:36:38] <Seta00>	Guthur, it seems you can't detect EAGAIN when using NOBLOCK on a recv call.
| [Wednesday 16 March 2011] [20:36:50] <Seta00>	so I guess I'll have to use polling?
| [Wednesday 16 March 2011] [20:37:41] <bpl29>	cremes: where is the tuning guide located?
| [Wednesday 16 March 2011] [20:38:03] <Guthur>	Seta00, if there is no msg the method just silently returns
| [Wednesday 16 March 2011] [20:38:05] <cremes>	not sure... try the search box
| [Wednesday 16 March 2011] [20:38:22] <Seta00>	bpl29, http://www.zeromq.org/docs:tuning-zeromq
| [Wednesday 16 March 2011] [20:38:33] <bpl29>	thanks Seta00
| [Wednesday 16 March 2011] [20:38:36] <cremes>	bpl29: that's it! ^^
| [Wednesday 16 March 2011] [20:38:47] <bpl29>	thank you both
| [Wednesday 16 March 2011] [20:38:51] <cremes>	on osx the default buffers are all too tiny :(
| [Wednesday 16 March 2011] [20:38:52] <Seta00>	bpl29, for future reference: Guthur, yeah but silently returning doesn't 
| [Wednesday 16 March 2011] [20:38:53] <Seta00>	oops
| [Wednesday 16 March 2011] [20:38:55] <Seta00>	wrong ctrl-v
| [Wednesday 16 March 2011] [20:38:57] <Seta00>	http://www.zeromq.org/docs:_start
| [Wednesday 16 March 2011] [20:39:19] <Seta00>	Guthur, so I should check the output buffer?
| [Wednesday 16 March 2011] [20:39:30] <cremes>	bpl29: btw, i run on osx all the time; once you get some tuning out of the way 0mq works really nicely on it
| [Wednesday 16 March 2011] [20:39:52] <Guthur>	Seta00, the return byte array will be null
| [Wednesday 16 March 2011] [20:40:32] <bpl29>	Okay, great.  I'll give it a shot.
| [Wednesday 16 March 2011] [20:40:38] <Guthur>	Seta00, I didn't feel it was right to throw an exception for it
| [Wednesday 16 March 2011] [20:41:05] <Seta00>	what how did I miss that
| [Wednesday 16 March 2011] [20:41:06] <Guthur>	it should be the only time you receive a null msg
| [Wednesday 16 March 2011] [20:41:35] <Guthur>	and empty message being byte[0]
| [Wednesday 16 March 2011] [20:41:36] <Seta00>	yeah, I see it now
| [Wednesday 16 March 2011] [20:41:53] <Guthur>	Seta00, cool, does that behaviour seem sane to you
| [Wednesday 16 March 2011] [20:41:56] <mkent__>	Noob question: If you have zeromq set to queue to disk, is there any API for monitoring the disk queue?
| [Wednesday 16 March 2011] [20:42:02] <Guthur>	I'm always looking for feedback
| [Wednesday 16 March 2011] [20:42:13] <Seta00>	Guthur, yes it does.
| [Wednesday 16 March 2011] [20:42:50] <Seta00>	my current zmq code is ridiculous, so I'm doing some refactoring :)
| [Wednesday 16 March 2011] [20:43:25] <tokyodan>	Guthur the ./configure completed with 'error: unable to find a working c++ compiler'.
| [Wednesday 16 March 2011] [20:43:41] <Guthur>	tokyodan, yeah that would be a show stopper, hehe
| [Wednesday 16 March 2011] [20:44:12] <Seta00>	tokyodan, sudo apt-get install build-essential g++
| [Wednesday 16 March 2011] [20:44:12] <tokyodan>	I thought Ubuntu would have a C++ compiler built in.
| [Wednesday 16 March 2011] [20:44:13] <Seta00>	:P
| [Wednesday 16 March 2011] [20:44:20] <Seta00>	tokyodan, only comes with a C compiler
| [Wednesday 16 March 2011] [20:44:27] <tokyodan>	thanks Seta00
| [Wednesday 16 March 2011] [20:44:38] <Seta00>	yw
| [Wednesday 16 March 2011] [20:45:00] <Guthur>	Seta00, if you ever have any issues with clrzmq2 you can usually catch me around here, or raise an issue on github, which I'll try to get asap
| [Wednesday 16 March 2011] [20:45:52] <Seta00>	Guthur, awesome, I'll keep that in mind
| [Wednesday 16 March 2011] [20:46:03] <Guthur>	I'd really like to clean up some of the API, but I'm waiting until ZMQ 3.0
| [Wednesday 16 March 2011] [20:48:57] <Guthur>	Seta00, Are you targetting Mono perchance?
| [Wednesday 16 March 2011] [20:49:50] <Seta00>	Guthur, yes
| [Wednesday 16 March 2011] [20:50:09] <Guthur>	make sure to grab the most recent version of clrzmq2
| [Wednesday 16 March 2011] [20:50:26] <Guthur>	I found a signalling issue in relation to the Mono GC
| [Wednesday 16 March 2011] [20:50:28] <tokyodan>	Guthur & Seta00 Thanks you guys. You got me through 'make'. It's running right now.
| [Wednesday 16 March 2011] [20:50:38] <Guthur>	you may have seen it on the mailing list recently
| [Wednesday 16 March 2011] [20:50:38] <Seta00>	nice :)
| [Wednesday 16 March 2011] [20:50:56] <Guthur>	tokyodan, cool, happy coding
| [Wednesday 16 March 2011] [20:51:43] <Guthur>	Seta00, basically signals generated by the Mono GC can cause the syscalls to return EINTR which would throw an exception in clrzmq2
| [Wednesday 16 March 2011] [20:52:41] <Guthur>	the workaround I decided on was to reenter the call for all signals bar sigint and sigterm, which would instead exit the program
| [Wednesday 16 March 2011] [20:53:07] <Guthur>	this mainly effected long running syscalls like those used in poll
| [Wednesday 16 March 2011] [20:53:42] <Guthur>	obviously it was only an issue on POSIX platforms
| [Wednesday 16 March 2011] [20:53:53] <tokyodan>	'make' finished with no errors. yeah!
| [Wednesday 16 March 2011] [20:56:29] <tokyodan>	Well it seems to have installed OK. Now for trying it out. Still have to get the Lua part though.
| [Wednesday 16 March 2011] [22:06:40] <tokyodan>	I installed the Lua binding on Ubuntu 10.04 server. But when I do: require 'zmq'  I get  module zmq not found. Seems like make is not putting the files into the proper Lua directories. How do I cure this outside of creating all kinds of symlinks.
| [Wednesday 16 March 2011] [23:39:29] <tokyodan>	This doesn't work with Lua
| [Wednesday 16 March 2011] [23:39:54] <tokyodan>	I followed this video: http://www.youtube.com/watch?v=_JCBphyciAs&feature=player_embedded
| [Wednesday 16 March 2011] [23:41:02] <tokyodan>	And unlink in the video the send("Hello") command returns before I even start up the receiving end.
| [Wednesday 16 March 2011] [23:41:40] <tokyodan>	I start up the recv loop on the receiving side and it just sits there blocking and waiting for input
| [Wednesday 16 March 2011] [23:47:30] <michelp>	last night i was musing on the "supercomputer" descriptions in the guide
| [Wednesday 16 March 2011] [23:48:16] <michelp>	having recently read "The Connection Machine" by D. Hillis it made me think that 0mq would make an excellent interconnect mechanism for various SIMD topologies
| [Wednesday 16 March 2011] [23:50:00] <michelp>	the guide basically spells out how to do those topologies with a control channel to issue "instructions".  in conjunction with something like NumPy it would be an excellent platform for distributed computing
| [Wednesday 16 March 2011] [23:50:18] <michelp>	anyway, just musing over dinner on the subject ;)
| [Wednesday 16 March 2011] [23:53:48] <tokyodan>	Does the latest version on OMQ work with Lua 5.1.4?
| [Wednesday 16 March 2011] [23:54:06] <tokyodan>	on Ubuntu 10.04 LTS Server?
| [Wednesday 16 March 2011] [23:56:05] <michelp>	tokyodan, I don't use Lua so can't help you specifically, but have you looked at "The Missing Message Problem Solver" at http://zguide.zeromq.org/page:all ?
| [Wednesday 16 March 2011] [23:56:20] <michelp>	it might help you diagnose the problem
| [Thursday 17 March 2011] [00:04:44] <tokyodan>	michelp thanks!
| [Thursday 17 March 2011] [00:05:33] <michelp>	sure np
| [Thursday 17 March 2011] [00:06:38] <tokyodan>	I see that UP/DOWNSTREAM and replaced by PULL/PUSH. Is that correct? I've see examples with PUB/SUB?
| [Thursday 17 March 2011] [00:10:08] <cremes>	tokyodan: yes, the UP/DOWNSTREAM names were replaced by PUSH/PULL
| [Thursday 17 March 2011] [00:10:20] <cremes>	PUB/SUB has not changed nor are there any plans to change it
| [Thursday 17 March 2011] [00:25:21] <tokyodan>	is there a difference between PUSH
| [Thursday 17 March 2011] [00:25:33] <tokyodan>	PULL and PUB/SUB?
| [Thursday 17 March 2011] [00:26:58] <cremes>	tokyodan: yes, they are quite different
| [Thursday 17 March 2011] [00:27:19] <cremes>	in PUB/SUB, any messages sent via PUB are broadcast to *all* subscribers simultaneously
| [Thursday 17 March 2011] [00:27:44] <cremes>	in PUSH/PULL, messages send via PUSH are delivered round-robin to all connected PULL sockets
| [Thursday 17 March 2011] [00:27:55] <cremes>	if you haven't read the guide yet, please do so
| [Thursday 17 March 2011] [00:28:08] <cremes>	there are lots of examples and quite a bit of text explaining this
| [Thursday 17 March 2011] [00:28:16] <cremes>	see the channel topic for a link to the guide
| [Thursday 17 March 2011] [00:28:17] <tokyodan>	That's what I'm going to do. Thanks.
| [Thursday 17 March 2011] [00:28:58] <tokyodan>	I already got it printed out. I was just jumping in, installing, and trying the examples.
| [Thursday 17 March 2011] [00:33:49] <cremes>	tokyodan: that's the best way to figure it out
| [Thursday 17 March 2011] [03:38:10] <sustrik>	mikko: hi, are you there?
| [Thursday 17 March 2011] [05:53:44] <pieterh_>	sustrik: ping
| [Thursday 17 March 2011] [05:53:49] <sustrik>	pong
| [Thursday 17 March 2011] [05:53:52] <pieterh_>	I'm sending the OpenPGM patches to the list
| [Thursday 17 March 2011] [05:53:59] <sustrik>	great
| [Thursday 17 March 2011] [05:54:02] <sustrik>	how was the meetup?
| [Thursday 17 March 2011] [05:54:04] <pieterh_>	this covers the changes Mikko made but also include the tarballs, so they're large
| [Thursday 17 March 2011] [05:54:15] <pieterh_>	the meetup was excellent, but too many people
| [Thursday 17 March 2011] [05:54:17] <pieterh_>	:-)
| [Thursday 17 March 2011] [05:54:23] <sustrik>	i can update the tarball myself
| [Thursday 17 March 2011] [05:54:29] <sustrik>	no need to include it into the patch
| [Thursday 17 March 2011] [05:54:34] <pieterh_>	I can't make a patch without the tarball, it's in one commit
| [Thursday 17 March 2011] [05:54:41] <sustrik>	ok
| [Thursday 17 March 2011] [05:54:42] <sustrik>	np
| [Thursday 17 March 2011] [05:54:47] <sustrik>	too many?
| [Thursday 17 March 2011] [05:54:56] <pieterh_>	yeah, twenty or twenty five
| [Thursday 17 March 2011] [05:55:01] <pieterh_>	impossible to speak to everyone
| [Thursday 17 March 2011] [05:55:02] <sustrik>	oh my, not enough chairs?
| [Thursday 17 March 2011] [05:55:18] <pieterh_>	we found space, Mikko and Ian organized it very well
| [Thursday 17 March 2011] [05:56:21] <pieterh_>	i'm testing that Steve's patches apply, will let you know
| [Thursday 17 March 2011] [05:57:01] <sustrik>	i can do that
| [Thursday 17 March 2011] [05:57:03] <sustrik>	no problem
| [Thursday 17 March 2011] [05:58:33] <pieterh_>	ok, they apply cleanly
| [Thursday 17 March 2011] [05:58:58] <sustrik>	thx
| [Thursday 17 March 2011] [05:59:18] <pieterh_>	these changes are more complex than normal because they include the tarballs
| [Thursday 17 March 2011] [05:59:33] <pieterh_>	Mikko wants to make the build system pull the tarballs down dynamically afiau
| [Thursday 17 March 2011] [05:59:39] <pieterh_>	that would be neat
| [Thursday 17 March 2011] [05:59:51] <sustrik>	in the past the tarballs were updated out of normal process
| [Thursday 17 March 2011] [06:00:03] <sustrik>	ie. not via mailing list
| [Thursday 17 March 2011] [06:00:16] <pieterh_>	yeah
| [Thursday 17 March 2011] [06:00:33] <pieterh_>	this was because I used a pull request from Mikko's git
| [Thursday 17 March 2011] [06:00:46] <sustrik>	as for automatic update, how would it know when to update?
| [Thursday 17 March 2011] [06:00:58] <sustrik>	each new version?
| [Thursday 17 March 2011] [06:01:06] <pieterh_>	hmm, at install time?
| [Thursday 17 March 2011] [06:01:14] <sustrik>	ah, that way
| [Thursday 17 March 2011] [06:01:19] <pieterh_>	since 0MQ now builds with any version of OpenPGM
| [Thursday 17 March 2011] [06:02:06] <pieterh_>	all you need to do is say, "please build 0MQ with OpenPGM vx.y.z" and it would pull and unpack that tarball
| [Thursday 17 March 2011] [06:02:17] <pieterh_>	something like that, presumably with defaults
| [Thursday 17 March 2011] [06:02:21] <sustrik>	i see
| [Thursday 17 March 2011] [06:02:46] <pieterh_>	this is possible because OpenPGM now has full autotooling, so 0MQ can be much more naive about it
| [Thursday 17 March 2011] [06:02:51] <sustrik>	is steve ready to freeze the API?
| [Thursday 17 March 2011] [06:03:00] <pieterh_>	Steve...?
| [Thursday 17 March 2011] [06:03:04] <sustrik>	mc coy
| [Thursday 17 March 2011] [06:03:11] <pieterh_>	I meant, "Steve... ping...?"
| [Thursday 17 March 2011] [06:03:26] <sustrik>	if not, the auto-upload could break
| [Thursday 17 March 2011] [06:03:34] <pieterh_>	yes
| [Thursday 17 March 2011] [06:03:54] <pieterh_>	this is speculation, anyhow, but Mikko and Steve already did amazing work on the integration
| [Thursday 17 March 2011] [06:04:04] <pieterh_>	so I assume they'd get this working properly
| [Thursday 17 March 2011] [06:05:51] <sustrik>	ok, let me apply the patch
| [Thursday 17 March 2011] [06:23:55] <sustrik>	pieterh_1: you should consult the build system maintainers before committing build-related patches imo
| [Thursday 17 March 2011] [06:24:07] <sustrik>	mikko presumably, in this case
| [Thursday 17 March 2011] [06:24:24] <pieterh_1>	you mean Steve's patches...
| [Thursday 17 March 2011] [06:24:25] <pieterh_1>	right
| [Thursday 17 March 2011] [06:24:27] <sustrik>	yes
| [Thursday 17 March 2011] [06:24:44] <pieterh_1>	I'll ask Mikko to review them, good idea
| [Thursday 17 March 2011] [08:04:59] <Guthur>	pieterh, with peering3 what sort of output should I expect?
| [Thursday 17 March 2011] [08:20:22] <Guthur>	oh nvm, working now
| [Thursday 17 March 2011] [08:30:26] <s0undt3ch>	hello ppl
| [Thursday 17 March 2011] [08:30:42] <s0undt3ch>	can a publisher know where a connection is comming from?
| [Thursday 17 March 2011] [08:30:53] <s0undt3ch>	ie, so I can auth/deny a subscription?
| [Thursday 17 March 2011] [08:35:55] <sustrik>	no
| [Thursday 17 March 2011] [09:45:43] <stimpie>	Iam getting unstable performance using jzmq on windows, 1,000,000 x 128B messages gets 300K/s. 10,000,000 x 128B messages gets 20K/s 
| [Thursday 17 March 2011] [09:46:58] <stimpie>	it looks like this is caused by the sender, using a c sender and a java receiver gets a stable 300K/s 
| [Thursday 17 March 2011] [09:47:31] <sustrik>	it must be java binding issue then
| [Thursday 17 March 2011] [09:47:40] <sustrik>	try reporting it on jzmq's bug tracker
| [Thursday 17 March 2011] [09:47:49] <sustrik>	or on the mailing list
| [Thursday 17 March 2011] [09:49:18] <stimpie>	ok I will try to create a simple reproducible scenario. (or just provide the results to my boss, saying we shouldn't use windows ;-)
| [Thursday 17 March 2011] [09:49:58] <fred86>	When using pub/sub sockets that stay open for a long time (without any activity), I find that after a while (maybe 1+ hours later), the client-side stops receiving messages (however when I open a new client, the new client can receive messages). Do the sockets reconnect automatically if there's a short network outage? What could the problem be? Thanks.
| [Thursday 17 March 2011] [09:50:04] <cremes>	stimpie: does this example use PUB/SUB?
| [Thursday 17 March 2011] [09:50:27] <cremes>	stimpie: if so, your publisher could be overrunning the subscriber; in that case the publisher will queue the messages in memory
| [Thursday 17 March 2011] [09:50:39] <cremes>	which could lead to a slowdown if your box doesn't have enough RAM
| [Thursday 17 March 2011] [09:51:01] <stimpie>	cremes, yes its a PUB/SUB and memory usages skyrockets
| [Thursday 17 March 2011] [09:51:24] <cremes>	stimpie: then it is queueing in memory
| [Thursday 17 March 2011] [09:51:49] <cremes>	does the machine running the publisher have enough RAM or is it swapping to disk?
| [Thursday 17 March 2011] [09:52:03] <stimpie>	its starts swapping at some point 
| [Thursday 17 March 2011] [09:52:19] <cremes>	ok, then you have your answer as to why it gets slower
| [Thursday 17 March 2011] [09:52:41] <stimpie>	but why doesnt this occur with a c version?
| [Thursday 17 March 2011] [09:52:51] <cremes>	which part was in C?
| [Thursday 17 March 2011] [09:53:06] <stimpie>	I had a sender and receiver in c and in java
| [Thursday 17 March 2011] [09:53:25] <cremes>	c -> c, no problem?
| [Thursday 17 March 2011] [09:53:34] <cremes>	c -> java, slow?
| [Thursday 17 March 2011] [09:53:40] <cremes>	how about java -> c, does that work?
| [Thursday 17 March 2011] [09:53:46] <stimpie>	c->java is ok 
| [Thursday 17 March 2011] [09:53:54] <stimpie>	java -> c, is slow
| [Thursday 17 March 2011] [09:54:01] <cremes>	so which combo produces this slowdown?
| [Thursday 17 March 2011] [09:54:29] <stimpie>	java -> java is slow and java -> c is slow
| [Thursday 17 March 2011] [09:54:39] <stimpie>	c-> c, c -> java are fine
| [Thursday 17 March 2011] [09:54:56] <cremes>	interesting...
| [Thursday 17 March 2011] [09:55:38] <cremes>	java -> c being slow doesn't make any sense; that could certainly be a bug
| [Thursday 17 March 2011] [09:55:57] <cremes>	does the memory usage of the publisher sky-rocket in that combination?
| [Thursday 17 March 2011] [09:56:02] <stimpie>	yes
| [Thursday 17 March 2011] [09:56:29] <cremes>	weird... yes, open a ticket with all of these details including the code
| [Thursday 17 March 2011] [09:57:51] <stimpie>	I was thinking that maybe java uses some object overhead on each messages causing it to use more memory and start swaping sooner then the c versions
| [Thursday 17 March 2011] [09:59:01] <sustrik>	fred86: yes, there's automatic reconnection
| [Thursday 17 March 2011] [10:00:49] <fred86>	hmm, okay. Then this problem is a bit bizarre. the layout is a chatroom-like server (where the server does some processing before publishing a message). if there isn't any activity for a while, I find that the clients stop getting messages from the server.. (but they can still send messages..and I can see the server processing everything fine). and if I open new clients, they will be able to receive messages. do you have any idea wh
| [Thursday 17 March 2011] [10:01:46] <sustrik>	no,sorry, try to make a minimal reproducible test case and i'll have a look
| [Thursday 17 March 2011] [10:02:18] <sustrik>	stimpie: jave uses gc
| [Thursday 17 March 2011] [10:02:22] <sustrik>	java
| [Thursday 17 March 2011] [10:02:45] <sustrik>	which could mean that object deallocation is delayed
| [Thursday 17 March 2011] [10:03:08] <sustrik>	in that case each message would be stored in memory twice
| [Thursday 17 March 2011] [10:03:13] <sustrik>	once in 0mq buffer
| [Thursday 17 March 2011] [10:03:31] <sustrik>	second time in form of gargage on java heap
| [Thursday 17 March 2011] [10:05:19] <stimpie>	I will do some more test to see if it really is only a memory issue. 
| [Thursday 17 March 2011] [10:43:03] <gambi>	how do I return a message via XREQ in a stream callback? on one side i've got this zmqstream and a on_recv() callback and on the other side a regular socket which does the send() (that works) and the recv() (which doesn't)
| [Thursday 17 March 2011] [10:43:46] <gambi>	XREQ/XREP
| [Thursday 17 March 2011] [10:44:14] <gambi>	unfortunately I'm not sure how else do explain this, sorry :(
| [Thursday 17 March 2011] [10:48:21] <gambi>	basically I'm trying to send build something closely related to this: https://github.com/zeromq/pyzmq/blob/master/examples/heartbeat/heart.py but I'd like to have some processing done before it returns the message to the server.
| [Thursday 17 March 2011] [10:49:21] <gambi>	sorry for the random words that mix into my sentences ... I guess I'm already quite tired ;)
| [Thursday 17 March 2011] [10:50:30] <guido_g>	simply send the message back
| [Thursday 17 March 2011] [10:52:09] <guido_g>	gambi: see http://zeromq.github.com/pyzmq/eventloop.html#send
| [Thursday 17 March 2011] [10:55:42] <gambi>	guido_g: oh, great thanks for that! i'll try that right away. :)
| [Thursday 17 March 2011] [10:56:18] <guido_g>	one should try the products documentation *before* using the product...
| [Thursday 17 March 2011] [10:56:42] <gambi>	guido_g: oh, c'mon ... I've been reading the docs for hours ... ;)
| [Thursday 17 March 2011] [10:56:49] <guido_g>	sure
| [Thursday 17 March 2011] [11:21:16] <xs>	suppose the rep side of a reqrep dies after the req side has sent it's request. then the rep side recovers. shouldn't the req side re-send its request? this doesn't seem to be happening for me (i'm using multipart messages if that changes things)
| [Thursday 17 March 2011] [11:26:24] <cremes>	xs: no, 0mq doesn't auto-resend anything
| [Thursday 17 March 2011] [11:26:43] <cremes>	you would need to timeout the send and retry yourself
| [Thursday 17 March 2011] [11:27:12] <cremes>	to do so you have two choices and both use zmq_poll()
| [Thursday 17 March 2011] [11:27:22] <cremes>	1. close the REQ socket, reopen it and resend
| [Thursday 17 March 2011] [11:27:49] <cremes>	2. use an XREQ socket (this doesn't enforce the strict req/rep/req/rep message pattern) and resend upon timeout
| [Thursday 17 March 2011] [11:27:57] <cremes>	does that make sense to you?
| [Thursday 17 March 2011] [11:28:13] <xs>	i think so. thanks. 
| [Thursday 17 March 2011] [11:28:21] <xs>	am i correct in thinking i just have to timeout?
| [Thursday 17 March 2011] [11:28:32] <xs>	there's no way for me to determine that an endpoint has disappeared and reconnected
| [Thursday 17 March 2011] [11:28:45] <Guthur>	ch4 for of the guide covers reliability
| [Thursday 17 March 2011] [11:28:57] <Guthur>	It might have some useful patterns
| [Thursday 17 March 2011] [11:29:12] <cremes>	xs: correct, there is no way to determine that an endpoint has bounced
| [Thursday 17 March 2011] [11:29:21] <xs>	ok, thanks, i'll take a look.. i had just assumed 0mq would do this for me. sorry for the noise
| [Thursday 17 March 2011] [11:29:24] <cremes>	chapter4 of the guide is a good suggestion
| [Thursday 17 March 2011] [12:15:33] <stimpie>	A follow up on my java -> c performance issues, when limiting the send rate I could push my message rate to a ~300K/s, going above that results in swapping. So cause is memory and not a bug in the java wrapper
| [Thursday 17 March 2011] [12:16:05] <stimpie>	Still need to figure out how to handle such an overload in production but thats a different subject
| [Thursday 17 March 2011] [12:20:40] <sustrik>	use hwm/swap
| [Thursday 17 March 2011] [12:29:15] <Guthur>	pieterh, when simulating a server crash with lazy pirate client/server, should the client be generating...
| [Thursday 17 March 2011] [12:29:17] <Guthur>	Bad file descriptor
| [Thursday 17 March 2011] [12:29:24] <Guthur>	nbytes != -1 (mailbox.cpp:242)
| [Thursday 17 March 2011] [12:34:25] <Guthur>	oh sorry nvm, my mistake
| [Thursday 17 March 2011] [12:59:33] <michelp>	my coworkers have returned from pycon, it's hard to know if what they are saying about 0mq is FUD they acquired from someone else or not
| [Thursday 17 March 2011] [12:59:57] <michelp>	for example, they are saying in the PUB/SUB case that the subscriber is guaranteed to drop the first message always, all the time
| [Thursday 17 March 2011] [13:00:17] <michelp>	is that true? i remember seeing something about it in ch 1 but lost track of the problem in my reading of the guide
| [Thursday 17 March 2011] [13:09:06] <sustrik>	no, it's not true
| [Thursday 17 March 2011] [13:10:12] <michelp>	it seems to be a meme that has dug in hard from pycon.  sigh
| [Thursday 17 March 2011] [13:10:48] <ianbarber>	it's because if you right a bit of test code, and start publishing and subscribing at the same time, you'll likely push a bunch of messages before the subscriber is finished connecting
| [Thursday 17 March 2011] [13:11:11] <ianbarber>	this is a common new-to-0mq issue
| [Thursday 17 March 2011] [13:13:58] <michelp>	I suspect this is the part of the guide that has formed the meme: "Even if you start a subscriber, wait a while, and then start the publisher, the subscriber will always miss the first messages that the publisher sends."
| [Thursday 17 March 2011] [13:14:08] <michelp>	they read that far, and stop, and don't go on to read the solution
| [Thursday 17 March 2011] [13:14:37] <michelp>	Perhaps the very next sentence should be something along the lines of "Keep reading and we'll explain how to do it right" or something like that
| [Thursday 17 March 2011] [13:17:04] <michelp>	i think the fact that the sentence is bolded also make it stick in someone's mind more so than all the other information there.  anyway, it's unfortunate that it seems like these wrong impressions have spread through such a big community so quickly.
| [Thursday 17 March 2011] [13:17:46] <michelp>	maybe we need an anti-FUD faq
| [Thursday 17 March 2011] [13:18:22] <kdj>	Yeah, thats too bad. I haven't seen anything like that in my testing.
| [Thursday 17 March 2011] [14:45:51] <Guthur>	pieterh, ping?
| [Thursday 17 March 2011] [15:08:42] <Guthur>	private_meta, you about
| [Thursday 17 March 2011] [16:21:32] <mikko>	 hi
| [Thursday 17 March 2011] [16:25:09] <Guthur>	hey mikko 
| [Thursday 17 March 2011] [16:25:28] <Guthur>	I see the meet up at London was a success
| [Thursday 17 March 2011] [16:25:38] <Guthur>	you were there, correct?
| [Thursday 17 March 2011] [16:26:24] <mikko>	yes
| [Thursday 17 March 2011] [16:26:33] <mikko>	i will never drink beer again
| [Thursday 17 March 2011] [16:28:43] <Guthur>	stick to coffee, it actually can improve productivity, instead of the opposite, hehe
| [Thursday 17 March 2011] [16:28:59] <Guthur>	some nice topics though
| [Thursday 17 March 2011] [16:29:12] <Guthur>	the JMS is an interesting one
| [Thursday 17 March 2011] [16:29:54] <Guthur>	Just had this situation at work recently, not really related to 0MQ, more that someone wanted to interact with JMS outside of Java
| [Thursday 17 March 2011] [16:30:40] <Guthur>	I suggested a thin Java wrapper and 0MQ as the glue
| [Thursday 17 March 2011] [16:35:35] <Guthur>	mikko, did you implement any of the examples in ch4 perchance?
| [Thursday 17 March 2011] [16:42:04] <mikko>	Guthur: nope
| [Thursday 17 March 2011] [16:45:41] <mikko>	JMS came from Java guys at the meetup
| [Thursday 17 March 2011] [16:45:58] <mikko>	they said that Java market is a lot easier to penetrate with JMS compatible messaging
| [Thursday 17 March 2011] [16:48:37] <Guthur>	yeah they're probably right
| [Thursday 17 March 2011] [16:49:18] <Guthur>	I think sustrik suggestion is the sanest one
| [Thursday 17 March 2011] [16:49:53] <Guthur>	but probably not enough for the Java community, they like everything to be fully in the Java ecosystem
| [Thursday 17 March 2011] [16:53:50] <Guthur>	it'd be an interesting project actually
| [Thursday 17 March 2011] [16:57:19] <dahankzter>	I dont know, just a bridge would go a long way
| [Thursday 17 March 2011] [16:57:53] <dahankzter>	that way old IBM MQ's can be used in conjunction with nw =MQ stuff
| [Thursday 17 March 2011] [16:58:04] <dahankzter>	s/nw/new
| [Thursday 17 March 2011] [17:02:22] <Guthur>	yeah, I'm probably being a little cynical
| [Thursday 17 March 2011] [17:05:00] <dahankzter>	no, not really. its very much so but just being able to connect your new cool stuff woth the old expensive monster could go a long way
| [Thursday 17 March 2011] [17:20:20] <sustrik>	the nice thing about the bridge is that it's cheap
| [Thursday 17 March 2011] [17:20:41] <sustrik>	can be done in couple of days, i would say
| [Thursday 17 March 2011] [17:23:18] <dahankzter>	perhaps the problem is vendor specific protocols?
| [Thursday 17 March 2011] [17:23:37] <dahankzter>	jms does not define any such for the wire at least
| [Thursday 17 March 2011] [17:26:54] <dahankzter>	I think AMQP would be a nice place to start 
| [Thursday 17 March 2011] [17:30:59] <dahankzter>	i think you know lots of this though :) iMatix is mentioned on the AMQP site
| [Thursday 17 March 2011] [17:48:34] <sustrik>	dhankzter: you can bridge basically any protocol or API that provides PUB/SUB and/or REQ/REP semantics
| [Thursday 17 March 2011] [17:49:01] <sustrik>	as for AMQP there's 0mq/RabbitMQ bridge
| [Thursday 17 March 2011] [17:52:41] <dahankzter>	yes sure. i was just thinking from my perspective where normally there is a big proprietary thing eg MQ as "standard". I would not be allowed to pull in an extra middleware thing like RabbitMQ as well as my new code+zeromq. the convincing the management factor is not negligible unfortunately.
| [Thursday 17 March 2011] [18:14:15] <advant___>	How does zeromq guarantee message persistence and delivery without a database?  Or does it use something like hypersonic in-memory database?
| [Thursday 17 March 2011] [18:25:55] <dahankzter>	it doesn't
| [Thursday 17 March 2011] [18:29:47] <cremes>	advant___: it doesn't guarantee either of those things; what led you to think that?
| [Thursday 17 March 2011] [18:36:27] <advant___>	oh i dunno, I guess that would be part of a broker anyways
| [Thursday 17 March 2011] [20:48:26] <TokyoDan_>	In the Lua binding i don't see an equivalent for zmq_msg_close(). Why?
| [Thursday 17 March 2011] [20:53:24] <TokyoDan>	In the Lua bindings readme i don't see an equivalent to zmq_msg_close(). Why?
| [Thursday 17 March 2011] [21:00:32] <TokyoDan>	hello?
| [Thursday 17 March 2011] [21:12:04] <Guthur>	TokyoDan, It possibly cleans up itself
| [Thursday 17 March 2011] [21:12:32] <Guthur>	not familiar with Lua or the binding, but in clrzmq2 the GC actually takes care of that
| [Thursday 17 March 2011] [21:12:44] <Guthur>	there maybe some dispose equivalent
| [Thursday 17 March 2011] [21:13:20] <tokyodan_>	I was thinking the same thing as Lua has garbage collection. But I'm not sure.
| [Thursday 17 March 2011] [21:13:36] <Guthur>	you could take a look at the source code
| [Thursday 17 March 2011] [21:13:55] <Guthur>	it would probably be evident pretty quickly
| [Thursday 17 March 2011] [21:13:58] <tokyodan_>	Good idea.
| [Thursday 17 March 2011] [21:14:09] <Guthur>	sorry i'd have a look as well but I need to get to bed
| [Thursday 17 March 2011] [21:14:21] <tokyodan_>	Good Night.
| [Thursday 17 March 2011] [21:14:26] <tokyodan_>	Thanks again
| [Thursday 17 March 2011] [21:14:30] <Guthur>	g'night
| [Thursday 17 March 2011] [21:14:41] <Guthur>	your welcome, happy coding
| [Thursday 17 March 2011] [21:14:46] <Guthur>	you're*
| [Friday 18 March 2011] [04:09:36] <mikko>	good morning
| [Friday 18 March 2011] [04:10:52] <sustrik>	morning
| [Friday 18 March 2011] [04:11:54] <sustrik>	hi mikko, what about the pgm patch?
| [Friday 18 March 2011] [04:11:55] <Steve-o>	afternoon
| [Friday 18 March 2011] [04:12:08] <Steve-o>	afternoon
| [Friday 18 March 2011] [04:12:09] <mikko>	sustrik: i sent pull request to 201
| [Friday 18 March 2011] [04:12:11] <mikko>	ermm
| [Friday 18 March 2011] [04:12:13] <mikko>	2-1
| [Friday 18 March 2011] [04:12:40] <sustrik>	ok, so it's up to pieter to upstream it to master, right?
| [Friday 18 March 2011] [04:13:00] <mikko>	sustrik: i don't know
| [Friday 18 March 2011] [04:13:03] <sustrik>	:)
| [Friday 18 March 2011] [04:13:06] <sustrik>	never mind
| [Friday 18 March 2011] [04:13:19] <mikko>	i can prepare it for master as well
| [Friday 18 March 2011] [04:13:27] <mikko>	i think it should've gone to master first
| [Friday 18 March 2011] [04:13:35] <mikko>	and then backported to 2-1
| [Friday 18 March 2011] [04:13:46] <sustrik>	both directions are possible
| [Friday 18 March 2011] [04:13:52] <sustrik>	depends what you are doing
| [Friday 18 March 2011] [04:14:03] <sustrik>	with new development i would assume you are right
| [Friday 18 March 2011] [04:14:18] <sustrik>	with bugfixes the direction is opposite sometimes
| [Friday 18 March 2011] [04:14:36] <sustrik>	ie. stable version is fixed, then the fix is upstreamed to master (dev)
| [Friday 18 March 2011] [04:17:16] <jond>	morning all
| [Friday 18 March 2011] [04:17:20] <jond>	sutrik
| [Friday 18 March 2011] [04:18:06] <jond>	sustrik: let me know what you think on that xrep hwm, pollout stuff and i'll fix if necessary
| [Friday 18 March 2011] [04:21:37] <sustrik>	jond: it's a complex issue, i'll produce a lengthy email and send it to the ml later on
| [Friday 18 March 2011] [04:22:36] <jond>	sustrik: yes i have been thinking about it and it's not easy!
| [Friday 18 March 2011] [04:24:12] <jond>	i've gotta go now, can't see irc in the day so catch up later on list
| [Friday 18 March 2011] [04:39:56] <pieterh>	hi folks
| [Friday 18 March 2011] [04:40:00] <pieterh>	hi mikko
| [Friday 18 March 2011] [06:39:48] <yrashk>	I just realized why saleyn never replied to my email about erlzmq/erlzmq2 :-(
| [Friday 18 March 2011] [06:44:03] <sustrik>	you can try to ping him once more...
| [Friday 18 March 2011] [06:46:20] <sustrik>	but iirc the problem with erlang bindings is that each of the three has useful pieces of functionality that others don't have, but nobody is willing to work on merging the three featuresets into a single codebase
| [Friday 18 March 2011] [06:48:56] <yrashk>	sustrik: I don't think he'll be able to
| [Friday 18 March 2011] [06:49:08] <yrashk>	for the next 10 years or so
| [Friday 18 March 2011] [06:49:23] <sustrik>	oh my, is that definitive?
| [Friday 18 March 2011] [06:49:42] <yrashk>	sustrik: it's impossible to merge erlzmq & erlzmq2, they use different binding strategies
| [Friday 18 March 2011] [06:49:46] <yrashk>	sustrik: pretty much
| [Friday 18 March 2011] [06:49:49] <sustrik>	:(
| [Friday 18 March 2011] [06:50:00] <yrashk>	he has been jailed since mar 2 or so
| [Friday 18 March 2011] [06:50:06] <sustrik>	:(((
| [Friday 18 March 2011] [06:50:09] <yrashk>	"On March 2, 2011, it was reported that Mr. Aleynikov was incarcerated on request of the government, as he was judged to be more of a flight risk after separating from his wife and growing distant from his kids. [5]
| [Friday 18 March 2011] [06:50:13] <yrashk>	"
| [Friday 18 March 2011] [06:50:17] <yrashk>	also his wife filed a divorce
| [Friday 18 March 2011] [06:50:24] <yrashk>	not a good time for Sergey
| [Friday 18 March 2011] [06:50:47] <yrashk>	which is like, today
| [Friday 18 March 2011] [06:51:12] <sustrik>	oh well
| [Friday 18 March 2011] [06:51:41] <sustrik>	so it's up to the rest of erlzmq community to drive the project forward
| [Friday 18 March 2011] [06:51:51] <yrashk>	yup
| [Friday 18 March 2011] [06:52:01] <yrashk>	but again
| [Friday 18 March 2011] [06:52:10] <yrashk>	erlzmq and erlzq2 can't be merged by any means
| [Friday 18 March 2011] [06:52:15] <yrashk>	they are way too different
| [Friday 18 March 2011] [06:52:17] <sustrik>	yes, the codebase itself cannot be merged
| [Friday 18 March 2011] [06:52:25] <yrashk>	erlzmq2 won't work with older Erlang VMs
| [Friday 18 March 2011] [06:52:30] <yrashk>	as it uses a new binding technique
| [Friday 18 March 2011] [06:52:30] <sustrik>	what could be merged is functionality
| [Friday 18 March 2011] [06:52:39] <yrashk>	I thiknk they are very close functionally
| [Friday 18 March 2011] [06:53:00] <sustrik>	close = equivalent?
| [Friday 18 March 2011] [06:53:00] <yrashk>	we don't have an active mode (like saleyn had for the main erlzmq)
| [Friday 18 March 2011] [06:53:11] <yrashk>	APIs is not absolutely equivalent, no
| [Friday 18 March 2011] [06:53:22] <yrashk>	module names are different, app name is different
| [Friday 18 March 2011] [06:53:24] <sustrik>	the problem is that as long as there's functionality missing, those using one binding
| [Friday 18 March 2011] [06:53:28] <yrashk>	some calls might look a little bit different
| [Friday 18 March 2011] [06:53:29] <sustrik>	cannot switch to anotherone
| [Friday 18 March 2011] [06:53:39] <yrashk>	I don't think we have any functionality missing, really
| [Friday 18 March 2011] [06:53:52] <yrashk>	active mode was controversial anyway
| [Friday 18 March 2011] [06:54:01] <yrashk>	I think jugg opposed it a lot
| [Friday 18 March 2011] [06:54:14] <sustrik>	doesn't it have to do with pushback?
| [Friday 18 March 2011] [06:54:27] <sustrik>	won't passive mode just exhaust all the memory
| [Friday 18 March 2011] [06:54:34] <sustrik>	if sender is faster than receiver?
| [Friday 18 March 2011] [06:54:50] <yrashk>	well
| [Friday 18 March 2011] [06:55:00] <yrashk>	passive mode is pretty much reliant on the way 0mq works
| [Friday 18 March 2011] [06:55:34] <yrashk>	recv/poll
| [Friday 18 March 2011] [06:55:50] <yrashk>	there are certain issues why we haven't implemented active mode yet
| [Friday 18 March 2011] [06:56:07] <yrashk>	we could have done a workaround.. but still not sure if it is worth it
| [Friday 18 March 2011] [06:56:22] <yrashk>	it probably is worth a try
| [Friday 18 March 2011] [06:56:23] <sustrik>	is there any other way to implement pushback?
| [Friday 18 March 2011] [06:56:34] <yrashk>	what od you mean by a pushback?
| [Friday 18 March 2011] [06:56:59] <sustrik>	meaning that when the receiving end is not able to keep up with the sender
| [Friday 18 March 2011] [06:57:05] <sustrik>	the sender gets blocked
| [Friday 18 March 2011] [06:57:19] <sustrik>	until the receiver catches up
| [Friday 18 March 2011] [06:57:23] <yrashk>	not sure how to do anything about this
| [Friday 18 March 2011] [06:57:36] <sustrik>	i think that was what active mode was for
| [Friday 18 March 2011] [06:57:37] <yrashk>	basically what we do is we just pass messages back to erlang
| [Friday 18 March 2011] [06:57:42] <yrashk>	either directly or as actual essages
| [Friday 18 March 2011] [06:58:03] <yrashk>	active mode is just something that does recv for you, basically
| [Friday 18 March 2011] [06:58:25] <yrashk>	so I am not sure
| [Friday 18 March 2011] [06:58:45] <sustrik>	the problem is that erlang stores the messages in erlang mailbox
| [Friday 18 March 2011] [06:58:50] <yrashk>	yep
| [Friday 18 March 2011] [06:58:51] <sustrik>	which grows indefinitely
| [Friday 18 March 2011] [06:58:57] <yrashk>	but we don't send them unless you request
| [Friday 18 March 2011] [06:59:10] <yrashk>	active is what sends them regardless of whether you can keep up
| [Friday 18 March 2011] [06:59:16] <yrashk>	our recv() algo is simple
| [Friday 18 March 2011] [06:59:27] <yrashk>	1. recv noblock
| [Friday 18 March 2011] [06:59:31] <yrashk>	2. if there was something, return
| [Friday 18 March 2011] [06:59:40] <yrashk>	3. if not, let the reader thread poll it
| [Friday 18 March 2011] [06:59:51] <sustrik>	yes, that's ok
| [Friday 18 March 2011] [06:59:52] <yrashk>	4. when something appears there, send a message to the original requesting process
| [Friday 18 March 2011] [06:59:58] <sustrik>	what about the sender side?
| [Friday 18 March 2011] [07:00:16] <yrashk>	sender just does send() and that's it
| [Friday 18 March 2011] [07:00:27] <sustrik>	it blocks the thread?
| [Friday 18 March 2011] [07:00:38] <yrashk>	you mean the scheduler?
| [Friday 18 March 2011] [07:00:42] <sustrik>	then you can end up with deadlocked erlang VM
| [Friday 18 March 2011] [07:00:51] <sustrik>	i mean physicall thread
| [Friday 18 March 2011] [07:00:57] <sustrik>	from erlang's thread pool
| [Friday 18 March 2011] [07:01:02] <yrashk>	if you don't pass noblock, yes it will block the scheduler
| [Friday 18 March 2011] [07:01:08] <yrashk>	we don't use erlang's thead pool
| [Friday 18 March 2011] [07:01:20] <yrashk>	NIF calls block the scheduler
| [Friday 18 March 2011] [07:01:35] <sustrik>	i mean, erlang VM has to execute in an OS thread(s)
| [Friday 18 March 2011] [07:01:46] <yrashk>	so if zmq_send blocks, the VM is blocked (well, one cpu core is blocked, to be precise)
| [Friday 18 March 2011] [07:01:59] <sustrik>	exactly
| [Friday 18 March 2011] [07:02:00] <yrashk>	yes, erlang vm usually has # of schedulers equal to number of cores
| [Friday 18 March 2011] [07:02:08] <sustrik>	so, if there's 1 CPU
| [Friday 18 March 2011] [07:02:20] <yrashk>	and 1 core?
| [Friday 18 March 2011] [07:02:27] <sustrik>	and you call invoke 0mq in a blocking way
| [Friday 18 March 2011] [07:02:41] <sustrik>	the whole OS process gets bloecked
| [Friday 18 March 2011] [07:02:43] <yrashk>	it will fuck up, yes
| [Friday 18 March 2011] [07:02:52] <yrashk>	we were thinking about non-blocking send()
| [Friday 18 March 2011] [07:02:58] <yrashk>	just haven't done it yet
| [Friday 18 March 2011] [07:03:08] <yrashk>	there's nothing that prevents us from doing it
| [Friday 18 March 2011] [07:03:30] <sustrik>	that would mean busy-looping and 100% CPU usage, no?
| [Friday 18 March 2011] [07:03:54] <yrashk>	nah
| [Friday 18 March 2011] [07:04:02] <yrashk>	we poll on internal inproc sockets
| [Friday 18 March 2011] [07:04:06] <yrashk>	for commands
| [Friday 18 March 2011] [07:04:13] <yrashk>	in the receiver thread
| [Friday 18 March 2011] [07:04:17] <yrashk>	which does async recv
| [Friday 18 March 2011] [07:04:37] <yrashk>	so we can do the same thing for send, pretty much
| [Friday 18 March 2011] [07:04:41] <yrashk>	may be even in the same thread
| [Friday 18 March 2011] [07:04:43] <sustrik>	aha
| [Friday 18 March 2011] [07:04:55] <yrashk>	no biggie
| [Friday 18 March 2011] [07:05:00] <sustrik>	that way the polling doesn't block the erlang scheduler, right?
| [Friday 18 March 2011] [07:05:02] <yrashk>	will take probabyl an hour or two to implement
| [Friday 18 March 2011] [07:05:07] <yrashk>	it does not
| [Friday 18 March 2011] [07:05:10] <yrashk>	it never does
| [Friday 18 March 2011] [07:05:14] <sustrik>	nice
| [Friday 18 March 2011] [07:05:21] <yrashk>	it's always in that second thread
| [Friday 18 March 2011] [07:05:27] <yrashk>	we have one thread per context
| [Friday 18 March 2011] [07:05:38] <yrashk>	which I guess is good enough
| [Friday 18 March 2011] [07:05:43] <yrashk>	originally I had a thread per socket
| [Friday 18 March 2011] [07:05:47] <yrashk>	and that was a tad nasty
| [Friday 18 March 2011] [07:05:56] <yrashk>	but evax refactored this nicely
| [Friday 18 March 2011] [07:06:05] <sustrik>	so erlang allows you to say "please invoke this code when this file descriptor becomes active"?
| [Friday 18 March 2011] [07:06:23] <sustrik>	and erlang scheduler will do that for you
| [Friday 18 March 2011] [07:06:28] <yrashk>	no, it's all manual
| [Friday 18 March 2011] [07:06:41] <yrashk>	there's some FD stuff in there, but not for NIFs afaik
| [Friday 18 March 2011] [07:06:59] <yrashk>	basically, when we poll in that thread
| [Friday 18 March 2011] [07:07:01] <sustrik>	the question is whether waiting for FD blocks the OS thread or not
| [Friday 18 March 2011] [07:07:16] <yrashk>	you mean zmq_poll?
| [Friday 18 March 2011] [07:07:22] <sustrik>	are you using zmq_poll?
| [Friday 18 March 2011] [07:07:24] <yrashk>	yes
| [Friday 18 March 2011] [07:07:33] <sustrik>	zmq_poll is blocking
| [Friday 18 March 2011] [07:07:38] <yrashk>	yes, and that's fine
| [Friday 18 March 2011] [07:07:43] <yrashk>	because we're in a separate thread
| [Friday 18 March 2011] [07:07:54] <yrashk>	which erlang has no idea about
| [Friday 18 March 2011] [07:07:55] <sustrik>	outside of erlang VM?
| [Friday 18 March 2011] [07:07:59] <sustrik>	i see
| [Friday 18 March 2011] [07:08:01] <yrashk>	well, it's in the same process
| [Friday 18 March 2011] [07:08:11] <yrashk>	but it's separate from the scheduler
| [Friday 18 March 2011] [07:08:24] <yrashk>	so all NIF calls are generally very short
| [Friday 18 March 2011] [07:08:35] <sustrik>	yep, that could work
| [Friday 18 March 2011] [07:08:35] <yrashk>	except for send() which might theoretically block
| [Friday 18 March 2011] [07:08:43] <yrashk>	but that's something we can definitely fix
| [Friday 18 March 2011] [07:08:51] <yrashk>	I just never saw zmq_send() blocking
| [Friday 18 March 2011] [07:08:51] <sustrik>	but can be done in same way as recv()
| [Friday 18 March 2011] [07:08:54] <yrashk>	yes
| [Friday 18 March 2011] [07:08:55] <yrashk>	absolutely
| [Friday 18 March 2011] [07:09:01] <sustrik>	you get that for high loads
| [Friday 18 March 2011] [07:09:06] <yrashk>	like I said, it's an easy change
| [Friday 18 March 2011] [07:09:13] <yrashk>	since we have worked out the approach
| [Friday 18 March 2011] [07:09:20] <sustrik>	would be good to get that in
| [Friday 18 March 2011] [07:09:27] <sustrik>	it's essential for some applications
| [Friday 18 March 2011] [07:09:31] <yrashk>	I see
| [Friday 18 March 2011] [07:09:35] <sustrik>	such as rabbitmq/0mq bridge
| [Friday 18 March 2011] [07:09:37] <yrashk>	I am adding a github issue right now
| [Friday 18 March 2011] [07:10:17] <yrashk>	https://github.com/zeromq/erlzmq2/issues/1
| [Friday 18 March 2011] [07:10:21] <sustrik>	:)
| [Friday 18 March 2011] [07:10:41] <sustrik>	what about the third erlzmq binding?
| [Friday 18 March 2011] [07:10:48] <sustrik>	any additional functionality there?
| [Friday 18 March 2011] [07:11:16] <yrashk>	cstar/jugg's?
| [Friday 18 March 2011] [07:11:21] <sustrik>	i guess
| [Friday 18 March 2011] [07:11:30] <yrashk>	I don't remember any special functionality there
| [Friday 18 March 2011] [07:11:37] <yrashk>	it looked more polished than the official one
| [Friday 18 March 2011] [07:11:41] <yrashk>	to my eye
| [Friday 18 March 2011] [07:11:55] <yrashk>	so I guess it's good for older erlangs
| [Friday 18 March 2011] [07:12:11] <sustrik>	aha, that's the catch, right?
| [Friday 18 March 2011] [07:12:11] <yrashk>	or if you have any reasons to use port driver instead of NIF
| [Friday 18 March 2011] [07:12:16] <sustrik>	old arlangs don't have NIF
| [Friday 18 March 2011] [07:12:19] <yrashk>	yeah they don't
| [Friday 18 March 2011] [07:12:42] <sustrik>	well, if you believe there's all the functionality in erlzmq2
| [Friday 18 March 2011] [07:12:44] <yrashk>	and some of those have (like last R13Bs and early R14As) but the API was changing a lot
| [Friday 18 March 2011] [07:12:58] <yrashk>	so we're pretty much >=R14B01 or so
| [Friday 18 March 2011] [07:13:12] <sustrik>	let's discuss making it a primary erlang binding on the mailing list
| [Friday 18 March 2011] [07:13:22] <yrashk>	also, jugg was never able to clock performance comparable to erlzmq2
| [Friday 18 March 2011] [07:13:29] <sustrik>	yes, i recall that
| [Friday 18 March 2011] [07:13:30] <yrashk>	lets do that
| [Friday 18 March 2011] [07:13:37] <yrashk>	we have like 1.3mln/sec for 1bytes
| [Friday 18 March 2011] [07:13:41] <yrashk>	which is not bad
| [Friday 18 March 2011] [07:13:46] <yrashk>	not great, but decent
| [Friday 18 March 2011] [07:13:51] <sustrik>	it's very nice
| [Friday 18 March 2011] [07:13:55] <yrashk>	(on my mac pro)
| [Friday 18 March 2011] [07:13:58] <sustrik>	comparable to other non-C languages
| [Friday 18 March 2011] [07:14:02] <yrashk>	c-to-c on my mac pro is like twice as fast
| [Friday 18 March 2011] [07:14:23] <yrashk>	2.5+mln/sec
| [Friday 18 March 2011] [07:14:31] <yrashk>	but we weren't able to squeeze out more yet
| [Friday 18 March 2011] [07:14:36] <yrashk>	and I am not sure we can
| [Friday 18 March 2011] [07:14:56] <sustrik>	you have to keep in mind that erlang runtime does a lot of stuff
| [Friday 18 March 2011] [07:15:00] <sustrik>	scheduling etc.
| [Friday 18 March 2011] [07:15:08] <sustrik>	which takes some time itself
| [Friday 18 March 2011] [07:15:17] <yrashk>	of course
| [Friday 18 March 2011] [07:15:28] <yrashk>	I know erlang fairly well
| [Friday 18 March 2011] [07:15:31] <yrashk>	or so I think
| [Friday 18 March 2011] [07:15:37] <sustrik>	with throughput over 1M/sec
| [Friday 18 March 2011] [07:15:46] <sustrik>	you are getting to nanosecond ranges
| [Friday 18 March 2011] [07:15:53] <yrashk>	well that's for 1bytes
| [Friday 18 March 2011] [07:15:59] <yrashk>	1Kb is like 300K/sec
| [Friday 18 March 2011] [07:16:13] <yrashk>	which is still okay I guess
| [Friday 18 March 2011] [07:16:22] <sustrik>	100% bandwidth utilisation i would guess
| [Friday 18 March 2011] [07:16:28] <sustrik>	1GbE?
| [Friday 18 March 2011] [07:16:36] <yrashk>	it's all localhost tests :)
| [Friday 18 March 2011] [07:16:57] <yrashk>	both for c-to-c and erlang-to-erlang
| [Friday 18 March 2011] [07:17:04] <sustrik>	ack
| [Friday 18 March 2011] [07:17:07] <yrashk>	for comparison
| [Friday 18 March 2011] [07:17:11] <yrashk>	tcp transport
| [Friday 18 March 2011] [07:17:14] <sustrik>	the larger the message, the less the erlang overhead
| [Friday 18 March 2011] [07:17:16] <yrashk>	ipc was about the same
| [Friday 18 March 2011] [07:17:41] <sustrik>	anyway, 1.3M is great
| [Friday 18 March 2011] [07:18:30] 	 * yrashk performs a happy dance
| [Friday 18 March 2011] [07:19:11] <yrashk>	anyway
| [Friday 18 March 2011] [07:19:18] <yrashk>	lets discuss binding issue on the mailing list?
| [Friday 18 March 2011] [07:19:28] <yrashk>	I am subscribed (digest mode)
| [Friday 18 March 2011] [07:19:59] <yrashk>	will be back in about 30 mins
| [Friday 18 March 2011] [07:21:22] <sustrik>	yrashk: yes, send the proposal to the mailing listr
| [Friday 18 March 2011] [07:27:32] <Guthur>	talking of bindings, sustrik do you think it would be wise to discuss marking clrzmq as deprecated and that users should consider either the interop binding or clrzmq2
| [Friday 18 March 2011] [07:27:52] <Guthur>	the rational being that the original binding isn't really actively developed
| [Friday 18 March 2011] [07:28:10] <sustrik>	it's a community project, discuss it on the mailing list
| [Friday 18 March 2011] [07:28:14] <Guthur>	sure
| [Friday 18 March 2011] [07:28:19] <sustrik>	and if there's no opposition, let's do it
| [Friday 18 March 2011] [07:28:22] <Guthur>	just interested in what you think
| [Friday 18 March 2011] [07:28:45] <sustrik>	i would rather have actively maintained bindings as "official" :)
| [Friday 18 March 2011] [07:28:49] <Guthur>	ok, I'm raise it on the list later today
| [Friday 18 March 2011] [07:48:26] <pieterh_>	sustrik: ping
| [Friday 18 March 2011] [07:48:32] <sustrik>	pong
| [Friday 18 March 2011] [07:48:41] <pieterh_>	random question about pub/sub...
| [Friday 18 March 2011] [07:48:54] <pieterh_>	if I send a two-frame message, first key then value, I expect to receive two frames, right?
| [Friday 18 March 2011] [07:49:09] <sustrik>	yes
| [Friday 18 March 2011] [07:49:26] <pieterh_>	ok, I have a test case where it appears to sometimes fail at connection startup
| [Friday 18 March 2011] [07:49:39] <pieterh_>	loses first frame, sometimes
| [Friday 18 March 2011] [07:49:40] <pieterh_>	i
| [Friday 18 March 2011] [07:49:43] <sustrik>	ok
| [Friday 18 March 2011] [07:49:50] <pieterh_>	I'll post the server and client, hang on...
| [Friday 18 March 2011] [07:50:45] <Guthur>	pieterh_: with your lazy pirate patterns did you notice that reconnecting after CPU overload rarely happened?
| [Friday 18 March 2011] [07:51:20] <Guthur>	I've noticed this behaviour, even with the C examples
| [Friday 18 March 2011] [07:51:24] <pieterh_>	Guthur: what do you mean?
| [Friday 18 March 2011] [07:51:29] <pieterh_>	the client doesn't reconnect? 
| [Friday 18 March 2011] [07:51:46] <Guthur>	yeah, it tries and thinks the server is not there
| [Friday 18 March 2011] [07:51:50] <pieterh_>	normal, because its timeouts are quite aggressive, and simulation of CPU overload is quite a long pause afair
| [Friday 18 March 2011] [07:51:54] <Guthur>	if I remove the 1sec sleep it connects
| [Friday 18 March 2011] [07:52:05] <pieterh_>	try making the client more patient...
| [Friday 18 March 2011] [07:52:11] <Guthur>	1sec (heavy work)
| [Friday 18 March 2011] [07:52:15] <pieterh_>	i'll retest, hang on a sec...
| [Friday 18 March 2011] [07:53:10] <pieterh_>	sustrik: so, https://gist.github.com/875932
| [Friday 18 March 2011] [07:53:16] <pieterh_>	start the server, then the client
| [Friday 18 March 2011] [07:53:25] <sustrik>	ok, will give it a look
| [Friday 18 March 2011] [07:53:44] <pieterh_>	thanks, this is hitting one of my examples and I can't see my fault
| [Friday 18 March 2011] [07:53:53] <pieterh_>	so made a simplistic case, it still hits...
| [Friday 18 March 2011] [07:58:07] <pieterh_>	Guthur: it's just because the client is too impatient
| [Friday 18 March 2011] [07:59:03] <Guthur>	pieterh_: ok, cheers for testing
| [Friday 18 March 2011] [07:59:50] <pieterh_>	Guthur: I'll change the 'CPU overload' delay to 2 seconds instead of 5
| [Friday 18 March 2011] [07:59:57] <pieterh_>	this lets the client recover
| [Friday 18 March 2011] [08:00:09] <Guthur>	sounds good
| [Friday 18 March 2011] [08:01:02] <yrashk>	sustrik: what exactly should be in that proposal?
| [Friday 18 March 2011] [08:01:08] <Guthur>	it had me scratching my head for a while yesterday, for a moment I thought the Mono runtime was just insanely slow
| [Friday 18 March 2011] [08:01:18] <Guthur>	but then seen the same in C
| [Friday 18 March 2011] [08:02:18] <pieterh_>	yeah, it's good to be able to compare the different languages
| [Friday 18 March 2011] [08:02:19] <sustrik>	yrashk: "i propose making erlzmq2 an official erlang binding while keeping erlzmq as a binding for old versions of erlang"
| [Friday 18 March 2011] [08:02:25] <sustrik>	then list your arguments
| [Friday 18 March 2011] [08:02:28] <yrashk>	ok
| [Friday 18 March 2011] [08:02:29] <sustrik>	and ask people to comment
| [Friday 18 March 2011] [08:02:36] <pieterh_>	sustrik: I think that was already agreed...
| [Friday 18 March 2011] [08:02:46] <yrashk>	can I refer to you as it was your idea?
| [Friday 18 March 2011] [08:02:51] <pieterh_>	so erlzmq kind of became v1
| [Friday 18 March 2011] [08:03:01] <sustrik>	did it?
| [Friday 18 March 2011] [08:03:04] <yrashk>	wel
| [Friday 18 March 2011] [08:03:05] <yrashk>	well
| [Friday 18 March 2011] [08:03:05] <pieterh_>	yrashk: I missed something, why are you asking for people to comment on this?
| [Friday 18 March 2011] [08:03:09] <yrashk>	ont the wiki, eys
| [Friday 18 March 2011] [08:03:16] <yrashk>	pieterh_: I am not, sustrik does
| [Friday 18 March 2011] [08:03:41] <pieterh_>	sustrik: we already afaik got agreement from the erlzmq authors to make v2
| [Friday 18 March 2011] [08:03:52] <yrashk>	pieterh_: just one of them
| [Friday 18 March 2011] [08:04:01] <pieterh_>	yrashk: ah... did you ask the others?
| [Friday 18 March 2011] [08:04:03] <yrashk>	pieterh_: saleyn is unable to answer for some sad reasons
| [Friday 18 March 2011] [08:04:10] <pieterh_>	ok
| [Friday 18 March 2011] [08:04:26] <sustrik>	if it was discussed already, then there's no point in discussing it anew
| [Friday 18 March 2011] [08:04:31] <pieterh_>	indeed
| [Friday 18 March 2011] [08:04:34] <yrashk>	ok
| [Friday 18 March 2011] [08:04:35] <sustrik>	i just missed the original discussion
| [Friday 18 March 2011] [08:04:39] <yrashk>	ya it was discussed here 
| [Friday 18 March 2011] [08:04:51] <pieterh_>	it's already an official repository, and the name was made coherent, the wiki correct, etc.
| [Friday 18 March 2011] [08:05:08] <sustrik>	then there's no problem
| [Friday 18 March 2011] [08:05:14] <yrashk>	sweet
| [Friday 18 March 2011] [08:05:17] <yrashk>	less work for me then
| [Friday 18 March 2011] [08:05:23] <yrashk>	we'll then improve send() some time later
| [Friday 18 March 2011] [08:05:26] <pieterh_>	given that it's much faster and sticks to the same API, there was no real argument...
| [Friday 18 March 2011] [08:05:35] <sustrik>	i see
| [Friday 18 March 2011] [08:05:38] <yrashk>	to make it behave better on blocking sends
| [Friday 18 March 2011] [08:05:38] <evax>	yrashk, sustrik: doing it now
| [Friday 18 March 2011] [08:05:45] <yrashk>	evax: oh the issue #1?
| [Friday 18 March 2011] [08:05:50] <evax>	yes
| [Friday 18 March 2011] [08:06:01] <yrashk>	evax: I bet it should be easy to replicate the same method as we do with recv
| [Friday 18 March 2011] [08:06:05] <yrashk>	may be even the same thread
| [Friday 18 March 2011] [08:06:28] <evax>	same thread, yes
| [Friday 18 March 2011] [08:06:32] <yrashk>	sweet
| [Friday 18 March 2011] [08:06:47] <yrashk>	should be fairly trivial then
| [Friday 18 March 2011] [08:06:56] <yrashk>	just adding an enum flag to recv structure
| [Friday 18 March 2011] [08:07:07] <yrashk>	and renaming recv structure to something like command or someting
| [Friday 18 March 2011] [08:07:16] <yrashk>	also, evax
| [Friday 18 March 2011] [08:07:22] <evax>	yes, along those lines
| [Friday 18 March 2011] [08:07:24] <yrashk>	do you plan to do exactly the same scheme?
| [Friday 18 March 2011] [08:07:26] <yrashk>	i.e.
| [Friday 18 March 2011] [08:07:30] <yrashk>	recv noblock first
| [Friday 18 March 2011] [08:07:33] <evax>	sure
| [Friday 18 March 2011] [08:07:35] <yrashk>	err
| [Friday 18 March 2011] [08:07:37] <yrashk>	send*
| [Friday 18 March 2011] [08:07:41] <yrashk>	if it says EAGAIN
| [Friday 18 March 2011] [08:07:43] <yrashk>	then pool it
| [Friday 18 March 2011] [08:07:56] <evax>	shouldn't I ?
| [Friday 18 March 2011] [08:08:04] <yrashk>	so that we don't pool when it is unnecessary
| [Friday 18 March 2011] [08:08:10] <yrashk>	I think it's a good approach
| [Friday 18 March 2011] [08:08:22] <yrashk>	zmq_send(.., ZMQ_NOBLOCK) -> if EGAGAIN, pool
| [Friday 18 March 2011] [08:08:27] <yrashk>	otherwise, be done with it
| [Friday 18 March 2011] [08:08:30] <yrashk>	EAGAIN*
| [Friday 18 March 2011] [08:08:49] <yrashk>	that looks really very much the same way recv does
| [Friday 18 March 2011] [08:11:21] <evax>	except we have to store the msg somewhere
| [Friday 18 March 2011] [08:12:17] <yrashk>	in the same struct
| [Friday 18 March 2011] [08:12:25] <yrashk>	recv, but renamed
| [Friday 18 March 2011] [08:12:35] <yrashk>	and extended accordingly
| [Friday 18 March 2011] [08:12:57] <evax>	this goes over the ipc socket, so for big messages its ugly
| [Friday 18 March 2011] [08:13:01] <yrashk>	just copy the zms_msg
| [Friday 18 March 2011] [08:13:07] <yrashk>	it is
| [Friday 18 March 2011] [08:13:13] <yrashk>	but its not ipc
| [Friday 18 March 2011] [08:13:16] <yrashk>	inproc
| [Friday 18 March 2011] [08:13:21] <evax>	yeah
| [Friday 18 March 2011] [08:13:24] <yrashk>	we just pass a pointer
| [Friday 18 March 2011] [08:13:31] <yrashk>	how about that?
| [Friday 18 March 2011] [08:13:59] <yrashk>	and then zmq_msg_close it when done sending it in a loop
| [Friday 18 March 2011] [08:14:23] <yrashk>	theres more important problem
| [Friday 18 March 2011] [08:14:33] <yrashk>	in that thread we poll
| [Friday 18 March 2011] [08:14:47] <yrashk>	but if we do the blocking send there
| [Friday 18 March 2011] [08:15:09] <yrashk>	then receivers will get blocked untill the send is over
| [Friday 18 March 2011] [08:15:12] <yrashk>	mhm
| [Friday 18 March 2011] [08:15:18] <evax>	reading zmq.h shouldn't be a problem to pass the msg in, ideed
| [Friday 18 March 2011] [08:15:39] <yrashk>	yeah, so pointer in that struct for msg is cool
| [Friday 18 March 2011] [08:15:50] <yrashk>	but this problem above bothers me
| [Friday 18 March 2011] [08:15:53] <yrashk>	not nice
| [Friday 18 March 2011] [08:16:50] <yrashk>	also separate sending thread isnt solving this completely
| [Friday 18 March 2011] [08:17:02] <yrashk>	it will help us from blocking poller
| [Friday 18 March 2011] [08:17:23] <yrashk>	but it will not b able to send more than one thing at a time
| [Friday 18 March 2011] [08:17:33] <yrashk>	since sending is blocked
| [Friday 18 March 2011] [08:17:44] <yrashk>	if only we had a reverse poll
| [Friday 18 March 2011] [08:17:47] <yrashk>	wait
| [Friday 18 March 2011] [08:18:00] <yrashk>	dont we have that kind of event in poll?
| [Friday 18 March 2011] [08:18:08] <evax>	it has to be in the same thread
| [Friday 18 March 2011] [08:18:14] <yrashk>	not sure how it will help tho
| [Friday 18 March 2011] [08:18:43] <evax>	and I'm not sure sending and recving are allowed at the same time
| [Friday 18 March 2011] [08:19:05] <evax>	if one must not use a socket in multiple threads
| [Friday 18 March 2011] [08:19:37] <yrashk>	hey
| [Friday 18 March 2011] [08:19:52] <yrashk>	how about using zmq_pollout event?
| [Friday 18 March 2011] [08:20:03] <evax>	sure
| [Friday 18 March 2011] [08:20:09] <yrashk>	it guarantees you can send without blocking
| [Friday 18 March 2011] [08:20:27] <yrashk>	so we can embed this into our poller
| [Friday 18 March 2011] [08:21:03] <yrashk>	this way we wont be blocking the poller ever
| [Friday 18 March 2011] [08:21:11] <yrashk>	i think it is a sound idea
| [Friday 18 March 2011] [08:21:56] <yrashk>	sustrik, wdyt? will it work fine? any precautions?
| [Friday 18 March 2011] [08:23:28] <yrashk>	i really like it
| [Friday 18 March 2011] [08:42:40] <sustrik>	yes, that's what POLLOUT is for
| [Friday 18 March 2011] [08:43:08] <yrashk>	sweet
| [Friday 18 March 2011] [08:43:22] <yrashk>	so hopefully we'll have this non-blocking very soon then
| [Friday 18 March 2011] [08:43:32] <yrashk>	as it will not change our poller much
| [Friday 18 March 2011] [08:45:51] <Steve-o>	mikko: looks like all the platforms are good now
| [Friday 18 March 2011] [09:06:34] <pieterh_>	 sustrik: I think your email is inaccurate in some key ways
| [Friday 18 March 2011] [09:06:53] <pieterh_>	most critically, you are claiming a purpose for XREP that was never documented before
| [Friday 18 March 2011] [09:06:56] <sustrik>	feel free to discuss
| [Friday 18 March 2011] [09:07:09] <sustrik>	that's why i sent the email out
| [Friday 18 March 2011] [09:07:11] <pieterh_>	as a user, and the developer of many devices, the notion that you would break this, is... shocking
| [Friday 18 March 2011] [09:07:40] <sustrik>	that's why it has to be solved
| [Friday 18 March 2011] [09:07:41] <pieterh_>	it suggests (a) you don't know wtf you were doing, (b) you don't care about your users, (c) you don't understand what they are doing
| [Friday 18 March 2011] [09:07:48] <pieterh_>	none of this is true, but it's what your email suggests
| [Friday 18 March 2011] [09:07:50] <sustrik>	i would start with ZMQ)ROUTER socket type
| [Friday 18 March 2011] [09:08:19] <sustrik>	shrug, it has to be solved somehow
| [Friday 18 March 2011] [09:08:20] <pieterh_>	it's unavoidable that people use this as a ROUTER
| [Friday 18 March 2011] [09:08:27] <pieterh_>	so, embrace that and make it work nicely
| [Friday 18 March 2011] [09:08:28] <sustrik>	feel free to propose a solution
| [Friday 18 March 2011] [09:08:32] <pieterh_>	I've done that many times
| [Friday 18 March 2011] [09:08:39] <sustrik>	ZMQ_ROUTER, right?
| [Friday 18 March 2011] [09:08:40] <pieterh_>	call it by the right name, make it work a little better
| [Friday 18 March 2011] [09:08:42] <pieterh_>	yes
| [Friday 18 March 2011] [09:08:43] <pieterh_>	of course
| [Friday 18 March 2011] [09:08:49] <sustrik>	that's option 2 i think
| [Friday 18 March 2011] [09:08:51] <pieterh_>	you will see the overwhelming consensus on the list
| [Friday 18 March 2011] [09:09:02] <sustrik>	sure
| [Friday 18 March 2011] [09:09:03] <pieterh_>	you did read that thread, right?
| [Friday 18 March 2011] [09:09:04] <sustrik>	np
| [Friday 18 March 2011] [09:09:17] <sustrik>	yes
| [Friday 18 March 2011] [09:09:21] <pieterh_>	I like your solution of a verbose compile option
| [Friday 18 March 2011] [09:09:29] <sustrik>	i am just explaining the internals
| [Friday 18 March 2011] [09:09:40] <sustrik>	opt.2 is probably the best
| [Friday 18 March 2011] [09:09:53] <pieterh_>	well, you're saying you might make a different implementation of "return to sender" 
| [Friday 18 March 2011] [09:10:03] <sustrik>	definitely
| [Friday 18 March 2011] [09:10:10] <pieterh_>	which (and I give you the raw emotion) is ... shokcing
| [Friday 18 March 2011] [09:10:11] <pieterh_>	shocking
| [Friday 18 March 2011] [09:10:14] <sustrik>	that's the XREP should be separated from REOUTER
| [Friday 18 March 2011] [09:10:17] <sustrik>	ROUTER*
| [Friday 18 March 2011] [09:10:29] <sustrik>	they are two distinct things
| [Friday 18 March 2011] [09:10:32] <pieterh_>	you have a better idea for the REP-REQ chain?
| [Friday 18 March 2011] [09:10:40] <sustrik>	not at the moment
| [Friday 18 March 2011] [09:10:51] <sustrik>	but it's conceptually different from router
| [Friday 18 March 2011] [09:10:56] <pieterh_>	precisely, and afaics it's impossible without creating stateful fabric
| [Friday 18 March 2011] [09:11:02] <sustrik>	say the dropping of unroutable messages ->
| [Friday 18 March 2011] [09:11:03] <pieterh_>	conceptually it's the same
| [Friday 18 March 2011] [09:11:05] <pieterh_>	it's a use case
| [Friday 18 March 2011] [09:11:08] <sustrik>	ROUTER should not drop
| [Friday 18 March 2011] [09:11:10] <sustrik>	XREP should
| [Friday 18 March 2011] [09:11:14] <pieterh_>	yes it should
| [Friday 18 March 2011] [09:11:24] <pieterh_>	ROUTER should drop BUT it should be able to warn you
| [Friday 18 March 2011] [09:11:45] <pieterh_>	there is nothing useful you can do with an unroutable message but since it often suggests a programming error, you need visibility
| [Friday 18 March 2011] [09:11:47] <pieterh_>	that's all
| [Friday 18 March 2011] [09:11:52] <sustrik>	sure
| [Friday 18 March 2011] [09:12:08] <pieterh_>	I literally go into src/xrep.cpp and add a printf
| [Friday 18 March 2011] [09:12:15] <pieterh_>	so I can debug a complex router
| [Friday 18 March 2011] [09:12:41] <pieterh_>	doing a req-rep chain is just one use case for routing
| [Friday 18 March 2011] [09:12:44] <pieterh_>	it's not a core pattern
| [Friday 18 March 2011] [09:12:50] <sustrik>	it is
| [Friday 18 March 2011] [09:13:00] <pieterh_>	not a *separate* core pattern
| [Friday 18 March 2011] [09:13:02] <pieterh_>	afaics
| [Friday 18 March 2011] [09:14:18] <pieterh_>	tbh the envelope concept is ugly as heck but I can't see anything simpler or better
| [Friday 18 March 2011] [09:14:38] <sustrik>	the one described in the email is nice
| [Friday 18 March 2011] [09:14:46] <sustrik>	but works on only for req/rep
| [Friday 18 March 2011] [09:14:49] <sustrik>	not for router
| [Friday 18 March 2011] [09:15:02] <sustrik>	and it has some scaling issues
| [Friday 18 March 2011] [09:15:12] <sustrik>	so it's not a real alternative, i think
| [Friday 18 March 2011] [09:16:29] 	 * pieterh_ is re-reading the email
| [Friday 18 March 2011] [09:16:36] <pieterh_>	XPUB/XSUB are hop-by-hop?
| [Friday 18 March 2011] [09:16:53] <sustrik>	yes
| [Friday 18 March 2011] [09:16:59] <pieterh_>	the fact you implement PUB on XPUB, REQ on XREQ, is irrelevant to the user
| [Friday 18 March 2011] [09:17:04] <pieterh_>	it's vital to you, irrelevant to me
| [Friday 18 March 2011] [09:17:15] <pieterh_>	in fact, worse than irrelevant, it's negative data
| [Friday 18 March 2011] [09:17:53] <pieterh_>	you basically ask me as user to think about your implementation design, which breaks my brain
| [Friday 18 March 2011] [09:18:05] <pieterh_>	"The end-to-end type is always layered on top of the corresponding X socket"
| [Friday 18 March 2011] [09:18:06] <sustrik>	it works like IP and TCP
| [Friday 18 March 2011] [09:18:10] <pieterh_>	that's rubbish, sorry
| [Friday 18 March 2011] [09:18:14] <pieterh_>	I don't know IP
| [Friday 18 March 2011] [09:18:16] <sustrik>	a TCP user doesn't have to be aware of IP
| [Friday 18 March 2011] [09:18:19] <sustrik>	but it's there
| [Friday 18 March 2011] [09:18:32] <pieterh_>	sorry, it does not work for me, not at all
| [Friday 18 March 2011] [09:18:42] <pieterh_>	what I want are a set of socket types with clear names and clear semantics
| [Friday 18 March 2011] [09:18:50] <Steve-o>	+1
| [Friday 18 March 2011] [09:18:51] <pieterh_>	I don't want some layering and abstraction I need to learn first
| [Friday 18 March 2011] [09:18:52] <sustrik>	that's the option 2
| [Friday 18 March 2011] [09:18:59] <sustrik>	ZMQ_ROUTER
| [Friday 18 March 2011] [09:19:06] <pieterh_>	do not try to sell me your abstractions, it's what AMQP does and it's bogus
| [Friday 18 March 2011] [09:19:22] <sustrik>	what do you want exactly then?
| [Friday 18 March 2011] [09:19:25] <sustrik>	i am not following
| [Friday 18 March 2011] [09:19:28] <pieterh_>	I want clear socket names
| [Friday 18 March 2011] [09:19:33] <sustrik>	ZMQ_ROUTER
| [Friday 18 March 2011] [09:19:35] <pieterh_>	clear semantics that are documented up-front
| [Friday 18 March 2011] [09:19:36] <pieterh_>	yes
| [Friday 18 March 2011] [09:19:46] <pieterh_>	this is, sadly, reverse engineering
| [Friday 18 March 2011] [09:19:47] <sustrik>	what's the problem then?
| [Friday 18 March 2011] [09:19:55] <pieterh_>	it's me trying to make names that fit your semantics
| [Friday 18 March 2011] [09:20:12] <pieterh_>	there's no problem so long as you don't come back with abstractions that hurt my brain
| [Friday 18 March 2011] [09:20:13] <pieterh_>	:-)
| [Friday 18 March 2011] [09:20:23] <pieterh_>	it is already hard enough
| [Friday 18 March 2011] [09:20:35] <sustrik>	that's an abstraction on which 0mq is working from very beginning
| [Friday 18 March 2011] [09:20:38] <sustrik>	just ignore it
| [Friday 18 March 2011] [09:20:55] <sustrik>	as a user you don't have to care
| [Friday 18 March 2011] [09:20:58] <pieterh_>	do you understand that your semantics are counter-productive for mine?
| [Friday 18 March 2011] [09:21:08] <pieterh_>	we have a conflict, as user vs. designer?
| [Friday 18 March 2011] [09:21:27] <sustrik>	i don't think so
| [Friday 18 March 2011] [09:21:37] <pieterh_>	it's been that way so far
| [Friday 18 March 2011] [09:21:43] <pieterh_>	e.g. The end-to-end type is always layered on top of the corresponding X socket
| [Friday 18 March 2011] [09:21:49] <sustrik>	yes
| [Friday 18 March 2011] [09:22:03] <pieterh_>	that is toxic for me as user
| [Friday 18 March 2011] [09:22:12] <sustrik>	you don't have to care
| [Friday 18 March 2011] [09:22:20] <sustrik>	use just the non-X types
| [Friday 18 March 2011] [09:22:26] <sustrik>	that's what proposition 2 is about
| [Friday 18 March 2011] [09:22:34] <sustrik>	people want to use routing
| [Friday 18 March 2011] [09:22:43] <sustrik>	so let's make routing a first-class non-X socket
| [Friday 18 March 2011] [09:22:46] <sustrik>	ZMQ_ROUTER
| [Friday 18 March 2011] [09:22:53] <pieterh_>	well, you can make internal socket types that are undocumented
| [Friday 18 March 2011] [09:23:05] <pieterh_>	but ZMQ_ROUTER and ZMQ_DEALER cannot be internal and undocumented
| [Friday 18 March 2011] [09:23:15] <pieterh_>	since they cover 40%, as I said, of real application use cases
| [Friday 18 March 2011] [09:23:24] <sustrik>	X-sockets must be documented because they are used to make devices
| [Friday 18 March 2011] [09:23:32] <pieterh_>	devices are apps
| [Friday 18 March 2011] [09:23:43] <sustrik>	i.e. intermdiate nodes with no end-to-end functionalitty
| [Friday 18 March 2011] [09:23:46] <pieterh_>	X-sockets are your terminology
| [Friday 18 March 2011] [09:23:55] <pieterh_>	I'm against that terminology
| [Friday 18 March 2011] [09:24:02] <sustrik>	what would you want instead?
| [Friday 18 March 2011] [09:24:09] <pieterh_>	especially when you explain it
| [Friday 18 March 2011] [09:24:16] <sustrik>	i admitt the X- thing is stupid
| [Friday 18 March 2011] [09:24:18] <pieterh_>	just a clear set of sockets that are properly documented and match real requirements
| [Friday 18 March 2011] [09:24:23] <pieterh_>	it's not hard
| [Friday 18 March 2011] [09:24:24] <pieterh_>	design from the use case backwards
| [Friday 18 March 2011] [09:24:29] <sustrik>	haven't though of anything better though
| [Friday 18 March 2011] [09:24:30] <pieterh_>	not from the implementation forwards
| [Friday 18 March 2011] [09:24:36] <pieterh_>	I don't *care* how you implement stuff
| [Friday 18 March 2011] [09:24:58] <pieterh_>	what I do care about is the clarity of documentation as a contract
| [Friday 18 March 2011] [09:25:00] <pieterh_>	clear names
| [Friday 18 March 2011] [09:25:09] <sustrik>	the problem is that X- sockets have to be exposed because of device implementers
| [Friday 18 March 2011] [09:25:12] <pieterh_>	clear semantics that directly speak to user requirements
| [Friday 18 March 2011] [09:25:16] <pieterh_>	?
| [Friday 18 March 2011] [09:25:21] <sustrik>	so they can't be hidden
| [Friday 18 March 2011] [09:25:22] <pieterh_>	ZMQ_ROUTER is not a problem
| [Friday 18 March 2011] [09:25:28] <pieterh_>	sigh
| [Friday 18 March 2011] [09:25:32] <pieterh_>	devices are apps
| [Friday 18 March 2011] [09:25:34] <sustrik>	no, the problem is layering
| [Friday 18 March 2011] [09:25:40] <pieterh_>	that's your problem, not mine
| [Friday 18 March 2011] [09:25:55] <pieterh_>	that's an implementation detail
| [Friday 18 March 2011] [09:25:58] <pieterh_>	look... just make small steps here
| [Friday 18 March 2011] [09:26:06] <sustrik>	ok, so just ignore the X types
| [Friday 18 March 2011] [09:26:09] <pieterh_>	rename XREP and XREQ to ROUTER and DEALER
| [Friday 18 March 2011] [09:26:17] <pieterh_>	and stop using weird names that make no sense 
| [Friday 18 March 2011] [09:26:17] <sustrik>	it's mine problem, not yours
| [Friday 18 March 2011] [09:26:33] <pieterh_>	if you want to use undocumented internal socket types, fine
| [Friday 18 March 2011] [09:26:38] <pieterh_>	but they don't exist for me
| [Friday 18 March 2011] [09:26:45] <sustrik>	they must be documented because of devices
| [Friday 18 March 2011] [09:26:57] <sustrik>	there's no way to create a device with REQ/REP
| [Friday 18 March 2011] [09:27:01] <sustrik>	it would blockl
| [Friday 18 March 2011] [09:27:01] <pieterh_>	then they are not internal
| [Friday 18 March 2011] [09:27:07] <pieterh_>	well, I do know that
| [Friday 18 March 2011] [09:27:25] <pieterh_>	when I say "undocumented internal socket types" I do not mean ROUTER/DEALER
| [Friday 18 March 2011] [09:27:25] <pieterh_>	obviously
| [Friday 18 March 2011] [09:27:41] <pieterh_>	I mean e.g. XPUB/XSUB
| [Friday 18 March 2011] [09:27:51] <sustrik>	so my proposition is let distiquish XREP/XREQ
| [Friday 18 March 2011] [09:27:55] <sustrik>	from ROUTER/DEALER
| [Friday 18 March 2011] [09:28:03] <sustrik>	you can then use ROUTER/DEALER
| [Friday 18 March 2011] [09:28:04] <pieterh_>	why?
| [Friday 18 March 2011] [09:28:12] <pieterh_>	why keep the old names at all?
| [Friday 18 March 2011] [09:28:15] <sustrik>	because it's a different messaging pattern
| [Friday 18 March 2011] [09:28:21] <pieterh_>	sigh
| [Friday 18 March 2011] [09:28:23] <pieterh_>	this is just bogus
| [Friday 18 March 2011] [09:28:25] <sustrik>	it SMTP-like messaging
| [Friday 18 March 2011] [09:28:27] <pieterh_>	it's not a different pattern
| [Friday 18 March 2011] [09:28:34] <pieterh_>	it's just one use case
| [Friday 18 March 2011] [09:28:38] <sustrik>	specify an address, the message will get there
| [Friday 18 March 2011] [09:28:41] <pieterh_>	you have said it, there's no better way to implement it
| [Friday 18 March 2011] [09:28:48] <sustrik>	while req/rep is:
| [Friday 18 March 2011] [09:28:52] <pieterh_>	"message will get there" is not a socket semantic
| [Friday 18 March 2011] [09:29:01] <sustrik>	specify the name of the service, you task will be executed
| [Friday 18 March 2011] [09:29:18] <pieterh_>	that is Majordomo
| [Friday 18 March 2011] [09:29:21] <pieterh_>	have you actually read the Guide?
| [Friday 18 March 2011] [09:29:28] <sustrik>	most of it
| [Friday 18 March 2011] [09:29:38] <pieterh_>	you should perhaps see what people do with your work
| [Friday 18 March 2011] [09:29:39] <sustrik>	anyway, let's move this discussion on the mailing list
| [Friday 18 March 2011] [09:29:43] <pieterh_>	it's all based on real questions on the list
| [Friday 18 March 2011] [09:29:49] <pieterh_>	SOA is not a socket semantic
| [Friday 18 March 2011] [09:30:16] <pieterh_>	my advice, honestly, is to make small, careful evolutionary steps
| [Friday 18 March 2011] [09:30:26] <pieterh_>	do not make radical changes to things that took years to learn
| [Friday 18 March 2011] [09:30:28] <sustrik>	#define ZMQ_ROUTER ZMQ_XREP
| [Friday 18 March 2011] [09:30:31] <pieterh_>	people will not like you for it
| [Friday 18 March 2011] [09:30:32] <pieterh_>	sure
| [Friday 18 March 2011] [09:30:33] <sustrik>	that's as small as it gets
| [Friday 18 March 2011] [09:30:36] <pieterh_>	I've done that in 2.1
| [Friday 18 March 2011] [09:30:40] <pieterh_>	precisely that
| [Friday 18 March 2011] [09:30:45] <sustrik>	i'll do that in trunk
| [Friday 18 March 2011] [09:30:48] <pieterh_>	it's sufficient for me
| [Friday 18 March 2011] [09:30:54] <sustrik>	but i would like it to be discussed first
| [Friday 18 March 2011] [09:31:03] <pieterh_>	the naming has been discussed several times
| [Friday 18 March 2011] [09:31:05] <sustrik>	i assume that would be the preferred option
| [Friday 18 March 2011] [09:31:09] <pieterh_>	it's not the same issue as semantic changes
| [Friday 18 March 2011] [09:31:16] <sustrik>	but i don't want to do it without discussion on the list
| [Friday 18 March 2011] [09:31:21] <pieterh_>	you are mixing two issues and making the discussion harder
| [Friday 18 March 2011] [09:31:35] <pieterh_>	the naming *has* been discussed several times, with clear consensus
| [Friday 18 March 2011] [09:31:40] <pieterh_>	shall I point you to the thread?
| [Friday 18 March 2011] [09:31:44] <sustrik>	explain your point of view on the list then
| [Friday 18 March 2011] [09:31:54] <sustrik>	we are a community
| [Friday 18 March 2011] [09:31:56] <pieterh_>	I've done that, of course
| [Friday 18 March 2011] [09:31:59] <pieterh_>	we're also on IRC
| [Friday 18 March 2011] [09:32:03] <pieterh_>	this is logged
| [Friday 18 March 2011] [09:32:18] <sustrik>	yep, but lot of people are not here at the moment
| [Friday 18 March 2011] [09:32:25] <pieterh_>	the list is also fairly passive
| [Friday 18 March 2011] [09:32:39] <pieterh_>	nonetheless, I have asked about renaming the sockets and there was *clear* consensus
| [Friday 18 March 2011] [09:32:43] <pieterh_>	please do respect that
| [Friday 18 March 2011] [09:32:47] <pieterh_>	we are a community, as you say
| [Friday 18 March 2011] [09:32:48] <sustrik>	it's polite to allow even those in other timezones to discuss
| [Friday 18 March 2011] [09:33:10] <pieterh_>	also, reopening a discussion because you weren't there, or don't like the outcome is unpolite
| [Friday 18 March 2011] [09:33:17] <sustrik>	yep, i am for ZMQ_ROUTER options as well
| [Friday 18 March 2011] [09:33:22] <pieterh_>	so, we make that
| [Friday 18 March 2011] [09:33:29] <pieterh_>	and we consider the semantics as a separate issue
| [Friday 18 March 2011] [09:33:32] <sustrik>	it's supplying the missing pieces of information
| [Friday 18 March 2011] [09:33:44] <pieterh_>	i'm always in favor of better semantics but they must be carefully worked out of use cases
| [Friday 18 March 2011] [09:33:53] <sustrik>	yup
| [Friday 18 March 2011] [09:33:55] <pieterh_>	abstract "it's like XYZ" discussions are pointless IMO
| [Friday 18 March 2011] [09:33:59] <pieterh_>	we are not like XYZ
| [Friday 18 March 2011] [09:34:04] <sustrik>	sure, say so
| [Friday 18 March 2011] [09:34:07] <pieterh_>	XYZ is like us, done badly
| [Friday 18 March 2011] [09:34:07] <pieterh_>	period
| [Friday 18 March 2011] [09:34:18] <pieterh_>	what, again?
| [Friday 18 March 2011] [09:34:18] <pieterh_>	:-)
| [Friday 18 March 2011] [09:34:40] <sustrik>	:)
| [Friday 18 March 2011] [09:34:55] <pieterh_>	btw, for IPC, what do you think about making a shared memory transport?
| [Friday 18 March 2011] [09:35:11] <pieterh_>	one can make a portable shmem layer, then use that
| [Friday 18 March 2011] [09:35:29] <sustrik>	there's an API problem with that
| [Friday 18 March 2011] [09:35:32] <pieterh_>	all we need is a portable shmem api people can implement
| [Friday 18 March 2011] [09:35:39] <sustrik>	when you allocate a message
| [Friday 18 March 2011] [09:35:48] <sustrik>	(zmq_msg_init_size)
| [Friday 18 March 2011] [09:35:54] <sustrik>	it's allocated in process heap
| [Friday 18 March 2011] [09:36:01] <pieterh_>	right, that's fine, we copy data
| [Friday 18 March 2011] [09:36:20] <sustrik>	if you copy data then there's not much point in using shmem
| [Friday 18 March 2011] [09:36:32] <pieterh_>	much, much faster than IPC
| [Friday 18 March 2011] [09:36:45] <pieterh_>	also, am I wrong, but with ZMQ you *always* have to copy data on recv?
| [Friday 18 March 2011] [09:36:49] <sustrik>	if that's the case, then sure
| [Friday 18 March 2011] [09:36:57] <sustrik>	it have been discussed serveral times
| [Friday 18 March 2011] [09:37:03] <pieterh_>	shmem?
| [Friday 18 March 2011] [09:37:07] <sustrik>	yep
| [Friday 18 March 2011] [09:37:18] <sustrik>	but nobody really tried to implement it
| [Friday 18 March 2011] [09:37:21] <pieterh_>	I've not seen any attempt to slice it into two
| [Friday 18 March 2011] [09:37:21] <sustrik>	at least afaik
| [Friday 18 March 2011] [09:37:37] <sustrik>	two what?
| [Friday 18 March 2011] [09:37:40] <pieterh_>	two layers
| [Friday 18 March 2011] [09:37:57] <pieterh_>	so, abstract shmem api, and implementations thereof, and use thereof
| [Friday 18 March 2011] [09:38:12] <pieterh_>	the problem is today, you'd have to know both sides of the cake to make it
| [Friday 18 March 2011] [09:38:21] <pieterh_>	both how to make a transport in 0MQ, and how to do shmem on system X
| [Friday 18 March 2011] [09:38:28] <pieterh_>	I'd like to slice this into two problems
| [Friday 18 March 2011] [09:38:46] <sustrik>	how would you do that?
| [Friday 18 March 2011] [09:38:54] <Steve-o>	re: shmem I got as far as this and haven't looked at it again:  https://gist.github.com/876073
| [Friday 18 March 2011] [09:38:55] <pieterh_>	well, classic portable API solution
| [Friday 18 March 2011] [09:39:06] <pieterh_>	like how I made portable threading in ZFL
| [Friday 18 March 2011] [09:39:42] <sustrik>	currently 0MQ uses ZMQ_HAVE_... macros to provide OS-specific functionality
| [Friday 18 March 2011] [09:39:45] <pieterh_>	first step is to agree on what constitutes the necessary shmem api for a portable shmem transport in 0MQ
| [Friday 18 March 2011] [09:39:58] <pieterh_>	sure, but that's not helpful here, forget it
| [Friday 18 March 2011] [09:40:07] <pieterh_>	you do that in some module, shmem.cpp or whatever
| [Friday 18 March 2011] [09:40:11] <sustrik>	ah, you are speaking of internal apis, right?
| [Friday 18 March 2011] [09:40:14] <pieterh_>	yes
| [Friday 18 March 2011] [09:40:20] <sustrik>	abstraction for transports
| [Friday 18 March 2011] [09:40:23] <pieterh_>	a portability API for shmem
| [Friday 18 March 2011] [09:40:24] <pieterh_>	yes
| [Friday 18 March 2011] [09:40:30] <sustrik>	that would be great
| [Friday 18 March 2011] [09:40:38] <pieterh_>	it means one person writes the transport, another group makes it work on random boxes
| [Friday 18 March 2011] [09:40:38] <sustrik>	i was thinking about it for a long time
| [Friday 18 March 2011] [09:40:43] <sustrik>	but it's rather complex
| [Friday 18 March 2011] [09:40:48] <pieterh_>	all we need is a simple abstract API
| [Friday 18 March 2011] [09:40:52] <pieterh_>	shmem_get_block ()
| [Friday 18 March 2011] [09:40:56] <pieterh_>	shmem_write ()
| [Friday 18 March 2011] [09:41:00] <pieterh_>	etc. I have no idea...
| [Friday 18 March 2011] [09:41:05] <sustrik>	ah, at that level
| [Friday 18 March 2011] [09:41:21] <sustrik>	so not generic API for transports
| [Friday 18 March 2011] [09:41:30] <mato>	guys, re ROUTER, if we are going to formalize this then rather than just renaming XREP shouldn't we think about what the real semantics are for people who wish to do routing by design?
| [Friday 18 March 2011] [09:41:30] <pieterh_>	no, only for shmem
| [Friday 18 March 2011] [09:41:31] <sustrik>	rather generic API for shmem
| [Friday 18 March 2011] [09:41:44] <mato>	since the current use of router has simply evolved out of what XREP provides.
| [Friday 18 March 2011] [09:41:46] <pieterh_>	sustrik: yes, just to solve this case
| [Friday 18 March 2011] [09:41:48] <sustrik>	spieterh: sure, feel free to implement
| [Friday 18 March 2011] [09:41:53] <pieterh_>	mato: yes, but it seems there's no better way
| [Friday 18 March 2011] [09:42:12] <pieterh_>	sustrik: my problem is I have zero idea what a transport would need
| [Friday 18 March 2011] [09:42:14] <mato>	pieterh_: why so? there's no hurry, 3.0 is a way away yet
| [Friday 18 March 2011] [09:42:17] <sustrik>	mato: ack
| [Friday 18 March 2011] [09:42:26] <pieterh_>	I'm happy to make shmem implementations of some defined API
| [Friday 18 March 2011] [09:42:37] <mato>	pieterh_: aren't we supposed to be master programmers doing this well, rather than making rash decisions?
| [Friday 18 March 2011] [09:42:39] <sustrik>	pieterh: great
| [Friday 18 March 2011] [09:42:42] <pieterh_>	mato: there's no hurry except the current names are painful
| [Friday 18 March 2011] [09:42:42] <sustrik>	mato: my feeling is people want SMTP like-semantivc
| [Friday 18 March 2011] [09:42:44] <pieterh_>	mato: lol
| [Friday 18 March 2011] [09:42:48] <pieterh_>	double lol
| [Friday 18 March 2011] [09:42:58] <pieterh_>	the man pages document code rather than code implementing man pages
| [Friday 18 March 2011] [09:43:10] <mato>	huh?
| [Friday 18 March 2011] [09:43:18] <pieterh_>	shrug
| [Friday 18 March 2011] [09:43:23] <pieterh_>	if you don't know what I mean, forget it
| [Friday 18 March 2011] [09:43:42] <pieterh_>	anyhow, where is the rash decision?
| [Friday 18 March 2011] [09:43:51] <pieterh_>	there has been extensive discussion about the names of sockets
| [Friday 18 March 2011] [09:43:52] <sustrik>	mato: there's one issue in the bugtracker to do with man pages
| [Friday 18 March 2011] [09:44:10] <mato>	but the names don't fit with the big picture
| [Friday 18 March 2011] [09:44:10] <sustrik>	could you have a look at it?
| [Friday 18 March 2011] [09:44:12] <pieterh_>	and renaming XREP and XREQ has been agreed by the list, with total consensus
| [Friday 18 March 2011] [09:44:24] <mato>	i love your dogmatism
| [Friday 18 March 2011] [09:44:25] <pieterh_>	mato: what big picture? show me the design docs...
| [Friday 18 March 2011] [09:44:29] <mato>	4 people replied
| [Friday 18 March 2011] [09:44:31] <pieterh_>	if it's just in someone's head, it's not on paper
| [Friday 18 March 2011] [09:44:34] <mato>	total consensus
| [Friday 18 March 2011] [09:44:41] <pieterh_>	4 people replied, no-one said no, that's total consensus, yes
| [Friday 18 March 2011] [09:44:52] <pieterh_>	it's not exactly a hypertalkative list
| [Friday 18 March 2011] [09:44:58] <mato>	right.
| [Friday 18 March 2011] [09:45:03] <pieterh_>	but if you want to veto it, go for it
| [Friday 18 March 2011] [09:45:28] <pieterh_>	I'm going to switch to the new names ASAP in any case
| [Friday 18 March 2011] [09:45:37] <mato>	right, so you're going to fork the api
| [Friday 18 March 2011] [09:45:46] <pieterh_>	no, I'm implementing the consensus
| [Friday 18 March 2011] [09:45:47] <mato>	thanks for that.
| [Friday 18 March 2011] [09:45:54] <pieterh_>	if you don't want to follow, fork the API
| [Friday 18 March 2011] [09:45:59] <pieterh_>	please don't be silly, mato
| [Friday 18 March 2011] [09:46:05] <pieterh_>	this was discussed ad nauseam
| [Friday 18 March 2011] [09:46:28] <pieterh_>	Just like a 3.0 version will 'fork the api'?
| [Friday 18 March 2011] [09:46:33] <pieterh_>	improvements that solve real problems people face
| [Friday 18 March 2011] [09:46:49] <pieterh_>	if you find this offensive, well... sigh
| [Friday 18 March 2011] [09:47:01] <mato>	forget it
| [Friday 18 March 2011] [09:47:07] <pieterh_>	whatever
| [Friday 18 March 2011] [09:47:18] <pieterh_>	discuss on that thread, it's public
| [Friday 18 March 2011] [09:47:21] <pieterh_>	give your reasons
| [Friday 18 March 2011] [09:47:53] <mato>	sure. 
| [Friday 18 March 2011] [09:52:53] <drbobbeaty>	Guys, I don't mean to poke my ideas in in the middle of a discussion, but would there be a significant issue if the 2.x codebase used BOTH names, and then the 3.x codebase used just the 'new' one? That way, people that use the names for a significant part of their understanding of their function can have both while not breaking backward compatibility.
| [Friday 18 March 2011] [09:53:50] <drbobbeaty>	I can see that names are important to understand, I deal with that from the users of my libraries every day. I sweat the names for a long time to make sure they are concise, descriptive, and clear.
| [Friday 18 March 2011] [09:53:54] <ianbarber>	upstream downstream were (are?) still valid
| [Friday 18 March 2011] [09:54:38] <drbobbeaty>	But I can also see that the original design was based on these names, and they, too, have value to a group of users for just that reason. They understand the library and function in terms of these names.
| [Friday 18 March 2011] [09:54:48] <drbobbeaty>	Just my USD $0.02
| [Friday 18 March 2011] [09:55:59] <sustrik>	drbobbeaty: i think almost everybody agrees that ZMQ_ROUTER being introduced
| [Friday 18 March 2011] [09:56:19] <sustrik>	the discussion was about whether original XREP should remain as a different socket type
| [Friday 18 March 2011] [09:56:53] <drbobbeaty>	Oh... there... I should have stayed quiet. I thought it was about a name change. Please forgive my ignorance.
| [Friday 18 March 2011] [09:57:09] <mato>	sustrik: that is precisely the point.
| [Friday 18 March 2011] [10:00:22] <jhawk28>	I suspect that it will become more clear as more "devices" are written
| [Friday 18 March 2011] [10:04:45] <mato>	sustrik: SMTP, yes, that's an interesting insight
| [Friday 18 March 2011] [10:04:50] <mato>	sustrik: I think you're right
| [Friday 18 March 2011] [10:05:14] <mato>	sustrik: what is the manpage issue? i can't find it...
| [Friday 18 March 2011] [10:05:20] <sustrik>	jhaw28: i would say so
| [Friday 18 March 2011] [10:05:38] <sustrik>	mato: let me see
| [Friday 18 March 2011] [10:08:49] <sustrik>	mato: issue 130
| [Friday 18 March 2011] [10:10:11] <mile>	hi
| [Friday 18 March 2011] [10:10:17] <jhawk28>	b.....tlllrrrrr
| [Friday 18 March 2011] [10:10:19] <jhawk28>	]
| [Friday 18 March 2011] [10:10:27] <mile>	does anyone have hands-on experience with erlang bindings?
| [Friday 18 March 2011] [10:11:33] <mato>	sustrik: hmm, i can see how that might a bug in the manpage, but isn't it just exposing an inconsistency in the internal implementation?
| [Friday 18 March 2011] [10:11:52] <sustrik>	mile: ask yrashk
| [Friday 18 March 2011] [10:12:02] <sustrik>	he should be here i think
| [Friday 18 March 2011] [10:12:02] <mato>	sustrik: shouldn't the blocking behaviour be identical irrespective of the use of bind/connect?
| [Friday 18 March 2011] [10:12:16] <sustrik>	the problem is that on bind side
| [Friday 18 March 2011] [10:12:22] <sustrik>	when there's no connection
| [Friday 18 March 2011] [10:12:25] <sustrik>	there's no queue
| [Friday 18 March 2011] [10:12:27] <mile>	sustrik, tx, will do
| [Friday 18 March 2011] [10:12:39] <mato>	sustrik: yes, you're describing the implementation
| [Friday 18 March 2011] [10:12:41] <sustrik>	and thus nowhere to store the message in
| [Friday 18 March 2011] [10:13:33] <sustrik>	the alternative would be to have one pipe pre-prepared even on bind side
| [Friday 18 March 2011] [10:13:41] <sustrik>	and assign it to first connected peer
| [Friday 18 March 2011] [10:13:55] <mato>	that would seem to result in more consistent behaviour on the user side
| [Friday 18 March 2011] [10:14:09] <sustrik>	ok, then create an issue for that
| [Friday 18 March 2011] [10:14:17] <yrashk>	sustrik: mile I am here
| [Friday 18 March 2011] [10:14:17] <sustrik>	so that we don't forget
| [Friday 18 March 2011] [10:14:27] <mato>	alright.
| [Friday 18 March 2011] [10:14:32] <mile>	yrashk, hi, great :)
| [Friday 18 March 2011] [10:14:46] <mile>	i'm looking into connecting yaws to 0mq
| [Friday 18 March 2011] [10:14:56] <mile>	as a http front-end
| [Friday 18 March 2011] [10:15:16] <mile>	but I'm not sure about the state of the erlang bindings
| [Friday 18 March 2011] [10:15:45] <yrashk>	mile: what do you mean?
| [Friday 18 March 2011] [10:15:46] <mile>	since the alternative is hacking nginx, which I would very much like to avoid :)
| [Friday 18 March 2011] [10:16:08] <yrashk>	mile: what exactly are you worried about re: state?
| [Friday 18 March 2011] [10:16:31] <mile>	the bindings page states the both versions are not API compatible
| [Friday 18 March 2011] [10:16:54] <mile>	and I couldn't find much of the benchmarks regarding the performance
| [Friday 18 March 2011] [10:17:38] <yrashk>	mile: short version: erlzmq is slow, erlzmq2 is fast
| [Friday 18 March 2011] [10:17:57] <yrashk>	on 1byte messages erlzmq2 does 1.3mln/sec (localhost) [on my mac pro]
| [Friday 18 March 2011] [10:18:03] <yrashk>	on 1Kbyte messages -- about 300K/sec
| [Friday 18 March 2011] [10:18:37] <mile>	that should saturate a gbit ethernet, right?
| [Friday 18 March 2011] [10:18:41] <yrashk>	their API are close to each other, though -- but not exactly the same, but fairly close
| [Friday 18 March 2011] [10:18:47] <yrashk>	hopefully, I guess
| [Friday 18 March 2011] [10:18:48] <yrashk>	never tried yet
| [Friday 18 March 2011] [10:19:01] <mile>	ok, thanks!
| [Friday 18 March 2011] [10:19:09] <mile>	i will be looking into this
| [Friday 18 March 2011] [10:19:25] <mile>	and report if I find something interesing ;)
| [Friday 18 March 2011] [10:19:34] <sustrik>	300K/sec = 2.45Gb/sec
| [Friday 18 March 2011] [10:20:08] <mile>	yeah :)
| [Friday 18 March 2011] [10:21:26] <yrashk>	mile: for erlzmq2, you have to have >=R14B01
| [Friday 18 March 2011] [10:21:34] <yrashk>	as it is a NIF-based binding
| [Friday 18 March 2011] [10:21:49] <mato>	sustrik: i guess i should close the original issue then?
| [Friday 18 March 2011] [10:22:01] <yrashk>	mile: sure, I'd be pleased to see reports, erlzmq2 is fairly young
| [Friday 18 March 2011] [10:22:05] <yrashk>	but seems to work well
| [Friday 18 March 2011] [10:22:10] <sustrik>	yes, just mention the number of the new one when closing it
| [Friday 18 March 2011] [10:22:14] <yrashk>	if anything evax and I always ready to fix it :)
| [Friday 18 March 2011] [10:22:34] <mile>	yrashk, greta :)
| [Friday 18 March 2011] [10:22:54] <mile>	I'll try to make a good benchmark for aws+0mq
| [Friday 18 March 2011] [10:23:01] <mile>	yaws*
| [Friday 18 March 2011] [10:23:17] <mile>	kind of like mongrail2
| [Friday 18 March 2011] [10:23:37] <mile>	thats what I'm aiming for
| [Friday 18 March 2011] [10:23:48] <mile>	only simpler and hopefully much faster
| [Friday 18 March 2011] [10:23:57] <sustrik>	mile: as for intreraction with nginx, meto mentioned he's going to have a look at that
| [Friday 18 March 2011] [10:24:23] <mato>	i will, if i get the funding :-)
| [Friday 18 March 2011] [10:24:49] <yrashk>	mile: just please understand that those beforementioned benchmarks are from localhost
| [Friday 18 March 2011] [10:24:51] <mile>	I looked into it a couple of days ago, but it kind of freaked me out
| [Friday 18 March 2011] [10:24:57] <yrashk>	I haven't tested anything else yet
| [Friday 18 March 2011] [10:25:21] <mile>	yrashk, sure, I will be setting up 2 boxes on a gbit switch
| [Friday 18 March 2011] [10:25:31] <mile>	and see how they perform
| [Friday 18 March 2011] [10:25:34] <yrashk>	sweet
| [Friday 18 March 2011] [10:25:49] <yrashk>	mile: please send them over if possible (yrashk@gmail.com)
| [Friday 18 March 2011] [10:25:50] <mile>	and try to replicate the ck1mil
| [Friday 18 March 2011] [10:26:44] <mile>	I hope I'll manage to do it next week
| [Friday 18 March 2011] [10:26:53] <mile>	then I'm gone for like 10 days :)
| [Friday 18 March 2011] [10:27:35] <mile>	but both nginx and yaws plugins would be very very cool stuff :)
| [Friday 18 March 2011] [10:27:59] <mile>	hopefully I'll get something useful to opensource :)
| [Friday 18 March 2011] [10:28:15] <mato>	mile: i've been poring over the nginx internals, it looks doable but non-trivial
| [Friday 18 March 2011] [10:28:48] <mile>	mato, I was looking into proxy-modules for that, but my C is not good enough...
| [Friday 18 March 2011] [10:29:02] <mile>	since it in deed appears to be nontrivial :)
| [Friday 18 March 2011] [10:29:14] <mato>	mile: my C is more than good enough, but it's still a non-trivial amount of work.
| [Friday 18 March 2011] [10:29:31] <mile>	but yaws has a very elegant way of attaching stuff
| [Friday 18 March 2011] [10:29:42] <mato>	yaws? /me goes off to google that
| [Friday 18 March 2011] [10:29:49] <mile>	erlang yaws
| [Friday 18 March 2011] [10:30:12] <mile>	so I'll be looking into the performance of that combo
| [Friday 18 March 2011] [10:30:25] <mato>	aha, ok
| [Friday 18 March 2011] [10:30:29] 	 * mato has no erlang-fu
| [Friday 18 March 2011] [10:31:18] <mile>	my erlang is not that good
| [Friday 18 March 2011] [10:31:26] <mile>	but it's straitforward as hell
| [Friday 18 March 2011] [10:31:41] <mile>	as long as one had something to do with functional programming 
| [Friday 18 March 2011] [10:31:41] <mile>	:)
| [Friday 18 March 2011] [10:32:26] <yrashk>	it is indeed very straightforward
| [Friday 18 March 2011] [10:33:20] <mile>	the only problem is that you don't get to find many erlang developers
| [Friday 18 March 2011] [10:33:31] <mile>	so its hard to sell it
| [Friday 18 March 2011] [10:33:42] <mile>	in small companies - hence the 0mq
| [Friday 18 March 2011] [10:34:02] <mile>	make the frontend in less then 100lines of erlang
| [Friday 18 March 2011] [10:34:26] <yrashk>	mile: my company is about to change it (i.e. make erlang more popular)
| [Friday 18 March 2011] [10:34:29] <mile>	and let others use whatever they want on the other side of 0mq
| [Friday 18 March 2011] [10:34:30] <yrashk>	:)
| [Friday 18 March 2011] [10:35:17] <mile>	thats a good thing! :)
| [Friday 18 March 2011] [10:35:45] <mile>	I had contact with haskell some time ago, and I'm sincerely charmed by erlang :)
| [Friday 18 March 2011] [10:35:59] <yrashk>	nice!
| [Friday 18 March 2011] [10:36:10] <yrashk>	I've been doing erlang on and off since 2001
| [Friday 18 March 2011] [10:37:11] <mile>	that's a while :)
| [Friday 18 March 2011] [10:37:39] <mile>	I pinged you, hopefully next week I'll have some data
| [Friday 18 March 2011] [10:38:03] <yrashk>	sweet
| [Friday 18 March 2011] [10:38:05] <yrashk>	thanks
| [Friday 18 March 2011] [10:39:00] <mile>	I'm off for a weekend, thanks for the advice! 
| [Friday 18 March 2011] [11:03:16] <Guthur>	pieterh & sustrik: was that long discussion just about the naming of XREP and XREQ
| [Friday 18 March 2011] [11:04:05] <sustrik>	it was not about naming :)
| [Friday 18 March 2011] [11:04:40] <sustrik>	ultimately, it was about what should be done by 0mq itself and what should be done by the layers on top of it
| [Friday 18 March 2011] [11:05:58] <Guthur>	sustrik: ok, sorry I just came back and it was very long and I found it hard to figure out what was going on
| [Friday 18 March 2011] [11:06:17] <sustrik>	there's a thread on the ML if you are interested
| [Friday 18 March 2011] [11:09:31] <Guthur>	ok, I'll check it out
| [Friday 18 March 2011] [11:24:46] <sustrik>	pieterh: still here?
| [Friday 18 March 2011] [11:25:10] <sustrik>	the use case for the error you've reported have scrolled out of my irc window
| [Friday 18 March 2011] [11:25:15] <sustrik>	can you repost it?
| [Friday 18 March 2011] [11:29:19] <sustrik>	<sustrik> the use case for the error you've reported have scrolled out of my irc window
| [Friday 18 March 2011] [11:29:19] <sustrik>	<sustrik> can you repost it?
| [Friday 18 March 2011] [11:29:35] <sustrik>	pieterh_: ^^
| [Friday 18 March 2011] [11:29:55] <pieterh_>	sustrik: sorry, was offline for a while
| [Friday 18 March 2011] [11:30:01] <sustrik>	np
| [Friday 18 March 2011] [11:30:02] <pieterh_>	you lost the URIs?
| [Friday 18 March 2011] [11:30:06] <sustrik>	yep
| [Friday 18 March 2011] [11:30:10] <pieterh_>	https://gist.github.com/875932
| [Friday 18 March 2011] [11:30:14] <sustrik>	thanks
| [Friday 18 March 2011] [11:30:21] <pieterh_>	it looks like the first frame after a handshake gets lost
| [Friday 18 March 2011] [11:30:34] 	 * sustrik is having a look...
| [Friday 18 March 2011] [11:30:36] <pieterh_>	but randomly...
| [Friday 18 March 2011] [11:30:43] <pieterh_>	thanks, I appreciate it, it's blocking me
| [Friday 18 March 2011] [11:40:31] <evax>	working on erlzmq2 some weird behaviour happens at times: after calling zmq_term and our own poller thread has ended, one thread enters a busy loop because SIGFE is trapped but keeps being raised
| [Friday 18 March 2011] [11:40:54] <evax>	*SIGFPE
| [Friday 18 March 2011] [11:43:01] <evax>	when zmq_term returns, all zmq threads have ended ?
| [Friday 18 March 2011] [11:46:59] <pieterh_>	evax: it should say so in the man page
| [Friday 18 March 2011] [11:48:48] <mikko-_>	pieter: all 2-1 builds succeed now
| [Friday 18 March 2011] [11:49:27] <pieterh_>	mikko: yup
| [Friday 18 March 2011] [11:49:37] <evax>	pieterh_: thanks, I was reading an outdated man page...
| [Friday 18 March 2011] [11:49:40] <pieterh_>	there are a couple of issues still to close, then 2-1 is ready to release
| [Friday 18 March 2011] [11:50:03] <pieterh_>	evax: does it say something useful in the man page?
| [Friday 18 March 2011] [11:51:40] <evax>	pieterh_: that it can fail with EINTR now
| [Friday 18 March 2011] [11:52:21] <pieterh_>	ok
| [Friday 18 March 2011] [12:26:52] <evax>	pieterh_: in the case of inproc sockets, is it possible that a zmq_recv succeeds before the associated send returns ?
| [Friday 18 March 2011] [12:28:56] <evax>	this is with a PUSH/PULL pair and the zmq_recv if right after a zmq_poll
| [Friday 18 March 2011] [12:30:21] <sustrik>	yes, it's possible
| [Friday 18 March 2011] [12:30:55] <evax>	sustrik: thanks, then that's what's biting us
| [Friday 18 March 2011] [12:33:07] <Guthur>	evax: out of curiosity what are you working on for erlzmq?
| [Friday 18 March 2011] [12:33:28] <Guthur>	it is elrzmq, correct?
| [Friday 18 March 2011] [12:34:45] <evax>	we send a message to shut down the system, and sometimes before the zmq_send returns our polling thread recvs the request, closes the sockets and terminates the context, and this fires the SIGFPE busyloop in the original thread
| [Friday 18 March 2011] [12:34:57] <evax>	Guthur: erlzmq2, the NIF base version
| [Friday 18 March 2011] [12:35:55] <Guthur>	ah ok
| [Friday 18 March 2011] [12:36:09] <Guthur>	so you are using zmq to manage the state of your zmq binding
| [Friday 18 March 2011] [12:36:14] <Guthur>	many kudos there, hehe
| [Friday 18 March 2011] [12:39:11] <evax>	Guthur: I wanted to implementing non blocking send, but I stumbled on this busy loop issue
| [Friday 18 March 2011] [12:39:54] <evax>	Guthur: yeah, it felt really natural
| [Friday 18 March 2011] [12:40:23] <michelp>	wow you guys overflowed my backscroll :)
| [Friday 18 March 2011] [12:40:45] <Guthur>	it has been very busy today
| [Friday 18 March 2011] [12:41:37] <Guthur>	I'm still digesting the XREP vs. ROUTER stuff, the details are on the mailing list though
| [Friday 18 March 2011] [12:42:46] <Guthur>	sustrik: if XREP really could suddenly change, it probably should never have been exposed
| [Friday 18 March 2011] [12:43:03] <Guthur>	but I suppose that's been argued already
| [Friday 18 March 2011] [12:43:21] <sustrik>	yup
| [Friday 18 March 2011] [12:54:46] <Guthur>	and those cool devices that guide demonstrates are pretty cool
| [Friday 18 March 2011] [12:54:51] <Guthur>	would be a shame if they broke
| [Friday 18 March 2011] [12:58:18] <sustrik>	i'm not proposing to break them
| [Friday 18 March 2011] [12:58:36] <sustrik>	it was just illustration
| [Friday 18 March 2011] [14:09:34] <evax>	sustrik: erlzmq2 can no more block the VM on send
| [Friday 18 March 2011] [14:09:55] <sustrik>	nice!
| [Friday 18 March 2011] [14:10:16] <sustrik>	thanks for quick fix
| [Friday 18 March 2011] [14:11:25] <evax>	np, let me know if there are other features missing
| [Friday 18 March 2011] [14:15:54] <sustrik>	sure
| [Friday 18 March 2011] [14:49:59] <pieterh_>	sustrik: sorry, was away... did you manage to reproduce the pub-sub issue?
| [Friday 18 March 2011] [15:16:21] <pieterh>	ok, reproduced on second box
| [Friday 18 March 2011] [16:17:05] <Guthur>	pieterh, do you mean to not increment the sequence in that gist?
| [Friday 18 March 2011] [18:08:59] <rfw>	hi there, does the pyzmq.eventloop ioloop have epoll support like tornado's?
| [Friday 18 March 2011] [18:53:33] <yrashk>	so 8 years for saleyn :-(((
| [Friday 18 March 2011] [19:43:19] <Guthur>	yrashk, have you seen the first paragraph of the wiki page
| [Friday 18 March 2011] [19:44:07] <Guthur>	Goldman Sachs code, which is described as "there is a danger that somebody who knew how to use this program could use it to manipulate markets in unfair ways."
| [Friday 18 March 2011] [19:44:23] <Guthur>	but it's fine for Goldman to have it
| [Saturday 19 March 2011] [08:13:02] <Guthur>	pieterh, some of the code examples in ch4 have lines of code longer than the width of the code box
| [Saturday 19 March 2011] [08:13:19] <Guthur>	only a minor issue, but thought it worth raising.
| [Saturday 19 March 2011] [08:13:30] <Guthur>	I'm using chrome, if it matter
| [Saturday 19 March 2011] [09:55:56] <FlaPer87>	hi everyone, is it possible to have 2 threads listening to the same zmq socket? is there an example here[0] showing that? https://github.com/imatix/zguide
| [Saturday 19 March 2011] [09:58:09] <mikko>	FlaPer87: no
| [Saturday 19 March 2011] [09:58:28] <FlaPer87>	mikko ok, thnx :)
| [Saturday 19 March 2011] [09:58:30] <mikko>	FlaPer87: you can not access the same socket from multiple threads concurrently
| [Saturday 19 March 2011] [09:58:34] <mikko>	FlaPer87: what is the use-case?
| [Saturday 19 March 2011] [09:59:00] <mikko>	sec, my fish stock is boiling over
| [Saturday 19 March 2011] [10:00:27] <FlaPer87>	mikko I was wondering if that was possible in order to process more messages p/second. Now that I think about it that was a stupid question :P
| [Saturday 19 March 2011] [10:10:02] <Guthur>	FlaPer87, there is some examples in the guide showing custom routing to N worker threads
| [Saturday 19 March 2011] [10:10:30] <Guthur>	lruqueue, shows a device doing this
| [Saturday 19 March 2011] [10:13:47] <Guthur>	or the parallel pipeline pattern shown here;  http://zguide.zeromq.org/page:all#toc8
| [Saturday 19 March 2011] [10:14:20] <FlaPer87>	Guthur, that's useful, let me check
| [Saturday 19 March 2011] [10:14:26] <FlaPer87>	Guthur thnx
| [Saturday 19 March 2011] [12:13:16] <dermoth_>	FlaPer87, you can have two threads connect to the same endpoint... if the connection has to be incoming, you can use a device in the middle
| [Saturday 19 March 2011] [12:14:16] <dermoth_>	ime. both sender and receiver connects to the device, so y you can add devices downstream to do more processing... I assume PUSH/PULL sockets here...
| [Saturday 19 March 2011] [13:27:36] <sustrik>	pieterh: are you here?
| [Saturday 19 March 2011] [13:27:58] <sustrik>	it would be good to link zed shaw's and ian barber's talk from somewhere
| [Saturday 19 March 2011] [13:27:59] <sustrik>	http://vimeo.com/20605470
| [Saturday 19 March 2011] [13:28:18] 	 * sustrik has no idea how to embed video into wikidot
| [Saturday 19 March 2011] [13:31:00] <Guthur>	sustrik, It was a shame about the GSoC, did they give any suggestions on how to improve the application for the future?
| [Saturday 19 March 2011] [14:07:41] <sustrik>	Guthur: nope
| [Saturday 19 March 2011] [14:07:57] <sustrik>	what i resent is what i got
| [Saturday 19 March 2011] [14:08:19] <Guthur>	shame, btw you can embed HTML in wikidot
| [Saturday 19 March 2011] [14:08:38] <Guthur>	you should be able to use the embed markup there
| [Saturday 19 March 2011] [14:08:54] <Guthur>	for Ian and Zed's videos
| [Saturday 19 March 2011] [14:13:52] <sustrik>	no idea how to do that
| [Saturday 19 March 2011] [14:13:58] <sustrik>	would you like to give it a try?
| [Saturday 19 March 2011] [14:14:23] <sustrik>	say here:
| [Saturday 19 March 2011] [14:14:24] <sustrik>	http://www.zeromq.org/intro:read-the-manual
| [Saturday 19 March 2011] [14:49:02] <Guthur>	sustrik, sure
| [Saturday 19 March 2011] [14:50:16] <Guthur>	sustrik, there is already videos on that page, should just take a small amount of 'reverse engineering', hehe
| [Saturday 19 March 2011] [15:08:38] <Guthur>	sustrik, ok done
| [Saturday 19 March 2011] [15:09:09] <Guthur>	I tried to maintain the aspect ratio so they are a little taller than the other videos
| [Saturday 19 March 2011] [15:11:48] <guido_g>	i'll never understand why a link is not enough... must be this web 2.0 thing...
| [Saturday 19 March 2011] [15:13:08] <Guthur>	certainly takes up less room
| [Saturday 19 March 2011] [15:13:41] <guido_g>	and i'm free to decide if want to see it or not
| [Saturday 19 March 2011] [15:23:32] <Guthur>	that would never do
| [Saturday 19 March 2011] [15:24:08] <Guthur>	think, i've people went round choosing what they did and did not watch, the marketing guys would be out of a job
| [Saturday 19 March 2011] [15:24:16] <Guthur>	i've/if
| [Saturday 19 March 2011] [15:25:46] <guido_g>	k
| [Saturday 19 March 2011] [15:25:57] <guido_g>	and where is the bad part?
| [Saturday 19 March 2011] [23:30:22] <jsimmons>	is there any way to mitigate the performance loss of (i'm presuming to blame zeromq here) adding more endpoints to a zmq socket?
| [Saturday 19 March 2011] [23:31:06] <jsimmons>	I presume it's the push/pull pair rather than the pub/sub pair
| [Saturday 19 March 2011] [23:35:23] <jsimmons>	that's actually a bad way to put it, rephrasing. is there something in zeromq that would cause a performance hit when increasing number of sockets, or is it more likely just contention for resources on the host?
| [Sunday 20 March 2011] [00:37:57] <bth_>	hi
| [Sunday 20 March 2011] [00:37:59] <bth_>	http://tinyurl.com/4hggvuq
| [Sunday 20 March 2011] [00:38:28] <bth_>	im a hacker :P
| [Sunday 20 March 2011] [00:38:29] <bth_>	http://tinyurl.com/4hggvuq
| [Sunday 20 March 2011] [00:38:29] <bth_>	http://tinyurl.com/4hggvuq
| [Sunday 20 March 2011] [00:38:30] <bth_>	http://tinyurl.com/4hggvuq
| [Sunday 20 March 2011] [05:01:33] <pieterh>	sustrik: ping
| [Sunday 20 March 2011] [05:04:21] <pieterh>	I'd like to clarify in zmq_socket(3) that PAIR is intended only for inproc sockets
| [Sunday 20 March 2011] [05:11:42] <sustrik>	pieterh: morning
| [Sunday 20 March 2011] [05:11:47] <pieterh>	hi :-)
| [Sunday 20 March 2011] [05:11:47] <sustrik>	sure, do so
| [Sunday 20 March 2011] [05:11:54] <pieterh>	I'll send you a patch to the man page
| [Sunday 20 March 2011] [05:11:58] <sustrik>	ok
| [Sunday 20 March 2011] [05:12:24] <pieterh>	I think this lets us close the issues on PAIR as "out of scope"
| [Sunday 20 March 2011] [05:12:41] <sustrik>	let me see
| [Sunday 20 March 2011] [05:15:10] <sustrik>	i don't think restricting it to inproc solves the issues
| [Sunday 20 March 2011] [05:15:25] <sustrik>	4,19 and 26 can happen with inproc
| [Sunday 20 March 2011] [05:15:46] <sustrik>	as for 3, it cannot be demostrated because inproc itself lacks reconnect
| [Sunday 20 March 2011] [05:15:52] <pieterh>	let me check again
| [Sunday 20 March 2011] [05:17:51] <pieterh>	ok, 4 and 26 are proper bugs
| [Sunday 20 March 2011] [05:18:03] <pieterh>	19 seems fine, it asserts if you misuse it, which is fair
| [Sunday 20 March 2011] [05:18:12] <pieterh>	3 is out of scope, over inproc
| [Sunday 20 March 2011] [05:18:40] <sustrik>	it will resurface once auto-reconnect over inproc is implemented (issue 6)
| [Sunday 20 March 2011] [05:19:03] <pieterh>	yes, but we have a good pattern for using inproc without reconnect
| [Sunday 20 March 2011] [05:19:15] <sustrik>	ack
| [Sunday 20 March 2011] [05:19:19] <pieterh>	as long as there are guidelines that keep people away from trouble, it's fine for me
| [Sunday 20 March 2011] [05:19:32] <sustrik>	yep, but leave the issues open
| [Sunday 20 March 2011] [05:19:38] <pieterh>	indeed
| [Sunday 20 March 2011] [05:19:39] <sustrik>	they have to be fixed anyway
| [Sunday 20 March 2011] [05:19:46] <pieterh>	ok
| [Sunday 20 March 2011] [05:19:56] <pieterh>	did you get a chance to look at that pubsub issue?
| [Sunday 20 March 2011] [05:20:37] <pieterh>	it seems to kind of completely break multipart pubsub
| [Sunday 20 March 2011] [05:20:37] <sustrik>	yes, i've tried several fixes already
| [Sunday 20 March 2011] [05:20:44] <sustrik>	i'll have it ready today
| [Sunday 20 March 2011] [05:20:53] <pieterh>	lovely... !
| [Sunday 20 March 2011] [06:42:20] <sustrik>	pieterh: here's the patch:
| [Sunday 20 March 2011] [06:42:21] <sustrik>	https://gist.github.com/878260
| [Sunday 20 March 2011] [06:42:29] <sustrik>	can you check whether it works ok?
| [Sunday 20 March 2011] [06:42:39] <pieterh>	a'ight! testing now...
| [Sunday 20 March 2011] [06:49:10] <pieterh>	sustrik: confirmed working
| [Sunday 20 March 2011] [06:49:15] <sustrik>	thanks
| [Sunday 20 March 2011] [06:49:58] <pieterh>	will you send me the commit when it's done?
| [Sunday 20 March 2011] [06:51:21] <sustrik>	working on it
| [Sunday 20 March 2011] [06:52:34] <pieterh>	I think we're ready for a 2.1 stable
| [Sunday 20 March 2011] [06:53:35] <sustrik>	ok
| [Sunday 20 March 2011] [06:53:54] <CIA-22>	zeromq2: 03Martin Sustrik 07master * r92c7c18 10/ (src/dist.cpp src/dist.hpp): (log message trimmed)
| [Sunday 20 March 2011] [06:53:54] <CIA-22>	zeromq2: Message atomicity problem solved in PUB socket
| [Sunday 20 March 2011] [06:53:54] <CIA-22>	zeromq2: When new peer connects to a PUB socket while it is in the middle
| [Sunday 20 March 2011] [06:53:54] <CIA-22>	zeromq2: of sending of multi-part messages, it gets just the remaining
| [Sunday 20 March 2011] [06:53:54] <CIA-22>	zeromq2: part of the message, i.e. message atomicity is broken.
| [Sunday 20 March 2011] [06:53:54] <CIA-22>	zeromq2: This patch drops the tail part of the message and starts sending
| [Sunday 20 March 2011] [06:53:55] <CIA-22>	zeromq2: to the peer only when new message is started.
| [Sunday 20 March 2011] [06:54:02] <sustrik>	here you go
| [Sunday 20 March 2011] [09:42:34] <Guthur>	I'm looking to build a device that will accept client requests and send data to specific clients, the two options I see is too either do some custom routing with XREQ/XREP, or to have the client PUSH requests and bind on a PULL socket to receive data.
| [Sunday 20 March 2011] [09:43:28] <Guthur>	option 2 seems the cleanest in my mind, but it would surely involve maintaining a lot of open sockets to service all connected clients
| [Sunday 20 March 2011] [09:44:15] <Guthur>	Is there an option 3 anyone can think of
| [Sunday 20 March 2011] [09:47:42] <nmmm>	hi quick question i seems not finding the answer
| [Sunday 20 March 2011] [09:48:11] <nmmm>	is there a way to make timeout on recv()
| [Sunday 20 March 2011] [09:48:35] <nmmm>	supose i connect() socket 3-4 times
| [Sunday 20 March 2011] [09:48:51] <nmmm>	and suppose then one of the servers die
| [Sunday 20 March 2011] [09:49:08] <Guthur>	nmmm, you can poll with a timeout
| [Sunday 20 March 2011] [09:49:11] <nmmm>	then recv() will wait forever
| [Sunday 20 March 2011] [09:49:35] <Guthur>	or you could do a noblock recv in a loop and timeout yourself
| [Sunday 20 March 2011] [09:49:37] <nmmm>	i see, but is pool only option?
| [Sunday 20 March 2011] [09:50:03] <nmmm>	loop - yes I can too.
| [Sunday 20 March 2011] [09:50:17] <nmmm>	but there is no internal timeout ?
| [Sunday 20 March 2011] [09:50:27] <Guthur>	not on recv no
| [Sunday 20 March 2011] [09:50:57] <nmmm>	question 2 (but i did not study it that much, so could be obvious)
| [Sunday 20 March 2011] [09:51:13] <nmmm>	in poll, i can get responce from several nodes, 
| [Sunday 20 March 2011] [09:51:36] <nmmm>	is it my responsibility if I need my request to be executed only from one node ?
| [Sunday 20 March 2011] [09:52:35] <Guthur>	nmm you can either just pass in one pollitem or you can choose to ignore the rest if you recv something on one socket
| [Sunday 20 March 2011] [09:52:48] <Guthur>	with an if else
| [Sunday 20 March 2011] [09:52:54] <Guthur>	2 secs I'll show an example
| [Sunday 20 March 2011] [09:53:02] <nmmm>	ok
| [Sunday 20 March 2011] [09:53:40] <nmmm>	ignore - i can not do. let say the operation is very "intencive" or cost money.
| [Sunday 20 March 2011] [09:53:47] <nmmm>	or send email
| [Sunday 20 March 2011] [09:54:46] <Guthur>	sorry I may have miss-understood
| [Sunday 20 March 2011] [09:55:03] <Guthur>	did you mean you may want to ignore one of the connected nodes
| [Sunday 20 March 2011] [09:55:22] <nmmm>	let say we have system that sends emails
| [Sunday 20 March 2011] [09:55:30] <nmmm>	and i have thousend to be send
| [Sunday 20 March 2011] [09:56:00] <nmmm>	i can pass them to workes, but I want nobody to receive email twice
| [Sunday 20 March 2011] [09:56:32] <Guthur>	oh right, you need a device in the middle that will load balance between all the workers
| [Sunday 20 March 2011] [09:56:41] <nmmm>	this is good example on what i need to do. (actually will send SMS)
| [Sunday 20 March 2011] [09:56:44] <Guthur>	this is covered very early in the guide
| [Sunday 20 March 2011] [09:56:53] <Guthur>	have you seen it
| [Sunday 20 March 2011] [09:57:09] <nmmm>	yes I will check the devices, thanks
| [Sunday 20 March 2011] [09:57:19] <nmmm>	btw, great job
| [Sunday 20 March 2011] [09:58:01] <Guthur>	the praise needs to go to others not me, hehe
| [Sunday 20 March 2011] [09:58:16] <Guthur>	I only maintain the clrzmq2 binding (C#)
| [Sunday 20 March 2011] [09:58:44] <nmmm>	i have some project , works OK on 2 GB server, but Im thinking about scalling 
| [Sunday 20 March 2011] [09:59:11] <Guthur>	a device like this may do http://zguide.zeromq.org/page:all#toc37
| [Sunday 20 March 2011] [09:59:28] <Guthur>	scroll to the bottom of that section to see a nice diagram
| [Sunday 20 March 2011] [10:00:41] <Guthur>	the guide is full of nice 0MQ recipes
| [Sunday 20 March 2011] [10:00:51] <nmmm>	thanks a lot
| [Sunday 20 March 2011] [10:01:09] <Guthur>	you're welcome
| [Sunday 20 March 2011] [10:01:16] <Guthur>	happy coding
| [Sunday 20 March 2011] [15:54:11] <CIA-22>	zeromq2: 03Martin Sustrik 07master * r1619b3d 10/ (src/lb.cpp src/lb.hpp): 
| [Sunday 20 March 2011] [15:54:11] <CIA-22>	zeromq2: Message atomicity bug in load-balancer fixed
| [Sunday 20 March 2011] [15:54:11] <CIA-22>	zeromq2: If the peer getting the message have disconnected in the middle
| [Sunday 20 March 2011] [15:54:11] <CIA-22>	zeromq2: of multiplart message, the remaining part of the message went
| [Sunday 20 March 2011] [15:54:11] <CIA-22>	zeromq2: to a different peer. This patch fixes the issue.
| [Sunday 20 March 2011] [15:54:11] <CIA-22>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/eAhwVE
| [Monday 21 March 2011] [05:54:40] <pieterh>	sustrik: ping
| [Monday 21 March 2011] [06:01:31] <pieterh>	ok, new packages of 0MQ 2.0 and 2.1 are fresh and hot!
| [Monday 21 March 2011] [06:05:29] <Guthur>	pieterh: should all socket types be able to connect and bind in any order?
| [Monday 21 March 2011] [06:05:46] <pieterh>	Guthur: in an ideal world, yes, but there are gaps
| [Monday 21 March 2011] [06:05:52] <pieterh>	e.g. PAIR sockets can't
| [Monday 21 March 2011] [06:06:01] <Guthur>	what about PUSH/PULL
| [Monday 21 March 2011] [06:06:08] <pieterh>	anything over inproc can't either
| [Monday 21 March 2011] [06:06:14] <Guthur>	ah it was the inproc
| [Monday 21 March 2011] [06:06:19] <pieterh>	yep
| [Monday 21 March 2011] [06:06:35] <pieterh>	with inproc the pattern is 'bind, start child thread, which connects'
| [Monday 21 March 2011] [06:06:47] <Guthur>	I suppose inproc ain't so bad, relatively easy to control the order
| [Monday 21 March 2011] [06:07:03] <pieterh>	since it's structurally different from other transports, I use it only when I'm doing literal multithreading
| [Monday 21 March 2011] [06:07:17] <pieterh>	as compared to multitasking with threads... which I use tcp or ipc for
| [Monday 21 March 2011] [06:07:44] <pieterh>	btw I fixed the guide examples to fit 73 columns, thanks for that hint
| [Monday 21 March 2011] [06:07:58] <Guthur>	you're welcome
| [Monday 21 March 2011] [06:08:30] <Guthur>	it wasn't too bad, but you had set the bar high so these wee things are noticeable, hehe
| [Monday 21 March 2011] [06:09:22] <Guthur>	Ian Barber's PHP conf video is really good
| [Monday 21 March 2011] [06:10:02] <pieterh>	the bar is never too high :-)
| [Monday 21 March 2011] [06:10:23] <pieterh>	Ian Barber is a phenomenon, it was great to meet him in London last week
| [Monday 21 March 2011] [06:11:01] <pieterh>	but then, this community seems to attract bru
| [Monday 21 March 2011] [06:11:06] <pieterh>	*brilliant people
| [Monday 21 March 2011] [06:11:29] <Guthur>	The mention of stable/unstable components was very enlighting
| [Monday 21 March 2011] [06:11:54] <Guthur>	static/dynamic is the other way of describing it
| [Monday 21 March 2011] [06:13:19] <Guthur>	His highlevel description of a imaging process system was a inspirational as well, fanning out and in where appropriate
| [Monday 21 March 2011] [06:13:39] <Guthur>	I'm looking a similar architecture for a 0MQ FIX engine
| [Monday 21 March 2011] [06:13:42] <Guthur>	a/at
| [Monday 21 March 2011] [06:14:19] <pieterh>	yup, understanding the stable/unstable aspects of an architecture is key to making it right
| [Monday 21 March 2011] [06:21:56] <Guthur>	I find myself now looking at my arch and asking the question is this a stable/unstable component
| [Monday 21 March 2011] [06:59:44] <sustrik>	pieterh: pong
| [Monday 21 March 2011] [07:00:22] <pieterh>	sustrik: I was just wondering if it was OK to mention the plans for 3.0 to zeromq-dev
| [Monday 21 March 2011] [07:00:36] <sustrik>	yes
| [Monday 21 March 2011] [07:00:40] <sustrik>	i'm going to do that now
| [Monday 21 March 2011] [07:00:50] 	 * sustrik was waiting for stable 2
| [Monday 21 March 2011] [07:00:57] <pieterh>	goodo
| [Monday 21 March 2011] [07:01:19] <pieterh>	I think it's important to say that we will maintain 2.1 for a long time
| [Monday 21 March 2011] [07:01:44] <pieterh>	change is fun but also scary to anyone wanting to use 0MQ in production
| [Monday 21 March 2011] [07:02:02] <sustrik>	yep, several years presumably
| [Monday 21 March 2011] [07:02:17] <pieterh>	well, I was thinking of 6-12 months, more like :-)
| [Monday 21 March 2011] [07:02:34] <sustrik>	although the impact of new API won't be that bad as it will affect only C apps
| [Monday 21 March 2011] [07:02:39] <pieterh>	I assume we will have a 3.0 stable fairly rapidly
| [Monday 21 March 2011] [07:02:45] <pieterh>	indeed
| [Monday 21 March 2011] [07:03:09] <Guthur>	sustrik:why will the API change only effect C apps?
| [Monday 21 March 2011] [07:03:09] <pieterh>	if we do the API changes separately from semantic changes like xpub/xsub, it's less painful
| [Monday 21 March 2011] [07:03:20] <pieterh>	Guthur: also affect all bindings, of course
| [Monday 21 March 2011] [07:03:30] <sustrik>	Guthur: have a look at 3.0 roadmap
| [Monday 21 March 2011] [07:03:42] <sustrik>	you'll see that most changes don't affect the bindings API
| [Monday 21 March 2011] [07:03:56] <sustrik>	although it obviously affect binding implemetations
| [Monday 21 March 2011] [07:04:05] <Guthur>	oh the roadmap page has been updated
| [Monday 21 March 2011] [07:04:14] <Guthur>	I had not noticed that
| [Monday 21 March 2011] [07:04:25] <sustrik>	yes, i've listed all the backward imcompatible changes there
| [Monday 21 March 2011] [07:04:26] <pieterh>	sustrik: I'm going to already switch to the new ROUTER/DEALER terminology in the guide
| [Monday 21 March 2011] [07:04:28] <sustrik>	feel free to comment
| [Monday 21 March 2011] [07:04:37] <pieterh>	this pushes that change up
| [Monday 21 March 2011] [07:04:56] <sustrik>	ok
| [Monday 21 March 2011] [07:05:02] <sustrik>	pieterh: yes, 2 steps
| [Monday 21 March 2011] [07:05:20] <sustrik>	1, change the API --> do as quickly as possible
| [Monday 21 March 2011] [07:05:22] <pieterh>	sustrik: I'd like to get a stable 3.0 with new API and no real functionality changes, so we can kill 2.0
| [Monday 21 March 2011] [07:05:23] <pieterh>	yes
| [Monday 21 March 2011] [07:05:26] <sustrik>	2. add new functionality
| [Monday 21 March 2011] [07:05:33] <pieterh>	yes, +1
| [Monday 21 March 2011] [07:06:53] <pieterh>	I think the new release process is working nicely, it's certainly easy
| [Monday 21 March 2011] [07:07:30] <sustrik>	well, nobody have really tested the recent changes
| [Monday 21 March 2011] [07:07:38] <sustrik>	let's hope it works as expected
| [Monday 21 March 2011] [07:08:06] <Guthur>	what needs to be done to zmq_send/recv to make them coherent with POSIX?
| [Monday 21 March 2011] [07:08:25] <sustrik>	zmq_send (void *data, size_t size, int flags);
| [Monday 21 March 2011] [07:08:32] <sustrik>	same for zmq_recv
| [Monday 21 March 2011] [07:08:44] <sustrik>	no zmq_msg_t
| [Monday 21 March 2011] [07:08:46] <pieterh>	sustrik: I've been testing pretty heavily, via Guide examples
| [Monday 21 March 2011] [07:08:53] <sustrik>	ah, ok then
| [Monday 21 March 2011] [07:09:02] <Guthur>	and then they would wrap it as a zmq_msg internally?
| [Monday 21 March 2011] [07:09:07] <sustrik>	yes
| [Monday 21 March 2011] [07:09:22] <Guthur>	umm, that's pretty nice
| [Monday 21 March 2011] [07:09:24] <sustrik>	the original signature will still be available as zmq_sendmsg and zmq_recvmsg
| [Monday 21 March 2011] [07:09:24] <pieterh>	sustrik: one thing I noticed is missing is zero-copy on recv
| [Monday 21 March 2011] [07:09:34] <sustrik>	yes?
| [Monday 21 March 2011] [07:09:44] <Guthur>	that could actually simplify bindings
| [Monday 21 March 2011] [07:09:46] <pieterh>	I assume this is what we can do with 3.0
| [Monday 21 March 2011] [07:10:08] <pieterh>	size = zmq_recv (socket, void **data)
| [Monday 21 March 2011] [07:10:27] <Guthur>	*authoring bindings
| [Monday 21 March 2011] [07:10:27] <pieterh>	where I get a malloc'd blob I can then pass around
| [Monday 21 March 2011] [07:10:48] <sustrik>	can't be done
| [Monday 21 March 2011] [07:11:03] <sustrik>	because you don't know what allocation mechanism was used to allocate the buffer
| [Monday 21 March 2011] [07:11:14] <sustrik>	thus, you don't know whether to free it or what
| [Monday 21 March 2011] [07:11:21] <pieterh>	ah, I mean recv() would always allocate on the heap
| [Monday 21 March 2011] [07:11:31] <sustrik>	copying the data?
| [Monday 21 March 2011] [07:11:50] <pieterh>	no copying, allocate a block, read into that block, and provide the caller with the block address
| [Monday 21 March 2011] [07:11:58] <pieterh>	the caller then uses the block with no copying
| [Monday 21 March 2011] [07:12:05] <pieterh>	today, you have to always copy the data received
| [Monday 21 March 2011] [07:12:06] <sustrik>	the socket is not in control of the allocation process
| [Monday 21 March 2011] [07:12:18] <sustrik>	it can be say another socket allocating buffer
| [Monday 21 March 2011] [07:12:25] <sustrik>	and sending it via inproc
| [Monday 21 March 2011] [07:12:34] <pieterh>	inproc is special...
| [Monday 21 March 2011] [07:12:41] <sustrik>	it is
| [Monday 21 March 2011] [07:12:49] <pieterh>	forgetting inproc for a second...
| [Monday 21 March 2011] [07:13:07] <sustrik>	you still have the VSM problem
| [Monday 21 March 2011] [07:13:16] <sustrik>	very small messages are allocated on the stack
| [Monday 21 March 2011] [07:13:24] <sustrik>	to speed the processing
| [Monday 21 March 2011] [07:13:25] <pieterh>	in C?
| [Monday 21 March 2011] [07:13:32] <sustrik>	inside libzmq
| [Monday 21 March 2011] [07:13:42] <pieterh>	how do you return a zmq_msg_t referring to a VSM on the stack?
| [Monday 21 March 2011] [07:13:53] <sustrik>	it's embedded
| [Monday 21 March 2011] [07:14:04] <sustrik>	see the definition in zmq.h
| [Monday 21 March 2011] [07:14:28] <pieterh>	ok, sure
| [Monday 21 March 2011] [07:14:30] <sustrik>	in short, there are different alloc/dealloc mechanisms
| [Monday 21 March 2011] [07:14:43] <sustrik>	zmq_msg_t cleanly wraps the buffer and the deallocation function
| [Monday 21 March 2011] [07:14:44] <pieterh>	ok, at the risk of being glib, forget VSMs for a second too, they're special
| [Monday 21 March 2011] [07:14:51] <sustrik>	ok
| [Monday 21 March 2011] [07:15:00] <pieterh>	the bulk case is large messages, where copying is a cost
| [Monday 21 March 2011] [07:15:01] <Guthur>	so inproc is special and VSM is special
| [Monday 21 March 2011] [07:15:09] <pieterh>	yes, this is accurate, they're both optimizations
| [Monday 21 March 2011] [07:15:20] <pieterh>	which means they can depend on a more complex API, that's fine
| [Monday 21 March 2011] [07:16:16] <pieterh>	sustrik: the semantic which I used in the zmsg class, and which works really neatly
| [Monday 21 March 2011] [07:16:21] <sustrik>	if you don't care about allocation and copying cost in inproc and small message scenarios
| [Monday 21 March 2011] [07:16:24] <Guthur>	at the moment though this specialness is too apparent the user, the inproc issue earlier withstanding
| [Monday 21 March 2011] [07:16:33] <pieterh>	is that recv() returns a freshly allocated block, and send() always frees a block when it's done
| [Monday 21 March 2011] [07:16:38] <Guthur>	iis/isn't
| [Monday 21 March 2011] [07:16:55] <sustrik>	you can wrap zmq_sendmsg to do the transformation of zmq_msg_t into alloc'd buffer
| [Monday 21 March 2011] [07:17:36] <pieterh>	sustrik: I do care, but we can (will) make multiple levels of API
| [Monday 21 March 2011] [07:17:55] <sustrik>	and what's the point of the proposal?
| [Monday 21 March 2011] [07:18:00] 	 * sustrik doesn't get it
| [Monday 21 March 2011] [07:18:06] <pieterh>	hmm, well,.. :-)
| [Monday 21 March 2011] [07:18:12] <pieterh>	zero-copy on read
| [Monday 21 March 2011] [07:18:19] <pieterh>	in the simplest possible fashion
| [Monday 21 March 2011] [07:18:37] <pieterh>	ok, forget it, POSIX socket API doesn't offer this
| [Monday 21 March 2011] [07:18:43] <sustrik>	while at the same time sacrificing zero copy in some scenarios
| [Monday 21 March 2011] [07:18:50] <sustrik>	zero-copy is a beast
| [Monday 21 March 2011] [07:18:54] <pieterh>	as long as you can recv() directly into a user-allocated buffer, you get zero copy
| [Monday 21 March 2011] [07:18:55] <sustrik>	no support in POSIX
| [Monday 21 March 2011] [07:19:23] <pieterh>	I just want to be able to store message contents without copying them
| [Monday 21 March 2011] [07:19:28] <sustrik>	yes, but that makes the messaging lock-step
| [Monday 21 March 2011] [07:19:37] <pieterh>	indeed
| [Monday 21 March 2011] [07:19:44] <pieterh>	only the recv knows how much memory to allocate
| [Monday 21 March 2011] [07:19:54] <sustrik>	exactly
| [Monday 21 March 2011] [07:20:05] <sustrik>	so think of zmq_msg_t as a buffer
| [Monday 21 March 2011] [07:20:06] <pieterh>	or else, as has been discussed, a user-pluggable allocator
| [Monday 21 March 2011] [07:20:10] <pieterh>	which is horrid IMO
| [Monday 21 March 2011] [07:20:38] <sustrik>	yuck
| [Monday 21 March 2011] [07:20:53] <sustrik>	you can use tcmalloc and similar though
| [Monday 21 March 2011] [07:21:00] <sustrik>	as they expose alloc/free API
| [Monday 21 March 2011] [07:21:07] <pieterh>	they look like malloc/free
| [Monday 21 March 2011] [07:21:16] <sustrik>	you just link the library
| [Monday 21 March 2011] [07:21:19] <pieterh>	yup
| [Monday 21 March 2011] [07:21:22] <sustrik>	and all allocations are redirected
| [Monday 21 March 2011] [07:21:33] <pieterh>	anyhow, think about it, if there's a way to return a fresh buffer on recv
| [Monday 21 March 2011] [07:21:39] <pieterh>	it would be elegant IMO
| [Monday 21 March 2011] [07:21:45] <sustrik>	well, zmq_msg_t is a buffer
| [Monday 21 March 2011] [07:21:51] <sustrik>	it looks something like this:
| [Monday 21 March 2011] [07:21:52] <pieterh>	yeah, but it's not a buffer
| [Monday 21 March 2011] [07:22:00] <sustrik>	struct zmq_msg_t
| [Monday 21 March 2011] [07:22:01] <sustrik>	{
| [Monday 21 March 2011] [07:22:03] <sustrik>	   void *data
| [Monday 21 March 2011] [07:22:05] <pieterh>	it's a structure that contains a buffer
| [Monday 21 March 2011] [07:22:06] <sustrik>	   size_t size;
| [Monday 21 March 2011] [07:22:15] <sustrik>	   free_fn_t free_fn;
| [Monday 21 March 2011] [07:22:16] <sustrik>	}
| [Monday 21 March 2011] [07:22:16] <sustrik>	;
| [Monday 21 March 2011] [07:22:18] <pieterh>	well... 
| [Monday 21 March 2011] [07:22:24] <pieterh>	ok, point taken, it does work
| [Monday 21 March 2011] [07:22:28] <pieterh>	it's a blob descriptor
| [Monday 21 March 2011] [07:22:33] <sustrik>	yes
| [Monday 21 March 2011] [07:23:05] <pieterh>	(a) it should be called 'blob_t' and (b) recv() should return a freshly created blob
| [Monday 21 March 2011] [07:23:18] <pieterh>	blob_t *blob = zmq_recv (socket)
| [Monday 21 March 2011] [07:23:28] <sustrik>	recv has to return int
| [Monday 21 March 2011] [07:23:34] <sustrik>	to be POSIX compliant
| [Monday 21 March 2011] [07:23:40] <sustrik>	int + errno
| [Monday 21 March 2011] [07:23:45] <pieterh>	int rc = zmq_recv (socket, &blob)
| [Monday 21 March 2011] [07:23:49] <sustrik>	yes
| [Monday 21 March 2011] [07:23:59] <sustrik>	that's how it works now
| [Monday 21 March 2011] [07:23:59] <pieterh>	point being, recv creates the buffer
| [Monday 21 March 2011] [07:24:02] <sustrik>	except for the name
| [Monday 21 March 2011] [07:24:09] <pieterh>	no, now you need this extra init
| [Monday 21 March 2011] [07:24:17] <sustrik>	ah
| [Monday 21 March 2011] [07:24:17] <pieterh>	rather annoying
| [Monday 21 March 2011] [07:24:28] <sustrik>	that's to avoid additional malloc
| [Monday 21 March 2011] [07:24:38] <pieterh>	optimization
| [Monday 21 March 2011] [07:24:39] <sustrik>	so you create blob_t on the stack
| [Monday 21 March 2011] [07:24:51] <sustrik>	which is really fast
| [Monday 21 March 2011] [07:24:55] <pieterh>	I know you want that but it shouldn't be in the simple API
| [Monday 21 March 2011] [07:24:58] <sustrik>	instead of putting it on the heap
| [Monday 21 March 2011] [07:25:21] <pieterh>	simple API should be just fast enough, and as simple as it can be, and POSIX like
| [Monday 21 March 2011] [07:25:23] <pieterh>	IMO
| [Monday 21 March 2011] [07:25:24] <sustrik>	in 3.0 the simple API will be POSIX like
| [Monday 21 March 2011] [07:25:35] <sustrik>	zmq_send (void*, size_t)
| [Monday 21 March 2011] [07:25:45] <sustrik>	zero-copy is never neat
| [Monday 21 March 2011] [07:25:53] <sustrik>	it's optimisation in itself
| [Monday 21 March 2011] [07:26:00] <pieterh>	what's the zmq_recv syntax for 3.0...?
| [Monday 21 March 2011] [07:26:03] <sustrik>	and one that crosses all levels of stack
| [Monday 21 March 2011] [07:26:08] <sustrik>	and makes mess of layering
| [Monday 21 March 2011] [07:26:27] <pieterh>	int size = zmq_recv (socket, void *)...?
| [Monday 21 March 2011] [07:26:28] <sustrik>	zmq_recv (void *buf, size_t *size, int flags);
| [Monday 21 March 2011] [07:26:39] <sustrik>	forgor socket
| [Monday 21 March 2011] [07:26:41] <sustrik>	forgot
| [Monday 21 March 2011] [07:26:52] <sustrik>	same as POSIX recv()
| [Monday 21 March 2011] [07:27:32] <pieterh>	ok, should be 'ssize_t zmq_recv(void *socket, void *buf, size_t len, int flags);
| [Monday 21 March 2011] [07:27:41] <sustrik>	size_t *len
| [Monday 21 March 2011] [07:27:45] <pieterh>	nope
| [Monday 21 March 2011] [07:27:51] <pieterh>	size_t len, maximum size of buffer
| [Monday 21 March 2011] [07:27:58] <sustrik>	ah
| [Monday 21 March 2011] [07:27:59] <pieterh>	return code is actual size read
| [Monday 21 March 2011] [07:28:00] <sustrik>	you are right
| [Monday 21 March 2011] [07:28:11] <pieterh>	it's hugely annoying because you have to allocate randomly huge buffers
| [Monday 21 March 2011] [07:28:25] <pieterh>	and there's no way to recover if the buffer was too small
| [Monday 21 March 2011] [07:28:37] <pieterh>	conclusion: you *cannot* use the POSIX socket API 100% for recv
| [Monday 21 March 2011] [07:28:38] <sustrik>	EMSGSIZE
| [Monday 21 March 2011] [07:28:43] <pieterh>	no way to recover
| [Monday 21 March 2011] [07:28:48] <sustrik>	then you can increase the buffer
| [Monday 21 March 2011] [07:28:50] <sustrik>	and recv() anew
| [Monday 21 March 2011] [07:28:53] <pieterh>	'please go back and re-read'?
| [Monday 21 March 2011] [07:28:53] <sustrik>	however
| [Monday 21 March 2011] [07:28:57] <pieterh>	ugh
| [Monday 21 March 2011] [07:29:05] <pieterh>	ugh and ugh
| [Monday 21 March 2011] [07:29:15] <sustrik>	in most scenarios you want to put the limit on message size anyway
| [Monday 21 March 2011] [07:29:17] <pieterh>	it means putting message lengths into separate frames
| [Monday 21 March 2011] [07:29:27] <sustrik>	setsockopt (MAXMSGSIZE, 1000);
| [Monday 21 March 2011] [07:29:35] <pieterh>	that's orthogonal to this
| [Monday 21 March 2011] [07:29:39] <sustrik>	char buff [1000];
| [Monday 21 March 2011] [07:29:46] <sustrik>	zmq_recv (buff, 1000);
| [Monday 21 March 2011] [07:29:50] <pieterh>	ugh and ugh again
| [Monday 21 March 2011] [07:30:03] <pieterh>	I have frames of 8 bytes and frames of 2MB
| [Monday 21 March 2011] [07:30:42] <pieterh>	seriously unsatisfactory to not be able to properly allocate the right buffer size for each frame
| [Monday 21 March 2011] [07:30:50] <sustrik>	then you need to use more complex API
| [Monday 21 March 2011] [07:31:16] <pieterh>	this makes the simple API almost useless IMO
| [Monday 21 March 2011] [07:31:21] <pieterh>	nice for send, useless for recv
| [Monday 21 March 2011] [07:32:25] <sustrik>	what's the alternative then?
| [Monday 21 March 2011] [07:32:40] <sustrik>	tha'ts how UDP works, irrc
| [Monday 21 March 2011] [07:32:42] <pieterh>	I don't know, but reading into a pre-allocated buffer is inacceptable IMO
| [Monday 21 March 2011] [07:32:47] <pieterh>	UDP has maximum frame sizes
| [Monday 21 March 2011] [07:32:51] <pieterh>	TCP is a stream
| [Monday 21 March 2011] [07:32:54] <sustrik>	ZMQ_MAXMSGSIZE
| [Monday 21 March 2011] [07:33:04] <sustrik>	same as MTU
| [Monday 21 March 2011] [07:33:07] <pieterh>	0MQ is message-oriented, that means different read/write semantics
| [Monday 21 March 2011] [07:33:09] <sustrik>	but on messaging level
| [Monday 21 March 2011] [07:33:15] <pieterh>	it's not the same thing
| [Monday 21 March 2011] [07:33:24] <pieterh>	you have a 64-bit message size
| [Monday 21 March 2011] [07:33:48] <sustrik>	well, i think there are 2 distinct use cases here
| [Monday 21 March 2011] [07:33:54] <sustrik>	1. something like market data
| [Monday 21 March 2011] [07:34:02] <pieterh>	I think it's necessary to define semantics that fit messaging
| [Monday 21 March 2011] [07:34:03] <sustrik>	you want to limit max size of message
| [Monday 21 March 2011] [07:34:10] <pieterh>	not try to make 0MQ look like TCP, it's not
| [Monday 21 March 2011] [07:34:22] <sustrik>	to prevent someone killing the transmission by pushing 4GB blob
| [Monday 21 March 2011] [07:34:30] <pieterh>	this is orthogonal
| [Monday 21 March 2011] [07:34:33] <pieterh>	it's not the issue
| [Monday 21 March 2011] [07:34:37] <sustrik>	in such case zmq_recv() is sufficient
| [Monday 21 March 2011] [07:34:46] <pieterh>	I can't agree...
| [Monday 21 March 2011] [07:34:46] <sustrik>	2. something like FTP
| [Monday 21 March 2011] [07:34:52] <pieterh>	let's say I want to hold a queue of messages
| [Monday 21 March 2011] [07:34:59] <sustrik>	in that case you don't know the size in advance
| [Monday 21 March 2011] [07:35:00] <pieterh>	might be 1M messages, held for 1 second
| [Monday 21 March 2011] [07:35:09] <pieterh>	I have to allocate the maximum frame size for each one
| [Monday 21 March 2011] [07:35:15] <pieterh>	this is seriously problematic
| [Monday 21 March 2011] [07:35:33] <pieterh>	my alternative is to read everything into a frame buffer and memcpy
| [Monday 21 March 2011] [07:35:35] <pieterh>	that is seriously stupid
| [Monday 21 March 2011] [07:35:40] <pieterh>	what I want is a recv() that allocates and returns a block
| [Monday 21 March 2011] [07:35:43] <pieterh>	that is seriously simple
| [Monday 21 March 2011] [07:35:55] <sustrik>	that's zmq_recvmsg
| [Monday 21 March 2011] [07:36:02] <pieterh>	then I will never use recv() because it's *more* complex
| [Monday 21 March 2011] [07:36:05] <pieterh>	which is pointless
| [Monday 21 March 2011] [07:36:09] <sustrik>	ok
| [Monday 21 March 2011] [07:36:16] <pieterh>	trying to make 0MQ look like TCP is a big mistake IMO
| [Monday 21 March 2011] [07:36:20] <Guthur>	frankly from what I'm reading POSIX recv is just pants
| [Monday 21 March 2011] [07:36:31] <pieterh>	it is simply not a file-oriented metaphor, period
| [Monday 21 March 2011] [07:36:38] <Guthur>	and modelling it after that is the problem
| [Monday 21 March 2011] [07:36:40] <pieterh>	yes
| [Monday 21 March 2011] [07:36:52] <pieterh>	and it won't make 0MQ more compatible with the kernel
| [Monday 21 March 2011] [07:37:04] <sustrik>	so you want zmq_recvmsg and no zmq_recv, right?
| [Monday 21 March 2011] [07:37:07] <pieterh>	the way to get 0MQ into the kernel is to make it utterly compelling
| [Monday 21 March 2011] [07:37:12] <pieterh>	so every developer on the planet uses it
| [Monday 21 March 2011] [07:37:21] <pieterh>	and you get that by making it utterly simple for simple cases
| [Monday 21 March 2011] [07:37:56] <pieterh>	sustrik: what I want, speaking as a 0MQ user, is a recv method (any name) which returns a fresh buffer or blob structure
| [Monday 21 March 2011] [07:38:05] <sustrik>	zmq_recvmsg
| [Monday 21 March 2011] [07:38:07] <sustrik>	that's it
| [Monday 21 March 2011] [07:38:09] <pieterh>	and a send method that takes the same buffer or blob structure
| [Monday 21 March 2011] [07:38:18] <sustrik>	zmq_sendmsg
| [Monday 21 March 2011] [07:38:20] <pieterh>	sure
| [Monday 21 March 2011] [07:38:26] <pieterh>	then recv and send are useless
| [Monday 21 March 2011] [07:38:27] <sustrik>	it's going to be there
| [Monday 21 March 2011] [07:38:30] <pieterh>	and won't get showtime
| [Monday 21 March 2011] [07:38:43] <sustrik>	zmq_send (s, "ABC", 3);
| [Monday 21 March 2011] [07:38:48] <sustrik>	what's wrong about that?
| [Monday 21 March 2011] [07:38:55] <pieterh>	using one API metaphor for sending, another for receiving?
| [Monday 21 March 2011] [07:39:14] <sustrik>	char buff [3];
| [Monday 21 March 2011] [07:39:23] <sustrik>	zmq_recv (s, buf, 3)
| [Monday 21 March 2011] [07:39:35] <pieterh>	yes, and if the sender gives you 4 bytes, your socket is dead
| [Monday 21 March 2011] [07:39:38] <sustrik>	the sendmsg and recvmsg will be of course availabler
| [Monday 21 March 2011] [07:39:40] <pieterh>	it's not defensible
| [Monday 21 March 2011] [07:39:46] <sustrik>	it's not dead
| [Monday 21 March 2011] [07:39:49] <sustrik>	it reports error
| [Monday 21 March 2011] [07:39:54] <pieterh>	and the next read... 
| [Monday 21 March 2011] [07:39:58] <pieterh>	next frame or same frame?
| [Monday 21 March 2011] [07:40:07] <sustrik>	i would copy UDP semantics
| [Monday 21 March 2011] [07:40:12] <pieterh>	or a special flag to re-read the same frame?
| [Monday 21 March 2011] [07:40:13] <sustrik>	but it's open to discussion
| [Monday 21 March 2011] [07:40:19] <pieterh>	it gets horrid
| [Monday 21 March 2011] [07:40:25] <pieterh>	and it's not worth it just to get that simple send
| [Monday 21 March 2011] [07:40:39] <pieterh>	I can make a 'send string' method in 10 lines of C, and have done this
| [Monday 21 March 2011] [07:40:49] <pieterh>	it's not worth upgrading to 3.0 to save 10 lines of C
| [Monday 21 March 2011] [07:40:51] <sustrik>	so you want to keep the existing API right?
| [Monday 21 March 2011] [07:40:53] <pieterh>	send is really not the issue
| [Monday 21 March 2011] [07:41:05] <pieterh>	nope, the existing API is also too complex
| [Monday 21 March 2011] [07:41:08] <pieterh>	sorry :-)
| [Monday 21 March 2011] [07:41:25] <sustrik>	ok, send your proposal to the mailing list
| [Monday 21 March 2011] [07:41:33] <sustrik>	no point in discussing it here
| [Monday 21 March 2011] [07:41:36] <pieterh>	well, I have thousands of lines of sample code in the Guide
| [Monday 21 March 2011] [07:41:42] <pieterh>	that show what I like as APIs, in C
| [Monday 21 March 2011] [07:41:54] <pieterh>	string = s_recv (socket); free (string);
| [Monday 21 March 2011] [07:41:54] <sustrik>	using blobs, yes
| [Monday 21 March 2011] [07:42:00] <pieterh>	s_send (socket, "Hello");
| [Monday 21 March 2011] [07:42:08] <pieterh>	that's for strings, it's simple and clean
| [Monday 21 March 2011] [07:42:11] <sustrik>	that's a special case of current 0mq api
| [Monday 21 March 2011] [07:42:54] <sustrik>	you can propose changing zmq_msg_t into blob_t
| [Monday 21 March 2011] [07:42:54] <pieterh>	anyhow, my advice is to not try to imitate neither TCP nor UDP but develop clear and optimal 0MQ semantics in the API
| [Monday 21 March 2011] [07:43:03] <pieterh>	you will get more adoption of your API
| [Monday 21 March 2011] [07:43:10] <pieterh>	and that's the way to get 0MQ into the kernel
| [Monday 21 March 2011] [07:43:18] <sustrik>	sure, go on, propose an alternative
| [Monday 21 March 2011] [07:43:23] <pieterh>	slavish imitation of old, semi-accurate APIs won't work
| [Monday 21 March 2011] [07:43:28] <pieterh>	ok, I'll propose an alternative
| [Monday 21 March 2011] [07:43:33] <sustrik>	ok
| [Monday 21 March 2011] [07:44:04] <sustrik>	as for kernel it's a very different problem so let's forget about it atm
| [Monday 21 March 2011] [07:44:23] <pieterh>	well, I think the point is that simple / clean gets you market share
| [Monday 21 March 2011] [07:44:31] <sustrik>	sure
| [Monday 21 March 2011] [07:44:50] <sustrik>	kernel is different though -- if you propose change to ABI, you'll never get in
| [Monday 21 March 2011] [07:44:59] <pieterh>	the kernel is just peopl;e
| [Monday 21 March 2011] [07:45:02] <pieterh>	*people
| [Monday 21 March 2011] [07:45:22] <sustrik>	the problem with new ABIs is they have to be maintained indefinitely
| [Monday 21 March 2011] [07:45:24] <Guthur>	tis a shame C doesn't support method overloading
| [Monday 21 March 2011] [07:45:42] <Guthur>	method/function
| [Monday 21 March 2011] [07:45:54] <pieterh>	Guthur: well, it's nice that you know what a function is, forever
| [Monday 21 March 2011] [07:46:08] <pieterh>	sustrik: do you mind if I delete the irrelevant comments on the 3.0 page?
| [Monday 21 March 2011] [07:46:21] <sustrik>	which are those?
| [Monday 21 March 2011] [07:46:27] <pieterh>	all of them, I guess
| [Monday 21 March 2011] [07:46:27] <sustrik>	ah, the comments
| [Monday 21 March 2011] [07:46:30] <sustrik>	yes
| [Monday 21 March 2011] [07:46:31] <sustrik>	sure
| [Monday 21 March 2011] [07:46:39] <sustrik>	i haven't known it's even possible
| [Monday 21 March 2011] [07:46:40] <Guthur>	overloading doesn't remove that but you can have Send(blob*, size)  Send(zmq_msg) etc
| [Monday 21 March 2011] [07:47:11] <Guthur>	anyway not really benefiting the discussing
| [Monday 21 March 2011] [07:47:11] <sustrik>	Guthur: that helps with API, but doesn't help with ABI
| [Monday 21 March 2011] [07:47:27] <sustrik>	from ABI point of view it's still 2 functions
| [Monday 21 March 2011] [07:48:57] <Guthur>	but this was a discussion about API,
| [Monday 21 March 2011] [07:49:03] <Guthur>	i thought
| [Monday 21 March 2011] [07:49:23] <sustrik>	mostly, there are some ABI users though
| [Monday 21 March 2011] [07:49:29] <sustrik>	namely, clrzmq :)
| [Monday 21 March 2011] [07:49:34] <sustrik>	right?
| [Monday 21 March 2011] [07:49:58] <mile>	yrashk, 
| [Monday 21 March 2011] [07:50:07] <Guthur>	well... yeah 
| [Monday 21 March 2011] [07:57:51] <yrashk>	mile: ?
| [Monday 21 March 2011] [07:58:56] <mile>	yrashk, hi, I was just into connecting yaws to erlzmq2, and I'd need some advice
| [Monday 21 March 2011] [07:59:14] <yrashk>	mile: sure
| [Monday 21 March 2011] [07:59:44] <mile>	docs says it creates an OS thread per context
| [Monday 21 March 2011] [08:00:16] <yrashk>	that's right
| [Monday 21 March 2011] [08:00:21] <mile>	that means, if I want to serve a large number of connections (parallel), I should make some kind of a router talking to zmq
| [Monday 21 March 2011] [08:00:36] <mile>	which then talks to many erlang processes
| [Monday 21 March 2011] [08:00:59] <yrashk>	do you plan to open a large open of contexts?
| [Monday 21 March 2011] [08:01:16] <pieterh>	sustrik: ok, I've thrown together a very rough API proposal
| [Monday 21 March 2011] [08:01:17] <mile>	yes, a web server in the front
| [Monday 21 March 2011] [08:01:24] <sustrik>	ok
| [Monday 21 March 2011] [08:01:24] <mile>	so, the more, the better :)
| [Monday 21 March 2011] [08:01:44] <pieterh>	sustrik: mostly, there is a really nice class-oriented API style we've developed for ZFL
| [Monday 21 March 2011] [08:01:49] <Guthur>	pieterh: you sending to the mailing list, or is it on the wiki
| [Monday 21 March 2011] [08:01:55] <yrashk>	is there any good reason to open a large # of contexts?
| [Monday 21 March 2011] [08:02:02] <mile>	a good example is comet/ajax clients
| [Monday 21 March 2011] [08:02:04] <sustrik>	pieterh: can you send that to the ML
| [Monday 21 March 2011] [08:02:05] <pieterh>	Guthur: my pattern is to document on the wiki first, then tell the list or IRC about it
| [Monday 21 March 2011] [08:02:14] <pieterh>	sending specs / proposals to the ML is an anti-pattern
| [Monday 21 March 2011] [08:02:27] <Guthur>	no probs, just eager to have a look
| [Monday 21 March 2011] [08:02:33] <mile>	yrashk, no good reason, one would do good, it it takes care of multiplexing
| [Monday 21 March 2011] [08:02:36] <sustrik>	nobody is going to notice it
| [Monday 21 March 2011] [08:02:47] <yrashk>	mile: our recv does multiplex
| [Monday 21 March 2011] [08:03:31] <mile>	yrashk, so a single recv which then talks to a large number of erlang processes should work fine?
| [Monday 21 March 2011] [08:03:45] <pieterh>	sustrik: what are the actual goals with the 3.0 API?
| [Monday 21 March 2011] [08:04:12] <sustrik>	move towards POSIX
| [Monday 21 March 2011] [08:04:36] <pieterh>	simpler API?
| [Monday 21 March 2011] [08:04:41] <pieterh>	less lines of code in apps?
| [Monday 21 March 2011] [08:04:46] <sustrik>	nope, POSIX-like api
| [Monday 21 March 2011] [08:04:50] <pieterh>	that's all?
| [Monday 21 March 2011] [08:04:55] <sustrik>	for me, yes
| [Monday 21 March 2011] [08:04:56] <yrashk>	mile: well, you can spawn multiple recvs on the erlang side for different sockets (even in a single context, but you can do multiple contextrs too) and every context will multiplex (it uses zmq_poll)
| [Monday 21 March 2011] [08:05:10] <pieterh>	ok, I'll add my goals too, they're not in conflict afaics
| [Monday 21 March 2011] [08:05:16] <tjgillies>	anyone have a pub/sub example for node? i can't find one anywhere
| [Monday 21 March 2011] [08:05:18] <sustrik>	+ removing some obsolete stuff
| [Monday 21 March 2011] [08:05:30] <sustrik>	but please use mailing list
| [Monday 21 March 2011] [08:05:46] <sustrik>	nobody will see the discussion on the webpage
| [Monday 21 March 2011] [08:06:03] <pieterh>	sustrik: like I said, I document on the wiki first, *then* discuss on the list
| [Monday 21 March 2011] [08:06:03] <mile>	yrashk, thanks! :)   do you know of any code snippets around? 
| [Monday 21 March 2011] [08:06:13] <sustrik>	ok
| [Monday 21 March 2011] [08:06:16] <mile>	I couldn't find much on the webpage
| [Monday 21 March 2011] [08:06:25] <yrashk>	mile: perf/ and test/
| [Monday 21 March 2011] [08:06:30] <yrashk>	mile: in the repo
| [Monday 21 March 2011] [08:06:30] <sustrik>	but i makes unclear what's your proposal
| [Monday 21 March 2011] [08:06:31] <mile>	tx :)
| [Monday 21 March 2011] [08:06:37] <sustrik>	at least mark it as such
| [Monday 21 March 2011] [08:06:44] <pieterh>	sustrik: have you read the page?
| [Monday 21 March 2011] [08:06:56] <sustrik>	yep
| [Monday 21 March 2011] [08:07:10] <pieterh>	it's literally a brain dump, not organized yet
| [Monday 21 March 2011] [08:07:12] <yrashk>	mile: yw
| [Monday 21 March 2011] [08:07:22] <sustrik>	whatever
| [Monday 21 March 2011] [08:07:30] <sustrik>	just move the discussion the mailing list
| [Monday 21 March 2011] [08:07:50] <pieterh>	Yes, I'm in the process of doing that
| [Monday 21 March 2011] [08:07:55] <sustrik>	goodo
| [Monday 21 March 2011] [08:08:23] <pieterh>	you'd prefer that my proposal is marked "proposed by Pieter" or somesuch?
| [Monday 21 March 2011] [08:08:35] <pieterh>	we don't generally do this
| [Monday 21 March 2011] [08:08:49] <pieterh>	wiki pages = edit into shape and consensus
| [Monday 21 March 2011] [08:09:32] <sustrik>	doesn't really matter as long as it's discussed on the mailing list
| [Monday 21 March 2011] [08:09:40] <sustrik>	then it's clear who proposed what
| [Monday 21 March 2011] [08:13:12] <pieterh>	ok, done
| [Monday 21 March 2011] [08:13:19] <Guthur>	will pushing string handling down into 0MQ have any adverse effect on people sending binary blobs
| [Monday 21 March 2011] [08:13:29] <pieterh>	Guthur: it's two different use cases
| [Monday 21 March 2011] [08:13:38] <pieterh>	sending strings is one very common case
| [Monday 21 March 2011] [08:13:54] <Guthur>	sure, but binary serialization is quite popular these days
| [Monday 21 March 2011] [08:13:58] <pieterh>	it's only in C that a string and a blob are fundamentally different
| [Monday 21 March 2011] [08:14:03] <Guthur>	protobuffers etc
| [Monday 21 March 2011] [08:14:17] <pieterh>	yeah, but this is not stuff you want to learn as a beginner
| [Monday 21 March 2011] [08:15:13] <Guthur>	if you are a beginner you probably shouldn't be using C
| [Monday 21 March 2011] [08:15:21] <Guthur>	you're feet can only take so much
| [Monday 21 March 2011] [08:15:28] <pieterh>	perhaps it was an error to use C as the language for the Guide
| [Monday 21 March 2011] [08:16:32] <Guthur>	pieterh: you have done a good job there though
| [Monday 21 March 2011] [08:16:53] <pieterh>	with a lot of help from contributors...
| [Monday 21 March 2011] [08:16:59] <Guthur>	I suppose my comment was more programming general as opposed to 0MQ beginners
| [Monday 21 March 2011] [08:17:51] <Guthur>	I'd imagine most of the bindings provide string handling
| [Monday 21 March 2011] [08:18:02] <Guthur>	I know i did with clrzmq
| [Monday 21 March 2011] [08:18:04] <pieterh>	perhaps we should make a standard C binding... :-)
| [Monday 21 March 2011] [08:18:56] <Guthur>	well you did mention multiple levels of the API
| [Monday 21 March 2011] [08:20:01] <pieterh>	hmm
| [Monday 21 March 2011] [08:22:47] <pieterh>	sustrik: if we made a separate C binding, most of my concerns could be solved there
| [Monday 21 March 2011] [08:23:25] <sustrik>	you mean like C binding on top of POSIX api
| [Monday 21 March 2011] [08:23:28] <pieterh>	yes
| [Monday 21 March 2011] [08:23:34] <sustrik>	why not
| [Monday 21 March 2011] [08:23:37] <sustrik>	it's up to you
| [Monday 21 March 2011] [08:23:43] <pieterh>	I have a lovely class-oriented model in ZFL...
| [Monday 21 March 2011] [08:23:48] <sustrik>	ack
| [Monday 21 March 2011] [08:24:13] <pieterh>	this would remove the need for random ad-hoc layers like zmsg and s_recv/s_send
| [Monday 21 March 2011] [08:24:22] <pieterh>	ok, I'll think it through
| [Monday 21 March 2011] [08:24:25] <sustrik>	sure, go for it
| [Monday 21 March 2011] [08:24:41] <pieterh>	there's stuff like serialization that other bindings offer, right?
| [Monday 21 March 2011] [08:24:44] <pieterh>	json, etc.
| [Monday 21 March 2011] [08:24:53] <sustrik>	yes, different stuff
| [Monday 21 March 2011] [08:24:56] <pieterh>	hmm
| [Monday 21 March 2011] [08:25:08] <sustrik>	some bindings don't even follow the underlying APIs
| [Monday 21 March 2011] [08:25:18] <pieterh>	indeed
| [Monday 21 March 2011] [08:25:34] <sustrik>	and adhere more to paradigm of the language in question
| [Monday 21 March 2011] [08:25:39] <sustrik>	like C#
| [Monday 21 March 2011] [08:25:51] <sustrik>	Guthur may be more specific on that
| [Monday 21 March 2011] [08:26:21] <pieterh>	this means the real API can be as complex as you need to make it
| [Monday 21 March 2011] [08:26:40] <pieterh>	hmm, ok, this is a good plan
| [Monday 21 March 2011] [08:26:46] <sustrik>	nice
| [Monday 21 March 2011] [08:40:05] <Guthur>	yeah. I'm guilty of deviating somewhat from the underlying API 
| [Monday 21 March 2011] [08:41:01] <Guthur>	my rational is that to get accepted by a language community such as C# you need to provide adequate abstractions
| [Monday 21 March 2011] [08:41:33] <Guthur>	string handling being a prime example
| [Monday 21 March 2011] [08:42:09] <Guthur>	they get scared if they see too many byte arrays
| [Monday 21 March 2011] [08:43:03] <Guthur>	I'm not joking there either, when I demonstrated something to my boss that is exactly what he picked up on, he was like 'ugh byte arrays'
| [Monday 21 March 2011] [08:43:25] <Guthur>	I should have hid that better for my demo
| [Monday 21 March 2011] [08:45:49] <sustrik>	:)
| [Monday 21 March 2011] [09:15:12] <mile>	yrashk, got the forst results
| [Monday 21 March 2011] [09:15:22] <mile>	erlang talking to c++ 
| [Monday 21 March 2011] [09:15:41] <mile>	but not very impressive, I guess I have done something wrong
| [Monday 21 March 2011] [09:16:03] <mile>	got around 2600 msg/sec
| [Monday 21 March 2011] [09:16:28] <mile>	that is, the double of that
| [Monday 21 March 2011] [09:16:29] <pieterh>	mile: are you doing request-reply?
| [Monday 21 March 2011] [09:16:50] <mile>	yes
| [Monday 21 March 2011] [09:17:00] <pieterh>	that's pretty normal then
| [Monday 21 March 2011] [09:17:27] <pieterh>	round-tripping is slow
| [Monday 21 March 2011] [09:17:35] <mile>	ok, thats good in terms I didn't screw up :)
| [Monday 21 March 2011] [09:17:54] <pieterh>	ah, you may also have screwed up, that's not excluded :-)
| [Monday 21 March 2011] [09:18:07] <mile>	hehe
| [Monday 21 March 2011] [09:18:19] <pieterh>	if you want to measure throughput, try a push/pull or pub/sub test
| [Monday 21 March 2011] [09:18:30] <mile>	so, if I get it right, single request/reply are bounded by the roundtrip
| [Monday 21 March 2011] [09:18:35] <yrashk>	there are pub/sub perf tests in erlzmq2
| [Monday 21 March 2011] [09:18:38] <mile>	but if I had parallel clients
| [Monday 21 March 2011] [09:18:38] <pieterh>	yes
| [Monday 21 March 2011] [09:18:51] <mile>	that would scale 
| [Monday 21 March 2011] [09:19:00] <pieterh>	mile: how far in the Guide have you read?
| [Monday 21 March 2011] [09:19:28] <mile>	pieterh, good point, I started skipping at some point
| [Monday 21 March 2011] [09:19:29] <mile>	:)
| [Monday 21 March 2011] [09:19:45] <mile>	I'll get back to it
| [Monday 21 March 2011] [09:20:06] <pieterh>	it doesn't talk about round-tripping until chapter 4
| [Monday 21 March 2011] [09:20:21] <pieterh>	but at least you need to know how to scale up req/rep
| [Monday 21 March 2011] [09:20:35] <pieterh>	using devices, which we cover in ch2
| [Monday 21 March 2011] [09:21:04] <yrashk>	btw pieterh I am considering actually using 0mq for some notification bus here :) still not sure whether I can make this simple enough, though..
| [Monday 21 March 2011] [09:21:06] <mile>	that I have read, but I definitely need to read it again :)
| [Monday 21 March 2011] [09:21:41] <pieterh>	yrashk: well, let us know if you hit any blocks
| [Monday 21 March 2011] [09:21:55] <yrashk>	I already hit one, it looks too complicated for me :D
| [Monday 21 March 2011] [09:23:06] <pieterh>	you mean the use case?
| [Monday 21 March 2011] [09:23:13] <yrashk>	yeah
| [Monday 21 March 2011] [09:23:28] <yrashk>	I am still to come to any kind of real model yet
| [Monday 21 March 2011] [09:23:44] <pieterh>	it's a new system or you want to reimplement an existing one?
| [Monday 21 March 2011] [09:23:54] <yrashk>	but I need to build a cluster-wide notification system where everyone can push a mesasge to a "topic" and subscribe to any topic
| [Monday 21 March 2011] [09:24:14] <yrashk>	but it's multihost and host-failure tolerant.. (well, it should be)
| [Monday 21 March 2011] [09:24:18] <pieterh>	read the whaleshark whitepaper yet?
| [Monday 21 March 2011] [09:24:27] <yrashk>	briefly
| [Monday 21 March 2011] [09:24:28] <pieterh>	that's more or less the idea
| [Monday 21 March 2011] [09:24:52] <pieterh>	more or less, not exactly
| [Monday 21 March 2011] [09:24:59] <pieterh>	but there may be ideas there to help you
| [Monday 21 March 2011] [09:25:16] <yrashk>	good idea, thanks
| [Monday 21 March 2011] [09:25:32] <pieterh>	depending on the scale you can also make a brokered model
| [Monday 21 March 2011] [09:25:43] <pieterh>	e.g. something like AMQP's topic exchange
| [Monday 21 March 2011] [09:25:55] <yrashk>	I'd rather avoid amqp
| [Monday 21 March 2011] [09:26:04] <pieterh>	no, not AMQP, just some of the semantics
| [Monday 21 March 2011] [09:26:13] <yrashk>	I mean
| [Monday 21 March 2011] [09:26:16] <pieterh>	I can explain briefly if you like, it's very elegant
| [Monday 21 March 2011] [09:26:21] <yrashk>	I'd rather avoid single-broker thing
| [Monday 21 March 2011] [09:26:26] <pieterh>	ah, ok, why?
| [Monday 21 March 2011] [09:26:47] <pieterh>	'notification' doesn't immediately suggest high volumes
| [Monday 21 March 2011] [09:26:48] <yrashk>	I need to be very tolerant to host failures (any host can go down any time)
| [Monday 21 March 2011] [09:26:56] <pieterh>	bleh, this is trivial to address
| [Monday 21 March 2011] [09:27:07] <pieterh>	you make live-live redundancy, period
| [Monday 21 March 2011] [09:27:24] <pieterh>	especially simple for pubsub models
| [Monday 21 March 2011] [09:27:40] <pieterh>	so what's the volume?
| [Monday 21 March 2011] [09:28:12] <yrashk>	and yeah there no high volumes -- I just want this system to work through any # of hosts, don't fail when any host is down and make some messages durable
| [Monday 21 March 2011] [09:28:32] <yrashk>	a kind of intra-cluster signalling framework, so to say
| [Monday 21 March 2011] [09:28:38] <yrashk>	serverless one, if you wish
| [Monday 21 March 2011] [09:28:57] <yrashk>	i.e. each host is equal to any other host in the system
| [Monday 21 March 2011] [09:28:57] <pieterh>	... removing stable points from a network doesn't always make it simpler
| [Monday 21 March 2011] [09:29:03] <pieterh>	atomic multicast?
| [Monday 21 March 2011] [09:29:09] <pieterh>	paxos style?
| [Monday 21 March 2011] [09:29:27] <pieterh>	actually I have an Erlang implementation in my pocket somewhere
| [Monday 21 March 2011] [09:29:43] <pieterh>	but not using 0MQ
| [Monday 21 March 2011] [09:29:54] <yrashk>	I probably don't even care about atomicity. Just getting messages delivered to those who want to listen to them, if the host was down, deliver all durable messages there, too
| [Monday 21 March 2011] [09:30:41] <yrashk>	and yeah, dynamic node additions and removals, obviously
| [Monday 21 March 2011] [09:30:44] <pieterh>	well... IMO you're setting the bar too high 
| [Monday 21 March 2011] [09:30:47] <yrashk>	nothing fancy, in fact
| [Monday 21 March 2011] [09:30:55] <pieterh>	yet, too complex to implement... :-)
| [Monday 21 March 2011] [09:31:03] <pieterh>	make it simpler, implement that, then improve it
| [Monday 21 March 2011] [09:31:03] <yrashk>	yep
| [Monday 21 March 2011] [09:31:19] <pieterh>	my suggestion would be to use a broker, and if you need it, a broker pair
| [Monday 21 March 2011] [09:31:29] <pieterh>	use a simple topic routing engine, I can provide you a design if needed
| [Monday 21 March 2011] [09:31:54] <pieterh>	then, when you have that working, figure out what you really want to make
| [Monday 21 March 2011] [09:32:40] <yrashk>	I guess I also need to read about pgm
| [Monday 21 March 2011] [09:32:44] <pieterh>	you can relatively easily evolve from a broker-based architecture to a distributed one
| [Monday 21 March 2011] [09:32:55] <pieterh>	however, jumping straight to a distributed model is rather hard
| [Monday 21 March 2011] [09:33:01] <pieterh>	look at the RRR patterns in Ch4
| [Monday 21 March 2011] [09:33:01] <yrashk>	ikr :)
| [Monday 21 March 2011] [09:33:08] <pieterh>	the distributed pirate is the very last example
| [Monday 21 March 2011] [09:33:49] <pieterh>	pgm is a decent option here but will require network support
| [Monday 21 March 2011] [09:34:33] <pieterh>	you could even make this work with a forwarder device, in a very short time
| [Monday 21 March 2011] [09:34:36] <pieterh>	hah
| [Monday 21 March 2011] [09:34:45] <pieterh>	to cheat... 
| [Monday 21 March 2011] [09:34:59] <pieterh>	every node connects to the forwarder front-end, and to the forwarder back-end
| [Monday 21 March 2011] [09:35:09] <pieterh>	use SUB socket filtering
| [Monday 21 March 2011] [09:35:15] <pieterh>	problem solved
| [Monday 21 March 2011] [09:35:31] <yrashk>	so a single forwarded device, then?
| [Monday 21 March 2011] [09:35:35] <pieterh>	yeah
| [Monday 21 March 2011] [09:35:36] <yrashk>	for starters
| [Monday 21 March 2011] [09:35:46] <pieterh>	all it does is connect a SUB to a PUB socket
| [Monday 21 March 2011] [09:36:16] <pieterh>	it acts like a network-global multicast group
| [Monday 21 March 2011] [09:36:26] <yrashk>	yeah I get it
| [Monday 21 March 2011] [09:36:41] <pieterh>	it'll take you about 1 hour to make, maybe less
| [Monday 21 March 2011] [09:36:57] <yrashk>	I can already imagine this, I have some good visual thinking
| [Monday 21 March 2011] [09:37:08] <pieterh>	when it works, send $1.50 to my paypal account, thanks
| [Monday 21 March 2011] [09:37:16] <yrashk>	hahah
| [Monday 21 March 2011] [09:37:21] <pieterh>	:-) 
| [Monday 21 March 2011] [09:37:28] <yrashk>	what's the account address? ;))
| [Monday 21 March 2011] [09:38:16] <pieterh>	ah, I have it here somewhere...
| [Monday 21 March 2011] [09:38:35] <pieterh>	so the downside of this approach is that filtering is subscriber-side
| [Monday 21 March 2011] [09:39:04] <pieterh>	and you have a central point, which you can scale to N redundant live-live instances
| [Monday 21 March 2011] [09:39:29] <pieterh>	upside is every node except the forwarder is dynamic
| [Monday 21 March 2011] [09:40:45] <yrashk>	yeah forwarders are obviously the bottlenecks here
| [Monday 21 March 2011] [09:41:12] <pieterh>	it won't slow things down unless you're doing millions of msg/sec
| [Monday 21 March 2011] [09:41:23] <pieterh>	if you need more scale, you switch to a name service approach
| [Monday 21 March 2011] [09:41:38] <pieterh>	i.e. every publisher is also a forwarder
| [Monday 21 March 2011] [09:41:39] <yrashk>	no I am not expecting huge volumes
| [Monday 21 March 2011] [09:41:49] <pieterh>	so, no bottleneck issue
| [Monday 21 March 2011] [09:42:01] <pieterh>	simple code doesn't crash
| [Monday 21 March 2011] [09:42:31] <pieterh>	you probably need to set a HWM properly
| [Monday 21 March 2011] [09:43:07] <yrashk>	so what you're suggesting is having a forwarder on each and every node, right?
| [Monday 21 March 2011] [09:44:00] <pieterh>	no, that's only if you need a lot more scale
| [Monday 21 March 2011] [09:44:06] <pieterh>	forget that
| [Monday 21 March 2011] [09:44:11] <pieterh>	one forwarder in middle of network
| [Monday 21 March 2011] [09:44:20] <pieterh>	binds to a SUB frontend, binds to a PUB backend
| [Monday 21 March 2011] [09:44:45] <pieterh>	every node connects to those two sockets, one to publish, one to subscribe
| [Monday 21 March 2011] [09:44:54] <pieterh>	every node receives every message, and filters using SUB filtering
| [Monday 21 March 2011] [09:45:00] <yrashk>	right
| [Monday 21 March 2011] [09:45:13] <pieterh>	then, if you need it, you double the forwarders and make live/live redundancy
| [Monday 21 March 2011] [09:45:46] <yrashk>	this live-live redundancy, any suggestions on how you would typically do it?
| [Monday 21 March 2011] [09:46:00] <yrashk>	is it like doing the same operations on a # of forwarders?
| [Monday 21 March 2011] [09:46:05] <pieterh>	you run two forwarders, right?
| [Monday 21 March 2011] [09:46:23] <pieterh>	and every node connects its PUB socket to both forwarders, and its SUB socket to both forwarders
| [Monday 21 March 2011] [09:46:42] <pieterh>	then you have to identity each message uniquely (sequence number per publisher)
| [Monday 21 March 2011] [09:46:42] <yrashk>	yeah then I imagined it right
| [Monday 21 March 2011] [09:46:47] <pieterh>	and reject duplicates
| [Monday 21 March 2011] [09:46:55] <pieterh>	0MQ handles the fanout and fanin properly
| [Monday 21 March 2011] [10:50:45] <mikko-_>	hi
| [Monday 21 March 2011] [10:51:05] <mikko-_>	I am not quite clear who should prepare the upstream patch for openpgm changes
| [Monday 21 March 2011] [10:57:56] <sustrik>	mikko-_: neither am i
| [Monday 21 March 2011] [10:58:12] <sustrik>	presumably, it's better to patch the master and downstream it afterwards
| [Monday 21 March 2011] [11:12:32] <mikko-_>	yes
| [Monday 21 March 2011] [11:41:00] <pieterh>	hi mikko
| [Monday 21 March 2011] [11:41:26] <pieterh>	we can't do pull requests to multiple gits, which is annoying
| [Monday 21 March 2011] [11:42:04] <pieterh>	mikko-_: I'm happy to send a patch from 2.1 to master
| [Monday 21 March 2011] [11:45:13] <sustrik>	pieterh: if you do so, take care to separate the openpgm thing from other functionality
| [Monday 21 March 2011] [11:45:32] <pieterh>	sustrik: yes, it's a single commit, the only grey part is that I tend to update the NEWS at the same time
| [Monday 21 March 2011] [11:45:41] <pieterh>	I'm going to start doing that in a separate commit
| [Monday 21 March 2011] [11:45:46] <sustrik>	ack
| [Monday 21 March 2011] [11:46:24] <pieterh>	I'll send you the patch for OpenPGM then, offlist since it's rather huge
| [Monday 21 March 2011] [11:47:01] <sustrik>	ok, also don't forget to sign it off
| [Monday 21 March 2011] [11:47:07] <pieterh>	right
| [Monday 21 March 2011] [11:48:41] <pieterh>	OK, sent...
| [Monday 21 March 2011] [11:49:19] <pieterh>	there's a better way to do this kind of exchange
| [Monday 21 March 2011] [11:49:42] <pieterh>	but I keep forgetting the ins and outs of git... :-)
| [Monday 21 March 2011] [12:08:14] <pieterh>	sustrik: I'm not going to scream on the list, but I'm using PAIR quite systematically now
| [Monday 21 March 2011] [12:23:39] <pieterh>	ok, I screamt
| [Monday 21 March 2011] [12:52:02] <Aaron__>	So I'm trying to build zeromq and have it link against a static uuid library. I'm not very good with configure scripts, and I don't see a parameter to tell configure where the static library and headers are. Can anyone help?
| [Monday 21 March 2011] [12:53:53] <pieterh>	Aaron__: what OS are you on?
| [Monday 21 March 2011] [12:54:05] <pieterh>	and what language are you working in?
| [Monday 21 March 2011] [12:54:18] <Aaron__>	Just Ubuntu.
| [Monday 21 March 2011] [12:54:28] <Aaron__>	c++
| [Monday 21 March 2011] [12:55:03] <pieterh>	hang on, I'll get you the gcc syntax...
| [Monday 21 March 2011] [12:55:40] <Aaron__>	gcc? Don't I need to satisfy the configure check?
| [Monday 21 March 2011] [12:55:44] <Aaron__>	first
| [Monday 21 March 2011] [12:56:02] <pieterh>	you are building an application right?
| [Monday 21 March 2011] [12:56:09] <pieterh>	or building zmq?
| [Monday 21 March 2011] [12:56:26] <pieterh>	ah, it doesn't link against anything when you build it
| [Monday 21 March 2011] [12:56:31] <Aaron__>	Well, it's a little complicated, but right now I'm just trying to build zeromq.
| [Monday 21 March 2011] [12:56:41] <pieterh>	please use the 2.1 package released today
| [Monday 21 March 2011] [12:56:47] <Aaron__>	I am.
| [Monday 21 March 2011] [12:56:57] <pieterh>	ok, good
| [Monday 21 March 2011] [12:57:10] <Aaron__>	It builds fine if I use the uuid-dev package.
| [Monday 21 March 2011] [12:57:17] <pieterh>	right, which is what you want
| [Monday 21 March 2011] [12:57:35] <Aaron__>	But that creates a dependance on libuuid.so.
| [Monday 21 March 2011] [12:57:39] <Aaron__>	Which I don't want.
| [Monday 21 March 2011] [12:57:46] <Seta00>	Aaron__: should be something like --with-uuid=/path/to/your/custom/build
| [Monday 21 March 2011] [12:57:52] <Aaron__>	I have uuid built statically...
| [Monday 21 March 2011] [12:58:05] <Aaron__>	ah
| [Monday 21 March 2011] [12:58:28] <pieterh>	Aaron__: when you find out how to do this, add it to the tips page at http://zero.mq/tips
| [Monday 21 March 2011] [13:00:43] <Aaron__>	I tried --with-uuid=/path/to/uuid/install/folder but got nothing.
| [Monday 21 March 2011] [13:01:00] <Aaron__>	Just the same "configure: error: cannot link with -luuid, install uuid-dev."
| [Monday 21 March 2011] [13:02:12] <Aaron__>	I tried a few different directories, /path/to/uuid/install/folder, /path/to/uuid/install/folder/lib, /path/to/uuid/install/folder/include, /path/to/uuid/install/folder/bin, but nothing did anything different.
| [Monday 21 March 2011] [13:02:37] <Aaron__>	Does the configure script actually support that argument?
| [Monday 21 March 2011] [13:02:49] <pieterh>	Aaron__: from reading configure, it's looking for, and not finding 'uuid_generate' in -luuid
| [Monday 21 March 2011] [13:03:29] <Aaron__>	Hmm, I guess I could double check my uuid.
| [Monday 21 March 2011] [13:05:32] <pieterh>	The rule in configure.in is pretty clear:
| [Monday 21 March 2011] [13:05:33] <pieterh>	AC_CHECK_LIB(uuid, uuid_generate, ,
| [Monday 21 March 2011] [13:05:33] <pieterh>	            [AC_MSG_ERROR([cannot link with -luuid, install uuid-dev.])])
| [Monday 21 March 2011] [13:06:55] <Aaron__>	Yeah, my uuid library does have a uuid_generate,
| [Monday 21 March 2011] [13:07:00] <Aaron__>	Sorry about that.
| [Monday 21 March 2011] [13:07:07] <Aaron__>	Barking up the wrong tree.
| [Monday 21 March 2011] [13:07:40] <Aaron__>	Thanks for the --with-uuid argument though.
| [Monday 21 March 2011] [13:08:07] <Aaron__>	I meant "doesn't have uuid_generate"
| [Monday 21 March 2011] [13:10:50] <pieterh>	ok, problem solved...
| [Monday 21 March 2011] [13:14:58] <Seta00>	:)
| [Monday 21 March 2011] [13:16:28] <Aaron__>	Apparantly there is more than one uuid library out there, sigh.
| [Monday 21 March 2011] [13:17:09] <Aaron__>	I thought it was the same one Postgresql was using.
| [Monday 21 March 2011] [13:17:31] <mikko-_>	Aaron__: are you building zeromq shared or static?
| [Monday 21 March 2011] [13:17:45] <Aaron__>	I want zeromq to be static too.
| [Monday 21 March 2011] [13:17:59] <mikko-_>	./configure --disable-shared
| [Monday 21 March 2011] [13:18:17] <Aaron__>	Yeah, I'll pop that on too.
| [Monday 21 March 2011] [13:18:26] <mikko-_>	as far as i understand if zeromq is static then libuuid would be as well
| [Monday 21 March 2011] [13:18:32] <Aaron__>	Ah
| [Monday 21 March 2011] [13:18:42] <Aaron__>	Well, I need to get the right uuid as the first step.
| [Monday 21 March 2011] [13:18:58] <mikko-_>	you should be able to use one provided by your OS
| [Monday 21 March 2011] [13:19:02] <mikko-_>	usually they ship .a as well
| [Monday 21 March 2011] [13:19:32] <Aaron__>	Yeah, I'm working on it as we speak.
| [Monday 21 March 2011] [13:20:32] <mikko-_>	on rhel its usually efsprogs and on ubuntu/debian etc uuid-dev
| [Monday 21 March 2011] [13:20:41] <mikko-_>	not sure about others
| [Monday 21 March 2011] [13:21:07] <mikko-_>	uuid libs are confusing as there are multiple of them
| [Monday 21 March 2011] [13:21:10] <mikko-_>	and they are not compatible
| [Monday 21 March 2011] [13:24:22] <Aaron__>	Yeah, I was certainly confused.
| [Monday 21 March 2011] [13:37:44] <drbobbeaty>	Question about the 2.1.3 packaging... with the change from 2.1.2 to 2.1.3, I now see that I'm generating a libpgm.so - but I'm not seeing it as an 'ldd' dependency of libzmq.so - is this right?
| [Monday 21 March 2011] [13:38:23] <drbobbeaty>	I used '--with-pgm' in the build, and I see it unpacking the OpenPGM code, and the libpgm.so is generated, but I'm having trouble running my code that worked fine with 2.1.2.
| [Monday 21 March 2011] [13:38:32] <Aaron__>	Well, "nm --demangle" tells me I have uuid_generate (0000000000000ee0 T uuid_generate). I'm running configure like so, "../configure --with-pic --prefix=/root/zeromq_install/ --enable-static --disable-shared --without-documentation --with-uuid=/path/to/uuid/install/dir/ ". And I still get "configure: error: cannot link with -luuid, install uuid-dev."
| [Monday 21 March 2011] [13:39:21] <drbobbeaty>	I have tried linking with '-lzmq -lpgm' and still it's not even starting to execute - it's as if I'm missing a critical step.
| [Monday 21 March 2011] [13:39:26] <drbobbeaty>	Anyone run into this?
| [Monday 21 March 2011] [13:39:30] <drbobbeaty>	Pieter?
| [Monday 21 March 2011] [13:39:35] <pieterh>	drbobbeaty: this is indeed a new part of 2.1.3
| [Monday 21 March 2011] [13:40:38] <pieterh>	it's quite possible that the OpenPGM integration doesn't work properly yet :-/
| [Monday 21 March 2011] [13:40:43] <drbobbeaty>	I'm OK with it being new, but code that ran fine with 2.1.2 is core dumping on main() in 2.1.3 - like I'm missing a linking step or something. Is there something I'm missing OTHER than the inclusion of '-lpgm' in the linking step?
| [Monday 21 March 2011] [13:41:10] <pieterh>	drbobbeaty: mikko is the man to answer this
| [Monday 21 March 2011] [13:41:15] <drbobbeaty>	That would be sad for a 'stable' tag.
| [Monday 21 March 2011] [13:41:15] <pieterh>	summon mikko...
| [Monday 21 March 2011] [13:41:45] <pieterh>	drbobbeaty: a bit, yes, but if there's a problem we'll fix it immediately
| [Monday 21 March 2011] [13:42:28] <pieterh>	mikko: are you around?
| [Monday 21 March 2011] [13:43:21] <pieterh>	drbobbeaty: can you post a minimal test case that causes it to die? I'll reproduce it
| [Monday 21 March 2011] [13:43:41] <drbobbeaty>	peiterh: Sure, give me a sec.
| [Monday 21 March 2011] [13:43:45] <pieterh>	k
| [Monday 21 March 2011] [14:01:17] <drbobbeaty>	pieterh: is there a list of what's changed from 2.1.2 to 2.1.3 - I'm having a tough time makeing the "minimal test" as my simple tests are OK, but the biggies that fail are awfully complex. Too complex for a test case, really.
| [Monday 21 March 2011] [14:01:34] <drbobbeaty>	If I knew what changed, maybe it'd help me find the issue in my code.
| [Monday 21 March 2011] [14:15:17] <cremes>	i'm starting to see a new assertion that i haven't run into before
| [Monday 21 March 2011] [14:15:18] <cremes>	Assertion failed: sessions.empty () (socket_base.cpp:127)
| [Monday 21 March 2011] [14:15:35] <cremes>	my code hasn't changed but i did update to the latest master
| [Monday 21 March 2011] [14:15:54] <cremes>	has anyone else seen this?
| [Monday 21 March 2011] [14:21:11] <drbobbeaty>	cremes: not me, but I'm seeing other problems with 2.1.3 that I wasn't seeing in 2.1.2
| [Monday 21 March 2011] [14:21:27] <cremes>	drbobbeaty: what problems are you seeing?
| [Monday 21 March 2011] [14:23:24] <drbobbeaty>	cremes: I'm tracking down an immediate app core dump when using the new 2.1.3 - It's not easily reproducable in a small app, but it's 100% reproduceable in my larger app. I'm trying to trim it down to get a good test case, but it's proving to be hard based on the immediate nature of the core dump.
| [Monday 21 March 2011] [14:23:44] <drbobbeaty>	The small test case runs fine. But the bigger one is nasty.
| [Monday 21 March 2011] [14:24:41] <cremes>	drbobbeaty: if you catch the crash in gdb, where is it crashing inside 0mq?
| [Monday 21 March 2011] [14:25:37] <drbobbeaty>	Nope, it's crashing on main() - the very first executable line. But if I comment out the calls to 0MQ, it runs just fine. 
| [Monday 21 March 2011] [14:26:00] <drbobbeaty>	It's the invocation of the ZMQ calls in some way that's causing it to core dump - I just haven't figured out what.
| [Monday 21 March 2011] [14:26:19] <cremes>	that is quite... odd :)
| [Monday 21 March 2011] [14:26:20] <drbobbeaty>	If I had a nice stack trace, I'd be able to figure this out easily. But I don't.
| [Monday 21 March 2011] [14:26:49] <pieterh>	drbobbeaty: are you using pgm in all your cases?
| [Monday 21 March 2011] [14:28:08] <pieterh>	cremes: this is from the development master?
| [Monday 21 March 2011] [14:28:17] <cremes>	pieterh: correct
| [Monday 21 March 2011] [14:28:31] <pieterh>	can you try with the 2.1 release and see if you also get it?
| [Monday 21 March 2011] [14:28:32] <cremes>	i am trying to 'bisect' it now to see if i can narrow down the commit that broke it
| [Monday 21 March 2011] [14:28:41] <cremes>	sure, i can do that
| [Monday 21 March 2011] [14:29:30] <drbobbeaty>	pieterh: Yup, pgm is what I use - 100% of the time.
| [Monday 21 March 2011] [14:29:36] <drbobbeaty>	I'm getting closer... :)
| [Monday 21 March 2011] [14:29:49] <pieterh>	drbobbeaty: ok, so presumably there's a load library issue
| [Monday 21 March 2011] [14:30:02] <pieterh>	the other changes over 2.1.2 are all quite specific patches for core bugs
| [Monday 21 March 2011] [14:32:26] <drbobbeaty>	pieterh: I'm in the configuration code of my app - setting the ZMQ_ properties of the socket. It *appears* I'm getting close.
| [Monday 21 March 2011] [14:33:00] <pieterh>	drbobbeaty: presumably a load error on the openpgm library
| [Monday 21 March 2011] [14:33:59] <drbobbeaty>	In my simple test ( https://gist.github.com/635015 ) I'm now seeing the following error:
| [Monday 21 March 2011] [14:34:20] <drbobbeaty>	Assertion failed: rc == 0 (connect_session.cpp:84)
| [Monday 21 March 2011] [14:34:44] <drbobbeaty>	Double-checking to see if I messed up the test.
| [Monday 21 March 2011] [14:38:47] <drbobbeaty>	pieterh: triple-checked... if I compile this as 'g++ xmit.cpp -o xmit -lzmq' I get the error.
| [Monday 21 March 2011] [14:38:59] <drbobbeaty>	If I add in the '-lpgm' at the end I still get the error.
| [Monday 21 March 2011] [14:39:09] <pieterh>	ok, let me give it a shot
| [Monday 21 March 2011] [14:39:20] <drbobbeaty>	If I switch the order so it reads: '-lpgm -lzmq' I still get the error.
| [Monday 21 March 2011] [14:42:38] <pieterh>	drbobbeaty: I get a clean error message 'Protocol not supported' and then a core dump
| [Monday 21 March 2011] [14:42:49] <pieterh>	this is 0MQ 2.1.3 built without OpenPGM
| [Monday 21 March 2011] [14:43:50] <drbobbeaty>	pieterh: not surprising... I'm using OpenPGM in the example. You need to build it --with-pgm and then try it.
| [Monday 21 March 2011] [14:44:16] <drbobbeaty>	pieterh: I've tried two boxes - Ubuntu 10.04.1 and CentOS 5 and both have the same error when using 2.1.3 w/OpenPGM
| [Monday 21 March 2011] [14:44:31] <pieterh>	drbobbeaty: would you raise an issue at https://github.com/zeromq/zeromq2-1/issues and put a link to your example?
| [Monday 21 March 2011] [14:44:33] <drbobbeaty>	(same gist used on both machines)
| [Monday 21 March 2011] [14:45:01] <drbobbeaty>	I've never done that. I'll try. I'll be as complete as I can be.
| [Monday 21 March 2011] [14:45:26] <pieterh>	interesting... when I build 2.1.3 with pgm, the test program says 'sending...' in a loop
| [Monday 21 March 2011] [14:45:30] <pieterh>	it doesn't crash
| [Monday 21 March 2011] [14:45:45] <drbobbeaty>	Ha... I saw that once, but then when I tried it again, it failed.
| [Monday 21 March 2011] [14:45:59] <pieterh>	ok, will try a few times... this is Ubuntu 10.10 fwiw
| [Monday 21 March 2011] [14:46:04] <drbobbeaty>	The correct behavior is to see the "sending..." in a loop. (until a Ctrl-C)
| [Monday 21 March 2011] [14:46:20] <pieterh>	yes, that's what I get
| [Monday 21 March 2011] [14:46:25] <pieterh>	doing a naive build 
| [Monday 21 March 2011] [14:46:46] <pieterh>	so... I'm suspecting you have a conflict between versions of OpenPGM on your systems
| [Monday 21 March 2011] [14:47:10] <pieterh>	or some such mix caused by the upgrade of the OpenPGM version in this package
| [Monday 21 March 2011] [14:48:09] <pieterh>	drbobbeaty: have you enabled core dumps ('ulimit unlimited')?
| [Monday 21 March 2011] [14:48:09] <drbobbeaty>	Yeah, I'm going to check on that now. Thanks for showing that it might be me.
| [Monday 21 March 2011] [14:48:26] <pieterh>	when you get an assertion failure, you need to get the backtrace
| [Monday 21 March 2011] [14:52:19] <drbobbeaty>	pieterh: got the backtrace.
| [Monday 21 March 2011] [14:52:45] <drbobbeaty>	I'll include it if I can't clean up the problem with a drop and load of all the ZMQ libraries on the box.
| [Monday 21 March 2011] [14:52:49] <pieterh>	cool... actually, you can log the issue in the development git, https://github.com/zeromq/zeromq2, it'll be the same
| [Monday 21 March 2011] [14:53:04] <pieterh>	please, do log the assertion and backtrace, it may be useful info
| [Monday 21 March 2011] [14:56:51] <sustrik>	yuck, the change should have gone to master first
| [Monday 21 March 2011] [15:01:59] <pieterh>	sustrik: no-one would have tested it there, and it's not clear that it's caused by a code change
| [Monday 21 March 2011] [15:03:17] <pieterh>	I'd rather see valuable code delivered fast, and fixed fast, than held back...
| [Monday 21 March 2011] [15:04:52] <cremes>	after using git-bisect, it tells me that this is the first bad commit
| [Monday 21 March 2011] [15:04:53] <cremes>	32ded2b457b2102dba4c15e00363f031d212b1c4
| [Monday 21 March 2011] [15:05:01] <cremes>	Duplicate identities now checked with zmq_connect
| [Monday 21 March 2011] [15:05:19] <cremes>	this commit touched quite a bit of code too
| [Monday 21 March 2011] [15:05:42] <cremes>	pieterh: want me to open an issue against master?
| [Monday 21 March 2011] [15:05:47] <pieterh>	cremes: yes, please
| [Monday 21 March 2011] [15:05:49] <cremes>	i don't have a small repro
| [Monday 21 March 2011] [15:06:00] <pieterh>	it'll be the same issue in master and in 2.1.3
| [Monday 21 March 2011] [15:06:10] <sustrik>	how come it is in stable?
| [Monday 21 March 2011] [15:06:16] <sustrik>	it's an untested patch
| [Monday 21 March 2011] [15:06:23] <pieterh>	sustrik: because we apply all patches to stable automatically
| [Monday 21 March 2011] [15:06:31] <pieterh>	there is no other process for defining what's "tested"
| [Monday 21 March 2011] [15:06:47] <pieterh>	no other way except real use, since we lack comprehensive test coverage
| [Monday 21 March 2011] [15:07:18] <sustrik>	mail from March 16th: "This patch solves issue 176. However, it was not yet tested thoroughly so it should be applied to stable later on, when it's clear it doesn't introduce new bugs."
| [Monday 21 March 2011] [15:07:32] <pieterh>	ah, then that is not in stable
| [Monday 21 March 2011] [15:07:42] <pieterh>	cremes is testing against development master
| [Monday 21 March 2011] [15:07:59] <sustrik>	ok, good
| [Monday 21 March 2011] [15:08:00] <pieterh>	if you tell me to hold back a patch I do so, of course
| [Monday 21 March 2011] [15:08:13] <pieterh>	np
| [Monday 21 March 2011] [15:08:14] <cremes>	https://github.com/zeromq/zeromq2/issues/181
| [Monday 21 March 2011] [15:08:23] <sustrik>	cremes: thx
| [Monday 21 March 2011] [15:08:33] <pieterh>	cremes, just for sanity, can you confirm the problem does _not_ happen on 2.1.3?
| [Monday 21 March 2011] [15:08:47] <cremes>	sure; i will download it and confirm
| [Monday 21 March 2011] [15:08:50] <pieterh>	much appreciated
| [Monday 21 March 2011] [15:10:14] <FlaPer87>	In case anyone is interested and willing to contribute: https://github.com/FlaPer87/asterisk-zmq-manager
| [Monday 21 March 2011] [15:12:08] <mikko>	pieterh: am now
| [Monday 21 March 2011] [15:12:44] <pieterh>	mikko: possibly a false alarm, we found what might be a problem with OpenPGM in 2.1.3
| [Monday 21 March 2011] [15:13:09] <pieterh>	drbobbeaty is seeing if it's caused by library confusion on his systems
| [Monday 21 March 2011] [15:13:39] <pieterh>	anyhow, pgm example that worked with 2.1.2 fails with 2.1.3... on my system it works fine
| [Monday 21 March 2011] [15:14:39] <mikko>	zfl tests failed as well it seems
| [Monday 21 March 2011] [15:14:44] <pieterh>	FlaPer87: line 412 is lacking 'zmq_msg_close (&message);'
| [Monday 21 March 2011] [15:14:56] <mikko>	hmm, is there a way to test OpenPGM functionally easily?
| [Monday 21 March 2011] [15:15:10] <pieterh>	mikko: fixed that, was some old 2.0 code that magically continued to work on 2.1...
| [Monday 21 March 2011] [15:15:18] <mikko>	i kinda rely on Steven on that as I have no means on testing with any sort of wates
| [Monday 21 March 2011] [15:15:22] <pieterh>	yeah
| [Monday 21 March 2011] [15:15:28] <mikko>	rates*
| [Monday 21 March 2011] [15:15:51] <pieterh>	we have some pgm-capable material at iMatix in Slovakia but it's not configured any longer
| [Monday 21 March 2011] [15:16:28] <FlaPer87>	pieterh opps, thanks
| [Monday 21 March 2011] [15:16:45] <mikko>	so the openpgm is a false alarm?
| [Monday 21 March 2011] [15:16:53] <pieterh>	FlaPer87: try running under valgrind, you'll catch memory leaks like that
| [Monday 21 March 2011] [15:17:10] <pieterh>	mikko: don't know yet, could be a build issue we've not hit before
| [Monday 21 March 2011] [15:17:22] <mikko>	what OS is drbobbeaty running?
| [Monday 21 March 2011] [15:17:26] <FlaPer87>	pieterh indeed, I will
| [Monday 21 March 2011] [15:17:29] <FlaPer87>	thanks :)
| [Monday 21 March 2011] [15:17:37] <pieterh>	Ubuntu and CentOS
| [Monday 21 March 2011] [15:17:42] <drbobbeaty>	mikko: Ubuntu 10.04.1 and CentOS 5
| [Monday 21 March 2011] [15:17:50] <mikko>	drbobbeaty: both fail?
| [Monday 21 March 2011] [15:18:00] <drbobbeaty>	Yup
| [Monday 21 March 2011] [15:19:22] <mikko>	drbobbeaty: it's supposed to link against libtool convenience archive
| [Monday 21 March 2011] [15:19:30] <mikko>	libpgm_noinst.la
| [Monday 21 March 2011] [15:19:40] <mikko>	which just contains a set of object files
| [Monday 21 March 2011] [15:20:12] <mikko>	libpgm.so should not be used when building with zeromq
| [Monday 21 March 2011] [15:20:57] <drbobbeaty>	OK, that's news. In the past (2.1.2), I used the '-lzmq' and it worked just fine with the ZMQ shared lib. Is this not supported in 2.1.3?
| [Monday 21 March 2011] [15:21:21] <mikko>	that should work fine
| [Monday 21 March 2011] [15:22:07] <pieterh>	fwiw I've done 'g++ xmit.cpp -o xmit -lzmq' and the test case runs fine on my Ubuntu box
| [Monday 21 March 2011] [15:22:58] <mikko>	the convenience libtool archive is just a bunch of object files
| [Monday 21 March 2011] [15:23:08] <mikko>	and zeromq uses that rather than the .c files directly
| [Monday 21 March 2011] [15:23:43] <mikko>	in theory (unless there is some libtool weirdness going on) there should be no change how things work
| [Monday 21 March 2011] [15:23:56] <Guest31294>	in theory, everything always works.
| [Monday 21 March 2011] [15:24:40] <cremes>	pieterh: no assertion when using the 2.1.3 release, so that's a good sign
| [Monday 21 March 2011] [15:25:02] <pieterh>	cremes: thanks for testing that, it means our ad-hoc change flow process is working ... :-)
| [Monday 21 March 2011] [15:25:02] <drbobbeaty>	mikko: I certainly hope that's the case, but up to know I've had a ton of counter-examples staring me in the face. I'll try to clean up things here and see if I can get it back to what works.
| [Monday 21 March 2011] [15:25:49] <mikko>	is there a test code i can run for this openpgm thing?
| [Monday 21 March 2011] [15:26:15] <pieterh>	mikko: https://gist.github.com/635015
| [Monday 21 March 2011] [15:28:21] <mikko>	Initialization complete.
| [Monday 21 March 2011] [15:28:21] <mikko>	sending...
| [Monday 21 March 2011] [15:28:21] <mikko>	sending...
| [Monday 21 March 2011] [15:28:21] <mikko>	sending...
| [Monday 21 March 2011] [15:28:25] <mikko>	and so o n
| [Monday 21 March 2011] [15:28:32] <mikko>	is that the expected result?
| [Monday 21 March 2011] [15:29:42] <drbobbeaty>	mikko: yes.
| [Monday 21 March 2011] [15:30:09] <drbobbeaty>	What I'm getting is the "Assertion failed: rc == 0 (connect_session.cpp:84)"
| [Monday 21 March 2011] [15:30:38] <mikko>	just in case i did rm /path/to/lib/libpgm*
| [Monday 21 March 2011] [15:30:43] <mikko>	and the example still runs
| [Monday 21 March 2011] [15:30:58] <mikko>	can you put nm /path/to/libzmq.so to gist.github.com?
| [Monday 21 March 2011] [15:31:03] <mikko>	and ldd /path/to/libzmq.so
| [Monday 21 March 2011] [15:32:26] <pieterh>	mikko: my guess is that drbobbeaty's two systems have old versions of OpenPGM which is causing a problem
| [Monday 21 March 2011] [15:33:33] <pieterh>	drbobbeaty: any chance you can test on a virgin box? at least one you didn't build on before?
| [Monday 21 March 2011] [15:33:39] <drbobbeaty>	pieterh: I didn't have any old version of OpenPGM as I never had it until ZMQ. In 2.1.2 it was contained within the libzmq.so - with 2.1.3, it appeared that it was external. Now I see it wasn't external at all, just optionally external.
| [Monday 21 March 2011] [15:34:04] <pieterh>	hmm... indeed
| [Monday 21 March 2011] [15:34:13] <drbobbeaty>	pieterh: I'm certainly working on all these ideas. As fast as I can.
| [Monday 21 March 2011] [15:34:25] <drbobbeaty>	I would like to believe it's as simple as a bad version.
| [Monday 21 March 2011] [15:34:59] <mikko>	i would be keen on getting openpgm into daily builds somehow
| [Monday 21 March 2011] [15:35:10] <mikko>	that way we can see if the actual functionality ever breaks
| [Monday 21 March 2011] [15:35:58] <pieterh>	hmm, that would be very nice
| [Monday 21 March 2011] [15:37:16] <mikko>	drbobbeaty: can you paste nm output of libzmq.so ?
| [Monday 21 March 2011] [15:42:47] <drbobbeaty>	Yes, just need a bit. I'm trying to change the RPM packaging to remove the OpenPGM libraries and headers to make it cleaner as to what's really being installed.
| [Monday 21 March 2011] [15:46:13] <drbobbeaty>	mikko: when I run: 'nm /usr/lib64/libzmq.so.1' I get:
| [Monday 21 March 2011] [15:46:24] <drbobbeaty>	nm: /usr/lib64/libzmq.so.1: no symbols
| [Monday 21 March 2011] [15:47:01] <drbobbeaty>	I have cleaned up my RPMs and they are now built as zeromq, zeromq-devel and zeromq-pgm - where the latter has just the OpenPGM libs and headers.
| [Monday 21 March 2011] [15:47:24] <drbobbeaty>	Even after removing everything on my box related to ZMQ, and putting these new RPMs on, I get the assertion.
| [Monday 21 March 2011] [15:47:47] <mikko>	let me install a clean ubuntu VM
| [Monday 21 March 2011] [15:47:49] <mikko>	sec
| [Monday 21 March 2011] [15:55:24] <mikko>	drbobbeaty: i removed my installation of libzmq completely, rebuilt
| [Monday 21 March 2011] [15:55:40] <mikko>	rebuilt the xmit.cpp and ran with LD_LIBRARY_PATH
| [Monday 21 March 2011] [15:55:45] <mikko>	it seems to work ok
| [Monday 21 March 2011] [15:56:12] <mikko>	i'll make an install-exec-hook patch later so that people dont get confused with libpgm.so
| [Monday 21 March 2011] [15:56:28] <mikko>	i dont think there is a way to force autotools not to install it
| [Monday 21 March 2011] [15:56:33] <mikko>	brb
| [Monday 21 March 2011] [15:56:37] <drbobbeaty>	mikko: Thanks for the checking... I'm getting convinced it's now I have it built, but it's not at all clear why the way I build it from 2.1.2 to 2.1.3 causes these issues. I've had many upgrades in this process.
| [Monday 21 March 2011] [15:58:05] <mikko>	drbobbeaty: i will install clean ubuntu vm later and test
| [Monday 21 March 2011] [15:58:14] <mikko>	it's worrying if this actually fails for anyone
| [Monday 21 March 2011] [15:59:16] <pieterh>	drbobbeaty: can you post an issue with the assert and backtrace?
| [Monday 21 March 2011] [15:59:30] <drbobbeaty>	mikko: I'm troubled by what I'm seeing, and I fear it's in the building. I'm going to see if I can build it without the RPM structure if it works. I'm guessing that's how you guys are all doing it. Just 'configure --with-pgm' - right?
| [Monday 21 March 2011] [15:59:39] <pieterh>	it may be possible to figure out what's happening from that
| [Monday 21 March 2011] [15:59:45] <pieterh>	drbobbeaty: yes
| [Monday 21 March 2011] [16:00:02] <drbobbeaty>	pieterh: OK, trying that now
| [Monday 21 March 2011] [16:00:16] <pieterh>	just as explained in the docs; configure; make; sudo make install; sudo ldconfig
| [Monday 21 March 2011] [16:00:24] <pieterh>	--with-pgm, then
| [Monday 21 March 2011] [16:00:38] <mikko>	drbobbeaty: yes
| [Monday 21 March 2011] [16:01:24] <mikko>	drbobbeaty: it's possible that the build breaks if for example RPM does something very weird
| [Monday 21 March 2011] [16:01:41] <mikko>	i think install-exec-hook should allow cleaning the libpgm stuff
| [Monday 21 March 2011] [16:01:46] <drbobbeaty>	mikko: it's the same spec file that ships with the package.
| [Monday 21 March 2011] [16:02:02] <mikko>	drbobbeaty: i know, i don't think it's very actively checked (it seems)
| [Monday 21 March 2011] [16:02:29] <mikko>	i had RPM builds running earlier but it was in a chroot which was really slow
| [Monday 21 March 2011] [16:02:43] <mikko>	if there are actually RPM users i could install centos VM for rpm packaging
| [Monday 21 March 2011] [16:02:48] <pieterh>	drbobbeaty: I see at least one problem with the spec file in 2.1.3
| [Monday 21 March 2011] [16:02:59] <mikko>	so that the packaging gets tested regurly as well
| [Monday 21 March 2011] [16:03:10] <pieterh>	it *might* be causing corrupted RPMs...
| [Monday 21 March 2011] [16:03:13] <mikko>	now i need to run for a min ->
| [Monday 21 March 2011] [16:03:50] 	 * pieterh hates hand-generated build files...
| [Monday 21 March 2011] [16:06:09] <pieterh>	drbobbeaty: if you want a fixed spec file, https://gist.github.com/880103 should be better
| [Monday 21 March 2011] [16:06:23] <pieterh>	I doubt this could cause the test program to crash but you never know
| [Monday 21 March 2011] [16:06:37] <flexo_>	hey. as i didnt find an answer to my question in either the guide, reference or faq (well, actually the lack of an answer might be an answer...) here it goes: does zmq support unreliable transport? (pure udp unicast/multicast)
| [Monday 21 March 2011] [16:06:46] <pieterh>	flexo_: nope
| [Monday 21 March 2011] [16:07:07] <flexo_>	any plans to add support for it?
| [Monday 21 March 2011] [16:07:15] <pieterh>	flexo_: feel free to send us a patch... 
| [Monday 21 March 2011] [16:07:24] <flexo_>	:)
| [Monday 21 March 2011] [16:07:37] <pieterh>	:-)
| [Monday 21 March 2011] [16:08:04] <drbobbeaty>	pieterh: what changed? Something small, or a lot of things?
| [Monday 21 March 2011] [16:08:17] <pieterh>	drbobbeaty: in the spec file, removal of the stand-alone device programs
| [Monday 21 March 2011] [16:08:28] <pieterh>	in the core library, OpenPGM integration and a lot of small patches
| [Monday 21 March 2011] [16:08:37] <pieterh>	it's in the NEWS and ChangeLog
| [Monday 21 March 2011] [16:08:48] <pieterh>	except the spec file, which I forgot to fix until just now
| [Monday 21 March 2011] [16:09:22] <flexo_>	seriously, would it fit into zmq's design.. purpose.. whatever? (looks to me like quite some work was done to _guarantee_ that the messages arrive...)
| [Monday 21 March 2011] [16:09:41] <pieterh>	flexo_: it could be useful for certain apps, yes
| [Monday 21 March 2011] [16:09:59] <flexo_>	for example in the app i have in mind :)
| [Monday 21 March 2011] [16:10:15] <pieterh>	yeah, when real time performance is more important than reliability
| [Monday 21 March 2011] [16:10:21] <flexo_>	yep
| [Monday 21 March 2011] [16:10:42] <pieterh>	seriously, if you need it, and if you can write C++, it should be doable
| [Monday 21 March 2011] [16:10:49] <flexo_>	but there are also certain kinds of messages which must arrive intact, hence having something like zmq for that kind of stuff would be nice
| [Monday 21 March 2011] [16:10:49] <pieterh>	transports are pluggable in 0MQ
| [Monday 21 March 2011] [16:11:02] <pieterh>	you can use different sockets for different QoS
| [Monday 21 March 2011] [16:11:22] <flexo_>	pieterh: assuming that i am a c++ wizard, how long would think it would take me to do it?
| [Monday 21 March 2011] [16:11:39] <flexo_>	(i know zmq for 10 minutes :)
| [Monday 21 March 2011] [16:11:40] <pieterh>	if you also know UDP, 1 day to get it working, 2-3 more days to get it working real nice
| [Monday 21 March 2011] [16:12:02] <flexo_>	alright
| [Monday 21 March 2011] [16:12:33] <pieterh>	you start by asking the question on the list, "I intend to add UDP support, please tell me what files to create / modify"
| [Monday 21 March 2011] [16:12:59] <flexo_>	im pretty confident i can figure it out by myself...
| [Monday 21 March 2011] [16:13:03] <pieterh>	we'll help package it all (docs, etc.) afterwards
| [Monday 21 March 2011] [16:13:14] <pieterh>	well, take a look at pgm integration as an example
| [Monday 21 March 2011] [16:13:20] 	 * flexo_ nods
| [Monday 21 March 2011] [16:13:37] <pieterh>	actually I should point out that it's technically impossible
| [Monday 21 March 2011] [16:13:46] <flexo_>	uhm?
| [Monday 21 March 2011] [16:13:49] <pieterh>	no-one has ever done this before, make 0MQ work with UDP
| [Monday 21 March 2011] [16:13:55] <pieterh>	therefore it's impossible
| [Monday 21 March 2011] [16:13:59] <pieterh>	and perhaps even illegal
| [Monday 21 March 2011] [16:14:01] <flexo_>	i see :(
| [Monday 21 March 2011] [16:14:01] <pieterh>	:-)
| [Monday 21 March 2011] [16:14:12] <flexo_>	just fyi: the app i have in mind would be a flight simulation visual
| [Monday 21 March 2011] [16:14:37] <pieterh>	flexo_: I'm kidding, you'd be the first person to try it
| [Monday 21 March 2011] [16:14:58] <flexo_>	i.e. several render boxes which receive telemetry via multicast
| [Monday 21 March 2011] [16:15:04] <pieterh>	yes, excellent use case
| [Monday 21 March 2011] [16:15:09] <flexo_>	(which must get the data really fast. ;)
| [Monday 21 March 2011] [16:15:18] <pieterh>	but doesn't mind if there's some breakage
| [Monday 21 March 2011] [16:15:45] <drbobbeaty>	mikko: why are you passing in '--prefix=/usr/local' to the OpenPGM configure script within the main configure script? Isn't that assuming that I'm putting it there? I'm not.
| [Monday 21 March 2011] [16:15:48] <flexo_>	(and otoh there is some stuff which must arrive, although it doesnt matter if the latency is somewhat higher, i.e. you change the scenario, daytime, etc.)
| [Monday 21 March 2011] [16:16:08] <flexo_>	add a new entity into the simulation, that kind of stuff
| [Monday 21 March 2011] [16:16:16] <pieterh>	yeah, it's like VoIP
| [Monday 21 March 2011] [16:16:23] <pieterh>	mix of reliable and unreliable patterns
| [Monday 21 March 2011] [16:16:42] <pieterh>	UDP would make a great addition
| [Monday 21 March 2011] [16:17:04] <pieterh>	but impossible and perhaps even illegal, so don't tell anyone...
| [Monday 21 March 2011] [16:17:04] <flexo_>	i was about to make up some protocol using a mix of tcp and multicast udp myself.. but i suppose it might be less work to just add unreliable transport support to zmq
| [Monday 21 March 2011] [16:17:09] <flexo_>	sure
| [Monday 21 March 2011] [16:17:39] <pieterh>	well, advantage of layering it under zmq is you get access to nice semantics on top
| [Monday 21 March 2011] [16:17:44] <flexo_>	its even intended for military usage so its morally nasty too
| [Monday 21 March 2011] [16:17:45] <pieterh>	plus APIs in lots of languages
| [Monday 21 March 2011] [16:17:51] <pieterh>	morally nasty, I love it
| [Monday 21 March 2011] [16:18:03] <pieterh>	I mean, terrible, terrible stuff...
| [Monday 21 March 2011] [16:18:16] <flexo_>	yes, and the zmq API looks really nice
| [Monday 21 March 2011] [16:18:25] <flexo_>	and well-looking APIs are rare :)
| [Monday 21 March 2011] [16:18:45] <pieterh>	it's going to get polished some more for v3.0
| [Monday 21 March 2011] [16:19:44] <flexo_>	a far-fetching thought here... is there some project providing some highlevel RPC mechanisms on-top of zmq? (think CORBA)
| [Monday 21 March 2011] [16:21:45] <pieterh>	flexo_: see the Guide, Chapter 4
| [Monday 21 March 2011] [16:21:57] <pieterh>	there are a whole set of RPC-like patterns built on top of 0MQ
| [Monday 21 March 2011] [16:22:11] <pieterh>	plus sample code and protocol specs
| [Monday 21 March 2011] [16:22:21] <pieterh>	not CORBA, though
| [Monday 21 March 2011] [16:22:24] <pieterh>	rather more 2011
| [Monday 21 March 2011] [16:23:07] <flexo_>	chapter 4? reliable request-reply?
| [Monday 21 March 2011] [16:23:15] <pieterh>	yes
| [Monday 21 March 2011] [16:23:25] <flexo_>	i realize that you can do all that stuff on-top of zmq
| [Monday 21 March 2011] [16:23:38] <flexo_>	but an ORB actually _does_ provide some pretty nice stuff
| [Monday 21 March 2011] [16:24:34] <pieterh>	specifically...?
| [Monday 21 March 2011] [16:24:50] <pieterh>	not that I'm disagreeing, just curious to what you mean
| [Monday 21 March 2011] [16:25:42] <flexo_>	well, the basic thing would be the IDL compiler - more advanced stuff would be object keys, activation / incarnation, etc.
| [Monday 21 March 2011] [16:26:03] <flexo_>	its pretty easy to do distributed garbage collected servants
| [Monday 21 March 2011] [16:26:41] <pieterh>	i prefer garbage collecting servants
| [Monday 21 March 2011] [16:26:49] <pieterh>	actually have no idea what those terms mean
| [Monday 21 March 2011] [16:26:53] <flexo_>	well
| [Monday 21 March 2011] [16:27:01] <flexo_>	take a virtual filesystem for example
| [Monday 21 March 2011] [16:27:16] <pieterh>	ok
| [Monday 21 March 2011] [16:27:17] <flexo_>	built using interfaces like IStream, IFile, etc.
| [Monday 21 March 2011] [16:27:25] <pieterh>	sure
| [Monday 21 March 2011] [16:27:38] <flexo_>	you can connect to any component in our application, no matter where it runs and ask it to open a file for you
| [Monday 21 March 2011] [16:27:49] <pieterh>	sure
| [Monday 21 March 2011] [16:28:04] <flexo_>	it provides transparent encryption / decryption, there is a key ring manager which asks the user for passwords, etc.
| [Monday 21 March 2011] [16:28:36] <pieterh>	this can all be layered on top of 0MQ
| [Monday 21 March 2011] [16:28:54] <flexo_>	the ORB provides me with the means to implement something like this in a nice object-oriented manner without writing lots of the low-level management code
| [Monday 21 March 2011] [16:29:38] <flexo_>	so i just say "give me a POA with this policy", i put the filename into the object key, my servant manager gets invoked when someone wants to invoke a ::read() on the the stream
| [Monday 21 March 2011] [16:29:40] <mikko>	drbobbeaty: autotools probably pass down prefix automatically
| [Monday 21 March 2011] [16:30:05] <pieterh>	POA = piece of action? sorry, the jargon is not familiar to me
| [Monday 21 March 2011] [16:30:50] <pieterh>	so why are no companies making money from ORBs any more?
| [Monday 21 March 2011] [16:31:06] <flexo_>	portable object adapter.. an internal CORBA component which. hm..  is responsible for servants. it knows their servant manager and how to invoke methods on these servants
| [Monday 21 March 2011] [16:31:10] <flexo_>	heh
| [Monday 21 March 2011] [16:31:15] <flexo_>	pieterh: dont get me wrong here
| [Monday 21 March 2011] [16:31:26] <flexo_>	CORBA heavily sucks in a lot of areas
| [Monday 21 March 2011] [16:31:36] <pieterh>	nah, I'm just curious, CORBA has always appeared to me as massively complex
| [Monday 21 March 2011] [16:31:48] <pieterh>	complex concepts, complex APIs, complex tools
| [Monday 21 March 2011] [16:31:52] <flexo_>	but most of its "complex" design actually makes sense
| [Monday 21 March 2011] [16:32:01] <pieterh>	sure, but that doesn't mean much in the end
| [Monday 21 March 2011] [16:32:22] <flexo_>	actually
| [Monday 21 March 2011] [16:32:30] <pieterh>	sadly, a 100% complete solution that is 100x more complex than an 80% complete solution will not win
| [Monday 21 March 2011] [16:32:40] <flexo_>	well
| [Monday 21 March 2011] [16:32:44] <flexo_>	you definitly have a point there
| [Monday 21 March 2011] [16:32:50] <pieterh>	this is what I mean by 2011
| [Monday 21 March 2011] [16:32:53] <flexo_>	my company made money with an ORB i wrote couple of months ago
| [Monday 21 March 2011] [16:33:09] <flexo_>	but this ORB only implemented the features needed, so maybe it was like 70% conformant :)
| [Monday 21 March 2011] [16:33:17] <pieterh>	if you have customers for ORBs, you may enjoy using 0MQ as the transport
| [Monday 21 March 2011] [16:33:18] <flexo_>	(targeting embedded hardware)
| [Monday 21 March 2011] [16:33:41] <flexo_>	yea, im thinking about that
| [Monday 21 March 2011] [16:33:53] <flexo_>	im also thinking about replacing CORBA because it annoys me heavily...
| [Monday 21 March 2011] [16:33:57] <pieterh>	that's how we see 0MQ, as a smart transport layer
| [Monday 21 March 2011] [16:34:10] <flexo_>	its very cumbersome to use, especially with the c++ mapping
| [Monday 21 March 2011] [16:34:11] <pieterh>	it's never going to include IDLs and key managers
| [Monday 21 March 2011] [16:34:55] <flexo_>	do you think IDL compilers are bad in principle?
| [Monday 21 March 2011] [16:35:12] <pieterh>	no, just that data representation isn't the job of the messaging fabric
| [Monday 21 March 2011] [16:35:19] <flexo_>	(i.e. the whole RPC idea which makes it look like a function/method call)
| [Monday 21 March 2011] [16:35:25] <pieterh>	for most purposes, JSON is fine
| [Monday 21 March 2011] [16:35:29] <flexo_>	i completely agree
| [Monday 21 March 2011] [16:35:34] <pieterh>	JSON is very 2011
| [Monday 21 March 2011] [16:35:40] <flexo_>	heh
| [Monday 21 March 2011] [16:35:46] <pieterh>	totally cheap and nasty serialization that works for 80% of developers
| [Monday 21 March 2011] [16:35:54] <flexo_>	too nasty for my purposes
| [Monday 21 March 2011] [16:36:08] <flexo_>	the parsing overhead just...
| [Monday 21 March 2011] [16:36:09] <flexo_>	no
| [Monday 21 March 2011] [16:36:13] <flexo_>	it feels wrong.
| [Monday 21 March 2011] [16:36:22] <pieterh>	so you ideally want a JSON approach for low-volume cases, and smart binary framing for high-volume cases
| [Monday 21 March 2011] [16:36:44] <pieterh>	I'm also a fan of divide and conquer
| [Monday 21 March 2011] [16:36:45] <flexo_>	i dont really see the advantage of JSON over CDR
| [Monday 21 March 2011] [16:36:50] <flexo_>	CDR is very nice IMHO
| [Monday 21 March 2011] [16:36:56] <pieterh>	JSON requires no upfront thinking
| [Monday 21 March 2011] [16:37:13] <flexo_>	neighter does CDR if you are used to think of a struct like a damn struct in memory :)
| [Monday 21 March 2011] [16:37:25] <pieterh>	so why is no-one using CDR?
| [Monday 21 March 2011] [16:37:29] <pieterh>	I mean, the market decides
| [Monday 21 March 2011] [16:37:41] <flexo_>	pieterh: because CDR is deep within CORBA
| [Monday 21 March 2011] [16:37:44] <flexo_>	and CORBA scares people
| [Monday 21 March 2011] [16:37:48] <pieterh>	nah, because it's a complex toolchain
| [Monday 21 March 2011] [16:37:59] <flexo_>	no, CDR is complety separete of everything
| [Monday 21 March 2011] [16:38:12] <flexo_>	its simply a binary data representation
| [Monday 21 March 2011] [16:38:28] <flexo_>	containing some stupid padding.. but thats far less worse than JSON
| [Monday 21 March 2011] [16:38:46] <pieterh>	I can't even find a web page describing CDR
| [Monday 21 March 2011] [16:38:52] <flexo_>	as i said
| [Monday 21 March 2011] [16:38:53] <pieterh>	it's embedded in some PDF somewhere
| [Monday 21 March 2011] [16:38:55] <pieterh>	fail
| [Monday 21 March 2011] [16:39:01] <flexo_>	thats the point.. its embedded deep inside the CORBA specs
| [Monday 21 March 2011] [16:39:06] <flexo_>	and thats the reason no-one uses it
| [Monday 21 March 2011] [16:39:09] <flexo_>	not because its bad
| [Monday 21 March 2011] [16:39:11] <pieterh>	yeah, but that's not "very nice"
| [Monday 21 March 2011] [16:39:17] <flexo_>	agreed
| [Monday 21 March 2011] [16:39:24] <bpl29>	Hello hello.  I am trying to link the zmq library to my project, but think I have built an 1386 library instead of x86_64.
| [Monday 21 March 2011] [16:39:34] <flexo_>	but "everyone uses it" doesnt make it a nice format.. take bittorrent for example
| [Monday 21 March 2011] [16:39:52] <bpl29>	*i386
| [Monday 21 March 2011] [16:39:56] <flexo_>	everyone uses bittorrent and bittorrent uses a highly stupid serialization format
| [Monday 21 March 2011] [16:40:17] <pieterh>	flexo_: well, I've made dozens, hundreds of technically brilliant tools over the years
| [Monday 21 March 2011] [16:40:18] <pieterh>	all '
| [Monday 21 March 2011] [16:40:21] <pieterh>	'perfect'
| [Monday 21 March 2011] [16:40:30] <pieterh>	all dead, because they were inaccessible
| [Monday 21 March 2011] [16:40:39] <flexo_>	its nice to parse with some regular expressions, but if you try to make a very-high throughput implementation you turn crazy because of that "human readable" ascii mess
| [Monday 21 March 2011] [16:40:59] <pieterh>	bpl29: have you copied the library from one box to another?
| [Monday 21 March 2011] [16:41:24] <flexo_>	pieterh: well. i dont disagree with you on any particular point...
| [Monday 21 March 2011] [16:41:41] <pieterh>	anyhow, wrt ORB capabilities over 0MQ, go for it, I'd say
| [Monday 21 March 2011] [16:41:54] <bpl29>	pieterh: No.  As well, I just rebuilt from source.  I am linking with -L/usr/local/lib -lzmq
| [Monday 21 March 2011] [16:42:02] <flexo_>	i just refuse to acknowledge that i spend so much time working with crap
| [Monday 21 March 2011] [16:42:14] <pieterh>	flexo_: Sturgeon's Law
| [Monday 21 March 2011] [16:42:34] <flexo_>	yea :)
| [Monday 21 March 2011] [16:42:39] <bpl29>	pieterh: The error simply states "warning: in /usr/local/lib/libzmq.dylib, file was built for unsupported file format which is not the architecture being linked (i386)"
| [Monday 21 March 2011] [16:42:40] <pieterh>	bpl29: so why do you think you built it wrong? it should work automatically, your compiler knows it's on a 64-bit box
| [Monday 21 March 2011] [16:42:44] <pieterh>	hmm
| [Monday 21 March 2011] [16:42:55] <pieterh>	what OS are you on?
| [Monday 21 March 2011] [16:43:02] <bpl29>	pieterh: OS X
| [Monday 21 March 2011] [16:43:28] <pieterh>	bpl29: sorry, I'm not expert in OS X builds, but maybe someone else here can help.. cremes?
| [Monday 21 March 2011] [16:43:45] <cremes>	pieterh: what's up?
| [Monday 21 March 2011] [16:44:06] <pieterh>	any idea why a build on OS X would say "file was built for unsupported file format which is not the architecture being linked (i386)"
| [Monday 21 March 2011] [16:45:14] <cremes>	yes...
| [Monday 21 March 2011] [16:45:42] <cremes>	the library is being built i386 but it's linking against a (probably) x86_64 binary
| [Monday 21 March 2011] [16:46:00] <cremes>	bpl29: run "file <name>" against the library and tell us the output
| [Monday 21 March 2011] [16:46:11] <bpl29>	okay one moment
| [Monday 21 March 2011] [16:46:19] <pieterh>	"If you're using Xcode, then by default Debug mode only builds your platforms native arch. So on a new mac, this would be an x86_64 binary."
| [Monday 21 March 2011] [16:46:19] <yrashk>	it looks like I've got a case of send() lockup with ZMQ_NOBLOCK :-\
| [Monday 21 March 2011] [16:46:22] <pieterh>	http://www.qtcentre.org/threads/30670-On-Mac-quot-...file-was-built-for-unsupported-file-format..-quot-SOLVED
| [Monday 21 March 2011] [16:46:33] <pieterh>	yrashk: cool!
| [Monday 21 March 2011] [16:46:41] <flexo_>	pieterh: anyway, just wanted to clarify that it seems to me that you are one of the more.. much more.. competent people i have met. although i disagree with your JSON notion. :)
| [Monday 21 March 2011] [16:47:00] <bpl29>	creme: /usr/local/lib/libzmq.dylib: Mach-O 64-bit dynamically linked shared library x86_64
| [Monday 21 March 2011] [16:47:05] <pieterh>	flexo_: I'm just old and cynical, not particularly competent, but the compliment feels nice, thanks
| [Monday 21 March 2011] [16:47:24] <cremes>	bpl29: and what program is trying to load that library? run "file" against it too
| [Monday 21 March 2011] [16:47:31] <yrashk>	pieterh: indeed :) 
| [Monday 21 March 2011] [16:47:39] <flexo_>	pieterh: well, i am highly cynical aswell.. maybe thats the reason for the sympathy :)
| [Monday 21 March 2011] [16:47:59] <flexo_>	(not old though. :D)
| [Monday 21 March 2011] [16:48:00] <yrashk>	I think I know why it happens
| [Monday 21 March 2011] [16:48:06] <pieterh>	flexo_: one thing I've learned is that intelligence is a product of many minds, not a few experts
| [Monday 21 March 2011] [16:48:19] <pieterh>	yrashk: 2.1.3 or development master?
| [Monday 21 March 2011] [16:48:22] <yrashk>	but no idea how to fix it
| [Monday 21 March 2011] [16:48:33] <pieterh>	what do you think happens?
| [Monday 21 March 2011] [16:48:37] <yrashk>	184bdb8e2bb6fe252af1bf4dd16d1c9ed8892f7a
| [Monday 21 March 2011] [16:49:04] <yrashk>	with this specific command that I am sending to another thread, that thread closes the socket that its being sent through
| [Monday 21 March 2011] [16:49:13] <bpl29>	creme: I am using ocamlmklib.
| [Monday 21 March 2011] [16:49:21] <yrashk>	so sometimes it gets through fine (it closes the socket *after* send() is over)
| [Monday 21 March 2011] [16:49:25] <bpl29>	owait, sry, misinterpreted
| [Monday 21 March 2011] [16:49:35] <jond>	flexo_ CDR is an ok encoding, though the character set stuff is dreadful. havent used corba for years though
| [Monday 21 March 2011] [16:49:37] <yrashk>	but sometimes it closes it while send() is still working
| [Monday 21 March 2011] [16:49:41] <yrashk>	and send() locks
| [Monday 21 March 2011] [16:49:48] <yrashk>	even though it's in NOBLOCK
| [Monday 21 March 2011] [16:49:58] <yrashk>	or should I just upgrade to dev master?
| [Monday 21 March 2011] [16:50:06] <flexo_>	jond: i agree that it could be improved in some areas... i am just saying i prefer it over json :)
| [Monday 21 March 2011] [16:50:27] <jond>	flexo have you seen BSON?
| [Monday 21 March 2011] [16:50:27] <pieterh>	yrashk: that commit is in development master
| [Monday 21 March 2011] [16:50:49] <yrashk>	but are you aware of this issue I described? or whether it is an issue at all?
| [Monday 21 March 2011] [16:51:06] <pieterh>	not aware of the issue
| [Monday 21 March 2011] [16:51:22] <pieterh>	you distracted me by posting a long UUID
| [Monday 21 March 2011] [16:52:04] <pieterh>	yrashk: if you can log an issue, that'd be good, it sounds like an edge case
| [Monday 21 March 2011] [16:52:08] <flexo_>	jond: looking at it right now... what immediatly caught my attention... no unsigned integers?
| [Monday 21 March 2011] [16:52:22] <yrashk>	I am still experimenting
| [Monday 21 March 2011] [16:52:24] <bpl29>	creme: I'm not quite sure where that binary is.  Do you think it could be i386?  I can search more.
| [Monday 21 March 2011] [16:52:32] <jond>	flexo: always thought it would be nice to rip the structs / types part of idl out to use as message format generator, leaving all the interface stuff behind, idl looks so much better than an xml or some schema
| [Monday 21 March 2011] [16:52:40] <bpl29>	creme: ocamlmklib, that is
| [Monday 21 March 2011] [16:52:55] <flexo_>	jond: oh yea.
| [Monday 21 March 2011] [16:53:16] <flexo_>	especially if the IDL happens to look almost exactly the same in the language you are developing in... :)
| [Monday 21 March 2011] [16:54:01] <flexo_>	(but even if it doesnt fit... i like our python testcases, using omniorbpy)
| [Monday 21 March 2011] [16:54:48] <flexo_>	there are some nice really nice things about CORBA, the mean problem is that its one huge "solution", not a set of solutions layered on-top of each other
| [Monday 21 March 2011] [16:54:52] <cremes>	bpl29: i'm not really sure what you are doing
| [Monday 21 March 2011] [16:54:53] <jond>	flexo : yep, but remember that python corba binding in omniorb almost makes corba bearable, so much easier than the c++
| [Monday 21 March 2011] [16:54:54] <flexo_>	*main
| [Monday 21 March 2011] [16:55:03] <flexo_>	jond: true...
| [Monday 21 March 2011] [16:55:09] <cremes>	bpl29: are you running the examples using the ocaml bindings?
| [Monday 21 March 2011] [16:55:20] <flexo_>	(the ICE mappings look like nice by the way)
| [Monday 21 March 2011] [16:55:44] <bpl29>	cremes: I am writing new OCaml bindings.
| [Monday 21 March 2011] [16:56:12] <cremes>	bpl29: ok; how do you execute your ocaml runtime?
| [Monday 21 March 2011] [16:56:36] <flexo_>	sigh. but project management will never let me deviate from the "industry standard" CORBA.... :)
| [Monday 21 March 2011] [16:57:16] <jond>	flexo: well henning was pretty damning in the end and thought he could better, even thought CDR was no better than XDR and the Zero Ice would be the way to go. Last time I looked Vinoski had discovered erlang
| [Monday 21 March 2011] [16:57:36] <bpl29>	cremes: the command in question is "ocamlmklib -o _wrapper_stubs wrapper.o -L/usr/local/lib -lzmq"
| [Monday 21 March 2011] [16:57:47] <flexo_>	hehe
| [Monday 21 March 2011] [16:58:04] <cremes>	bpl29: ok; type "which ocamlmklib" and it will tell you where that program is in your PATH
| [Monday 21 March 2011] [16:58:08] <cremes>	then run "file" on it
| [Monday 21 March 2011] [16:58:25] <bpl29>	cremes: thanks.  I knew it was something so simple.
| [Monday 21 March 2011] [16:58:59] <jond>	flexo: where I am we use XDR and our own message defn language generating all the marshall/unmarshall classes. No corba
| [Monday 21 March 2011] [16:59:45] <flexo_>	jond: yea.. could have been done for our project too... but as i said.. "industry standard" :)
| [Monday 21 March 2011] [17:00:02] <flexo_>	(the department i am working for still has some 200mhz SGI boxes where they actually develop for)
| [Monday 21 March 2011] [17:00:16] <bpl29>	cremes: "/usr/local/bin/ocamlmktop: POSIX shell script text executable"
| [Monday 21 March 2011] [17:00:29] <bpl29>	cremes: I think that's not what I'm looking for
| [Monday 21 March 2011] [17:00:33] <cremes>	bpl29: umm... you are going to have to do some digging
| [Monday 21 March 2011] [17:00:44] <bpl29>	cremes: the bash script just calls ocamlc, so I'll go file that
| [Monday 21 March 2011] [17:00:54] <cremes>	that script must be calling some binary that is trying to link a 32-bit binary against the 64-bit 0mq lib
| [Monday 21 March 2011] [17:01:17] <jond>	flexo: that's corporate life....
| [Monday 21 March 2011] [17:01:21] <flexo_>	yep
| [Monday 21 March 2011] [17:01:28] <flexo_>	OTOH this is the reason i know some MIPS assembly :)
| [Monday 21 March 2011] [17:01:36] <cremes>	bpl29: you might need to pass some flags when linking your ocaml code so that it makes everything 64-bit
| [Monday 21 March 2011] [17:01:41] <bpl29>	cremes:  Okay, thanks Cremes.  I think I can do something with that.  You've been a big help to me, and you also helped me yesterday, so thank you very much.
| [Monday 21 March 2011] [17:01:52] <yrashk>	still can reproduce on master
| [Monday 21 March 2011] [17:01:54] <flexo_>	(i maintain a very small library which runs on said boxes... had to debug it there once :)
| [Monday 21 March 2011] [17:01:55] <yrashk>	hmmm
| [Monday 21 March 2011] [17:02:03] <cremes>	bpl29: ok; at this point, you'll need to jump into the ocaml channel and ask them for some help :)
| [Monday 21 March 2011] [17:02:12] <yrashk>	but only on my slower laptop, not mac pro
| [Monday 21 March 2011] [17:02:13] <yrashk>	heh
| [Monday 21 March 2011] [17:02:21] <bpl29>	cremes: That's a good idea.  I'll do that then.  Thanks again.
| [Monday 21 March 2011] [17:02:30] <flexo_>	the dept. is getting into trouble because its getting harder and harder to get replacement parts for these boxes :)
| [Monday 21 March 2011] [17:02:57] <flexo_>	the funny thing about the harddisks is that if the power goes out and they cool down about 1/3 of them dies
| [Monday 21 March 2011] [17:03:05] <flexo_>	so the boxes must be online all the time
| [Monday 21 March 2011] [17:03:48] <flexo_>	and i really enjoy taking interns into that room
| [Monday 21 March 2011] [17:05:23] <flexo_>	they dont quite believe it otherwise :)
| [Monday 21 March 2011] [17:06:04] <flexo_>	the number of people who know how to administer them grows shorter every year too
| [Monday 21 March 2011] [17:06:06] <cremes>	i just added one of my wish-list items to the 0mq 3.0 roadmap wiki page
| [Monday 21 March 2011] [17:06:15] <flexo_>	sheesh. where am i working :)
| [Monday 21 March 2011] [17:07:52] <pieterh>	cremes: a page is like... 60 lines of 80 chars?
| [Monday 21 March 2011] [17:08:21] <cremes>	pieterh: a page is usually some multiple of 512 bytes, like 4k on linux
| [Monday 21 March 2011] [17:09:06] <pieterh>	so, almost 60 x 80 like I thought :-)
| [Monday 21 March 2011] [17:09:21] <cremes>	almost
| [Monday 21 March 2011] [17:09:23] <cremes>	heh
| [Monday 21 March 2011] [17:10:03] <pieterh>	nice change request, but you may have to submit the patch yourself
| [Monday 21 March 2011] [17:10:13] <cremes>	pieterh: understood
| [Monday 21 March 2011] [17:31:49] <Guthur>	hehe, I love how CORBA was defined by OMG
| [Monday 21 March 2011] [17:32:06] <Guthur>	I have this strange feeling it is very fitting]
| [Monday 21 March 2011] [17:50:57] <mikko>	drbobbeaty: i got a patch that disables shared library building on openpgm side
| [Monday 21 March 2011] [17:51:05] <mikko>	i will chat with steven about it and see what he things
| [Monday 21 March 2011] [17:51:08] <mikko>	thinks*
| [Monday 21 March 2011] [17:52:42] <drbobbeaty>	mikko: thanks, but I found the problem. You didn't see it because etho0 is OK for you, but on my Ubuntu box, they bonded the NICs so I could use eth0, I had to use bond0.
| [Monday 21 March 2011] [17:52:53] <drbobbeaty>	tricky admins.
| [Monday 21 March 2011] [17:53:00] <pieterh>	drbobbeaty: heh, and this worked with 2.1.2?
| [Monday 21 March 2011] [17:53:17] <drbobbeaty>	It worked when I HAD 2.1.2 - they did it in the last week.
| [Monday 21 March 2011] [17:54:18] <pieterh>	drbobbeaty, ah, just retesting 2.1.2 would have saved us all some time
| [Monday 21 March 2011] [17:55:40] <drbobbeaty>	Yeah, that was my fault, and I'm really sorry about that. It just didn't cross my mind because it was working.
| [Monday 21 March 2011] [17:56:25] <pieterh>	glad pgm is working, anyhow
| [Monday 21 March 2011] [18:00:54] <mikko>	drbobbeaty, pieterh good!
| [Monday 21 March 2011] [18:01:12] <mikko>	in any case i worked up solutions on zeromq and libpgm side to prevent the confusing libpgm.so install
| [Monday 21 March 2011] [18:01:18] <mikko>	pieterh: you are CCd on mail to steven
| [Monday 21 March 2011] [18:01:26] <mikko>	let's see what he thinks
| [Monday 21 March 2011] [18:01:31] <pieterh>	mikko: reading it now...
| [Monday 21 March 2011] [18:01:32] <drbobbeaty>	Thanks, mikko... I think it'll be a very good thing to have.
| [Monday 21 March 2011] [18:02:37] <pieterh>	mikko: I'd guess not installing the libpgm.so is best
| [Monday 21 March 2011] [18:04:08] <mikko>	yeah
| [Monday 21 March 2011] [18:04:16] <mikko>	would be the best if steven agrees with the patch
| [Monday 21 March 2011] [18:06:46] <mikko>	productive day
| [Monday 21 March 2011] [18:07:05] <pieterh>	yeah, I've almost finished the clone pattern
| [Monday 21 March 2011] [18:07:26] <pieterh>	*and* I took the kids to the park
| [Monday 21 March 2011] [18:07:28] <pieterh>	great day
| [Monday 21 March 2011] [18:11:10] <Guthur>	would exposing the connected IPs to a 0MQ be possible
| [Monday 21 March 2011] [18:11:20] <pieterh>	Guthur: doubt it
| [Monday 21 March 2011] [18:13:03] <Guthur>	shame, I was just thinking in terms of a FIX engine, one of the recommend authentication procedures was to match IPs to companies
| [Monday 21 March 2011] [18:13:28] <Guthur>	obviously spoofing is possible, which the whitepaper also mentions
| [Monday 21 March 2011] [18:13:29] <pieterh>	it's been discussed before
| [Monday 21 March 2011] [18:13:36] <Guthur>	oh
| [Monday 21 March 2011] [18:14:00] <pieterh>	one might have a pluggable authentication layer that sits above the transport
| [Monday 21 March 2011] [18:14:24] <pieterh>	this would be necessary for any public-facing 0MQ server IMO
| [Monday 21 March 2011] [18:14:47] <pieterh>	though people have argued stuff like banning bogus clients is a firewall issue
| [Monday 21 March 2011] [18:15:39] <Guthur>	security is always should a head pickle
| [Monday 21 March 2011] [18:16:06] <pieterh>	indeed... :-)
| [Monday 21 March 2011] [18:16:57] <Guthur>	Better I at least making a passing effort to understand the options now though
| [Monday 21 March 2011] [18:17:21] <pieterh>	if you take 0MQ today, rather than some possible future version
| [Monday 21 March 2011] [18:17:35] <pieterh>	then validation must be done explicitly using authentication
| [Monday 21 March 2011] [18:18:10] <pieterh>	alternatively you can make a TCP front-end that speaks FIX to the world, and 0MQ to the internal network
| [Monday 21 March 2011] [18:18:28] <Guthur>	that was a feature I would like
| [Monday 21 March 2011] [18:18:40] <Guthur>	I was going to build the 0MQ version first though
| [Monday 21 March 2011] [18:18:40] <pieterh>	it's a fairly simple app, if you have FIX libraries
| [Monday 21 March 2011] [18:18:55] <Guthur>	then add the bridge to TCP later
| [Monday 21 March 2011] [18:19:15] <Guthur>	I was going to take QuickFIXs message parsing for now
| [Monday 21 March 2011] [18:19:38] <Guthur>	and replace the engine with 0MQ
| [Monday 21 March 2011] [18:19:42] <pieterh>	if you asked me, I'd make the bridge first
| [Monday 21 March 2011] [18:20:03] <pieterh>	use QuickFIX parsing over TCP at one side, 0MQ at the other side
| [Monday 21 March 2011] [18:23:10] <Guthur>	probably the more sensible approach
| [Monday 21 March 2011] [18:23:45] <Guthur>	I was just really eager to build a big 0MQ system, hehe
| [Monday 21 March 2011] [18:28:14] <pieterh>	btw, an open source FIX-to-0MQ bridge would be very useful for Whaleshark
| [Monday 21 March 2011] [18:32:59] <Guthur>	the question in my mind is how much functionality to put in the bridge
| [Monday 21 March 2011] [18:33:27] <pieterh>	filtering and extraction
| [Monday 21 March 2011] [18:33:45] <pieterh>	so that you chop the message flow down as far as possible
| [Monday 21 March 2011] [18:33:49] <pieterh>	without doing too much CPU intensive work
| [Monday 21 March 2011] [18:34:01] <pieterh>	IMHO
| [Monday 21 March 2011] [18:34:29] <Guthur>	well the easy one is splitting the admin and app message
| [Monday 21 March 2011] [18:34:37] <Guthur>	messages*#
| [Monday 21 March 2011] [18:35:39] <Guthur>	would a bridge offer a place to add encryption/decryption
| [Monday 21 March 2011] [18:36:04] <pieterh>	probably not, unless you can offload that work
| [Monday 21 March 2011] [18:37:11] <Guthur>	so add the basic level possibly filter admin/app messages, and verify checksums
| [Monday 21 March 2011] [18:37:16] <Guthur>	add/at
| [Monday 21 March 2011] [18:37:37] <pieterh>	it depends really on the volumes you're dealing with and your hardware
| [Monday 21 March 2011] [18:37:50] <pieterh>	you want to get the machines working hard enough but not stressed
| [Monday 21 March 2011] [18:38:12] <pieterh>	otherwise you're going to get latency spikes when there's a lot of data
| [Monday 21 March 2011] [18:38:26] <Guthur>	FIX engines can be running on some pretty hefty hardware
| [Monday 21 March 2011] [18:38:54] <Guthur>	the bank I work for is now serving up all their FX pricing on a FIX engine
| [Monday 21 March 2011] [18:39:06] <pieterh>	you work for a bank...
| [Monday 21 March 2011] [18:39:13] <Guthur>	and now even clients are asking for it to be exposed them
| [Monday 21 March 2011] [18:39:16] <Guthur>	pieterh, yep
| [Monday 21 March 2011] [18:39:16] 	 * pieterh ends the free consulting
| [Monday 21 March 2011] [18:39:21] <Guthur>	lol
| [Monday 21 March 2011] [18:39:28] 	 * pieterh doubles his rates
| [Monday 21 March 2011] [18:39:47] <Guthur>	if only I was writing the cheques
| [Monday 21 March 2011] [18:40:15] <Guthur>	in truth though this is a personal project
| [Monday 21 March 2011] [18:40:37] <pieterh>	an open source FIX-to-0MQ bridge would be neat
| [Monday 21 March 2011] [18:41:25] <Guthur>	yep, it's my goal to have this stuff open source
| [Monday 21 March 2011] [18:41:38] <Guthur>	if I can build it properly
| [Monday 21 March 2011] [18:41:55] <mikko>	pieterh: sent you some stuff again
| [Monday 21 March 2011] [18:41:56] <pieterh>	make it open source first, then you'll be sure to build it properly
| [Monday 21 March 2011] [18:42:09] <mikko>	don't read it before morning, it's work related
| [Monday 21 March 2011] [18:42:23] <mikko>	build the community first, good products will follow
| [Monday 21 March 2011] [18:42:37] <mikko>	said some mozilla guy
| [Monday 21 March 2011] [18:42:41] <pieterh>	mikko: I'm supposed to *sleep* knowing there's an unread mail from you?
| [Monday 21 March 2011] [18:42:44] <pieterh>	unpossible
| [Monday 21 March 2011] [18:43:17] <mikko>	heh, im gonna sleep now. another long day ahead
| [Monday 21 March 2011] [18:43:18] <mikko>	night
| [Monday 21 March 2011] [19:00:36] <pieterh>	anyone here using 0MQ from C?
| [Monday 21 March 2011] [19:07:13] <Guthur>	when something does not work I now use it for a sanity check
| [Monday 21 March 2011] [19:07:19] <Guthur>	but i don't think that really counts
| [Monday 21 March 2011] [19:18:44] <pieterh>	I've sketched out a proposal for a high-level C binding
| [Monday 21 March 2011] [19:18:53] <pieterh>	http://www.zeromq.org/bindings:c
| [Monday 21 March 2011] [19:21:35] <pieterh>	well, g'nite everyone...
| [Monday 21 March 2011] [19:32:45] <Guthur>	g'night pieterh 
| [Monday 21 March 2011] [21:02:11] <reiddraper>	I'm seeing ~4K requests/second for a REQ-REP socket with two python processes. The are sending "hello". Is this performance expected?
| [Monday 21 March 2011] [21:04:28] <jhawk28>	not sure about python, but it usually depends
| [Monday 21 March 2011] [21:04:50] <jhawk28>	on the network, the computing platform, and the language bindings
| [Monday 21 March 2011] [21:05:22] <reiddraper>	jhawk28: localhost, ubuntu
| [Monday 21 March 2011] [21:06:01] <reiddraper>	jhawk28: suppose I was expecting it to be an order of magnitude faster
| [Monday 21 March 2011] [21:06:27] <jhawk28>	are you just req: Hello and Rep: hello?
| [Monday 21 March 2011] [21:06:40] <reiddraper>	yes
| [Monday 21 March 2011] [21:07:25] <reiddraper>	zeromq 2.1.3
| [Monday 21 March 2011] [21:07:41] <jhawk28>	let me do a quick one in Java
| [Monday 21 March 2011] [21:07:52] <reiddraper>	same performance with ipc and tcp
| [Monday 21 March 2011] [21:08:13] <reiddraper>	jhawk28: thanks
| [Monday 21 March 2011] [21:21:17] <andrewvc>	cremes: around?
| [Monday 21 March 2011] [21:21:29] <andrewvc>	cremes: Wondering if you'd mind me releasing 0.7.3 w/ zdevice support
| [Monday 21 March 2011] [21:23:52] <jhawk28>	reiddraper: I'm getting about 10k/s
| [Monday 21 March 2011] [21:25:30] <reiddraper>	jhawk28: ok, seems reasonable that python would be 4K then
| [Monday 21 March 2011] [21:26:51] <jhawk28>	thats Java with 2.1.3 on a 2.4 Core i5 (OSX)
| [Monday 21 March 2011] [21:30:01] <jhawk28>	reiddraper: push/pull gets 2mil/s
| [Monday 21 March 2011] [21:30:37] <reiddraper>	jhawk28: pretty big difference
| [Monday 21 March 2011] [21:31:40] <reiddraper>	only really surprised because I've seen http servers do more req/s than what I'm seeing
| [Monday 21 March 2011] [21:33:10] <jhawk28>	req/rep is synchronous
| [Monday 21 March 2011] [21:33:20] <jhawk28>	single threaded both sides
| [Monday 21 March 2011] [21:34:44] <reiddraper>	yeah, figured it would have to be, that being said, so is something like Redis, which gets 10's of thousands of operations / second, over tcp
| [Monday 21 March 2011] [21:34:53] <reiddraper>	req-rep
| [Monday 21 March 2011] [21:47:17] <jhawk28>	reiddraper: increase the number of clients
| [Monday 21 March 2011] [21:48:30] <jhawk28>	when I bump up the number of clients, I am getting 25k/sec
| [Monday 21 March 2011] [21:49:56] <reiddraper>	jhawk28: Cool, and to be honest, for what I have in mind, 4k/sec is plenty fast
| [Monday 21 March 2011] [21:51:15] <jhawk28>	I could probably scale it more if I used XREP
| [Monday 21 March 2011] [21:52:16] <jhawk28>	and actually split it between machines
| [Monday 21 March 2011] [21:55:20] <reiddraper>	jhawk28: can you explain the difference betwen xreq/rep and req/rep?
| [Monday 21 March 2011] [21:56:02] <jhawk28>	req/rep is syncronous, xreq/xrep uses identities
| [Monday 21 March 2011] [21:56:48] <reiddraper>	ah, OK
| [Monday 21 March 2011] [21:56:56] <jhawk28>	the identities are then used by zmq to route the response back to the correct socket
| [Monday 21 March 2011] [21:58:07] <jhawk28>	thats as much as I know
| [Monday 21 March 2011] [21:58:16] <jhawk28>	I haven't used them much
| [Monday 21 March 2011] [21:58:27] <jhawk28>	its on my todo list...
| [Monday 21 March 2011] [22:00:08] <reiddraper>	jhawk28: ok, so you don't get slowed down by slowest client that is load-balanced
| [Monday 21 March 2011] [22:01:15] <jhawk28>	or worker
| [Monday 21 March 2011] [22:01:40] <jhawk28>	thats what xreq is for (for dealing out work)
| [Monday 21 March 2011] [22:04:14] <reiddraper>	ok, so for a queue broker, the clients sending xreq (give me a task), and the broker sending xrep (do this) makes sense?
| [Monday 21 March 2011] [22:07:41] <jhawk28>	Chapter 3 does a good job explaining it: http://zguide.zeromq.org/page:all#toc45
| [Monday 21 March 2011] [22:08:15] <reiddraper>	jhawk28: awesome. thanks
| [Monday 21 March 2011] [22:16:11] <believa>	newb question - are the following statements true? You cannot "bind" multiple sockets to the same endpoint. You "can" connect multiple sockets to the same endpoint. A socket can "bind" and/or "connect" to multiple endpoints.
| [Monday 21 March 2011] [22:18:58] <jhawk28>	Yes, yes
| [Monday 21 March 2011] [22:19:16] <jhawk28>	yes
| [Monday 21 March 2011] [22:19:21] <believa>	jhawk28: thanks for the confirmation
| [Monday 21 March 2011] [22:20:46] <neopallium>	believa: you can bind one socket to multiple different endpoints, but you can't bind multiple sockets to the same endpoint.
| [Monday 21 March 2011] [22:21:13] <believa>	neopallium: gotcha
| [Monday 21 March 2011] [22:21:15] <neopallium>	just like you can't bind multiple tcp sockets to the same port on the same computer.
| [Monday 21 March 2011] [22:22:29] <believa>	neopallium: that should result in EADDRINUSE right?
| [Monday 21 March 2011] [22:30:20] <neopallium>	believa: yes
| [Monday 21 March 2011] [22:30:35] <believa>	neopallium: thanks
| [Tuesday 22 March 2011] [03:47:12] <sustrik>	reiddrapper: req/rep is lock-step; the performance is determined by the latency of your network
| [Tuesday 22 March 2011] [03:47:32] <sustrik>	the actual messaging fabric is almost irrelevant
| [Tuesday 22 March 2011] [04:09:14] <pieterh>	good morning
| [Tuesday 22 March 2011] [04:10:23] <pieterh>	sustrik: we had this question twice in a day, perhaps worth some explanation in the guide
| [Tuesday 22 March 2011] [04:12:06] <sustrik>	yes, that would be good
| [Tuesday 22 March 2011] [04:12:11] <sustrik>	alternatively
| [Tuesday 22 March 2011] [04:12:17] <sustrik>	there's a page about rinning perf tests
| [Tuesday 22 March 2011] [04:12:21] <sustrik>	let me see
| [Tuesday 22 March 2011] [04:12:40] <pieterh>	perhaps an explicit page we can refer to upfront, yes
| [Tuesday 22 March 2011] [04:12:54] <pieterh>	e.g. expected throughput and latency of each pattern
| [Tuesday 22 March 2011] [04:13:05] <pieterh>	very rough, but to set expectations properly
| [Tuesday 22 March 2011] [04:14:23] <sustrik>	http://www.zeromq.org/results:perf-howto
| [Tuesday 22 March 2011] [04:20:18] <pieterh>	sustrik: it's not very useful to beginners IMO
| [Tuesday 22 March 2011] [04:21:25] <pieterh>	I'll think about how to explain this, it's got to be in terms of limits, capacity, speed of different patterns & transports
| [Tuesday 22 March 2011] [04:21:35] <pieterh>	like a spec sheet
| [Tuesday 22 March 2011] [04:21:40] <sustrik>	let me send you a diagram
| [Tuesday 22 March 2011] [04:22:17] <pieterh>	sure
| [Tuesday 22 March 2011] [04:39:19] <pieterh>	sustrik: random idea for cleaner semantics on multipart messages
| [Tuesday 22 March 2011] [04:39:36] <pieterh>	make the MORE bit a property of a frame (zmq_msg_t) rather than a socket
| [Tuesday 22 March 2011] [04:40:03] <sustrik>	that's how it works on wire level
| [Tuesday 22 March 2011] [04:40:11] <pieterh>	it would also make more sense at the API level IMO
| [Tuesday 22 March 2011] [04:40:12] <sustrik>	with API it's a pain to use
| [Tuesday 22 March 2011] [04:40:26] <sustrik>	i though of combining the two approaches
| [Tuesday 22 March 2011] [04:40:30] <pieterh>	it means I can prepare a frame and write it with a generic method
| [Tuesday 22 March 2011] [04:40:41] <sustrik>	yes
| [Tuesday 22 March 2011] [04:40:58] <pieterh>	if you consider zmq_msg_t as a 'smart blob' (and I like this), then it should have a more property
| [Tuesday 22 March 2011] [04:41:10] <sustrik>	the problem is this:
| [Tuesday 22 March 2011] [04:41:27] <sustrik>	zmq_send (msg, MSG_SNDMORE);
| [Tuesday 22 March 2011] [04:41:27] <sustrik>	vs.
| [Tuesday 22 March 2011] [04:41:47] <sustrik>	zmq_msg_setflag (msg, ZMQ_MORE, 1);
| [Tuesday 22 March 2011] [04:41:51] <pieterh>	you can always do both
| [Tuesday 22 March 2011] [04:41:53] <sustrik>	zmq_send (msg, 0);
| [Tuesday 22 March 2011] [04:41:58] <sustrik>	yes
| [Tuesday 22 March 2011] [04:42:19] <pieterh>	I see the zmq_send (..., MSG_SENDMORE) as either an optimization or an override
| [Tuesday 22 March 2011] [04:42:26] <sustrik>	yes
| [Tuesday 22 March 2011] [04:42:32] <sustrik>	convenience feature
| [Tuesday 22 March 2011] [04:42:45] <pieterh>	e.g. if I have an identity frame, and want to send it, it's always going to be MORE
| [Tuesday 22 March 2011] [04:43:04] <pieterh>	read / write then become symmetric
| [Tuesday 22 March 2011] [04:43:04] <sustrik>	yes, it would simplify devices
| [Tuesday 22 March 2011] [04:43:07] <pieterh>	yes
| [Tuesday 22 March 2011] [04:43:20] <pieterh>	indeed, any generic handling of multipart messages becomes cleaner
| [Tuesday 22 March 2011] [04:43:30] <sustrik>	ack
| [Tuesday 22 March 2011] [04:43:38] <pieterh>	another question, is it necessary to destroy a message after sending it?
| [Tuesday 22 March 2011] [04:43:50] <pieterh>	sending the same frame N times is rather clumsy today
| [Tuesday 22 March 2011] [04:43:53] <sustrik>	it you don't nothing happens
| [Tuesday 22 March 2011] [04:44:13] <sustrik>	but it's safer to do so for forward compatibility
| [Tuesday 22 March 2011] [04:44:23] <pieterh>	ah, you mean _close is optional
| [Tuesday 22 March 2011] [04:44:29] <sustrik>	nope
| [Tuesday 22 March 2011] [04:44:46] <sustrik>	technically, closing empty message translates to noop
| [Tuesday 22 March 2011] [04:45:03] <sustrik>	however, that is not guaranteed to hold in future versions of 0mq
| [Tuesday 22 March 2011] [04:45:31] <sustrik>	so, preferable, close the messages so that 0mq can hook into message destruction process
| [Tuesday 22 March 2011] [04:45:41] <sustrik>	preferably*
| [Tuesday 22 March 2011] [04:46:01] <pieterh>	To send a message twice I need to:
| [Tuesday 22 March 2011] [04:46:02] <pieterh>	zmq_msg_t copy;
| [Tuesday 22 March 2011] [04:46:03] <pieterh>	zmq_msg_init (&copy);
| [Tuesday 22 March 2011] [04:46:03] <pieterh>	zmq_msg_copy (&copy, &original);
| [Tuesday 22 March 2011] [04:46:03] <pieterh>	zmq_send (socket, &copy, 0);
| [Tuesday 22 March 2011] [04:46:03] <pieterh>	zmq_msg_close (&copy);
| [Tuesday 22 March 2011] [04:46:13] <sustrik>	yes
| [Tuesday 22 March 2011] [04:46:39] <sustrik>	well, you should close the original as well
| [Tuesday 22 March 2011] [04:46:39] <pieterh>	so my question is whether it's necessary for 0MQ to destroy the message after sending
| [Tuesday 22 March 2011] [04:46:43] <sustrik>	unless you are going to use it
| [Tuesday 22 March 2011] [04:46:49] <sustrik>	not now
| [Tuesday 22 March 2011] [04:46:55] <sustrik>	may be necessary in future
| [Tuesday 22 March 2011] [04:47:04] <pieterh>	could I have a flag saying, "don't nullify after sending"?
| [Tuesday 22 March 2011] [04:47:13] <pieterh>	MSG_REUSE
| [Tuesday 22 March 2011] [04:47:29] <sustrik>	ah, a convenience feature
| [Tuesday 22 March 2011] [04:47:41] <sustrik>	you can have that, but you should be aware it's slow
| [Tuesday 22 March 2011] [04:47:53] <pieterh>	slower than creating copies each time?
| [Tuesday 22 March 2011] [04:47:54] <pieterh>	how so?
| [Tuesday 22 March 2011] [04:47:59] <sustrik>	there's refernce counting going on there
| [Tuesday 22 March 2011] [04:48:05] <sustrik>	which is implemented using atomic ops
| [Tuesday 22 March 2011] [04:48:19] <sustrik>	which in turn means the memory bus is locked each time you do so
| [Tuesday 22 March 2011] [04:48:37] <pieterh>	yes, but I'm copying the message each time now
| [Tuesday 22 March 2011] [04:48:43] <pieterh>	that also locks the memory bus each time
| [Tuesday 22 March 2011] [04:48:48] <sustrik>	yes, we can add the convenience flag
| [Tuesday 22 March 2011] [04:49:07] <sustrik>	nope, copying doesn't lock the bus
| [Tuesday 22 March 2011] [04:49:24] <sustrik>	well, unless there's contention between CPU cores on that particular cacheline
| [Tuesday 22 March 2011] [04:49:33] <pieterh>	well, copying also uses atomic ops for reference counting
| [Tuesday 22 March 2011] [04:49:51] <sustrik>	ah, you mean zmq_msg_copy
| [Tuesday 22 March 2011] [04:49:53] <sustrik>	yes
| [Tuesday 22 March 2011] [04:49:59] <sustrik>	so yes, we can add the flag
| [Tuesday 22 March 2011] [04:50:07] <pieterh>	yes, there's no other way to send the same frame twice
| [Tuesday 22 March 2011] [04:50:17] <sustrik>	what i'm saying is that it should not be the default
| [Tuesday 22 March 2011] [04:50:17] <pieterh>	aight...
| [Tuesday 22 March 2011] [04:50:22] <pieterh>	ah, certainly
| [Tuesday 22 March 2011] [04:51:00] 	 * pieterh peeks at the code...
| [Tuesday 22 March 2011] [04:52:18] <pieterh>	well, I'll add this to the 3.0 page but I have no idea how to make it :-)
| [Tuesday 22 March 2011] [04:52:25] <pieterh>	it would be useful, though IMO
| [Tuesday 22 March 2011] [04:53:54] <sustrik>	it's backward compatible, so no need to solve it immediately
| [Tuesday 22 March 2011] [04:54:12] <sustrik>	the backward incompatible changes are what's in focus now
| [Tuesday 22 March 2011] [04:54:28] <sustrik>	they have to be done in a single go, if possible
| [Tuesday 22 March 2011] [04:54:33] <sustrik>	to minimise the pain
| [Tuesday 22 March 2011] [04:54:53] <sustrik>	the remaining functionality can be added gradually afterwards
| [Tuesday 22 March 2011] [04:58:29] <pieterh>	I'm not sure the changes will be as painful as you imagine
| [Tuesday 22 March 2011] [04:58:55] <sustrik>	dunno, but minimising the pain is a good thing in itself
| [Tuesday 22 March 2011] [04:59:10] <pieterh>	yes, at least doing it all in one go
| [Tuesday 22 March 2011] [06:59:40] <pieterh>	sustrik: I've built the basic API for the high-level C binding, at https://github.com/zeromq/zapi
| [Tuesday 22 March 2011] [06:59:51] <pieterh>	will fill in the pieces over the next few days
| [Tuesday 22 March 2011] [07:01:10] <drbobbeaty>	pieterh: if the C level binding is separate in 3.x, is the C++ binding as well? Are they different bindings? What comes "standard" with the ZMQ libraries? Any 'default' API?
| [Tuesday 22 March 2011] [07:01:25] <pieterh>	drbobbeaty: yes, we plan to split off the C++ binding as well
| [Tuesday 22 March 2011] [07:01:33] <pieterh>	the default API is the Core C API
| [Tuesday 22 March 2011] [07:02:09] <pieterh>	the new C binding will work over 2.x as well as 3.x
| [Tuesday 22 March 2011] [07:02:42] <drbobbeaty>	Ah! I see the advantage to having the separate binding now - bridge the versions. Nice plan.
| [Tuesday 22 March 2011] [07:03:03] <pieterh>	also it makes it much easier to add useful functionality without breaking other language bindings
| [Tuesday 22 March 2011] [07:03:18] <pieterh>	so we can e.g. write a C reactor without affecting the core
| [Tuesday 22 March 2011] [07:18:47] <Guthur>	pieterh: I think I'll draw some inspiration from the new C binding
| [Tuesday 22 March 2011] [07:19:09] <pieterh>	Guthur: could be fun, I've tried to use a class-oriented approach for most of it
| [Tuesday 22 March 2011] [07:20:26] <pieterh>	I'll be converting the Guide examples to zapi when it's ready
| [Tuesday 22 March 2011] [07:20:40] <pieterh>	so if the C++ binding is anything like that, it'll be a lot easier for those examples too
| [Tuesday 22 March 2011] [07:21:14] <pieterh>	Guthur: when you need a repository created in the zeromq organization, give me a shout
| [Tuesday 22 March 2011] [07:21:16] <Guthur>	C# you mean, hehe
| [Tuesday 22 March 2011] [07:21:21] <pieterh>	oh, sorry
| [Tuesday 22 March 2011] [07:21:23] <pieterh>	C#
| [Tuesday 22 March 2011] [07:21:29] 	 * pieterh was getting all confused
| [Tuesday 22 March 2011] [07:21:48] 	 * pieterh searches for the 'edit' button... 
| [Tuesday 22 March 2011] [07:24:16] <Guthur>	When 0MQ 3.0 API is finalized I'm going to develop a new branch for clrzmq2
| [Tuesday 22 March 2011] [07:24:46] <Guthur>	I have a far better idea now what works and what doesn't
| [Tuesday 22 March 2011] [07:25:02] <pieterh>	please don't call it clrzmq3 :-)
| [Tuesday 22 March 2011] [07:25:23] <Guthur>	yeah I'll resist that temptation
| [Tuesday 22 March 2011] [07:25:47] <Guthur>	It will just be a branch of clrzmq2
| [Tuesday 22 March 2011] [07:26:00] <pieterh>	though ... embracing the chaos... it could be useful
| [Tuesday 22 March 2011] [07:26:07] <pieterh>	if binding versions track the development version
| [Tuesday 22 March 2011] [07:26:19] <pieterh>	so people know that clrzmq3 supports 3.x and 2.x
| [Tuesday 22 March 2011] [07:26:26] <Guthur>	the assembly will be version 3.x
| [Tuesday 22 March 2011] [07:26:49] <Guthur>	the assembly is currently 2.1.x
| [Tuesday 22 March 2011] [07:26:58] <pieterh>	problem is that the version number is in the github repo name
| [Tuesday 22 March 2011] [07:27:05] <Guthur>	true
| [Tuesday 22 March 2011] [07:27:11] <pieterh>	we have the same problem with zeromq2
| [Tuesday 22 March 2011] [07:28:00] <Guthur>	not an easy decision to be honest
| [Tuesday 22 March 2011] [07:28:15] <Guthur>	I really don't want to confuse potential/current users
| [Tuesday 22 March 2011] [07:30:50] <Guthur>	pieterh: can you briefly explain you reactor pattern thing in the C binding
| [Tuesday 22 March 2011] [07:31:16] <pieterh>	Guthur: to be honest I've never used a reactor pattern so this is kind of a guess
| [Tuesday 22 March 2011] [07:31:25] <pieterh>	the idea is to register the events you want to handle
| [Tuesday 22 March 2011] [07:31:34] <pieterh>	and then a tickless poll loop can handle it
| [Tuesday 22 March 2011] [07:31:38] <mikko>	howdy boys
| [Tuesday 22 March 2011] [07:31:39] <mikko>	and girls
| [Tuesday 22 March 2011] [07:31:42] <pieterh>	hey mikko!
| [Tuesday 22 March 2011] [07:31:47] <Guthur>	hi mikko 
| [Tuesday 22 March 2011] [07:31:55] <Guthur>	pieterh: what is the alarm part
| [Tuesday 22 March 2011] [07:32:17] <Guthur>	and clock
| [Tuesday 22 March 2011] [07:32:21] <pieterh>	Guthur: if you look at a realistic app like the Majordomo broker
| [Tuesday 22 March 2011] [07:32:27] <pieterh>	then it mixes socket events with timer events
| [Tuesday 22 March 2011] [07:32:36] <pieterh>	e.g. "send heartbeats every 3 seconds"
| [Tuesday 22 March 2011] [07:32:46] <pieterh>	"kill server if no response in 2500 msecs"
| [Tuesday 22 March 2011] [07:33:12] <pieterh>	I made a proper tickless poll loop in the flcliapi (freelance client)
| [Tuesday 22 March 2011] [07:33:21] <pieterh>	it calculates the next timer event and polls that long
| [Tuesday 22 March 2011] [07:33:23] <Guthur>	ok so that would be too all registered sockets
| [Tuesday 22 March 2011] [07:33:28] <pieterh>	rather than polling every second or whatever
| [Tuesday 22 March 2011] [07:33:47] <Guthur>	I haven't got as far as freelance yet
| [Tuesday 22 March 2011] [07:34:17] <pieterh>	take a brief look at the flcliapi poll loop, if you want to understand zloop
| [Tuesday 22 March 2011] [07:34:19] <Guthur>	I've just got to majordomo
| [Tuesday 22 March 2011] [07:34:22] <pieterh>	:-)
| [Tuesday 22 March 2011] [07:35:18] <pieterh>	the reactor won't work for all cases, sometimes we poll selectively
| [Tuesday 22 March 2011] [07:35:27] <pieterh>	but it should help the more complex designs
| [Tuesday 22 March 2011] [07:40:40] <Guthur>	I think I've sort of included a limited reactor pattern in clrzmq2
| [Tuesday 22 March 2011] [07:42:19] <Guthur>	but unfortunately the incremental nature of the development of the polling mechanism has left the API in a state that is less clear that I would like
| [Tuesday 22 March 2011] [07:42:42] <Guthur>	it's one of the main area's I would like to refactor
| [Tuesday 22 March 2011] [07:44:10] <Guthur>	I'd also like to simplify the send/recv
| [Tuesday 22 March 2011] [07:45:29] <pieterh>	in C# strings are just blobs, right?
| [Tuesday 22 March 2011] [07:45:55] <Guthur>	they are objects
| [Tuesday 22 March 2011] [07:46:36] <pieterh>	right
| [Tuesday 22 March 2011] [07:47:35] <Guthur>	i'd rather deal with them in an msg object as oppose to at the socket level send/recv
| [Tuesday 22 March 2011] [07:48:00] <pieterh>	the breakdown I'm using in zapi is frame vs. msg
| [Tuesday 22 March 2011] [07:48:08] <pieterh>	where frame is one part, msg is a multipart object
| [Tuesday 22 March 2011] [07:48:23] <Guthur>	I meant to ask about the framw
| [Tuesday 22 March 2011] [07:48:26] <Guthur>	frame*
| [Tuesday 22 March 2011] [07:48:44] <pieterh>	0MQ uses 'msg' to mean 'part', which is confusing
| [Tuesday 22 March 2011] [07:49:11] <Guthur>	yeah, was taking more about the multipart you describe
| [Tuesday 22 March 2011] [07:49:21] <pieterh>	perhaps I should use 'part' instead of 'frame'... anyhow
| [Tuesday 22 March 2011] [07:49:39] <pieterh>	the frame class lets you do things like 'receive the identity' and 'send the identity' with ROUTER sockets
| [Tuesday 22 March 2011] [07:50:14] <pieterh>	whereas the msg class is more like 'recv a list of frames' and 'send a list of frames'
| [Tuesday 22 March 2011] [07:51:46] <Guthur>	I was also then going to take a lazy marshalling approach, only marshalling the zeromq msg (part) to a c# data type when required, should improved performance in situations where you don't need to know about the whole message 
| [Tuesday 22 March 2011] [07:52:24] <pieterh>	that makes sense, it's what I'm doing in other places
| [Tuesday 22 March 2011] [07:52:28] <Guthur>	it's sort of all in my head at the moment though, I really should try to define the API like you have done
| [Tuesday 22 March 2011] [07:52:40] <pieterh>	yeah, start with the API, it makes everything clearer
| [Tuesday 22 March 2011] [09:03:12] <drbobbeaty>	I have a core dump with ZeroMQ 2.1.3 this morning... I have detailed it in this gist: https://gist.github.com/881176 . It includes the stack trace and the code from OpenPGM that's the last step in the trace.
| [Tuesday 22 March 2011] [09:03:49] <drbobbeaty>	It seems impossible to be true -- if the assert is causing the exception, then the value of minor_bucket has to be NULL... but it's not, as shown in the stack trace.
| [Tuesday 22 March 2011] [09:03:58] <drbobbeaty>	Is this a problem for Steve?
| [Tuesday 22 March 2011] [09:04:34] <drbobbeaty>	(I've received this on two different boxes on four separate occasions this morning)
| [Tuesday 22 March 2011] [09:06:38] <drbobbeaty>	HA! I think it's the data_size being 0!
| [Tuesday 22 March 2011] [09:06:47] <drbobbeaty>	Any ideas as to why that would be?
| [Tuesday 22 March 2011] [09:07:03] <sustrik>	drbobbeaty: you have to discuss that with steve-o
| [Tuesday 22 March 2011] [09:07:14] <sustrik>	seem to be a problem with new version of opnepgm
| [Tuesday 22 March 2011] [09:09:58] <drbobbeaty>	Steve-o: can you have a look at https://gist.github.com/881176 and give me an idea of why data_size == 0 on the call? I'm hitting the assertion and have no idea why.
| [Tuesday 22 March 2011] [09:10:20] <drbobbeaty>	pieterh: should I just hit the mailing list for steve-o?
| [Tuesday 22 March 2011] [09:10:58] <pieterh>	drbobbeaty: I'd do that, he's in Asia and probably out of the office by now
| [Tuesday 22 March 2011] [09:11:21] <pieterh>	the good news is you can get a new OpenPGM and use that with 2.1.3 without further changes
| [Tuesday 22 March 2011] [09:16:16] <Guthur>	sustrik: I see in the IPC discussion no one is actually talking about using IOCP and named pipes. I've been meaning to ask you about whether you think an abstraction layer over either Sockets & Named Pipes or IOCP itself could feasibly provide the necessary functionality to mimic what is required from poll, select etc in 0MQ
| [Tuesday 22 March 2011] [09:16:50] <Guthur>	this would all be window centric changes of course
| [Tuesday 22 March 2011] [09:22:50] <drbobbeaty>	Steve-o: if you get this, please check the mailing list... I'm getting more than two core dumps an hour with 2.1.3 due to this data_size == 0 issue. Yikes!
| [Tuesday 22 March 2011] [09:23:56] <pieterh>	drbobbeaty: sorry about this, we don't have the facilities to properly test OpenPGM yet
| [Tuesday 22 March 2011] [09:24:29] <pieterh>	I'd advise you to rollback to 2.1.2 until we get a fix to it
| [Tuesday 22 March 2011] [09:24:42] <drbobbeaty>	I understand... If I had to guess it's an edge condition where data_size == 0, and I'm just hitting it more with all the exchange feeds I'm dealing with.
| [Tuesday 22 March 2011] [09:24:51] <sustrik>	Guthur: what's being discussed is a workaround
| [Tuesday 22 March 2011] [09:25:00] <drbobbeaty>	pieterh: that's a good plan.
| [Tuesday 22 March 2011] [09:25:06] <sustrik>	something that would look like IPC but would actually be TCP
| [Tuesday 22 March 2011] [09:25:17] <pieterh>	drbobbeaty: I expect tomorrow morning Steve will have an updated OpenPGM package
| [Tuesday 22 March 2011] [09:25:17] <sustrik>	real solution is IPC & NamedPipes
| [Tuesday 22 March 2011] [09:25:46] <pieterh>	you can install it and rebuild 2.1.3, --with-openpgm=<version> or somesuch, I'm not 100% sure on that syntax
| [Tuesday 22 March 2011] [09:28:10] <Guthur>	sustrik: does the abstraction sound like a feasible objective?
| [Tuesday 22 March 2011] [09:29:52] <sustrik>	Guthur: the abstraction exists already
| [Tuesday 22 March 2011] [09:30:12] <sustrik>	check how poll_t, select_t, epoll_t etc. interface with the rest of the system
| [Tuesday 22 March 2011] [09:30:27] <sustrik>	check whether IOCP can use the same interface
| [Tuesday 22 March 2011] [09:30:35] <sustrik>	if not, propose changes
| [Tuesday 22 March 2011] [09:31:06] <Guthur>	I thought the problem was that underneath those abstractions they use functionality that IOCP does not provide
| [Tuesday 22 March 2011] [09:31:22] <Guthur>	IOCP only providing notification of completion
| [Tuesday 22 March 2011] [09:32:10] <sustrik>	right, IOCP has an additional buffer between the user and the network
| [Tuesday 22 March 2011] [09:32:14] <sustrik>	something like AIO
| [Tuesday 22 March 2011] [09:32:24] <sustrik>	is there a way to limit the size of the buffer?
| [Tuesday 22 March 2011] [09:32:40] <Guthur>	I can check that out
| [Tuesday 22 March 2011] [09:33:00] <sustrik>	yes, please
| [Tuesday 22 March 2011] [09:33:08] <sustrik>	if there's no limit to the buffer
| [Tuesday 22 March 2011] [09:33:17] <sustrik>	it could easily exhaust all the memory
| [Tuesday 22 March 2011] [09:33:47] <sustrik>	in such case the code using IOCP would have to keep track of amount of memory in use
| [Tuesday 22 March 2011] [09:35:12] <Guthur>	oh, that does not sound ideal
| [Tuesday 22 March 2011] [09:45:48] <sustrik>	cremes: hi
| [Tuesday 22 March 2011] [09:46:01] <cremes>	sustrik: good morning
| [Tuesday 22 March 2011] [09:46:09] <sustrik>	morning
| [Tuesday 22 March 2011] [09:46:23] <sustrik>	as for the assertion, any chance of getting backtrace?
| [Tuesday 22 March 2011] [09:47:01] <cremes>	sustrik: i can try to capture it in gdb; give me a few minutes and i'll see what i can do
| [Tuesday 22 March 2011] [09:47:07] <sustrik>	ok
| [Tuesday 22 March 2011] [09:47:28] <sustrik>	another thing: the allocation mechanism you proposed
| [Tuesday 22 March 2011] [09:47:44] <sustrik>	have you found out where the memory disappers?
| [Tuesday 22 March 2011] [09:48:18] <sustrik>	(issue 174)
| [Tuesday 22 March 2011] [09:48:31] <cremes>	sustrik: i need to run your code with the patch you supplied on my linux box
| [Tuesday 22 March 2011] [09:48:45] <cremes>	i ran it on my osx box and it was disappearing in the same place as before
| [Tuesday 22 March 2011] [09:48:59] <cremes>	(the backtrace in issue 174)
| [Tuesday 22 March 2011] [09:52:32] <sustrik>	i though the proposal you made is related to 174
| [Tuesday 22 March 2011] [09:54:33] <cremes>	sustrik: it was; based on your feedback i was assuming the memory growth was due to page fragmentation caused
| [Tuesday 22 March 2011] [09:54:37] <cremes>	by small memory allocations
| [Tuesday 22 March 2011] [09:55:33] <sustrik>	afaik most allocators have per-size caches
| [Tuesday 22 March 2011] [09:55:49] <sustrik>	so you have special cache for 16 byte blocks
| [Tuesday 22 March 2011] [09:56:04] <sustrik>	another one for 32 byte blocks etc.
| [Tuesday 22 March 2011] [09:56:06] <Guthur>	sustrik: you can indeed specify a buffer size
| [Tuesday 22 March 2011] [09:56:25] <sustrik>	that in turn leads to optimal heap utilisation
| [Tuesday 22 March 2011] [09:56:48] <Guthur>	I need to check some of my resources at home though to remind myself of details of IOCP
| [Tuesday 22 March 2011] [09:56:49] <cremes>	sustrik: okay, then i don't understand why in the ticket you wrote that it's due to a known problem with malloc
| [Tuesday 22 March 2011] [09:56:55] <sustrik>	Guthur: how do you do that?
| [Tuesday 22 March 2011] [09:57:12] <Guthur>	sustrik: during the read call
| [Tuesday 22 March 2011] [09:57:31] <Guthur>	you specify a buffer and bytestoread
| [Tuesday 22 March 2011] [09:58:15] <sustrik>	Guthur: i meant limiting the send buffer
| [Tuesday 22 March 2011] [09:58:33] <sustrik>	say, totoal amount that can be used is 64kB
| [Tuesday 22 March 2011] [09:58:55] <sustrik>	attempt to exceed the buffer would mean the send call would fail
| [Tuesday 22 March 2011] [09:59:07] <sustrik>	is there anything like that in IOCP?
| [Tuesday 22 March 2011] [09:59:33] <sustrik>	cremes: the problem i referred to is that processes don't return allocated memory to the OS
| [Tuesday 22 March 2011] [10:00:13] <sustrik>	thus, it's not used, but cannot be reused by a different process
| [Tuesday 22 March 2011] [10:00:54] <cremes>	sustrik: sure, and from my research that is due to page fragmentation caused by malloc/free called on lots of small blocks (smaller than a page)
| [Tuesday 22 March 2011] [10:01:19] <sustrik>	does it return allocated memory at all?
| [Tuesday 22 March 2011] [10:01:33] <cremes>	yes, if an entire page can be freed
| [Tuesday 22 March 2011] [10:01:42] <sustrik>	that's linux?
| [Tuesday 22 March 2011] [10:01:45] <cremes>	yes
| [Tuesday 22 March 2011] [10:01:54] <sustrik>	nice
| [Tuesday 22 March 2011] [10:02:03] <cremes>	i got this from a few different write-ups that i read on stackoverflow and one other site
| [Tuesday 22 March 2011] [10:02:03] <sustrik>	iirc it wasn't the case in the past
| [Tuesday 22 March 2011] [10:02:11] <cremes>	i'll try to find them again
| [Tuesday 22 March 2011] [10:02:17] <Guthur>	sustrik: do you mean more than http://msdn.microsoft.com/en-us/library/aa365748(v=VS.85).aspx
| [Tuesday 22 March 2011] [10:02:30] <cremes>	yes, it appears that was an issue with kernel 2.4 and earlier
| [Tuesday 22 March 2011] [10:02:39] <cremes>	apparently 2.6 resolves that issue
| [Tuesday 22 March 2011] [10:05:19] <Guthur>	you could presumably build some chunking mechanism on top of that with IOCP
| [Tuesday 22 March 2011] [10:05:48] <Guthur>	send chunk 1 with Completed send chunk 2....
| [Tuesday 22 March 2011] [10:05:53] <Guthur>	with/when
| [Tuesday 22 March 2011] [10:09:16] <sustrik>	Guthur: yes, something like that
| [Tuesday 22 March 2011] [10:09:41] <sustrik>	cremes: nice
| [Tuesday 22 March 2011] [10:10:09] <sustrik>	now, the problem occurs because of 2 specific allocations
| [Tuesday 22 March 2011] [10:10:17] <sustrik>	according to the OSX tool
| [Tuesday 22 March 2011] [10:10:33] <sustrik>	1. allocating the chunk in yqueue_t
| [Tuesday 22 March 2011] [10:10:55] <sustrik>	2. allocating the encoder/decoder buffers in engine
| [Tuesday 22 March 2011] [10:11:34] <sustrik>	so, afaiu, if the size of those allocations is a muliply of page size, the problem should go away, right?
| [Tuesday 22 March 2011] [10:11:54] <sustrik>	as for 2 the size of those buffers is 8kB
| [Tuesday 22 March 2011] [10:12:07] <sustrik>	so there's no fragmentation issue
| [Tuesday 22 March 2011] [10:12:30] <sustrik>	hm, for 1. the size is 12kB
| [Tuesday 22 March 2011] [10:12:45] <sustrik>	so the fragmentation should not happen
| [Tuesday 22 March 2011] [10:13:08] <sustrik>	but given that the test is run on OSX, the allocation mechanism may be different
| [Tuesday 22 March 2011] [10:13:57] <cremes>	sustrik: true, but the memory growth is also reproducible on linux
| [Tuesday 22 March 2011] [10:14:04] <cremes>	i just don't have a tool there to show where it's happening
| [Tuesday 22 March 2011] [10:14:12] <sustrik>	:(
| [Tuesday 22 March 2011] [10:14:18] <cremes>	i am *assuming* it occurs in the same place on both OSes
| [Tuesday 22 March 2011] [10:14:36] <sustrik>	you'll have to run the test with my patch
| [Tuesday 22 March 2011] [10:14:38] <cremes>	sustrik: just to confirm, you were able to reproduce this on your linux system with that example code, right?
| [Tuesday 22 March 2011] [10:14:47] <sustrik>	that'll at least show whether it's the yqueue issue
| [Tuesday 22 March 2011] [10:15:15] <sustrik>	yes, i think so
| [Tuesday 22 March 2011] [10:15:38] <sustrik>	i assumed it was process not returning memory to the OS
| [Tuesday 22 March 2011] [10:15:53] <sustrik>	but given the issue was solved in linux/2.6
| [Tuesday 22 March 2011] [10:15:59] <sustrik>	it has to be something different
| [Tuesday 22 March 2011] [10:16:43] <cremes>	sustrik: after i try to get this backtrace for the other issue (181) i'll apply your patch on linux and run it
| [Tuesday 22 March 2011] [10:16:51] <sustrik>	thanks
| [Tuesday 22 March 2011] [10:20:46] <Guthur>	pieterh: with MDP do you see anything inherently wrong with having workers being other brokers 
| [Tuesday 22 March 2011] [10:29:00] <Guthur>	maybe even have service requests routed via a URI
| [Tuesday 22 March 2011] [10:52:13] <pieterh>	Guthur: workers can certainly be brokers as well
| [Tuesday 22 March 2011] [10:54:25] <cremes>	sustrik: got a core; do you want the output from 'bt' or from 'thread apply all bt'?
| [Tuesday 22 March 2011] [10:54:53] <sustrik>	presumably the latter
| [Tuesday 22 March 2011] [10:55:12] <cremes>	sustrik: ok... i'll give you both :)
| [Tuesday 22 March 2011] [10:55:27] <sustrik>	thx
| [Tuesday 22 March 2011] [10:55:51] <cremes>	sustrik: https://gist.github.com/881336
| [Tuesday 22 March 2011] [10:56:51] <cremes>	btw, this is off of commit 1619b3d84a04fe1886347fd83280a607
| [Tuesday 22 March 2011] [10:59:51] <sustrik>	cremes: the assertion happens in mutex destructor
| [Tuesday 22 March 2011] [10:59:57] <sustrik>	interesting
| [Tuesday 22 March 2011] [11:00:04] <sustrik>	do you console output?
| [Tuesday 22 March 2011] [11:00:23] <sustrik>	it should print out the actual error code
| [Tuesday 22 March 2011] [11:00:28] <cremes>	i don't understand the question; i have a core file... is there something else you want me to look at?
| [Tuesday 22 March 2011] [11:00:33] <sustrik>	errno
| [Tuesday 22 March 2011] [11:00:42] <cremes>	p errno?
| [Tuesday 22 March 2011] [11:00:44] <sustrik>	yes
| [Tuesday 22 March 2011] [11:00:49] <sustrik>	in the asserted thread
| [Tuesday 22 March 2011] [11:01:12] <sustrik>	thread 1
| [Tuesday 22 March 2011] [11:01:14] <sustrik>	p errno
| [Tuesday 22 March 2011] [11:01:47] <cremes>	Cannot find thread-local variables on this target
| [Tuesday 22 March 2011] [11:01:56] <sustrik>	:|
| [Tuesday 22 March 2011] [11:02:19] <sustrik>	does the program show the console output
| [Tuesday 22 March 2011] [11:02:20] <sustrik>	?
| [Tuesday 22 March 2011] [11:02:23] <sustrik>	stderr
| [Tuesday 22 March 2011] [11:02:25] <sustrik>	?
| [Tuesday 22 March 2011] [11:02:59] <sustrik>	if so, the error should be visible there
| [Tuesday 22 March 2011] [11:03:30] <cremes>	looking...
| [Tuesday 22 March 2011] [11:03:55] <sustrik>	you should see the assert there
| [Tuesday 22 March 2011] [11:04:06] <sustrik>	the line above it should be the error
| [Tuesday 22 March 2011] [11:04:59] <cremes>	all it printed was the assert from socket_base.cpp
| [Tuesday 22 March 2011] [11:05:32] <sustrik>	the stack trace shows a different assert
| [Tuesday 22 March 2011] [11:05:42] <sustrik>	is that the same run?
| [Tuesday 22 March 2011] [11:05:45] <cremes>	let me run it again and put everything to the console instead of to files (i usually redirect the output)
| [Tuesday 22 March 2011] [11:05:54] <cremes>	same run
| [Tuesday 22 March 2011] [11:05:58] <sustrik>	strange
| [Tuesday 22 March 2011] [11:06:52] <cremes>	running again...
| [Tuesday 22 March 2011] [11:12:47] <cremes>	sustrik: all it prints is:
| [Tuesday 22 March 2011] [11:12:48] <cremes>	Assertion failed: sessions.empty () (socket_base.cpp:127)
| [Tuesday 22 March 2011] [11:12:56] <cremes>	Aborted (core dumped)
| [Tuesday 22 March 2011] [11:14:00] <cremes>	the thread backtraces are the same for this core
| [Tuesday 22 March 2011] [11:15:43] <sustrik>	that's really strange
| [Tuesday 22 March 2011] [11:15:56] <sustrik>	thread 1 reports the assertion happened in mutex.hpp
| [Tuesday 22 March 2011] [11:16:06] <sustrik>	rather than in socket_base.cpp
| [Tuesday 22 March 2011] [11:16:21] <sustrik>	maybe it's optimiser's fault
| [Tuesday 22 March 2011] [11:16:23] <cremes>	i don't have an explanation :(
| [Tuesday 22 March 2011] [11:16:35] <pieterh>	cremes: are you building a debug version?
| [Tuesday 22 March 2011] [11:16:36] <sustrik>	any chance of building 0mq with optimisations disabled?
| [Tuesday 22 March 2011] [11:16:45] <cremes>	pieterh: yes, ./configure --enable-debug
| [Tuesday 22 March 2011] [11:16:53] <cremes>	sustrik: yes
| [Tuesday 22 March 2011] [11:17:11] <sustrik>	--enable-debug should turn optimisations off
| [Tuesday 22 March 2011] [11:17:16] <sustrik>	(-O0)
| [Tuesday 22 March 2011] [11:17:42] <cremes>	let me rebuild
| [Tuesday 22 March 2011] [11:17:48] <cremes>	i'll make clean first...
| [Tuesday 22 March 2011] [11:18:03] <sustrik>	cremes: wait a sec
| [Tuesday 22 March 2011] [11:18:16] <sustrik>	maybe it makes more sense to try to figure out what's failing
| [Tuesday 22 March 2011] [11:18:22] <sustrik>	are you using identities?
| [Tuesday 22 March 2011] [11:18:53] <cremes>	oops, too late
| [Tuesday 22 March 2011] [11:18:58] <cremes>	yes, i am using identities
| [Tuesday 22 March 2011] [11:19:40] <sustrik>	the failing socket seems to be xreq, right?
| [Tuesday 22 March 2011] [11:19:54] <cremes>	yes
| [Tuesday 22 March 2011] [11:20:19] <sustrik>	any chance it gets connected to two peers that happen to have the same identity
| [Tuesday 22 March 2011] [11:20:27] <sustrik>	one of them via connect, other one via bind?
| [Tuesday 22 March 2011] [11:20:42] <cremes>	let me take a quick look at the code; i want to say "no" but let me verify
| [Tuesday 22 March 2011] [11:21:02] <sustrik>	simpler question: do you bind or connect the xreq socket; or both?
| [Tuesday 22 March 2011] [11:22:33] <cremes>	hard to say
| [Tuesday 22 March 2011] [11:22:41] <cremes>	if the xreq is part of a QUEUE device, then it's binding
| [Tuesday 22 March 2011] [11:22:46] <cremes>	otherwise all other sockets connect
| [Tuesday 22 March 2011] [11:23:02] <sustrik>	never both on the same socket, right?
| [Tuesday 22 March 2011] [11:23:08] <cremes>	correct
| [Tuesday 22 March 2011] [11:24:49] <sustrik>	hm, maybe the socket_base_t happens to get destructed twice
| [Tuesday 22 March 2011] [11:24:59] <sustrik>	is it possible to add printf's to your program?
| [Tuesday 22 March 2011] [11:25:10] <cremes>	sustrik: yes
| [Tuesday 22 March 2011] [11:25:30] <cremes>	you want them added to calls to zmq_close() ?
| [Tuesday 22 March 2011] [11:25:34] <sustrik>	something like this:
| [Tuesday 22 March 2011] [11:25:55] <sustrik>	printf ("alloc %p\n", (void*) this);
| [Tuesday 22 March 2011] [11:26:07] <sustrik>	in socket_base_t constructor
| [Tuesday 22 March 2011] [11:26:09] <sustrik>	and
| [Tuesday 22 March 2011] [11:26:17] <sustrik>	printf ("dealloc %p\n", (void*) this);
| [Tuesday 22 March 2011] [11:26:21] <sustrik>	in the destructor
| [Tuesday 22 March 2011] [11:26:41] <sustrik>	that should show us whether the destructor is called twice for the same object
| [Tuesday 22 March 2011] [11:27:17] <cremes>	in the destructor, do you want this printf called first or last?
| [Tuesday 22 March 2011] [11:27:25] <cremes>	presumably first
| [Tuesday 22 March 2011] [11:27:43] <sustrik>	first
| [Tuesday 22 March 2011] [11:28:40] <cremes>	running...
| [Tuesday 22 March 2011] [11:28:55] <cremes>	hmmm, i should have separated that stuff out to stderr
| [Tuesday 22 March 2011] [11:31:59] <cremes>	how do i redirect stdout and stderr to separate files in bash?
| [Tuesday 22 March 2011] [11:33:26] <cremes>	figured it out
| [Tuesday 22 March 2011] [11:33:27] <pieterh>	cremes: someproc 2> stderr.log
| [Tuesday 22 March 2011] [11:33:30] <cremes>	running...
| [Tuesday 22 March 2011] [11:38:31] <mikko>	pieterh: did you merge the pull req?
| [Tuesday 22 March 2011] [11:38:36] <mikko>	there is prolly more coming soon
| [Tuesday 22 March 2011] [11:38:43] <mikko>	([zeromq-dev] ZMQ 2.1.3 w/OpenPGM Assertion on pgm_rate_check2())
| [Tuesday 22 March 2011] [11:38:51] <pieterh>	mikko: you mean the autoconf fix for OpenPGM in 2.1?
| [Tuesday 22 March 2011] [11:38:58] <mikko>	y
| [Tuesday 22 March 2011] [11:39:09] <mikko>	im thinking this atm
| [Tuesday 22 March 2011] [11:39:10] <pieterh>	hmm, did you see my email about sending patches instead?
| [Tuesday 22 March 2011] [11:39:14] <pieterh>	I think it's going to be simpler
| [Tuesday 22 March 2011] [11:39:37] <pieterh>	pubsub instead of reqrep
| [Tuesday 22 March 2011] [11:39:50] <mikko>	"There is a smarter way to do this, and I think it is:"
| [Tuesday 22 March 2011] [11:39:53] <pieterh>	two subscribers (martin, myself), one publisher (you)
| [Tuesday 22 March 2011] [11:40:25] <mikko>	i will update a patch and send to ML
| [Tuesday 22 March 2011] [11:40:31] <pieterh>	that's best IMO
| [Tuesday 22 March 2011] [11:41:11] <pieterh>	somewhere there's a magic git incantation to pull a commit from a random git, but I don't know it
| [Tuesday 22 March 2011] [11:41:34] <mikko>	what do you mean?
| [Tuesday 22 March 2011] [11:41:41] <mikko>	git is built on that sort of thing
| [Tuesday 22 March 2011] [11:41:49] <sustrik>	cherry-pick?
| [Tuesday 22 March 2011] [11:41:52] <mikko>	you could even pull changes from my personal repo
| [Tuesday 22 March 2011] [11:42:04] <mikko>	and if i was privileged to i could push to your home machine
| [Tuesday 22 March 2011] [11:42:38] <cremes>	sustrik: with a confirmed debug build, the backtraces are different now
| [Tuesday 22 March 2011] [11:42:41] <cremes>	sustrik: https://gist.github.com/881439
| [Tuesday 22 March 2011] [11:42:46] <cremes>	thread 1 and thread 19 look relevant
| [Tuesday 22 March 2011] [11:42:54] <cremes>	i still can't print errno
| [Tuesday 22 March 2011] [11:44:09] <sustrik>	never mind, this is the assert (empty) thing
| [Tuesday 22 March 2011] [11:44:17] <sustrik>	what about the output?
| [Tuesday 22 March 2011] [11:44:22] <pieterh>	mikko, ok, so how do we do this without using github's pull request?
| [Tuesday 22 March 2011] [11:44:27] <cremes>	lots of alloc/dealloc messages
| [Tuesday 22 March 2011] [11:44:41] <pieterh>	e.g. create an issue pointing to a remote git/commit 
| [Tuesday 22 March 2011] [11:45:02] <mikko>	pieterh: or mailing list?
| [Tuesday 22 March 2011] [11:45:11] <pieterh>	let's work it out here...
| [Tuesday 22 March 2011] [11:45:19] <sustrik>	cremes: check for 0x7f1a582a4ea0
| [Tuesday 22 March 2011] [11:45:24] <pieterh>	what git commands do I need to use to pull one commit from your git
| [Tuesday 22 March 2011] [11:45:47] <cremes>	sustrik: 1 alloc, 1 dealloc
| [Tuesday 22 March 2011] [11:46:05] <cremes>	sustrik: however, that is the *last* dealloc printed
| [Tuesday 22 March 2011] [11:46:06] <mikko>	git remote add mikko <url to my repo>
| [Tuesday 22 March 2011] [11:46:15] <pieterh>	ok
| [Tuesday 22 March 2011] [11:46:16] <sustrik>	and the printf is at the beginning of the destructor, right?
| [Tuesday 22 March 2011] [11:46:17] <mikko>	git fetch mikko
| [Tuesday 22 March 2011] [11:46:22] <mikko>	then check the hash of the commit 
| [Tuesday 22 March 2011] [11:46:23] <cremes>	correct
| [Tuesday 22 March 2011] [11:46:24] <pieterh>	git fetch --no-tags, at least
| [Tuesday 22 March 2011] [11:46:28] <mikko>	and cherry-pick it
| [Tuesday 22 March 2011] [11:46:37] <mikko>	i think that should do it
| [Tuesday 22 March 2011] [11:46:50] <sustrik>	then it's some other problem...
| [Tuesday 22 March 2011] [11:46:50] <cremes>	sustrik: line 792 is the first line of the destructor
| [Tuesday 22 March 2011] [11:47:12] <pieterh>	git fetch won't make a mess of your target git?
| [Tuesday 22 March 2011] [11:47:13] <cremes>	sustrik: i grep'ed all of the dealloc lines to their own file 'z2'
| [Tuesday 22 March 2011] [11:47:23] <sustrik>	792?
| [Tuesday 22 March 2011] [11:47:27] <sustrik>	what file?
| [Tuesday 22 March 2011] [11:47:30] <cremes>	sustrik: then ran:  wc -l z2; sort -u z2 | wc -l
| [Tuesday 22 March 2011] [11:47:35] <sustrik>	socket_base_t?
| [Tuesday 22 March 2011] [11:47:36] <cremes>	socket_base.cpp
| [Tuesday 22 March 2011] [11:47:48] <mikko>	pieterh: git-fetch - Download objects and refs from another repository
| [Tuesday 22 March 2011] [11:47:54] <mikko>	pieterh: nope
| [Tuesday 22 March 2011] [11:47:56] <sustrik>	cremes: what version?
| [Tuesday 22 March 2011] [11:48:02] <sustrik>	my socket_base.cpp ends at 790
| [Tuesday 22 March 2011] [11:48:22] <pieterh>	mikko: ok, I like cherry-pick, it's how I pull patches from sustrik
| [Tuesday 22 March 2011] [11:48:33] <cremes>	sustrik: oops, sorry, misread the vi output; line 124 of 792 (i added two printfs)
| [Tuesday 22 March 2011] [11:48:40] <pieterh>	but you have to do 'git fetch --no-tags whatever' to avoid polluting your home git
| [Tuesday 22 March 2011] [11:48:56] <sustrik>	cremes: ok
| [Tuesday 22 March 2011] [11:48:58] <pieterh>	sustrik: do you want to try cherry-pick from mikko's git?
| [Tuesday 22 March 2011] [11:49:19] <sustrik>	i want a patch on the ML
| [Tuesday 22 March 2011] [11:49:23] <sustrik>	that's the process
| [Tuesday 22 March 2011] [11:49:35] <cremes>	sustrik: anyway, by removing duplicate dealloc prints using 'sort -u' it looks like 180 sockets are dealloc'ed twice
| [Tuesday 22 March 2011] [11:49:36] <pieterh>	sustrik: you don't send me patches via the ML
| [Tuesday 22 March 2011] [11:49:43] <sustrik>	i should
| [Tuesday 22 March 2011] [11:49:43] <pieterh>	so the process isn't symmetric now
| [Tuesday 22 March 2011] [11:49:51] <pieterh>	perhaps
| [Tuesday 22 March 2011] [11:50:04] <pieterh>	sending me a commit tag is much less work for you
| [Tuesday 22 March 2011] [11:50:08] <pieterh>	and also easier for me
| [Tuesday 22 March 2011] [11:50:31] <pieterh>	if you send the URI to the commit, it's as good as a patch
| [Tuesday 22 March 2011] [11:50:36] <sustrik>	that's good for backporting
| [Tuesday 22 March 2011] [11:50:36] <pieterh>	everyone who cares can review it
| [Tuesday 22 March 2011] [11:50:47] <pieterh>	here we're porting in all directions, no back or fwd
| [Tuesday 22 March 2011] [11:50:49] <sustrik>	it's only a reference to what has to be backported
| [Tuesday 22 March 2011] [11:50:57] <pieterh>	nope, no special cases please
| [Tuesday 22 March 2011] [11:50:59] <sustrik>	with new functionality you want a full patch
| [Tuesday 22 March 2011] [11:51:26] <pieterh>	it should be a single process between any two gits
| [Tuesday 22 March 2011] [11:51:53] <pieterh>	github pull requests are eliminated because they only work between forks
| [Tuesday 22 March 2011] [11:52:03] <sustrik>	there has to be an entry point
| [Tuesday 22 March 2011] [11:52:08] <pieterh>	entry point?
| [Tuesday 22 March 2011] [11:52:18] <sustrik>	the place where patch enters the ecosystem
| [Tuesday 22 March 2011] [11:52:23] <pieterh>	one always addresses a patch/commit to the author of the target git
| [Tuesday 22 March 2011] [11:52:33] <pieterh>	entry point can be ML, that's excellent
| [Tuesday 22 March 2011] [11:52:38] <pieterh>	it's ideal for this
| [Tuesday 22 March 2011] [11:52:41] <sustrik>	yup
| [Tuesday 22 March 2011] [11:52:46] <pieterh>	but signed patches are extra effort
| [Tuesday 22 March 2011] [11:52:59] <pieterh>	and we can do it better
| [Tuesday 22 March 2011] [11:53:19] <pieterh>	i think, anyhow, and I'm sure it should be orthogonal for any two gits
| [Tuesday 22 March 2011] [11:53:35] <pieterh>	i.e. if you want to send a patch to mikko, same process
| [Tuesday 22 March 2011] [11:53:53] <sustrik>	mikko doesn't care about sign-offs
| [Tuesday 22 March 2011] [11:53:59] <sustrik>	as it's his private git
| [Tuesday 22 March 2011] [11:54:06] <pieterh>	that's a separate issue
| [Tuesday 22 March 2011] [11:54:14] <pieterh>	signed off or not, that's QC on the patch or commit
| [Tuesday 22 March 2011] [11:54:52] <pieterh>	I'd like a single process for all of us, no special cases
| [Tuesday 22 March 2011] [11:54:53] <mikko>	what about CLA?
| [Tuesday 22 March 2011] [11:54:56] <mikko>	too complicated?
| [Tuesday 22 March 2011] [11:54:58] <pieterh>	CLA?
| [Tuesday 22 March 2011] [11:55:02] <pieterh>	way too complex
| [Tuesday 22 March 2011] [11:55:04] <pieterh>	by 100x
| [Tuesday 22 March 2011] [11:55:11] <mikko>	contributor license agreement
| [Tuesday 22 March 2011] [11:55:13] <mikko>	like apache etc do
| [Tuesday 22 March 2011] [11:55:22] <pieterh>	no way, dead body over, etc.
| [Tuesday 22 March 2011] [11:55:27] <sustrik>	sign-off is simpler imo
| [Tuesday 22 March 2011] [11:55:39] <pieterh>	it creates *huge* management issues and individual developers hate it to the point of not contributing
| [Tuesday 22 March 2011] [11:56:05] <pieterh>	we switched to co-owned code and signoff last year, it's superior in every sense
| [Tuesday 22 March 2011] [11:56:21] <pieterh>	this is not relevant to the thread however
| [Tuesday 22 March 2011] [11:56:33] <pieterh>	cherry-picking is very simple for both parties
| [Tuesday 22 March 2011] [11:56:47] <mikko>	pieterh: we were a bit too drunk to discuss this properly last weds
| [Tuesday 22 March 2011] [11:56:59] <pieterh>	mikko: drunk? I'm Scottish, we don't get drunk
| [Tuesday 22 March 2011] [11:57:09] <pieterh>	oh, hang on, yes we do... but it was English beer, doesn't count
| [Tuesday 22 March 2011] [11:57:41] <pieterh>	sustrik: I'm not sure cherry-picking conforms to signing off, that's all
| [Tuesday 22 March 2011] [11:58:06] <pieterh>	but it has to, of course
| [Tuesday 22 March 2011] [11:58:19] <mikko>	can you not sign a commit?
| [Tuesday 22 March 2011] [11:58:19] <pieterh>	pulling code from a public git means it's by definition signed off
| [Tuesday 22 March 2011] [11:58:23] <pieterh>	you don't need to
| [Tuesday 22 March 2011] [11:58:38] <pieterh>	once you commit & push to a git, you license the code under whatever, LGPL etc.
| [Tuesday 22 March 2011] [11:59:08] <pieterh>	this is why pull requests work
| [Tuesday 22 March 2011] [11:59:24] <pieterh>	but they are crippled for general use
| [Tuesday 22 March 2011] [11:59:55] <pieterh>	sustrik: allow me to make a short proposal on the list, OK?
| [Tuesday 22 March 2011] [12:00:01] <sustrik>	sure
| [Tuesday 22 March 2011] [12:00:07] <pieterh>	thanks
| [Tuesday 22 March 2011] [12:00:15] <pieterh>	BTW the new C API is almost working
| [Tuesday 22 March 2011] [12:00:35] <pieterh>	it does everything I was asking for, e.g. automatic close of sockets, message reuse, etc.
| [Tuesday 22 March 2011] [12:00:51] <pieterh>	nicely emulates 2.0 semantics on termination :-)
| [Tuesday 22 March 2011] [12:01:23] <sustrik>	goodo
| [Tuesday 22 March 2011] [12:01:33] <cremes>	sustrik: i applied your patch for issue 174 and ran your minimal test case (also in that issue)
| [Tuesday 22 March 2011] [12:01:41] <cremes>	sustrik: shall i email you the output?
| [Tuesday 22 March 2011] [12:01:46] <cremes>	it's too big to pastie
| [Tuesday 22 March 2011] [12:04:04] <Guthur>	pieterh: you're scottish?
| [Tuesday 22 March 2011] [12:04:15] <pieterh>	Guthur: half Scottish, half Belgian...
| [Tuesday 22 March 2011] [12:04:24] <pieterh>	born somewhere in the middle of the North Sea
| [Tuesday 22 March 2011] [12:06:22] <Guthur>	one of those water births then
| [Tuesday 22 March 2011] [12:07:23] <pieterh>	lol
| [Tuesday 22 March 2011] [12:08:53] <Guthur>	belgians aren't renown for their seafaring as well
| [Tuesday 22 March 2011] [12:09:01] <Guthur>	I hear they don't have much of a navy
| [Tuesday 22 March 2011] [12:10:45] <pieterh>	my great-great grandfather was hung for being a pirate
| [Tuesday 22 March 2011] [12:11:28] <sustrik>	cremes: did it drop to 0?
| [Tuesday 22 March 2011] [12:11:55] <cremes>	sustrik: no, it didn't; i just sent you the output in an email with attachment
| [Tuesday 22 March 2011] [12:12:03] <sustrik>	ok
| [Tuesday 22 March 2011] [12:13:17] <sustrik>	cremes: it's looks like it's dropping
| [Tuesday 22 March 2011] [12:13:24] <sustrik>	see the end of the file
| [Tuesday 22 March 2011] [12:13:58] <sustrik>	if you let it run a bit longet it would probably get to 0
| [Tuesday 22 March 2011] [12:14:13] <sustrik>	longer*
| [Tuesday 22 March 2011] [12:14:57] <cremes>	sustrik: i let it run for 5 minutes... it didn't appear to be dropping anymore
| [Tuesday 22 March 2011] [12:15:06] <cremes>	sustrik: i'll let it go for 20m and see what happens
| [Tuesday 22 March 2011] [12:15:30] <sustrik>	it seems like it was terminated in the middle of the process of dropping
| [Tuesday 22 March 2011] [12:15:34] <sustrik>	see the last line
| [Tuesday 22 March 2011] [12:15:44] <sustrik>	it's cut in the middle of output
| [Tuesday 22 March 2011] [12:16:04] <sustrik>	356 355 354 35
| [Tuesday 22 March 2011] [12:16:06] <cremes>	sustrik: i think that's from buffered output
| [Tuesday 22 March 2011] [12:16:17] <cremes>	i was tailing the log file and it stopped there
| [Tuesday 22 March 2011] [12:16:20] <sustrik>	ah
| [Tuesday 22 March 2011] [12:16:28] <sustrik>	anyway, it dropped almost to zero
| [Tuesday 22 March 2011] [12:16:39] <sustrik>	up to 30,000
| [Tuesday 22 March 2011] [12:16:51] <sustrik>	then back to 353
| [Tuesday 22 March 2011] [12:17:18] <sustrik>	the leak is either elsewhere
| [Tuesday 22 March 2011] [12:17:28] <sustrik>	or it's process not returning memory to the OS
| [Tuesday 22 March 2011] [12:18:19] <cremes>	sustrik: i'll let it sit for a while... i just saw it go from 1 to 3200 and now it's down to 310
| [Tuesday 22 March 2011] [12:18:26] <cremes>	but it's not printing anything anymore
| [Tuesday 22 March 2011] [12:18:40] <sustrik>	hm
| [Tuesday 22 March 2011] [12:18:44] <cremes>	if it's 'cut off' due to stdout buffering, hitting ctrl-c ought to flush that buffer
| [Tuesday 22 March 2011] [12:19:02] <sustrik>	maybe a problem with the buffering itself?
| [Tuesday 22 March 2011] [12:19:27] <sustrik>	anyway, i've used simple non-buffered console
| [Tuesday 22 March 2011] [12:19:39] <sustrik>	and i saw the number of chunks dropping to 0
| [Tuesday 22 March 2011] [12:19:56] <cremes>	i don't know how to get an unbuffered xterm going
| [Tuesday 22 March 2011] [12:20:12] <sustrik>	cremes: i don't think it matters
| [Tuesday 22 March 2011] [12:20:18] <cremes>	i should probably add an explicit flush
| [Tuesday 22 March 2011] [12:20:28] <sustrik>	350 chunks won't account for all the allocated memory you see
| [Tuesday 22 March 2011] [12:20:30] <sustrik>	right?
| [Tuesday 22 March 2011] [12:20:34] <sustrik>	1 chunk = 12kb
| [Tuesday 22 March 2011] [12:20:34] <mikko>	fflush (stdout);
| [Tuesday 22 March 2011] [12:20:48] <sustrik>	x350 = 4.2MB
| [Tuesday 22 March 2011] [12:20:58] <cremes>	sustrik: do those chunks contain message data?
| [Tuesday 22 March 2011] [12:21:16] <sustrik>	how large is your message?
| [Tuesday 22 March 2011] [12:21:19] <sustrik>	8 bytes?
| [Tuesday 22 March 2011] [12:21:30] <cremes>	your test case was using a 20byte message
| [Tuesday 22 March 2011] [12:21:36] <sustrik>	ok
| [Tuesday 22 March 2011] [12:21:43] <sustrik>	then the chunks contain message data
| [Tuesday 22 March 2011] [12:23:28] <cremes>	i added fflush() and am rerunning; we'll see if that makes a difference
| [Tuesday 22 March 2011] [12:23:35] <cremes>	it did; count went to 0
| [Tuesday 22 March 2011] [12:23:50] <cremes>	resident memory is still inflated though
| [Tuesday 22 March 2011] [12:24:14] <sustrik>	the next step would be to replace all the mallocs and frees and news and deletes
| [Tuesday 22 March 2011] [12:24:28] <sustrik>	by something that would track amount of memory allocated
| [Tuesday 22 March 2011] [12:24:46] <cremes>	sustrik: i think it's easier for me to just restart my applications every 48 hours 
| [Tuesday 22 March 2011] [12:24:49] <cremes>	to free up swap
| [Tuesday 22 March 2011] [12:25:02] <sustrik>	hm
| [Tuesday 22 March 2011] [12:25:31] <sustrik>	let's keep the issue open then
| [Tuesday 22 March 2011] [12:25:37] <sustrik>	when i get some time
| [Tuesday 22 March 2011] [12:25:42] <cremes>	ok
| [Tuesday 22 March 2011] [12:25:50] <cremes>	i'll add an update with my findings
| [Tuesday 22 March 2011] [12:25:55] <spht>	Does zmq not exit in its SIGINT handler? Can't SIGINT to kill my script using the python binding..
| [Tuesday 22 March 2011] [12:26:05] <sustrik>	i'll try to check whether the memory is held by 0mq or glibc
| [Tuesday 22 March 2011] [12:27:19] <sustrik>	spht: what version of 0mq are you using?
| [Tuesday 22 March 2011] [12:27:54] <spht>	sustrik:  Python module version is 2.0.10
| [Tuesday 22 March 2011] [12:28:43] <sustrik>	there used to be a problem with SIGINT in old versions, let me check...
| [Tuesday 22 March 2011] [12:29:22] <cremes>	spht: this was fixed in the 2.1 branches
| [Tuesday 22 March 2011] [12:29:41] <cremes>	spht: time to upgrade
| [Tuesday 22 March 2011] [12:29:44] <spht>	cremes: sustrik: Ahht thanks! I'll go upgrade ASAP :)
| [Tuesday 22 March 2011] [12:29:48] <ianbarber>	mikko: about?
| [Tuesday 22 March 2011] [12:29:51] <mikko>	ianbarber: yes
| [Tuesday 22 March 2011] [12:29:55] <mikko>	bam!
| [Tuesday 22 March 2011] [12:31:02] <ianbarber>	bam!
| [Tuesday 22 March 2011] [12:31:10] <ianbarber>	so, I was translating a pieterh example
| [Tuesday 22 March 2011] [12:31:16] <ianbarber>	which measures round trip speed
| [Tuesday 22 March 2011] [12:31:48] <ianbarber>	it starts a client, worker and broker, and tries doing send() recv() 10000 time and then send() 10000 and recv() 10000
| [Tuesday 22 March 2011] [12:32:01] <ianbarber>	to compare the speed of waiting for a response versus async
| [Tuesday 22 March 2011] [12:32:24] <ianbarber>	in the c version I get ~6k/s for the first, around 50k/s for the second
| [Tuesday 22 March 2011] [12:32:32] <ianbarber>	in the PHP i get ~6k/s for both
| [Tuesday 22 March 2011] [12:33:37] <mikko>	that's interesting
| [Tuesday 22 March 2011] [12:33:40] <ianbarber>	i thought it might be because PHP was doing a msg destroy after each one, but taking that out of the c version didn't affect it
| [Tuesday 22 March 2011] [12:34:03] <mikko>	probably need to run with a profiler to see
| [Tuesday 22 March 2011] [12:35:16] <ianbarber>	yeah, i guess
| [Tuesday 22 March 2011] [13:01:46] <pieterh>	ianbarber: destroying messages, allocs, etc. don't make that much impact
| [Tuesday 22 March 2011] [13:06:53] <ianbarber>	yeah, that's what i concluded. 
| [Tuesday 22 March 2011] [14:32:11] <picasso>	i'm designing an analytics system that needs to handle  potentially heavy loads and usage spikes
| [Tuesday 22 March 2011] [14:32:25] <picasso>	creating a web service API (preferrably in PHP), packaging  incoming requests and dumping onto a message queue, and then  processing these requests in the background
| [Tuesday 22 March 2011] [14:33:57] <picasso>	i apologize for not being too familiar with zeroMQ, but is this a type of problem that would be a good use case for zero?
| [Tuesday 22 March 2011] [14:43:00] <cremes>	picasso: yep, it sure would
| [Tuesday 22 March 2011] [14:43:26] <cremes>	have you read the guide? http://zero.mq/zg
| [Tuesday 22 March 2011] [14:43:35] <cremes>	it covers several use-cases
| [Tuesday 22 March 2011] [14:46:05] <picasso>	seems i have quite a bit of reading to do :)
| [Tuesday 22 March 2011] [15:13:22] <cremes>	picasso: just a little bit!
| [Tuesday 22 March 2011] [15:49:06] <michelp>	i'm just reading the news about Sergey Aleynikov, was he a 0mq developer?
| [Tuesday 22 March 2011] [15:49:47] <michelp>	i saw his github (maybe bitbucket) googleing around a few days ago but now it appears to be gone
| [Tuesday 22 March 2011] [15:49:54] <michelp>	and it looked like he had made some contributions
| [Tuesday 22 March 2011] [15:50:13] <michelp>	weird that i can't find it now, they must have deleted it
| [Tuesday 22 March 2011] [15:52:07] <pieterh>	michelp: he wrote the original Erlang binding for 0MQ
| [Tuesday 22 March 2011] [15:52:48] <pieterh>	user id on github is saleyn
| [Tuesday 22 March 2011] [15:53:32] <michelp>	i'm not up on the details, but his sentence seems extremely harsh for just moving code, it doesn't sound they proved he used it in any way
| [Tuesday 22 March 2011] [15:56:03] <michelp>	ah it's still up on github
| [Tuesday 22 March 2011] [15:57:10] <cremes>	michelp: it doesn't matter if he used it or not; let's say you take a candy bar from the store but you don't eat it; has it been stolen?
| [Tuesday 22 March 2011] [15:57:13] <cremes>	or not?
| [Tuesday 22 March 2011] [15:58:54] <michelp>	yeah i guess it has.  the couple of stories i've read so far don't have much detail, but i just found one that does
| [Tuesday 22 March 2011] [15:59:10] <pieterh>	michelp: crimes against property are usually treated harshly unless you're wealthy
| [Tuesday 22 March 2011] [15:59:23] <spht>	dang: He was employed for two years at Goldman on a salary of $400,000. In early June, he left Goldman to join Teza Technologies, a Chicago start-up which offered to triple his pay.
| [Tuesday 22 March 2011] [16:00:13] <spht>	$1.2M coding, that's pretty decent I'd say :)
| [Tuesday 22 March 2011] [16:08:01] <pieterh>	aight, zapi the high-level C binding for 0MQ is now ready and working!
| [Tuesday 22 March 2011] [16:08:07] <pieterh>	http://zero.mq/c
| [Tuesday 22 March 2011] [16:09:13] <mikko>	cool!
| [Tuesday 22 March 2011] [16:09:42] <mikko>	did you take zfl build as base?
| [Tuesday 22 March 2011] [16:09:50] <pieterh>	yes, for the autotools
| [Tuesday 22 March 2011] [16:09:55] <mikko>	very good
| [Tuesday 22 March 2011] [16:10:00] <mikko>	should be about the same process
| [Tuesday 22 March 2011] [16:10:02] <pieterh>	the only change was to switch to valgrind for the selftest script
| [Tuesday 22 March 2011] [16:10:18] <pieterh>	much better than whatever heap checker I was using in ZFL
| [Tuesday 22 March 2011] [17:24:12] <pieterh>	sigh
| [Tuesday 22 March 2011] [18:00:11] <Guthur>	pieterh, you work fast
| [Tuesday 22 March 2011] [18:00:18] <pieterh>	yeah
| [Tuesday 22 March 2011] [18:00:22] <pieterh>	am just making packages now
| [Tuesday 22 March 2011] [18:00:26] <pieterh>	beta release in one day
| [Tuesday 22 March 2011] [18:00:49] <pieterh>	will aim to also upload man pages to a web site, should be doable
| [Tuesday 22 March 2011] [18:01:06] <pieterh>	first replying to people who confuse posix streams with length-specified messages
| [Tuesday 22 March 2011] [18:01:07] <pieterh>	sigh
| [Tuesday 22 March 2011] [18:01:10] <Guthur>	In the same time I haven't got nearly as far with the 0MQ-FIX bridge
| [Tuesday 22 March 2011] [18:01:23] <Guthur>	admittedly I had to go to work in the middle
| [Tuesday 22 March 2011] [18:03:06] <Guthur>	robustly extracting a FIX message from a socket wrote buffer is non too trivial exercise though
| [Tuesday 22 March 2011] [18:03:23] <pieterh>	FIX is complex
| [Tuesday 22 March 2011] [18:03:35] <pieterh>	that's why I suggested doing that totally separately
| [Tuesday 22 March 2011] [18:05:24] <Guthur>	it's actually my first time working directly with raw sockets as well
| [Tuesday 22 March 2011] [18:05:33] <Guthur>	so all a bit of a learning curce
| [Tuesday 22 March 2011] [18:05:38] <Guthur>	curve*
| [Tuesday 22 March 2011] [18:24:26] <pieterh>	raw sockets are pretty OK if you're not trying to be multithreaded or something
| [Tuesday 22 March 2011] [18:31:26] <Guthur>	hehe, I quickly decided not to try that
| [Tuesday 22 March 2011] [18:32:03] <Guthur>	it's not so much the Sockets it's extracting the individual messages from the stream
| [Tuesday 22 March 2011] [18:32:20] <Guthur>	ensuring they are complete and valid
| [Tuesday 22 March 2011] [18:34:11] <Guthur>	just trying to find the nice solution, I've made a state transition table, which should help
| [Tuesday 22 March 2011] [18:34:28] <Guthur>	and just ran a small socket demo to sanity check my socket understanding
| [Tuesday 22 March 2011] [18:34:48] <Guthur>	so all set now to do the real work
| [Tuesday 22 March 2011] [18:46:52] <pieterh>	Guthur: are you working in C or C# for this?
| [Tuesday 22 March 2011] [18:49:08] <Guthur>	C# for the time being, I think it might suit being implement in C, if its 'dumb' enough
| [Tuesday 22 March 2011] [19:01:22] <pieterh>	I'm really curious to see how you get with this
| [Tuesday 22 March 2011] [20:31:38] <Guthur>	out of curiosity do many specifically build 0MQ for 64bit platform?
| [Tuesday 22 March 2011] [20:33:46] <Guthur>	oh nvm, it's not really the issue I had mind
| [Tuesday 22 March 2011] [20:38:11] <klestes>	greetings 
| [Tuesday 22 March 2011] [20:38:31] <klestes>	anyone here ?
| [Tuesday 22 March 2011] [20:39:02] <Guthur>	klestes, a few
| [Tuesday 22 March 2011] [20:39:21] <Guthur>	i wont be here long though, just about to hit the sack
| [Tuesday 22 March 2011] [20:39:25] <Guthur>	what's up?
| [Tuesday 22 March 2011] [20:39:33] <klestes>	good.  I am preparing to do my first patch submission
| [Tuesday 22 March 2011] [20:39:51] <klestes>	where are you, Guth ?
| [Tuesday 22 March 2011] [20:39:57] <Guthur>	UK
| [Tuesday 22 March 2011] [20:40:07] <klestes>	ah.  Hows the weather ?
| [Tuesday 22 March 2011] [20:40:09] <Guthur>	I'm not much of a git gurur
| [Tuesday 22 March 2011] [20:40:20] <Guthur>	it's actually been quite good recently
| [Tuesday 22 March 2011] [20:40:22] <klestes>	me either !  
| [Tuesday 22 March 2011] [20:40:28] <klestes>	great !
| [Tuesday 22 March 2011] [20:40:37] <Guthur>	pieterh, ping
| [Tuesday 22 March 2011] [20:40:51] <Guthur>	pieterh might be able to help, if he's about
| [Tuesday 22 March 2011] [20:41:00] <klestes>	yep, if you hear the 0Mgods gripe about that damn newbie patch, I was susccessful :)
| [Tuesday 22 March 2011] [20:41:17] <klestes>	I think the SF meetup was today, so he may be out of it.  or having beer.
| [Tuesday 22 March 2011] [20:41:32] <klestes>	anyway, if I botch it, there's always tomorrow.
| [Tuesday 22 March 2011] [20:41:43] <Guthur>	oh ok, well there is a couple of resources on the web on how to make git patches
| [Tuesday 22 March 2011] [20:41:51] <klestes>	yes, I am reading one now.
| [Tuesday 22 March 2011] [20:42:04] <Guthur>	it's actually not too hard, I just can't remember otoh
| [Tuesday 22 March 2011] [20:42:32] <Guthur>	I really need sleep though, sorry I can't be more help
| [Tuesday 22 March 2011] [20:42:44] <klestes>	thats ok.
| [Tuesday 22 March 2011] [20:42:53] <klestes>	I wonder if I can submit just a plain diff the first time ?
| [Tuesday 22 March 2011] [20:43:09] <Guthur>	they do like signed off patches to be honest
| [Tuesday 22 March 2011] [20:43:16] <klestes>	ah, ok.
| [Tuesday 22 March 2011] [20:43:39] <Guthur>	anyhoo must go, later klestes 
| [Tuesday 22 March 2011] [20:43:40] <klestes>	now,what exactly qualifies a patch as being 'signed off' - use of the git format-patch command ?
| [Tuesday 22 March 2011] [20:43:52] <klestes>	nice talking to you, guthur.  Have a good night !
| [Tuesday 22 March 2011] [20:44:31] <Guthur>	we should probably document this process somewhere
| [Tuesday 22 March 2011] [20:44:41] <Guthur>	g'night
| [Tuesday 22 March 2011] [21:06:14] <klestes>	well, my first patch has been submitted.  Bombs away !!
| [Tuesday 22 March 2011] [21:06:22] <klestes>	and to all, a good nyte.
| [Wednesday 23 March 2011] [02:03:42] <Freejack>	Has anyone tried plugging ZeroMQ into anything besides sockets? (i.e. TIPC, DIPC, LINX, Streams, etc...)?
| [Wednesday 23 March 2011] [02:07:56] <sustrik>	Freejack: nope
| [Wednesday 23 March 2011] [02:08:06] <sustrik>	you are free to try
| [Wednesday 23 March 2011] [02:08:42] <sustrik>	however, if the underlying transport doesn't use file descriptors, it will be pretty hard to integrate into 0mq
| [Wednesday 23 March 2011] [02:08:59] <Freejack>	Sounds like a plan. Yeah, it uses file descriptors.
| [Wednesday 23 March 2011] [02:09:46] <Freejack>	I've been playing with message queues for a while now...and find posix queues and Linx Queues to be extremely efficient.
| [Wednesday 23 March 2011] [02:11:09] <Freejack>	Linx Queues especially. Their like traveling at light speed compared to sockets over the LAN.
| [Wednesday 23 March 2011] [02:13:50] <Freejack>	sustrik: Besides...since ZeroMQ is in fact a high level MQ API, I figure the two would be a good match.
| [Wednesday 23 March 2011] [02:14:23] <sustrik>	sure
| [Wednesday 23 March 2011] [02:14:28] <sustrik>	go on with it
| [Wednesday 23 March 2011] [02:17:55] <Freejack>	Guess I'd better start grokking the code. bbl.
| [Wednesday 23 March 2011] [04:30:20] <pieterh>	sustrik: how easy is it to add a transport layer to 0MQ?
| [Wednesday 23 March 2011] [04:44:16] <sustrik>	pieterh: depends
| [Wednesday 23 March 2011] [04:44:39] <sustrik>	what transport do you have in mind?
| [Wednesday 23 March 2011] [04:45:17] <pieterh>	well, of course TLS/SSL for a start
| [Wednesday 23 March 2011] [04:45:25] <pieterh>	but more generally, any virtual stream
| [Wednesday 23 March 2011] [04:46:05] <pieterh>	we get these questions about implementing UDP, SCTP, etc. regularly
| [Wednesday 23 March 2011] [04:46:19] <pieterh>	and there is no good answer except "go study the code and send us a patch"
| [Wednesday 23 March 2011] [04:47:21] <pieterh>	have you ever looked at e.g. the Linux user-space file system (FUSE)?
| [Wednesday 23 March 2011] [04:50:10] <sustrik>	it would be nice to have standardised interface for transports
| [Wednesday 23 March 2011] [04:50:25] <sustrik>	however, it's hard to define it
| [Wednesday 23 March 2011] [04:50:57] <sustrik>	given the pretty large differences between trasnsports (inproc, pgm, tcp)
| [Wednesday 23 March 2011] [04:51:06] <sustrik>	as FUSE: no
| [Wednesday 23 March 2011] [04:59:00] <pieterh>	FUSE is just an analogy
| [Wednesday 23 March 2011] [04:59:25] <pieterh>	you can keep a bunch of native transports tightly bound to whatever...
| [Wednesday 23 March 2011] [04:59:43] <pieterh>	but it would be neat to have a virtual interface for stream transports
| [Wednesday 23 March 2011] [05:00:08] <pieterh>	e.g. I'd like to explore making a shmem transport, but where do I start?
| [Wednesday 23 March 2011] [05:00:54] <sustrik>	it's a connection-based transport, so have a look how tcp transport works
| [Wednesday 23 March 2011] [05:01:19] <sustrik>	zmq_listener_t, zmq_connecter_t, zmq_init_t, zmq_engine_t
| [Wednesday 23 March 2011] [05:01:33] <pieterh>	no, I'm not asking for documentation now, here, on IRC... :-)
| [Wednesday 23 March 2011] [05:02:36] <pieterh>	if tcp is the right model for all connected stream transports
| [Wednesday 23 March 2011] [05:02:55] <sustrik>	probably not
| [Wednesday 23 March 2011] [05:03:00] <sustrik>	no idea actually
| [Wednesday 23 March 2011] [05:03:03] <pieterh>	right
| [Wednesday 23 March 2011] [05:03:38] <pieterh>	IMO this is a major barrier to contributors able to extend 0MQ's transports
| [Wednesday 23 March 2011] [05:03:42] <sustrik>	agreed
| [Wednesday 23 March 2011] [05:04:46] <Guthur>	+1 that, hehe
| [Wednesday 23 March 2011] [05:05:01] <sustrik>	the question is how to define the interface
| [Wednesday 23 March 2011] [05:05:15] <sustrik>	right now 0mq doesn't do much for you
| [Wednesday 23 March 2011] [05:05:26] <pieterh>	well, it can IMO map the 0MQ API semantics
| [Wednesday 23 March 2011] [05:05:27] <sustrik>	there's a framework for launching async objects
| [Wednesday 23 March 2011] [05:05:32] <pieterh>	bind, connect, send, recv
| [Wednesday 23 March 2011] [05:05:41] <sustrik>	nope, it's event-driven
| [Wednesday 23 March 2011] [05:06:00] <sustrik>	another part of functionality, is pollers
| [Wednesday 23 March 2011] [05:06:09] <sustrik>	which allow you to register your fds
| [Wednesday 23 March 2011] [05:06:18] <sustrik>	and get events such as pollin and pollout
| [Wednesday 23 March 2011] [05:06:24] <pieterh>	so any transport layer has to export FDs
| [Wednesday 23 March 2011] [05:06:39] <pieterh>	is that how the pgm transport works?
| [Wednesday 23 March 2011] [05:06:41] <sustrik>	well, it can run a thread of it's own
| [Wednesday 23 March 2011] [05:06:48] <sustrik>	and ignore the I/O threads
| [Wednesday 23 March 2011] [05:06:55] <pieterh>	that's a good start IMO
| [Wednesday 23 March 2011] [05:06:55] <sustrik>	= standard pollers
| [Wednesday 23 March 2011] [05:07:35] <pieterh>	how about... a transport as a bridge?
| [Wednesday 23 March 2011] [05:07:40] <sustrik>	?
| [Wednesday 23 March 2011] [05:07:43] <pieterh>	hehe
| [Wednesday 23 March 2011] [05:07:53] <pieterh>	ok, this is crazy, but...
| [Wednesday 23 March 2011] [05:08:03] <pieterh>	transport X runs as its own thread, OK?
| [Wednesday 23 March 2011] [05:08:09] <pieterh>	it communicates purely over inproc
| [Wednesday 23 March 2011] [05:08:22] <pieterh>	define an inproc API back to 0MQ core
| [Wednesday 23 March 2011] [05:08:32] <pieterh>	*any* thread can register, use it, become a transport
| [Wednesday 23 March 2011] [05:09:06] <sustrik>	can you be more specific?
| [Wednesday 23 March 2011] [05:09:31] <pieterh>	I've not had coffee yet, I know close to nothing about the 0MQ internals, and you want more details? 
| [Wednesday 23 March 2011] [05:09:35] <pieterh>	:-)
| [Wednesday 23 March 2011] [05:09:52] <sustrik>	i don't understand what you meant, that's all
| [Wednesday 23 March 2011] [05:09:55] <ianbarber>	is that better than just writing a 0MQ bridge in 'userland'?
| [Wednesday 23 March 2011] [05:09:56] <ianbarber>	(not sure why i added scare quotes there :))
| [Wednesday 23 March 2011] [05:10:10] <pieterh>	ianbarber: it's exactly the same except it can be hidden as a transport
| [Wednesday 23 March 2011] [05:10:20] <pieterh>	i.e. you can plug in and plug out without changing code
| [Wednesday 23 March 2011] [05:10:33] <pieterh>	whereas if it's in userland, its architecturally significant
| [Wednesday 23 March 2011] [05:10:43] <pieterh>	it's FUSE by analogy
| [Wednesday 23 March 2011] [05:10:57] <ianbarber>	maybe have that functionality as a device or similar
| [Wednesday 23 March 2011] [05:11:00] <pieterh>	sustrik: specifics...
| [Wednesday 23 March 2011] [05:11:09] <pieterh>	a transport thread has to register, using some name
| [Wednesday 23 March 2011] [05:11:21] <pieterh>	that name becomes available to applications for binding and connecting
| [Wednesday 23 March 2011] [05:11:28] <sustrik>	that's inproc
| [Wednesday 23 March 2011] [05:11:32] <pieterh>	hang on
| [Wednesday 23 March 2011] [05:11:54] <pieterh>	the transport thread then accepts a set of control messages over inproc
| [Wednesday 23 March 2011] [05:11:57] <pieterh>	- bind to endpoint
| [Wednesday 23 March 2011] [05:12:00] <pieterh>	- connect to endpoint
| [Wednesday 23 March 2011] [05:12:06] <pieterh>	- send message
| [Wednesday 23 March 2011] [05:12:09] <pieterh>	- ?
| [Wednesday 23 March 2011] [05:12:26] <pieterh>	it returns events asynchronously
| [Wednesday 23 March 2011] [05:12:41] <pieterh>	obviously there has to be a peer inside 0MQ able to manage these threads and events
| [Wednesday 23 March 2011] [05:12:52] <pieterh>	so it's a virtualized transport
| [Wednesday 23 March 2011] [05:13:12] <pieterh>	now, I can write an SSL transport really simply
| [Wednesday 23 March 2011] [05:13:22] <pieterh>	or a transport that logs everything
| [Wednesday 23 March 2011] [05:13:35] <sustrik>	looks like an obvious case for layering on top of 0mq
| [Wednesday 23 March 2011] [05:13:48] <pieterh>	of course you can layer it on top but that's missing the point
| [Wednesday 23 March 2011] [05:13:53] <sustrik>	basically, 0mq is used as a transport between the "transport" and the user
| [Wednesday 23 March 2011] [05:14:07] <pieterh>	if you layer it at the bottom you get different effects
| [Wednesday 23 March 2011] [05:14:13] <pieterh>	again, please understand FUSE
| [Wednesday 23 March 2011] [05:14:25] <pieterh>	I can implement a file system in user space
| [Wednesday 23 March 2011] [05:14:37] <pieterh>	all my tools work on that file system, since it's just a virtualized transport layer
| [Wednesday 23 March 2011] [05:15:02] <pieterh>	in 0MQ jargon, my devices, brokers, etc. would automatically work over any virtualized transport
| [Wednesday 23 March 2011] [05:15:10] <sustrik>	ack, what's needed is an interface from kernel back to user space
| [Wednesday 23 March 2011] [05:15:16] <pieterh>	it's much, much, much cleaner than implementing the transport on top of 0MQ
| [Wednesday 23 March 2011] [05:15:19] <pieterh>	yes
| [Wednesday 23 March 2011] [05:15:28] <sustrik>	but we already have that :)
| [Wednesday 23 March 2011] [05:15:35] <sustrik>	it's inproc
| [Wednesday 23 March 2011] [05:15:47] <pieterh>	that's the transport for the interface, it's not the interface
| [Wednesday 23 March 2011] [05:16:20] <pieterh>	what I want is to inject user space code inside the 0MQ API, not on top of it
| [Wednesday 23 March 2011] [05:16:43] <pieterh>	but instead of going and modifying core and sending you a patch
| [Wednesday 23 March 2011] [05:16:44] <sustrik>	ok
| [Wednesday 23 March 2011] [05:16:51] <pieterh>	I want to write a thread that talks to your code, over inproc
| [Wednesday 23 March 2011] [05:16:56] <sustrik>	have a look at 0mq internals and find a way to do that
| [Wednesday 23 March 2011] [05:17:20] <pieterh>	i've just made it really easy for you to offer dozens of contributors a virtualized transport layer
| [Wednesday 23 March 2011] [05:17:29] <sustrik>	ack
| [Wednesday 23 March 2011] [05:17:48] <pieterh>	you know full well I'm not competent to look at the 0MQ internals and find a way to actually implement this
| [Wednesday 23 March 2011] [05:18:06] <pieterh>	if you want people to invest in new transport layers, do *not* tell them to go read the code
| [Wednesday 23 March 2011] [05:18:08] <pieterh>	it will not work
| [Wednesday 23 March 2011] [05:18:19] <pieterh>	it's basically saying "piss off" with a smile
| [Wednesday 23 March 2011] [05:18:19] <sustrik>	the point is that's it not obvious how to do it
| [Wednesday 23 March 2011] [05:18:30] <sustrik>	given that internally, 0mq uses very different model
| [Wednesday 23 March 2011] [05:18:38] <sustrik>	it's completely event driven
| [Wednesday 23 March 2011] [05:18:51] <sustrik>	so there's no such thing as say "connect"
| [Wednesday 23 March 2011] [05:18:51] <pieterh>	you can clearly make event driven APIs over inproc
| [Wednesday 23 March 2011] [05:19:28] <sustrik>	it's different kind of events, those that are passed via mailbox_t
| [Wednesday 23 March 2011] [05:19:33] <pieterh>	how many user contributed transports since 0MQ went fully open source?
| [Wednesday 23 March 2011] [05:19:34] <sustrik>	see command.hpp
| [Wednesday 23 March 2011] [05:19:41] <sustrik>	none
| [Wednesday 23 March 2011] [05:19:53] <sustrik>	you don't have to convince me
| [Wednesday 23 March 2011] [05:19:56] <pieterh>	and this is the reason IMO, no abstract interface
| [Wednesday 23 March 2011] [05:20:02] <sustrik>	i am all for standardised transport API
| [Wednesday 23 March 2011] [05:20:10] <sustrik>	i just don't know how to implement it
| [Wednesday 23 March 2011] [05:20:13] <sustrik>	that's it
| [Wednesday 23 March 2011] [05:20:27] <pieterh>	well, forget efficiency as such, this is about extensibility, not performance
| [Wednesday 23 March 2011] [05:20:41] <pieterh>	what are the events passed via mailboxes?
| [Wednesday 23 March 2011] [05:21:03] <sustrik>	internal events, such as "there's a new pipe you should start dealing with"
| [Wednesday 23 March 2011] [05:21:30] <pieterh>	so how about pipes extended across inproc?
| [Wednesday 23 March 2011] [05:21:35] <pieterh>	logically, I mean
| [Wednesday 23 March 2011] [05:21:56] <sustrik>	the concept is that the pipe itself is agnostic about who's on the either end of it
| [Wednesday 23 March 2011] [05:22:03] <pieterh>	we already have this virtualized interface internally, with mailboxes and pipes
| [Wednesday 23 March 2011] [05:22:11] <sustrik>	with inproc, there's a socket on both ends
| [Wednesday 23 March 2011] [05:22:25] <sustrik>	with tcp, there's a socket on one end and a session on the other
| [Wednesday 23 March 2011] [05:22:27] <pieterh>	yes, but you can hide that, obviously
| [Wednesday 23 March 2011] [05:22:37] <sustrik>	propose a way
| [Wednesday 23 March 2011] [05:22:42] <sustrik>	it's not easy
| [Wednesday 23 March 2011] [05:22:51] <sustrik>	i've spent a lot of time thinking about it
| [Wednesday 23 March 2011] [05:22:59] <sustrik>	but haven't get to anything sensible so far
| [Wednesday 23 March 2011] [05:23:13] <pieterh>	well, thinking by yourself is not often a very productive process...
| [Wednesday 23 March 2011] [05:23:27] <sustrik>	sure, feel free to help
| [Wednesday 23 March 2011] [05:23:33] <pieterh>	this is what I'm doing now
| [Wednesday 23 March 2011] [05:23:42] <pieterh>	or trying to, anyhow
| [Wednesday 23 March 2011] [05:23:51] <sustrik>	well, have a look at the internals first
| [Wednesday 23 March 2011] [05:23:58] <sustrik>	so that you have an idea of how it works
| [Wednesday 23 March 2011] [05:24:04] <pieterh>	is this documented somewhere?
| [Wednesday 23 March 2011] [05:24:12] <sustrik>	source code
| [Wednesday 23 March 2011] [05:24:22] <pieterh>	asking me to read C++ code simply to discuss architecture is a waste of my time, sorry
| [Wednesday 23 March 2011] [05:24:37] <sustrik>	ok, let it be then
| [Wednesday 23 March 2011] [05:24:51] 	 * sustrik is doing accounting today
| [Wednesday 23 March 2011] [05:25:26] <ianbarber>	one thing that maybe is worth considering for connectors is just sticking the files into a different directory
| [Wednesday 23 March 2011] [05:25:53] <pieterh>	ianbarber: what connectors, and what files? I'm confused
| [Wednesday 23 March 2011] [05:26:00] <ianbarber>	for the transports, sorry
| [Wednesday 23 March 2011] [05:26:14] <pieterh>	actually I'd like to not even use inproc but IPC
| [Wednesday 23 March 2011] [05:26:19] <pieterh>	so a transport can be a separate process
| [Wednesday 23 March 2011] [05:26:33] <ianbarber>	so like, once i realised there would be a connector and a socket and listener, it was easier to browse around
| [Wednesday 23 March 2011] [05:26:54] <pieterh>	ah, you mean organization of the 0MQ source code?
| [Wednesday 23 March 2011] [05:26:57] <ianbarber>	and in terms of people building new ones, the best reference is usually other examples
| [Wednesday 23 March 2011] [05:26:57] <ianbarber>	yeah
| [Wednesday 23 March 2011] [05:27:08] <pieterh>	yeah, nice
| [Wednesday 23 March 2011] [05:27:20] <pieterh>	so all the code for one transport is actually identifiable in one place
| [Wednesday 23 March 2011] [05:27:24] <ianbarber>	yeah
| [Wednesday 23 March 2011] [05:27:29] <pieterh>	excellent suggestion
| [Wednesday 23 March 2011] [05:27:32] <pieterh>	send a patch to the list
| [Wednesday 23 March 2011] [05:27:44] <pieterh>	:-) sorry, just being facetious
| [Wednesday 23 March 2011] [05:28:03] 	 * pieterh really needs a coffee
| [Wednesday 23 March 2011] [05:28:26] <pieterh>	sustrik: if this all ends up with me learning C++ I'm seriously never going to forgive you
| [Wednesday 23 March 2011] [05:28:38] <sustrik>	:)
| [Wednesday 23 March 2011] [05:29:00] <sustrik>	here's a beginning of a design document:
| [Wednesday 23 March 2011] [05:29:00] <sustrik>	http://www.zeromq.org/whitepapers:architecture
| [Wednesday 23 March 2011] [05:29:10] <sustrik>	i never had time to finish it though
| [Wednesday 23 March 2011] [05:30:07] <ianbarber>	oh, this looks like a good start!
| [Wednesday 23 March 2011] [05:30:42] <ianbarber>	already helpful
| [Wednesday 23 March 2011] [05:30:53] <sustrik>	if only it was at least 5x longer :|
| [Wednesday 23 March 2011] [05:31:18] <pieterh>	it's a good start, I just clicked the 'rating +1' button
| [Wednesday 23 March 2011] [05:31:56] <pieterh>	I think ianbarber's idea of moving submodules to their own directory is neat, though just using naming conventions is often simpler
| [Wednesday 23 March 2011] [05:32:04] <pieterh>	i.e. zmq_tcp_whatever
| [Wednesday 23 March 2011] [05:32:19] <sustrik>	the problem is that's it's a mess atm
| [Wednesday 23 March 2011] [05:32:33] <sustrik>	there are pieces of tcp even in other files
| [Wednesday 23 March 2011] [05:32:41] <pieterh>	yes, this is often how it happens
| [Wednesday 23 March 2011] [05:32:49] <sustrik>	the consequence of not having a clean interface
| [Wednesday 23 March 2011] [05:33:01] <pieterh>	part of the benefit of making a pluggable architecture is you're forced to make it clean
| [Wednesday 23 March 2011] [05:33:11] <sustrik>	full-heartedly agreed
| [Wednesday 23 March 2011] [05:33:25] <pieterh>	sigh, I regret not being able to help, really
| [Wednesday 23 March 2011] [05:36:20] <sustrik>	np, it'll get sorted out eventually
| [Wednesday 23 March 2011] [05:37:50] <sustrik>	pieterh: an idea, maybe you can move the rationale for zmq_msg_t design into the arch document?
| [Wednesday 23 March 2011] [05:37:59] <sustrik>	it kind of belongs there
| [Wednesday 23 March 2011] [05:38:11] <pieterh>	yes, that's where it belongs, indeed... let me do that
| [Wednesday 23 March 2011] [05:38:23] <pieterh>	I will also link to the arch document from the main wiki page
| [Wednesday 23 March 2011] [05:38:29] <pieterh>	we need more focus on the core codebase IMO
| [Wednesday 23 March 2011] [05:39:33] <sustrik>	ok
| [Wednesday 23 March 2011] [05:46:02] <pieterh>	ok, all done
| [Wednesday 23 March 2011] [05:46:13] <pieterh>	I also renamed the GSoC page to be reusable
| [Wednesday 23 March 2011] [05:50:06] <Guthur>	is the labs page the only source for examples of people using 0MQ in anger?
| [Wednesday 23 March 2011] [06:04:17] <pieterh>	Guthur: yes, that and Google
| [Wednesday 23 March 2011] [06:08:55] <pieterh>	sustrik: random idea, sorry to interrupt your accounting...
| [Wednesday 23 March 2011] [06:09:25] <valmac>	no body
| [Wednesday 23 March 2011] [06:09:39] <valmac>	wow! how many people
| [Wednesday 23 March 2011] [06:09:47] <valmac>	good day!
| [Wednesday 23 March 2011] [06:11:45] <mikko-->	hi
| [Wednesday 23 March 2011] [06:12:00] <pieterh>	mikko--: hello sir
| [Wednesday 23 March 2011] [06:20:52] <valmac>	poka poka
| [Wednesday 23 March 2011] [06:36:28] <arvind>	hi guys need a small info regarding ZMQ_PULL queue.. anyone around
| [Wednesday 23 March 2011] [06:38:50] <pieterh>	arvind: shoot...
| [Wednesday 23 March 2011] [06:48:30] <arvind>	hi
| [Wednesday 23 March 2011] [06:48:34] <arvind>	thanks
| [Wednesday 23 March 2011] [06:48:52] <arvind>	well i have a PUSH PULL queue working great using IPCmode..
| [Wednesday 23 March 2011] [06:49:01] <pieterh>	ok
| [Wednesday 23 March 2011] [06:49:40] <arvind>	but when i have set up my push pull queue, the PUSH side has no ZMQ_HWM or SWAP setup
| [Wednesday 23 March 2011] [06:49:47] <arvind>	and so is the PULL side..
| [Wednesday 23 March 2011] [06:50:25] <pieterh>	ok
| [Wednesday 23 March 2011] [06:50:33] <pieterh>	what is your question?
| [Wednesday 23 March 2011] [06:50:38] <arvind>	noticed that when the PULL side gets a bit slower then PUSH side, i don't lose any messages, but the MEMORY size on the PULL side process starts increasing
| [Wednesday 23 March 2011] [06:50:47] <pieterh>	yes, this is normal
| [Wednesday 23 March 2011] [06:51:12] <arvind>	and the issue is the memory does not seem to come down even after the PULL side process picks up everything..
| [Wednesday 23 March 2011] [06:51:35] <pieterh>	that is a side-effect of the operating system, probably
| [Wednesday 23 March 2011] [06:51:49] <arvind>	as in ?? sorry did not get that..
| [Wednesday 23 March 2011] [06:52:02] <arvind>	i am using freebsd by the way..
| [Wednesday 23 March 2011] [06:52:14] <pieterh>	either it does not reduce VM size of process, or it does not return smaller allocations to heap
| [Wednesday 23 March 2011] [06:52:59] <pieterh>	alternatively
| [Wednesday 23 March 2011] [06:53:10] <pieterh>	you are not properly closing messages in your PULL code
| [Wednesday 23 March 2011] [06:53:17] <pieterh>	you may have a simple leak
| [Wednesday 23 March 2011] [06:53:20] <arvind>	oh ok...  actually its the top command output that shows this increase in MEM
| [Wednesday 23 March 2011] [06:53:34] <arvind>	well i thought so, and verified it ..
| [Wednesday 23 March 2011] [06:53:37] <pieterh>	it is simple to test, run under valgrind
| [Wednesday 23 March 2011] [06:54:01] <pieterh>	if that reports all memory properly freed, it is an artifact of FreeBSD and/or runtime memory management
| [Wednesday 23 March 2011] [06:54:38] <arvind>	ok.. so just wanted to confirm that i had missed any flag for this kind of behavior..
| [Wednesday 23 March 2011] [06:54:58] <arvind>	sorry "NOT MISSED"
| [Wednesday 23 March 2011] [06:55:14] <pieterh>	nothing special, this seems to happen... there is some work going on to try to make this work better
| [Wednesday 23 March 2011] [06:55:41] <arvind>	great and last question...
| [Wednesday 23 March 2011] [06:56:00] <arvind>	should i set the HWM and SWAP config on the PULL side socket too ??
| [Wednesday 23 March 2011] [06:56:26] <pieterh>	if you use top, note that VIRT and RES are very different
| [Wednesday 23 March 2011] [06:57:05] <pieterh>	you can set HWM and SWAP on the PULL socket but I've not actually tried that to see what happens
| [Wednesday 23 March 2011] [06:57:07] <arvind>	yes both VIRT and RES both seem to increase and stay there even when there are no more writes into the queue and everything in the queue is read
| [Wednesday 23 March 2011] [06:58:03] <pieterh>	it doesn't look like a happy process, but I've no more info on the causes than "this happens, it's not a leak"
| [Wednesday 23 March 2011] [06:58:39] <arvind>	ok
| [Wednesday 23 March 2011] [06:58:52] <arvind>	hey thanks for sharing the info..
| [Wednesday 23 March 2011] [06:59:06] <arvind>	 will debug more and maybe update the behavior on the mailing list too..
| [Wednesday 23 March 2011] [06:59:29] <pieterh>	anything you can dig up would be useful
| [Wednesday 23 March 2011] [06:59:38] <arvind>	sure thanks
| [Wednesday 23 March 2011] [07:00:43] <onceuponatime>	Hi everybody
| [Wednesday 23 March 2011] [07:01:00] <onceuponatime>	I just downloaded the latest version of zeromq
| [Wednesday 23 March 2011] [07:01:10] <onceuponatime>	and installed the php binding
| [Wednesday 23 March 2011] [07:01:32] <onceuponatime>	and when loading the zmq extension the following error is logged:
| [Wednesday 23 March 2011] [07:01:35] <onceuponatime>	PHP Warning:  PHP Startup: Unable to load dynamic library '/Applications/MAMP/bin/php5.3/lib/php/extensions/no-debug-non-zts-20090626/zmq.so' - dlopen(/Applications/MAMP/bin/php5.3/lib/php/extensions/no-debug-non-zts-20090626/zmq.so, 9): no suitable image found.  Did find:
| [Wednesday 23 March 2011] [07:01:35] <onceuponatime>		/Applications/MAMP/bin/php5.3/lib/php/extensions/no-debug-non-zts-20090626/zmq.so: mach-o, but wrong architecture in Unknown on line 0
| [Wednesday 23 March 2011] [07:01:48] <onceuponatime>	does anyone have any idea what is going on?
| [Wednesday 23 March 2011] [07:02:18] <onceuponatime>	Im doing it in Mac OS X
| [Wednesday 23 March 2011] [07:03:01] <pieterh>	not an expert in PHP on OS X but the message seems self-explanatory
| [Wednesday 23 March 2011] [07:03:33] <onceuponatime>	so it is not supported for mac os x 64 bit
| [Wednesday 23 March 2011] [07:03:35] <pieterh>	you're trying, it seems, to use a zmq.so built for a different architecture
| [Wednesday 23 March 2011] [07:03:58] <onceuponatime>	?
| [Wednesday 23 March 2011] [07:04:01] <pieterh>	I'd suggest rebuilding the PHP binding on your box
| [Wednesday 23 March 2011] [07:04:16] <onceuponatime>	I built it on my box
| [Wednesday 23 March 2011] [07:05:00] <pieterh>	hmm
| [Wednesday 23 March 2011] [07:05:17] <pieterh>	ianbarber: ever used 0MQ/PHP on OS X?
| [Wednesday 23 March 2011] [07:05:41] <so_solid_moo>	it probably just guessed the wrong arch when it build
| [Wednesday 23 March 2011] [07:06:09] <so_solid_moo>	I would use 'file' to check other php extensions and see what that is compiled as
| [Wednesday 23 March 2011] [07:09:43] <onceuponatime>	ok thanks, I just had a wrong reference to the pecl binnary and it took the wrong config file when installing the extension
| [Wednesday 23 March 2011] [07:10:02] <pieterh>	onceuponatime: would you like to add this to the tips page?
| [Wednesday 23 March 2011] [07:10:07] <pieterh>	http://zero.mq/tips
| [Wednesday 23 March 2011] [07:11:32] <onceuponatime>	well, it is just use the pear && pecl files within MAMP dir
| [Wednesday 23 March 2011] [07:12:13] <pieterh>	perhaps add this to the PHP binding page then
| [Wednesday 23 March 2011] [07:13:15] <mikko-->	CWW scheduled for 1 April 2011: yes
| [Wednesday 23 March 2011] [07:13:22] <mikko-->	ermm
| [Wednesday 23 March 2011] [07:13:26] <mikko-->	onceuponatime
| [Wednesday 23 March 2011] [07:13:30] <mikko-->	i got a fix for that
| [Wednesday 23 March 2011] [07:13:36] <mikko-->	steve-o !
| [Wednesday 23 March 2011] [07:14:15] <Steve-o_>	yo
| [Wednesday 23 March 2011] [07:14:30] <onceuponatime>	what fix?
| [Wednesday 23 March 2011] [07:14:30] <mikko-->	onceuponatime: https://github.com/mkoppanen/php-zmq/issues/20
| [Wednesday 23 March 2011] [07:14:40] <mikko-->	this reported had the same issue
| [Wednesday 23 March 2011] [07:15:07] <onceuponatime>	cool, thx mikko-- 
| [Wednesday 23 March 2011] [07:15:07] <mikko-->	i boils down that both libzmq and php extension need to built with 32bit or 64 bit
| [Wednesday 23 March 2011] [07:15:12] <mikko-->	what ever matches your apache
| [Wednesday 23 March 2011] [07:22:06] <Steve-o_>	mikko: had me concerned I broke Solaris again there, just checked it's fine :P
| [Wednesday 23 March 2011] [07:23:27] <sustrik>	re
| [Wednesday 23 March 2011] [07:23:47] <pieterh>	sustrik: I'm making the zapi context wrapper threadsafe
| [Wednesday 23 March 2011] [07:23:55] <sustrik>	ok
| [Wednesday 23 March 2011] [07:24:04] <pieterh>	am inspired by your explanation "MQ's concurency model may a bit confusing at first. The reason is that we eat our own dogfood and use message passing to achieve concurrency and internal scalability."
| [Wednesday 23 March 2011] [07:24:11] <pieterh>	:-)
| [Wednesday 23 March 2011] [07:24:22] <sustrik>	wait a sec, context wrapper?
| [Wednesday 23 March 2011] [07:24:27] <pieterh>	haha
| [Wednesday 23 March 2011] [07:24:27] <sustrik>	context is thread safe
| [Wednesday 23 March 2011] [07:24:37] <sustrik>	no need to add any synchronisation there
| [Wednesday 23 March 2011] [07:24:46] <tjgillies>	http://draw.nostat.us
| [Wednesday 23 March 2011] [07:24:59] <pieterh>	zapi's context wrapper does things like automatically close all open sockets, emulate 2.0 zmq_term if you want it, etc.
| [Wednesday 23 March 2011] [07:25:10] <sustrik>	ok
| [Wednesday 23 March 2011] [07:26:07] <mikko-->	Steve-o_: thanks for the tip on automake thing
| [Wednesday 23 March 2011] [07:26:09] <mikko-->	works like a dream
| [Wednesday 23 March 2011] [07:26:10] <pieterh>	so the approach is to start an agent thread that does the real work, and talk to it over inproc
| [Wednesday 23 March 2011] [07:26:39] <Steve-o_>	mikko: I saw, Google can be awesome at times
| [Wednesday 23 March 2011] [07:26:57] <mikko-->	Steve-o_: i knew that something like that must exist but used the wrong search terms
| [Wednesday 23 March 2011] [07:27:11] <mikko-->	i searched for something like "prevent automake install in subdirs"
| [Wednesday 23 March 2011] [07:27:18] <mikko-->	came up with a lot of irrelevant results
| [Wednesday 23 March 2011] [07:30:35] <Steve-o_>	Your Google-fu is weak master Mikko
| [Wednesday 23 March 2011] [07:30:46] <Steve-o_>	I used "stop recursive make install"
| [Wednesday 23 March 2011] [07:31:16] <pieterh>	heh, I love IRC
| [Wednesday 23 March 2011] [07:31:45] <pieterh>	meanwhile people are still struggling with stuff like this:
| [Wednesday 23 March 2011] [07:31:48] <pieterh>	"Reminder:  Due to the DST clock change in the US, a couple of weeks ago, phone conference will again commence 1 hour earlier for those dialling in from Europe/Asia."
| [Wednesday 23 March 2011] [08:02:43] <Guthur>	pieterh: do you have a phone conference re 0MQ?
| [Wednesday 23 March 2011] [08:03:00] <pieterh>	Guthur: no, I get invited to these things, which I try to ignore
| [Wednesday 23 March 2011] [08:03:12] <pieterh>	it's most definitely not 0MQ... :-)
| [Wednesday 23 March 2011] [08:12:09] <mikko-->	Steve-o_: yeah, that is true
| [Wednesday 23 March 2011] [08:12:31] <mikko-->	Steve-o_: anyway, thanks for the work on autoconf stuff. it makes things million times easier on zeromq side
| [Wednesday 23 March 2011] [08:15:33] <djc>	I
| [Wednesday 23 March 2011] [08:15:42] <djc>	'm hitting an assert in a Python client
| [Wednesday 23 March 2011] [08:15:50] <djc>	I can see where the assert comes from, but not sure why it hits
| [Wednesday 23 March 2011] [08:16:05] <djc>	it's in 2.0 zeromq, req.cpp:225
| [Wednesday 23 March 2011] [08:20:04] <sustrik>	looks like someone is sending junk to the socket
| [Wednesday 23 March 2011] [08:20:48] <sustrik>	maybe you are connecting it by an incompatible socket type?
| [Wednesday 23 March 2011] [08:24:40] <djc>	mmm, pretty sure I'm not
| [Wednesday 23 March 2011] [08:25:00] <djc>	ah, wait
| [Wednesday 23 March 2011] [08:25:04] <pieterh>	djc: can you please post a minimal test case?
| [Wednesday 23 March 2011] [08:25:23] <pieterh>	this is explained on http://www.zeromq.org/intro:ask-for-help
| [Wednesday 23 March 2011] [08:25:52] <djc>	already fixed it, sorry about that
| [Wednesday 23 March 2011] [08:25:58] <djc>	was referencing an endpoint of the wrong type
| [Wednesday 23 March 2011] [08:26:17] <djc>	at least now my server segfaults :P
| [Wednesday 23 March 2011] [08:26:18] <pieterh>	sustrik: can we not assert when getting junk on a socket?
| [Wednesday 23 March 2011] [08:26:36] <pieterh>	or this has already been removed in 2.1 and later?
| [Wednesday 23 March 2011] [08:26:41] 	 * pieterh should read tf code
| [Wednesday 23 March 2011] [08:26:47] <djc>	2.1 has very different code, already looked at that
| [Wednesday 23 March 2011] [08:26:56] <sustrik>	there were several related fixes in 2.1
| [Wednesday 23 March 2011] [08:27:12] <pieterh>	djc: any specific reason you're still using 2.0?
| [Wednesday 23 March 2011] [08:29:58] <djc>	because it's the stable version
| [Wednesday 23 March 2011] [08:30:25] <djc>	or, I guess, was, until two days ago :P
| [Wednesday 23 March 2011] [08:30:29] <djc>	I'll see about upgrading :)
| [Wednesday 23 March 2011] [08:30:43] <pieterh>	please do so, 2.1 fixes a *lot* of issues in 2.0
| [Wednesday 23 March 2011] [08:31:01] <djc>	I definitely wanted to, but decided to wait until y'all would tag it stable
| [Wednesday 23 March 2011] [08:31:11] <pieterh>	plus we have no intention of fixing any issues reported in 2.0 unless they are also in 2.1
| [Wednesday 23 March 2011] [08:31:48] <pieterh>	ok, thanks for the explanation, was just curious
| [Wednesday 23 March 2011] [08:47:28] <Guthur>	You know after the 'discussion' last night on the mailing list I started to think more about the XREP/XREQ, and I was wondering what exactly they were intended for if not for ROUTER/DEALER type patterns
| [Wednesday 23 March 2011] [08:48:52] <pieterh>	Guthur: me too, and afaics routing is exactly a core mechanism for returning stuff to sender, i.e. what xrep does
| [Wednesday 23 March 2011] [08:50:32] <Guthur>	I think it might be a prime example that if you expose something like this, people will use and abuse it
| [Wednesday 23 March 2011] [08:50:49] <pieterh>	that was an original argument for not documenting xrep/xreq
| [Wednesday 23 March 2011] [08:50:57] <pieterh>	but I don't see how to make real code without this
| [Wednesday 23 March 2011] [08:51:23] <pieterh>	e.g. I'm making a request-reply chain right now, between two threads
| [Wednesday 23 March 2011] [08:51:36] <pieterh>	if I use req/rep, it has to be lock-step, every request MUST send a reply
| [Wednesday 23 March 2011] [08:51:41] <Guthur>	well I could possibly see some saying that you need to use a different product for routing
| [Wednesday 23 March 2011] [08:51:48] <pieterh>	but using dealer/router I can send requests that don't need replies
| [Wednesday 23 March 2011] [08:51:57] <Guthur>	not that I would necessarily agree just that I can see that arguement
| [Wednesday 23 March 2011] [08:52:29] <pieterh>	also I can't see how user space divides into cases that want router semantics and those that want xrep semantics
| [Wednesday 23 March 2011] [08:52:37] <pieterh>	that is a senseless division, it just isn't there
| [Wednesday 23 March 2011] [08:52:50] <pieterh>	unless you count 100% and 0% as a division
| [Wednesday 23 March 2011] [08:53:07] <Guthur>	hehe, I stillhave to keep checking back to the guide to see which is the router and the dealer
| [Wednesday 23 March 2011] [08:53:14] <Guthur>	I need to write it on my hand or something
| [Wednesday 23 March 2011] [08:53:28] <pieterh>	well, the one exception I can see is a simplistic req/rep device, but there are no real use cases for those
| [Wednesday 23 March 2011] [08:53:36] <pieterh>	dealer is push+pull, remember that
| [Wednesday 23 March 2011] [08:53:45] <pieterh>	it does nothing with envelopes
| [Wednesday 23 March 2011] [08:54:04] <sustrik>	the problem is that req/rep is going to evolve
| [Wednesday 23 March 2011] [08:54:20] <Guthur>	oh that bit is fine I just keep forgetting which XREQ/XREP is the DEALER/ROUTER
| [Wednesday 23 March 2011] [08:54:21] <sustrik>	and can undeliberately break the other use case
| [Wednesday 23 March 2011] [08:54:22] <pieterh>	sustrik: you need to clarify that, it's much too vague as an argument
| [Wednesday 23 March 2011] [08:54:23] <sustrik>	cases
| [Wednesday 23 March 2011] [08:54:33] <pieterh>	i agree in theory, just can't see it in practice
| [Wednesday 23 March 2011] [08:54:51] <sustrik>	well, imagine the alternative routing algorithm
| [Wednesday 23 March 2011] [08:54:52] <pieterh>	anything could evolve
| [Wednesday 23 March 2011] [08:54:59] <sustrik>	i've described it in one email
| [Wednesday 23 March 2011] [08:55:12] <pieterh>	you described something that had no design afaics...
| [Wednesday 23 March 2011] [08:55:17] <sustrik>	?
| [Wednesday 23 March 2011] [08:55:24] <Guthur>	the other case where REQ/REP falls down is the strict request/reply pattern
| [Wednesday 23 March 2011] [08:55:36] <pieterh>	well, sorry, I didn't understand the design then
| [Wednesday 23 March 2011] [08:55:52] <pieterh>	to get a reply back to a sender, across a chain, you need an address stack
| [Wednesday 23 March 2011] [08:55:56] <sustrik>	the idea was to keep routing table in nodes
| [Wednesday 23 March 2011] [08:56:04] <sustrik>	instead of in the message itself
| [Wednesday 23 March 2011] [08:56:12] <sustrik>	similar to how IP behaves
| [Wednesday 23 March 2011] [08:56:13] <pieterh>	and if a node crashes?
| [Wednesday 23 March 2011] [08:56:21] <sustrik>	same as now
| [Wednesday 23 March 2011] [08:56:24] <sustrik>	the message is dropped
| [Wednesday 23 March 2011] [08:56:35] <pieterh>	no, now I can resend via a different route
| [Wednesday 23 March 2011] [08:56:35] <sustrik>	anyway, it's probably not viable
| [Wednesday 23 March 2011] [08:56:48] <pieterh>	if it's not viable, please don't raise it as a realistic case... :-(
| [Wednesday 23 March 2011] [08:56:59] <sustrik>	the point, however, is that it would break req/rep used for something else than req/rep
| [Wednesday 23 March 2011] [08:57:06] <pieterh>	it's all req/rep
| [Wednesday 23 March 2011] [08:57:11] <pieterh>	routing is req/rep
| [Wednesday 23 March 2011] [08:57:21] <pieterh>	there are no illegal semantics here
| [Wednesday 23 March 2011] [08:57:22] <sustrik>	no point in discussing this
| [Wednesday 23 March 2011] [08:57:36] <sustrik>	once it break, we'll have to find the solution
| [Wednesday 23 March 2011] [08:57:38] <pieterh>	well, you say that when you don't want to discuss stuff
| [Wednesday 23 March 2011] [08:57:53] <sustrik>	we don't have the problem yet
| [Wednesday 23 March 2011] [08:57:56] <pieterh>	yet this is very sensitive to people and when you say you might break it all... you'll get discussion
| [Wednesday 23 March 2011] [08:58:09] <pieterh>	I wrote two entire chapters on req-rep
| [Wednesday 23 March 2011] [08:58:12] <sustrik>	well, you are asking for the problem
| [Wednesday 23 March 2011] [08:58:16] <sustrik>	there's none yet
| [Wednesday 23 March 2011] [08:58:20] <sustrik>	will be in the future
| [Wednesday 23 March 2011] [08:58:33] <Guthur>	sustrik: we will face this problem for 3.0 though, correct?
| [Wednesday 23 March 2011] [08:58:43] <Guthur>	or is it going to be deferred for later
| [Wednesday 23 March 2011] [08:58:53] <sustrik>	not immediately
| [Wednesday 23 March 2011] [08:58:59] <pieterh>	'there will be change in the future' is kind of ... anyhow...
| [Wednesday 23 March 2011] [08:59:11] 	 * pieterh just wants a sane vocabulary
| [Wednesday 23 March 2011] [08:59:26] <sustrik>	well, as i said, no immediate problem
| [Wednesday 23 March 2011] [08:59:40] <pieterh>	i'm all open to new routing semantics
| [Wednesday 23 March 2011] [08:59:50] <sustrik>	however, separating the routing pattern from req/rep pattern would help to prevent the clash in the future
| [Wednesday 23 March 2011] [08:59:52] <pieterh>	but the ones we have, are precious
| [Wednesday 23 March 2011] [09:00:04] <pieterh>	sustrik: please, it's not separable
| [Wednesday 23 March 2011] [09:00:11] <pieterh>	it is part of the same package... sigh
| [Wednesday 23 March 2011] [09:00:12] <sustrik>	shrug
| [Wednesday 23 March 2011] [09:00:14] <sustrik>	never mind
| [Wednesday 23 March 2011] [09:00:28] 	 * sustrik is back to accounting
| [Wednesday 23 March 2011] [09:00:29] <Guthur>	hehe, alot of circling going on
| [Wednesday 23 March 2011] [09:00:32] <pieterh>	you are suggesting making divisions that won't help anyone
| [Wednesday 23 March 2011] [09:00:46] <pieterh>	leave it, it works, just let the syntax get cleaner
| [Wednesday 23 March 2011] [09:00:47] <Guthur>	sorry for stirring it up again
| [Wednesday 23 March 2011] [09:00:49] <sustrik>	Guthur: here's some background to req/rep design
| [Wednesday 23 March 2011] [09:00:57] <sustrik>	see Request/reply chapter
| [Wednesday 23 March 2011] [09:01:43] <pieterh>	sustrik: I'll make the analogy with AMQP and the desire of architects to "get it right"
| [Wednesday 23 March 2011] [09:01:54] <pieterh>	it takes years to collectively learn these patterns properly
| [Wednesday 23 March 2011] [09:02:25] <pieterh>	if you arbitrarily put that investment into question, you will get into trouble
| [Wednesday 23 March 2011] [09:02:34] <pieterh>	change has to be worth it for users
| [Wednesday 23 March 2011] [09:02:45] <Guthur>	sustrik: chapter in the manual 
| [Wednesday 23 March 2011] [09:02:45] <pieterh>	this is the cost of success
| [Wednesday 23 March 2011] [09:02:48] <Guthur>	?
| [Wednesday 23 March 2011] [09:03:11] <sustrik>	Guthur: http://www.250bpm.com/hits
| [Wednesday 23 March 2011] [09:05:41] <pieterh>	sustrik: one difficulty with this discussion is you are thinking 10-50 years into the future
| [Wednesday 23 March 2011] [09:05:52] <sustrik>	someone has to :)
| [Wednesday 23 March 2011] [09:05:56] <pieterh>	yes
| [Wednesday 23 March 2011] [09:06:09] <pieterh>	but you see Guthur's question, "will this change affect 3.0?"
| [Wednesday 23 March 2011] [09:06:20] <pieterh>	the timescales here, in this community, are usually weeks or months
| [Wednesday 23 March 2011] [09:06:27] <sustrik>	yup
| [Wednesday 23 March 2011] [09:07:04] <pieterh>	goodo, we'll embrace this tension, it's healthy
| [Wednesday 23 March 2011] [09:07:11] <sustrik>	i think so
| [Wednesday 23 March 2011] [09:07:18] <sustrik>	more amusing as well
| [Wednesday 23 March 2011] [09:07:23] <pieterh>	just don't go do a JOH on us... 
| [Wednesday 23 March 2011] [09:07:33] <sustrik>	not my intention
| [Wednesday 23 March 2011] [09:07:40] <pieterh>	yeah, forgive my paranoia
| [Wednesday 23 March 2011] [09:07:55] <sustrik>	however, i have to have clear pattern separation to get anything sensible in the long term
| [Wednesday 23 March 2011] [09:08:08] <sustrik>	btw, i've recalled you "content classes" in AMQP
| [Wednesday 23 March 2011] [09:08:09] <pieterh>	I think stretching 0MQ across these scales is perhaps the most interesting problem I've seen in decades
| [Wednesday 23 March 2011] [09:08:17] <sustrik>	it's basically the same idea
| [Wednesday 23 March 2011] [09:08:20] <pieterh>	oh, content classes... lol
| [Wednesday 23 March 2011] [09:08:29] <sustrik>	vertical separation of the stack
| [Wednesday 23 March 2011] [09:08:36] <pieterh>	shot in the back of the head, thrown into the ditch of ignorance... :-)
| [Wednesday 23 March 2011] [09:09:11] <sustrik>	so the idea is that there a vertical segment of the stack called req/rep
| [Wednesday 23 March 2011] [09:09:23] <sustrik>	which is a dumb 1 request followed by 1 reply thing
| [Wednesday 23 March 2011] [09:09:41] <Guthur>	what's a JOH?
| [Wednesday 23 March 2011] [09:09:42] <pieterh>	this stops working real fast, though
| [Wednesday 23 March 2011] [09:09:53] <sustrik>	not imo, but that's not the point
| [Wednesday 23 March 2011] [09:10:05] <pieterh>	Guthur: a JOH is a mythical beast that creates havoc by randomly changing fundamental architecture for no good reason
| [Wednesday 23 March 2011] [09:10:07] <sustrik>	the point is that's it vertically separated from different patterns
| [Wednesday 23 March 2011] [09:10:12] <sustrik>	such as pub/sub
| [Wednesday 23 March 2011] [09:10:15] <pieterh>	yes, agreed
| [Wednesday 23 March 2011] [09:10:34] <sustrik>	now, given that people are using req/rep to do something that is not strictly speaking req/rep
| [Wednesday 23 March 2011] [09:10:40] <pieterh>	ah
| [Wednesday 23 March 2011] [09:10:48] <pieterh>	but router/dealer are strictly part of req/rep
| [Wednesday 23 March 2011] [09:10:50] <sustrik>	i am proposing to create a new vertical slot
| [Wednesday 23 March 2011] [09:10:58] <pieterh>	this is where you are purely wrong IMO
| [Wednesday 23 March 2011] [09:11:18] <sustrik>	can router route two replies to a single request?
| [Wednesday 23 March 2011] [09:11:21] <pieterh>	speaking as a user of 0MQ, router/dealer are essentially just async req/rep
| [Wednesday 23 March 2011] [09:11:25] <sustrik>	if so, it's not "strict" req/rep
| [Wednesday 23 March 2011] [09:11:30] <pieterh>	and async req/rep is the majority pattern
| [Wednesday 23 March 2011] [09:11:37] <sustrik>	async is ok
| [Wednesday 23 March 2011] [09:11:39] <mikko-->	pieterh: heads up: there are some things i need to clean up on the build. trying to get patch to you today
| [Wednesday 23 March 2011] [09:11:41] <pieterh>	simple lock-step req/rep stops working real fast
| [Wednesday 23 March 2011] [09:11:49] <pieterh>	mikko--: no hurry
| [Wednesday 23 March 2011] [09:11:51] <sustrik>	what's not ok is breaking 1:1 request/reply relation
| [Wednesday 23 March 2011] [09:12:00] <pieterh>	no plans to release 2.1.4 for a few days yet
| [Wednesday 23 March 2011] [09:12:20] <sustrik>	anyway, back to accounting, otherwide i'll never have it ready
| [Wednesday 23 March 2011] [09:12:27] <pieterh>	sustrik: in my email I listed 4-5 cases where sync req/rep just stops working
| [Wednesday 23 March 2011] [09:12:34] <pieterh>	very rapidly
| [Wednesday 23 March 2011] [09:12:42] <pieterh>	you cannot make real req/rep without router/dealer
| [Wednesday 23 March 2011] [09:12:52] <pieterh>	thus these are intrinsically part of that vertical stack
| [Wednesday 23 March 2011] [09:13:18] <pieterh>	it's like saying the car and the engine are two different products
| [Wednesday 23 March 2011] [09:14:10] <sustrik>	does router guarantee that there's 1:1 relationship between requests and replies?
| [Wednesday 23 March 2011] [09:14:17] <sustrik>	i suppose it does not
| [Wednesday 23 March 2011] [09:14:22] <pieterh>	that relationship is not intrinsic to req-rep
| [Wednesday 23 March 2011] [09:14:29] <pieterh>	does every email I send get 1 reply?
| [Wednesday 23 March 2011] [09:14:29] <sustrik>	it is
| [Wednesday 23 March 2011] [09:14:35] <pieterh>	not in the real world
| [Wednesday 23 March 2011] [09:14:37] <Guthur>	I'm not sure if router/dealer should be so intrinsically linked to req-rep
| [Wednesday 23 March 2011] [09:14:40] <pieterh>	only in some fictional world
| [Wednesday 23 March 2011] [09:14:42] <sustrik>	it's the only way to allow end-to-end reliability
| [Wednesday 23 March 2011] [09:14:49] <sustrik>	the reply works as an ack
| [Wednesday 23 March 2011] [09:14:56] <pieterh>	end-to-end reliability is a subcase too
| [Wednesday 23 March 2011] [09:15:08] <pieterh>	are you suggesting that's the only use case for req-rep?
| [Wednesday 23 March 2011] [09:15:20] <pieterh>	what if the ack is lost?
| [Wednesday 23 March 2011] [09:15:25] <sustrik>	timeout and resend
| [Wednesday 23 March 2011] [09:15:31] <pieterh>	so heartbeating
| [Wednesday 23 March 2011] [09:15:39] <sustrik>	kind of
| [Wednesday 23 March 2011] [09:15:39] <pieterh>	look, I'm an expert in this, really
| [Wednesday 23 March 2011] [09:15:46] <pieterh>	and you cannot do it with synchronous endpoints
| [Wednesday 23 March 2011] [09:15:47] <sustrik>	where reply works as a heartbeat
| [Wednesday 23 March 2011] [09:16:05] <pieterh>	you may find other patterns and socket types
| [Wednesday 23 March 2011] [09:16:09] <sustrik>	you can, but it has to be done inside 0mq rather than on top of it
| [Wednesday 23 March 2011] [09:16:23] <pieterh>	but today, realistic req-rep needs those four socket types
| [Wednesday 23 March 2011] [09:16:31] <pieterh>	actually it barely needs req and rep at all
| [Wednesday 23 March 2011] [09:16:41] <pieterh>	router/dealer is the real core of request-reply
| [Wednesday 23 March 2011] [09:16:42] <sustrik>	yes, because it's unfinished
| [Wednesday 23 March 2011] [09:17:12] <pieterh>	you speak like an artist sometimes
| [Wednesday 23 March 2011] [09:17:46] <sustrik>	well, the resend thing is missing in REQ socket
| [Wednesday 23 March 2011] [09:17:51] <pieterh>	the issue here is brains learning patterns, and the cost of that
| [Wednesday 23 March 2011] [09:18:00] <pieterh>	it's about people, not technicalities
| [Wednesday 23 March 2011] [09:18:09] <sustrik>	exactly
| [Wednesday 23 March 2011] [09:18:15] <pieterh>	you publish ideas, people invest decades in learning them
| [Wednesday 23 March 2011] [09:18:22] <pieterh>	and then you say, "aha, but it's unfinished! "
| [Wednesday 23 March 2011] [09:18:34] <pieterh>	I'm not a fan
| [Wednesday 23 March 2011] [09:18:53] <pieterh>	there is a lot missing in REQ
| [Wednesday 23 March 2011] [09:19:02] <Guthur>	I'm confused why REQ/REP keeps getting drawn into it, that socket type does a job and works well, the issue is people also want a socket that provides less restrictive send/recv and control over message routing
| [Wednesday 23 March 2011] [09:19:05] <sustrik>	i am just a human being, i cannot finish everything at once
| [Wednesday 23 March 2011] [09:19:08] <Guthur>	or am I missing something
| [Wednesday 23 March 2011] [09:19:20] <pieterh>	sustrik: then don't threaten change no-one is asking for... 
| [Wednesday 23 March 2011] [09:19:45] <pieterh>	if you didn't want people to use router/dealer you had to make req/rep actually work in real code
| [Wednesday 23 March 2011] [09:20:00] <pieterh>	since they don't, people have had no choice except to learn and use router/dealer
| [Wednesday 23 March 2011] [09:20:04] <sustrik>	ack
| [Wednesday 23 March 2011] [09:20:09] <pieterh>	that is now the state of the art
| [Wednesday 23 March 2011] [09:20:34] <pieterh>	I'd much prefer not having four socket types to learn
| [Wednesday 23 March 2011] [09:20:40] <pieterh>	but this is where we are today
| [Wednesday 23 March 2011] [09:20:53] <pieterh>	it works, it's usable, it's actually elegant enough to defend
| [Wednesday 23 March 2011] [09:20:54] <sustrik>	the problem is that aside of legitimate uses of xreq/xrep such as building relianility
| [Wednesday 23 March 2011] [09:21:01] <sustrik>	people use it in a following way
| [Wednesday 23 March 2011] [09:21:07] <sustrik>	i have a XREP socket
| [Wednesday 23 March 2011] [09:21:13] <sustrik>	i connect three apps to it
| [Wednesday 23 March 2011] [09:21:19] <pieterh>	I don't think you actually know how people use it
| [Wednesday 23 March 2011] [09:21:24] <sustrik>	i set an identity to each app, say A, B and C
| [Wednesday 23 March 2011] [09:21:36] <pieterh>	the terminology  "legitimate" is like an artist
| [Wednesday 23 March 2011] [09:21:42] <sustrik>	when i want to send message to A, i pushlish A+payload
| [Wednesday 23 March 2011] [09:21:46] <pieterh>	there is no illegitimate use, only bad design
| [Wednesday 23 March 2011] [09:21:53] <sustrik>	well, it doesn't scale
| [Wednesday 23 March 2011] [09:22:00] <pieterh>	repeat after me, when users misuse a product, it's the designer's fault
| [Wednesday 23 March 2011] [09:22:02] <pieterh>	always
| [Wednesday 23 March 2011] [09:22:09] <sustrik>	right
| [Wednesday 23 March 2011] [09:22:11] <pieterh>	this is a key tenet of good design
| [Wednesday 23 March 2011] [09:22:12] <sustrik>	mea culpa
| [Wednesday 23 March 2011] [09:22:26] <sustrik>	i should have left xreq/xrep undocumented
| [Wednesday 23 March 2011] [09:22:29] <sustrik>	too late now
| [Wednesday 23 March 2011] [09:22:38] <pieterh>	that was not an option, you know it... sigh
| [Wednesday 23 March 2011] [09:22:50] <pieterh>	let me explain a simple router use case I am making right now
| [Wednesday 23 March 2011] [09:23:09] <Guthur>	sustrik: is that routing to specific clients bad in your eyes?
| [Wednesday 23 March 2011] [09:23:31] <sustrik>	pieterh: sure
| [Wednesday 23 March 2011] [09:23:45] <sustrik>	Gurthur: yes, because it's not scalable
| [Wednesday 23 March 2011] [09:23:49] <pieterh>	so in fact setting identities is a Bad Thing with some very few exceptions
| [Wednesday 23 March 2011] [09:23:57] <sustrik>	yes
| [Wednesday 23 March 2011] [09:24:09] <sustrik>	i should not have introduced them at all
| [Wednesday 23 March 2011] [09:24:17] <pieterh>	there are some necessary use cases
| [Wednesday 23 March 2011] [09:24:25] <pieterh>	I've found two, actually
| [Wednesday 23 March 2011] [09:24:34] <sustrik>	well, they give an impression of "reliability" in AMQP sense
| [Wednesday 23 March 2011] [09:24:39] <Guthur>	sustrik: but surely it's essential in some cases unless you use some different layer to expose to clients
| [Wednesday 23 March 2011] [09:24:39] <pieterh>	persistent subscribers, and ... hehe... router-to-router routing
| [Wednesday 23 March 2011] [09:24:46] <sustrik>	whereas, in reality, 0mq is more like TCP
| [Wednesday 23 March 2011] [09:24:53] <sustrik>	transient in nature
| [Wednesday 23 March 2011] [09:25:03] <pieterh>	indeed, reliable network buffers is just weird
| [Wednesday 23 March 2011] [09:25:04] <sustrik>	the mix of the two is pretty awkward
| [Wednesday 23 March 2011] [09:25:06] <pieterh>	I agree
| [Wednesday 23 March 2011] [09:25:16] <pieterh>	I'd vote to kill explicit identities
| [Wednesday 23 March 2011] [09:25:25] <pieterh>	except that one use case absolutely needs them, and it's safe
| [Wednesday 23 March 2011] [09:25:33] <pieterh>	distributed name service, see Ch4
| [Wednesday 23 March 2011] [09:25:40] <pieterh>	but this is divergence
| [Wednesday 23 March 2011] [09:25:51] <sustrik>	that would be nice
| [Wednesday 23 March 2011] [09:26:00] <pieterh>	my current use case is using a thread to isolate an object, the context wrapper in zapi
| [Wednesday 23 March 2011] [09:26:00] <sustrik>	the code for identities is a nightmare
| [Wednesday 23 March 2011] [09:26:13] <sustrik>	a pile of special cases basically :(
| [Wednesday 23 March 2011] [09:26:26] <pieterh>	yes, we can IMO aim to remove that functionality
| [Wednesday 23 March 2011] [09:26:35] <pieterh>	especially if we provide layers on top that do the same only better
| [Wednesday 23 March 2011] [09:26:42] <pieterh>	e.g. Clone pattern for reliable pub/sub
| [Wednesday 23 March 2011] [09:26:53] <pieterh>	which I've made, and which is really easy finally
| [Wednesday 23 March 2011] [09:27:05] <pieterh>	so I have threads that send commands to this object thread
| [Wednesday 23 March 2011] [09:27:10] <pieterh>	it's what you do in 0MQ core, right
| [Wednesday 23 March 2011] [09:27:16] <pieterh>	now commands are async
| [Wednesday 23 March 2011] [09:27:21] <pieterh>	only one or two have replies
| [Wednesday 23 March 2011] [09:27:33] <pieterh>	if I use req/rep, I have to artificially send a reply to each request
| [Wednesday 23 March 2011] [09:27:37] <pieterh>	I did that
| [Wednesday 23 March 2011] [09:27:40] <pieterh>	it's horrid
| [Wednesday 23 March 2011] [09:27:59] <pieterh>	using dealer/router I can do it right, reply only when needed
| [Wednesday 23 March 2011] [09:28:42] <sustrik>	yes, sure there are use cases for it
| [Wednesday 23 March 2011] [09:28:44] <pieterh>	the reply address has to be delivered to my code because the reply can happen later
| [Wednesday 23 March 2011] [09:28:52] <pieterh>	it can't be 'reply to previous request'
| [Wednesday 23 March 2011] [09:29:04] <sustrik>	the main question imo is what 0mq should provide
| [Wednesday 23 March 2011] [09:29:09] <pieterh>	just this
| [Wednesday 23 March 2011] [09:29:10] <sustrik>	there are two mindsets:
| [Wednesday 23 March 2011] [09:29:14] <pieterh>	what it provides *works*
| [Wednesday 23 March 2011] [09:29:18] <sustrik>	1. generic networking
| [Wednesday 23 March 2011] [09:29:28] <sustrik>	such as ACE, Asio etc.
| [Wednesday 23 March 2011] [09:29:31] <sustrik>	2. scalability
| [Wednesday 23 March 2011] [09:29:37] <pieterh>	both, obviously
| [Wednesday 23 March 2011] [09:29:43] <pieterh>	that's a false dichotomy
| [Wednesday 23 March 2011] [09:29:53] <sustrik>	well, the second means restricting unscalable behaviour
| [Wednesday 23 March 2011] [09:29:54] <pieterh>	I want scalable generic networking
| [Wednesday 23 March 2011] [09:29:59] <sustrik>	no way
| [Wednesday 23 March 2011] [09:30:03] <pieterh>	yes, way :-)
| [Wednesday 23 March 2011] [09:30:05] <Guthur>	hehe, I think that's the issue, we all like making connections with 0MQ we want to use it everwhere
| [Wednesday 23 March 2011] [09:30:16] <pieterh>	the trick is generic networking at multiple scales
| [Wednesday 23 March 2011] [09:30:24] <sustrik>	it does not
| [Wednesday 23 March 2011] [09:30:28] <pieterh>	i.e. same semantic for inproc as for clusters
| [Wednesday 23 March 2011] [09:30:31] <pieterh>	yes, it does
| [Wednesday 23 March 2011] [09:30:32] <sustrik>	see the A, B, C example
| [Wednesday 23 March 2011] [09:30:35] <sustrik>	it does not scale
| [Wednesday 23 March 2011] [09:30:43] <sustrik>	if there's a lot of clients
| [Wednesday 23 March 2011] [09:30:45] <pieterh>	ah, I see what you mean
| [Wednesday 23 March 2011] [09:30:52] <pieterh>	look, you have this kind of backwards IMO
| [Wednesday 23 March 2011] [09:30:56] <sustrik>	you cannot simply interject a device to scale it up
| [Wednesday 23 March 2011] [09:31:02] <pieterh>	allow me to explain
| [Wednesday 23 March 2011] [09:31:03] <sustrik>	it's fixed 1-hop architecture
| [Wednesday 23 March 2011] [09:31:11] <pieterh>	hang on :-)
| [Wednesday 23 March 2011] [09:31:26] <pieterh>	speaking as a 0MQ user, who knows about scale,...
| [Wednesday 23 March 2011] [09:31:47] <pieterh>	I don't really expect, or need, my architectures to scale without some redesign
| [Wednesday 23 March 2011] [09:31:55] <pieterh>	however I want that redesign to be cheap
| [Wednesday 23 March 2011] [09:32:10] <pieterh>	and I really, really want one set of semantics at all scales
| [Wednesday 23 March 2011] [09:32:29] <pieterh>	e.g. I know that multicast is not just click-click
| [Wednesday 23 March 2011] [09:32:33] <pieterh>	it's a *lot* of extra work
| [Wednesday 23 March 2011] [09:32:42] <pieterh>	but my code will basically not change (too much)
| [Wednesday 23 March 2011] [09:32:56] <pieterh>	this is the key to 0MQ
| [Wednesday 23 March 2011] [09:33:12] <pieterh>	it's not that apps magically scale just by adding devices  and IMO it's not helpful to aim for that
| [Wednesday 23 March 2011] [09:33:27] <pieterh>	it's that you can re-architect code really easily to make it fit arbitrary scales
| [Wednesday 23 March 2011] [09:33:34] <sustrik>	well, i am aiming for that
| [Wednesday 23 March 2011] [09:33:36] <pieterh>	I can give a real example from Ch4
| [Wednesday 23 March 2011] [09:33:41] <pieterh>	where this works beautifully
| [Wednesday 23 March 2011] [09:33:51] <pieterh>	I make a whole reliability design, based on a broker, right?
| [Wednesday 23 March 2011] [09:34:05] <sustrik>	broker is inherently inscalable
| [Wednesday 23 March 2011] [09:34:11] <pieterh>	then at the end, like a magic trick, I move the broker into the client and it disappears
| [Wednesday 23 March 2011] [09:34:13] <sustrik>	when you want to add another broker
| [Wednesday 23 March 2011] [09:34:21] <sustrik>	you run into AMQP-style problems
| [Wednesday 23 March 2011] [09:34:23] <pieterh>	and I get full scalability across an N-to-N network of clients and workers
| [Wednesday 23 March 2011] [09:34:32] <pieterh>	this is what works
| [Wednesday 23 March 2011] [09:34:47] <sustrik>	ah, so it's the device interhjection pattern
| [Wednesday 23 March 2011] [09:34:48] <pieterh>	federating brokers is just how banks waste money :-)
| [Wednesday 23 March 2011] [09:34:58] <pieterh>	it's the "rescale my code" pattern
| [Wednesday 23 March 2011] [09:34:58] <sustrik>	yes, that the only viable way to scale imo
| [Wednesday 23 March 2011] [09:35:08] <sustrik>	adding hops
| [Wednesday 23 March 2011] [09:35:14] <sustrik>	without changing semantics
| [Wednesday 23 March 2011] [09:35:15] <pieterh>	this is why these socket types cannot be hidden
| [Wednesday 23 March 2011] [09:35:31] <sustrik>	yes, there's good reason to keep them visible
| [Wednesday 23 March 2011] [09:35:40] <sustrik>	however, they can be used only in certain ways
| [Wednesday 23 March 2011] [09:35:46] <pieterh>	this is true
| [Wednesday 23 March 2011] [09:35:47] <sustrik>	to keep the overall design scalable
| [Wednesday 23 March 2011] [09:35:52] <pieterh>	it's about education
| [Wednesday 23 March 2011] [09:35:54] <sustrik>	well, that's my point
| [Wednesday 23 March 2011] [09:35:58] <pieterh>	i.e. please drive on the right
| [Wednesday 23 March 2011] [09:36:41] <pieterh>	however it is justifiable to build unscalable designs
| [Wednesday 23 March 2011] [09:36:50] <pieterh>	because it's easy to refactor them as needed
| [Wednesday 23 March 2011] [09:37:00] <pieterh>	e.g. starting with a broker is just much simpler, conceptually
| [Wednesday 23 March 2011] [09:37:39] <pieterh>	to be honest, I think 0MQ is already magically good at this
| [Wednesday 23 March 2011] [09:38:06] <sustrik>	yeah, i haven't expected it to be this universal
| [Wednesday 23 March 2011] [09:38:17] <sustrik>	back in 2007
| [Wednesday 23 March 2011] [09:38:45] <sustrik>	back to serious stuff!
| [Wednesday 23 March 2011] [09:38:45] <pieterh>	yeah, it was not really the initial vision :-)
| [Wednesday 23 March 2011] [09:38:50] 	 * sustrik goes accounting
| [Wednesday 23 March 2011] [09:38:50] <pieterh>	accounting! code!
| [Wednesday 23 March 2011] [09:41:49] <pieterh>	mikko--: ping
| [Wednesday 23 March 2011] [09:42:13] <pieterh>	if you clone https://github.com/zeromq/zeromq2-1 and then try to build with openpgm, you get an error
| [Wednesday 23 March 2011] [09:42:24] <pieterh>	config.status: error: cannot find input file: `Makefile.in'
| [Wednesday 23 March 2011] [09:51:14] <pieterh>	mikko--: np, solved it I think
| [Wednesday 23 March 2011] [09:53:17] <Steve-o_>	:P
| [Wednesday 23 March 2011] [09:53:49] <Steve-o_>	That error occurs when using a openpgm svn snapshot without bootstrap
| [Wednesday 23 March 2011] [09:54:34] <Steve-o_>	for 114 and 115 I now bootstrap Autoconf
| [Wednesday 23 March 2011] [09:55:20] <Steve-o_>	only annoying bit is autogen.sh not creating the pgm staging directory
| [Wednesday 23 March 2011] [09:55:24] <pieterh>	Steve-o_: weird thing is the missing file is zeromq's root file, not in openpgm
| [Wednesday 23 March 2011] [09:55:40] <pieterh>	though the message may be inaccurate
| [Wednesday 23 March 2011] [09:56:37] <Steve-o_>	more importantly you didn't read Bob's response, it's already working for him
| [Wednesday 23 March 2011] [09:56:46] <pieterh>	orly?
| [Wednesday 23 March 2011] [09:56:51] <Steve-o_>	your last two mails are out of date
| [Wednesday 23 March 2011] [09:56:52] <Steve-o_>	:P
| [Wednesday 23 March 2011] [09:56:53] 	 * pieterh needs to read more and write less
| [Wednesday 23 March 2011] [09:57:34] <pieterh>	nope, his last email (that I have) says, "Can you verify that it configures properly and it's me and not the tarball?"
| [Wednesday 23 March 2011] [09:57:52] <Steve-o_>	lol, ok two to me :D
| [Wednesday 23 March 2011] [09:57:55] <pieterh>	maybe he replied to you offlist
| [Wednesday 23 March 2011] [09:57:56] <Guthur>	pieterh: we drive on the left
| [Wednesday 23 March 2011] [09:59:17] <Steve-o_>	I reproduced the error here:  http://lists.zeromq.org/pipermail/zeromq-dev/2011-March/010041.html
| [Wednesday 23 March 2011] [10:01:34] <pieterh>	Guthur: thanks?
| [Wednesday 23 March 2011] [10:08:43] <cremes>	i'd like to ask a question about 3.0; any chance the project will get a major refactoring
| [Wednesday 23 March 2011] [10:08:52] <cremes>	and reorg so that the internal classes can be fully tested?
| [Wednesday 23 March 2011] [10:09:09] <cremes>	right now the only testing we can do is 'black box' style where we give it some input and hope
| [Wednesday 23 March 2011] [10:09:19] <cremes>	that all the plumbing works well enough to get an answer on the other side
| [Wednesday 23 March 2011] [10:09:27] <Guthur>	cremes: there was a discussion earlier about something related
| [Wednesday 23 March 2011] [10:09:40] <Guthur>	more to ease the understanding of 0MQ core
| [Wednesday 23 March 2011] [10:09:57] <cremes>	Guthur: what was the outcome of the discussion? or is it still ongoing?
| [Wednesday 23 March 2011] [10:10:12] <Guthur>	'yeah that would be nice' hehe
| [Wednesday 23 March 2011] [10:10:31] <sustrik>	cremes: can be done, but it requires a significant effor writing unit tests
| [Wednesday 23 March 2011] [10:10:53] <sustrik>	exactly, 'yeah that would be nice'
| [Wednesday 23 March 2011] [10:11:08] <sustrik>	if you want to help with that we can give it a try
| [Wednesday 23 March 2011] [10:12:41] <pieterh>	cremes: what about writing unit tests on top, not in core?
| [Wednesday 23 March 2011] [10:12:53] <pieterh>	any refactoring of core is going to be expensive
| [Wednesday 23 March 2011] [10:13:55] <pieterh>	I know it's not the same... 
| [Wednesday 23 March 2011] [10:14:11] <pieterh>	I'm using systematic unit tests in zapi and it's a really nice way of working
| [Wednesday 23 March 2011] [10:20:32] <mikko-->	Steve-o_: thats my fault
| [Wednesday 23 March 2011] [10:20:39] <mikko-->	i got a patch soon(ish) for it
| [Wednesday 23 March 2011] [10:22:03] <mikko-->	mkoppanen/zeromq2-1 has a branch fix-make-dist
| [Wednesday 23 March 2011] [10:22:12] <mikko-->	can you test that?
| [Wednesday 23 March 2011] [10:23:44] <Steve-o_>	k
| [Wednesday 23 March 2011] [10:25:14] <Guthur>	pieterh: imo retrospectively adding adequate unit test coverage is usually difficult or next to impossible
| [Wednesday 23 March 2011] [10:25:47] <Guthur>	the code really needs to be design with it in mind from the beginning
| [Wednesday 23 March 2011] [10:25:50] <pieterh>	Guthur: I believe you're right, and it's not going to be possible to refactor core to make this happen
| [Wednesday 23 March 2011] [10:26:02] <pieterh>	not without major, major effort, i.e. manyears of work
| [Wednesday 23 March 2011] [10:26:51] <pieterh>	so what we need is a separate tests project IMO
| [Wednesday 23 March 2011] [10:27:09] <pieterh>	where anyone can bung a test case 
| [Wednesday 23 March 2011] [10:27:20] <pieterh>	and which we can use when doing daily builds
| [Wednesday 23 March 2011] [10:28:24] <Steve-o_>	mikko--: looks fine, just finishing the build
| [Wednesday 23 March 2011] [10:29:22] <Steve-o_>	well zeromq should go for two test beds, an external one sitting above the apis and one living next to the code testing each class
| [Wednesday 23 March 2011] [10:30:20] <pieterh>	Steve-o_: indeed, but the second case is probably impossible to make
| [Wednesday 23 March 2011] [10:30:35] <pieterh>	and right now the external one is part of core, which is a problem IMO
| [Wednesday 23 March 2011] [10:30:47] <Steve-o_>	depends, have you looked at Chromium unit tests?  They're pretty fruity
| [Wednesday 23 March 2011] [10:31:12] <Steve-o_>	mine too for OpenPGM can only go so far
| [Wednesday 23 March 2011] [10:31:59] <Steve-o_>	mikko--: all done, no problems encountered.
| [Wednesday 23 March 2011] [10:32:08] <mikko-->	make dist works as well?
| [Wednesday 23 March 2011] [10:32:52] <Steve-o_>	yup
| [Wednesday 23 March 2011] [10:33:01] <mikko-->	if anyone has boxes that can execute network tests they can be plugged into the central jenkins cluster
| [Wednesday 23 March 2011] [10:33:45] <Steve-o_>	I'm thinking of investigating upgrading my network testing to use Python and zeromq
| [Wednesday 23 March 2011] [10:34:07] <Steve-o_>	the bit issue with network testing is stopping and cleaning up when things go wrong
| [Wednesday 23 March 2011] [10:34:32] <Steve-o_>	s/bit/big/
| [Wednesday 23 March 2011] [10:34:41] <mikko-->	you mean going with too high rates?
| [Wednesday 23 March 2011] [10:35:04] <Steve-o_>	usually dead locks
| [Wednesday 23 March 2011] [10:35:21] <Steve-o_>	I have a few years ago suffered quite funny network problems
| [Wednesday 23 March 2011] [10:35:34] <Steve-o_>	i.e. too high data rate, literally millions of packets per second
| [Wednesday 23 March 2011] [10:35:43] <Steve-o_>	turned the switch into a hub and floored the entire network
| [Wednesday 23 March 2011] [10:35:49] <pieterh>	mikko--: did you see drbobbeaty's offer of OpenPGM testing space?
| [Wednesday 23 March 2011] [10:35:50] <Steve-o_>	fcuk.
| [Wednesday 23 March 2011] [10:36:58] <drbobbeaty>	pieterh: it's actually an offer of financial support - for ZMQ to have it's own OpenPGM testing space so we don't have these same kinds of issues in the future.
| [Wednesday 23 March 2011] [10:37:38] <pieterh>	drbobbeaty: please meet Mikko, who is starting his own ZMQ support company
| [Wednesday 23 March 2011] [10:37:39] <drbobbeaty>	pieterh: it could be machines, if that's all that's needed, but my original intention was to help fund an expansion to the testing facilities.
| [Wednesday 23 March 2011] [10:38:22] <pieterh>	It would be excellent if your organization would fund an expansion of the testing facilities via mikko--
| [Wednesday 23 March 2011] [10:38:41] <drbobbeaty>	mikko-: OK, if you're the guy, great. I think we want the same thing - a tested tarball for users. I'm just ready to see what it'll take and try to swing that through the company I work for.
| [Wednesday 23 March 2011] [10:39:35] <Steve-o_>	I might be able to move some of my hardware in the future
| [Wednesday 23 March 2011] [10:39:43] <Guthur>	I don't mind offering some capacity on my VPS if that is what is being talked about
| [Wednesday 23 March 2011] [10:39:59] <pieterh>	I think what we're talking about is two things,
| [Wednesday 23 March 2011] [10:40:17] <pieterh>	a. buying or finding some PGM-capable switches
| [Wednesday 23 March 2011] [10:40:22] <Steve-o_>	I have a ibm blade chassis and a ultra sparc which need new homes when I move to NY
| [Wednesday 23 March 2011] [10:40:51] <pieterh>	b. setting up and managing a test process
| [Wednesday 23 March 2011] [10:41:47] <pieterh>	drbobbeaty: I think funding would have to cover time as well as materials
| [Wednesday 23 March 2011] [10:42:05] <pieterh>	it would not be huge amounts, but mikko-- is a professional
| [Wednesday 23 March 2011] [10:42:34] <pieterh>	his firm is at http://kuut.io/
| [Wednesday 23 March 2011] [10:42:36] <drbobbeaty>	pieterh: I'm not against that. I benefit from ZMQ, and me not having to spend a day debugging a new release is worth real $$ to my employer.
| [Wednesday 23 March 2011] [10:42:40] <pieterh>	indeed
| [Wednesday 23 March 2011] [10:42:43] <pieterh>	it's win-win-win
| [Wednesday 23 March 2011] [10:43:40] <pieterh>	I suggest you can discuss with Mikko privately, I'm available if you need me, but this does not need to involve iMatix
| [Wednesday 23 March 2011] [10:44:20] <drbobbeaty>	pieterh: you and mikko chat - I really don't care who does it, who owns it, etc. When you were here on your talk, you talked about support contracts. We're not against that - towards getting the testing as part of this.
| [Wednesday 23 March 2011] [10:44:58] <drbobbeaty>	I'd just like someone that's going to stay in the project for a long time be the one we fund because I'd hate to be in this situation in 6 months.
| [Wednesday 23 March 2011] [10:45:07] <pieterh>	ok, so there are two ways to approach this
| [Wednesday 23 March 2011] [10:45:52] <drbobbeaty>	like I said - I'm very easy on this. You know what I want... you let me know if there's a way I can help get us all there.
| [Wednesday 23 March 2011] [10:45:56] <pieterh>	either, you fund work done by the community, which means working with Mikko, who is the owner of all that is testing
| [Wednesday 23 March 2011] [10:46:05] <pieterh>	or, you ask iMatix for a proper liong
| [Wednesday 23 March 2011] [10:46:25] <pieterh>	*long-term support contract, which we're more than happy to do, and we take care of everything
| [Wednesday 23 March 2011] [10:48:03] <sustrik>	mikko: nice website
| [Wednesday 23 March 2011] [10:48:12] <sustrik>	the design, i mean
| [Wednesday 23 March 2011] [10:54:57] <sustrik>	pieterh: accepting a new functionality into stable without testing it on master of elsewhere is not a good idea imo
| [Wednesday 23 March 2011] [10:55:17] <pieterh>	sustrik: you mean openpgm?
| [Wednesday 23 March 2011] [10:55:27] <sustrik>	yup
| [Wednesday 23 March 2011] [10:55:32] <sustrik>	btw, it's still not in master
| [Wednesday 23 March 2011] [10:55:33] <sustrik>	:(
| [Wednesday 23 March 2011] [10:55:37] <pieterh>	true, but basically it was broken before
| [Wednesday 23 March 2011] [10:56:03] <sustrik>	well, it worked for drbobbeaty
| [Wednesday 23 March 2011] [10:56:05] <pieterh>	i'm not sure why it's not yet in master... just waiting for a patch from mikko?
| [Wednesday 23 March 2011] [10:56:10] <sustrik>	yes
| [Wednesday 23 March 2011] [10:56:13] <pieterh>	ah, rc2 worked, yes
| [Wednesday 23 March 2011] [10:56:45] <pieterh>	it's not easy to know 'new functionality' vs 'necessary patch' in foreign imports
| [Wednesday 23 March 2011] [10:57:01] <pieterh>	the solution is proper testing of daily builds off github
| [Wednesday 23 March 2011] [10:57:02] <Steve-o_>	you get both :D
| [Wednesday 23 March 2011] [10:57:20] <cremes>	sorry about not responding to the unit test stuff an hour ago; we had a little outage here that i had to attend to
| [Wednesday 23 March 2011] [10:57:21] <pieterh>	mostly, I expect the release process to self-stabilize
| [Wednesday 23 March 2011] [10:57:28] <pieterh>	this is my experience
| [Wednesday 23 March 2011] [10:57:43] <cremes>	so i agree that refactoring core would be many man-years of effort
| [Wednesday 23 March 2011] [10:58:05] <cremes>	but i think the idea of having some unit tests that live "underneath" the public api and test internal classes
| [Wednesday 23 March 2011] [10:58:06] <cremes>	is a good idea
| [Wednesday 23 March 2011] [10:58:22] <cremes>	i am willing to write some code (i.e. put my money/time where my mouth is)
| [Wednesday 23 March 2011] [10:59:03] <cremes>	i think that over a period of time as unit tests are written, we'll find the pain points that require redesign/refactoring
| [Wednesday 23 March 2011] [10:59:05] <sustrik>	pieterh: pushing _anything_ untested into stable is no good
| [Wednesday 23 March 2011] [10:59:10] <cremes>	of the internal classes and it can be done piece-meal
| [Wednesday 23 March 2011] [10:59:24] <pieterh>	sustrik: it's only testable in master now because it's the same codebase
| [Wednesday 23 March 2011] [10:59:32] <sustrik>	cremes: well, do you have an idea of a specific unit test you want to write
| [Wednesday 23 March 2011] [10:59:35] <pieterh>	as soon as there's functional changes, that stops being possible
| [Wednesday 23 March 2011] [10:59:49] <sustrik>	then test it elsewhere
| [Wednesday 23 March 2011] [11:00:00] <pieterh>	this is not a problem, really
| [Wednesday 23 March 2011] [11:00:06] <cremes>	sustrik: i do; i thought a good initial set of tests would be to exercise the yqueue class since it is
| [Wednesday 23 March 2011] [11:00:12] <cremes>	so important to internal communications
| [Wednesday 23 March 2011] [11:00:23] <sustrik>	pieterh: it's up to you, but unstable stable is a problem afaics
| [Wednesday 23 March 2011] [11:00:36] <Steve-o_>	cremes: I think you're jumping into a different conversation
| [Wednesday 23 March 2011] [11:00:37] <sustrik>	cremes: sounds good
| [Wednesday 23 March 2011] [11:00:47] <pieterh>	sustrik: you are stressed because you want a perfect product, but that is not how it happens
| [Wednesday 23 March 2011] [11:01:06] <sustrik>	if you write one unit test we can have a look at how to incorporate it into the codebase
| [Wednesday 23 March 2011] [11:01:09] <cremes>	Steve-o_: just answering a direct query from sustrik; but yeah, the channel has a few topics going simultaneously :)
| [Wednesday 23 March 2011] [11:01:27] <pieterh>	cremes: it sounds like a good plan
| [Wednesday 23 March 2011] [11:01:50] <cremes>	i will endeavor to do a proof-of-concept this weekend so we can discuss on monday/tuesday
| [Wednesday 23 March 2011] [11:02:08] <pieterh>	sustrik: the other option, which I wanted to discuss, was to start a 2.2 release cycle
| [Wednesday 23 March 2011] [11:02:29] <sustrik>	what would that be?
| [Wednesday 23 March 2011] [11:02:44] <pieterh>	well, in strict principle, no new functionality in 2.1 at all...
| [Wednesday 23 March 2011] [11:02:55] <pieterh>	so 2.2 allows us to add new functionality without changing the api
| [Wednesday 23 March 2011] [11:03:22] <sustrik>	well, if you feel like maintaining 3 separate repos :)
| [Wednesday 23 March 2011] [11:03:32] <Steve-o_>	pieterh: re: "it's not easy to know 'new functionality' vs 'necessary patch' in foreign imports", new functionality would be a openpgm 6.x, I only push small changes down
| [Wednesday 23 March 2011] [11:03:36] <pieterh>	i've no problem with that, I maintain 20-30 repositories
| [Wednesday 23 March 2011] [11:03:56] <sustrik>	wait till you start doing real backports
| [Wednesday 23 March 2011] [11:03:58] <sustrik>	:)
| [Wednesday 23 March 2011] [11:04:15] <pieterh>	sustrik: somewhere along the line you missed the trick that as maintainer I don't do ports at all
| [Wednesday 23 March 2011] [11:04:28] <pieterh>	look, let me give you an example...
| [Wednesday 23 March 2011] [11:04:37] <pieterh>	2.1 will be used in production for a very long time
| [Wednesday 23 March 2011] [11:04:57] <pieterh>	now say you want to deliver some new socket options to users
| [Wednesday 23 March 2011] [11:05:03] <pieterh>	nothing dangerous
| [Wednesday 23 March 2011] [11:05:18] <pieterh>	but if you only provide them via 3.0, it'll be ages before you get proper feedback
| [Wednesday 23 March 2011] [11:05:33] <pieterh>	so you convince me, as maintainer, to release them in 2.2
| [Wednesday 23 March 2011] [11:05:36] <pieterh>	everyone wins
| [Wednesday 23 March 2011] [11:05:48] <sustrik>	if it's fully backward compatible it can go into 2.1
| [Wednesday 23 March 2011] [11:05:51] <pieterh>	nope
| [Wednesday 23 March 2011] [11:05:53] <pieterh>	it cannot
| [Wednesday 23 March 2011] [11:06:00] <sustrik>	up to you
| [Wednesday 23 March 2011] [11:06:04] 	 * sustrik shuts up
| [Wednesday 23 March 2011] [11:06:20] <Steve-o_>	I thought the definition was new features = minor++, API breakage = major++?
| [Wednesday 23 March 2011] [11:06:20] <pieterh>	the point is that 2.1 is "stable" and thus does not get new functionality
| [Wednesday 23 March 2011] [11:06:31] <pieterh>	Steve-o_: exactluy
| [Wednesday 23 March 2011] [11:06:37] <pieterh>	new functionality = new minor release
| [Wednesday 23 March 2011] [11:06:37] <Guthur>	pieterh: only a day or two ago you mentioned there would be no 2.2, iirc
| [Wednesday 23 March 2011] [11:06:45] <pieterh>	Guthur: I said, we had no plans
| [Wednesday 23 March 2011] [11:06:54] <pieterh>	plans change and develop
| [Wednesday 23 March 2011] [11:07:46] <Guthur>	so if there was a 2.2 would that be 4 main repos of 0MQ
| [Wednesday 23 March 2011] [11:07:55] <Guthur>	your 3 and sustrik's one
| [Wednesday 23 March 2011] [11:07:56] <pieterh>	Guthur: which is fine, seriously
| [Wednesday 23 March 2011] [11:08:02] <pieterh>	it is scalable
| [Wednesday 23 March 2011] [11:08:23] <pieterh>	it's perhaps unusual but it's very simple, predictable, and scalable
| [Wednesday 23 March 2011] [11:08:58] <pieterh>	plus there are dozens of 0MQ repos, in fact
| [Wednesday 23 March 2011] [11:09:10] <pieterh>	we have a distributed development process and the repos map that
| [Wednesday 23 March 2011] [11:09:18] <pieterh>	there is no "main"
| [Wednesday 23 March 2011] [11:09:35] <pieterh>	there is only the rather more valuable repos maintained by El Sustrik
| [Wednesday 23 March 2011] [11:09:48] <Guthur>	Sure. I'll have to trust you on it to be honest
| [Wednesday 23 March 2011] [11:09:49] <pieterh>	and the cheap & nasty imitations made by other folk
| [Wednesday 23 March 2011] [11:10:43] <pieterh>	sustrik: do you plan to develop 3.0 inside the zeromq2 repository?
| [Wednesday 23 March 2011] [11:11:07] <sustrik>	depends on how painful it is to rename it
| [Wednesday 23 March 2011] [11:11:18] <sustrik>	i assume people have links to the repo
| [Wednesday 23 March 2011] [11:11:21] <pieterh>	millions of internet links break
| [Wednesday 23 March 2011] [11:11:24] <pieterh>	there is no forwarding
| [Wednesday 23 March 2011] [11:11:26] <sustrik>	yeah
| [Wednesday 23 March 2011] [11:11:29] <sustrik>	:|
| [Wednesday 23 March 2011] [11:11:35] <pieterh>	however, everyone watching the old site still watches the new one
| [Wednesday 23 March 2011] [11:11:51] <pieterh>	so my idea was to rename it, and then make a new zeromq2 with a cover page
| [Wednesday 23 March 2011] [11:12:15] <mikko-->	pieterh: saw it
| [Wednesday 23 March 2011] [11:12:16] <pieterh>	i mentioned this already, you may recall
| [Wednesday 23 March 2011] [11:12:19] <mikko-->	havent had time to respond yet
| [Wednesday 23 March 2011] [11:12:30] <pieterh>	mikko--: ok
| [Wednesday 23 March 2011] [11:12:33] <sustrik>	dunno whather it's worth of the trouble
| [Wednesday 23 March 2011] [11:12:42] <sustrik>	it's just a name anyway
| [Wednesday 23 March 2011] [11:13:03] <pieterh>	sigh... you want to break an entire naming scheme just because "it's just a name?"
| [Wednesday 23 March 2011] [11:13:52] <pieterh>	how on earth can we manage a family of repositories if the names don't make sense?
| [Wednesday 23 March 2011] [11:14:21] <sustrik>	let's find out what exactly would break
| [Wednesday 23 March 2011] [11:14:30] <sustrik>	obviosuly, existing web links
| [Wednesday 23 March 2011] [11:14:37] <pieterh>	like I said, that can be fixed
| [Wednesday 23 March 2011] [11:14:39] <sustrik>	mikko's auto builds
| [Wednesday 23 March 2011] [11:14:44] <pieterh>	did you understand my proposal?
| [Wednesday 23 March 2011] [11:14:50] <sustrik>	rename
| [Wednesday 23 March 2011] [11:14:56] <pieterh>	and recreate
| [Wednesday 23 March 2011] [11:14:59] <sustrik>	no way
| [Wednesday 23 March 2011] [11:15:00] <pieterh>	rename and recreate
| [Wednesday 23 March 2011] [11:15:05] <pieterh>	yes, obviously
| [Wednesday 23 March 2011] [11:15:15] <sustrik>	that's kicking out 350+ people watching the repo
| [Wednesday 23 March 2011] [11:15:20] <pieterh>	sigh... 
| [Wednesday 23 March 2011] [11:15:29] <pieterh>	please assume I'm not an idiot
| [Wednesday 23 March 2011] [11:15:51] <pieterh>	you rename, the watchers follow along to the new zeromq3 repo, ok?
| [Wednesday 23 March 2011] [11:15:57] <pieterh>	everything is cool
| [Wednesday 23 March 2011] [11:16:11] <pieterh>	now you create a *new* zeromq2 repo to take the place of the old one
| [Wednesday 23 March 2011] [11:16:19] <sustrik>	yuck
| [Wednesday 23 March 2011] [11:16:21] <sustrik>	sorry, no
| [Wednesday 23 March 2011] [11:16:24] <pieterh>	you make a cover page, which provides a map for visitors
| [Wednesday 23 March 2011] [11:16:28] <pieterh>	all internet links work
| [Wednesday 23 March 2011] [11:16:53] <pieterh>	this is far better than doing 3.0 work in a repo called zeromq2, seriously
| [Wednesday 23 March 2011] [11:17:27] <pieterh>	"we were afraid of renaming it, that's why it's still weird in 2015, sorry"
| [Wednesday 23 March 2011] [11:17:46] <pieterh>	better, rename it now to 'zeromq' 
| [Wednesday 23 March 2011] [11:18:46] <pieterh>	when we get to making stable releases of 3.0, there will be repos like zeromq3-0
| [Wednesday 23 March 2011] [11:18:51] <pieterh>	based off zeromq2?????
| [Wednesday 23 March 2011] [11:19:00] <sustrik>	i am not against renaming
| [Wednesday 23 March 2011] [11:19:07] <pieterh>	it's so bad I'm tempted to take my ball and stop playing
| [Wednesday 23 March 2011] [11:19:21] <sustrik>	just re-creating is a nonsense
| [Wednesday 23 March 2011] [11:19:22] <pieterh>	you're against making a replacement cover page?
| [Wednesday 23 March 2011] [11:19:30] <pieterh>	you prefer broken links?
| [Wednesday 23 March 2011] [11:19:38] <pieterh>	shrug, I have no more to offer
| [Wednesday 23 March 2011] [11:19:41] <sustrik>	rename zeromq2->zeromq
| [Wednesday 23 March 2011] [11:19:41] 	 * pieterh goes back to work
| [Wednesday 23 March 2011] [11:19:52] <sustrik>	then do whatever with zeromq2 namespace
| [Wednesday 23 March 2011] [11:20:15] <sustrik>	that way the watchers remain subscribed
| [Wednesday 23 March 2011] [11:20:32] <sustrik>	no point in annying 350 people
| [Wednesday 23 March 2011] [11:20:32] <pieterh>	how is it possible to say, "yuck no way:" while agreeing with my proposal?
| [Wednesday 23 March 2011] [11:20:43] <sustrik>	you said, "recreate"
| [Wednesday 23 March 2011] [11:20:58] <sustrik>	recreate what?
| [Wednesday 23 March 2011] [11:21:01] 	 * pieterh bangs his head slowly on table
| [Wednesday 23 March 2011] [11:21:16] <pieterh>	my fault for not communicating this more clearly
| [Wednesday 23 March 2011] [11:21:24] <pieterh>	please excuse me, I'll try again
| [Wednesday 23 March 2011] [11:21:57] <pieterh>	a. you rename the repo, watchers are not annoyed, ack?
| [Wednesday 23 March 2011] [11:22:01] <sustrik>	yes
| [Wednesday 23 March 2011] [11:22:14] <pieterh>	b. there is now no repo called 'zeromq2', ack?
| [Wednesday 23 March 2011] [11:22:25] <sustrik>	ah, you want to re-create that one?
| [Wednesday 23 March 2011] [11:22:32] <sustrik>	as a strawman
| [Wednesday 23 March 2011] [11:22:35] <pieterh>	the word 'recreate' seems pretty clear
| [Wednesday 23 March 2011] [11:22:55] <pieterh>	yes, create an empty repo with the old name
| [Wednesday 23 March 2011] [11:23:03] <sustrik>	why i thouth you were suggesting was "re-create the master"
| [Wednesday 23 March 2011] [11:23:07] <pieterh>	and fill it with one page, a cover sheet that helps people navigate the new structure
| [Wednesday 23 March 2011] [11:23:08] <sustrik>	ok
| [Wednesday 23 March 2011] [11:23:11] <sustrik>	that makes sense
| [Wednesday 23 March 2011] [11:23:15] <pieterh>	well, you assume I'm stupid, maybe
| [Wednesday 23 March 2011] [11:23:18] <pieterh>	don't know...
| [Wednesday 23 March 2011] [11:23:23] <pieterh>	it's ok
| [Wednesday 23 March 2011] [11:23:36] <pieterh>	:-)
| [Wednesday 23 March 2011] [11:23:38] <sustrik>	will do, once i move to 3.0
| [Wednesday 23 March 2011] [11:24:05] <pieterh>	if we do rename the repo, I'd consider the new name carefully
| [Wednesday 23 March 2011] [11:24:20] <pieterh>	it's very important to get this right
| [Wednesday 23 March 2011] [11:24:21] <sustrik>	zeromq?
| [Wednesday 23 March 2011] [11:24:24] <sustrik>	zeromq-master
| [Wednesday 23 March 2011] [11:24:28] <pieterh>	hang on
| [Wednesday 23 March 2011] [11:24:28] <sustrik>	zeromq-dev
| [Wednesday 23 March 2011] [11:24:29] <sustrik>	?
| [Wednesday 23 March 2011] [11:24:32] <sustrik>	dunno
| [Wednesday 23 March 2011] [11:24:35] <pieterh>	core
| [Wednesday 23 March 2011] [11:24:49] <pieterh>	or libzmq
| [Wednesday 23 March 2011] [11:24:52] <sustrik>	core sounds more like a component rather than branch
| [Wednesday 23 March 2011] [11:25:00] <pieterh>	it's not a branch, at all
| [Wednesday 23 March 2011] [11:25:13] <pieterh>	it is *the* living project within the 0MQ community
| [Wednesday 23 March 2011] [11:25:25] <pieterh>	there are two issues I see here
| [Wednesday 23 March 2011] [11:25:35] <pieterh>	a. confusion between zeromq as a community, and zeromq as a library
| [Wednesday 23 March 2011] [11:25:44] <sustrik>	good point
| [Wednesday 23 March 2011] [11:25:46] <pieterh>	b. zeromq as a package will end up including multiple projects
| [Wednesday 23 March 2011] [11:26:02] <pieterh>	my vision of the packaging is we package the community
| [Wednesday 23 March 2011] [11:26:03] <sustrik>	yup
| [Wednesday 23 March 2011] [11:26:13] <pieterh>	and that matches the organization name, zeromq
| [Wednesday 23 March 2011] [11:26:14] <sustrik>	libzmq+pyzmq+clrzmq etc.
| [Wednesday 23 March 2011] [11:26:17] <pieterh>	yes
| [Wednesday 23 March 2011] [11:26:19] <pieterh>	exactly
| [Wednesday 23 March 2011] [11:26:38] <pieterh>	so this is also an explanation why we have multiple repositories
| [Wednesday 23 March 2011] [11:27:09] <pieterh>	it is only possible to increase the scope of packaging if we have separate projects for that
| [Wednesday 23 March 2011] [11:27:25] <sustrik>	libzmq would make sense then, however, i am not sure whether it's worth of renaming everything now
| [Wednesday 23 March 2011] [11:27:25] 	 * pieterh is not just a pretty face...
| [Wednesday 23 March 2011] [11:27:40] <pieterh>	I'd really enjoy seeing libzmq, to be honest
| [Wednesday 23 March 2011] [11:27:52] <sustrik>	it would be nice
| [Wednesday 23 March 2011] [11:28:09] <pieterh>	I'd rename zapi to libzapi in the same sense then
| [Wednesday 23 March 2011] [11:28:10] <sustrik>	the question is how annoying would the renaming be
| [Wednesday 23 March 2011] [11:28:20] <pieterh>	it's going to have to happen anyhow
| [Wednesday 23 March 2011] [11:28:28] <pieterh>	and this is very helpful to people IMO
| [Wednesday 23 March 2011] [11:28:53] <pieterh>	change that makes things better is always acceptable
| [Wednesday 23 March 2011] [11:29:36] <sustrik>	the benefit should be weighted against all the annoyance the rename will reate
| [Wednesday 23 March 2011] [11:29:45] <sustrik>	create
| [Wednesday 23 March 2011] [11:30:15] <sustrik>	actually, current naming doesn't necessarily clash with package naming
| [Wednesday 23 March 2011] [11:30:16] <pieterh>	we won't know the annoyance until we've done the rename
| [Wednesday 23 March 2011] [11:30:53] <sustrik>	the name of the project on github is kind of invisible to end users
| [Wednesday 23 March 2011] [11:30:58] <pieterh>	yes
| [Wednesday 23 March 2011] [11:31:01] <sustrik>	it's of interest only to devs
| [Wednesday 23 March 2011] [11:31:19] <pieterh>	we need to check that forks of the repo don't break when it's renamed
| [Wednesday 23 March 2011] [11:31:27] <pieterh>	forks and watches, that's the real value
| [Wednesday 23 March 2011] [11:31:44] <sustrik>	+1
| [Wednesday 23 March 2011] [11:32:03] <pieterh>	and IMO if we recreate a useful map for visitors who follow the old link, it's solved
| [Wednesday 23 March 2011] [11:32:15] <pieterh>	I'd like to make a map of the community anyhow
| [Wednesday 23 March 2011] [11:32:19] <pieterh>	every project
| [Wednesday 23 March 2011] [11:32:26] <pieterh>	with a person and a URI
| [Wednesday 23 March 2011] [11:33:22] <pieterh>	ok, we can come back to this when you start on 3.0
| [Wednesday 23 March 2011] [11:36:03] <Guthur>	pieterh: are you building whaleshark at the moment?
| [Wednesday 23 March 2011] [11:36:21] <pieterh>	Guthur: in a manner of speaking, I'm working on the API that I'll need to build Whaleshark
| [Wednesday 23 March 2011] [11:36:36] <pieterh>	parts are almost done, like the name service
| [Wednesday 23 March 2011] [11:36:53] <Guthur>	is that related to MDP
| [Wednesday 23 March 2011] [11:37:13] <pieterh>	well, the name service is the Freelance pattern described at the end of Ch4
| [Wednesday 23 March 2011] [11:37:30] <pieterh>	the client does broker-style work but the workers are simpler than MDP workers
| [Wednesday 23 March 2011] [11:37:40] <pieterh>	it's distributed client-server
| [Wednesday 23 March 2011] [11:38:05] <pieterh>	you don't really want to access a name service via a broker, too heavy
| [Wednesday 23 March 2011] [11:39:15] <Guthur>	just reading the protocol now
| [Wednesday 23 March 2011] [11:47:15] <Guthur>	sorry to bring this up again, I'm having trouble seeing how explicitly routing to client A or B or C... goes against scalability, you could surely use a DEALER at the client side which load-balances across a number of ROUTER based devices
| [Wednesday 23 March 2011] [11:47:16] <Guthur>	am I missing something
| [Wednesday 23 March 2011] [11:47:52] <pieterh>	Guthur: the point is using explicit identities
| [Wednesday 23 March 2011] [11:48:10] <pieterh>	if you're using automatic identities, and a stack, you don't route to a client A, B, or C
| [Wednesday 23 March 2011] [11:48:19] <pieterh>	but rather you route backwards along a path
| [Wednesday 23 March 2011] [11:48:23] <pieterh>	which is scalable
| [Wednesday 23 March 2011] [11:49:18] <pieterh>	does that help?
| [Wednesday 23 March 2011] [11:49:58] <pieterh>	e.g. in MDP, we never use our own identities, only those provided by 0MQ
| [Wednesday 23 March 2011] [11:50:03] <pieterh>	it's scalable
| [Wednesday 23 March 2011] [11:50:47] <Guthur>	ok, but if you take same routing pattern with 0MQ generated UUIDs it is fine?
| [Wednesday 23 March 2011] [11:51:41] <pieterh>	well, I see two issues
| [Wednesday 23 March 2011] [11:51:54] <pieterh>	one, using durable sockets is not scalable, as we
| [Wednesday 23 March 2011] [11:51:58] <pieterh>	*we've learned
| [Wednesday 23 March 2011] [11:52:29] <pieterh>	two, treating an envelope as 1 frame rather than a path is probably not scalable
| [Wednesday 23 March 2011] [11:52:41] <pieterh>	probably, but not necessarily
| [Wednesday 23 March 2011] [11:53:32] <pieterh>	I've not actually seen real use cases for req-rep with more than 2 hops
| [Wednesday 23 March 2011] [11:54:05] <Guthur>	yeah I think outside the req-rep pattern tbh
| [Wednesday 23 March 2011] [11:54:16] <pieterh>	sustrik's whitepaper does present some but they seem contrived to me
| [Wednesday 23 March 2011] [11:54:52] <Guthur>	it's in relation to my endeavours with FIX, this is very much a disjointed async communication
| [Wednesday 23 March 2011] [11:55:10] <Guthur>	you may send off 1 request and async recv N replies
| [Wednesday 23 March 2011] [11:55:29] <pieterh>	right
| [Wednesday 23 March 2011] [11:55:48] <Guthur>	So the X sockets are the only way to go really
| [Wednesday 23 March 2011] [11:56:09] <Guthur>	without maybe using multiple sockets
| [Wednesday 23 March 2011] [12:11:59] <sp|ke>	hi guys
| [Wednesday 23 March 2011] [12:12:36] <sp|ke>	i have setup a pub server with a bunch of sub clients
| [Wednesday 23 March 2011] [12:13:16] <sp|ke>	is it possible to make the sub client get data after the pub server have shutdown and get back online ?
| [Wednesday 23 March 2011] [12:13:30] <sp|ke>	without restarting the client 
| [Wednesday 23 March 2011] [12:14:40] <pieterh>	sp|ke: the sub client will reconnect automatically
| [Wednesday 23 March 2011] [12:14:48] <pieterh>	but it will lose data obviously
| [Wednesday 23 March 2011] [12:41:53] <sp|ke>	pieterh: yes indeed, i must have done some mistake, do you think it's possible with REQ/REP pattern too ?
| [Wednesday 23 March 2011] [12:42:42] <sp|ke>	i have done some tests if i shutdwon the server after the client have sent the request
| [Wednesday 23 March 2011] [12:42:49] <sp|ke>	adn restart the server
| [Wednesday 23 March 2011] [12:43:03] <sp|ke>	the client stay blocked 
| [Wednesday 23 March 2011] [12:43:22] <sp|ke>	is there a way to check that the req zmqsocket is still alive ?
| [Wednesday 23 March 2011] [12:54:26] <cremes>	sp|ke: no, you can't do that with req/rep when using blocking send/recv; you have to create your own timeout
| [Wednesday 23 March 2011] [12:54:55] <cremes>	and use non-blocking send/recv along with zmq_poll() to detect a timeout and to handle that situation
| [Wednesday 23 March 2011] [13:01:00] <sp|ke>	cremes: ok thanx for the advice 
| [Wednesday 23 March 2011] [15:09:38] <mikko>	drbobbeaty: did you manage to test the new version of openpgm?
| [Wednesday 23 March 2011] [15:10:06] <drbobbeaty>	mikko: yup, sure did. Works fine.
| [Wednesday 23 March 2011] [15:10:11] <mikko>	cool
| [Wednesday 23 March 2011] [15:10:31] <drbobbeaty>	mikko: I used 0MQ 2.1.3 and the 5.1.115 OpenPGM from Steve-o
| [Wednesday 23 March 2011] [15:11:07] <mikko>	the --with-pgm=pgknamehere ?
| [Wednesday 23 March 2011] [17:14:39] <drbobbeaty>	mikko: yes, sorry I didn't see it earlier, I used the name of the tarball in the config line.
| [Wednesday 23 March 2011] [17:16:21] <mikko>	drbobbeaty: cool
| [Wednesday 23 March 2011] [17:16:41] <mikko>	that feature proved to be useful quite quickly
| [Wednesday 23 March 2011] [17:23:51] <pieterh>	mikko: the new openpgm packaging is really nicely done, congrats
| [Wednesday 23 March 2011] [17:25:18] <mikko>	pieterh: i will send pull request for the make dist fixes
| [Wednesday 23 March 2011] [17:25:32] <mikko>	and clear hudson job workspaces so that it will build from empty
| [Wednesday 23 March 2011] [17:27:16] <pieterh>	mikko: we still need to get this into the libzmq core repository
| [Wednesday 23 March 2011] [17:27:25] <pieterh>	sustrik's repo
| [Wednesday 23 March 2011] [17:27:43] <mikko>	yes
| [Wednesday 23 March 2011] [17:27:56] <mikko>	as soon as it works properly i'll get it ready for el sustrik
| [Wednesday 23 March 2011] [17:28:13] <pieterh>	I figured out (I'm so thick) how to pull individual commits across repos
| [Wednesday 23 March 2011] [17:28:20] <mikko>	cherry pick?
| [Wednesday 23 March 2011] [17:28:27] <pieterh>	don't need to fetch and cherry-pick
| [Wednesday 23 March 2011] [17:28:36] <pieterh>	gah
| [Wednesday 23 March 2011] [17:29:00] <pieterh>	just define the remote and then use 'git pull' with the commit number
| [Wednesday 23 March 2011] [17:29:15] <pieterh>	the precise syntax is explained by github when you have a pull request
| [Wednesday 23 March 2011] [17:29:23] <pieterh>	in your face the whole time, so to speak
| [Wednesday 23 March 2011] [17:29:54] <mikko>	yeah
| [Wednesday 23 March 2011] [17:30:03] <mikko>	been thinking about this situation for some time
| [Wednesday 23 March 2011] [17:30:20] <pieterh>	github pull requests are just issues that wrap manual git commands
| [Wednesday 23 March 2011] [17:30:24] <mikko>	pull request effectively isn't much more than github thing around pulling from other request
| [Wednesday 23 March 2011] [17:30:27] <mikko>	yes
| [Wednesday 23 March 2011] [17:30:30] <pieterh>	exactly
| [Wednesday 23 March 2011] [17:30:45] <mikko>	we could use the underlying mechanism but just make the requests via mailing-list
| [Wednesday 23 March 2011] [17:31:09] <pieterh>	exactly
| [Wednesday 23 March 2011] [17:31:15] <pieterh>	that's what I'd like to aim for
| [Wednesday 23 March 2011] [17:31:55] <pieterh>	precisely this:
| [Wednesday 23 March 2011] [17:31:57] <pieterh>	git checkout -b mkoppanen-fix-make-dist master
| [Wednesday 23 March 2011] [17:31:57] <pieterh>	git pull https://github.com/mkoppanen/zeromq2-1.git fix-make-dist
| [Wednesday 23 March 2011] [17:31:57] <pieterh>	git checkout master
| [Wednesday 23 March 2011] [17:31:57] <pieterh>	git merge mkoppanen-fix-make-dist
| [Wednesday 23 March 2011] [17:32:06] <pieterh>	to take your last pull request as example
| [Wednesday 23 March 2011] [17:33:04] <mikko>	very simple process
| [Wednesday 23 March 2011] [17:33:14] <pieterh>	it seems so
| [Wednesday 23 March 2011] [17:33:25] <pieterh>	now we just have to convince el sustrik to try it ... :-)
| [Wednesday 23 March 2011] [17:35:07] <pieterh>	let me document this quickly on the contributing page...
| [Wednesday 23 March 2011] [17:46:27] <Guthur>	pieterh, could you quickly take a look at the issue this guy describes https://github.com/zeromq/clrzmq/issues/11#comment_909819
| [Wednesday 23 March 2011] [17:46:37] <pieterh>	Guthur: ack, on it...
| [Wednesday 23 March 2011] [17:46:42] <Guthur>	Would it be possible it is a slow subscriber issue
| [Wednesday 23 March 2011] [17:46:56] <Guthur>	I understand there is very little in the way of concrete details
| [Wednesday 23 March 2011] [17:47:06] <Guthur>	just your gut feeling would be suffice
| [Wednesday 23 March 2011] [17:50:17] <pieterh>	Guthur: do you expose the zmq_msg_init_data call in your API?
| [Wednesday 23 March 2011] [17:50:49] <pieterh>	gut feeling is he's sending stuff that he meanwhile frees
| [Wednesday 23 March 2011] [17:53:31] <pieterh>	Guthur: ok, comment added
| [Wednesday 23 March 2011] [18:06:30] <Guthur>	pieterh, sorry was afk there
| [Wednesday 23 March 2011] [18:06:39] <Guthur>	my flatmates made some food
| [Wednesday 23 March 2011] [18:06:44] <pieterh>	curry?
| [Wednesday 23 March 2011] [18:06:52] <Guthur>	pizza and pasta
| [Wednesday 23 March 2011] [18:07:00] <pieterh>	sounds excellent
| [Wednesday 23 March 2011] [18:07:16] <pieterh>	and you seriously still want to discuss 0MQ? :-)
| [Wednesday 23 March 2011] [18:07:25] <Guthur>	it was
| [Wednesday 23 March 2011] [18:07:39] <Guthur>	well I knew you might be answer so felt bad leaving so quickly
| [Wednesday 23 March 2011] [18:07:39] <pieterh>	hehe
| [Wednesday 23 March 2011] [18:07:53] <Guthur>	I'm just about to go back for tea an chocolates
| [Wednesday 23 March 2011] [18:08:06] <pieterh>	go for it, I'm writing some docs
| [Wednesday 23 March 2011] [18:08:14] <Guthur>	ok, back in a bit
| [Wednesday 23 March 2011] [19:31:06] <Guthur>	Hi jeckstein, did you raise the issue for clrzmq2 on github
| [Wednesday 23 March 2011] [19:31:31] <jeckstein>	yes i did, hi michael
| [Wednesday 23 March 2011] [19:31:58] <Guthur>	are you using the latest version of clrzmq2 from github?
| [Wednesday 23 March 2011] [19:32:01] <jeckstein>	i'm going to try to come up with a simple scenario to reproduce the error
| [Wednesday 23 March 2011] [19:32:26] <Guthur>	that would be best
| [Wednesday 23 March 2011] [19:32:46] <Guthur>	best isolating the issue much easier
| [Wednesday 23 March 2011] [19:33:19] <jeckstein>	i'm not actually, i'm using the clrzmq2 v2.0.0
| [Wednesday 23 March 2011] [19:33:24] <jeckstein>	since you said all it did was add the newer socket options, i didn't want to introduce too many new components into my app
| [Wednesday 23 March 2011] [19:33:52] <Guthur>	jeckstein, there was actually a couple of bug fixes after that
| [Wednesday 23 March 2011] [19:34:03] <Guthur>	are you using polling?
| [Wednesday 23 March 2011] [19:35:06] <jeckstein>	i'm not setting polling explicitly
| [Wednesday 23 March 2011] [19:36:12] <Guthur>	ok, best to get some code together so I can run an identical test to try and reproduce the bug
| [Wednesday 23 March 2011] [19:37:45] <jeckstein>	ok, I'll update my clrzmq2
| [Wednesday 23 March 2011] [19:39:49] <jeckstein>	guthur, are you familiar with reading windows memory dump files?
| [Wednesday 23 March 2011] [19:40:24] <Guthur>	to be honest no
| [Wednesday 23 March 2011] [19:41:40] <jeckstein>	no problem, i was able to get the dump but couldn't get too much out of it..one thing I did see interesting was that part of the stack trace for the error included 2 back to back calls to zmq_stopwatch_stop
| [Wednesday 23 March 2011] [20:05:12] <mikko>	pieterh: did you push the latest make dist fixes?
| [Wednesday 23 March 2011] [20:12:46] <Guthur>	jeckstein, any success getting a minimal test case?
| [Wednesday 23 March 2011] [20:14:11] <jeckstein>	no, its going to take me a little while to do that, i just compiled and loaded the newest clrzmq2 (2.1.0) and am testing it on my application now
| [Wednesday 23 March 2011] [20:18:13] <Guthur>	ok, cool
| [Wednesday 23 March 2011] [20:37:27] <jaten>	hey guys, I'm getting a core dump in /lib/libpthread.so in the head of the git repos for zeromq, running the first server.cpp example in the Guide. This is on ubuntu 10.10 with /lib/libpthread.so.0 from libc 2.12.1-0ubuntu10.2.  It doesn't happen with with the earlier 10.04 with libc 2.11.1-0ubuntu7.8 or 7.7, which has /lib/libpthread.so.0 version  2.11.1.  Is this a known issue?  If not where would I post for assistance/bug report?
| [Wednesday 23 March 2011] [20:43:10] <Guthur>	jaten, you should probably raise a ticket on github, and maybe fire a description on to the mailing list
| [Wednesday 23 March 2011] [21:51:19] <jaten>	Guthur: okay, thanks. I'll do that.
| [Thursday 24 March 2011] [02:16:22] <ferrouswheel>	is there any support for message priorities or QoS? saw various discussions on the mailing list, but not sure if it eventuated into anything?
| [Thursday 24 March 2011] [02:26:25] <sustrik>	ad message priorities: no, you have to use different message feeds to get different priorities
| [Thursday 24 March 2011] [02:26:33] <sustrik>	ad QoS: it can be set on network level
| [Thursday 24 March 2011] [02:27:24] <sustrik>	http://www.zeromq.org/whitepapers:traffic-monitoring-v20
| [Thursday 24 March 2011] [02:30:11] <ferrouswheel>	sustrik, thanks - that's what i suspected
| [Thursday 24 March 2011] [02:39:39] <ferrouswheel>	i want to use zeromq for an (initially) inprocess rpc, but would like to decrease the priority of clients that make more requests. I can see various ways to do this, but am curious if a particular design makes more logical sense than others when using zeromq...
| [Thursday 24 March 2011] [02:46:38] <sustrik>	ferrouswheel: create several REP sockets, one for each priority
| [Thursday 24 March 2011] [02:46:57] <sustrik>	read requests from high priority sockets first
| [Thursday 24 March 2011] [02:47:28] <sustrik>	alternatively, you can add priority scheduling to 0mq core directly, which is something that's on the roadmap already
| [Thursday 24 March 2011] [02:50:08] <ferrouswheel>	sustrik, okay - the async server (fig 47) in the guide also seems appropriate... deciding on which worker to send a client to, depending on the request rate
| [Thursday 24 March 2011] [02:50:36] <ferrouswheel>	but i think i'll leave 0mq core modifications until i've actually used and understand 0mq better ;-)
| [Thursday 24 March 2011] [02:50:44] <sustrik>	ok
| [Thursday 24 March 2011] [04:28:13] <ianbarber>	fully confused by git. i pulled in changes from the upstream, but it seems to have committed it as a commit, so now if I do a pull req it includes those
| [Thursday 24 March 2011] [04:28:30] <ianbarber>	bunch of zguide examples and stuff
| [Thursday 24 March 2011] [04:42:06] <Steve-o>	hence it's called "git"
| [Thursday 24 March 2011] [04:42:43] <Steve-o>	I think it's git-rebase for the equivalent of svn update
| [Thursday 24 March 2011] [04:43:34] <ianbarber>	ah cool, will have a look
| [Thursday 24 March 2011] [05:55:29] <private_meta>	I've got a tcp connection, my client is stopping, but it won't quit the program, it hangs at "return" in main in mailbox_t::recv(), any idea why?
| [Thursday 24 March 2011] [05:56:53] <private_meta>	It hangs there at the termination of the context, although the connection should have been set not to linger (zmq_linger with a value of 0)
| [Thursday 24 March 2011] [06:01:41] <pieterh>	private_meta: you have a socket open somewhere
| [Thursday 24 March 2011] [06:02:38] <pieterh>	you have to close every single socket and you have to first set linger to zero on any socket which may still be doing some work (sending, or connecting)
| [Thursday 24 March 2011] [06:03:09] <pieterh>	this is the rather painful way 2.1 works but it can be fixed in the language binding
| [Thursday 24 March 2011] [06:03:51] <private_meta>	pieterh: linger is on zero on EVERY socket that is open, and how can I close the sockets in C++ apart from calling their destructor (which I'm already doing)?
| [Thursday 24 March 2011] [06:04:41] <pieterh>	I see two possibilities... either you have forgotten a socket somewhere, or the C++ binding is buggy
| [Thursday 24 March 2011] [06:05:46] <private_meta>	let me try something
| [Thursday 24 March 2011] [06:05:59] <pieterh>	private_meta: I've just checked the C++ binding code and there is an explicit close method
| [Thursday 24 March 2011] [06:06:33] <pieterh>	which the destructor just wraps
| [Thursday 24 March 2011] [06:06:45] <private_meta>	Ah ok... the socket was a pointer in there, and destructor of a pointer isn't called implicitly
| [Thursday 24 March 2011] [06:06:53] <pieterh>	right
| [Thursday 24 March 2011] [06:06:59] <private_meta>	only if it's a non-pointer object (which I use normally)
| [Thursday 24 March 2011] [06:07:47] <pieterh>	in zapi, I'm delingering/closing sockets automatically when the context is destroyed
| [Thursday 24 March 2011] [06:07:58] <pieterh>	it makes life so much simpler
| [Thursday 24 March 2011] [06:08:06] <private_meta>	zapi?
| [Thursday 24 March 2011] [06:08:15] <pieterh>	the new high-level C API
| [Thursday 24 March 2011] [06:08:20] <pieterh>	http://zero.mq/c
| [Thursday 24 March 2011] [06:09:42] <private_meta>	Well, if the socket object were destroyed that would have been the case, but it wasn't
| [Thursday 24 March 2011] [06:10:12] <pieterh>	Sure, you still need to go set linger to zero on sockets
| [Thursday 24 March 2011] [06:11:14] 	 * pieterh does not like a terminate function that potentially blocks forever
| [Thursday 24 March 2011] [06:11:32] <private_meta>	I did some other stuff for a week so I'm still at translating the guide examples
| [Thursday 24 March 2011] [06:11:43] <pieterh>	into C++?
| [Thursday 24 March 2011] [06:11:46] <private_meta>	yeah
| [Thursday 24 March 2011] [06:11:58] <pieterh>	was it you who asked about modifying the C++ API?
| [Thursday 24 March 2011] [06:12:29] <private_meta>	Well, I asked about using pointers in the C++ binding
| [Thursday 24 March 2011] [06:12:42] <private_meta>	and the zmq::version
| [Thursday 24 March 2011] [06:12:51] <pieterh>	yeah, and that led to thinking about splitting the C++ binding into its own project
| [Thursday 24 March 2011] [06:12:55] <private_meta>	Yes
| [Thursday 24 March 2011] [06:13:03] <private_meta>	As far as I remember, it did
| [Thursday 24 March 2011] [06:13:05] <pieterh>	you already translated zhelpers, zmsg, etc. right?
| [Thursday 24 March 2011] [06:13:10] <private_meta>	Yes
| [Thursday 24 March 2011] [06:13:20] <pieterh>	so... I have a small suggestion
| [Thursday 24 March 2011] [06:13:27] <pieterh>	let's make zapi++
| [Thursday 24 March 2011] [06:13:28] <private_meta>	I didN't get to continue until now, so I'm at ppworker/ppqueue now
| [Thursday 24 March 2011] [06:13:45] <pieterh>	zapi basically refactors the zhelpers/zmsg APIs into something neater
| [Thursday 24 March 2011] [06:15:31] <private_meta>	Sounds ok, but I'd recommend not using pointers in function parameters
| [Thursday 24 March 2011] [06:15:37] <pieterh>	indeed
| [Thursday 24 March 2011] [06:16:20] <pieterh>	so the thing here is that I'm going to migrate the C examples onto zapi
| [Thursday 24 March 2011] [06:16:28] <pieterh>	maybe not all, but the more complex ones, in any case
| [Thursday 24 March 2011] [06:17:52] <pieterh>	since you know the zhelpers/zmsg API well, would you take a look at zapi?
| [Thursday 24 March 2011] [06:18:22] <private_meta>	sure
| [Thursday 24 March 2011] [06:18:42] <pieterh>	it'd be really useful to get your design of a C++ binding at the same level
| [Thursday 24 March 2011] [06:18:44] <private_meta>	but right now I need to fix this (somewhat) small ppworker problem I have, it doesn't get a connection
| [Thursday 24 March 2011] [06:19:11] <pieterh>	if you need a hand, shout, I'm happy to help debug code
| [Thursday 24 March 2011] [06:19:27] <pieterh>	paranoid pirates :-)
| [Thursday 24 March 2011] [06:20:16] <private_meta>	Apparently you dislike curly brackets in example code
| [Thursday 24 March 2011] [06:20:25] <pieterh>	I use them only where needed
| [Thursday 24 March 2011] [06:20:39] <pieterh>	code minimalism is kind of a style with me
| [Thursday 24 March 2011] [06:20:40] <private_meta>	Every programming teacher tells you to not do that ;)
| [Thursday 24 March 2011] [06:20:48] <pieterh>	that's why they're teachers
| [Thursday 24 March 2011] [06:20:52] <pieterh>	not programmers
| [Thursday 24 March 2011] [06:20:54] <private_meta>	It destroys readability
| [Thursday 24 March 2011] [06:21:03] <pieterh>	there's only one way to learn how to program
| [Thursday 24 March 2011] [06:21:20] <pieterh>	to quote Zed Shaw, by "programming, motherfucker"
| [Thursday 24 March 2011] [06:21:26] <private_meta>	Oh, I tend to agree with them, and many programming teachers we have here had huge programming projects already
| [Thursday 24 March 2011] [06:21:59] <pieterh>	so you mean for example an if statement with only one line, no braces?
| [Thursday 24 March 2011] [06:22:02] <private_meta>	You add one line to an if statement, tend to forget you didn't have brackets
| [Thursday 24 March 2011] [06:22:16] <pieterh>	sure
| [Thursday 24 March 2011] [06:23:05] <pieterh>	then this is one of my bad habits, removing braces when they're not needed
| [Thursday 24 March 2011] [06:23:06] <private_meta>	Code shouldn't be hard to read, especially if adding brackets doesn't change the compiled results
| [Thursday 24 March 2011] [06:23:24] <pieterh>	readability comes only from consistency, adding or removing brackets doesn't affect it IMO
| [Thursday 24 March 2011] [06:23:40] <pieterh>	however, if you want, go through all my examples and add brackets
| [Thursday 24 March 2011] [06:23:45] <private_meta>	Consistency also means you use brackets, so use them everywhere :)
| [Thursday 24 March 2011] [06:23:46] <pieterh>	my only rule is 100% consistency, really
| [Thursday 24 March 2011] [06:24:00] <pieterh>	I consistently don't use them when I can avoid them
| [Thursday 24 March 2011] [06:24:19] <pieterh>	it creates extra lines that do nothing, grouping a single line is pointless IMO
| [Thursday 24 March 2011] [06:24:42] <private_meta>	sure, it seems pointless if you like minimalism
| [Thursday 24 March 2011] [06:24:47] <pieterh>	indeed
| [Thursday 24 March 2011] [06:24:50] <pieterh>	which I really do
| [Thursday 24 March 2011] [06:25:06] <pieterh>	functional minimalism, of course, so using clear names, blank space, etc.
| [Thursday 24 March 2011] [06:25:32] <pieterh>	but it is probably just a bad habit... :-)
| [Thursday 24 March 2011] [06:25:43] <private_meta>	I mean, using "cond ? statem1 : statem2" would be minimalistic
| [Thursday 24 March 2011] [06:25:52] <pieterh>	yes, but unreadable in practice
| [Thursday 24 March 2011] [06:25:56] <private_meta>	still you should only do it in very special cases, 'cause mostly it's unreadable
| [Thursday 24 March 2011] [06:26:00] <pieterh>	I do that in some cases when it's obvious
| [Thursday 24 March 2011] [06:26:04] <private_meta>	yes
| [Thursday 24 March 2011] [06:26:16] <pieterh>	the test over time is whether you can easily reuse code
| [Thursday 24 March 2011] [06:26:33] <pieterh>	I was able to put together 3K lines of code in zapi, fully tested and documented, in 1 day
| [Thursday 24 March 2011] [06:26:53] <private_meta>	by the way, is it your style to put the opening bracket on functions in the next line, but the opening brackt of ifs and elses on the same?
| [Thursday 24 March 2011] [06:27:23] <pieterh>	yes, this is historic, we reused the GNU style for functions but our own style for statements
| [Thursday 24 March 2011] [06:27:28] <private_meta>	yeah, you used that argument already with a simple text editor and printf debugging, but that still didn't make me use that
| [Thursday 24 March 2011] [06:27:45] <pieterh>	I debug zapi using printfs and valgrind
| [Thursday 24 March 2011] [06:27:52] <pieterh>	it's extraordinarily effective
| [Thursday 24 March 2011] [06:28:33] <private_meta>	not for me :)
| [Thursday 24 March 2011] [06:28:35] <pieterh>	I'm actually shocked at being able to write masses of C code and then hammer it into shape with brute force, and it works as designed
| [Thursday 24 March 2011] [06:29:02] <pieterh>	trick is to start with the API, and tests, and then implement & test small pieces at a time
| [Thursday 24 March 2011] [06:29:49] <pieterh>	presumably C++ eliminates a lot of the pointer errors we make in C
| [Thursday 24 March 2011] [06:30:17] <pieterh>	anyhow, if zapi++ takes off, you can impose your style on that :-)
| [Thursday 24 March 2011] [06:30:40] <private_meta>	hmm
| [Thursday 24 March 2011] [06:31:18] <private_meta>	I've got a weird error in ppqueue that doesn't let lpclient connect
| [Thursday 24 March 2011] [06:31:38] <pieterh>	can you paste the code somewhere?
| [Thursday 24 March 2011] [06:31:48] <private_meta>	sec
| [Thursday 24 March 2011] [06:34:24] <private_meta>	Well, I don't quite see where the error is exactly... If I use the c version of ppqueue and ppworker, lpclient works fine
| [Thursday 24 March 2011] [06:34:42] <private_meta>	https://gist.github.com/5f6a4b0a41981a66d99f https://gist.github.com/0d7456f199b546ffe5e9 https://gist.github.com/253bc2038df7d9b3ba00
| [Thursday 24 March 2011] [06:34:54] <pieterh>	you can put multiple files into one gist BTW
| [Thursday 24 March 2011] [06:35:27] <private_meta>	files, yeah, but I wasn't logged in at my virtual machine in gist
| [Thursday 24 March 2011] [06:35:33] <private_meta>	so I didn't have my files here
| [Thursday 24 March 2011] [06:35:50] <pieterh>	so ppqueue doesn't poll the client at all, unless there are workers, that's the first thing
| [Thursday 24 March 2011] [06:36:49] <pieterh>	code looks nice, very neat...
| [Thursday 24 March 2011] [06:37:18] <private_meta>	My test setup is starting ppqueue, 1 ppworker, 1 lpclient
| [Thursday 24 March 2011] [06:37:21] <pieterh>	have you already traced activity by putting in msg.dump() all over the place?
| [Thursday 24 March 2011] [06:37:29] <private_meta>	ppworker uses heartbeats
| [Thursday 24 March 2011] [06:37:32] <private_meta>	but lpclient can't connect
| [Thursday 24 March 2011] [06:37:48] <pieterh>	'can't connect' means 'does not get a reply within X seconds'
| [Thursday 24 March 2011] [06:37:53] <private_meta>	sec
| [Thursday 24 March 2011] [06:37:54] <pieterh>	so you need to trace activity in the queue
| [Thursday 24 March 2011] [06:38:07] <private_meta>	I: connecting to server...
| [Thursday 24 March 2011] [06:38:07] <private_meta>	I: connecting to server...
| [Thursday 24 March 2011] [06:38:07] <private_meta>	W: no response from server, retrying...
| [Thursday 24 March 2011] [06:38:07] <private_meta>	I: connecting to server...
| [Thursday 24 March 2011] [06:38:10] <pieterh>	sure
| [Thursday 24 March 2011] [06:38:14] <pieterh>	that can mean anything
| [Thursday 24 March 2011] [06:38:20] <pieterh>	it's not really a connection failure
| [Thursday 24 March 2011] [06:38:32] <Guthur>	that could be seem behaviour I experience with teh default timeout
| [Thursday 24 March 2011] [06:38:51] <Guthur>	It was too aggressive in it's timeout
| [Thursday 24 March 2011] [06:39:06] <Guthur>	relaxing the intervals helped
| [Thursday 24 March 2011] [06:39:12] <pieterh>	Guthur: good memory...!
| [Thursday 24 March 2011] [06:39:18] <private_meta>	if I'm using ppworker and ppqueue in the c version, lpclient doesn't receive timeouts or anything
| [Thursday 24 March 2011] [06:39:26] <pieterh>	I fixed this in the C code, hang on, let me check...
| [Thursday 24 March 2011] [06:39:56] <Guthur>	pieterh: it had me scratching my head long enough that I have deep grove to remind me, hehe
| [Thursday 24 March 2011] [06:40:14] <Guthur>	groove*
| [Thursday 24 March 2011] [06:40:48] <private_meta>	by the way, using the c++ client takes way more time than the c client
| [Thursday 24 March 2011] [06:41:27] <pieterh>	Guthur: it was in the ppworker when it simulated a CPU overload, that was always more than the client's full timeout
| [Thursday 24 March 2011] [06:41:33] <private_meta>	meaning, using c queue and worker normally, then alternating between lpclient for c and c++, the c version is way faster
| [Thursday 24 March 2011] [06:41:46] <pieterh>	private_meta: weird, that's not expected
| [Thursday 24 March 2011] [06:42:20] <pieterh>	sounds like a timer problem of some kind
| [Thursday 24 March 2011] [06:42:43] <pieterh>	there should be no measurable (let alone visible) difference between the two
| [Thursday 24 March 2011] [06:43:02] <pieterh>	private_meta: so please add msg.dump on everything the broker recvs and sends, that's step 1
| [Thursday 24 March 2011] [06:45:12] <private_meta>	k, receiving is always done in the zmsg constructor, so I'll add the dump there. should I paste the output of ppqueue?
| [Thursday 24 March 2011] [06:45:30] <pieterh>	sounds good
| [Thursday 24 March 2011] [06:45:42] <pieterh>	that will show us what the client is sending
| [Thursday 24 March 2011] [06:46:14] <private_meta>	Should I also dump messages in worker and client or just queue for now?
| [Thursday 24 March 2011] [06:46:15] <pieterh>	then we also want to see what ppqueue is sending
| [Thursday 24 March 2011] [06:46:22] <pieterh>	start with queue
| [Thursday 24 March 2011] [06:46:26] <private_meta>	k
| [Thursday 24 March 2011] [06:46:31] <pieterh>	presumably there's a problem between queue and worker
| [Thursday 24 March 2011] [06:46:34] <pieterh>	so next, worker
| [Thursday 24 March 2011] [06:51:25] <private_meta>	argh
| [Thursday 24 March 2011] [06:51:32] <private_meta>	how do I redirect output AND stderror to file?
| [Thursday 24 March 2011] [06:51:54] <pieterh>	myprog > err.log 2>&1
| [Thursday 24 March 2011] [06:52:50] <private_meta>	"Aborted"
| [Thursday 24 March 2011] [06:53:10] <private_meta>	ah ok now
| [Thursday 24 March 2011] [06:53:44] <private_meta>	argh
| [Thursday 24 March 2011] [06:54:22] <pieterh>	sounds positive... :-)
| [Thursday 24 March 2011] [06:54:34] <pieterh>	or else you're at the dentist... "open wider, please!"
| [Thursday 24 March 2011] [06:54:48] <ianbarber>	pieterh: sent a pull req for the zguide, noticed that it was notifying sustrik though, which seems probably incorrect
| [Thursday 24 March 2011] [06:55:04] <private_meta>	no, that didn't redirect everything
| [Thursday 24 March 2011] [06:55:35] <pieterh>	ianbarber: weird, but presumably he's a watcher of that repo?
| [Thursday 24 March 2011] [06:55:54] <private_meta>	ok, screw it, I'll just copy from console if that doesn't work
| [Thursday 24 March 2011] [06:57:18] <private_meta>	pieterh: https://gist.github.com/2a9823bb9163202ec026
| [Thursday 24 March 2011] [06:57:57] <private_meta>	pieterh: that's the log from starting ppworker till disconnecting (killing) ppworker
| [Thursday 24 March 2011] [06:58:10] <private_meta>	in the middle, I started lpclient and it terminated by itself
| [Thursday 24 March 2011] [06:58:18] <pieterh>	ianbarber: got them, thanks!
| [Thursday 24 March 2011] [06:58:24] <pieterh>	private_meta: ok, reading that...
| [Thursday 24 March 2011] [06:59:12] <pieterh>	private_meta: I assume it should say 'after recv' not 'before recv'...
| [Thursday 24 March 2011] [06:59:23] <private_meta>	ah yes
| [Thursday 24 March 2011] [06:59:30] <pieterh>	so you have a bug in the worker
| [Thursday 24 March 2011] [06:59:40] <pieterh>	try running your queue, your client, my worker
| [Thursday 24 March 2011] [07:00:29] <pieterh>	I'll let you figure out what the error is, it's clear from the trace
| [Thursday 24 March 2011] [07:00:37] <pieterh>	:-)
| [Thursday 24 March 2011] [07:00:50] <private_meta>	Doesn't work
| [Thursday 24 March 2011] [07:00:58] <private_meta>	same error
| [Thursday 24 March 2011] [07:01:20] <pieterh>	that's unpossible! :-)
| [Thursday 24 March 2011] [07:01:41] <pieterh>	ok, try my worker, my client, your queue...
| [Thursday 24 March 2011] [07:02:06] <pieterh>	hang on, that's just the same, sorry...
| [Thursday 24 March 2011] [07:02:25] <pieterh>	your worker, my queue, your client...
| [Thursday 24 March 2011] [07:03:00] <pieterh>	the error shows on lines 32-41
| [Thursday 24 March 2011] [07:03:01] <private_meta>	should be the same, let me check (i think i tried that already)
| [Thursday 24 March 2011] [07:03:33] <private_meta>	No, doesn't work
| [Thursday 24 March 2011] [07:04:00] <private_meta>	sec, gotta fetch a delivery, bb in 5 minutes or so
| [Thursday 24 March 2011] [07:04:03] <pieterh>	then you have a problem in BOTH your worker and your queue, perhaps because it's in the msg class
| [Thursday 24 March 2011] [07:04:09] <pieterh>	cyl, then
| [Thursday 24 March 2011] [07:08:07] <private_meta>	i hope this time the tablet pc is alright
| [Thursday 24 March 2011] [07:08:20] <private_meta>	pieterh: ok, then what might be the problem in the zmsg class? any idea?
| [Thursday 24 March 2011] [07:08:36] <pieterh>	private_meta: look at lines 32-41 of your trace
| [Thursday 24 March 2011] [07:08:51] <pieterh>	the worker sends back (or the queue wrongly receives) the worker address twice
| [Thursday 24 March 2011] [07:09:01] <pieterh>	when it should be worker address, then original client address
| [Thursday 24 March 2011] [07:09:14] <pieterh>	thus the reply to the client gets sent back to the worker instead
| [Thursday 24 March 2011] [07:09:28] <private_meta>	hmm
| [Thursday 24 March 2011] [07:09:55] <pieterh>	you see the wrong addresses, right?
| [Thursday 24 March 2011] [07:10:04] <private_meta>	yes
| [Thursday 24 March 2011] [07:10:33] <pieterh>	this is kind of standard when using envelopes, they are tricky to get right
| [Thursday 24 March 2011] [07:11:10] <pieterh>	you can now add printfs to msg where it's recving and sending frames
| [Thursday 24 March 2011] [07:11:27] <private_meta>	So this might be a problem the selftest didn't catch?
| [Thursday 24 March 2011] [07:11:31] <pieterh>	for sure
| [Thursday 24 March 2011] [07:12:33] <pieterh>	hmm, there is a unit test for this but it's not double-checking every frame
| [Thursday 24 March 2011] [07:12:38] <pieterh>	could improve that
| [Thursday 24 March 2011] [07:13:02] <private_meta>	ah goddammit, i need to fetch a usb dvd drive again...
| [Thursday 24 March 2011] [07:13:05] <pieterh>	:-)
| [Thursday 24 March 2011] [07:13:26] <private_meta>	well, hp guys didn't think it would be a good idea to install a 64bit operating system on their latest notebooks
| [Thursday 24 March 2011] [07:13:41] <pieterh>	32 bits should be enough for anyone
| [Thursday 24 March 2011] [07:13:50] <pieterh>	maybe it's a subtle hint to install Ubuntu...
| [Thursday 24 March 2011] [07:14:16] <private_meta>	No, I can't use Linux in everyday life, creates too many problems
| [Thursday 24 March 2011] [07:14:24] <private_meta>	(Murphies Law and everything)
| [Thursday 24 March 2011] [07:14:35] <pieterh>	my sympathies...
| [Thursday 24 March 2011] [07:15:19] <private_meta>	Everytime I tried to use something on Linux for personal use, it failed in a way that wasn't fixable
| [Thursday 24 March 2011] [07:15:47] <pieterh>	weird, I've been using Linux for 10+ years and it's irreplaceable for me
| [Thursday 24 March 2011] [07:15:56] <private_meta>	I've been using Linux for that long as well, but I can't use it as a primary system
| [Thursday 24 March 2011] [07:16:08] <private_meta>	apart from that, as a gamer I need Windows anyway
| [Thursday 24 March 2011] [07:16:12] <pieterh>	10+ years for primary personal use, since early 1990's for work
| [Thursday 24 March 2011] [07:16:27] <pieterh>	ah, games
| [Thursday 24 March 2011] [07:16:49] <private_meta>	Well, some like it, others don't, I tend to be someone fond of games :)
| [Thursday 24 March 2011] [07:17:11] <private_meta>	But it's not like playing games is the only reason ;)
| [Thursday 24 March 2011] [07:17:48] <pieterh>	are any game engines using 0MQ yet, I wonder...
| [Thursday 24 March 2011] [07:18:11] <pieterh>	"shoots 4M bullets per second!!!"
| [Thursday 24 March 2011] [07:27:23] <mikko-_>	mato
| [Thursday 24 March 2011] [07:27:25] <mikko-_>	there?
| [Thursday 24 March 2011] [07:27:44] <mikko-_>	pieterh: you remember ben from zeromq london meetup?
| [Thursday 24 March 2011] [07:27:50] <pieterh>	sure
| [Thursday 24 March 2011] [07:27:55] <mikko-_>	he works in gaming industry 
| [Thursday 24 March 2011] [07:28:12] <pieterh>	right, he was "putting 0MQ everywhere"
| [Thursday 24 March 2011] [07:28:27] <mikko-_>	you could pry from him on which games he works on
| [Thursday 24 March 2011] [07:28:35] <pieterh>	nah, I don't really care :-)
| [Thursday 24 March 2011] [07:28:59] <ianbarber>	his latest, total war shogun 2 is out now! i'm sure he'd support your purchasing :)
| [Thursday 24 March 2011] [07:29:05] <pieterh>	I used to write games but don't play them
| [Thursday 24 March 2011] [07:29:21] <Guthur>	I really liked the total war series
| [Thursday 24 March 2011] [07:29:29] <Guthur>	don't game much anymore though
| [Thursday 24 March 2011] [07:30:14] <ianbarber>	shogun 2 is actually quite a lot of fun. i'm all mac everywhere now though, and they're windows only though
| [Thursday 24 March 2011] [07:30:16] <Guthur>	no time these days unfortunately
| [Thursday 24 March 2011] [07:31:46] <ianbarber>	i think it would be very beneficial for engines though, everyone has to deal with many cores these days
| [Thursday 24 March 2011] [07:32:09] <ianbarber>	x360 is what, 6? ps3 7. and most decent desktops are at least 4
| [Thursday 24 March 2011] [07:32:10] <pieterh>	I recall people asking about this ages ago, when 0MQ was 0.something
| [Thursday 24 March 2011] [07:45:20] <pieterh>	mikko-_: you got a second?
| [Thursday 24 March 2011] [07:48:35] <mikko-_>	pieterh: yes
| [Thursday 24 March 2011] [07:49:09] <pieterh>	I'd like to start on a new phase of the zmq packaging
| [Thursday 24 March 2011] [07:49:26] <pieterh>	that is, start including other parts of the community into "ZeroMQ/x.y"
| [Thursday 24 March 2011] [07:49:36] <pieterh>	2.1 is libzmq and libpgm
| [Thursday 24 March 2011] [07:50:11] <pieterh>	I'm thinking 2.2 will be libzmq, libpgm, libzapi, and maybe one or two other language bindings
| [Thursday 24 March 2011] [07:51:40] <pieterh>	any thoughts on that? libzapi uses autotools, should be simple
| [Thursday 24 March 2011] [07:53:31] <sustrik>	given that it's exactly 1 day old, it sound a bit premature to include it into stable
| [Thursday 24 March 2011] [07:53:42] <pieterh>	sustrik: that's why I said 2.2...
| [Thursday 24 March 2011] [07:53:48] <sustrik>	ah, ok
| [Thursday 24 March 2011] [07:53:54] <pieterh>	:-) indeed, it's not ready for stable
| [Thursday 24 March 2011] [07:54:16] <pieterh>	it strikes me that libpgm integration doesn't have to be a special case
| [Thursday 24 March 2011] [07:55:32] <pieterh>	sustrik: btw, I used inproc pipes to create a lockfree object, as you do inside core
| [Thursday 24 March 2011] [07:55:52] <pieterh>	it's tricky because the object is actually the context wrapper, but it's really neat otherwise
| [Thursday 24 March 2011] [07:58:38] <mikko-_>	hmm
| [Thursday 24 March 2011] [07:58:51] <mikko-_>	pieter: you mean into same package?
| [Thursday 24 March 2011] [07:59:01] <pieterh>	yes, I mean expand the scope of the download
| [Thursday 24 March 2011] [07:59:08] <mikko-_>	distros like if you keep things separate
| [Thursday 24 March 2011] [07:59:18] <pieterh>	different issue
| [Thursday 24 March 2011] [07:59:24] <pieterh>	distros can repackage individual libraries
| [Thursday 24 March 2011] [07:59:33] <pieterh>	users like getting one package
| [Thursday 24 March 2011] [07:59:47] <pieterh>	imagine having to download & build libpgm separately
| [Thursday 24 March 2011] [07:59:58] <mikko-_>	thats what i would normally expect to do
| [Thursday 24 March 2011] [08:00:01] <mikko-_>	:)
| [Thursday 24 March 2011] [08:00:10] <mikko-_>	install dependencies before the software
| [Thursday 24 March 2011] [08:00:13] <pieterh>	yes, but you're a developer not a sysadmin
| [Thursday 24 March 2011] [08:00:48] <mikko-_>	from sysadmin pov i would package rpm and install the packages that are defined in "BuildRequires" stanza
| [Thursday 24 March 2011] [08:00:58] <mikko-_>	assuming everything is available as rpm
| [Thursday 24 March 2011] [08:00:59] <pieterh>	we can still publish minimal packages for distros
| [Thursday 24 March 2011] [08:01:13] <mikko-_>	do you want these to be built together as well?
| [Thursday 24 March 2011] [08:01:18] <mikko-_>	or just packaged together?
| [Thursday 24 March 2011] [08:01:28] <pieterh>	well, there are two main reasons for packaging together
| [Thursday 24 March 2011] [08:01:43] <pieterh>	a. convenience for installing
| [Thursday 24 March 2011] [08:01:50] <pieterh>	b. tested as a single unit
| [Thursday 24 March 2011] [08:02:04] <pieterh>	so for b, yes, we'd also build/test the collection
| [Thursday 24 March 2011] [08:02:14] <pieterh>	as we would do for libpgm, it's exactly the same
| [Thursday 24 March 2011] [08:02:43] <pieterh>	otherwise 0MQ cannot scale
| [Thursday 24 March 2011] [08:03:10] <mikko-_>	where do you draw the line what should be packaged?
| [Thursday 24 March 2011] [08:03:16] <mikko-_>	should all language bindings be bundled?
| [Thursday 24 March 2011] [08:03:21] <pieterh>	well, I don't draw a line as such
| [Thursday 24 March 2011] [08:03:21] <mikko-_>	what about devices?
| [Thursday 24 March 2011] [08:03:40] <pieterh>	what I'd do is do this step by step and stop when it's no longer worth going further
| [Thursday 24 March 2011] [08:03:52] <pieterh>	imagine there's a separate project with overall tests
| [Thursday 24 March 2011] [08:03:56] <pieterh>	I'd probably package that
| [Thursday 24 March 2011] [08:04:10] <pieterh>	I'd probably package all available documentation
| [Thursday 24 March 2011] [08:04:31] <pieterh>	but gradually, otherwise it's indigestable
| [Thursday 24 March 2011] [08:05:21] <pieterh>	this also makes it easier to e.g. make a Windows kit, it's the same set of packages with a MSI frontend
| [Thursday 24 March 2011] [08:06:08] <pieterh>	so the release repositories are where this happens, presumably using submodules
| [Thursday 24 March 2011] [08:07:17] <pieterh>	this also gives project developers something to aim at
| [Thursday 24 March 2011] [08:07:24] <Guthur>	I have to admit that I would take a similar point of view as mikko
| [Thursday 24 March 2011] [08:07:39] <pieterh>	many people will, for sure
| [Thursday 24 March 2011] [08:07:55] <Guthur>	I have a similar decision to make with clrzmq2
| [Thursday 24 March 2011] [08:08:23] <pieterh>	if you actually look at the process of getting 0MQ working with language XYZ, it's often a real pain
| [Thursday 24 March 2011] [08:08:27] <Guthur>	prepackaging libzmq.dll would allow the binding to seamlessly support 32/64 bit environment
| [Thursday 24 March 2011] [08:08:33] <pieterh>	indeed
| [Thursday 24 March 2011] [08:08:53] <Guthur>	but I would rather have the users get the libzmq straight from the 'golden' source
| [Thursday 24 March 2011] [08:09:07] <pieterh>	If I download 0MQ for Windows I'd expect to get clrzmq2 included
| [Thursday 24 March 2011] [08:09:15] <Guthur>	so bug fixes etc can be propagated 
| [Thursday 24 March 2011] [08:09:20] <pieterh>	well, as an option
| [Thursday 24 March 2011] [08:09:33] <pieterh>	but mostly, it's asking users to do extra work
| [Thursday 24 March 2011] [08:09:50] <pieterh>	that always eliminates a large chunk of users
| [Thursday 24 March 2011] [08:10:04] <Guthur>	yeah, I'm aware I maybe be falling into the worse is better mind set
| [Thursday 24 March 2011] [08:10:55] <pieterh>	people who don't (yet) have an emotional connection to a project simply won't tolerate pain to start using it
| [Thursday 24 March 2011] [08:11:09] <pieterh>	it has to be really, really simple to "get" 0MQ
| [Thursday 24 March 2011] [08:11:22] <pieterh>	after that, it can become more and more complex, that's fine
| [Thursday 24 March 2011] [08:11:56] <pieterh>	but the first taste must not be complex or difficult
| [Thursday 24 March 2011] [08:12:22] <pieterh>	IMHO
| [Thursday 24 March 2011] [08:12:38] <Guthur>	sure, someone is actually looking to contribute something to clrzmq2 to improve the 32/64 bit issue
| [Thursday 24 March 2011] [08:12:55] <Guthur>	that issue would even more simply removed by prepackaging
| [Thursday 24 March 2011] [08:13:11] <pieterh>	so let's look at making a Windows package?
| [Thursday 24 March 2011] [08:13:27] <pieterh>	libzmq+clrzmq2+libzapi
| [Thursday 24 March 2011] [08:13:41] <pieterh>	+libpgm
| [Thursday 24 March 2011] [08:14:08] <Guthur>	I'll put looking at a WiX project for it on my ToDo list
| [Thursday 24 March 2011] [08:14:16] <pieterh>	WiX = windows installer?
| [Thursday 24 March 2011] [08:14:24] <Guthur>	WiX is a windows installer declarative language
| [Thursday 24 March 2011] [08:14:30] <pieterh>	nice
| [Thursday 24 March 2011] [08:15:01] <Guthur>	yeah only down side is it uses XML based grammar
| [Thursday 24 March 2011] [08:15:24] <pieterh>	XML grammars can be neat if done right but usually they're not
| [Thursday 24 March 2011] [08:15:42] <Guthur>	the worlds irrational love of XML pains me
| [Thursday 24 March 2011] [08:16:13] <pieterh>	Well, I've written maybe 100k lines of declarative XML and it works fine if you're minimalist
| [Thursday 24 March 2011] [08:16:41] <Guthur>	there is some many attributes and elements that it quickly becomes messy
| [Thursday 24 March 2011] [08:16:50] <Guthur>	...for WiX
| [Thursday 24 March 2011] [08:17:18] <pieterh>	http://download.imatix.com/mop/beginning.html for example
| [Thursday 24 March 2011] [08:17:25] <pieterh>	anyhow, WiX...
| [Thursday 24 March 2011] [08:17:52] <pieterh>	if you decide to start a packaging project, let's make a separate repo for that
| [Thursday 24 March 2011] [08:17:57] <pieterh>	not inside clrzmq2
| [Thursday 24 March 2011] [08:17:59] <Guthur>	on the other hand I like sexp, which a lot of people don't like
| [Thursday 24 March 2011] [08:18:05] <Guthur>	pieterh: ok
| [Thursday 24 March 2011] [08:30:51] <mikko-_>	pieter
| [Thursday 24 March 2011] [08:30:55] <mikko-_>	the doc generation is broken
| [Thursday 24 March 2011] [08:30:59] <mikko-_>	in mnay ways
| [Thursday 24 March 2011] [08:31:01] <pieterh>	which project?
| [Thursday 24 March 2011] [08:31:02] <mikko-_>	:)
| [Thursday 24 March 2011] [08:31:05] <pieterh>	rfc?
| [Thursday 24 March 2011] [08:31:09] <mikko-_>	zeromq
| [Thursday 24 March 2011] [08:31:13] <mikko-_>	the wikidot api thingy
| [Thursday 24 March 2011] [08:31:23] <pieterh>	hang on a sec...
| [Thursday 24 March 2011] [08:31:27] <mikko-_>	1) the call to wikidot fails with "Unauthorised"
| [Thursday 24 March 2011] [08:31:36] <mikko-_>	2) it prints out your API key in the error message
| [Thursday 24 March 2011] [08:31:41] <pieterh>	yes, I pinged you about that, you missed that
| [Thursday 24 March 2011] [08:31:59] <pieterh>	Wikidot upgraded their API for security reasons
| [Thursday 24 March 2011] [08:32:00] <mikko-_>	i miss so many things using this web irc client
| [Thursday 24 March 2011] [08:32:31] <pieterh>	you need to be a member of the rfc site to publish to it, that's one thing
| [Thursday 24 March 2011] [08:32:38] <pieterh>	afair I did make you member, let me check
| [Thursday 24 March 2011] [08:32:59] <pieterh>	s/rfc/api/
| [Thursday 24 March 2011] [08:33:01] <mikko-_>	it uses pieterh user
| [Thursday 24 March 2011] [08:33:21] <pieterh>	you should be using your own API key by now  :-)
| [Thursday 24 March 2011] [08:33:27] <pieterh>	you were authorized ages ago
| [Thursday 24 March 2011] [08:33:32] <mikko-_>	oh, ok
| [Thursday 24 March 2011] [08:33:39] <pieterh>	mine changed, old one is no longer valid
| [Thursday 24 March 2011] [08:33:39] <mikko-_>	will check that this evening
| [Thursday 24 March 2011] [08:33:50] <mikko-_>	good
| [Thursday 24 March 2011] [08:34:07] <pieterh>	what's your wikidot user id?
| [Thursday 24 March 2011] [08:34:13] <pieterh>	i need to make you member of the site
| [Thursday 24 March 2011] [08:34:35] <pieterh>	mkoppanen, I assume, you're invited
| [Thursday 24 March 2011] [08:34:51] <pieterh>	you were already invited, mikko :-)
| [Thursday 24 March 2011] [08:35:32] <pieterh>	accept the invite, grab your own API key, fix your environment, and it'll work
| [Thursday 24 March 2011] [08:36:07] <pieterh>	meanwhile I'll update that site for 2.1.3
| [Thursday 24 March 2011] [08:53:00] <Guthur>	pieterh: actually in relation to clrzmq2 packaging, there is something called NuGet
| [Thursday 24 March 2011] [08:53:09] <Guthur>	which I think is something similar to Maven
| [Thursday 24 March 2011] [08:53:25] <pieterh>	Guthur tries to confuse pieterh by throwing random words at him
| [Thursday 24 March 2011] [08:53:45] <Guthur>	similiar to ANT with dependency repo management
| [Thursday 24 March 2011] [08:53:46] 	 * pieterh is suitably confused, rolls 5 "Go to Google"
| [Thursday 24 March 2011] [08:53:53] <private_meta>	This is great
| [Thursday 24 March 2011] [08:54:04] <Guthur>	hehe I was just trying to confuse you more with that last one
| [Thursday 24 March 2011] [08:54:05] <private_meta>	I have VirtualBox Virtual Machines running on Windows
| [Thursday 24 March 2011] [08:54:23] <pieterh>	private_meta: VirtualBox is really useful, indeed
| [Thursday 24 March 2011] [08:54:24] <private_meta>	As soon as I pull up the Microsoft VirtualPC Settings dialog, every VirtualBox Machine crashes
| [Thursday 24 March 2011] [08:54:27] <Guthur>	private_meta: I go the other way round VM windows on Linux, heeh
| [Thursday 24 March 2011] [08:54:32] <pieterh>	oh, lol
| [Thursday 24 March 2011] [08:54:44] <pieterh>	VirtualPC has the VirtualBox killer option enabled!
| [Thursday 24 March 2011] [08:54:46] <private_meta>	great, isn't it?
| [Thursday 24 March 2011] [08:55:06] <Guthur>	Virtual Box is pretty neat
| [Thursday 24 March 2011] [08:55:28] <pieterh>	it is, indeed... I used it to install a Windows iTunes to reformat my old iPod so I could use that under Ubuntu...
| [Thursday 24 March 2011] [08:55:30] 	 * Guthur worries about what Oracle might do with all the free stuff they now own
| [Thursday 24 March 2011] [08:55:31] <private_meta>	It has it's disadvantages, but there is only so much choice you have if you go the gratis way
| [Thursday 24 March 2011] [08:55:48] <Guthur>	oracle is not renowned for their generosity 
| [Thursday 24 March 2011] [08:55:57] <private_meta>	Not really, no
| [Thursday 24 March 2011] [08:56:01] <pieterh>	Guthur: the GPL doesn't depend on generosity...
| [Thursday 24 March 2011] [08:56:34] <private_meta>	That's not the problem imho
| [Thursday 24 March 2011] [08:57:03] <private_meta>	Oracle owns the majority of the developers working on VirtualBox
| [Thursday 24 March 2011] [08:57:11] <private_meta>	That means, whatever they want in, they can put in
| [Thursday 24 March 2011] [08:57:17] <private_meta>	Same with Java or OpenOffice
| [Thursday 24 March 2011] [08:57:29] <private_meta>	Now, as seen with OpenOffice, the only way to go against that would be a fork
| [Thursday 24 March 2011] [08:57:34] <private_meta>	and that's never an ideal solution
| [Thursday 24 March 2011] [08:57:57] <pieterh>	I doubt Oracle is worse than, say, IBM, who have lots of people working on Apache projects
| [Thursday 24 March 2011] [08:58:20] <pieterh>	Oracle will happily do what IBM does, use free software to hurt competitors
| [Thursday 24 March 2011] [08:59:35] <private_meta>	The good/bad thing about doubt is that it's not the same thing as proof
| [Thursday 24 March 2011] [09:00:08] <pieterh>	well, Sun weren't particularly great with FOSS either
| [Thursday 24 March 2011] [09:00:27] <pieterh>	shrug, there is no certainty in life, and that's probably a good thing
| [Thursday 24 March 2011] [09:01:28] <private_meta>	Well, seeing it in a different way, when you analyze evolution, and you think about mutation, it's not always the "better" solution that survives
| [Thursday 24 March 2011] [09:01:36] <private_meta>	it's the stronger one...
| [Thursday 24 March 2011] [09:01:49] <private_meta>	Oracle might be stronger, doesn't mean it's better for everyone
| [Thursday 24 March 2011] [09:01:54] <pieterh>	private_meta: actually, by the very definition of selection, it is always the better one... :-)
| [Thursday 24 March 2011] [09:02:16] <pieterh>	but business is not evolutionary, really
| [Thursday 24 March 2011] [09:02:25] <private_meta>	in some way it is
| [Thursday 24 March 2011] [09:02:28] <pieterh>	well, actually yes, it is
| [Thursday 24 March 2011] [09:02:37] <pieterh>	and large firms are like large predators
| [Thursday 24 March 2011] [09:02:38] <private_meta>	it's just a redefinition of "better"
| [Thursday 24 March 2011] [09:02:42] <pieterh>	yes, precisely
| [Thursday 24 March 2011] [09:03:08] <pieterh>	large firms can be extraordinarily greedy, damaging, etc. but they are also slow, stupid, cautious
| [Thursday 24 March 2011] [09:03:28] <Guthur>	0MQ is better, so we win, hehe
| [Thursday 24 March 2011] [09:03:51] <pieterh>	100 genius brains, sitting in a corporate office, cannot compete with 100 happy brains, organized freely
| [Thursday 24 March 2011] [09:04:04] <pieterh>	we're better, therefore 0MQ is better
| [Thursday 24 March 2011] [09:04:44] <stimpie>	if we find out why my application gets slow when using inproc to communicate between java threads
| [Thursday 24 March 2011] [09:05:00] <pieterh>	stimpie: how are you measuring it?
| [Thursday 24 March 2011] [09:06:23] 	 * private_meta imagines 100 happy Forrest Gumps sitting in front of computers
| [Thursday 24 March 2011] [09:06:31] <stimpie>	systems with network: p-> b ->s    where b uses a thread to receivce tcp and an inproc socket to sent to another thread 
| [Thursday 24 March 2011] [09:06:58] <stimpie>	when b is a single thread I get 200k m/s 
| [Thursday 24 March 2011] [09:07:16] <stimpie>	adding a dispatcher to another thread drops speed to 70k m/s
| [Thursday 24 March 2011] [09:07:43] <stimpie>	I would expect the performance penalty in througput would be almost zero 
| [Thursday 24 March 2011] [09:08:22] <pieterh>	stimpie: how many cores are you running on?
| [Thursday 24 March 2011] [09:08:44] <pieterh>	private_meta: http://www.devilswiki.com/wiki:collective-intelligence
| [Thursday 24 March 2011] [09:08:53] <stimpie>	8 available 3 are used 
| [Thursday 24 March 2011] [09:09:32] <pieterh>	do you see a CPU usage increase?
| [Thursday 24 March 2011] [09:09:44] <pieterh>	there are two possible causes, IMO
| [Thursday 24 March 2011] [09:09:57] <pieterh>	a. actually doing extra work, e.g. recoding messages
| [Thursday 24 March 2011] [09:10:12] <pieterh>	b. round-tripping, i.e. doing req/rep on each message
| [Thursday 24 March 2011] [09:12:13] <stimpie>	extra work is minimal, all sockets are XREP 
| [Thursday 24 March 2011] [09:12:27] <pieterh>	no acknowledgments?
| [Thursday 24 March 2011] [09:12:37] <stimpie>	none
| [Thursday 24 March 2011] [09:12:52] <stimpie>	iam sending and receiving on a single socket
| [Thursday 24 March 2011] [09:13:02] <stimpie>	could that cause some race condition?
| [Thursday 24 March 2011] [09:13:05] <pieterh>	hmm, interesting. So do you see CPU usage or memory usage going up?
| [Thursday 24 March 2011] [09:14:12] <pieterh>	presumably messages queues will back up and memory use will increase
| [Thursday 24 March 2011] [09:14:41] <pieterh>	sounds like something in the Java binding... I've not played much with that
| [Thursday 24 March 2011] [09:15:47] <sustrik>	if you are sending and receiving on the same socket from different threads, that can result in race condition
| [Thursday 24 March 2011] [09:17:27] <stimpie>	cpu usage is ~230% memory usages appears to keep increasing 
| [Thursday 24 March 2011] [09:17:48] <pieterh>	stimpie: are you using the same socket from more than one thread?
| [Thursday 24 March 2011] [09:18:13] <stimpie>	one sockets sends to multiple threads 
| [Thursday 24 March 2011] [09:18:22] <stimpie>	each thread has his own socket
| [Thursday 24 March 2011] [09:18:44] <pieterh>	something is doing a *lot* of work... how large are these messages?
| [Thursday 24 March 2011] [09:19:06] <stimpie>	message size is about 40 bytes,  I will try using 2 sockets, one for sending one for receiving 
| [Thursday 24 March 2011] [09:19:17] <pieterh>	that won't help IMO
| [Thursday 24 March 2011] [09:19:51] <pieterh>	stimpie: even your single thread case is abnormally slow
| [Thursday 24 March 2011] [09:19:59] <pieterh>	200K per second is not what you'd expect
| [Thursday 24 March 2011] [09:20:36] <pieterh>	best approach IMO would be to verify Java binding performance with a simple test case
| [Thursday 24 March 2011] [09:21:23] <pieterh>	two threads, send messages from A to B over inproc
| [Thursday 24 March 2011] [09:21:54] <stimpie>	oke let me write something, just a sec
| [Thursday 24 March 2011] [09:22:05] <pieterh>	problem can be in 3 layers, libzmq, jzmq, or your code
| [Thursday 24 March 2011] [09:22:22] <pieterh>	this test should tell us what layer is guilty
| [Thursday 24 March 2011] [10:02:18] <stimpie>	while(true) send();  //is not nice on inproc
| [Thursday 24 March 2011] [10:02:45] <stimpie>	duration: 1961.39 ms, messages:1000000, speed: 509842.88 m/s
| [Thursday 24 March 2011] [10:02:58] <stimpie>	xrep inproc->xrep inproc
| [Thursday 24 March 2011] [10:07:10] <stimpie>	ps. this is on my 'slow' laptop
| [Thursday 24 March 2011] [10:13:01] <stimpie>	my test for 2way messages appears to deadlock, see http://pastebin.com/K20P6YhZ
| [Thursday 24 March 2011] [10:14:06] <stimpie>	aha my mistake
| [Thursday 24 March 2011] [10:16:42] <stimpie>	performance on with a 2 way ping-pong 
| [Thursday 24 March 2011] [10:16:43] <stimpie>	duration: 3871.77 ms, messages:100000, speed: 25827.98 m/s
| [Thursday 24 March 2011] [10:21:45] <sustrik>	what's wrong with that?
| [Thursday 24 March 2011] [10:22:00] <stimpie>	nothing 
| [Thursday 24 March 2011] [10:22:10] <stimpie>	2 threads both sending and receiving 1M messages (not interleaved) 
| [Thursday 24 March 2011] [10:22:12] <stimpie>	duration: 531.86 ms, messages:100000, speed: 188020.73 m/s
| [Thursday 24 March 2011] [10:22:14] <sustrik>	is it 25k rountrips/sec
| [Thursday 24 March 2011] [10:22:16] <sustrik>	?
| [Thursday 24 March 2011] [10:22:21] <stimpie>	yes roundtrips
| [Thursday 24 March 2011] [10:22:30] <sustrik>	that's 40us per roundrip
| [Thursday 24 March 2011] [10:22:34] <sustrik>	i.e. 20us single-way
| [Thursday 24 March 2011] [10:22:51] <pieterh>	stimpie: you said you weren't doing round trips in your application
| [Thursday 24 March 2011] [10:22:51] <sustrik>	that sounds reasonable, given that JNI and java is on the stack
| [Thursday 24 March 2011] [10:23:48] <stimpie>	pieterh, its just a test case 
| [Thursday 24 March 2011] [10:24:12] <pieterh>	sure, but we want a test case that simulates the basic flow you're using
| [Thursday 24 March 2011] [10:24:19] <stimpie>	so far everything appears fine with jzmq+zmq 
| [Thursday 24 March 2011] [10:24:24] <pieterh>	i.e. xrep to xrep over inproc, one-way
| [Thursday 24 March 2011] [10:24:58] <pieterh>	hang on, you did that, 509K/sec...
| [Thursday 24 March 2011] [10:25:09] <pieterh>	and 188k send/recv...
| [Thursday 24 March 2011] [10:25:52] <pieterh>	IMO there's something with the Java threading
| [Thursday 24 March 2011] [10:25:57] <stimpie>	the send/recv should be double its only measured on 1 side
| [Thursday 24 March 2011] [10:28:45] <stimpie>	I do believe my setup with a client -> dispatcher -> thread -> dispatcher -> client  should not use one socket to connect thread and dispatcher 
| [Thursday 24 March 2011] [10:29:44] <stimpie>	probably I should run each dispatcher in his own thread 
| [Thursday 24 March 2011] [10:30:14] <stimpie>	that should give a flow of ~500K m/s 
| [Thursday 24 March 2011] [10:32:36] <pieterh>	looks like that's the jzmq limit per thread, on your 'slow' machine
| [Thursday 24 March 2011] [10:38:42] <mato>	mikko-_: hi
| [Thursday 24 March 2011] [10:39:04] <mato>	actually, more a question for pieterh 
| [Thursday 24 March 2011] [10:39:15] <pieterh>	mato: shoot
| [Thursday 24 March 2011] [10:39:47] <mato>	pieterh: how soon until 2.1.4? i can either arm-twist the debian build to work with 2.1.3 or wait for 2.1.4 (re the openpgm thread)
| [Thursday 24 March 2011] [10:40:24] <pieterh>	I can make 2.1.4 this weekend, I'd like to wait a day or two for more feedback on use
| [Thursday 24 March 2011] [10:40:35] <mato>	ok, fine
| [Thursday 24 March 2011] [10:40:48] <pieterh>	if you are blocked by this, I can make it sooner, or give you a preview
| [Thursday 24 March 2011] [10:40:58] <pieterh>	but you need an official package, don't you
| [Thursday 24 March 2011] [10:41:03] <mato>	pretty much
| [Thursday 24 March 2011] [10:41:16] <mato>	don't worry about it, it can wait till the weekend
| [Thursday 24 March 2011] [10:41:48] <pieterh>	ok, that'll work then
| [Thursday 24 March 2011] [10:41:55] <mato>	but, i need to test the fixes. so, if i want "what will become 2.1.4", that is in zeromq2-1.git ?
| [Thursday 24 March 2011] [10:42:11] <pieterh>	yes, the 2-1 git is the to-be-released 2.1.4
| [Thursday 24 March 2011] [10:42:23] <pieterh>	master branch, no surprises
| [Thursday 24 March 2011] [10:42:28] <mato>	good,m so i can do make dist myself from that to test things
| [Thursday 24 March 2011] [10:42:33] <pieterh>	exactly
| [Thursday 24 March 2011] [10:42:48] <pieterh>	I noticed dist also makes zip files, that's nice
| [Thursday 24 March 2011] [10:42:59] <pieterh>	I'd like to do that in zapi and zfl too... 
| [Thursday 24 March 2011] [10:43:24] <mato>	just copy what libzmq does
| [Thursday 24 March 2011] [10:43:39] <pieterh>	yup, will do
| [Thursday 24 March 2011] [10:47:35] <stimpie>	my 'faster' machine gets the following perfomance on inproc  duration: 12681.44 ms, messages:10000000, speed: 788554.25 m/s
| [Thursday 24 March 2011] [10:48:18] <stimpie>	considering I got over 2M with tcp its still quite slow 
| [Thursday 24 March 2011] [10:57:02] <private_meta>	788km/sec... that's almost twice as fast as the earths rotational speed!
| [Thursday 24 March 2011] [10:57:29] <private_meta>	oh wait
| [Thursday 24 March 2011] [10:57:31] <private_meta>	way more
| [Thursday 24 March 2011] [10:57:36] <private_meta>	spinning out of control
| [Thursday 24 March 2011] [10:58:38] <stimpie>	it would save nasa some money ;-)
| [Thursday 24 March 2011] [11:02:27] <sustrik>	stimpie: iirc JNI locks a mutex for each call
| [Thursday 24 March 2011] [11:02:48] <sustrik>	which could account for limiting number of calls per sec to below 1M
| [Thursday 24 March 2011] [11:05:47] <SurfaceTension>	Does anybody have an approximate object code size for ARM Thumb?
| [Thursday 24 March 2011] [11:12:07] <private_meta>	hmpf... it's difficult to find the problem with the paranoid pirate/zmsg problem
| [Thursday 24 March 2011] [11:13:12] <mato>	pieterh: ok, 2.1.4 git fixes my problem but still has a couple of problems with openpgm integration, have reported those on the ML
| [Thursday 24 March 2011] [11:15:26] <sustrik>	mato: also notice that pre-compiled devices were removed
| [Thursday 24 March 2011] [11:15:38] <mato>	sustrik: yes, i have already noticed
| [Thursday 24 March 2011] [11:15:44] <mato>	sustrik: thx
| [Thursday 24 March 2011] [11:15:46] <sustrik>	which means some functionality will actually disappear after installing new package
| [Thursday 24 March 2011] [11:15:52] <mato>	yes, i know
| [Thursday 24 March 2011] [11:15:55] <mato>	not up to me
| [Thursday 24 March 2011] [11:16:00] <sustrik>	no idea what process debian uses for that kind of thing
| [Thursday 24 March 2011] [11:16:05] <mato>	actually, it won't disappear in debian
| [Thursday 24 March 2011] [11:16:21] <sustrik>	heh
| [Thursday 24 March 2011] [11:16:39] <mato>	you'll just get the 2.0.x devices staying installed if you installed them in the 1st place
| [Thursday 24 March 2011] [11:16:56] <sustrik>	ok
| [Thursday 24 March 2011] [11:17:35] <mato>	i.e. after upgrading to 2.1.x you will get libzmq0 (2.0.10) zeromq-bin (2.0.10) libzmq1 (2.1.x) and libzmq-dev (2.1.x) installed
| [Thursday 24 March 2011] [11:18:31] <mato>	which may confuse some people, in which case i will cheerfully pass on said people to the upstream maintainer :-)
| [Thursday 24 March 2011] [11:19:58] <mato>	hmm.
| [Thursday 24 March 2011] [11:20:08] <mato>	sustrik: i'm just thinking, about those devices
| [Thursday 24 March 2011] [11:20:32] <mato>	sustrik: d'you think i should force their removal?
| [Thursday 24 March 2011] [11:20:59] <sustrik>	mato: no idea
| [Thursday 24 March 2011] [11:21:43] <sustrik>	i would say the minor upgrade shouldn't break backward compatibility
| [Thursday 24 March 2011] [11:21:51] <sustrik>	but it's too late for that
| [Thursday 24 March 2011] [11:22:10] <sustrik>	hm, presumably, leaving the old devices there would be better
| [Thursday 24 March 2011] [11:22:27] <sustrik>	at least the things won't stop working after upgrade
| [Thursday 24 March 2011] [11:22:45] <mato>	yes, except that they won't talk to 2.1 applications anyway
| [Thursday 24 March 2011] [11:22:50] <mato>	(wire protocol change)
| [Thursday 24 March 2011] [11:23:10] <mato>	i'll ask the debian people i'm working with
| [Thursday 24 March 2011] [11:23:19] <sustrik>	ah, the last debian release was 2.0, right?
| [Thursday 24 March 2011] [11:23:27] <mato>	yup.
| [Thursday 24 March 2011] [11:23:30] <mikko-_>	mato: i will look at the two issues you mentioned
| [Thursday 24 March 2011] [11:23:34] <sustrik>	then delete the devices
| [Thursday 24 March 2011] [11:23:53] <sustrik>	missing executable is pretty obvious
| [Thursday 24 March 2011] [11:24:06] <sustrik>	incompatible wire format is hard to detect
| [Thursday 24 March 2011] [11:24:25] <mato>	sustrik: precisely
| [Thursday 24 March 2011] [11:24:39] <mato>	sustrik: ok i'll see if there's a way to do that
| [Thursday 24 March 2011] [11:24:53] <mato>	mikko-_: thanks!
| [Thursday 24 March 2011] [11:25:17] <mikko-_>	mato: the linking issue im not sure how that will work
| [Thursday 24 March 2011] [11:25:35] <mikko-_>	might not have time today as i got leaving drinks tonight
| [Thursday 24 March 2011] [11:25:48] <mato>	mikko-_: well, i used to do it by building openpgm with -fvisibility=hidden
| [Thursday 24 March 2011] [11:26:07] <mato>	mikko-_: we should be able to do that with the current system, no?
| [Thursday 24 March 2011] [11:26:13] <mikko-_>	mato: i thought that openpgm builds with visibility=hidden
| [Thursday 24 March 2011] [11:27:32] <mikko-_>	but i'll get into this at some point today or tomorrow
| [Thursday 24 March 2011] [11:27:39] <mato>	mikko-_: IIRC what it does is use __attribute__ internally in the code
| [Thursday 24 March 2011] [11:27:54] <mato>	mikko-_: but what we need is for it to hide the API symbols as well
| [Thursday 24 March 2011] [11:28:17] <mato>	mikko-_: and I managed to override that by forcing it to build with -fvisibility=hidden
| [Thursday 24 March 2011] [11:28:28] <mato>	mikko-_: back in the day...
| [Thursday 24 March 2011] [11:29:39] <mikko-_>	roughly what happens at the moment:
| [Thursday 24 March 2011] [11:29:54] <mikko-_>	zeromq build invokes openpgm build and they build a libtool convenience library
| [Thursday 24 March 2011] [11:30:03] <mikko-_>	which contains the built objects
| [Thursday 24 March 2011] [11:30:09] <mikko-_>	called libpgm_noinsta.la
| [Thursday 24 March 2011] [11:30:18] <mikko-_>	libpgm_noinst.la
| [Thursday 24 March 2011] [11:30:54] <mikko-_>	and that libtool archive is added with libzmq_la_LIBADD
| [Thursday 24 March 2011] [11:31:08] <mato>	ignoring the libtool bit, that libpgm_noinst.la is essentially a static library archive, right?
| [Thursday 24 March 2011] [11:31:52] <mikko-_>	essentially yes
| [Thursday 24 March 2011] [11:32:05] <mato>	and AC_CONIFG_SUBDIRS(...) is what invokes the OpenPGM configure?
| [Thursday 24 March 2011] [11:33:43] <mikko-_>	it's collection of the built objects
| [Thursday 24 March 2011] [11:33:50] <mikko-_>	yes
| [Thursday 24 March 2011] [11:34:15] <mato>	ok, problem is i see no way to pass e.g. CFLAGS to AC_CONFIG_SUBDIRS
| [Thursday 24 March 2011] [11:34:35] <mikko-_>	mato: if you look at http://openpgm.googlecode.com/svn/trunk/openpgm/pgm/configure.ac
| [Thursday 24 March 2011] [11:34:37] <mato>	or options, or anything
| [Thursday 24 March 2011] [11:34:51] <mikko-_>	they are detecting visibility
| [Thursday 24 March 2011] [11:35:01] <mikko-_>	CFLAGS are passed down from parent 
| [Thursday 24 March 2011] [11:35:21] <mikko-_>	CFLAGS='-xyz' ./configure in zeromq build passes those down to openpgm build
| [Thursday 24 March 2011] [11:35:34] <mato>	mikko-_: yes, but openpgm deals with visibility differently than zmq
| [Thursday 24 March 2011] [11:36:03] <mato>	mikko-_: zmq uses the "*everything is hidden" approach
| [Thursday 24 March 2011] [11:36:14] <mikko-_>	CFLAGS should be safe to modify even within zeromq build as that should not be used anywhere
| [Thursday 24 March 2011] [11:36:22] <mikko-_>	CXXFLAGS and CPPFLAGS for zeromq
| [Thursday 24 March 2011] [11:36:34] <mikko-_>	as the source is c++
| [Thursday 24 March 2011] [11:36:34] <sustrik>	mato: btw, how do i remove an outdated topic branch from github?
| [Thursday 24 March 2011] [11:36:50] <mato>	pgm uses default visibility, and defines PGM_GNUC_INTERNAL to use __attribute__ ((visibility("hidden"))
| [Thursday 24 March 2011] [11:37:13] <mato>	which means if the default is set to hidden with -fvisibility=hidden
| [Thursday 24 March 2011] [11:37:27] <mato>	then the pgm api symbols will disappear from the library
| [Thursday 24 March 2011] [11:37:58] <mato>	sustrik: git push origin :<branch name> i think
| [Thursday 24 March 2011] [11:38:13] <sustrik>	the colon deletes the branch?
| [Thursday 24 March 2011] [11:38:17] <sustrik>	strange
| [Thursday 24 March 2011] [11:38:18] <sustrik>	thanks
| [Thursday 24 March 2011] [11:38:28] <mato>	yeah, it pushes an empty ref to it or something
| [Thursday 24 March 2011] [11:38:47] <mato>	deleting the remote branch via push is not the same as deleting a local branch...
| [Thursday 24 March 2011] [11:39:11] <sustrik>	ok, np
| [Thursday 24 March 2011] [11:42:05] <mato>	mikko-_: in theory all that needs to be done is CFLAGS=-fvisibility=hidden for the PGM build
| [Thursday 24 March 2011] [11:42:24] <mato>	mikko-_: let me know if you can't make it work
| [Thursday 24 March 2011] [11:42:38] <mato>	i have to go, am on a train and battery dying
| [Thursday 24 March 2011] [11:42:52] <mikko-_>	mato: i will test as soon as i get a chance
| [Thursday 24 March 2011] [11:42:55] <mikko-_>	wil let you know
| [Thursday 24 March 2011] [11:44:52] <mato>	ok, cyl
| [Thursday 24 March 2011] [11:58:41] <CIA-22>	zeromq2: 03Martin Sustrik 07pre30 * rbc4a1ce 10/ (8 files in 4 dirs): 
| [Thursday 24 March 2011] [11:58:41] <CIA-22>	zeromq2: ZMQ_HWM split into ZMQ_SNDHWM and ZMQ_RCVHWM
| [Thursday 24 March 2011] [11:58:41] <CIA-22>	zeromq2: These new options allow to control the maximum size of the
| [Thursday 24 March 2011] [11:58:41] <CIA-22>	zeromq2: inbound and outbound message pipe separately.
| [Thursday 24 March 2011] [11:58:41] <CIA-22>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> (+17 more commits...) - http://bit.ly/gIsQa8
| [Thursday 24 March 2011] [13:11:00] <pieterh>	sustrik: random question
| [Thursday 24 March 2011] [13:11:06] <sustrik>	yes?
| [Thursday 24 March 2011] [13:11:17] <pieterh>	you're working both on master and on the pre30 branch?
| [Thursday 24 March 2011] [13:11:26] <sustrik>	it's a topic branch
| [Thursday 24 March 2011] [13:11:42] <pieterh>	is that a yes or a no?
| [Thursday 24 March 2011] [13:11:57] <sustrik>	it's like a transaction
| [Thursday 24 March 2011] [13:12:02] <sustrik>	not to break the master
| [Thursday 24 March 2011] [13:12:08] <pieterh>	e.g. ZMQ_HWM split, is on master or on pre30
| [Thursday 24 March 2011] [13:12:09] <pieterh>	?
| [Thursday 24 March 2011] [13:12:10] <sustrik>	the work is done on a branch
| [Thursday 24 March 2011] [13:12:19] <sustrik>	then it can be pulled to master in one go
| [Thursday 24 March 2011] [13:12:25] <sustrik>	yes
| [Thursday 24 March 2011] [13:13:01] <sustrik>	on pre30
| [Thursday 24 March 2011] [13:13:02] <pieterh>	I'll rephrase: are you still making improvements to the master branch provisionally marked as 2.2.0?
| [Thursday 24 March 2011] [13:13:09] <pieterh>	or is that frozen?
| [Thursday 24 March 2011] [13:13:23] <sustrik>	2.2 is frozen
| [Thursday 24 March 2011] [13:13:27] <sustrik>	tou are free to use it
| [Thursday 24 March 2011] [13:13:30] <sustrik>	you
| [Thursday 24 March 2011] [13:13:44] <pieterh>	yes, that was my idea, to pull specific changes into that
| [Thursday 24 March 2011] [13:13:54] <sustrik>	note that first patch to be pulled to master is version bump to 3.0
| [Thursday 24 March 2011] [13:14:04] <pieterh>	hmm
| [Thursday 24 March 2011] [13:14:38] <pieterh>	ok, let me create a 2.2 release git, then we can do the switch for 3.0
| [Thursday 24 March 2011] [13:14:55] <pieterh>	there's not much point using a topic branch for the 3.0 stuff IMO
| [Thursday 24 March 2011] [13:15:36] <ptrb>	mato: you around?
| [Thursday 24 March 2011] [13:15:37] <pieterh>	I'd like to cherry pick some changes into 2.2, such as the HWM change
| [Thursday 24 March 2011] [13:15:49] <sustrik>	sure, do so
| [Thursday 24 March 2011] [13:15:54] <pieterh>	ack, going for it now
| [Thursday 24 March 2011] [13:16:05] <sustrik>	i would wait for reviews at least
| [Thursday 24 March 2011] [13:16:19] <sustrik>	otherwise you risk having conflictins with actual master
| [Thursday 24 March 2011] [13:16:57] <pieterh>	how so?
| [Thursday 24 March 2011] [13:17:13] <sustrik>	well, say someone complains about something in pre30
| [Thursday 24 March 2011] [13:17:17] <sustrik>	it will be fixed
| [Thursday 24 March 2011] [13:17:35] <sustrik>	and the fixed patch will be pulled to master
| [Thursday 24 March 2011] [13:17:46] <sustrik>	then you have an incompatible version in 2.2
| [Thursday 24 March 2011] [13:17:57] <sustrik>	and you have to reconcile the problem by hand
| [Thursday 24 March 2011] [13:18:11] <pieterh>	sure... as long as you make atomic commits, it'll be doable IMO
| [Thursday 24 March 2011] [13:18:20] <sustrik>	ok,  it's up to you
| [Thursday 24 March 2011] [13:18:21] <pieterh>	at some point the structure of 3.0 will change too far
| [Thursday 24 March 2011] [13:18:33] <pieterh>	but we're not going to make big changes in 2.2, just tweaks
| [Thursday 24 March 2011] [13:19:13] <pieterh>	we may not even need the 2.2 release but I'd rather be ready than have to try to make it later
| [Thursday 24 March 2011] [13:19:33] <sustrik>	are you aware that the patch in question is backward incompatible?
| [Thursday 24 March 2011] [13:19:41] <sustrik>	actually all the patches in pre30 are
| [Thursday 24 March 2011] [13:19:50] <pieterh>	yes, indeed
| [Thursday 24 March 2011] [13:20:08] <sustrik>	and that it breaks all the language bindings?
| [Thursday 24 March 2011] [13:20:14] <pieterh>	my immediate reaction is, this patch adds value, is worth it
| [Thursday 24 March 2011] [13:20:31] <sustrik>	ok
| [Thursday 24 March 2011] [13:20:52] <pieterh>	I think each time we've asked binding authors this question, they've answered the same
| [Thursday 24 March 2011] [13:21:26] <pieterh>	something like, "we'd rather get new useful functionality now, even if it means fixing up stuff"
| [Thursday 24 March 2011] [13:21:54] <pieterh>	ok
| [Thursday 24 March 2011] [13:22:09] <cremes>	as a bindings author, i agree with that quote
| [Thursday 24 March 2011] [13:22:46] <pieterh>	cremes: thanks, I don't like to speak for others
| [Thursday 24 March 2011] [13:24:19] <sustrik>	cremes: it's up to you obviously
| [Thursday 24 March 2011] [13:24:39] <sustrik>	my point was that if bacward incompatible changes are to happen anytime
| [Thursday 24 March 2011] [13:24:49] <sustrik>	the bindings end up as a mess of ifdefs
| [Thursday 24 March 2011] [13:24:55] <cremes>	since the library version is exposed via the zmq_* api, it's pretty easy to turn things on/off at runtime
| [Thursday 24 March 2011] [13:25:21] <cremes>	i agree that with too many minor differences things could get ugly
| [Thursday 24 March 2011] [13:25:38] <cremes>	as a bindings author, i reserve the right to require minimum versions of the library
| [Thursday 24 March 2011] [13:25:49] <cremes>	so that i can keep those ifdefs to a manageable size
| [Thursday 24 March 2011] [13:26:52] <cremes>	btw, this weekend i plan to do a small test using cxxtest for writing unit tests for yqueue
| [Thursday 24 March 2011] [13:27:03] <sustrik>	great
| [Thursday 24 March 2011] [13:27:11] <cremes>	i'm going to put that into a fork of the current master; i'll fork it under my username chuckremes
| [Thursday 24 March 2011] [13:27:22] <cremes>	and point you guys to it when i get something working
| [Thursday 24 March 2011] [13:27:57] <cremes>	i want to just stick with ruby but i have an itch that can only be scratched by c++ apparently... ;)
| [Thursday 24 March 2011] [13:28:18] <sustrik>	i think the tests unit tests have to be incorporated into the build system somehow ultimately
| [Thursday 24 March 2011] [13:28:51] <pieterh>	sustrik: in zfl & zapi we do this with 'make check', which runs a single main which runs all unit tests
| [Thursday 24 March 2011] [13:29:02] <cremes>	sustrik: that will be part of my experiment
| [Thursday 24 March 2011] [13:29:15] <sustrik>	yes, something like tha
| [Thursday 24 March 2011] [13:29:15] <cremes>	the cxxtest readme has examples on how to include that in the build process
| [Thursday 24 March 2011] [13:29:17] <sustrik>	that
| [Thursday 24 March 2011] [13:29:49] <pieterh>	sustrik: ok, 2.2 is safely forked off, we can now play with the core repo...
| [Thursday 24 March 2011] [13:30:23] <pieterh>	no hurry but I'd suggest we make and announce the rename when you're comfortable with it
| [Thursday 24 March 2011] [13:31:42] <sustrik>	have you done the test?
| [Thursday 24 March 2011] [13:31:53] <sustrik>	does rename retain watchers
| [Thursday 24 March 2011] [13:31:54] <sustrik>	?
| [Thursday 24 March 2011] [13:32:10] <sustrik>	do the forks map nicely to the renamed repo?
| [Thursday 24 March 2011] [13:32:42] <pieterh>	let me run some tests in my own profile, then
| [Thursday 24 March 2011] [13:32:50] <pieterh>	(good questions)
| [Thursday 24 March 2011] [13:32:57] <sustrik>	ok
| [Thursday 24 March 2011] [13:33:03] <sustrik>	if you need a watcher, ping me
| [Thursday 24 March 2011] [13:34:39] <pieterh>	ok, can you watch https://github.com/pieterh/test ?
| [Thursday 24 March 2011] [13:34:53] <pieterh>	and also fork it
| [Thursday 24 March 2011] [13:36:06] <sustrik>	pieterh: done
| [Thursday 24 March 2011] [13:36:14] <pieterh>	ok, I've also made a couple of forks...
| [Thursday 24 March 2011] [13:36:16] <pieterh>	now renaming it...
| [Thursday 24 March 2011] [13:37:25] <pieterh>	you watched it as 'zeromq'?
| [Thursday 24 March 2011] [13:37:38] <sustrik>	no idea
| [Thursday 24 March 2011] [13:37:43] <pieterh>	oh snap, sorry
| [Thursday 24 March 2011] [13:37:49] <pieterh>	I forked it, and then renamed the fork... :-)
| [Thursday 24 March 2011] [13:39:13] <pieterh>	so it works, the repo is now called https://github.com/pieterh/libtest
| [Thursday 24 March 2011] [13:39:25] <pieterh>	watchers and forks shaken but still attached
| [Thursday 24 March 2011] [13:40:27] <sustrik>	the 'network' graph seems to be broken
| [Thursday 24 March 2011] [13:40:32] <sustrik>	i don't see you there
| [Thursday 24 March 2011] [13:41:12] <pieterh>	it seemed broken before the rename, too
| [Thursday 24 March 2011] [13:41:18] <pieterh>	only showed a single entry
| [Thursday 24 March 2011] [13:41:34] <sustrik>	that's ok as there was only a single entry
| [Thursday 24 March 2011] [13:41:40] <sustrik>	what i'm seeing 
| [Thursday 24 March 2011] [13:41:55] <sustrik>	is that the fist commit you've made is under 'sustrik'
| [Thursday 24 March 2011] [13:42:03] <pieterh>	what repo?
| [Thursday 24 March 2011] [13:42:10] <sustrik>	sustrik/test
| [Thursday 24 March 2011] [13:42:40] <pieterh>	on my box the whole network viewer is buggy, shows no commits at all
| [Thursday 24 March 2011] [13:42:46] <pieterh>	but the commit list is accurate
| [Thursday 24 March 2011] [13:43:12] <sustrik>	yes, commits look ok
| [Thursday 24 March 2011] [13:43:28] <pieterh>	I've no idea what this means, a github bug?
| [Thursday 24 March 2011] [13:43:35] <sustrik>	no idea
| [Thursday 24 March 2011] [13:44:13] <pieterh>	well, I'd suggest we go ahead with the rename, if the network appears broken afterwards we ask github to fix it
| [Thursday 24 March 2011] [13:44:30] <pieterh>	but let's wait a day or two until the new name is obvious
| [Thursday 24 March 2011] [13:44:58] <pieterh>	libzmq is my preference right now
| [Thursday 24 March 2011] [13:45:11] <pieterh>	but it's your project, your call :-)
| [Thursday 24 March 2011] [13:45:29] <sustrik>	i'll give it a thought
| [Thursday 24 March 2011] [13:45:38] <sustrik>	zeromq otoh would require less renaming
| [Thursday 24 March 2011] [13:45:54] <sustrik>	ie. stable repos would stay as they are now
| [Thursday 24 March 2011] [13:46:13] <pieterh>	indeed, it's more consistent with that
| [Thursday 24 March 2011] [13:46:27] <pieterh>	but if we start to make the release repos into distribution containers, that changes
| [Thursday 24 March 2011] [13:46:35] <sustrik>	yes, i know
| [Thursday 24 March 2011] [13:46:46] 	 * pieterh goes back to preparing 2.2...
| [Thursday 24 March 2011] [13:52:54] <klestes>	hullo, is anyone actively awake ?
| [Thursday 24 March 2011] [13:53:12] <pieterh>	klestes: passively awake, here...
| [Thursday 24 March 2011] [13:53:20] <klestes>	that'll do :)
| [Thursday 24 March 2011] [13:53:25] <pieterh>	what's up?
| [Thursday 24 March 2011] [13:53:52] <klestes>	sorry about my first patch.  I could have sworn I read somewhere that a 2.2 version wasn't being pursued.
| [Thursday 24 March 2011] [13:54:04] <pieterh>	we changed our minds...
| [Thursday 24 March 2011] [13:54:12] <klestes>	D'oh!
| [Thursday 24 March 2011] [13:54:26] <klestes>	oh well, back to the hacking boarrd =)
| [Thursday 24 March 2011] [13:55:00] <klestes>	uhm, would minor spelling corrections to header files be a worthwile contribution ?
| [Thursday 24 March 2011] [13:57:19] <pieterh>	depends how perfectionist the maintainer is, they may just find it annoying
| [Thursday 24 March 2011] [13:57:35] <klestes>	reasonable.
| [Thursday 24 March 2011] [13:57:47] <klestes>	also, on to the matter of LOAD BALANCING.
| [Thursday 24 March 2011] [13:58:16] <klestes>	now, suppose I have a client talking to a server, a PUSH/PULL kinda relationship.
| [Thursday 24 March 2011] [13:58:41] <klestes>	once I have these two chatting, I introduce a second client PULLing from the server as well.
| [Thursday 24 March 2011] [13:59:01] <klestes>	my question is, upon introduction of the second client, will the load be balanced again ?
| [Thursday 24 March 2011] [14:03:19] <klestes>	(oooh! FF6 is out !)
| [Thursday 24 March 2011] [14:03:53] <klestes>	(sorry, bug in my FPU, thats FF4)
| [Thursday 24 March 2011] [14:08:12] <sustrik>	patches to the spelling are acceptable
| [Thursday 24 March 2011] [14:09:02] <sustrik>	the load already assigned to the first client won't be re-balanced
| [Thursday 24 March 2011] [14:09:11] <sustrik>	but new messages will be
| [Thursday 24 March 2011] [14:10:13] <klestes>	ok, thats what I had thought the proper behavior should be.
| [Thursday 24 March 2011] [14:10:40] <klestes>	where in the source is the load balancing mechanism ?
| [Thursday 24 March 2011] [14:14:53] <cremes>	sustrik: running a test using jemalloc and LD_PRELOAD on linux
| [Thursday 24 March 2011] [14:14:58] <cremes>	results look promising so far
| [Thursday 24 March 2011] [14:23:04] <pieterh>	sustrik: actually there are some nice improvements in the 2.2 branch over 2.1...
| [Thursday 24 March 2011] [14:23:22] <pieterh>	e.g. checking &logging of duplicate identities...
| [Thursday 24 March 2011] [14:23:26] <pieterh>	I'll check them all
| [Thursday 24 March 2011] [14:25:51] <cremes>	pieterh: i have an open ticket on that duplicate identity commit; i get crashes with it
| [Thursday 24 March 2011] [14:26:06] <pieterh>	cremes: ah, right...
| [Thursday 24 March 2011] [14:26:18] <pieterh>	well, 2.2 is not going to be stable for a while, that's OK
| [Thursday 24 March 2011] [14:26:37] <cremes>	true; hopefully i'll be able to come up with a small repro
| [Thursday 24 March 2011] [14:27:51] <Guthur>	is 2.2 available?
| [Thursday 24 March 2011] [14:27:59] <Guthur>	is it the pgm stuff?
| [Thursday 24 March 2011] [14:28:03] <pieterh>	Guthur: not yet, soon enough
| [Thursday 24 March 2011] [14:28:08] <pieterh>	the pgm stuff is already in 2.1
| [Thursday 24 March 2011] [14:28:33] <klestes>	can you not get 2.2 with git ?
| [Thursday 24 March 2011] [14:28:41] <sustrik>	still missing in master :(
| [Thursday 24 March 2011] [14:28:56] <pieterh>	sustrik: what's missing in master?
| [Thursday 24 March 2011] [14:28:59] <pieterh>	ah, yes
| [Thursday 24 March 2011] [14:29:01] <sustrik>	jemalloc: let me know whether it helps
| [Thursday 24 March 2011] [14:29:24] <pieterh>	sustrik, mikko is still working on making a patch, maybe he's stuck, I'll ask him... I know he's real busy right now
| [Thursday 24 March 2011] [14:29:39] <pieterh>	I'm applying those openpgm changes to 2.2, I'll see if it works
| [Thursday 24 March 2011] [14:29:55] <pieterh>	configure.in, Makefile.am, libpgm tarball, that's it...
| [Thursday 24 March 2011] [14:38:45] <Guthur>	would it be possible to expose the subscription mechanism on SUB sockets, so that people could maybe add other models to replace the prefix one
| [Thursday 24 March 2011] [14:39:32] <Guthur>	this is in relation to 3.0
| [Thursday 24 March 2011] [14:47:04] <pieterh>	Guthur: it's a neat idea but probably quite difficult to make happen
| [Thursday 24 March 2011] [14:56:33] <sustrik>	Guthur: can be doable on top of 0mq, with XPUB/XSUB sockets
| [Thursday 24 March 2011] [14:56:37] <sustrik>	when those are finished :)
| [Thursday 24 March 2011] [14:58:19] <pieterh>	sustrik: upstream arbitrary subscription keys?
| [Thursday 24 March 2011] [15:02:24] <sustrik>	possibly
| [Thursday 24 March 2011] [15:02:27] <sustrik>	we'll see
| [Thursday 24 March 2011] [15:02:35] <sustrik>	it's not done yet
| [Thursday 24 March 2011] [15:02:54] <pieterh>	could be fun to turn xpub sockets into mini exchanges
| [Thursday 24 March 2011] [15:03:42] <pieterh>	sustrik: if you want a patch for the openpgm stuff, I can make it, have tested that on 2.2
| [Thursday 24 March 2011] [15:04:14] <pieterh>	but I think you want the real author's patch... sigh
| [Thursday 24 March 2011] [15:04:20] <pieterh>	well, it's LGPL
| [Thursday 24 March 2011] [15:04:28] <pieterh>	already signed off
| [Thursday 24 March 2011] [15:04:50] <pieterh>	this whole free software concept sometimes confuses me... :-)
| [Thursday 24 March 2011] [15:29:39] <Guthur>	cool, I look forward to seeing XSUB and XPUB
| [Thursday 24 March 2011] [15:29:55] <Guthur>	will they need to be renamed after they have been released for a while, hehe
| [Thursday 24 March 2011] [15:31:31] <cremes>	Guthur: yes, they are going to be renamed SUCK and BLOW
| [Thursday 24 March 2011] [15:31:51] <cremes>	no one raised any objection on the mailing list, so that's going into 2.1.4 
| [Thursday 24 March 2011] [15:31:52] <cremes>	:)
| [Thursday 24 March 2011] [15:41:59] <jond>	cremes: what's the conclusion on jemalloc
| [Thursday 24 March 2011] [15:42:39] <cremes>	jond: superior to glibc malloc on linux for the way i use 0mq
| [Thursday 24 March 2011] [15:43:10] <cremes>	the memory footprint still grows, but now the 'fragmentation leak' is slower
| [Thursday 24 March 2011] [15:43:40] <jond>	cremes: does jemalloc just replace malloc/free et al or the C++ operator's as well
| [Thursday 24 March 2011] [15:44:10] <cremes>	jond: it's my understanding that under the covers C++ #new, et al. are calling malloc/free
| [Thursday 24 March 2011] [15:44:20] <cremes>	so jemalloc replaces them too
| [Thursday 24 March 2011] [15:44:32] <pieterh>	cremes: sometimes you're evil...
| [Thursday 24 March 2011] [15:44:49] <cremes>	pieterh: ah, you like the new pub/sub names then?
| [Thursday 24 March 2011] [15:45:07] <pieterh>	I think the old names were fine (PUB/SUB)
| [Thursday 24 March 2011] [15:45:35] 	 * cremes is leaving shortly to do evil elsewhere
| [Thursday 24 March 2011] [15:45:53] <jond>	cremes: ok ; think I asked the tcmalloc people a while back and technically new etc don't have to use malloc free ....
| [Thursday 24 March 2011] [15:46:29] <cremes>	jond: that's true; from comments i have read while researching this stuff, no one was able to find a case where c++ did *not*
| [Thursday 24 March 2011] [15:46:31] <jond>	pieterh: HOOKER and PIMP?
| [Thursday 24 March 2011] [15:46:33] <cremes>	use malloc/free
| [Thursday 24 March 2011] [15:46:46] <pieterh>	HOOKER would be XSUB then?
| [Thursday 24 March 2011] [15:46:53] <cremes>	jond: ooh, good replacement names for PUSH/PULL
| [Thursday 24 March 2011] [15:47:05] <cremes>	:)
| [Thursday 24 March 2011] [15:47:12] <pieterh>	where does JOHN fit in? that's my question
| [Thursday 24 March 2011] [15:47:32] <cremes>	pieterh: PAIR -> JOHN
| [Thursday 24 March 2011] [15:47:45] <pieterh>	surely PAIR-> FABIO
| [Thursday 24 March 2011] [15:47:53] <cremes>	surely
| [Thursday 24 March 2011] [15:48:05] <pieterh>	let's start a Naming Committee
| [Thursday 24 March 2011] [15:48:14] <pieterh>	with its own repository
| [Thursday 24 March 2011] [15:48:35] <cremes>	heh
| [Thursday 24 March 2011] [15:48:39] 	 * pieterh is very happy to be generating zapi man pages from the C source code
| [Thursday 24 March 2011] [15:49:16] <jond>	cremes: c++ new et al; that's what I've read too, but there's probably some obscure games console compiler somewhere
| [Thursday 24 March 2011] [15:49:46] <cremes>	jond: probably
| [Thursday 24 March 2011] [15:50:00] <cremes>	but since i don't use it, i don't care ;)
| [Thursday 24 March 2011] [15:51:19] <jond>	so you just LD_PRELOAD with jemalloc on the path and that's it? I'm sure google recommend recompile with tcmalloc though LD_PRELOAD can work
| [Thursday 24 March 2011] [15:52:01] <cremes>	yes
| [Thursday 24 March 2011] [15:52:14] <cremes>	LD_PRELOAD=/usr/local/lib/libjemalloc.so a.out
| [Thursday 24 March 2011] [15:53:15] <jond>	cremes does it improve ruby performance at all apart from 0mq aspect?
| [Thursday 24 March 2011] [15:53:56] <cremes>	jond: if it does, i can't see it... there may be a small % difference but i can't tell
| [Thursday 24 March 2011] [15:54:51] <jond>	cremes: I'll go and have a look at jemalloc now
| [Thursday 24 March 2011] [15:55:08] <cremes>	jond: when i ran sustrik's leak repro (ticket 174) the resident memory would jump to 25MB and stay there
| [Thursday 24 March 2011] [15:55:17] <cremes>	with jemalloc it would drop back down to 15MB
| [Thursday 24 March 2011] [15:55:31] <cremes>	so while it isn't perfect, it *was* able to help out a bit
| [Thursday 24 March 2011] [15:58:21] <jond>	cremes: i may give jemalloc a test against an app at work, non zeromq though sadly
| [Thursday 24 March 2011] [16:04:25] <cremes>	jond: please share your results (0mq or non-0mq) with me; i'd love to hear your results
| [Thursday 24 March 2011] [16:16:26] <jond>	pieterh: you ever thought of putting a 'jobs' section on the website?
| [Thursday 24 March 2011] [16:16:45] <pieterh>	jond: yes
| [Thursday 24 March 2011] [16:17:22] <pieterh>	but rather, I'd like to make a 'marketplace'
| [Thursday 24 March 2011] [16:17:32] <jond>	pieterh: yes better idea
| [Thursday 24 March 2011] [16:18:07] <pieterh>	the idea would be that proven contributors can promote their business
| [Thursday 24 March 2011] [16:18:47] <pieterh>	this would happen on the main website (not the community site) and would be run by iMatix
| [Thursday 24 March 2011] [16:19:32] <pieterh>	'run' = vetted, more than anything else
| [Thursday 24 March 2011] [16:20:28] <sustrik>	btw, i've created a zeromq group on linked-in long time ago
| [Thursday 24 March 2011] [16:20:49] 	 * pieterh dislikes linkedin intensely...
| [Thursday 24 March 2011] [16:21:08] <sustrik>	i don't use it much
| [Thursday 24 March 2011] [16:21:19] <sustrik>	i don't even recall why i've created the group
| [Thursday 24 March 2011] [16:21:25] <sustrik>	someone asked me to, i suppose
| [Thursday 24 March 2011] [16:21:27] <pieterh>	the idea of promoting partners able to help in specific areas, or specific regions, seems win-win
| [Thursday 24 March 2011] [16:21:38] 	 * sustrik checks the group
| [Thursday 24 March 2011] [16:21:42] <pieterh>	:-)
| [Thursday 24 March 2011] [16:21:52] <sustrik>	intersting
| [Thursday 24 March 2011] [16:21:55] <sustrik>	28 members
| [Thursday 24 March 2011] [16:22:11] <sustrik>	looks like some people are actually using linkedin
| [Thursday 24 March 2011] [16:22:35] <pieterh>	some people do seem to like collecting contacts, indeed... 
| [Thursday 24 March 2011] [16:22:57] <Moltar>	I'm trying to limit the outstanding messages in python using setsockopt(zmq.HWM, 1000) (for example) and it seems that this has no effect.  Any suggestions to what I might be doing wrong?
| [Thursday 24 March 2011] [16:24:48] <hexa>	Hi I just went tought the guide.. and wow :) .. but it got me many ideas one of which is to use it to do some worker/task management  inprocess ..  but I'm struggling to find a way to pass for exemple function pointers to a generic worker thread.. I checked google protobufs .. things like that but i'm not sure about it when it comes to pointers etc.. any suggestions ideas on this ?
| [Thursday 24 March 2011] [16:25:44] <pieterh>	hexa: the way I send pointers between threads is printf ("%p", pointer) and sscanf (message, "%p", &pointer)
| [Thursday 24 March 2011] [16:25:46] <sustrik>	Moltar: the messages are presumably queued in TCP buffers
| [Thursday 24 March 2011] [16:25:46] <pieterh>	seems to work
| [Thursday 24 March 2011] [16:26:15] <pieterh>	hexa: there's an example in the zapi, zctx class, somewhere in http://zero.mq/c
| [Thursday 24 March 2011] [16:26:19] <hexa>	pieterh, heheh guess that would work.. but I would like something a bit more versatile...
| [Thursday 24 March 2011] [16:27:00] <pieterh>	well, just shove the pointer in a message of the right size
| [Thursday 24 March 2011] [16:27:02] <Moltar>	sustrik: I'm using unix-domain socket with zSocket.bind('ipc:///tmp/sendalias'), so probably queued in unix socket buffer
| [Thursday 24 March 2011] [16:27:48] <Moltar>	sustrik: But I have quite a lot of data to push to my worker processes, and I don't think having gigabytes of data in this buffer is going to be a good idea.
| [Thursday 24 March 2011] [16:28:33] <hexa>	pieterh, heh I guess I could just do void* func , void* marshalling_func, void* data  , pieterh thx for the link I hadn't see that yet
| [Thursday 24 March 2011] [16:33:27] <jond>	sustrik: what's the status of subscription forwarding in master?
| [Thursday 24 March 2011] [16:50:27] <SurfaceTension>	still nobody with a (rough) number for the binary code size on arm thumb?
| [Thursday 24 March 2011] [17:11:02] <sustrik>	Moltar: you can set the buffer size using ZMQ_SNDBUF and ZMQ_RCVBUF options
| [Thursday 24 March 2011] [17:11:09] <sustrik>	jond: no progress
| [Thursday 24 March 2011] [17:11:52] <sustrik>	SurfaceTension: try asking on the mailing list
| [Thursday 24 March 2011] [17:12:01] <Moltar>	sustrik: Thanks, I'll give that a go
| [Thursday 24 March 2011] [17:12:02] <sustrik>	there are few people using 0mq on ARM iirc
| [Thursday 24 March 2011] [17:18:37] <jond>	sustrik: does that mean it's all in master but incomplete or on that branch?
| [Thursday 24 March 2011] [17:19:07] <sustrik>	it's incomplete and located in sub-forward branch
| [Thursday 24 March 2011] [17:20:27] <jond>	sustrik: ok, thanks. I'm abandoning xrep you see from my proof of concept
| [Thursday 24 March 2011] [17:56:08] <SurfaceTension>	sustrik: will do, thanks
| [Thursday 24 March 2011] [18:47:14] <Guthur>	thrift provides a means for RPC, which I suppose could be used instead passing func ptrs
| [Thursday 24 March 2011] [18:47:37] <Guthur>	but hexa has left...
| [Thursday 24 March 2011] [21:24:11] <Seta00>	where is that 'c' tool available?
| [Thursday 24 March 2011] [22:29:26] <dku>	Is it incorrect to call recv() twice consequitively on a ZMQ_REQ socket?
| [Thursday 24 March 2011] [22:29:41] <dku>	(without a send() in between, i mean)
| [Thursday 24 March 2011] [22:30:00] <lowenhart>	hey guys
| [Thursday 24 March 2011] [22:32:40] <lowenhart>	anyone know of a good decorator for zeromq + django?
| [Friday 25 March 2011] [04:06:23] <pieterh>	Seta00: on the C binding page
| [Friday 25 March 2011] [04:06:32] <pieterh>	dku: nope
| [Friday 25 March 2011] [04:25:33] <pieterh>	sustrik: I've sent an email to zeromq-dev regarding the repository rename
| [Friday 25 March 2011] [04:25:52] <pieterh>	it'd be interesting to see what the response is, if any
| [Friday 25 March 2011] [05:27:43] <private_meta>	pieterh: btw, if you really want to push something like zmsg into zapi, it'd require a redesign imho
| [Friday 25 March 2011] [05:41:47] <private_meta>	pieterh: for C++ it would be interesting to work with templates, just as an idea
| [Friday 25 March 2011] [05:44:55] <guido_g>	reminds me why i left c++
| [Friday 25 March 2011] [06:01:50] <private_meta>	I don't see generic programming as that bad of an idea
| [Friday 25 March 2011] [06:02:03] <private_meta>	If it's used in places where it can be an advantage
| [Friday 25 March 2011] [06:44:55] <Seta00>	pieterh: the zip archive on that page is missing the MSVS project/solution files, btw
| [Friday 25 March 2011] [06:45:05] <Seta00>	they are on the repo but not on the archive for some reason
| [Friday 25 March 2011] [07:13:18] <private_meta>	pieterh: btw, what was the reason to use the 0-byte in the messages?
| [Friday 25 March 2011] [07:21:27] <Guthur>	private_meta: you mean a message with no contents?
| [Friday 25 March 2011] [07:21:46] <private_meta>	no, 0-bytes in non-empty messages
| [Friday 25 March 2011] [07:22:06] <Guthur>	is this in a guide example?
| [Friday 25 March 2011] [07:22:45] <private_meta>	uuid encoding in multipart messages
| [Friday 25 March 2011] [07:23:38] <Guthur>	0MQ uuid will start with a byte of 0, iirc
| [Friday 25 March 2011] [07:24:03] <Guthur>	and that would have to be added back when encoding the string presentation back to binary
| [Friday 25 March 2011] [07:25:05] <private_meta>	I know, I want to know the reason for this decision
| [Friday 25 March 2011] [07:27:18] <Guthur>	it's not a valid UUID for 0MQ without the 0
| [Friday 25 March 2011] [07:27:45] <Guthur>	maybe I am misunderstanding your question
| [Friday 25 March 2011] [07:27:58] <private_meta>	Yes, you are...
| [Friday 25 March 2011] [07:28:14] <private_meta>	I want to know the reason why they used the 0-byte in the uuid in the first place
| [Friday 25 March 2011] [07:28:25] <private_meta>	It's a design-question
| [Friday 25 March 2011] [07:29:09] <Guthur>	yeah I'd imagine so
| [Friday 25 March 2011] [07:29:21] <private_meta>	...
| [Friday 25 March 2011] [07:29:35] <Guthur>	possibly to make it more identifiable as a UUID 
| [Friday 25 March 2011] [07:29:40] <Guthur>	at a guess
| [Friday 25 March 2011] [07:29:49] <Guthur>	sustrik: ?
| [Friday 25 March 2011] [07:40:56] <Seta00>	OpenPGM is the only implementation of PGM on 0MQ, right?
| [Friday 25 March 2011] [07:41:09] <Seta00>	as in, I can't use PGM on normal builds
| [Friday 25 March 2011] [07:51:28] <private_meta>	pieterh: finally fixed it
| [Friday 25 March 2011] [08:28:41] <so_solid_moo>	hi peeps. is the freelance pattern stuff built into a library at all, like zfl or something?
| [Friday 25 March 2011] [08:40:12] <iphony>	Has anyone successfully compiled the zmq c library for the iphone? 
| [Friday 25 March 2011] [09:51:30] <private_meta>	pieterh: are you here?
| [Friday 25 March 2011] [11:38:08] <nikolay>	hi
| [Friday 25 March 2011] [11:38:15] <cremes>	hi
| [Friday 25 March 2011] [11:38:28] <nikolay>	I am trying following
| [Friday 25 March 2011] [11:38:32] <nikolay>	star a server,
| [Friday 25 March 2011] [11:38:41] <nikolay>	then do curl localhost:5555
| [Friday 25 March 2011] [11:39:07] <nikolay>	request is invalid of cource, and server do "Assertion failed: fetched (rep.cpp:232)"
| [Friday 25 March 2011] [11:39:24] <nikolay>	the server app is in PHP
| [Friday 25 March 2011] [11:39:40] <nikolay>	how I can do so PHP not to crash?
| [Friday 25 March 2011] [11:40:21] <cremes>	nikolay: you can't connect a non-0mq socket to a 0mq socket unless you conform to the 0mq wire protocol
| [Friday 25 March 2011] [11:40:28] <cremes>	otherwise you'll get assertions
| [Friday 25 March 2011] [11:40:50] <nikolay>	yes, but generally how i can "catch" the assert() call ? 
| [Friday 25 March 2011] [11:40:56] <cremes>	you can't
| [Friday 25 March 2011] [11:41:14] <cremes>	you should open a bug issue  on github; 0mq asserts on a lot of 'invalid' data when it probably shouldn't
| [Friday 25 March 2011] [11:41:37] <cremes>	it should probably just disconnect the socket that sent the invalid data
| [Friday 25 March 2011] [11:41:40] <nikolay>	hmm this is kind of stupid , isn't it ? then server will crash, instead to close the conn
| [Friday 25 March 2011] [11:41:42] <cremes>	instead of asserting
| [Friday 25 March 2011] [11:41:52] <cremes>	nikolay: yes, it's stupid; open a 0mq bug
| [Friday 25 March 2011] [11:42:07] <nikolay>	good idea , thank you
| [Friday 25 March 2011] [11:42:22] <cremes>	nikolay: make sure you include some code that can reproduce the *entire* problem (client and server)
| [Friday 25 March 2011] [11:42:34] <cremes>	along with the steps to reproduce the crash
| [Friday 25 March 2011] [11:42:50] <nikolay>	is not a problem , but it may happen if the client app is killed
| [Friday 25 March 2011] [11:43:07] <nikolay>	thanks 
| [Friday 25 March 2011] [11:43:27] <nikolay>	bye
| [Friday 25 March 2011] [11:51:56] <Guthur>	cremes: it same strange there hasn't been more effort to remove asserts
| [Friday 25 March 2011] [11:52:01] <Guthur>	same/seems
| [Friday 25 March 2011] [11:52:30] <cremes>	Guthur: 2.1 is way better than 2.0; sustrik removed quite a few asserts but there are still a bunch left
| [Friday 25 March 2011] [11:52:51] <cremes>	that's why i think writing unit tests for the internal classes is a good idea
| [Friday 25 March 2011] [11:53:16] <cremes>	it will help reign in the use of asserts and it will encourage writing code to actually handle those error conditions instead
| [Friday 25 March 2011] [11:53:20] <cremes>	of just aborting
| [Friday 25 March 2011] [11:54:24] <Guthur>	yep, is there a strategy in place yet for refactoring the current code base to facilitate unit testing
| [Friday 25 March 2011] [11:56:04] <cremes>	Guthur: nope, no strategy yet
| [Friday 25 March 2011] [11:56:17] <cremes>	i'm going to do a quick spike this weekend using cxxtest on yqueue.cpp
| [Friday 25 March 2011] [11:56:36] <Seta00>	the documentation for zmg_msg_init_data says "If provided, the deallocation function ffn shall be called...", but the parameter isn't optional. should I just pass NULL?
| [Friday 25 March 2011] [11:56:43] <cremes>	the way i like to do unit testing is going to require *most* of these classes to become a lot smaller than they are
| [Friday 25 March 2011] [11:56:50] <cremes>	so that they can be thoroughly tested
| [Friday 25 March 2011] [11:56:58] <cremes>	Seta00: yes
| [Friday 25 March 2011] [11:57:04] <Seta00>	cremes: thanks
| [Friday 25 March 2011] [11:59:08] <Guthur>	cremes: ack
| [Friday 25 March 2011] [12:00:13] <cremes>	i don't know if all of that refactoring would/will fit with sustrik's style
| [Friday 25 March 2011] [12:00:38] <cremes>	the classes look big to me; but then again, c++ is so verbose even simple classes look pretty large
| [Friday 25 March 2011] [12:20:02] <Guthur>	I think sustrik would buy if it could deliver better test coverage
| [Friday 25 March 2011] [12:24:08] <Guthur>	buy in*
| [Friday 25 March 2011] [12:57:37] <anddam>	hello
| [Friday 25 March 2011] [12:58:19] <cremes>	hi
| [Friday 25 March 2011] [13:01:17] <anddam>	I've built mongrel2 using zeromq from macports, when I try to kill the test server it get stucks with http://pastesite.com/22567 (after ^C at line :49)
| [Friday 25 March 2011] [13:01:31] <anddam>	can it be possibly related to this zmq's test error http://pastesite.com/22568 ?
| [Friday 25 March 2011] [13:03:37] <anddam>	nice mailbox.cpp:191 " This should never happen as we've already checked that command size less than PIPE_BUF."
| [Friday 25 March 2011] [13:03:45] <anddam>	seems it's happening
| [Friday 25 March 2011] [13:05:53] <klestes>	Thats the beauty of ZeroMQ:  It makes the impossible possible !
| [Friday 25 March 2011] [13:07:45] <anddam>	"the possimpible"
| [Friday 25 March 2011] [13:08:16] <cremes>	anddam: check the tuning guide:  http://www.zeromq.org/docs:tuning-zeromq
| [Friday 25 March 2011] [13:08:31] <cremes>	usually mailbox errors in 0mq are due to the tiny default buffer sizes on osx
| [Friday 25 March 2011] [13:08:33] <klestes>	anddam:  Nice word !
| [Friday 25 March 2011] [13:08:37] <anddam>	this happens on OS X, anyone confirming he's got zmq working on osx?
| [Friday 25 March 2011] [13:08:44] <anddam>	klestes: that's from that tv show
| [Friday 25 March 2011] [13:08:57] <klestes>	there's a tv show of that name ?
| [Friday 25 March 2011] [13:09:05] <cremes>	anddam: i use 0mq on osx every day; works fine after doing a little kernel tuning
| [Friday 25 March 2011] [13:09:18] <klestes>	OS X seems to be a bitch to program on, from what I've seen hereabouts.
| [Friday 25 March 2011] [13:09:41] <cremes>	no harder than linux
| [Friday 25 March 2011] [13:09:44] <cremes>	same apis
| [Friday 25 March 2011] [13:09:45] <anddam>	cremes: I understand system tuning but how can test reach linux?
| [Friday 25 March 2011] [13:10:13] <cremes>	anddam: i don't understand your question, please rephrase
| [Friday 25 March 2011] [13:10:19] <anddam>	klestes: I think it depends on your targets, if you're going to do iOS development it's not a bitch
| [Friday 25 March 2011] [13:10:33] <anddam>	cremes: of course you don't understand it, I mixed two phrases
| [Friday 25 March 2011] [13:10:39] <klestes>	good to know.
| [Friday 25 March 2011] [13:11:31] <anddam>	cremes: my hardlimit for files is unlimited
| [Friday 25 March 2011] [13:11:45] <anddam>	how could that affect tests?
| [Friday 25 March 2011] [13:12:33] <cremes>	anddam: did you modify your sendspace/recvspace kernel params?
| [Friday 25 March 2011] [13:13:18] <cremes>	and to answer your first question, it can affect your tests if the soft limit (ulimit -a) is lower than the number of sockets created
| [Friday 25 March 2011] [13:13:28] <anddam>	no, I'm checking sysctl syntax to avoid rebooting
| [Friday 25 March 2011] [13:16:21] <anddam>	cremes: not that hard sysctl -w
| [Friday 25 March 2011] [13:19:11] <anddam>	cremes: you were damn right
| [Friday 25 March 2011] [13:19:28] <cremes>	:)
| [Friday 25 March 2011] [13:19:40] <anddam>	http://pastesite.com/22571
| [Friday 25 March 2011] [13:19:46] <anddam>	so my issue is only mongrel2
| [Friday 25 March 2011] [13:19:53] <anddam>	I had no issues with a debian
| [Friday 25 March 2011] [13:29:25] <anddam>	cremes: seems this is it https://gist.github.com/724778
| [Friday 25 March 2011] [13:29:43] <anddam>	in fact,   zmq @2.1.3_0 (active)
| [Friday 25 March 2011] [13:30:32] <cremes>	yes, the termination semantics changed from 2.0.10 to 2.1.0
| [Friday 25 March 2011] [13:31:16] <anddam>	I'll checkout from repo, but I'm packaging for macports a stable tarball would be better 
| [Friday 25 March 2011] [13:31:19] <anddam>	thanks, bye
| [Friday 25 March 2011] [13:48:29] <mih>	hello. One question about  new 2.1.3 version. It is build only .la static lib (even with --enable-shared option). Is it bug or feature?
| [Friday 25 March 2011] [13:55:39] <cremes>	mih: by default it should produce a shared library
| [Friday 25 March 2011] [16:30:54] <traviscline>	I want running web server processes to on certain events share internal state information. Just to clarify i'll likely want a pub socket in each process and (at least one) corresponding sub sockets elsewhere for each of them. A friend suggested using req/rep on startup for the procs to know where to bind, sound reasonable?
| [Friday 25 March 2011] [16:43:29] <dermoth|work>	traviscline, in general for in pub/sub you have one suv with many put connecting to it
| [Friday 25 March 2011] [16:43:37] <dermoth|work>	one sub with many pub
| [Friday 25 March 2011] [16:43:44] <dermoth|work>	oops
| [Friday 25 March 2011] [16:43:49] <dermoth|work>	i mean toe opposite
| [Friday 25 March 2011] [16:44:09] <dermoth|work>	now I get what you mean :)
| [Friday 25 March 2011] [16:45:12] <dermoth|work>	traviscline, so it is that any web process should be ble to update the other processes?
| [Friday 25 March 2011] [17:04:10] <dermoth|work>	traviscline, well assuming this is what you want, you'll need a forwarder device; all processes will connect their pub and sub sockets to it... and I strongly suggest testing it, expecially thing like all web servers reloading at once (could happen when logrotate kicks in if you leave it on)
| [Friday 25 March 2011] [17:05:02] <dermoth|work>	traviscline, ohoh I feel a cache pool like memcached might be better suited gfor that and could consume much less resources than two tcp connections per web process
| [Friday 25 March 2011] [18:13:34] <mikko>	evenin'
| [Friday 25 March 2011] [18:20:44] <Seta00>	hey I want a dot on that community map too :3
| [Saturday 26 March 2011] [05:39:23] <CIA-22>	zeromq2: 03Martin Sustrik 07pre30 * rabb184a 10/ (6 files in 4 dirs): 
| [Saturday 26 March 2011] [05:39:23] <CIA-22>	zeromq2: ZMQ_NOBLOCK renamed ZMQ_DONTWAIT
| [Saturday 26 March 2011] [05:39:23] <CIA-22>	zeromq2: Done because of POSIX compliance
| [Saturday 26 March 2011] [05:39:23] <CIA-22>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/hEKZog
| [Saturday 26 March 2011] [06:06:26] <CIA-22>	zeromq2: 03Martin Sustrik 07pre30 * r82dbef3 10/ src/zmq.cpp : 
| [Saturday 26 March 2011] [06:06:26] <CIA-22>	zeromq2: Memory leak in zmq_recv fixed
| [Saturday 26 March 2011] [06:06:26] <CIA-22>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/ie2raB
| [Saturday 26 March 2011] [09:45:47] <Guthur>	I see someone mention compiled binary size on ARM cores on the mailing list...
| [Saturday 26 March 2011] [09:46:04] <Guthur>	can ZeroMQ be successfully cross compiled for the ARM
| [Saturday 26 March 2011] [10:04:41] <sustrik>	Guthur: iirc someone have done it
| [Saturday 26 March 2011] [10:04:53] <sustrik>	there should be a mail about it on the mailing list
| [Saturday 26 March 2011] [10:05:02] <sustrik>	or maybe a wiki page on the site
| [Saturday 26 March 2011] [10:05:30] <Guthur>	sustrik, I'll have a look
| [Saturday 26 March 2011] [10:05:52] <Guthur>	Is there some search mechanism for the mailing list bar google
| [Saturday 26 March 2011] [10:10:36] <Guthur>	oh nvm
| [Saturday 26 March 2011] [10:32:43] <Guthur>	pieterh, I have the opportunity of presenting ZeroMQ to my team at work, any suggestions on content
| [Saturday 26 March 2011] [12:17:06] <Eruquen>	is there a difference between zmq_zmsg_t and zmsg_t?
| [Saturday 26 March 2011] [12:18:02] <sustrik>	what's zmsg_t?
| [Saturday 26 March 2011] [12:21:07] <Eruquen>	a type that is used in the C examples
| [Saturday 26 March 2011] [12:22:03] <Eruquen>	maybe that's why I get abitrary results vom zmq_msg_size
| [Saturday 26 March 2011] [12:42:30] <sustrik>	i assume it's some layer on top of 0mq that's used by the guide
| [Saturday 26 March 2011] [12:42:35] <sustrik>	no idea how it works
| [Saturday 26 March 2011] [12:42:36] <sustrik>	sorry
| [Saturday 26 March 2011] [12:52:21] <Guthur>	Eruquen, source is here https://github.com/imatix/zguide/blob/master/examples/C/zmsg.h
| [Saturday 26 March 2011] [12:52:47] <Guthur>	it provides some useful helper functions for msg
| [Saturday 26 March 2011] [14:30:36] <Zevv>	Hi all. Just learned about 0mq, seems that this can fix a lot of my daily pains. One question: is it possible in a inproc environment to pass pointers around ? I'm considering if 0mq can be used in our app which shares video data among a few threads on an embedded device which is painfully slow doing memcpy()'s
| [Saturday 26 March 2011] [14:31:05] <Zevv>	most of the messaging is probably ok to do using 0mq, but only the video data itself - several MB's per frame - can not be copied around for performance reasons
| [Saturday 26 March 2011] [14:31:13] <Zevv>	is this a known scenario ?
| [Saturday 26 March 2011] [14:58:55] <Guthur>	Zevv, sure you could pass the memory address around if you want
| [Saturday 26 March 2011] [15:11:01] <dermoth|home>	Hey... I posted on the mailing list about PUSH/PULL sockets not failing over... now I'm reading 2.1 documentation, and it seems ZMQ_BACKLOG is what I want... Basically I want to fail over to other devices connected to the same socket as soon as possible, without alrering the high watermark
| [Saturday 26 March 2011] [15:12:01] <dermoth|home>	so multiple devices can be used for redundancy, without queueing message if one is down.
| [Saturday 26 March 2011] [15:17:41] <sustrik>	dermoth|home: ZMQ_BACKLOG has to do only with connecting, it has no effect on messages themselves
| [Saturday 26 March 2011] [15:17:46] <sustrik>	see man listen
| [Saturday 26 March 2011] [15:23:10] <dermoth|home>	oh
| [Saturday 26 March 2011] [15:23:55] <dermoth|home>	right, i missed the "peer connection" part 
| [Saturday 26 March 2011] [16:08:34] <seb`>	can zeromq 2.1 talk to 2.0.10?
| [Saturday 26 March 2011] [16:08:49] <sustrik>	let me see
| [Saturday 26 March 2011] [16:08:58] <seb`>	it would make it easier to upgrade:-)
| [Saturday 26 March 2011] [16:09:02] <seb`>	sustrik: thanks:-)
| [Saturday 26 March 2011] [16:09:45] <sustrik>	yes, it can
| [Saturday 26 March 2011] [16:09:52] <seb`>	cool
| [Saturday 26 March 2011] [16:10:44] <seb`>	that will really save me from upgrade hell
| [Saturday 26 March 2011] [16:11:02] <sustrik>	:)
| [Saturday 26 March 2011] [16:30:38] <Guthur>	surely if it couldn't that would be a big issue
| [Saturday 26 March 2011] [18:43:36] <thatch__>	Is there a way to verify that a remote zeromq server is available before atempting to connect to it?
| [Saturday 26 March 2011] [19:05:02] <Guthur>	thatch__, you could checkout chapter 4 of the guide for some reliability patterns
| [Saturday 26 March 2011] [19:05:37] <thatch__>	thanks :)
| [Sunday 27 March 2011] [00:17:27] <EduardoFonseca>	Hi Guys. I'm trying to figure out how to implement connection dettection on top of zeroMQ. Any tips?
| [Sunday 27 March 2011] [00:17:35] <EduardoFonseca>	*detection, sorry.
| [Sunday 27 March 2011] [00:33:39] <seb`>	EduardoFonseca: you could send a first message to signal the connection
| [Sunday 27 March 2011] [00:33:58] <seb`>	it would have to be added to your own protocol
| [Sunday 27 March 2011] [00:37:56] <EduardoFonseca>	great
| [Sunday 27 March 2011] [00:38:07] <EduardoFonseca>	but what about detecting when this connection has gone away?
| [Sunday 27 March 2011] [00:38:43] <EduardoFonseca>	I tried implementing heartbeats, but the code started to get really complex. 
| [Sunday 27 March 2011] [00:38:57] <seb`>	I was going to suggest that:-)
| [Sunday 27 March 2011] [00:39:21] <seb`>	on req/rep a heartbeat should not be that complex
| [Sunday 27 March 2011] [00:40:22] <EduardoFonseca>	I'm using XREQ and XREP... but the loadbalancing part got complex.
| [Sunday 27 March 2011] [00:40:44] <EduardoFonseca>	I was planning to reimplement the Majordomo pattern... but, why use zeroMQ if you need a broker? :)
| [Sunday 27 March 2011] [13:09:55] <mikko>	howdy guys
| [Sunday 27 March 2011] [13:57:22] <Guthur>	hey mikko 
| [Sunday 27 March 2011] [13:57:54] <Guthur>	do you know if Ian Barbers PHP presentation slides are available anywhere for download, besides slideshare
| [Sunday 27 March 2011] [13:58:08] <mikko>	Guthur: let me check
| [Sunday 27 March 2011] [13:59:19] <mikko>	his blog seems to be down
| [Sunday 27 March 2011] [14:06:31] <Guthur>	ok, I'll check it later
| [Sunday 27 March 2011] [14:06:36] <Guthur>	cheers mikko 
| [Sunday 27 March 2011] [14:14:07] <mikko>	i can ask him for a pdf
| [Sunday 27 March 2011] [14:25:19] <Guthur>	mikko, that would great, cheers
| [Sunday 27 March 2011] [14:36:12] <pieter_hintjens>	Guthur: slideshare should offer downloads, doesn't it?
| [Sunday 27 March 2011] [14:36:42] <Guthur>	pieter_hintjens, It does. i just didn't want to sign up
| [Sunday 27 March 2011] [14:36:53] <pieter_hintjens>	yeah
| [Sunday 27 March 2011] [14:41:29] <mikko>	finally got some more build capacity online
| [Sunday 27 March 2011] [14:41:34] <mikko>	x86_64 centos
| [Sunday 27 March 2011] [14:41:46] <mikko>	rpms are now built every night
| [Sunday 27 March 2011] [14:43:01] <mikko>	pieter_hintjens: i'll try to add libzapi today
| [Sunday 27 March 2011] [14:43:08] <pieter_hintjens>	mikko: nice!
| [Sunday 27 March 2011] [14:43:18] <pieter_hintjens>	I also renamed ZFL to libzfl, you saw that
| [Sunday 27 March 2011] [14:43:23] <mikko>	i did
| [Sunday 27 March 2011] [14:43:27] <Guthur>	I was actually going to draw some inspiration from Ian's presentation for a presentation at work
| [Sunday 27 March 2011] [14:43:28] <mikko>	i was away yesterday and today
| [Sunday 27 March 2011] [14:43:31] <mikko>	spa weekend
| [Sunday 27 March 2011] [14:43:42] <pieter_hintjens>	:-) it was excellent weather here in Belgium
| [Sunday 27 March 2011] [14:43:42] <mikko>	been doing nothing but soaking in warm water
| [Sunday 27 March 2011] [14:44:13] <Guthur>	I've been wanting to ask him if it would be ok to borrow some stuff, just haven't been able to catch him in here
| [Sunday 27 March 2011] [14:49:07] 	 * pieterh is making a new version of the guide
| [Sunday 27 March 2011] [14:49:18] <pieterh>	all code blocks highlighted, all collapsible (except a few)
| [Sunday 27 March 2011] [14:49:19] <pieterh>	http://zguide.zeromq.org/test:ch1
| [Sunday 27 March 2011] [15:40:18] 	 * pieterh has created a monster, the Guide won't load any longer...
| [Sunday 27 March 2011] [15:45:24] <Guthur>	it loads for me
| [Sunday 27 March 2011] [15:45:32] 	 * pieterh is fixing it as we speak...
| [Sunday 27 March 2011] [15:45:37] <Guthur>	but there is issues with the language translation link
| [Sunday 27 March 2011] [15:45:41] <Guthur>	links*
| [Sunday 27 March 2011] [15:45:50] <pieterh>	yes, reload in a few heartbeats...
| [Sunday 27 March 2011] [15:45:54] <pieterh>	the problem is the marked up code blocks are huge
| [Sunday 27 March 2011] [15:46:10] <pieterh>	including 320 of them in the page kind of does not work
| [Sunday 27 March 2011] [15:46:44] <Guthur>	hehe, I can imagine
| [Sunday 27 March 2011] [15:47:06] <pieterh>	it should work better now, code examples appear in a new tab
| [Sunday 27 March 2011] [15:47:17] <pieterh>	shame, it was kind of nice to have them inline...
| [Sunday 27 March 2011] [15:50:17] <Guthur>	oh new tabs, umm, I tend to curse pages that do that
| [Sunday 27 March 2011] [15:51:32] <Guthur>	is the C version still inline?
| [Sunday 27 March 2011] [15:53:36] <pieterh>	well, nope, but I'm going to make a further round of improvements
| [Sunday 27 March 2011] [15:53:52] <pieterh>	will inline the C version
| [Sunday 27 March 2011] [15:53:58] <pieterh>	and ditto for the PHP version
| [Sunday 27 March 2011] [15:56:28] <mikko>	pieterh: http://build.zero.mq/job/libzapi/3/console
| [Sunday 27 March 2011] [15:56:38] <mikko>	ROUTER and DEALER are not in the main repo?
| [Sunday 27 March 2011] [15:56:52] <mikko>	the one that sustrik maintains
| [Sunday 27 March 2011] [15:56:55] <pieterh>	nope
| [Sunday 27 March 2011] [15:57:07] <pieterh>	libzapi needs 2.1.latest
| [Sunday 27 March 2011] [15:57:26] <pieterh>	I'm hoping sustrik will eventually make the ROUTER/DEALER changes but can't force him to
| [Sunday 27 March 2011] [15:57:34] <pieterh>	mikko: hang on, I'
| [Sunday 27 March 2011] [15:57:36] <mikko>	this situation is very confusing
| [Sunday 27 March 2011] [15:57:39] <pieterh>	I'll make a patch to libzapi
| [Sunday 27 March 2011] [15:57:50] <pieterh>	it'll become less confusing over time
| [Sunday 27 March 2011] [15:57:58] <pieterh>	a lot of change happening in a lot of places...
| [Sunday 27 March 2011] [15:58:03] <pieterh>	gimme 2 minutes...
| [Sunday 27 March 2011] [15:58:09] <mikko>	no hurry
| [Sunday 27 March 2011] [16:00:16] <pieterh>	mikko: ok, done, new version pushed
| [Sunday 27 March 2011] [16:00:38] <mikko>	kicking off a new build
| [Sunday 27 March 2011] [16:00:48] <mikko>	#4 on the way
| [Sunday 27 March 2011] [16:00:51] <pieterh>	:-)
| [Sunday 27 March 2011] [16:02:40] <mikko>	builds
| [Sunday 27 March 2011] [16:02:52] <mikko>	http://build.zero.mq/job/libzapi/4/cobertura/_default_/
| [Sunday 27 March 2011] [16:02:57] <mikko>	here is the code coverage
| [Sunday 27 March 2011] [16:04:02] <mikko>	i will refactor the builds as soon as the repository rename happens
| [Sunday 27 March 2011] [16:04:16] <Guthur>	pieterh, are you using ROUTER/DEALER in the guide
| [Sunday 27 March 2011] [16:04:16] <mikko>	so that i can do the changes in one go
| [Sunday 27 March 2011] [16:04:27] <pieterh>	Guthur: not yet, but that's the next step
| [Sunday 27 March 2011] [16:04:45] <pieterh>	then, move the C code over to using libzapi
| [Sunday 27 March 2011] [16:04:57] <pieterh>	mikko: sweet!
| [Sunday 27 March 2011] [16:05:48] <mikko>	zeromq2-2, is this a new branch as well?
| [Sunday 27 March 2011] [16:06:00] <pieterh>	mikko: yes, that's the packaging project for 2.2
| [Sunday 27 March 2011] [16:06:10] <pieterh>	the packaging projects will include more than libzmq, hopefully
| [Sunday 27 March 2011] [16:06:17] <mikko>	did my patch get through to the list ?
| [Sunday 27 March 2011] [16:06:21] <pieterh>	but they'll track the libzmq major/minor versions
| [Sunday 27 March 2011] [16:06:25] <pieterh>	yes, your patch made it
| [Sunday 27 March 2011] [16:06:38] <mikko>	cool, not very good connectivity out in the sticks
| [Sunday 27 March 2011] [16:06:56] <pieterh>	from the hot spas... :-)
| [Sunday 27 March 2011] [16:08:02] <mikko>	so, what is the role of zeromq2, zeromq2-2 and zeromq2-1 repos?
| [Sunday 27 March 2011] [16:08:14] <pieterh>	just for consistency, really
| [Sunday 27 March 2011] [16:08:26] <pieterh>	zeromq2 will be deprecated, become a map for visitors who use the old URI
| [Sunday 27 March 2011] [16:08:45] <mikko>	do we in the future push changes to upstream first?
| [Sunday 27 March 2011] [16:08:48] <pieterh>	2-1 and 2-2 are packaging projects, 2-2 will be where we add new projects like libzapi
| [Sunday 27 March 2011] [16:08:49] <mikko>	because that would be ideal
| [Sunday 27 March 2011] [16:09:05] <pieterh>	yes, if possible
| [Sunday 27 March 2011] [16:09:11] <pieterh>	sometimes it won't be possible
| [Sunday 27 March 2011] [16:09:29] <pieterh>	the 3.0 libzmq core will eventually change too much
| [Sunday 27 March 2011] [16:10:14] <pieterh>	we already had this case for one patch to 2.0, which had to be hand-made for that version
| [Sunday 27 March 2011] [16:10:42] <mikko>	something in this model feels very wrong but i really can't put my finger on it
| [Sunday 27 March 2011] [16:11:04] <mikko>	it feels like duplicating the effort in some ways
| [Sunday 27 March 2011] [16:11:11] <pieterh>	in fact it's not
| [Sunday 27 March 2011] [16:11:25] <mikko>	i made the openpgm build patches twice
| [Sunday 27 March 2011] [16:11:30] <mikko>	2-1 and upstream
| [Sunday 27 March 2011] [16:11:37] <pieterh>	yes, because you used pull requests to send to me
| [Sunday 27 March 2011] [16:11:54] <pieterh>	and sustrik does not accept anything except patches to ML
| [Sunday 27 March 2011] [16:12:03] <pieterh>	it would not change if we had one repo, two branches
| [Sunday 27 March 2011] [16:12:33] <pieterh>	the advantage is you were able to get rapid feedback that your changes worked
| [Sunday 27 March 2011] [16:12:39] <mikko>	so, we are still doing the patches on ML?
| [Sunday 27 March 2011] [16:12:43] <pieterh>	if you send upstream, you have no control over when they are released
| [Sunday 27 March 2011] [16:12:56] <pieterh>	i guess so, yes
| [Sunday 27 March 2011] [16:13:09] <pieterh>	I'd rather use the pull model explained on the contributing page
| [Sunday 27 March 2011] [16:13:26] <pieterh>	especially since that's how Sustriks sends me changes... :-/
| [Sunday 27 March 2011] [16:14:25] <pieterh>	basically, any contributor has to convince the project owner to accept his patch
| [Sunday 27 March 2011] [16:14:37] <pieterh>	project owner can define how patches are submitted
| [Sunday 27 March 2011] [16:15:17] <pieterh>	and contributor is the one who stresses if project A and project B have different codebases
| [Sunday 27 March 2011] [16:15:26] <Guthur>	but is this not sort of fracturing zeromq too much
| [Sunday 27 March 2011] [16:15:30] <pieterh>	nah
| [Sunday 27 March 2011] [16:15:32] <mikko>	yes, it is
| [Sunday 27 March 2011] [16:15:33] <Guthur>	projects with in a project
| [Sunday 27 March 2011] [16:15:40] <pieterh>	libzmq != ZeroMQ
| [Sunday 27 March 2011] [16:15:42] <mikko>	this puts more pressure on contributors
| [Sunday 27 March 2011] [16:15:49] <pieterh>	yes, mikko, it does
| [Sunday 27 March 2011] [16:15:59] <pieterh>	but that's necessary if we're not to have bottlenecks
| [Sunday 27 March 2011] [16:16:15] <mikko>	we already have massive bottlenecks
| [Sunday 27 March 2011] [16:16:27] <pieterh>	yes, but this is one big one removed
| [Sunday 27 March 2011] [16:16:32] <mikko>	we have three separate branches as three separate projects
| [Sunday 27 March 2011] [16:16:43] <pieterh>	that's not a bottleneck... 
| [Sunday 27 March 2011] [16:16:44] <mikko>	every contributor has to mix and match their patches
| [Sunday 27 March 2011] [16:16:52] <mikko>	and only one person can accept that patch
| [Sunday 27 March 2011] [16:17:01] <pieterh>	sorry, this isn't accurate, mikko
| [Sunday 27 March 2011] [16:17:04] <mikko>	if that person is on hols your patch is sitting and waiting somewhere
| [Sunday 27 March 2011] [16:17:26] <pieterh>	this is standard with Git
| [Sunday 27 March 2011] [16:17:36] <pieterh>	you send patches or pull requests to a project maintainer
| [Sunday 27 March 2011] [16:17:41] <mikko>	no, it's not 
| [Sunday 27 March 2011] [16:17:52] <pieterh>	you want everyone to commit to the repository?
| [Sunday 27 March 2011] [16:17:55] <mikko>	this is one possible workflow
| [Sunday 27 March 2011] [16:18:08] <mikko>	who do you mean by everyone?
| [Sunday 27 March 2011] [16:18:13] <pieterh>	it's the one that scales to many projects, because each one is smallish
| [Sunday 27 March 2011] [16:18:43] <pieterh>	and this only affects libzmq because it's got several incompatible versions
| [Sunday 27 March 2011] [16:18:57] <pieterh>	that is only one project out of 20 or 30
| [Sunday 27 March 2011] [16:20:50] <pieterh>	mikko: do you have an alternative proposal that lets us do what we want to do?
| [Sunday 27 March 2011] [16:21:20] <mikko>	currently we are doing everything very differently from what people contributing to open source are used to
| [Sunday 27 March 2011] [16:21:31] <mikko>	and that alienates contributors 
| [Sunday 27 March 2011] [16:21:44] <pieterh>	that's true if you look at the core project but it's not true for the overall scheme
| [Sunday 27 March 2011] [16:22:22] <pieterh>	each project accepts contributors and contributions in its own way
| [Sunday 27 March 2011] [16:22:32] <pieterh>	this is consistent with how open source communities work
| [Sunday 27 March 2011] [16:22:44] <pieterh>	the only difference here is we have separate projects for *packaging* ZeroMQ
| [Sunday 27 March 2011] [16:22:52] <pieterh>	but that is necessary because libzmq != ZeroMQ
| [Sunday 27 March 2011] [16:23:02] <pieterh>	which will become much clearer once the core repo is renamed
| [Sunday 27 March 2011] [16:23:37] <mikko>	a contributor should not need to understand this amazing complex grand schema
| [Sunday 27 March 2011] [16:23:55] <pieterh>	well, we do have a lot of projects, how do you propose to map this?
| [Sunday 27 March 2011] [16:23:57] <mikko>	it should be as straigh-forward as: i run 2.1, find the git repo, make a patch
| [Sunday 27 March 2011] [16:24:04] <pieterh>	the packaging projects are largely hidden
| [Sunday 27 March 2011] [16:24:17] <pieterh>	make your patches against the libzmq git
| [Sunday 27 March 2011] [16:24:33] <mikko>	this should not be followed by having to understand that actually if my patch goes to libzmq i need to get it accepted to zeromq2-2 and zeromq2-1
| [Sunday 27 March 2011] [16:24:46] <mikko>	and possibly need to rework the patch for each version separately
| [Sunday 27 March 2011] [16:24:51] <pieterh>	well, fair enough, but understand that...
| [Sunday 27 March 2011] [16:25:04] <pieterh>	these repositories are for stabilization 
| [Sunday 27 March 2011] [16:25:12] <mikko>	but they aren't
| [Sunday 27 March 2011] [16:25:20] <pieterh>	that means they only in theory get bug fixes or very safe functional changes
| [Sunday 27 March 2011] [16:25:21] <mikko>	we pushed openpgm build fixes straight to 2-1
| [Sunday 27 March 2011] [16:25:29] <mikko>	not through 'libzmq' repo
| [Sunday 27 March 2011] [16:25:36] <pieterh>	indeed, let's not do that again
| [Sunday 27 March 2011] [16:25:45] <pieterh>	however, realize that it's how you got those changes *tested* rapidly
| [Sunday 27 March 2011] [16:26:00] <pieterh>	next time, send to the ML
| [Sunday 27 March 2011] [16:26:07] <Guthur>	i've not really seen various version of a library being seen as projects
| [Sunday 27 March 2011] [16:26:22] <pieterh>	RHEL x.x?
| [Sunday 27 March 2011] [16:26:23] <Guthur>	if that happens they usually fork off and rename, 
| [Sunday 27 March 2011] [16:26:55] <Guthur>	not familiar with RH to be honest
| [Sunday 27 March 2011] [16:27:02] <pieterh>	the linux kernel is repackaged in many distributions, each is a project
| [Sunday 27 March 2011] [16:27:42] <Guthur>	yes but are we not talking about the 'kernel' at the moment
| [Sunday 27 March 2011] [16:27:51] <pieterh>	well, libzmq is like the kernel for ZeroMQ
| [Sunday 27 March 2011] [16:28:14] <pieterh>	mikko: next time you send me a pull request for 2-1, I'll reject it, OK?
| [Sunday 27 March 2011] [16:28:19] <Guthur>	so 2, 2-1, 2-2 are distros?
| [Sunday 27 March 2011] [16:28:24] <pieterh>	yes, thank you
| [Sunday 27 March 2011] [16:28:29] <pieterh>	2 is not
| [Sunday 27 March 2011] [16:28:33] <pieterh>	2 is dead
| [Sunday 27 March 2011] [16:28:45] <pieterh>	will be dead once it's been renamed to libzmq
| [Sunday 27 March 2011] [16:29:04] <Guthur>	seems I a bit crazy to me, but i'm not overly experienced with these sort of things
| [Sunday 27 March 2011] [16:29:26] <pieterh>	there is no other way to create the freedom to make real packaging projects
| [Sunday 27 March 2011] [16:29:36] <pieterh>	it seems pretty clear to me
| [Sunday 27 March 2011] [16:29:53] <pieterh>	alternative is to all work in one repo, and have no packaging projects
| [Sunday 27 March 2011] [16:30:02] <mikko>	hahaha, you designed the schema
| [Sunday 27 March 2011] [16:30:07] <mikko>	of course it's clear to you
| [Sunday 27 March 2011] [16:30:16] <pieterh>	sure
| [Sunday 27 March 2011] [16:30:22] <mikko>	but from contributor's point of view the situation is not very good (imho)
| [Sunday 27 March 2011] [16:30:33] <pieterh>	well, it'll be clearer IMO when libzmq is properly named
| [Sunday 27 March 2011] [16:30:43] <pieterh>	"send your patch to the libzmq project"
| [Sunday 27 March 2011] [16:30:50] <pieterh>	and that can downstream to the various distros
| [Sunday 27 March 2011] [16:30:53] <mikko>	what happens when sustrik is on holidays?
| [Sunday 27 March 2011] [16:31:00] <pieterh>	ask him, I don't know
| [Sunday 27 March 2011] [16:31:10] <pieterh>	mikko: this is not a command-and-control model
| [Sunday 27 March 2011] [16:31:13] <mikko>	see, are we not creating massive bottlenecks?
| [Sunday 27 March 2011] [16:31:28] <pieterh>	propose an alternative to "person who knows the code real well"
| [Sunday 27 March 2011] [16:31:38] <pieterh>	we're not *creating* that bottleneck, it exists
| [Sunday 27 March 2011] [16:31:48] <pieterh>	seriously, your alternative is what, clone sustrik?
| [Sunday 27 March 2011] [16:32:05] <pieterh>	there are other people who know the core structures pretty well
| [Sunday 27 March 2011] [16:32:14] <pieterh>	if sustrik is unable to act as maintainer, I'm sure he'll delegate
| [Sunday 27 March 2011] [16:32:21] <pieterh>	but it is *his* responsibility
| [Sunday 27 March 2011] [16:32:35] <pieterh>	you and me can debate that for years, it matters not at all
| [Sunday 27 March 2011] [16:32:52] <mikko>	yes, what i don't get is this cycle:
| [Sunday 27 March 2011] [16:32:56] <Guthur>	could we not have the situation where the 'distros' start deviating quite far from the main dev branch
| [Sunday 27 March 2011] [16:33:05] <pieterh>	Guthur: unlikely, why would they?
| [Sunday 27 March 2011] [16:33:31] <mikko>	fork libzmq, create patch, commit, create signed patch, reset, wait for a merge, then pull down your own changes 
| [Sunday 27 March 2011] [16:33:32] <pieterh>	the very point is that the people maintaining distros don't know the code
| [Sunday 27 March 2011] [16:33:40] <Guthur>	just curious really, they seemed to have become more than just previous versions
| [Sunday 27 March 2011] [16:33:46] <pieterh>	mikko: ack, it's complex and I don't like it
| [Sunday 27 March 2011] [16:33:50] <Guthur>	they seemed to have become their own projects
| [Sunday 27 March 2011] [16:34:06] <mikko>	forgot the "send mail to mailing-list" from that 
| [Sunday 27 March 2011] [16:34:12] <pieterh>	Guthur: 'seem to' is mild, the goal was to create dependent projects
| [Sunday 27 March 2011] [16:34:16] <pieterh>	mikko: yes, I know
| [Sunday 27 March 2011] [16:34:29] <pieterh>	I've lobbied sustrik on this several times, here and on the list
| [Sunday 27 March 2011] [16:34:49] <pieterh>	next time, chime in, on the ML thread ... :-/
| [Sunday 27 March 2011] [16:35:10] <mikko>	i had forgotten about the ML patches already
| [Sunday 27 March 2011] [16:35:18] <pieterh>	I spent a lot of effort documenting alternative flows on the contributing page
| [Sunday 27 March 2011] [16:39:55] <Guthur>	pieterh, dependent or independent?
| [Sunday 27 March 2011] [16:40:04] <pieterh>	both :-)
| [Sunday 27 March 2011] [16:40:17] <pieterh>	look, 2-1 is not a good example, it's too young
| [Sunday 27 March 2011] [16:40:33] <Guthur>	though it already as deviation
| [Sunday 27 March 2011] [16:40:36] <pieterh>	2-2 will include, in my plans, libzmq, libzapi, the new C++ binding
| [Sunday 27 March 2011] [16:40:43] <Guthur>	where something needs forward ported
| [Sunday 27 March 2011] [16:40:53] <pieterh>	obviously it depends on those N projects
| [Sunday 27 March 2011] [16:41:03] <Guthur>	admittedly only a minor #define
| [Sunday 27 March 2011] [16:41:11] <pieterh>	yes
| [Sunday 27 March 2011] [16:41:32] <pieterh>	one way would be to use submodules and branches in the source repo
| [Sunday 27 March 2011] [16:41:50] <pieterh>	that would require that the branches are maintained in that repo
| [Sunday 27 March 2011] [16:42:26] <pieterh>	experience is that this wasn't happening, due to complexity of moving changes between branches (or somesuch)
| [Sunday 27 March 2011] [16:42:47] <pieterh>	lack of interest from main developers in maintaining branches
| [Sunday 27 March 2011] [16:42:54] <mikko>	it's the same amount of complexity as between different repos
| [Sunday 27 March 2011] [16:42:58] <pieterh>	yes
| [Sunday 27 March 2011] [16:43:12] <pieterh>	exactly, but with different repos, you can slice the work over several people much more easily
| [Sunday 27 March 2011] [16:43:22] <pieterh>	this is the key insight
| [Sunday 27 March 2011] [16:43:31] <pieterh>	collaborating inside one repo is really difficult
| [Sunday 27 March 2011] [16:43:35] <pieterh>	it demands agreement
| [Sunday 27 March 2011] [16:43:42] <pieterh>	clearly we don't get that easily
| [Sunday 27 March 2011] [16:43:44] <Guthur>	I thought git made it easier
| [Sunday 27 March 2011] [16:43:54] <pieterh>	it doesn't change people and make them less stubborn
| [Sunday 27 March 2011] [16:43:58] <Guthur>	certainly easier than the likes of SVN
| [Sunday 27 March 2011] [16:44:04] <pieterh>	git makes it easier to have many repos
| [Sunday 27 March 2011] [16:44:15] 	 * Guthur has SVN pain at work, it's not pretty
| [Sunday 27 March 2011] [16:44:19] <pieterh>	indeed
| [Sunday 27 March 2011] [16:44:34] <pieterh>	git lets us solve the problem by slicing projects up, like I said on the ML, per ego
| [Sunday 27 March 2011] [16:44:45] <pieterh>	it's actually a really pleasant way to work
| [Sunday 27 March 2011] [16:44:53] <Guthur>	yeah, that discussion got a little out of hand
| [Sunday 27 March 2011] [16:45:09] <Guthur>	well it appeared so from an onlookers perspective
| [Sunday 27 March 2011] [16:45:14] <pieterh>	exactly, and that was the same last time we discussed multiple branches in the main repo
| [Sunday 27 March 2011] [16:46:39] <pieterh>	that was sometime in July iir, and my conclusion was "don't work in the core repo, ever"
| [Sunday 27 March 2011] [16:47:18] <mikko>	as the community grows an ideal process to me would be to have multiple people with commit access
| [Sunday 27 March 2011] [16:47:29] <mikko>	and each set of changes is mailed automatically to mailing-list
| [Sunday 27 March 2011] [16:47:52] <pieterh>	mikko: yes, probably a good model
| [Sunday 27 March 2011] [16:48:36] <mikko>	this also gives more visibility to changes going into repo and allows easily start conversation on mailing-list
| [Sunday 27 March 2011] [16:48:53] <pieterh>	however, I'm not going to raise this discussion for libzmq
| [Sunday 27 March 2011] [16:49:15] <pieterh>	you already have committer access to libzapi and libzfl
| [Sunday 27 March 2011] [16:50:25] <Guthur>	libzmq is the heart of it all though, and so the most important
| [Sunday 27 March 2011] [16:50:27] <mikko>	yes
| [Sunday 27 March 2011] [16:50:39] <mikko>	for example now i would be keen on getting coverage into libzmq
| [Sunday 27 March 2011] [16:50:39] <pieterh>	yes
| [Sunday 27 March 2011] [16:50:51] <mikko>	but it's futile to work on the stuff before openpgm patch has been merged
| [Sunday 27 March 2011] [16:51:08] <pieterh>	mikko: my experience contributing to core has been quite negative, I have to admit
| [Sunday 27 March 2011] [16:51:10] <mikko>	i don't even know if rebase works well on that cycle
| [Sunday 27 March 2011] [16:51:50] <mikko>	as in, when i pull back the changes merged by sustrik does that conflict with my local changes?
| [Sunday 27 March 2011] [16:51:59] <mikko>	or is it the same commit?
| [Sunday 27 March 2011] [16:52:08] <pieterh>	depends how you do it IMO
| [Sunday 27 March 2011] [16:58:43] <pieterh>	Guthur: OK, I'm able to inline the main language, the page is slow but loads
| [Sunday 27 March 2011] [17:00:28] <Seta00>	pieterh: the libzapi project file is broken
| [Sunday 27 March 2011] [17:00:54] <pieterh>	Seta00: yes, I've not tested it yet on MSVC
| [Sunday 27 March 2011] [17:01:03] <pieterh>	do you want to try fixing it and sending a patch?
| [Sunday 27 March 2011] [17:01:25] <Seta00>	yes
| [Sunday 27 March 2011] [17:01:31] <pieterh>	it's a copy of the libzfl project file, but obviously refers to the wrong sources & includes
| [Sunday 27 March 2011] [17:01:33] <pieterh>	thanks! :-)
| [Sunday 27 March 2011] [17:06:19] <pieterh>	g'night folks, I need to crash, early morning tomorrow
| [Sunday 27 March 2011] [17:06:48] <Seta00>	pieterh: just a small question before you go, if you have to include non-standard headers to the project, where should they go? on the standard include directory?
| [Sunday 27 March 2011] [17:06:55] <Seta00>	(MSVC doesn't have inttypes.h)
| [Sunday 27 March 2011] [17:07:05] <Seta00>	but there's https://code.google.com/p/msinttypes/
| [Sunday 27 March 2011] [17:07:24] <pieterh>	Seta00: hmm, edit zapi_prelude.h to include the right files and move the existing include to one of the #if UNIX blocks
| [Sunday 27 March 2011] [17:07:33] <Seta00>	okay thanks
| [Sunday 27 March 2011] [17:07:49] <pieterh>	there's a section in the doc on Porting libzapi, may be helpful
| [Sunday 27 March 2011] [17:39:14] <Seta00>	apparently msvc has no implementation of sigaction
| [Sunday 27 March 2011] [17:39:23] <Seta00>	:(
| [Sunday 27 March 2011] [17:42:31] <JusticeFries>	what are the differences in typical use cases for 0mq vs something like rabbitmq?
| [Sunday 27 March 2011] [19:05:16] <klestes>	hello, is anyone talking today ?
| [Sunday 27 March 2011] [19:19:27] <klestes>	if anyone does see this, what is the best way to interoperate with channels in basic (non 0MQ) tcp ?  do you have to write a custom gateway, TCP <--> 0MQ, or is there a better solution inherent in 0MQ that I've missed ?
| [Sunday 27 March 2011] [19:20:09] <jdroid->	i've been using zmq with python and am trying to compile some stuff with c now, but I keep getting errors.
| [Sunday 27 March 2011] [19:20:36] <jdroid->	does this make sense to anyone? http://pastebin.com/7Mj5KSSH
| [Sunday 27 March 2011] [19:20:44] 	 * jdroid- is very rusty with c...
| [Sunday 27 March 2011] [19:21:06] <jdroid->	here's the code: http://pastebin.com/efKgRJiK
| [Sunday 27 March 2011] [19:21:22] <klestes>	you have to program a lot lower with C than with python - how would you say the experience has been using python with 0MQ ?
| [Sunday 27 March 2011] [19:22:06] <jdroid->	The experience with python has been awesome so far. Very easy.
| [Sunday 27 March 2011] [19:22:23] <jdroid->	I built a Mongrel2 handler with eventlet and zeromq recently. github.com/j2labs/brubeck
| [Sunday 27 March 2011] [19:23:20] <jdroid->	I've been posting a few pyzmq examples to github as it comes up in conversation, but I want to add a multilang example AND get back in C doing it.
| [Sunday 27 March 2011] [19:23:26] <jdroid->	https://github.com/j2labs/zmq_examples
| [Sunday 27 March 2011] [19:23:53] <klestes>	after learning Perl, my goal is never go back to C!  Evah !
| [Sunday 27 March 2011] [19:24:13] <jdroid->	After learning Perl, I vowed never to go back to Perl. So right back atcha buddy!
| [Sunday 27 March 2011] [19:24:31] <jdroid->	:)
| [Sunday 27 March 2011] [19:24:47] <klestes>	also you might want to check out the new zapi.  Hintjen is very excited about it, so it could be big.
| [Sunday 27 March 2011] [19:25:06] <klestes>	well, I'm not going to stir up a fight.  I have a lot of respect for Python, and might be doing some work in it soon myself.
| [Sunday 27 March 2011] [19:26:28] <klestes>	my point was to be, programming 0MQ in either python or perl is much easier than C, IMHO.
| [Sunday 27 March 2011] [19:26:52] <jdroid->	Well I'm only kidding anyway. Perl is a fine language if you're working with people who respect others. :)
| [Sunday 27 March 2011] [19:28:29] <klestes>	It has its warts, and its uhm, non warty really ok type features.
| [Sunday 27 March 2011] [19:28:53] <klestes>	I get sick of all those $ signs all the time, esp. since its been a while since I've seen $$$$ !
| [Sunday 27 March 2011] [19:29:32] <jdroid->	You'll dig python then I'm sure. The code is generally as easy to read as people say.
| [Sunday 27 March 2011] [19:29:38] <jdroid->	But anyway... I'm trying to get some c compiled!
| [Sunday 27 March 2011] [19:29:52] <klestes>	I looked at your code, but not being in C for at least a decade, I couildn't catch anything right off the bat.  I know its either a linking issue, or maybe forgetting to include a header (but you seem to have done that right)
| [Sunday 27 March 2011] [19:30:19] <klestes>	what compiler are you using, Gcc ?
| [Sunday 27 March 2011] [19:31:03] <jdroid->	oh great question actually... i'm using the gcc xcode gave me
| [Sunday 27 March 2011] [19:31:34] <jdroid->	seems to compile mongrel2 just fine, so i figure i've got my args wrong somehow
| [Sunday 27 March 2011] [19:31:50] <jdroid->	gcc 4.2.1 specifically tho
| [Sunday 27 March 2011] [19:31:51] <klestes>	uhm, xcode - are you on OS/X ?
| [Sunday 27 March 2011] [19:31:54] <jdroid->	yep
| [Sunday 27 March 2011] [19:31:59] <klestes>	lucky guy !
| [Sunday 27 March 2011] [19:32:09] <jdroid->	i guess..? macs are cheap these days
| [Sunday 27 March 2011] [19:32:18] <klestes>	someday I'm gonna go mac...and never come back.
| [Sunday 27 March 2011] [19:32:33] <klestes>	well, depends on what kinda mac you want.  the one I want is 2.5 - 3k.
| [Sunday 27 March 2011] [19:34:03] <klestes>	try compiling and linking one of the simple examples from the guide.  do you get the same errors ?
| [Sunday 27 March 2011] [19:35:54] <jdroid->	i seem to get the same errrors
| [Sunday 27 March 2011] [19:35:56] <jdroid->	hmm
| [Sunday 27 March 2011] [19:36:11] <jdroid->	i tried this: http://zguide.zeromq.org/c:hwclient
| [Sunday 27 March 2011] [19:38:51] <jdroid->	ah got it
| [Sunday 27 March 2011] [19:39:00] <jdroid->	i forgot -lzmq at the end of the gcc cmd
| [Sunday 27 March 2011] [19:39:42] <JusticeFries>	what is the difference in typical use case for 0mq versus something in the realm of rabbitmq?
| [Sunday 27 March 2011] [19:40:05] <jdroid->	JusticeFries: I think the mistake there is assuming zmq is a replacement for rabbitmq
| [Sunday 27 March 2011] [19:40:19] <JusticeFries>	nope
| [Sunday 27 March 2011] [19:40:23] <JusticeFries>	not assuming replacement.
| [Sunday 27 March 2011] [19:40:30] <JusticeFries>	i'm interested in how they complement each other, too. :)
| [Sunday 27 March 2011] [19:40:34] <JusticeFries>	and what each one excels at.
| [Sunday 27 March 2011] [19:40:53] <jdroid->	:)
| [Sunday 27 March 2011] [19:41:30] <jdroid->	So ZMQ is more like sockets with messaging semantics. You'd still build your broker, which might be dropping stuff from one zmq socket in a db, while sending stuff out of the db across another socket
| [Sunday 27 March 2011] [19:41:58] <JusticeFries>	okay.
| [Sunday 27 March 2011] [19:42:05] <JusticeFries>	unix sockets, or something more specific to ZMQ?
| [Sunday 27 March 2011] [19:42:16] <jdroid->	Zmq offers multiple types of sockets.
| [Sunday 27 March 2011] [19:42:21] <JusticeFries>	fair enough.
| [Sunday 27 March 2011] [19:42:25] <jdroid->	You could use unix sockets if you want. You could use tcp just as easily
| [Sunday 27 March 2011] [19:43:49] <JusticeFries>	so then - I'm looking at doing something that settles somewhere near rabbit's topic exchanges. basically, using it for some group messaging functions for end users that doesn't hit the DB.
| [Sunday 27 March 2011] [19:43:52] <klestes>	I've heard that rabbitMQ is somewhat synergetic with ZMQ, it can be made into a broker.
| [Sunday 27 March 2011] [19:44:01] <JusticeFries>	i've heard that too.
| [Sunday 27 March 2011] [19:44:10] <klestes>	we musta read the same article ;)_
| [Sunday 27 March 2011] [19:44:15] <JusticeFries>	just not sure where to fit it in, or if it is even useful in this current context.
| [Sunday 27 March 2011] [19:44:44] <jdroid->	what you heard is probably that zeromq has amqp support: http://www.zeromq.org/docs:welcome-from-amqp
| [Sunday 27 March 2011] [19:44:58] <JusticeFries>	either that or ilya's blog.
| [Sunday 27 March 2011] [19:45:02] <JusticeFries>	igvita
| [Sunday 27 March 2011] [19:45:33] <JusticeFries>	heh I like the gross generalizations.
| [Sunday 27 March 2011] [19:45:46] <jdroid->	thanks. i'm the James Dennis that's quoted!
| [Sunday 27 March 2011] [19:45:51] <klestes>	yeah, he does that well :)
| [Sunday 27 March 2011] [19:45:59] <JusticeFries>	ha nice.
| [Sunday 27 March 2011] [19:46:13] <klestes>	its a small 0world after all.
| [Sunday 27 March 2011] [19:46:26] <JusticeFries>	well i may assault you with questions later - though the guide is pretty extensive
| [Sunday 27 March 2011] [19:46:34] <klestes>	0mq used to - didn't they chunk the amqp thang ?
| [Sunday 27 March 2011] [19:46:49] <klestes>	yeah, and it seems to be getting biggeer and betta' all the time...
| [Sunday 27 March 2011] [21:35:55] <jdroid->	These slides are awesome: http://www.slideshare.net/IanBarber/zeromq-is-the-answer
| [Sunday 27 March 2011] [21:41:34] <xet>	hi
| [Sunday 27 March 2011] [21:42:33] <xet>	im doing some tests in a small pub/sub app
| [Sunday 27 March 2011] [21:42:43] <xet>	need some help
| [Monday 28 March 2011] [03:29:36] <guido_g>	pieterh: what the hell did you do to the guide? firefox uses 100% cpu and opera takes ages to load the page.
| [Monday 28 March 2011] [06:59:32] <pieterh>	guido_g: hi
| [Monday 28 March 2011] [09:43:54] <nicolas>	hi
| [Monday 28 March 2011] [09:56:03] <pieterh>	nicolas: hi 
| [Monday 28 March 2011] [10:07:42] <nicolas>	i'm having some trouble with zmq pub/sub in c++
| [Monday 28 March 2011] [10:08:29] <nicolas>	memory starts to be eaten by my application
| [Monday 28 March 2011] [10:08:48] <nicolas>	and it has no memory leaks
| [Monday 28 March 2011] [10:09:03] <nicolas>	its just a simple client/server pair to do performance tests
| [Monday 28 March 2011] [10:15:09] <nicolas>	it seems to be that the client is receiving or processing data faster than the server, and then the server starts to eat memory up
| [Monday 28 March 2011] [10:21:59] <pieterh>	nicolas: yes, this is normal
| [Monday 28 March 2011] [10:22:09] <pieterh>	the client is presumably slower than the server
| [Monday 28 March 2011] [10:23:04] <pieterh>	you should set a high-water mark, on the PUB socket
| [Monday 28 March 2011] [10:24:31] <traviscline>	nicolas: with 0mq it's up to you in some sense how you want to deal with that mismatch, covered well by the guide
| [Monday 28 March 2011] [10:25:53] <CIA-22>	jzmq: 03Gonzalo Diethelm 07master * re3dc6dc 10/ (2 files): Got rid of calls to sleep() in all examples / tests. - http://bit.ly/fnyW8U
| [Monday 28 March 2011] [10:45:54] <nicolas>	I see
| [Monday 28 March 2011] [10:46:33] <nicolas>	pieterh: thanks
| [Monday 28 March 2011] [10:46:44] <pieterh>	nicolas: np
| [Monday 28 March 2011] [10:46:50] <nicolas>	traviscline: any particular seciton of the guide that might be helpful for my problem ?
| [Monday 28 March 2011] [10:47:32] <traviscline>	nicolas: absolutely read the whole thing, but in particular look for HWM references
| [Monday 28 March 2011] [10:47:33] <pieterh>	nicolas: this is explained in Ch2, http://zguide.zeromq.org/page:all#toc43
| [Monday 28 March 2011] [10:47:45] <nicolas>	thanks!
| [Monday 28 March 2011] [11:17:33] <private_meta>	ahahaha... binary star... good name
| [Monday 28 March 2011] [11:24:38] <private_meta>	pieterh: there?
| [Monday 28 March 2011] [12:21:09] <rbancroft>	l
| [Monday 28 March 2011] [12:21:25] <rbancroft>	im sorry, mischan
| [Monday 28 March 2011] [12:22:58] <mikko>	hi
| [Monday 28 March 2011] [12:53:11] <private_meta>	pieterh: a short question about zmsg. You are using unsigned characters as storage option for message parts, but whatever input or output you do or get from zmsg is signed char. You told me that void * instead of char * should be used, but still I find it somewhat inconsistent that you store in unsigned char and input/output in the zmsg as signed char.
| [Monday 28 March 2011] [12:53:48] <private_meta>	pieterh: maybe some consistency update would be good, like making it signed char as the entire existing api of zmsg is signed char only
| [Monday 28 March 2011] [13:40:38] <pieterh>	private_meta: re
| [Monday 28 March 2011] [13:41:25] <pieterh>	zmsg in the Guide is string-based but in libzapi I moved to a proper binary API
| [Monday 28 March 2011] [15:03:35] <pieterh>	mikko: hi!
| [Monday 28 March 2011] [15:08:07] <jobytaffey>	Hi, I'm having a problem with libev and REP sockets. I get the fd from ZMQ_FD, I watch for EV_READ and then zmq_recv(). I then watch for EV_WRITE and zmq_send(). But, after the first pair of messages, I never see EV_READ again. Oddly, if I ctrl-c my REQ test app (infinite loop doing zmq_send + zmq_recv) my REP app receives a packet. Any ideas?
| [Monday 28 March 2011] [15:09:58] <pieterh>	jobytaffey: are you checking for errors on all 0MQ calls?
| [Monday 28 March 2011] [15:10:09] <jobytaffey>	I believe so, yes.
| [Monday 28 March 2011] [15:11:14] <pieterh>	Sounds like you're stuck in a blocking call which exits when you press Ctrl-C, and then your test app does a send on the REQ socket
| [Monday 28 March 2011] [15:11:49] <pieterh>	without a minimal example to look at, it's hard to help...
| [Monday 28 March 2011] [15:12:07] <jobytaffey>	I thought you'd say that, I'll get to work on one :-)
| [Monday 28 March 2011] [15:14:26] <mikko>	pieterh: hi
| [Monday 28 March 2011] [15:14:35] <pieterh>	mikko: excellent latency this evening :-)
| [Monday 28 March 2011] [15:40:35] <Guthur>	Describing ZeroMQ in five minutes, is it possible? hehe
| [Monday 28 March 2011] [15:41:05] <Guthur>	there is space for a 5 min lightening talk at the ELS, and I'm tempted to give it a go
| [Monday 28 March 2011] [15:41:17] <mikko>	whats ELS?
| [Monday 28 March 2011] [15:41:53] <Guthur>	European Lisp Symposium
| [Monday 28 March 2011] [15:42:02] <Guthur>	it's on this week in Hamburg
| [Monday 28 March 2011] [15:43:45] <jond>	Guthur : which lisp are you using out of interest?
| [Monday 28 March 2011] [15:44:01] <pieterh>	Guthur: 5 minutes is kind of tight :-)
| [Monday 28 March 2011] [15:44:21] <pieterh>	you can say exactly one thing, and repeat it three times
| [Monday 28 March 2011] [15:44:23] <jdroid->	Guthur: I think you can get the gist of it quickly.
| [Monday 28 March 2011] [15:44:48] <Guthur>	jond, I don't get to use it nearly as much as I like, but it would be usually Common Lisp, SBCL would be my implementation of choice
| [Monday 28 March 2011] [15:44:57] <jdroid->	I wrote this on HN yesterday and realized you actually can describe zmq fast. You just need to start with saying it's a sockets system.
| [Monday 28 March 2011] [15:44:59] <jdroid->	http://news.ycombinator.com/item?id=2377224
| [Monday 28 March 2011] [15:45:26] <jdroid->	Put messaging in to the idea once they understand how the socket's side of it works. I think Zed takes this approach too, but I'm inferring that from having seen him speak
| [Monday 28 March 2011] [15:45:32] <pieterh>	"That's correct that ZeroMQ isn't a server"...
| [Monday 28 March 2011] [15:45:32] <jond>	Guthur: didnt zed shaw have a "sockets done right" article somewhere which might have been appropriated into the guide somewhere?
| [Monday 28 March 2011] [15:45:48] <pieterh>	jond: I had used part of Zed's text, originally, but took it out again
| [Monday 28 March 2011] [15:45:52] <jdroid->	pieterh: do you take issue with that line?
| [Monday 28 March 2011] [15:45:53] <Guthur>	I'll have a look
| [Monday 28 March 2011] [15:46:06] <pieterh>	jdroid-: nope, it's accurate
| [Monday 28 March 2011] [15:46:10] <jdroid->	sweet
| [Monday 28 March 2011] [15:46:26] <jdroid->	here's the whole thread: http://news.ycombinator.com/item?id=2376822
| [Monday 28 March 2011] [15:46:27] <pieterh>	I'm just lolling because I finished writing Binary Star, a pattern for a high-availability server pair
| [Monday 28 March 2011] [15:46:54] <pieterh>	0MQ is a high-level language for constructing asynchronous messaging architectures
| [Monday 28 March 2011] [15:47:08] <pieterh>	it has implementations in 20+ programming languages
| [Monday 28 March 2011] [15:47:12] <Guthur>	I suppose it will be a good challenge to try a lightening talk, if nothing else
| [Monday 28 March 2011] [15:47:30] <pieterh>	it can construct brokers, clients, services, data distribution, workload distribution
| [Monday 28 March 2011] [15:47:35] <jdroid->	Guthur: I put together these examples with that in mind: https://github.com/j2labs/zmq_examples
| [Monday 28 March 2011] [15:48:13] <jond>	pieterh : but actually via zfl zapi it becomes less about 0mq
| [Monday 28 March 2011] [15:48:27] <pieterh>	jond: it's the same high level language
| [Monday 28 March 2011] [15:48:44] <jdroid->	You can simulate OneMQ, using ZeroMQ. And with a OneMQ, you can simulate InfinityMQ.
| [Monday 28 March 2011] [15:48:51] <jdroid->	Maybe that' not quite it... there's a ZOI analogy in there somewhere
| [Monday 28 March 2011] [15:49:04] <pieterh>	well, all messaging systems are turing equivalent I guess
| [Monday 28 March 2011] [15:49:10] <pieterh>	but they're not the same
| [Monday 28 March 2011] [15:51:02] <pieterh>	IMO it's inaccurate to describe XREP/XREQ as non-blocking versions of REP/REQ
| [Monday 28 March 2011] [15:51:41] <jond>	has anyone got a link to the Ian Barber presentation?
| [Monday 28 March 2011] [15:52:21] <mpales>	pieterh: the guide describes them in the same way
| [Monday 28 March 2011] [15:52:37] <jobytaffey>	I'd really appreciate it if someone could take a look at my libev/REQ:REP problem. It's probably something silly, but I can't see it. There's a minimal example (files and tarball) here http://www.hodgepig.org/testcase/
| [Monday 28 March 2011] [15:52:48] <pieterh>	mpales: then I need to fix that, I'm going to review that whole explanation
| [Monday 28 March 2011] [15:52:51] <Guthur>	jond, http://vimeo.com/20605470
| [Monday 28 March 2011] [15:54:38] <pieterh>	jobytaffey: maybe the client should connect to localhost, not *?
| [Monday 28 March 2011] [15:54:39] <mpales>	pieterh: in ch2: A Request-Reply Broker, there is this sentence: Luckily there are non-blocking versions of these two sockets, called XREQ and XREP.
| [Monday 28 March 2011] [15:54:50] <pieterh>	mpales: ugh... 
| [Monday 28 March 2011] [15:54:59] <jobytaffey>	pieterh: Would that make a difference? It does connect ok.
| [Monday 28 March 2011] [15:55:14] <jond>	Guthur: cheers. also sbcl is pretty cool, though havent used lisp for quite a while (though did manage to have a job where i did it for three years!)
| [Monday 28 March 2011] [15:55:27] <pieterh>	jobytaffey: you connect to a name or IP address, not an interface
| [Monday 28 March 2011] [15:56:13] <pieterh>	mpales: thanks for pointing this out, I'm going to try to make the explanations more accurate
| [Monday 28 March 2011] [15:56:17] <Guthur>	jond, not many get the opportunity do such employment
| [Monday 28 March 2011] [15:56:21] <jobytaffey>	Ah, I see what you mean. * means bind to any i/f, but you need to be explicit for the connect.
| [Monday 28 March 2011] [15:56:46] <pieterh>	jobytaffey: indeed, fix this and see if your code works better, the rest looks fine though I've not run it
| [Monday 28 March 2011] [15:56:55] <jobytaffey>	No, that didn't help.
| [Monday 28 March 2011] [15:57:00] <Guthur>	jond, are you still in software development?
| [Monday 28 March 2011] [15:57:26] <mpales>	pieterh: there is another thing I'd like to ask you
| [Monday 28 March 2011] [15:57:29] <jond>	Guthur: yes. http://xkcd.com/297/
| [Monday 28 March 2011] [15:57:34] <pieterh>	mpales: sure...
| [Monday 28 March 2011] [15:58:16] <pieterh>	jond: "elegant weapons..." lol
| [Monday 28 March 2011] [15:59:30] <mpales>	pieterh: the guide explains how to send a big file using multipart messages
| [Monday 28 March 2011] [15:59:37] <Guthur>	jond, i love how when 'new' languages get new features which users trumpet the features are often ones that Lisps have had for over 20 years
| [Monday 28 March 2011] [15:59:56] <pieterh>	mpales: well, multipart messages are not really meant for files
| [Monday 28 March 2011] [16:00:07] <mpales>	pieterh: but also explains that until last part is sent/recvd, everything is kept in memory
| [Monday 28 March 2011] [16:00:14] <pieterh>	rather, it's a simple way to marshal data
| [Monday 28 March 2011] [16:00:19] <pieterh>	indeed, all in memory
| [Monday 28 March 2011] [16:00:36] <pieterh>	if you want to send files you need to send chunks as individual messages
| [Monday 28 March 2011] [16:01:37] <pieterh>	if you want to do restartable file transfer, then
| [Monday 28 March 2011] [16:01:43] <pieterh>	handshake with the recipient, ask how much of the file they have, then send the rest
| [Monday 28 March 2011] [16:02:05] <pieterh>	if you send large chunks, e.g. 1MB, you can destroy any network
| [Monday 28 March 2011] [16:02:25] <jond>	Guthur. it's all true but http://xkcd.com/224/ and there's rarely any paying work in it
| [Monday 28 March 2011] [16:02:46] <mpales>	pieterh: i see, my mistake, multipart messages are not mentioned in this context
| [Monday 28 March 2011] [16:03:25] <pieterh>	mpales: I'll make a file transfer example later on
| [Monday 28 March 2011] [16:03:36] <jdroid->	pieterh: agreed, the guide gave me that text. In fact, the italicized text is literally copied from the guide so grep for that
| [Monday 28 March 2011] [16:04:16] <pieterh>	jdroid-: lol, that's funny, I was about to rant about how inaccurate that text was :-)
| [Monday 28 March 2011] [16:04:49] <jdroid->	in yo face!
| [Monday 28 March 2011] [16:04:51] <jdroid->	:D
| [Monday 28 March 2011] [16:04:56] <mpales>	pieterh: great!
| [Monday 28 March 2011] [16:05:02] <pieterh>	:-)
| [Monday 28 March 2011] [16:05:38] <mpales>	pieterh: i really like the style of the guide, thanks for the amazing work
| [Monday 28 March 2011] [16:05:57] <pieterh>	mpales: np, it's fun to write, though it's getting quite ... large...
| [Monday 28 March 2011] [16:07:04] <Guthur>	jond: I recently seen a job in London looking for a functional programmer with knowledge of clojure, very well paid
| [Monday 28 March 2011] [16:07:32] <Guthur>	though that's relative to your current pay grade of course
| [Monday 28 March 2011] [16:07:55] <Guthur>	mine is most certainly on the lower end, hehe
| [Monday 28 March 2011] [16:08:25] <mpales>	pieterh: yes, it is
| [Monday 28 March 2011] [16:10:15] <mpales>	pieterh: btw. I used to read the guide with a larger font size, but since last week when I increase the font size, the browser goes mad... I use google chrome
| [Monday 28 March 2011] [16:11:02] <pieterh>	mpales: yeah, the HTML got significantly fatter, since I added color markup for the code examples
| [Monday 28 March 2011] [16:11:51] <pieterh>	oh, I just tried a larger font in Chrome, it gets very unhappy...
| [Monday 28 March 2011] [16:13:29] <mpales>	pieterh: you can get some cash from google if you report it :-)
| [Monday 28 March 2011] [16:14:21] <i2pi>	Hi. I have a PUSH/PULL queue working with multiple PULL'ers. I'm using NOBLOCK on both ends. I'd like the PUSH'er to not block if no PULLers are available, but for messages to be queued up for when the PULLers come back online. Is this possible? If so, how? 
| [Monday 28 March 2011] [16:14:54] <pieterh>	mpales: they'll just tell me to stop writing insane HTML... :-)
| [Monday 28 March 2011] [16:15:20] <pieterh>	i2pi: you can use zmq_poll
| [Monday 28 March 2011] [16:16:07] <i2pi>	pieterh: reading the docs now. Thanks.
| [Monday 28 March 2011] [16:16:30] <Guthur>	pieterh,  your guide has actually only 3 validation errors
| [Monday 28 March 2011] [16:16:43] <Guthur>	which is a lot better than the vast majority of the internet
| [Monday 28 March 2011] [16:16:55] <pieterh>	Guthur: ah, that's because in fact I don't write any of the HTML at all
| [Monday 28 March 2011] [16:17:07] <pieterh>	mpales: firefox has no trouble resizing the font, interestingly
| [Monday 28 March 2011] [16:17:09] <Guthur>	probably the best way, hehe
| [Monday 28 March 2011] [16:17:39] <i2pi>	pieterh: Hmm. I'm not sure if i understand this correctly. Can you give me a hint?
| [Monday 28 March 2011] [16:18:13] <pieterh>	i2pi: you poll on the PUSH socket using ZMQ_POLLOUT
| [Monday 28 March 2011] [16:18:24] <mpales>	pieterh: yes, looks definitely like a chrome bug
| [Monday 28 March 2011] [16:18:28] <pieterh>	I've not tried that, to be honest, but it's the proper way IMO
| [Monday 28 March 2011] [16:18:39] <pieterh>	mpales: yes, I'm looking for a place to file it
| [Monday 28 March 2011] [16:19:08] <mpales>	pieterh: settings / tools / report...
| [Monday 28 March 2011] [16:20:11] <i2pi>	pieterh: Is the correct pattern to try doing a zmq_send() and if that fails with EAGAIN, then add that item to a list to poll. And then keep polling until the recvr returns?
| [Monday 28 March 2011] [16:20:53] <pieterh>	i2pi: look at the zmq_poll examples in the Guide, do the same except writing rather than reading
| [Monday 28 March 2011] [16:21:03] <pieterh>	you loop: poll / write / poll / write...
| [Monday 28 March 2011] [16:21:13] <pieterh>	doing a write only when poll tells you it's OK
| [Monday 28 March 2011] [16:21:19] <pieterh>	s/write/send/
| [Monday 28 March 2011] [16:21:35] <i2pi>	so, its up to my app to maintain the queue of unsent items?
| [Monday 28 March 2011] [16:21:59] <i2pi>	(I'm coming from AMQP, where I expect the queue to do queuing for me)
| [Monday 28 March 2011] [16:23:16] <jobytaffey>	The plot thickens on my problem - tcpdump shows that despite my evserver.c calling zmq_send() and it returning 0, the packet is never transmitted (I assume, because it thinks the socket is blocked).
| [Monday 28 March 2011] [16:24:03] <pieterh>	i2pi: you need to read the Guide
| [Monday 28 March 2011] [16:24:22] <i2pi>	ok :)
| [Monday 28 March 2011] [16:24:37] <pieterh>	jobytaffey: have you already written some examples without using evserver?
| [Monday 28 March 2011] [16:25:04] <jobytaffey>	Yes, they're in the URL I posted. There's a REQ/REP client and server without libev.
| [Monday 28 March 2011] [16:25:20] <i2pi>	pieterh: I started on the guide, and please don't take offense to this, but it is a little daunting that it starts very philosophically. I'd rather get straight into the meat. 
| [Monday 28 March 2011] [16:25:43] <pieterh>	i2pi: there's only about 1 page of philosophy, then it gets straight into code...
| [Monday 28 March 2011] [18:22:04] <private_meta>	pieterh: yes, you hinted on that before, but right now, the zguide version is still inconsistent
| [Monday 28 March 2011] [18:44:33] <i2pi>	pieterh: I'm a few hours into the guide and I'm still not seeing it in the guide. 
| [Monday 28 March 2011] [22:32:59] <Dawgmatix>	any pointers on how to write a zeromq device in python?
| [Monday 28 March 2011] [22:37:44] <traviscline>	Dawgmatix: http://zeromq.github.com/pyzmq/devices.html read that?
| [Monday 28 March 2011] [22:38:10] <Dawgmatix>	ah no, wasnt aware of that documentation
| [Monday 28 March 2011] [22:38:19] <Dawgmatix>	have just read the guide so far
| [Monday 28 March 2011] [22:38:26] <Dawgmatix>	and written some small programs 
| [Monday 28 March 2011] [22:39:29] <Dawgmatix>	thanks for the pointer :)
| [Wednesday 30 March 2011] [07:06:00] <drbobbeaty>	pieterh: any news on the release of 2.1.4 with the fixes we worked on? I'm interested in getting it and using it.
| [Wednesday 30 March 2011] [07:09:31] <mikko__>	sustrik: weekend is fine by me
| [Wednesday 30 March 2011] [07:10:25] <sustrik>	ok, let's get in touch on weekend
| [Wednesday 30 March 2011] [07:13:13] <murkel>	Hi...  I'm having an issue with poll() on zmq sockets (2.1.3 cpp) which are not yet connected on the TCP layer: the timeouts are not honoured.
| [Wednesday 30 March 2011] [07:13:29] <murkel>	If I create a REQ socket, connect to an endpoint without a server listening, transmit a message and then poll( ZMQ_POLLIN ) before recv(), the poll never times out.
| [Wednesday 30 March 2011] [07:14:19] <murkel>	just as a test, I noticed that the poll never times out if I try to send two messages over the same un-connected socket.
| [Wednesday 30 March 2011] [07:14:38] <murkel>	Is this the correct approach or should I be doing this differently?
| [Wednesday 30 March 2011] [07:15:48] <sustrik>	can you post the test program to the mailing list?
| [Wednesday 30 March 2011] [07:16:25] <murkel>	okay ...
| [Wednesday 30 March 2011] [07:16:30] <sustrik>	thx
| [Wednesday 30 March 2011] [07:34:59] <drbobbeaty>	mikko__, sustrik: thanks guys. That would be great.
| [Wednesday 30 March 2011] [07:36:00] <sustrik>	drbobbeaty: please, do make sure that the changes you are interested in have made it to the mikko's patch as posted on the mailing list
| [Wednesday 30 March 2011] [07:36:28] <drbobbeaty>	Yup, they sure did. I tested it.
| [Wednesday 30 March 2011] [07:36:45] <sustrik>	:)
| [Thursday 31 March 2011] [12:22:25] <djc>	would it be acceptable to have a mode of building zeromq linking with an externally-built openpgm?
| [Thursday 31 March 2011] [12:22:33] <djc>	and if so, how can we make that happen?
| [Thursday 31 March 2011] [12:25:41] <rforte>	does anyone know if zmq has been successfully built/used on iOS?
| [Thursday 31 March 2011] [12:44:07] <CIA-22>	zeromq2: 03Martin Sustrik 07pre30 * r17fdb5e 10/ src/zmq.cpp : 
| [Thursday 31 March 2011] [12:44:07] <CIA-22>	zeromq2: zmq_recv() returns size of the message even if it's truncated
| [Thursday 31 March 2011] [12:44:07] <CIA-22>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/hqUOiu
| [Thursday 31 March 2011] [12:44:09] <CIA-22>	zeromq2: 03Mikko Koppanen 07pre30 * rfbf1f51 10/ (7 files in 3 dirs): 
| [Thursday 31 March 2011] [12:44:10] <CIA-22>	zeromq2: Upstream the openpgm build fixes. Add DSO symbol visibility to OpenPGM builds
| [Thursday 31 March 2011] [12:44:10] <CIA-22>	zeromq2: Signed-off-by: Mikko Koppanen <mkoppanen@php.net> - http://bit.ly/eoZoFT
| [Thursday 31 March 2011] [12:44:11] <CIA-22>	zeromq2: 03Martin Sustrik 07pre30 * rd36d9a3 10/ src/zmq_engine.cpp : 
| [Thursday 31 March 2011] [12:44:12] <CIA-22>	zeromq2: Comments improvement
| [Thursday 31 March 2011] [12:44:12] <CIA-22>	zeromq2: related to fairness while reading/writing large messages
| [Thursday 31 March 2011] [12:44:12] <CIA-22>	zeromq2: Signed-off-by: Martin Sustrik <sustrik@250bpm.com> - http://bit.ly/hmvGwd
| [Thursday 31 March 2011] [12:45:14] <sustrik>	djc: i think that may be possible, however, ask on the mailing list
| [Thursday 31 March 2011] [12:46:13] <sustrik>	rforte: there were some people discussing iOS issues some time ago
| [Thursday 31 March 2011] [12:46:18] <sustrik>	so i assum it's possible
| [Thursday 31 March 2011] [12:47:57] <djc>	sustrik: I opened issue 15 about it
| [Thursday 31 March 2011] [12:48:22] <sustrik>	ok
| [Thursday 31 March 2011] [12:53:49] <cremes>	rforte: it builds and runs fine on osx