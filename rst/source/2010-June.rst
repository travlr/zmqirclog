
| [Tuesday 01 June 2010] [00:51:40] <jugg>    s.bind("tcp://localhost:15555"); fails with "no such device"  However, s.bind("tcp://127.0.0.1:15555"); works fine, as does s.bind("tcp://lo:15555");
| [Tuesday 01 June 2010] [00:51:40] <jugg>    whereas s.connect("tcp://localhost:15555"); and s.connect("tcp://127.0.0.1:15555"); both work fine, but s.connect("tcp://lo:15555"); fails with "Invalid argument".
| [Tuesday 01 June 2010] [00:53:34] <jugg>    any combination of the successful bind/connect allow messages to flow just fine. (eg. bind - lo, connect - localhost)
| [Tuesday 01 June 2010] [00:54:41] <jugg>    any idea why binding 'localhost' fails, and connecting 'lo' fails?
| [Tuesday 01 June 2010] [03:38:33] <sustrik> jugg: you can bind only to local NIC
| [Tuesday 01 June 2010] [03:38:47] <sustrik> "localhost" is a hostname not NIC name
| [Tuesday 01 June 2010] [03:38:50] <sustrik> use "lo"
| [Tuesday 01 June 2010] [03:38:56] <sustrik> "eth0" and alike
| [Tuesday 01 June 2010] [03:39:22] <sustrik> (on linux)
| [Tuesday 01 June 2010] [03:53:00] <jugg>    sustrik: it must also accept local ip addresses.  And since the zmq layer already can resolve hostnames, it would be a convience to have it do so here as well.
| [Tuesday 01 June 2010] [03:55:01] <sustrik> the problem is that there's no hint to distinguish between nic names and hostnames
| [Tuesday 01 June 2010] [03:57:19] <jugg>    a simple if fail then try scheme could be used
| [Tuesday 01 June 2010] [03:58:12] <sustrik> yup, we've thought of that
| [Tuesday 01 June 2010] [03:58:39] <sustrik> presumably, resolve nic name first, hostname if it fails
| [Tuesday 01 June 2010] [03:59:06] <sustrik> obviously, it would mean that nic name can then overshadow a remote host
| [Tuesday 01 June 2010] [03:59:26] <jugg>    yes, although I might think to have a hardcoded check for 'localhost' first.
| [Tuesday 01 June 2010] [04:00:10] <sustrik> it's up to OS to resolve names, 0mq should not mess with that imho
| [Tuesday 01 June 2010] [04:02:07] <jugg>    certainly.  I was saying that if the device is 'localhost' then just skip nic name lookup (being that localhost is quite the common case).
| [Tuesday 01 June 2010] [04:03:18] <sustrik> my point was that "localhost" is just a name a should thus be resolved by OS
| [Tuesday 01 June 2010] [04:08:26] <jugg>    anyway, I assume that trying to connect to a nic name is nonsensical, which is why s.connect("tcp://lo:15555") fails?  It certainly is an odd error message however "invalid arguement", now that I've played with it "invalid argument" is the error message for any bogus hostname.  Not very helpful.
| [Tuesday 01 June 2010] [04:18:52] <jugg>    all of this mucking around is because I got off track while trying to debug odd observed behavior with zmq resulting from the socket type and transport combination.  eg pub/sub works fine with tcp:, but often fails with ipc:
| [Tuesday 01 June 2010] [04:19:51] <jugg>    I haven't isolated it yet, so I can't give a useful bug report (if any).
| [Tuesday 01 June 2010] [04:27:15] <sustrik> interesting
| [Tuesday 01 June 2010] [04:27:26] <sustrik> the code is same for tcp and ipc
| [Tuesday 01 June 2010] [04:27:39] <sustrik> can you at least say what kind of error are you seeing?
| [Tuesday 01 June 2010] [04:38:40] <jugg>    well, it could still yet be very much user error, but it appeared that subscriptions were not taking affect, and in several instances, I would get an error about the ipc: address having some problem (the exact error messages are out of my scrollback).  Yet, those error message seemed to go away if I changed the socket type.  And when using tcp: I've never seen either of those issues.
| [Tuesday 01 June 2010] [04:49:00] <sustrik> ok, i see
| [Tuesday 01 June 2010] [04:49:10] <sustrik> if it ever happens again please do report the problem
| [Tuesday 01 June 2010] [05:39:19] <jugg>    hmm, I thought publications got into the bit bucket if the endpont doesn't exist.  This is the case if the publisher is the one that binds the socket, but if it is the subscriber that binds the socket, then the publisher queues up all of its messages.  Is this expected?  And if so, why the change in behavior depending on which socket type binds/connects?
| [Tuesday 01 June 2010] [05:53:32] <sustrik> PUB/SUB messaging pattern is like a radio tranmission; if you are not listining to the broadcast you won't be able to catch up later on
| [Tuesday 01 June 2010] [07:39:38] <jugg>    yes, so why is the publisher queuing up the messages?
| [Tuesday 01 June 2010] [07:46:04] <sustrik> jugg: the queueing is built in so that messages are not dropped all the time because of random traffic peaks
| [Tuesday 01 June 2010] [07:46:20] <sustrik> if you set HWM socket option on your publisher
| [Tuesday 01 June 2010] [07:46:26] <sustrik> you'll limit the size of the queue
| [Tuesday 01 June 2010] [07:46:50] <sustrik> once the max number of messages in the queue is reached, publisher will start dropping them
| [Tuesday 01 June 2010] [07:47:25] <jugg>    yes, so why does this queuing only occur if the publisher connects?  It doesn't occur if the publisher binds.
| [Tuesday 01 June 2010] [07:48:16] <sustrik> when you bind, there's no queue created at that moment
| [Tuesday 01 June 2010] [07:48:30] <sustrik> you don't know how many peers will connect in the future
| [Tuesday 01 June 2010] [07:48:44] <sustrik> and thus you cannot create appropriate number of queues
| [Tuesday 01 June 2010] [07:49:07] <sustrik> when you connect you need only one queue, so it's created immediately
| [Tuesday 01 June 2010] [07:49:44] <sustrik> the code can be changed so that 'connect' queue is created only when connecting to the peer succeeds
| [Tuesday 01 June 2010] [07:50:03] <sustrik> but i am not sure what advantage we would get from that
| [Tuesday 01 June 2010] [07:50:10] <jugg>    consistency?
| [Tuesday 01 June 2010] [07:50:18] <sustrik> sure
| [Tuesday 01 June 2010] [07:50:24] <jugg>    otherwise this needs documented.
| [Tuesday 01 June 2010] [07:50:42] <sustrik> well, the documentation is "messages can be dropped"
| [Tuesday 01 June 2010] [07:50:59] <sustrik> when exactly they are dropped is implemetation detail
| [Tuesday 01 June 2010] [07:51:09] <jugg>    eh
| [Tuesday 01 June 2010] [09:41:10] <jugg>    in a pub/sub configuration, it would appear that the only way to have multiple subscribers is if the pub socket is the one that binds the endpoint.  In the case where a subscriber binds the endpoint, and the publisher connects, then other subscribers that connect do not receive publications.  I'd expect that either all connecting subscribers receive the publications, or that it is not possible for other subscribers to successfully connect.
| [Tuesday 01 June 2010] [09:43:45] <sustrik> jugg: sorry, i've missed the point
| [Tuesday 01 June 2010] [09:43:55] <sustrik> can you say it in more simple way
| [Tuesday 01 June 2010] [09:43:57] <sustrik> ?
| [Tuesday 01 June 2010] [09:44:24] <jugg>    a subscriber binds an endpoint
| [Tuesday 01 June 2010] [09:44:29] <jugg>    a publisher connects to the endpoint
| [Tuesday 01 June 2010] [09:44:32] <jugg>    everything is happy
| [Tuesday 01 June 2010] [09:44:38] <jugg>    more subscribers connect to the endpoint
| [Tuesday 01 June 2010] [09:44:48] <jugg>    these subscribers do not receive publications
| [Tuesday 01 June 2010] [09:45:10] <sustrik> subscribers connect to the subscriber endpoint?
| [Tuesday 01 June 2010] [09:45:17] <jugg>    yes
| [Tuesday 01 June 2010] [09:45:34] <sustrik> SUB socket is not compatible with another SUB socket
| [Tuesday 01 June 2010] [09:45:41] <sustrik> see zmq_socket(3)
| [Tuesday 01 June 2010] [09:45:54] <sustrik> SUB must speak to PUB and vice versa
| [Tuesday 01 June 2010] [09:46:19] <sustrik> what are you trying to do?
| [Tuesday 01 June 2010] [09:46:57] <jugg>    which is why I'd expect the subsequent connects to fail.
| [Tuesday 01 June 2010] [09:47:12] <sustrik> yes, they should
| [Tuesday 01 June 2010] [09:47:19] <sustrik> but the connect is async
| [Tuesday 01 June 2010] [09:47:28] <sustrik> so the error should be delivered asynchronously
| [Tuesday 01 June 2010] [09:47:36] <sustrik> we need an error queue for that
| [Tuesday 01 June 2010] [09:47:44] <sustrik> TODO
| [Tuesday 01 June 2010] [09:47:54] <jugg>    I see
| [Tuesday 01 June 2010] [09:55:19] <jugg>    So if the subscriber binds the endpoint, it is essentially stating that this is a private subscription, multiple publishers can publish to this private subscription.  Multiple subscribe message filters may be used by the subscriber if desired.
| [Tuesday 01 June 2010] [09:56:03] <jugg>    If a publisher binds an endpoint, then many subscribers may connect to this endpoint.  But a subscriber can only receive messages from a single publisher in this case.
| [Tuesday 01 June 2010] [09:56:22] <sustrik> i would say it's symmetric
| [Tuesday 01 June 2010] [09:56:35] <sustrik> consider you can connect the same socket multiple times
| [Tuesday 01 June 2010] [09:56:43] <sustrik> so, for example:
| [Tuesday 01 June 2010] [09:56:59] <sustrik> pub.bind (A)
| [Tuesday 01 June 2010] [09:57:08] <sustrik> sub1.connect (A)
| [Tuesday 01 June 2010] [09:57:15] <sustrik> sub2.connect (A)
| [Tuesday 01 June 2010] [09:57:20] <sustrik> is equivalent to:
| [Tuesday 01 June 2010] [09:57:26] <sustrik> sub1.bind (A)
| [Tuesday 01 June 2010] [09:57:30] <sustrik> sub2.bind (B)
| [Tuesday 01 June 2010] [09:57:33] <sustrik> pub.connect (A)
| [Tuesday 01 June 2010] [09:57:38] <sustrik> pub.connect (B)
| [Tuesday 01 June 2010] [09:58:10] <sustrik> resulting connection diagram looks the same in both cases
| [Tuesday 01 June 2010] [10:00:40] <jugg>    clear enough, thanks.
| [Tuesday 01 June 2010] [10:02:49] <sustrik> you are welcome
| [Tuesday 01 June 2010] [11:56:25] <jugg>    quoting http://www.zeromq.org/blog:road "we designed a minimalist wire protocol which can be described in a couple of paragraphs"  Are those paragraphs available?
| [Tuesday 01 June 2010] [12:01:20] Nick  ivan`` is now known as ivan.
| [Tuesday 01 June 2010] [14:58:27] <cremes>  is it expected behavior that zmq_term() has an assertion failure unless all sockets in the context are closed first?
| [Tuesday 01 June 2010] [14:59:24] <cremes>  this is against 2.0.6 release
| [Tuesday 01 June 2010] [15:44:00] <mato>    cremes: no, that would be a bug
| [Tuesday 01 June 2010] [15:44:27] <mato>    cremes: however, that code has changed on master, so i suggest you re-test there
| [Tuesday 01 June 2010] [15:44:36] <cremes>  all right... i'll test on master in a bit
| [Tuesday 01 June 2010] [15:50:00] <CIA-17>  zeromq2: 03Martin Lucina 07master * r74a03df 10/ (AUTHORS foreign/xmlParser/xmlParser.cpp): Merge branch 'master' of github.com:sustrik/zeromq2 - http://bit.ly/9cipXX
| [Tuesday 01 June 2010] [16:20:08] <mato>    cremes: since you asked about zmq_term()... I'm updating the docs for 2.0.7.
| [Tuesday 01 June 2010] [16:20:21] <mato>    cremes: could you comment if the following is clear: ?
| [Tuesday 01 June 2010] [16:20:28] <mato>           The zmq_term() function terminates the 0MQ context context.
| [Tuesday 01 June 2010] [16:20:28] <mato>           If there are no longer any sockets open within context at the time zmq_term() is
| [Tuesday 01 June 2010] [16:20:31] <mato>           called then context shall be shut down and all associated resources shall be
| [Tuesday 01 June 2010] [16:20:33] <cremes>  ok; i'm compiling master now so i can see if i am still getting on behavior
| [Tuesday 01 June 2010] [16:20:34] <mato>           released immediately.
| [Tuesday 01 June 2010] [16:20:37] <mato>           Otherwise, the following applies:
| [Tuesday 01 June 2010] [16:20:39] <mato>              The zmq_term() function shall return immediately.
| [Tuesday 01 June 2010] [16:20:42] <mato>              Any blocking operations currently in progress on sockets open within context
| [Tuesday 01 June 2010] [16:20:45] <mato>               shall return immediately with an error code of ETERM.
| [Tuesday 01 June 2010] [16:20:47] <mato>              With the exception of zmq_close(), any further operations on sockets open
| [Tuesday 01 June 2010] [16:20:50] <mato>               within context shall fail with an error code of ETERM.
| [Tuesday 01 June 2010] [16:20:53] <mato>              The actual shutdown of context, and release of any associated resources,
| [Tuesday 01 June 2010] [16:20:56] <mato>               shall be delayed until the last socket within it is closed with zmq_close().
| [Tuesday 01 June 2010] [16:21:11] <mato>    cremes: thx, but read the above, since that's the behaviour on master
| [Tuesday 01 June 2010] [16:21:30] <mato>    cremes: is my description clear enough?
| [Tuesday 01 June 2010] [16:21:38] <cremes>  it makes perfect sense; it is very clear
| [Tuesday 01 June 2010] [16:21:42] <mato>    great, thanks
| [Tuesday 01 June 2010] [16:23:15] <CIA-17>  zeromq2: 03Martin Lucina 07master * r8ba1d3c 10/ (6 files): Documentation: zmq_term() and ETERM for 2.0.7 - http://bit.ly/cd4hIx
| [Tuesday 01 June 2010] [16:23:16] <CIA-17>  zeromq2: 03Martin Lucina 07master * r9d00d30 10/ doc/zmq_init.txt : Documentation: zmq_init() API changes for 2.0.7 - http://bit.ly/bhbjsl
| [Tuesday 01 June 2010] [16:28:09] <versificateur>   hello everyone!
| [Tuesday 01 June 2010] [16:28:54] <versificateur>   i'm back to ask for some help aagin.. :)
| [Tuesday 01 June 2010] [16:30:21] <versificateur>   i've some difficulties to run (compile) the c++ server code i wrote based on zmq blog examples
| [Tuesday 01 June 2010] [16:31:24] <versificateur>   I got the following error: Package libzmq was not found in the pkg-config search path.
| [Tuesday 01 June 2010] [16:32:28] <cremes>  versificateur: please pastie the whole error including the command you used
| [Tuesday 01 June 2010] [16:34:55] <versificateur>   g++ `pkg-config --libs --cflags libzmq` -o server server.cpp Package libzmq was not found in the pkg-config search path. Perhaps you should add the directory containing `libzmq.pc' to the PKG_CONFIG_PATH environment variable 
| [Tuesday 01 June 2010] [16:35:00] <versificateur>   oops
| [Tuesday 01 June 2010] [16:35:18] <versificateur>    g++ `pkg-config --libs --cflags libzmq` -o server server.cpp
| [Tuesday 01 June 2010] [16:35:29] <versificateur>   Package libzmq was not found in the pkg-config search path.
| [Tuesday 01 June 2010] [16:35:38] <versificateur>   Perhaps you should add the directory containing `libzmq.pc'
| [Tuesday 01 June 2010] [16:35:48] <versificateur>   to the PKG_CONFIG_PATH environment variable
| [Tuesday 01 June 2010] [16:37:06] <versificateur>   but I try locate and found the required at pkg-config
| [Tuesday 01 June 2010] [16:37:12] <versificateur>   locate libzmq.pc
| [Tuesday 01 June 2010] [16:41:19] <sbeaulois>   hi 
| [Tuesday 01 June 2010] [16:42:06] <sbeaulois>   i tried to compile zmq on RHEL but  i have some errors when i tried ./configure  configure: error: cannot link with -luuid, install uuid-dev
| [Tuesday 01 June 2010] [16:42:25] <sbeaulois>   i cann't fin uuid-dev for RHEL
| [Tuesday 01 June 2010] [16:43:00] <mato>    sbeaulois: I think it's called uuid-devel on RH
| [Tuesday 01 June 2010] [16:43:23] <sbeaulois>   i have install uuid-devel but i have the same error 
| [Tuesday 01 June 2010] [16:46:49] <mato>    sbeaulois: which version of RHEL?
| [Tuesday 01 June 2010] [16:47:58] <sbeaulois>   i use RHEL 5 
| [Tuesday 01 June 2010] [16:48:50] <mato>    don't know, sorry, I don't have that here... you need to install whichever package provides libuuid.a
| [Tuesday 01 June 2010] [16:49:12] <sbeaulois>   fine 
| [Tuesday 01 June 2010] [16:49:14] <versificateur>   i resolve my problem by exporting the PKG_CONFIG_PATH
| [Tuesday 01 June 2010] [16:49:47] <versificateur>   it compile fine
| [Tuesday 01 June 2010] [16:50:26] <versificateur>   but when i run the binarie i have this error
| [Tuesday 01 June 2010] [16:50:33] <versificateur>   ./server: error while loading shared libraries: libzmq.so.0: cannot open shared object file: No such file or directory
| [Tuesday 01 June 2010] [16:51:31] <versificateur>   it's similar to what an old issue i met with python bindings installation
| [Tuesday 01 June 2010] [16:51:49] <versificateur>   is anyone experienced this before??
| [Tuesday 01 June 2010] [16:52:17] <mato>    versificateur: you need to run ldconfig as root
| [Tuesday 01 June 2010] [16:52:18] <cremes>  versificateur: your compile line is wrong; don't use "libzmq" just use "zmq"
| [Tuesday 01 June 2010] [16:52:36] <cremes>  or what mato said :)
| [Tuesday 01 June 2010] [16:53:43] <versificateur>   mato: before or after compile??
| [Tuesday 01 June 2010] [16:54:12] <mato>    versificateur: only once, after doing make install for zmq
| [Tuesday 01 June 2010] [16:54:49] <versificateur>   okay i'm trying
| [Tuesday 01 June 2010] [16:56:27] <versificateur>   cremes: i don't think the zmq.cp exist
| [Tuesday 01 June 2010] [16:56:41] <mato>    versificateur: no, it's libzmq.pc
| [Tuesday 01 June 2010] [16:57:16] <versificateur>   so my compile line was right??
| [Tuesday 01 June 2010] [17:00:24] <mato>    yes
| [Tuesday 01 June 2010] [17:02:49] <versificateur>   i retried after ldconfig but still have the same issue
| [Tuesday 01 June 2010] [17:03:18] <mato>    you did do a make install after building zeromq, yes?
| [Tuesday 01 June 2010] [17:04:19] <versificateur>   after running ./configure make make install?
| [Tuesday 01 June 2010] [17:04:23] <versificateur>   yes
| [Tuesday 01 June 2010] [17:04:48] <mato>    don't know, then your system doesn't have /usr/local/lib in it's /etc/ld.so.conf or equivalent
| [Tuesday 01 June 2010] [17:06:20] <versificateur>   yes i think so
| [Tuesday 01 June 2010] [17:10:00] <versificateur>   i'll try by adding a zmq-64.conf with /usr/local/lib 
| [Tuesday 01 June 2010] [17:10:19] <versificateur>   to /etc/ld.so.conf.d
| [Tuesday 01 June 2010] [17:10:25] <versificateur>   directory
| [Tuesday 01 June 2010] [17:10:51] <mato>    yup, don't forget to rerun ldconfig when you make any changes
| [Tuesday 01 June 2010] [17:17:31] <versificateur>   mato: thanks!!! it works
| [Tuesday 01 June 2010] [17:18:11] <versificateur>   running netstat -l shoow me the zeromq port listening
| [Tuesday 01 June 2010] [17:18:30] <versificateur>   now i can test my code...
| [Tuesday 01 June 2010] [17:18:48] <versificateur>   thanks again :)
| [Tuesday 01 June 2010] [17:22:07] <mato>    np
| [Tuesday 01 June 2010] [17:25:22] <sbeaulois>   hi 
| [Tuesday 01 June 2010] [17:25:42] <sbeaulois>   i found solution of my problem 
| [Tuesday 01 June 2010] [17:26:45] <sbeaulois>   libuuid-devel is within of e2fsprogs package
| [Tuesday 01 June 2010] [18:04:25] <sbeaulois>   ne help 
| [Tuesday 01 June 2010] [18:04:30] <sbeaulois>   need help 
| [Tuesday 01 June 2010] [18:04:52] <sbeaulois>   try to compil my java script but   i have some error 
| [Tuesday 01 June 2010] [18:04:56] <sbeaulois>   java.lang.UnsatisfiedLinkError: /usr/local/lib/libjzmq.so.0.0.0: libzmq.so.0
| [Tuesday 01 June 2010] [18:05:02] <sbeaulois>   not found
| [Tuesday 01 June 2010] [18:05:40] <sbeaulois>   java.lang.UnsatisfiedLinkError: /usr/local/lib/libjzmq.so.0.0.0: libzmq.so.0: cannot open shared object file: No such file or directory
| 
| *** Logfile started
| *** on Tue Jun 1 20:38:41 2010
| 
| [Tuesday 01 June 2010] [20:38:41] Topic The channel topic is "Welcome!".
| [Tuesday 01 June 2010] [20:38:41] Topic The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Tuesday 01 June 2010] [20:38:47] Mode  Channel modes: no messages from outside, topic protection
| [Tuesday 01 June 2010] [20:38:47] Created   This channel was created on 2010-02-05 10:44.
| [Wednesday 02 June 2010] [04:00:18] <sjampoo>   morning, is the pollset and waitfd as discussed on the mailing list going to be part of 2.0.7 or is this something which will be implemented somewhere in the future? I would love to have an estimate on that, ie a month / a year. 
| [Wednesday 02 June 2010] [04:06:30] Part    zedas has left this channel.
| [Wednesday 02 June 2010] [04:15:10] <sustrik>   jugg: yes, see zmq_tcp(7)
| [Wednesday 02 June 2010] [04:21:07] <jugg>  thanks
| [Wednesday 02 June 2010] [04:22:39] <sustrik>   sjampoo: i'll add it after 2.0.7 release
| [Wednesday 02 June 2010] [04:22:54] <sustrik>   however, the API would still be unstable
| [Wednesday 02 June 2010] [04:23:13] <sustrik>   presumably, it can be done in better way
| [Wednesday 02 June 2010] [04:23:27] <sustrik>   everything depends on performance impact
| [Wednesday 02 June 2010] [04:31:30]      * sjampoo nods
| [Wednesday 02 June 2010] [07:43:41] <mato>  sustrik: are you there?
| [Wednesday 02 June 2010] [08:03:18] <sustrik>   mato: hi
| [Wednesday 02 June 2010] [08:03:38] <mato>  sustrik: you wrote that ZMQ_HWM is per-peer, what happens where there are no peers?
| [Wednesday 02 June 2010] [08:04:06] <sustrik>   exceptional behaviour is triggered
| [Wednesday 02 June 2010] [08:04:14] <sustrik>   drop/block
| [Wednesday 02 June 2010] [08:04:37] <mato>  yes, but when?
| [Wednesday 02 June 2010] [08:04:43] <sustrik>   on send
| [Wednesday 02 June 2010] [08:05:21] <mato>  ok, but immediately, right?
| [Wednesday 02 June 2010] [08:05:44] <sustrik>   right
| [Wednesday 02 June 2010] [08:53:48] <mato>  sustrik: the problem i'm having is that it's impossible to explain flow control accurately without dealing with the *actual* peers connected on a socket
| [Wednesday 02 June 2010] [08:54:06] <mato>  sustrik: this is further complicated by the fact that the term "connect" is overloaded
| [Wednesday 02 June 2010] [08:55:41] <mato>  sustrik: for example, it's really hard to explain coherently the state when a socket "has no peers"
| [Wednesday 02 June 2010] [08:56:06] <mato>  sustrik: which means that it has been connected with zmq_connect(), but no peers exist
| [Wednesday 02 June 2010] [09:05:12] <sustrik>   mato: don't even try to explain that
| [Wednesday 02 June 2010] [09:05:21] <sustrik>   what has to be documented is
| [Wednesday 02 June 2010] [09:05:37] <sustrik>   1. dealing with overloads (drop vs. block)
| [Wednesday 02 June 2010] [09:06:06] <sustrik>   2. HWM socket option - this is used to prevent out-of-memory rather than for flow control
| [Wednesday 02 June 2010] [09:07:20] <mato>  sustrik: it's impossible to explain accurately what HWM *means* without dealing with the existence of the individual message queues associated with a socket!
| [Wednesday 02 June 2010] [09:07:37] <mato>  same for drop/blocking behaviour
| [Wednesday 02 June 2010] [09:08:01] <sustrik>   mato: yes
| [Wednesday 02 June 2010] [09:08:16] <mato>  yes?
| [Wednesday 02 June 2010] [09:08:53] <sustrik>   HWM is maximal number of messages destined for one peer that the socket may hold 
| [Wednesday 02 June 2010] [09:09:07] <sustrik>   the connection doesn't have to exist
| [Wednesday 02 June 2010] [09:09:16] <sustrik>   even the peer may not be running at the moment
| [Wednesday 02 June 2010] [09:10:11] <mato>  the problem is "the connection" != "the socket connection"
| [Wednesday 02 June 2010] [09:10:39] <sustrik>   i prefer to say "there's no concept of connections in 0mq"
| [Wednesday 02 June 2010] [09:11:02] <mato>  then we need to rename the concept of connections to something else :-)
| [Wednesday 02 June 2010] [09:11:16] <sustrik>   what do you mean by connection?
| [Wednesday 02 June 2010] [09:11:54] <mato>  sctp got around this by using the term "association" IIRC
| [Wednesday 02 June 2010] [09:12:40] <mato>  sustrik: what i mean by connection is the "something" created by zmq_connect() or zmq_bind() :-)
| [Wednesday 02 June 2010] [09:13:05] <sustrik>   bind creates nothing, just an endpoint
| [Wednesday 02 June 2010] [09:13:07] <sustrik>   a name
| [Wednesday 02 June 2010] [09:13:20] <sustrik>   do you mean message pipe/queue?
| [Wednesday 02 June 2010] [09:13:22] <mato>  and connect? does what? :-)
| [Wednesday 02 June 2010] [09:13:44] <sustrik>   attaches to endpoint + creates a queue
| [Wednesday 02 June 2010] [09:14:13] <sustrik>   bind just creates the endpoint, creation of associated queue is async
| [Wednesday 02 June 2010] [09:14:18] <sustrik>   queues*
| [Wednesday 02 June 2010] [09:14:41] <sustrik>   but that's invisible to user
| [Wednesday 02 June 2010] [09:14:51] <sustrik>   and - imo - should not be mentioned in documentation
| [Wednesday 02 June 2010] [09:14:58] <sustrik>   what user needs to know is:
| [Wednesday 02 June 2010] [09:15:11] <sustrik>   1. socket may spak to multiple peers
| [Wednesday 02 June 2010] [09:15:28] <sustrik>   2. socket has a routing algorithm
| [Wednesday 02 June 2010] [09:15:41] <sustrik>   (which decides which peer gets which message)
| [Wednesday 02 June 2010] [09:15:56] <sustrik>   3. HWM limits number of messages routed to particular peer
| [Wednesday 02 June 2010] [09:16:08] <sustrik>   messages in memory*
| [Wednesday 02 June 2010] [09:22:40] <mato>  see, with 1. the terminology problem kicks in again:
| [Wednesday 02 June 2010] [09:22:47] <mato>  current doc:
| [Wednesday 02 June 2010] [09:22:52] <mato>  A
| [Wednesday 02 June 2010] [09:22:52] <mato>  'ZMQ_REQ' socket may be connected to multiple peers; each request sent is
| [Wednesday 02 June 2010] [09:22:52] <mato>  load-balanced among all connected peers.
| [Wednesday 02 June 2010] [09:24:41] <sustrik>   well, what's the problem with that?
| [Wednesday 02 June 2010] [09:24:53] <sustrik>   "connected" word?
| [Wednesday 02 June 2010] [09:24:59] <mato>  i think so
| [Wednesday 02 June 2010] [09:25:00] <sustrik>   just drop it
| [Wednesday 02 June 2010] [09:25:17] <sustrik>   "load-balanced among all peers."
| [Wednesday 02 June 2010] [09:25:26] <sustrik>   that's more precise actually
| [Wednesday 02 June 2010] [09:37:10] <mato>  crap, i still don't know how to explain the relationship between socket <-> endpoints <-> queues <-> peers
| [Wednesday 02 June 2010] [09:40:21] <sustrik>   :)
| [Wednesday 02 June 2010] [09:40:26] <mato>  sustrik: let me try and put my problem another way
| [Wednesday 02 June 2010] [09:40:42] <mato>  you keep saying that "there are no connections", and that we should not talk about them in the documentation
| [Wednesday 02 June 2010] [09:41:05] <mato>  but the explanation of ZMQ_HWM is directly dependent on the individual connections to peers
| [Wednesday 02 June 2010] [09:41:18] <mato>  or at least the queues created by those connections
| [Wednesday 02 June 2010] [09:42:32] <sustrik>   there's a peer
| [Wednesday 02 June 2010] [09:42:44] <sustrik>   there's a queue associated with the peer
| [Wednesday 02 June 2010] [09:43:01] <sustrik>   actual connection to the peer is invisible to the user
| [Wednesday 02 June 2010] [09:43:36] <mato>  so i do need to talk about the queues associated with a socket's peers
| [Wednesday 02 June 2010] [09:43:51] <sustrik>   what's wrong with the explanaition above:
| [Wednesday 02 June 2010] [09:43:57] <sustrik>   sustrik> 1. socket may spak to multiple peers
| [Wednesday 02 June 2010] [09:43:57] <sustrik>   <sustrik> 2. socket has a routing algorithm
| [Wednesday 02 June 2010] [09:43:57] <sustrik>   <sustrik> (which decides which peer gets which message)
| [Wednesday 02 June 2010] [09:43:57] <sustrik>   <sustrik> 3. HWM limits number of messages routed to particular peer
| [Wednesday 02 June 2010] [09:44:10] <mato>  it's not an explanation
| [Wednesday 02 June 2010] [09:44:14] <sustrik>   ?
| [Wednesday 02 June 2010] [09:45:24] <mato>  it needs to be uncompressed :-)
| [Wednesday 02 June 2010] [09:47:06] <sustrik>   ah, ok
| [Wednesday 02 June 2010] [09:47:22] <mato>  anyway, i'm trying
| [Wednesday 02 June 2010] [09:47:50] <mato>  maybe it'd help if you were sitting next to me ...
| [Wednesday 02 June 2010] [09:51:39] <sustrik>   hm
| [Wednesday 02 June 2010] [09:51:46] <sustrik>   let's give it one more try
| [Wednesday 02 June 2010] [09:52:22] <sustrik>   socket may speak to multiple peers
| [Wednesday 02 June 2010] [09:52:23] <mato>  if we get it right you won't have to answer nearly as many emails :-)
| [Wednesday 02 June 2010] [09:52:36] <sustrik>   yes, i know
| [Wednesday 02 June 2010] [09:52:47] <sustrik>   actually, it's not even peers
| [Wednesday 02 June 2010] [09:53:12] <sustrik>   because the peer may not even be running at the moment
| [Wednesday 02 June 2010] [09:53:18] <mato>  see, there is a concept missing
| [Wednesday 02 June 2010] [09:53:28] <sustrik>   what about endpoint
| [Wednesday 02 June 2010] [09:53:34] <sustrik>   we use that. no?
| [Wednesday 02 June 2010] [09:53:56] <sustrik>   so, there are endpoints on the network
| [Wednesday 02 June 2010] [09:53:56] <mato>  yes, but at the moment we talk about connecting to endpoints, which overloads the word connect
| [Wednesday 02 June 2010] [09:54:10] <sustrik>   they are pure virtual entities
| [Wednesday 02 June 2010] [09:54:17] <sustrik>   such as multicast group
| [Wednesday 02 June 2010] [09:54:34] <sustrik>   there's no real thing corresponding to multicast group, right?
| [Wednesday 02 June 2010] [09:54:45] <mato>  not really
| [Wednesday 02 June 2010] [09:54:48] <sustrik>   it's just a name
| [Wednesday 02 June 2010] [09:54:55] <sustrik>   ideal concept
| [Wednesday 02 June 2010] [09:55:07] <sustrik>   the 0MQ endpoint is the same kind of thing
| [Wednesday 02 June 2010] [09:55:25] <sustrik>   now, a socket can "implement" the endpoint
| [Wednesday 02 June 2010] [09:55:29] <sustrik>   by binding to it
| [Wednesday 02 June 2010] [09:56:10] <sustrik>   another socket may announce it's desire to speak to a particular endpoint
| [Wednesday 02 June 2010] [09:56:23] <sustrik>   (same thing as joining a multicast group)
| [Wednesday 02 June 2010] [09:56:29] <sustrik>   that's "connect"
| [Wednesday 02 June 2010] [09:57:18] <sustrik>   the whole point is that there may be no application associated with particular endpoint
| [Wednesday 02 June 2010] [09:57:30] <sustrik>   endpoint = name
| [Wednesday 02 June 2010] [09:58:16] <sustrik>   each socket is speaking to multiple peers
| [Wednesday 02 June 2010] [09:58:32] <sustrik>   it does so either by binding to an endpoint or connecting to an endpoint
| [Wednesday 02 June 2010] [09:58:34] <mato>  "speaking to" is not a technical term :-)
| [Wednesday 02 June 2010] [09:58:39] <sustrik>   communicating
| [Wednesday 02 June 2010] [10:00:00] <mato>  how does one refer to a peer a socket is communicating with?
| [Wednesday 02 June 2010] [10:00:18] <sustrik>   peer?
| [Wednesday 02 June 2010] [10:01:22] <sustrik>   anyway, the problem is that peers may not be alive, online and reading messages
| [Wednesday 02 June 2010] [10:01:59] <sustrik>   in such case we may limit number of messages in memory destined for a single peer by setting HWM
| [Wednesday 02 June 2010] [10:02:53] <sustrik>   i know, the whole explanation is creaky, but at least it gives some intuitive insight
| [Wednesday 02 June 2010] [10:03:52] <mato>  creaky, yes :-(
| [Wednesday 02 June 2010] [10:07:57] <mato>  sustrik: so you don't want to talk about message queues associated with sockets at all?
| [Wednesday 02 June 2010] [10:08:14] <sustrik>   do we need to?
| [Wednesday 02 June 2010] [10:08:25] <sustrik>   i am a fan of occam's razor
| [Wednesday 02 June 2010] [10:09:18] <mato>  ok, let me try and see if i can explain everything by removing all references to "message queue associated with socket ..." :-)
| [Wednesday 02 June 2010] [10:09:34] <sustrik>   ;)
| [Wednesday 02 June 2010] [10:29:51] <mato>  sustrik: ok, read this:
| [Wednesday 02 June 2010] [10:30:03] <mato>  The 'ZMQ_HWM' option shall set the high water mark for the specified 'socket'.
| [Wednesday 02 June 2010] [10:30:03] <mato>  The high water mark is a hard limit on the maximum number of outstanding
| [Wednesday 02 June 2010] [10:30:03] <mato>  messages 0MQ shall queue in memory for any single peer that the specified
| [Wednesday 02 June 2010] [10:30:03] <mato>  'socket' is communicating with.
| [Wednesday 02 June 2010] [10:30:03] <mato>  If this limit has been reached for all peers then the socket shall enter an
| [Wednesday 02 June 2010] [10:30:06] <mato>  exceptional state, and depending on the socket type 0MQ shall take appropriate
| [Wednesday 02 June 2010] [10:30:08] <mato>  action such as blocking or dropping newly sent messages; refer to
| [Wednesday 02 June 2010] [10:30:11] <mato>  linkzmq:zmq_socket[3] for details. The exceptional state shall persist until
| [Wednesday 02 June 2010] [10:30:13] <mato>  the number of outstanding messages for at least one peer falls below the low
| [Wednesday 02 June 2010] [10:30:16] <mato>  water mark; the low water mark shall be computed automatically by 0MQ.
| [Wednesday 02 June 2010] [10:30:29] <mato>  avoids using the term "connected to" anywhere
| [Wednesday 02 June 2010] [10:30:35] <mato>  or mentioning message queues
| [Wednesday 02 June 2010] [10:31:02] <mato>  i can even change "shall queue in memory" to "shall hold in memory" if queue is a no-no :-)
| [Wednesday 02 June 2010] [10:31:22] <sustrik>   doesn't matter
| [Wednesday 02 June 2010] [10:31:24] <mato>  sustrik: further, then related to this, the following paragraph for ZMQ_REQ:
| [Wednesday 02 June 2010] [10:31:30] <mato>  in zmq_socket(3)
| [Wednesday 02 June 2010] [10:31:31] <sustrik>   the problem is that it's not true
| [Wednesday 02 June 2010] [10:31:43] <mato>  what is not true?
| [Wednesday 02 June 2010] [10:32:10] <sustrik>   the part about the exceptional state
| [Wednesday 02 June 2010] [10:32:23] <sustrik>   what you've written applies to sat REQ/REP
| [Wednesday 02 June 2010] [10:32:28] <sustrik>   doesn't apply to PUB/SUB
| [Wednesday 02 June 2010] [10:32:37] <mato>  hmm, crap, ok
| [Wednesday 02 June 2010] [10:32:42] <sustrik>   :)
| [Wednesday 02 June 2010] [10:32:58] <sustrik>   try to express it in a simple manner
| [Wednesday 02 June 2010] [10:33:08] <mato>  so how about we keep the 1st paragraph only?
| [Wednesday 02 June 2010] [10:33:15] <mato>  and then refer to the individual socket types?
| [Wednesday 02 June 2010] [10:33:26] <sustrik>   yes
| [Wednesday 02 June 2010] [10:33:26] <mato>  1st paragraph being this bit:
| [Wednesday 02 June 2010] [10:33:30] <mato>  The 'ZMQ_HWM' option shall set the high water mark for the specified 'socket'.
| [Wednesday 02 June 2010] [10:33:30] <mato>  The high water mark is a hard limit on the maximum number of outstanding
| [Wednesday 02 June 2010] [10:33:30] <mato>  messages 0MQ shall queue in memory for any single peer that the specified
| [Wednesday 02 June 2010] [10:33:30] <mato>  'socket' is communicating with.
| [Wednesday 02 June 2010] [10:33:34] <sustrik>   yes
| [Wednesday 02 June 2010] [10:33:48] <mato>  ok, so then the relevant paragraph for REQ sockets:
| [Wednesday 02 June 2010] [10:33:54] <mato>  When a 'ZMQ_REQ' socket enters an exceptional state due to having reached the
| [Wednesday 02 June 2010] [10:33:54] <mato>  high water mark for all peers, or if there are no peers at all, then any
| [Wednesday 02 June 2010] [10:33:54] <mato>  _zmq_send()_ operations on the socket shall block until the exceptional state
| [Wednesday 02 June 2010] [10:33:54] <mato>  ends or at least one peer is connected; messages are not discarded.
| [Wednesday 02 June 2010] [10:33:58] <mato>  makes sense?
| [Wednesday 02 June 2010] [10:34:07] <mato>  i still have a problem there with "at least one peer is connected"
| [Wednesday 02 June 2010] [10:34:29] <mato>  note the careful absence of "connecting" anywhere else :-)
| [Wednesday 02 June 2010] [10:35:40] <sustrik>   "until at least one peer becomes available for sending"
| [Wednesday 02 June 2010] [10:36:04] <mato>  do i want to talk about when exactly the exceptional state ends?
| [Wednesday 02 June 2010] [10:36:15] <mato>  or just be vague and mysterious?
| [Wednesday 02 June 2010] [10:36:20] <sustrik>   be vague
| [Wednesday 02 June 2010] [10:36:24] <sustrik>   it depends on lwm
| [Wednesday 02 June 2010] [10:36:29] <sustrik>   which is invisible
| [Wednesday 02 June 2010] [10:36:33] <mato>  :-(
| [Wednesday 02 June 2010] [10:36:48] <sustrik>   what's wrong with that?
| [Wednesday 02 June 2010] [10:36:56] <sustrik>   you have the same thing with TCP
| [Wednesday 02 June 2010] [10:37:02] <mato>  ok
| [Wednesday 02 June 2010] [10:37:03] <sustrik>   and you even don't realise it
| [Wednesday 02 June 2010] [10:38:53] <mato>  sustrik: can i use the following summary table for sockets:
| [Wednesday 02 June 2010] [10:38:58] <mato>  .Summary of ZMQ_REQ characteristics
| [Wednesday 02 June 2010] [10:38:59] <mato>  Compatible peer sockets:: 'ZMQ_REP'
| [Wednesday 02 June 2010] [10:38:59] <mato>  Direction:: Bidirectional
| [Wednesday 02 June 2010] [10:38:59] <mato>  Send/receive pattern:: Send, Receive, Send, Receive, ...
| [Wednesday 02 June 2010] [10:38:59] <mato>  Queuing strategy:: Load-balanced
| [Wednesday 02 June 2010] [10:39:01] <mato>  Flow control:: Block
| [Wednesday 02 June 2010] [10:39:38] <mato>  maybe queueing strategy should be "Routing strategy" ?
| [Wednesday 02 June 2010] [10:40:15] <mato>  and Flow control should be called something else, "ZMQ_HWM behaviour" ?
| [Wednesday 02 June 2010] [10:41:25] <lvh>   Is it just me, or did 0MQ involve a broker some time ago?
| [Wednesday 02 June 2010] [10:41:44] <lvh>   I'm seeing all this brokerless stuff and I don't get it.
| [Wednesday 02 June 2010] [10:41:55] <mato>  lvh: no, it never did... there was a zmq_locator in 1.x but that did something else
| [Wednesday 02 June 2010] [10:42:09] <mato>  sustrik: halo?
| [Wednesday 02 June 2010] [10:42:28] <sustrik>   mato: here i am
| [Wednesday 02 June 2010] [10:42:40] <mato>  sustrik: see above
| [Wednesday 02 June 2010] [10:42:44] <sustrik>   yes
| [Wednesday 02 June 2010] [10:42:55] <sustrik>   send/receive patter is kind of funny
| [Wednesday 02 June 2010] [10:43:00] <sustrik>   but i don't care
| [Wednesday 02 June 2010] [10:43:01] <mato>  brian suggested that
| [Wednesday 02 June 2010] [10:43:06] <sustrik>   it's ok
| [Wednesday 02 June 2010] [10:43:27] <mato>  and the others?
| [Wednesday 02 June 2010] [10:43:41] <sustrik>   there are actually two strategies
| [Wednesday 02 June 2010] [10:43:53] <sustrik>   one for outgoing messages, one for incoming messages
| [Wednesday 02 June 2010] [10:44:24] <sustrik>   say REQ load balances outgoing messages
| [Wednesday 02 June 2010] [10:44:32] <mato>  yeah, that makes sense
| [Wednesday 02 June 2010] [10:44:46] <mato>  what it does with incoming messages you don't really care
| [Wednesday 02 June 2010] [10:44:47] <sustrik>   and receives only from the peer it sent the last request to
| [Wednesday 02 June 2010] [10:45:04] <mato>  hmm, how can I put that in one sentence...
| [Wednesday 02 June 2010] [10:45:09] <sustrik>   well, for say REP socket, the incoming stratege is fair queueing
| [Wednesday 02 June 2010] [10:45:17] <sustrik>   strategy*
| [Wednesday 02 June 2010] [10:46:06] <sustrik>   wouldn't it be better to explain what the socket does in one sentence
| [Wednesday 02 June 2010] [10:46:15] <mato>  I do that already
| [Wednesday 02 June 2010] [10:46:23] <mato>  but I wanted a summary table in there
| [Wednesday 02 June 2010] [10:46:26] <sustrik>   instead of splitting it into 4 different rows in a table
| [Wednesday 02 June 2010] [10:46:52] <mato>  sustrik: if you were here you would see what i have on my screen :-(
| [Wednesday 02 June 2010] [10:46:53] <sustrik>   ok, let's go through the table
| [Wednesday 02 June 2010] [10:47:07] <sustrik>   comaptible sockets is OK
| [Wednesday 02 June 2010] [10:47:07] <mato>  do we want a table or not?
| [Wednesday 02 June 2010] [10:47:26] <mato>  I thought it would be good to explain in prose first, and then have a table at the end
| [Wednesday 02 June 2010] [10:47:34] <lvh>   Okay. We have a bunch of entry points for mobile devices that speak JSON-over-HTTPS and Thrift-over-SSL. They send stuff to an AMQP broker (RabbitMQ): a queue for persisting, which roundrobins stuff to persisters that write to a database, and then a pubsub thing for a live web interface. I don't understand how you do the load balancing bit in ZMQ. How do persisters register? How do they know *where* to register if there is no central
| [Wednesday 02 June 2010] [10:47:35] <lvh>   broker?
| [Wednesday 02 June 2010] [10:48:42] <sustrik>   mato: i would omit the strategies from the table, they are explained in the text already
| [Wednesday 02 June 2010] [10:49:30] <mato>  sustrik: well, the table is nice for a quick look
| [Wednesday 02 June 2010] [10:49:39] <mato>  sustrik: if it can be done for all sockets correctly
| [Wednesday 02 June 2010] [10:49:40] <sustrik>   lvh: so devices are sending messages to a central node (broker) which then load-balances them among persisters, right?
| [Wednesday 02 June 2010] [10:49:49] <lvh>   sustrik: Yes, that's one part of the behavior
| [Wednesday 02 June 2010] [10:49:57] <lvh>   sustrik: Let's focus on that now :)
| [Wednesday 02 June 2010] [10:50:11] <lvh>   sustrik: That's a single AMQP queue.
| [Wednesday 02 June 2010] [10:50:25] <sustrik>   mato: you can try but strategies need textual description anyway
| [Wednesday 02 June 2010] [10:50:43] <sustrik>   lvh: is that req/rep scenario?
| [Wednesday 02 June 2010] [10:50:46] <lvh>   What does the failure mode look like? What happens to messages when a persister grabs a message and then blows up?
| [Wednesday 02 June 2010] [10:50:55] <sustrik>   are the persisters sending replies back to the devices?
| [Wednesday 02 June 2010] [10:51:10] <sustrik>   lvh: unreliable
| [Wednesday 02 June 2010] [10:51:16] <lvh>   sustrik: Ideally yes, to confirm "hey I wrote this thing and the db says its okay"
| [Wednesday 02 June 2010] [10:51:44] <sustrik>   you can run zmq_queue in the middle
| [Wednesday 02 June 2010] [10:51:53] <sustrik>   it's lika an AMQP queue
| [Wednesday 02 June 2010] [10:52:12] <sustrik>   then both devices and persisters can connect to it
| [Wednesday 02 June 2010] [10:52:17] <lvh>   Okay, cool :-) I'll read up on that one.
| [Wednesday 02 June 2010] [10:52:28] <lvh>   sustrik: How about the pubsubbing? Is that with zmq_queue too?
| [Wednesday 02 June 2010] [10:52:38] <sustrik>   no, that's zmq_forwarder
| [Wednesday 02 June 2010] [10:53:13] <lvh>   Aha! Okay, I'll read the docs for those two and try to figure it out. Thanks! :-)
| [Wednesday 02 June 2010] [10:54:58] <mato>  sustrik: so what's the incoming strategy for ZMQ_SUB?
| [Wednesday 02 June 2010] [10:56:45] <sustrik>   fair-queuing
| [Wednesday 02 June 2010] [10:59:58] <mato>  does this work:
| [Wednesday 02 June 2010] [11:00:04] <mato>  REQ:
| [Wednesday 02 June 2010] [11:00:11] <mato>  Compatible peer sockets:: 'ZMQ_REP'
| [Wednesday 02 June 2010] [11:00:11] <mato>  Direction:: Bidirectional
| [Wednesday 02 June 2010] [11:00:11] <mato>  Send/receive pattern:: Send, Receive, Send, Receive, ...
| [Wednesday 02 June 2010] [11:00:11] <mato>  Outgoing routing strategy:: Load-balanced
| [Wednesday 02 June 2010] [11:00:11] <mato>  Incoming routing strategy:: Last peer
| [Wednesday 02 June 2010] [11:00:13] <mato>  Flow control:: Block
| [Wednesday 02 June 2010] [11:00:15] <mato>  REP:
| [Wednesday 02 June 2010] [11:00:20] <mato>  Compatible peer sockets:: 'ZMQ_REQ'
| [Wednesday 02 June 2010] [11:00:20] <mato>  Direction:: Bidirectional
| [Wednesday 02 June 2010] [11:00:20] <mato>  Send/receive pattern:: Receive, Send, Receive, Send, ...
| [Wednesday 02 June 2010] [11:00:20] <mato>  Incoming routing strategy:: Fair-queued
| [Wednesday 02 June 2010] [11:00:20] <mato>  Outgoing routing stratagy:: Last peer
| [Wednesday 02 June 2010] [11:00:23] <mato>  Flow control:: Drop
| [Wednesday 02 June 2010] [11:02:54] <sustrik>   you have it mixed
| [Wednesday 02 June 2010] [11:02:59] <sustrik>   the upper is ZMQ_REQ
| [Wednesday 02 June 2010] [11:03:08] <sustrik>   the lower is ZMQ_REP
| [Wednesday 02 June 2010] [11:03:15] <mato>  that's what i wrote
| [Wednesday 02 June 2010] [11:03:56] <mato>  sustrik: what i'm asking is whether that kind of table makes sense
| [Wednesday 02 June 2010] [11:03:58] <sustrik>   oh, orry
| [Wednesday 02 June 2010] [11:04:00] <sustrik>   sorry
| [Wednesday 02 June 2010] [11:04:18] <sustrik>   yes, it makes sense
| [Wednesday 02 June 2010] [11:04:44] <mato>  the reason i want to put it in there beside the prose is brian wrote:
| [Wednesday 02 June 2010] [11:04:55] <mato>  In my understanding, 0MQ sockets
| [Wednesday 02 June 2010] [11:04:55] <mato>  can be described in a uniform manner by specifying things like:
| [Wednesday 02 June 2010] [11:04:55] <mato>  * Bidirectional or unidirectional
| [Wednesday 02 June 2010] [11:04:55] <mato>  * send/recv pattern (ssssss, rrrrrrr, srsrsrsr, etc.)
| [Wednesday 02 June 2010] [11:04:55] <mato>  * Outbound/inbound message queuing pattern (load balanced, fair queued)
| [Wednesday 02 June 2010] [11:04:58] <mato>  * Number of allowed clients.
| [Wednesday 02 June 2010] [11:05:00] <mato>  * How multiple clients are handled.
| [Wednesday 02 June 2010] [11:05:03] <mato>  * Number of allowed in flight messages (synch, async)
| [Wednesday 02 June 2010] [11:05:05] <mato>  * Algorithm used when the queue fills.
| [Wednesday 02 June 2010] [11:05:08] <mato>  * Allowed peer socket types.
| [Wednesday 02 June 2010] [11:05:10] <mato>  * I may be missing certain things.
| [Wednesday 02 June 2010] [11:05:13] <mato>  * How identities are used in message routing.
| [Wednesday 02 June 2010] [11:05:15] <mato>  The main problem that I see right now is that some of these things are
| [Wednesday 02 June 2010] [11:05:18] <mato>  not clearly documented.  Making a list of all these things and
| [Wednesday 02 June 2010] [11:05:20] <mato>  documenting them for each socket type would be immensely helpful and
| [Wednesday 02 June 2010] [11:05:23] <mato>  clarify the abstraction of a 0MQ socket.
| [Wednesday 02 June 2010] [11:05:25] <mato>  ...
| [Wednesday 02 June 2010] [11:05:28] <mato>  so it seems that a table would help
| [Wednesday 02 June 2010] [11:05:30] <sustrik>   yes, sure
| [Wednesday 02 June 2010] [11:05:30] <mato>  sustrik: agree?
| [Wednesday 02 June 2010] [11:05:36] <sustrik>   yes
| [Wednesday 02 June 2010] [11:05:45] <sustrik>   let's use your current table
| [Wednesday 02 June 2010] [11:05:55] <sustrik>   if there are more things to specify
| [Wednesday 02 June 2010] [11:05:59] <sustrik>   we can add it later
| [Wednesday 02 June 2010] [11:06:02] <mato>  ok, good
| [Wednesday 02 June 2010] [11:06:21] <mato>  it makes peer look scary:
| [Wednesday 02 June 2010] [11:06:25] <mato>  Compatible peer sockets:: 'ZMQ_PAIR'
| [Wednesday 02 June 2010] [11:06:26] <mato>  Direction:: Bidirectional
| [Wednesday 02 June 2010] [11:06:26] <mato>  Send/receive pattern:: Unrestricted
| [Wednesday 02 June 2010] [11:06:26] <mato>  Incoming routing strategy:: N/A
| [Wednesday 02 June 2010] [11:06:26] <mato>  Outgoing routing strategy:: N/A
| [Wednesday 02 June 2010] [11:06:28] <mato>  Flow control:: Block
| [Wednesday 02 June 2010] [11:06:30] <mato>  lots of N/A :)
| [Wednesday 02 June 2010] [11:07:03] <mato>  sustrik: one more thing needs  to go in that table
| [Wednesday 02 June 2010] [11:07:36] <sustrik>   :)
| [Wednesday 02 June 2010] [11:07:46] <mato>  sustrik: which is what brian calls "number of allowed clients", and what he means is whether a socket can be many-to-many/many-to-one/etc
| [Wednesday 02 June 2010] [11:07:53] <mato>  what is that "thing" called? :-)
| [Wednesday 02 June 2010] [11:08:03] <sustrik>   arity
| [Wednesday 02 June 2010] [11:08:12] <sustrik>   cardinality
| [Wednesday 02 June 2010] [11:08:15] <sustrik>   dunno
| [Wednesday 02 June 2010] [11:08:39] <mato>  hmm, neither of those really work
| [Wednesday 02 June 2010] [11:08:57] <sustrik>   any normal 0mq socket allows many peers
| [Wednesday 02 June 2010] [11:09:03] <sustrik>   pair is pathological case
| [Wednesday 02 June 2010] [11:09:12] <sustrik>   just note in the text
| [Wednesday 02 June 2010] [11:09:23] <mato>  already noted
| [Wednesday 02 June 2010] [11:09:24] <sustrik>   word 'pathological' should be definitely present :)
| [Wednesday 02 June 2010] [11:18:34] <lvh>   sustrik: So, in a typical setup, would these brokers and forwarders have dedicated machines? I'm assuming that you *DO* actually need to know where your forwarder/queue is.
| [Wednesday 02 June 2010] [11:18:56] <sustrik>   yes, you have to connect to it
| [Wednesday 02 June 2010] [11:19:13] <sustrik>   having a dedicated machine seems like an overkill
| [Wednesday 02 June 2010] [11:19:20] <sustrik>   depends on what are you doing
| [Wednesday 02 June 2010] [11:19:38] <sustrik>   if you are NASDAQ, you probably want a dedicated machine...
| [Wednesday 02 June 2010] [11:19:52] <lvh>   well, we're currently on EC2
| [Wednesday 02 June 2010] [11:20:09] <lvh>   I suppose we could move to RC and use a tiny 256M box, and even that's overkill.
| [Wednesday 02 June 2010] [11:20:43] <sustrik>   then use a single box :)
| [Wednesday 02 June 2010] [11:21:25] <mato>  %^#$^
| [Wednesday 02 June 2010] [11:22:31] <mato>  sustrik: so how do i translate this without mentioning message queues/pipes:
| [Wednesday 02 June 2010] [11:22:39] <mato>  REP:
| [Wednesday 02 June 2010] [11:22:39] <mato>  Ak je spojenie urcene na odoslanie odpovede preplnene, potom ZMQ
| [Wednesday 02 June 2010] [11:22:39] <mato>  spravu zahodi a send skonci uspesne.
| [Wednesday 02 June 2010] [11:23:37] <sustrik>   that's the flow control bit?
| [Wednesday 02 June 2010] [11:23:45] <mato>  yes
| [Wednesday 02 June 2010] [11:24:20] <sustrik>   if there's not enough space to store the message, it'll be dropped
| [Wednesday 02 June 2010] [11:25:23] <mato>  sustrik: it needs to be explained in the context of REP and HWM
| [Wednesday 02 June 2010] [11:25:56] <mato>  help me out here
| [Wednesday 02 June 2010] [11:26:43] <sustrik>   if requester is not receiving replies and the number of outstanding replies reaches HWM any further replies will be dropped
| [Wednesday 02 June 2010] [11:30:17] <mato>  sustrik: hw about this?
| [Wednesday 02 June 2010] [11:30:22] <mato>  When a 'ZMQ_REP' socket enters an exceptional state due to having reached the
| [Wednesday 02 June 2010] [11:30:23] <mato>  high water mark for a _client_, then any replies sent to the _client_ in
| [Wednesday 02 June 2010] [11:30:23] <mato>  question shall be dropped until the exceptional state ends.
| [Wednesday 02 June 2010] [11:30:48] <sustrik>   yes, why not
| [Wednesday 02 June 2010] [12:05:50] <mato>  sustrik: are you still there?
| [Wednesday 02 June 2010] [12:11:46] <sustrik>   mato: yes
| [Wednesday 02 June 2010] [12:12:00] <mato>  sustrik: in a moment i will commit my changes
| [Wednesday 02 June 2010] [12:12:15] <mato>  sustrik: i've also added some general text to zmq_socket in an attempt to explain the interesting bits
| [Wednesday 02 June 2010] [12:12:23] <mato>  sustrik: once i commit it can you review this please?
| [Wednesday 02 June 2010] [12:12:30] <sustrik>   sure, i will
| [Wednesday 02 June 2010] [12:12:40] <sustrik>   one more question, btw
| [Wednesday 02 June 2010] [12:12:53] <sustrik>   there's a "zmqd" thing in the trunk
| [Wednesday 02 June 2010] [12:13:11] <sustrik>   should we drop the devices in favour of zmqd
| [Wednesday 02 June 2010] [12:13:19] <sustrik>   or keep both for the time being
| [Wednesday 02 June 2010] [12:13:22] <sustrik>   ?
| [Wednesday 02 June 2010] [12:13:30] <mato>  sustrik: oh, btw, since we're removing app_threads, zmq_socket will no longer return EMTHREAD ever?
| [Wednesday 02 June 2010] [12:13:48] <mato>  sustrik: as for zmqd, i'm not sure, i've not had a chance to review it
| [Wednesday 02 June 2010] [12:13:48] <sustrik>   actually, it will
| [Wednesday 02 June 2010] [12:14:07] <sustrik>   when it reaches max socket count
| [Wednesday 02 June 2010] [12:14:12] <sustrik>   as with POSIX
| [Wednesday 02 June 2010] [12:14:24] <mato>  sustrik: for 2.0.7 i would ignore zmqd, and keep packaging the current devices
| [Wednesday 02 June 2010] [12:14:31] <sustrik>   ok
| [Wednesday 02 June 2010] [12:14:35] <mato>  sustrik: since the devices/zmqd really need a proper review
| [Wednesday 02 June 2010] [12:15:05] <sustrik>   fine
| [Wednesday 02 June 2010] [12:15:27] <sustrik>   what about renaming EMTHREAD to EMFILE?
| [Wednesday 02 June 2010] [12:15:40] <sustrik>   probably not
| [Wednesday 02 June 2010] [12:15:48] <sustrik>   just an idea
| [Wednesday 02 June 2010] [12:15:57] <mato>  what does this value have to do with it?
| [Wednesday 02 June 2010] [12:16:13] <mato>   Maximal number of OS threads that can own 0MQ sockets
| [Wednesday 02 June 2010] [12:16:13] <mato>          //  at the same time.
| [Wednesday 02 June 2010] [12:16:13] <mato>          max_app_threads = 512,
| [Wednesday 02 June 2010] [12:16:18] <mato>  from config.hpp
| [Wednesday 02 June 2010] [12:16:30] <sustrik>   yes, that's max thread count
| [Wednesday 02 June 2010] [12:16:42] <sustrik>   kind of like max socket count in POSIX OS
| [Wednesday 02 June 2010] [12:16:51] <sustrik>   max fd count i meant
| [Wednesday 02 June 2010] [12:17:22] <mato>  ok
| [Wednesday 02 June 2010] [12:17:59] <mato>  in that case I'll change the error explanation to just say:
| [Wednesday 02 June 2010] [12:18:03] <mato>  *EMTHREAD*::
| [Wednesday 02 June 2010] [12:18:03] <mato>  The number of application threads using sockets within this 'context' has been
| [Wednesday 02 June 2010] [12:18:04] <mato>  exceeded. 
| [Wednesday 02 June 2010] [12:18:08] <mato>  and nothing else
| [Wednesday 02 June 2010] [12:18:26] <sustrik>   there's no concept of application thread now
| [Wednesday 02 June 2010] [12:18:30] <sustrik>   i would just say
| [Wednesday 02 June 2010] [12:18:40] <sustrik>   "maximal number of sockets exceeded"
| [Wednesday 02 June 2010] [12:18:46] <sustrik>   it's not precise
| [Wednesday 02 June 2010] [12:18:47] <mato>  sorry, yeah
| [Wednesday 02 June 2010] [12:18:55] <mato>  Maximum btw
| [Wednesday 02 June 2010] [12:19:04] <mato>  I don't know where you keep getting maximal from :-)
| [Wednesday 02 June 2010] [12:19:06] <sustrik>   but nobody going to experience the error
| [Wednesday 02 June 2010] [12:19:15] <sustrik>   slovak language
| [Wednesday 02 June 2010] [12:19:23] <mato>  oh, you never know, there may be people using more than 512 threads
| [Wednesday 02 June 2010] [12:19:35] <sustrik>   those are doomed anyway
| [Wednesday 02 June 2010] [12:19:37] <sustrik>   :)
| [Wednesday 02 June 2010] [12:19:51] <mato>  not if you imagine that they're running on some freaky 48-core box :-)
| [Wednesday 02 June 2010] [12:20:07] <sustrik>   supercomputing use cases
| [Wednesday 02 June 2010] [12:20:27] <sustrik>   guys on blue gene should be smart enough to figure it out
| [Wednesday 02 June 2010] [12:20:59] <cremes>    mato: is zmq_init still taking a threads parameter? if so, does your latest doc update explain its meaning better?
| [Wednesday 02 June 2010] [12:21:15] <mato>  cremes: it is, but won't be for 2.0.7
| [Wednesday 02 June 2010] [12:21:29] <mato>  hence the doc update
| [Wednesday 02 June 2010] [12:21:49] <cremes>    so in 2.0.7 the call to zmq_init will no longer take any arguments?
| [Wednesday 02 June 2010] [12:21:54] <mato>  correct
| [Wednesday 02 June 2010] [12:22:01] <cremes>    good
| [Wednesday 02 June 2010] [12:22:06] <sustrik>   not corrext
| [Wednesday 02 June 2010] [12:22:14] <cremes>    oops
| [Wednesday 02 June 2010] [12:22:16] <sustrik>   there's still io_threads parameter
| [Wednesday 02 June 2010] [12:22:23] <mato>  yeah, that's right, sorry
| [Wednesday 02 June 2010] [12:22:23] <sustrik>   size of working thread pool
| [Wednesday 02 June 2010] [12:22:43] <sustrik>   app_threads and flags is dropped
| [Wednesday 02 June 2010] [12:22:49] <cremes>    ah, ok
| [Wednesday 02 June 2010] [12:23:15] <cremes>    i never understood what app threads were for... 
| [Wednesday 02 June 2010] [12:23:20] <cremes>    but now it doesn't matter
| [Wednesday 02 June 2010] [12:23:24] <mato>  :-)
| [Wednesday 02 June 2010] [12:23:36] <sustrik>   that's why we removed them
| [Wednesday 02 June 2010] [12:23:37] <mato>  cremes: anything else you don't know what its for?
| [Wednesday 02 June 2010] [12:23:43] <mato>  cremes: maybe we can remove that too :-)
| [Wednesday 02 June 2010] [12:23:53] <cremes>    ha!
| [Wednesday 02 June 2010] [12:24:36] <sustrik>   seriously
| [Wednesday 02 June 2010] [12:24:39] <cremes>    let me see... you may want to clarify that zmq_poll can return when *any* event occurs inside the library even if no sockets are readable/writable
| [Wednesday 02 June 2010] [12:25:08] <cremes>    and the usec delay value is the maximum it may block and will likely return earlier
| [Wednesday 02 June 2010] [12:25:15] <sustrik>   yeah, that's kind of confusing
| [Wednesday 02 June 2010] [12:25:42] <cremes>    i know :)
| [Wednesday 02 June 2010] [12:25:58] <sustrik>   i would like to block till timeout expires but people seem to be so much concerned about zmq_poll performance...
| [Wednesday 02 June 2010] [12:27:16] <cremes>    sustrik: that behavior as fine as long as it is documented
| [Wednesday 02 June 2010] [12:27:32] <cremes>    particularly the part that it's possible that no sockets are readable/writable
| [Wednesday 02 June 2010] [12:27:57] <sustrik>   mato: can you add one sentence explaining that?
| [Wednesday 02 June 2010] [12:28:01] <cremes>    i'd like to keep 0mq as fast as possible so that my choice of a slow language (ruby) doesn't hurt as much
| [Wednesday 02 June 2010] [12:28:19] <lvh>   you should probably measure your bottlenecks first
| [Wednesday 02 June 2010] [12:28:33] <lvh>   IO tends to be it but ZMQ is probably a tiny bit of that
| [Wednesday 02 June 2010] [12:28:35] <mato>  sustrik: working on it now
| [Wednesday 02 June 2010] [12:29:17] <sustrik>   lvh: that's true wrt latency
| [Wednesday 02 June 2010] [12:29:34] <sustrik>   as for throughput it should be as fast as possible
| [Wednesday 02 June 2010] [12:29:47] <sustrik>   because network stack is called only once in a while
| [Wednesday 02 June 2010] [12:30:03] <sustrik>   so it most cases 0mq overhead is the only overhead there is
| [Wednesday 02 June 2010] [12:30:37] <sustrik>   exact timeouts on zmq_poll require one call to gettimeofday per invocation
| [Wednesday 02 June 2010] [12:30:49] <sustrik>   that can slow the whole thing down
| [Wednesday 02 June 2010] [12:32:49] <mato>  sustrik: so poll returns any time, even if there are no events and timeout has not yet expired?
| [Wednesday 02 June 2010] [12:33:40] <sustrik>   yes
| [Wednesday 02 June 2010] [12:33:58] <sustrik>   the only guarantee is that it won't return _after_ the timeout expired
| [Wednesday 02 June 2010] [12:34:14] <mato>  IMPORTANT: The _zmq_poll()_ function may return *before* the 'timeout' period
| [Wednesday 02 June 2010] [12:34:15] <mato>  has expired even if no events have been signaled.
| [Wednesday 02 June 2010] [12:34:17] <mato>  this should do?
| [Wednesday 02 June 2010] [12:34:27] <mato>  right after the RETURN value section
| [Wednesday 02 June 2010] [12:34:28] <sustrik>   cremes?
| [Wednesday 02 June 2010] [12:35:55] <sustrik>   looks like he's away, i, for myself, am happy with the wording
| [Wednesday 02 June 2010] [12:35:59] <mato>  ok
| [Wednesday 02 June 2010] [12:36:24] <mato>  poll is a hack anyway and needs to be redone :)
| [Wednesday 02 June 2010] [12:36:47] <sustrik>   yeah, but the exact timeout would be a problem anyway :|
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: 03Martin Lucina 07master * r7c9b09b 10/ (7 files): 
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: Documentation: Flow control, zmq_socket(3)
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: Mostly Flow control and additions to zmq_socket(3)
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: Removed/changed lots of text regarding message queues
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: More fixes for 2.0.7 changes - http://bit.ly/d24DAg
| [Wednesday 02 June 2010] [12:38:36] <mato>  sustrik: ok, committed
| [Wednesday 02 June 2010] [12:38:56] <mato>  sustrik: please take a look at the beginning of zmq_socket(3) and tell me if the added text is correct and helpful or not
| [Wednesday 02 June 2010] [12:39:11] <sustrik>   lemme see
| [Wednesday 02 June 2010] [12:44:04] <sustrik>   very nice
| [Wednesday 02 June 2010] [12:44:10] <mato>  thanks
| [Wednesday 02 June 2010] [12:44:35] <mato>  i wanted to emphasize the many-to-many and multiple endpoints 
| [Wednesday 02 June 2010] [12:44:43] <sustrik>   yes, that's good
| [Wednesday 02 June 2010] [12:44:53] <sustrik>   it should be pointed out explicitly
| [Wednesday 02 June 2010] [12:45:15] <mato>  great, then this should help
| [Wednesday 02 June 2010] [12:45:22] <mato>  sustrik: beer & pizza?
| [Wednesday 02 June 2010] [12:45:38] <sustrik>   i've just ate
| [Wednesday 02 June 2010] [12:45:48] <sustrik>   beer?
| [Wednesday 02 June 2010] [12:46:03] <mato>  beer is good, but i need food too
| [Wednesday 02 June 2010] [12:46:17] <sustrik>   where do you want to go?
| [Wednesday 02 June 2010] [12:46:29] <mato>  somewhere outside
| [Wednesday 02 June 2010] [12:46:38] <sustrik>   it's *COLD*
| [Wednesday 02 June 2010] [12:46:53] <mato>  is it? i thought not really
| [Wednesday 02 June 2010] [12:47:01] <sustrik>   14 degrees or something
| [Wednesday 02 June 2010] [12:47:18] <mato>  sustrik: ok how about randal? that has been and pizza
| [Wednesday 02 June 2010] [12:47:29] <mato>  sustrik: and no concert tonight, i just checked
| [Wednesday 02 June 2010] [12:47:33] <sustrik>   is it open now?
| [Wednesday 02 June 2010] [12:47:39] <mato>  yes, every day
| [Wednesday 02 June 2010] [12:47:47] <sustrik>   ok then
| [Wednesday 02 June 2010] [12:47:59] <mato>  see you there at half past seven then?
| [Wednesday 02 June 2010] [12:48:11] <sustrik>   more or less
| [Wednesday 02 June 2010] [12:48:20] <sustrik>   i have few emails to answer still
| [Wednesday 02 June 2010] [12:48:28] <mato>  ok
| [Wednesday 02 June 2010] [12:55:22] <cremes>    mato, sustrik: the zmq_poll rewording is fine
| [Wednesday 02 June 2010] [12:55:38] <sustrik>   ack
| [Wednesday 02 June 2010] [15:03:33] <lvh>   What's the recommended thing for debian stable packages?
| 
| *** Logfile started
| *** on Thu Jun 3 02:17:03 2010
| 
| [Thursday 03 June 2010] [02:17:03] Topic    The channel topic is "Welcome!".
| [Thursday 03 June 2010] [02:17:03] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Thursday 03 June 2010] [02:17:09] Mode Channel modes: no messages from outside, topic protection
| [Thursday 03 June 2010] [02:17:09] Created  This channel was created on 2010-02-05 10:44.
| 
| *** Logfile started
| *** on Thu Jun 3 02:24:46 2010
| 
| [Thursday 03 June 2010] [02:24:46] Topic    The channel topic is "Welcome!".
| [Thursday 03 June 2010] [02:24:46] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Thursday 03 June 2010] [02:24:52] Mode Channel modes: no messages from outside, topic protection
| [Thursday 03 June 2010] [02:24:52] Created  This channel was created on 2010-02-05 10:44.
| [Thursday 03 June 2010] [03:24:05] <sbeaulois_> hello
| [Thursday 03 June 2010] [03:27:05] <versificateur>  hello everyone!
| [Thursday 03 June 2010] [03:28:00] <versificateur>  I have some difficulties to reach messges sent by zeromq
| [Thursday 03 June 2010] [03:28:52] <versificateur>  when I connect to hosts other than localhost
| [Thursday 03 June 2010] [03:29:55] <versificateur>  the connection is opened but i get no message from the server
| [Thursday 03 June 2010] [03:30:42] <versificateur>  however it's works fine in local
| [Thursday 03 June 2010] [03:30:42] <guido_g>    show source in paste-bin
| [Thursday 03 June 2010] [03:31:00] <guido_g>    all other things are guessing :)
| [Thursday 03 June 2010] [03:34:14] <versificateur>  http://pastebin.com/5pWd2mFc
| [Thursday 03 June 2010] [03:34:25] <versificateur>  this is the server
| [Thursday 03 June 2010] [03:36:06] <versificateur>  http://pastebin.com/NvCZ3157
| [Thursday 03 June 2010] [03:36:25] <versificateur>  and the test i wrote based on pyzmq example
| [Thursday 03 June 2010] [03:37:42] <guido_g>    ok
| [Thursday 03 June 2010] [03:38:08] <guido_g>    can you check if the server is listening on all ips of the server?
| [Thursday 03 June 2010] [03:38:25] <guido_g>    on linux netstat would do the job
| [Thursday 03 June 2010] [03:38:34] <guido_g>    netstat -tanp
| [Thursday 03 June 2010] [03:38:46] <versificateur>  yes it's listening
| [Thursday 03 June 2010] [03:38:55] <sustrik>    i think the problem is that you exit the sender before it's able to send the message
| [Thursday 03 June 2010] [03:39:16] <sustrik>    try sleeping for a while before you exit the sender
| [Thursday 03 June 2010] [03:41:23] <versificateur>  but the same code works well when zeromq subscriber and publisher are on the same machine
| [Thursday 03 June 2010] [03:41:50] <guido_g>    yes, because there is no network involved, completely different behaviour
| [Thursday 03 June 2010] [03:41:53] <sustrik>    i assume that's because loopback is faster than inter-machine communication
| [Thursday 03 June 2010] [03:42:20] <sustrik>    so it local case the message manages to get through before the application quits
| [Thursday 03 June 2010] [03:43:01] <versificateur>  okay i'll try sleeping
| [Thursday 03 June 2010] [03:43:17] <versificateur>  after sendin??
| [Thursday 03 June 2010] [03:43:50] <guido_g>    yes
| [Thursday 03 June 2010] [03:44:07] <guido_g>    just to make sure that mq has time to send
| [Thursday 03 June 2010] [03:44:40] <versificateur>  i'll start with huge value and decrease gradually
| [Thursday 03 June 2010] [03:45:04] <sustrik>    one second should do
| [Thursday 03 June 2010] [03:50:15] <versificateur>  i tried with 5 second but received nothing
| [Thursday 03 June 2010] [03:52:10] <sustrik>    another possibility:
| [Thursday 03 June 2010] [03:52:30] <sustrik>    do you start the subscriber fast enough?
| [Thursday 03 June 2010] [03:52:43] <sustrik>    i see there's a sleep in the code to allow subscriber to connect
| [Thursday 03 June 2010] [03:53:16] <sustrik>    do you start it within 1 second after starting the publisher?
| [Thursday 03 June 2010] [03:54:40] <sustrik>    versificateur: let me explain how pub/sub is supposed to work
| [Thursday 03 June 2010] [03:55:08] <sustrik>    the idea is that publisher is a long-lived application that broadcast continuous stream of messages
| [Thursday 03 June 2010] [03:55:28] <sustrik>    the subscribers connect to the publisher and start receiving the stream at some point
| [Thursday 03 June 2010] [03:56:43] <versificateur>  it's what publisher do
| [Thursday 03 June 2010] [03:56:55] <versificateur>  my publisher do
| [Thursday 03 June 2010] [03:57:09] <sustrik>    does it run in loop?
| [Thursday 03 June 2010] [03:57:30]   * sustrik doesn't speak python
| [Thursday 03 June 2010] [03:57:45] <sustrik>    my impression is that it publishes a message and quits
| [Thursday 03 June 2010] [03:58:07] <sustrik>    rather than transmitting a continuous stream
| [Thursday 03 June 2010] [03:58:33] <versificateur>  not really . it open a connection (bind) 
| [Thursday 03 June 2010] [03:58:50] <versificateur>  and send every message
| [Thursday 03 June 2010] [03:59:17] <versificateur>  he receive from an upstream application
| [Thursday 03 June 2010] [04:00:20]   * sustrik is lost in the python code :)
| [Thursday 03 June 2010] [04:00:27] <sustrik>    where should i look for the loop?
| [Thursday 03 June 2010] [04:01:49] <sustrik>    it's clear up to line 34
| [Thursday 03 June 2010] [04:01:56] <sustrik>    then i get lost
| [Thursday 03 June 2010] [04:02:22] <versificateur>  http://pastebin.com/pdNkax6c
| [Thursday 03 June 2010] [04:02:44] <versificateur>  okay i'll resume basically what the application do
| [Thursday 03 June 2010] [04:03:06]   * sustrik is listening
| [Thursday 03 June 2010] [04:03:42] <versificateur>  it receive a GET request through a WSGI python server
| [Thursday 03 June 2010] [04:03:43] <guido_g>    ahhh it's running in web-server
| [Thursday 03 June 2010] [04:04:23] <versificateur>  yes it's the last code i send
| [Thursday 03 June 2010] [04:05:42] <versificateur>  but before running the WSGI server it start the zeromq publisher
| [Thursday 03 June 2010] [04:06:27] <versificateur>  with import bmpMessageHandler on line 4
| [Thursday 03 June 2010] [04:07:55] <sustrik>    ok, so it  does publish a continuous stream of messages
| [Thursday 03 June 2010] [04:08:28] <versificateur>  and everytime a GET request is send it run the method that send message
| [Thursday 03 June 2010] [04:08:28] <sustrik>    can you check whether there's data over the wire (tcpdump/wireshark)
| [Thursday 03 June 2010] [04:08:31] <sustrik>    ?
| [Thursday 03 June 2010] [04:08:48] <versificateur>  i'll try
| [Thursday 03 June 2010] [04:09:12] <versificateur>  on the publisher or subscriber?
| [Thursday 03 June 2010] [04:09:29] <sustrik>    should be the same
| [Thursday 03 June 2010] [04:09:34] <sustrik>    it's up to you
| [Thursday 03 June 2010] [05:35:23] <mikko>  good morning
| [Thursday 03 June 2010] [05:35:37] <mikko>  man it's hard to get back to work after hols
| [Thursday 03 June 2010] [05:36:07] <mikko>  sustrik: are there any upcoming changes to the polling api?
| [Thursday 03 June 2010] [05:36:25] <sustrik>    hi
| [Thursday 03 June 2010] [05:36:35] <sustrik>    you mean the waitfd thing?
| [Thursday 03 June 2010] [05:36:46] <mikko>  i mean the pollset changes 
| [Thursday 03 June 2010] [05:36:57] <sustrik>    ah, no
| [Thursday 03 June 2010] [05:36:59] <mikko>  adding / removing items to/from pollset
| [Thursday 03 June 2010] [05:37:00] <mikko>  ok
| [Thursday 03 June 2010] [05:37:06] <sustrik>    it'll stay as is in 2.0.7
| [Thursday 03 June 2010] [05:37:14] <mikko>  so making a pollset myself is a sensible thing to do
| [Thursday 03 June 2010] [05:37:24] <sustrik>    yes
| [Thursday 03 June 2010] [05:37:38] <mikko>  cool, because i wrote one some time ago
| [Thursday 03 June 2010] [05:37:44] <mikko>  just need to polish it and push in
| [Thursday 03 June 2010] [05:37:51] <sustrik>    great
| [Thursday 03 June 2010] [05:37:56] <mikko>  thanks
| [Thursday 03 June 2010] [05:38:12] <mikko>  a lot of improvements in 2.0.7
| [Thursday 03 June 2010] [05:41:29] <versificateur>  i finally locate the bug
| [Thursday 03 June 2010] [05:42:21] <versificateur>  it's in the deamon i run to start the WSGI server
| [Thursday 03 June 2010] [05:42:33] <versificateur>  i'l try to fix it
| [Thursday 03 June 2010] [05:42:43] <versificateur>  thanks sustrik
| [Thursday 03 June 2010] [05:43:04] <sustrik>    you are welcome
| [Thursday 03 June 2010] [05:43:48] <sustrik>    versificateur: is it an open source project you are working on?
| [Thursday 03 June 2010] [05:46:14] <versificateur>  not yet but it could become
| [Thursday 03 June 2010] [05:47:29] <sustrik>    if so, it would make sense to link it from zeromq.org site
| [Thursday 03 June 2010] [05:48:02] <sustrik>    webserver<->application server communication is a thing many people would love to use
| [Thursday 03 June 2010] [05:54:12] <versificateur>  of course... and i think it has a lot of sens in a JSON-like oriented data consumption world
| [Thursday 03 June 2010] [06:05:31] <sustrik>    ack
| [Thursday 03 June 2010] [06:06:28] <sustrik>    so if you go open source just ping me and i'll link to your project
| [Thursday 03 June 2010] [07:31:52] <umesh>  I wan to send multicast messages using zeromq 
| [Thursday 03 June 2010] [07:32:06] <umesh>  I wrote the sample code for send and recv 
| [Thursday 03 June 2010] [07:32:18] <umesh>  namely mc_send and mc_recv
| [Thursday 03 June 2010] [07:32:33] <umesh>  first I run mc_recv and then mc_send ...
| [Thursday 03 June 2010] [07:32:57] <umesh>  but message is sent properly from mc_send ... but not received in mc_recv
| [Thursday 03 June 2010] [07:33:27] <umesh>  then I add the delay of 15 seconds in mc_send between zmq_connect and zmq_send api
| [Thursday 03 June 2010] [07:33:41] <umesh>  then mc_recv the message correctly ...
| [Thursday 03 June 2010] [07:34:01] <umesh>  can anyone tell me why this delay of x seconds is required 
| [Thursday 03 June 2010] [07:34:36] <guido_g>    the message is put into the mq io-thread, which runs asynchronoulsly to the main thread
| [Thursday 03 June 2010] [07:34:59] <sustrik>    yea, but the receiver is run first
| [Thursday 03 June 2010] [07:35:05] <guido_g>    so if the main thread exits, the io-thread is terminated and therefore nothing is sent
| [Thursday 03 June 2010] [07:35:12] <sustrik>    ah
| [Thursday 03 June 2010] [07:35:27]   * sustrik forgot :)
| [Thursday 03 June 2010] [07:35:52] <sustrik>    umesh: that may be the problem
| [Thursday 03 June 2010] [07:36:07] <umesh>  guido_g : ok got ...
| [Thursday 03 June 2010] [07:36:14] <sustrik>    the 15 sec slep before send may not be required
| [Thursday 03 June 2010] [07:36:16] <guido_g>    it's sort of *the* standard problem
| [Thursday 03 June 2010] [07:36:21] <sustrik>    try sleeping after the send
| [Thursday 03 June 2010] [07:36:34] <umesh>  then is there any way to avoid the sleep ...
| [Thursday 03 June 2010] [07:36:36] <sustrik>    is it in faq?
| [Thursday 03 June 2010] [07:36:49] <guido_g>    don't know
| [Thursday 03 June 2010] [07:36:53] <sustrik>    umesh: sending in loop
| [Thursday 03 June 2010] [07:37:03] <umesh>  means how i can do io-thread synchronously ...
| [Thursday 03 June 2010] [07:37:15] <sustrik>    0mq is async
| [Thursday 03 June 2010] [07:37:25] <sustrik>    you can try using openpgm directly
| [Thursday 03 June 2010] [07:37:48] <umesh>  i want to do it using zeromq ..
| [Thursday 03 June 2010] [07:38:56] <sustrik>    sorry, it's inherently async (that's what MQ means = message queueing)
| [Thursday 03 June 2010] [07:39:16] <guido_g>    sustrik: nope, it's not in the faq
| [Thursday 03 June 2010] [07:39:17] <sustrik>    guido_g: no mention of it in FAQ
| [Thursday 03 June 2010] [07:39:20] <sustrik>    :)
| [Thursday 03 June 2010] [07:39:21] <guido_g>    :)
| [Thursday 03 June 2010] [07:39:27] <umesh>  one more question : does zeromq send the more than one packter for multicast ?
| [Thursday 03 June 2010] [07:39:44] <sustrik>    packet?
| [Thursday 03 June 2010] [07:40:12] <sustrik>    guido_g: let's think of a faq question...
| [Thursday 03 June 2010] [07:40:15] <umesh>  I am asking this because : when I have no sleep and no messages received ... I still can see some multicast messages in wireshark ...
| [Thursday 03 June 2010] [07:40:39] <sustrik>    those are SPM's right?
| [Thursday 03 June 2010] [07:40:51] <sustrik>    (check the details in wireshark)
| [Thursday 03 June 2010] [07:41:44] <umesh>  SPM means  ?
| [Thursday 03 June 2010] [07:41:52] <sustrik>    type of PGM packet
| [Thursday 03 June 2010] [07:42:13] <guido_g>    the protocol used to control the message flow
| [Thursday 03 June 2010] [07:42:23] <guido_g>    like the special packtes used by tcp
| [Thursday 03 June 2010] [07:42:46] <sustrik>    yesh, there are packets like SPM/NACK/NCF/ODATA/RDATA...
| [Thursday 03 June 2010] [07:43:19] <umesh>  ok
| [Thursday 03 June 2010] [07:43:55] <umesh>  how we can decide these are SPM packtes ? because wireshark does not tell anything related to SPM ...
| [Thursday 03 June 2010] [07:44:02] <sustrik>    guido_g: what avout thisL
| [Thursday 03 June 2010] [07:44:03] <sustrik>    "I send a message to PUB socket, then I quit. The message does not appear at the connected SUB socket. What's wrong?"
| [Thursday 03 June 2010] [07:44:08] <umesh>  like it does for TCP ACK/FIN etc ...
| [Thursday 03 June 2010] [07:44:17] <sustrik>    it should
| [Thursday 03 June 2010] [07:44:29] <sustrik>    PGM dissector is part of wireshark out-of-the-box
| [Thursday 03 June 2010] [07:44:40] <sustrik>    what does it say?
| [Thursday 03 June 2010] [07:44:57] <guido_g>    sustrik: ok, maybe  adding "using pgm/epgm"
| [Thursday 03 June 2010] [07:45:00] <sustrik>    umesh: ah, you are using epgm?
| [Thursday 03 June 2010] [07:45:10] <umesh>  yup
| [Thursday 03 June 2010] [07:45:16] <sustrik>    guido_g: it can happen with tcp as well
| [Thursday 03 June 2010] [07:45:40] <sustrik>    umesh: ah, that's encapsulated PGM, wireshark can dissect that
| [Thursday 03 June 2010] [07:45:42] <sustrik>    try using pgm
| [Thursday 03 June 2010] [07:45:47] <guido_g>    oh well, yes
| [Thursday 03 June 2010] [07:45:55] <sustrik>    (you'll have to run your apps as root)
| [Thursday 03 June 2010] [07:46:02] <guido_g>    i constantly forget that pub/sun is possible via tcp as well :)
| [Thursday 03 June 2010] [07:46:02] <umesh>  ok
| [Thursday 03 June 2010] [07:46:18] <sustrik>    what should the answer be?
| [Thursday 03 June 2010] [07:46:23] <umesh>  but does pgm or epgm has anything to do to related to sleep issue ?
| [Thursday 03 June 2010] [07:46:33] <guido_g>    no
| [Thursday 03 June 2010] [07:46:35] <sustrik>    no, it's the same thing
| [Thursday 03 June 2010] [07:46:36] <umesh>  or it will behave same for both pgm and epgm ?
| [Thursday 03 June 2010] [07:46:38] <sustrik>    almost
| [Thursday 03 June 2010] [07:46:40] <umesh>  ok
| [Thursday 03 June 2010] [07:46:58] <guido_g>    sustrik: what are differences (for mq usage)?
| [Thursday 03 June 2010] [07:47:16] <sustrik>    epgm doesn't have to be run as root
| [Thursday 03 June 2010] [07:47:23] <sustrik>    it's not a standard though
| [Thursday 03 June 2010] [07:47:38] <sustrik>    pgm has to be run as root but it's a standard (RFC3208)
| [Thursday 03 June 2010] [07:48:20] <sustrik>    the consequence, for example, is that wireshark can parse pgm but not epgm
| [Thursday 03 June 2010] [07:48:26] <guido_g>    or with the capabilities set, if you're not root :)
| [Thursday 03 June 2010] [07:48:31] <sustrik>    right
| [Thursday 03 June 2010] [07:49:18] <umesh>  (process:27705): Pgm-WARNING **: PGM protocol requires CAP_NET_RAW capability, e.g. sudo execcap 'cap_net_raw=ep'
| [Thursday 03 June 2010] [07:49:33] <umesh>  this error i am getting when I use pgm instead of epm ...
| [Thursday 03 June 2010] [07:49:33] <sustrik>    "yes
| [Thursday 03 June 2010] [07:49:44] <sustrik>    are you running it as root?
| [Thursday 03 June 2010] [07:49:55] <umesh>  i are run as root ... then no error 
| [Thursday 03 June 2010] [07:50:21] <sustrik>    the whole point is that PGM is defined to be stacked on top of IP directly
| [Thursday 03 June 2010] [07:50:28] <sustrik>    same way as TCP or UDP is
| [Thursday 03 June 2010] [07:50:51] <sustrik>    so the user-space implementation has to use raw IP sockets to implement it
| [Thursday 03 June 2010] [07:51:01] <umesh>  ok .. now its showing spm in wire shark
| [Thursday 03 June 2010] [07:51:03] <sustrik>    but these can be used only be root
| [Thursday 03 June 2010] [07:51:08] <sustrik>    ok
| [Thursday 03 June 2010] [07:51:14] <sustrik>    spm is like a heartbeat
| [Thursday 03 June 2010] [07:51:17] <sustrik>    more or less
| [Thursday 03 June 2010] [07:51:27] <sustrik>    so what happens is that you start the publisher
| [Thursday 03 June 2010] [07:51:32] <sustrik>    and sleep for 15 secs
| [Thursday 03 June 2010] [07:51:53] <sustrik>    during those 15 secs, publisher is sending SPMs once in a while
| [Thursday 03 June 2010] [07:52:02] <sustrik>    everything works as expected
| [Thursday 03 June 2010] [07:52:07] <sustrik>    then you send a message
| [Thursday 03 June 2010] [07:52:25] <sustrik>    but before it gets to the wire you shut down the publisher
| [Thursday 03 June 2010] [07:52:43] <sustrik>    that's it
| [Thursday 03 June 2010] [07:54:01] <umesh>  also this 15s is not predictable time 
| [Thursday 03 June 2010] [07:54:15] <umesh>  some time it can be more or sometime it can be less ...
| [Thursday 03 June 2010] [07:54:26] <sustrik>    it's your code, no?
| [Thursday 03 June 2010] [07:54:30] <umesh>  so what can be the ideal solution to avoid 15 s or sleep 
| [Thursday 03 June 2010] [07:54:30] <sustrik>    sleep (15);
| [Thursday 03 June 2010] [07:54:49] <sustrik>    drop the 15 sec sleep, it's not needed
| [Thursday 03 June 2010] [07:55:03] <sustrik>    what you need to do is to sleep _after_ you send the message
| [Thursday 03 June 2010] [07:55:14] <sustrik>    so the publisher has some time to push the message to the wire
| [Thursday 03 June 2010] [07:55:20] <umesh>  for how much time ?
| [Thursday 03 June 2010] [07:55:22] <umesh>  ok 
| [Thursday 03 June 2010] [07:55:25] <sustrik>    1 ms
| [Thursday 03 June 2010] [07:55:30] <sustrik>    or something
| [Thursday 03 June 2010] [07:55:37] <umesh>  got so even 1 ms will also work ... right eor even less ...
| [Thursday 03 June 2010] [07:55:53] <umesh>  eor* = or 
| [Thursday 03 June 2010] [07:55:54] <umesh>  ok
| [Thursday 03 June 2010] [07:55:56] <umesh>  got
| [Thursday 03 June 2010] [07:55:57] <sustrik>    the latency is in orders of microseconds
| [Thursday 03 June 2010] [07:56:12] <sustrik>    so millisecond should be more than enough
| [Thursday 03 June 2010] [07:58:35] <umesh>  even i micro seconds is also working now ...
| [Thursday 03 June 2010] [07:59:26] <umesh>  also more question ... are REQ/REPLY type of sockets in 0mq syncronous ?
| [Thursday 03 June 2010] [07:59:47] <umesh>  because I haven't seen this issue of sleep for that ...
| [Thursday 03 June 2010] [08:00:21] <sustrik>    they are not, but you cannot experience the problem simply because you wait for reply
| [Thursday 03 June 2010] [08:00:29] <sustrik>    so you cannot quit before the request was sent
| [Thursday 03 June 2010] [08:10:15] <umesh>  ok
| [Thursday 03 June 2010] [08:23:50] <lvh>    What's the recommended thing for debian stable packages?
| [Thursday 03 June 2010] [08:27:06] <mato>   sustrik: ping
| [Thursday 03 June 2010] [08:27:16] <lvh>    I'll compile it if I have to
| [Thursday 03 June 2010] [08:27:17] <mato>   sustrik: will the following do for an update of zmq_tcp(7) for 2.0.7?
| [Thursday 03 June 2010] [08:27:24] <mato>   The flags field consists of a single octet containing various control flags:
| [Thursday 03 June 2010] [08:27:24] <mato>   Bit 0: To Be Continued (TBC). A TBC value of 0 indicates that there are no more message parts to follow; or that the message being sent is not a multi-part message. A TBC value of 1 indicates that the message being sent is a multi-part message and more message parts are to follow.
| [Thursday 03 June 2010] [08:27:30] <mato>   Bits 1-7: Reserved. Bits 1-7 are reserved for future expansion and MUST be set to zero.
| [Thursday 03 June 2010] [08:27:57] <mato>   or do you want to actually explain it in more detail?
| [Thursday 03 June 2010] [08:28:31] <mato>   oh, and of course we can call it MORE if that's the canonical name, I just liked "TBC"
| [Thursday 03 June 2010] [08:37:12] <mato>   sustrik: are you there?
| [Thursday 03 June 2010] [08:50:29] <versificateur>  hi i've a problem again 
| [Thursday 03 June 2010] [08:51:00] <versificateur>  http://pastebin.com/QZJ672jT
| [Thursday 03 June 2010] [08:53:35] <versificateur>  i've this error -> Assertion failed: !inpipe && !outpipe (pair.cpp:47)
| [Thursday 03 June 2010] [08:55:08] <versificateur>  following the muttithread server sustrik wrote i tried to pass a SUBCRIBER message to a thread of P2P
| [Thursday 03 June 2010] [08:55:27] <versificateur>  but it seems that inproc doesn't accept P2P
| [Thursday 03 June 2010] [08:55:53] <versificateur>  if anyone has an idea ...???
| [Thursday 03 June 2010] [11:23:21] <versificateur>  is there anyone tohelp me?
| [Thursday 03 June 2010] [11:42:04] <cremes> versificateur: i'm not as fluent in C as i used to be, so keep that in mind...
| [Thursday 03 June 2010] [11:42:13] <cremes> lines 71 and 77 look wrong to me
| [Thursday 03 June 2010] [11:42:24] <cremes> i don't think you can use P2P/PAIR sockets with the queue device
| [Thursday 03 June 2010] [11:42:45] <cremes> i think you need to make your clients use REQ and your workers use REP sockets
| [Thursday 03 June 2010] [15:22:43] <sustrik>    mato: the text is OK IMO
| [Thursday 03 June 2010] [15:23:06] <sustrik>    MORE is used now, TBC sounded too much like a contagious disease
| [Thursday 03 June 2010] [16:13:02] <sustrik>    mato: would it be possible to remove pgm examples from the build system?
| [Thursday 03 June 2010] [18:15:01] <CIA-17> rbzmq: 03Brian Buchanan 07master * r72d81eb 10/ rbzmq.cpp : add ZMQ.select() wrapper for zmq_poll() function (+6 more commits...) - http://bit.ly/chNoHH
| [Thursday 03 June 2010] [22:02:46] Nick ivan`` is now known as ivan.
| [Thursday 03 June 2010] [23:03:23] Part flaguy48 has left this channel.
| 
| *** Logfile started
| *** on Fri Jun 4 03:05:54 2010
| 
| [Friday 04 June 2010] [03:05:54] Topic  The channel topic is "Welcome!".
| [Friday 04 June 2010] [03:05:54] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Friday 04 June 2010] [03:06:00] Mode   Channel modes: no messages from outside, topic protection
| [Friday 04 June 2010] [03:06:00] Created    This channel was created on 2010-02-05 10:44.
| [Friday 04 June 2010] [03:38:54] <lvh>  Hey.
| [Friday 04 June 2010] [03:39:06] <lvh>  What's the reccomended way to get ZeroMQ running on Debian stable?
| [Friday 04 June 2010] [03:39:30] <lvh>  I've tried manually downloading the libzmq0/zeromq packages, but they require a version of libuuid1 much higher than that in Debian 5.0.
| [Friday 04 June 2010] [03:39:54] <lvh>  Upgrade to testing?
| [Friday 04 June 2010] [04:09:07] <pieterh>  @lvh: grab the git and build from source
| [Friday 04 June 2010] [04:18:21] <lvh>  git master, or some other branch?
| [Friday 04 June 2010] [04:23:32] <sustrik>  lvh: depends on what you want
| [Friday 04 June 2010] [04:23:44] <sustrik>  officially released version is on branch 2.06
| [Friday 04 June 2010] [04:24:01] <sustrik>  trunk is going to be released shortly as version 2.0.7
| [Friday 04 June 2010] [04:44:04] <lvh>  So, for production use, just use the latest release branch. Okay, thanks :-)
| [Friday 04 June 2010] [04:50:51] <sustrik>  you are welcome
| [Friday 04 June 2010] [05:27:52] Part   jugg_ has left this channel.
| [Friday 04 June 2010] [05:29:49] Nick   jugg_ is now known as jugg.
| [Friday 04 June 2010] [06:58:20] <mato> re
| [Friday 04 June 2010] [06:58:34] <mato> sustrik: ack, ok, so MORE instead of TBC, you're right
| [Friday 04 June 2010] [06:58:54] <mato> sustrik: and as for the pgm examples, i'll happily remove those
| [Friday 04 June 2010] [07:38:11] <jugg> does multiple duplicate ZMQ_SUBSCRIBE keep a reference count and require ZMQ_UNSUBSCRIBE for each duplicate subscription?
| [Friday 04 June 2010] [07:46:15] <mato> it's in the doc for ZMQ_UNSUBSCRIBE:
| [Friday 04 June 2010] [07:46:21] <mato> If the socket has several instances of the same filter attached the ZMQ_UNSUBSCRIBE option shall remove only one instance, leaving the rest in place and functional.
| [Friday 04 June 2010] [08:14:50] <jugg> mato: somehow I missed that (I have no idea how).  thanks.
| [Friday 04 June 2010] [08:41:50] <sustrik>  mato: re
| [Friday 04 June 2010] [08:42:21] <mato> sustrik: hi
| [Friday 04 June 2010] [08:42:27] <sustrik>  hi
| [Friday 04 June 2010] [08:42:43] <mato> i have a problem with the helpers in that they need uint64_t, or long long
| [Friday 04 June 2010] [08:43:00] <mato> if i use long long C++ complains that it's not part of the standard :-(
| [Friday 04 June 2010] [08:43:19] <sustrik>  yes, include stdint.hpp
| [Friday 04 June 2010] [08:43:29] <sustrik>  it's ugly but it should work
| [Friday 04 June 2010] [08:43:34] <sustrik>  both under gcc and nsvc
| [Friday 04 June 2010] [08:43:36] <sustrik>  msvc
| [Friday 04 June 2010] [08:50:32] <mato> sustrik: zmqd annoys me, i don't think it should be in the 2.0.7 release at all
| [Friday 04 June 2010] [08:51:05] <sustrik>  you would like to remove it from the trunk?
| [Friday 04 June 2010] [08:51:26] <sustrik>  isn't it sufficient to just left it undocumented?
| [Friday 04 June 2010] [08:51:40] <mato> people will see that this "zmqd" thing is being built
| [Friday 04 June 2010] [08:51:44] <mato> and will get the wrong idea
| [Friday 04 June 2010] [08:52:08] <sustrik>  it has to get in once anyway
| [Friday 04 June 2010] [08:52:19] <sustrik>  either now or later
| [Friday 04 June 2010] [08:52:19] <mato> sustrik: d'you think we could remove it, make the release and then put it back? :-)
| [Friday 04 June 2010] [08:52:51] <mato> sustrik: or at least move it under devices/ and call it zmq_device or something vague like that
| [Friday 04 June 2010] [08:52:53] <sustrik>  if you care so much as to do the work, i won't object
| [Friday 04 June 2010] [08:53:19] <mato> sustrik: i'll do it, but what about the above option?
| [Friday 04 June 2010] [08:53:35] <mato> what is better?
| [Friday 04 June 2010] [08:53:41] <sustrik>  what would be the point?
| [Friday 04 June 2010] [08:53:48] <sustrik>  either leave it or remove it
| [Friday 04 June 2010] [08:53:54] <sustrik>  shrug
| [Friday 04 June 2010] [08:54:48] <mato> well the point is it should replace the existing devices...
| [Friday 04 June 2010] [08:55:20] <mato> the current situation will just confuse people
| [Friday 04 June 2010] [08:55:25] <mato> so let's remove it now
| [Friday 04 June 2010] [08:55:29] <mato> and put it back later
| [Friday 04 June 2010] [08:55:30] <mato> sustrik: ack?
| [Friday 04 June 2010] [08:55:44] <sustrik>  ack
| [Friday 04 June 2010] [09:01:14] <CIA-17>   zeromq2: 03Martin Lucina 07master * rd844a90 10/ (Makefile.am configure.in zmqd/Makefile.am zmqd/zmqd.cpp): zmqd: Removing for now, not ready for 2.0.7 (+6 more commits...) - http://bit.ly/9iefIH
| [Friday 04 June 2010] [09:08:11] <mato> sustrik: ok, all done and committed
| [Friday 04 June 2010] [09:08:16] <mato> sustrik: time to start breaking stuff
| [Friday 04 June 2010] [09:08:34] <sustrik>  ok
| [Friday 04 June 2010] [09:08:46] <sustrik>  let me remove the args from zmq_init
| [Friday 04 June 2010] [09:09:11] <mato> you do that, and remove all the deprecated stuff from zmq.h
| [Friday 04 June 2010] [09:09:21] <mato> and don't forget to update the perf tests
| [Friday 04 June 2010] [09:09:29] <sustrik>  and devices
| [Friday 04 June 2010] [09:09:31] <sustrik>  yes
| [Friday 04 June 2010] [09:24:20] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r67ca7dc 10/ (10 files in 6 dirs): obsolete API elements removed - this commit breaks backward compatibility - http://bit.ly/cLVjTO
| [Friday 04 June 2010] [09:24:25] <sustrik>  mato: done
| [Friday 04 June 2010] [09:24:30] <sustrik>  going to check on win32
| [Friday 04 June 2010] [09:24:46] <mato> sustrik: yup, i will check here on Linux, Solaris, NetBSD
| [Friday 04 June 2010] [09:35:50] <CIA-17>   zeromq2: 03Martin Lucina 07master * r621d741 10/ src/atomic_ptr.hpp : Fix Solaris/NetBSD breakage in atomic_ptr.hpp - http://bit.ly/c24C6Q
| [Friday 04 June 2010] [09:47:43] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r9279938 10/ (6 files in 6 dirs): MSVC build fixed - http://bit.ly/aNzO1F
| [Friday 04 June 2010] [09:50:59] <sustrik>  mato: msvc build is fixed
| [Friday 04 June 2010] [09:51:04] <mato> sustrik: great
| [Friday 04 June 2010] [09:51:09] <sustrik>  however, i believe it braks mingw build
| [Friday 04 June 2010] [09:51:15] <mato> why?
| [Friday 04 June 2010] [09:51:32] <sustrik>  i would expect some include files will be missing
| [Friday 04 June 2010] [09:51:46] <mato> huh?
| [Friday 04 June 2010] [09:52:06] <sustrik>  msvc build uses it's own platform.hpp
| [Friday 04 June 2010] [09:52:16] <sustrik>  which includes win socket headers
| [Friday 04 June 2010] [09:52:32] <sustrik>  this collided with #include <windows.h> in helpers.cpp
| [Friday 04 June 2010] [09:52:34] <sustrik>  so i removed it
| [Friday 04 June 2010] [09:52:51] <sustrik>  however, afaiu mingw build uses standard platform.hpp
| [Friday 04 June 2010] [09:52:54] <mato> can windows.h not be included 2x?
| [Friday 04 June 2010] [09:53:25] <sustrik>  iirc the point in that winsock has to be included _before_ windows.h
| [Friday 04 June 2010] [09:54:00] <mato> i have no idea how a "plain" mingw build works
| [Friday 04 June 2010] [09:54:08] <sustrik>  neither do i
| [Friday 04 June 2010] [09:54:15] <mato> and i suspect that no one does that, or if they do, we've never supported it explicity
| [Friday 04 June 2010] [09:54:33] <sustrik>  what about your win build?
| [Friday 04 June 2010] [09:54:48] <mato> given that a cross-build using mingw does work, then i see no reason for a native one not to
| [Friday 04 June 2010] [09:55:05] <mato> but yes, i should re-check that the cross build still works
| [Friday 04 June 2010] [09:55:10] <sustrik>  please, do
| [Friday 04 June 2010] [09:55:17] <sustrik>  i've changed the source
| [Friday 04 June 2010] [09:55:47] <mato> sustrik: in fact, maybe helpers.h should just include platform.hpp from ../src
| [Friday 04 June 2010] [09:55:54] <mato> would that work for msvc?
| [Friday 04 June 2010] [09:56:01] <sustrik>  i suppose so
| [Friday 04 June 2010] [09:56:53] <sustrik>  ok, change it that way and I retest with MSVC
| [Friday 04 June 2010] [09:57:58] <mato> sustrik: why did you change the snprintf in xmlParser back to sprintf?
| [Friday 04 June 2010] [09:58:40] <mato> sustrik: hang on
| [Friday 04 June 2010] [09:58:54] <mato> sustrik: why do you care about whether or not helpers.hpp includes windows.h?
| [Friday 04 June 2010] [09:58:59] <sustrik>  no snprintf in msvc
| [Friday 04 June 2010] [09:59:19] <sustrik>  because it breaks the build
| [Friday 04 June 2010] [09:59:28] <mato> i don't understand why
| [Friday 04 June 2010] [09:59:35] <mato> the perf tests do not use winsock
| [Friday 04 June 2010] [09:59:55] <sustrik>  but you'll get conflicts
| [Friday 04 June 2010] [10:00:03] <sustrik>  redefinition of symbols
| [Friday 04 June 2010] [10:00:15] <lvh>  Hey! I wanted to get Twisted support for 0MQ a while ago but that kind of fizzled out due to a combination of health problems and technical issues nobody agreed on. I'm going to try again because I think 0MQ support in Twisted would be good for both 0MQ and Twisted (duh). What I think was the critical point of failure was that the interested ZMQ folks didn't really understand Twisted's gory guts and vice versa (Twisted people not
| [Friday 04 June 2010] [10:00:15] <lvh>  understanding what ZMQ really wanted to do). I'm going to reopen the discussion on the Twisted side, but step one is educating people on just how ZMQ (wants to) work. Is there someone who could do a quick (less than 5m) review of the email I'm going to send to the TWisted mailing list to figure out if there are any grave technical mistakes in my understanding of ZMQ?
| [Friday 04 June 2010] [10:00:23] <lvh>  Wow, that was longer than I thought it was.
| [Friday 04 June 2010] [10:00:35] <mato> lvh: maybe it belongs on the mailing list? :-)
| [Friday 04 June 2010] [10:01:01] <lvh>  Which one?
| [Friday 04 June 2010] [10:01:06] <sustrik>  zeromq-dev
| [Friday 04 June 2010] [10:01:10] <sustrik>  i'll review it
| [Friday 04 June 2010] [10:01:17] <mato> sustrik: ah, you get these because stdint.hpp includes platform.hpp, which includes windows.h
| [Friday 04 June 2010] [10:01:17] <sustrik>  others may comment as well
| [Friday 04 June 2010] [10:01:20] <mato> sustrik: right?
| [Friday 04 June 2010] [10:01:24] <sustrik>  mato: right
| [Friday 04 June 2010] [10:01:40] <lvh>  sustrik: Good idea. I'll polish it up some more and then mail zeromq-dev :-)
| [Friday 04 June 2010] [10:01:42] <sustrik>  but i am sure the ordering also matters
| [Friday 04 June 2010] [10:01:51] <sustrik>  lvh: goodo
| [Friday 04 June 2010] [10:02:40] <mato> grr
| [Friday 04 June 2010] [10:02:52] <sustrik>  something like:
| [Friday 04 June 2010] [10:02:59] <sustrik>  #include <windows.h>
| [Friday 04 June 2010] [10:03:05] <sustrik>  #include <winsock2.h>
| [Friday 04 June 2010] [10:03:07] <sustrik>  fail
| [Friday 04 June 2010] [10:03:12] <sustrik>  other way round it's ok
| [Friday 04 June 2010] [10:03:21] <sustrik>  i may be wrong though
| [Friday 04 June 2010] [10:03:36] <sustrik>  it's just a dim memory of this kind of problem
| [Friday 04 June 2010] [10:03:36] <mato> i think you're doing the wrong thing with the msvc platform.hpp
| [Friday 04 June 2010] [10:03:43] <sustrik>  ?
| [Friday 04 June 2010] [10:03:47] <mato> it should not be including windows.h IMO
| [Friday 04 June 2010] [10:04:05] <sustrik>  what would you propose?
| [Friday 04 June 2010] [10:04:45] <mato> i would propose that winsock2.h and windows.h are included inside ifdefs by those components that actually use them
| [Friday 04 June 2010] [10:04:54] <mato> since that is what you're doing with all other system headers
| [Friday 04 June 2010] [10:04:58] <sustrik>  hm, that's lot of files
| [Friday 04 June 2010] [10:05:09] <sustrik>  but yes, it can work that way
| [Friday 04 June 2010] [10:05:21] <mato> yes, but that is consistent with all other platforms
| [Friday 04 June 2010] [10:05:25] <sustrik>  right
| [Friday 04 June 2010] [10:05:27] <sustrik>  let me do it
| [Friday 04 June 2010] [10:05:35] <sustrik>  see you in 10 mins
| [Friday 04 June 2010] [10:05:43] <mato> just stick it inside #ifdef _WIN32
| [Friday 04 June 2010] [10:05:45]     * sustrik is moving to winworld
| [Friday 04 June 2010] [10:10:41] <guido_g>  poor boy :)
| [Friday 04 June 2010] [10:30:11] <CIA-17>   zeromq2: 03Martin Sustrik 07master * rcf048bb 10/ (8 files in 3 dirs): platform.hpp for MSVC contains only very basic stuff - http://bit.ly/aLcqx0
| [Friday 04 June 2010] [10:31:56] <sustrik>  mato: done, try now
| [Friday 04 June 2010] [10:33:48] <mato> sustrik: trying...
| [Friday 04 June 2010] [10:36:50] <mato> sustrik: well, at least you haven't broken it on linux :)
| [Friday 04 June 2010] [10:38:01] <sustrik>  :)
| [Friday 04 June 2010] [10:42:16] <mato> sustrik: i get a bunch of warnings from the cross build about NOMINMAX being redefined in windows.hpp, those weren't there before
| [Friday 04 June 2010] [10:43:16] <sustrik>  try to fix it :)
| [Friday 04 June 2010] [10:43:33] <mato> what is NOMINMAX?
| [Friday 04 June 2010] [10:43:47] <sustrik>  this is exactly why i haven't dared to mess with helper functions :)
| [Friday 04 June 2010] [10:43:58] <sustrik>  windows defines it's own min and max
| [Friday 04 June 2010] [10:44:00] <sustrik>  as macros
| [Friday 04 June 2010] [10:44:10] <sustrik>  those collide with std::min and std::max
| [Friday 04 June 2010] [10:44:22] <sustrik>  so what you do is you define NOMINMAX
| [Friday 04 June 2010] [10:44:28] <sustrik>  then include windows.h
| [Friday 04 June 2010] [10:44:32] <mato> maybe it just needs a #ifndef NOMINMAX, #define 
| [Friday 04 June 2010] [10:44:36] <mato> let me try that
| [Friday 04 June 2010] [10:44:45] <sustrik>  this prevents definition of windows' min & max
| [Friday 04 June 2010] [10:46:52] <jugg> I have a REQ socket connected to an endpoint.  I send a message, and then wait in recv().  However, if the REP socket bound to the endpoint receives the message but dies/disconnects before sending the response, the REQ socket sits forever in recv() and never returns creating a dead lock.  Because when the REP socket comes back online, it doesn't have an requests in its queue so never sends a reply.
| [Friday 04 June 2010] [10:47:26] <sustrik>  jugg: yes, that's a known problem
| [Friday 04 June 2010] [10:47:39] <sustrik>  we are going to fix that by resending the request
| [Friday 04 June 2010] [10:48:14] <sustrik>  at the moment the only thing you can do to avoid it is to poll for reply (zmq_poll + timeout)
| [Friday 04 June 2010] [10:48:38] <sustrik>  when reply doesn't arrive in time just consider it lost and resend
| [Friday 04 June 2010] [10:48:50] <sustrik>  however, all this should be done inside 0mq
| [Friday 04 June 2010] [10:49:09] <sustrik>  it will, but it'll take some more time to get there
| [Friday 04 June 2010] [10:49:45] <jugg> ok, so a near-term fix isn't to be expected?
| [Friday 04 June 2010] [10:50:31] <sustrik>  mato: i would say you are going to implement it, within the scope of your current project, no?
| [Friday 04 June 2010] [10:50:50] <mato> sustrik: guess so
| [Friday 04 June 2010] [10:51:09]     * mato is fighting with the cross-build which is all broken :(
| [Friday 04 June 2010] [10:52:11] <sustrik>  jugg: looks like fix is to expected in near term
| [Friday 04 June 2010] [10:52:23] <jugg> :)
| [Friday 04 June 2010] [10:55:33] <mato> ah, my bad for not using the correct magic incantation
| [Friday 04 June 2010] [11:02:57] <CIA-17>   zeromq2: 03Martin Lucina 07master * r94dfe13 10/ src/windows.hpp : 
| [Friday 04 June 2010] [11:02:57] <CIA-17>   zeromq2: Fix MINGW build
| [Friday 04 June 2010] [11:02:57] <CIA-17>   zeromq2: Mingw seems to define NOMINMAX, so don't redefine it if already defined - http://bit.ly/9k7J9l
| [Friday 04 June 2010] [11:03:31] <mato> sustrik: ok, the cross build almost works; requires hand-patching a pgm include file because steven messed up, but i guess we don't care about that right now
| [Friday 04 June 2010] [11:03:47] <mato> sustrik: and AFAIK steven doesn't care about v2 of openpgm anyway
| [Friday 04 June 2010] [11:04:09] <mato> i just looked and he seems to be developing a version 3 *and* a version 5 :-)
| [Friday 04 June 2010] [11:04:36] <sustrik>  yes, ok
| [Friday 04 June 2010] [11:04:46] <sustrik>  what next?
| [Friday 04 June 2010] [11:05:01] <mato> let me think
| [Friday 04 June 2010] [11:05:12] <mato> 1. write up a draft of the release announcement
| [Friday 04 June 2010] [11:05:34] <mato> 2. put that into NEWS in the distro, moving the non-changelog bits also out of ChangeLog and into NEWS
| [Friday 04 June 2010] [11:06:02] <mato> 3. check that the Debian packaging is sane and put myself in as maintainer
| [Friday 04 June 2010] [11:06:14] <mato> I think that's all; then we can release
| [Friday 04 June 2010] [11:07:24] <sustrik>  ok, i can do 1
| [Friday 04 June 2010] [11:07:29] <mato> yes please
| [Friday 04 June 2010] [11:07:33] <mato> I will do 2 in the mean time
| [Friday 04 June 2010] [11:07:50] <mato> when you have a draft of 1 stick it at the top of NEWS and I'll review it
| [Friday 04 June 2010] [11:07:54] <mato> ack?
| [Friday 04 June 2010] [11:08:48] <sustrik>  ack
| [Friday 04 June 2010] [11:13:14] <CIA-17>   zeromq2: 03Martin Lucina 07master * rbaf659f 10/ (ChangeLog NEWS): Move news from ChangeLog into NEWS - http://bit.ly/dDsRc0
| [Friday 04 June 2010] [11:13:27] <mato> sustrik: look at NEWS, model what you write on the same as is there for 2.0.6
| [Friday 04 June 2010] [11:13:34] <mato> leaving out the bits that don't apply
| [Friday 04 June 2010] [11:44:57] <mato> sustrik: how are you getting on?
| [Friday 04 June 2010] [11:45:25] <mato> sustrik: the debian packaging will have to follow next week, i have a bunch of questions i need to ask adrian
| [Friday 04 June 2010] [11:45:34] <mato> sustrik: since i'm not quite sure that i've got the workflow right
| [Friday 04 June 2010] [11:45:53] <mato> sustrik: so as soon as we have a release announcement we're good to go
| [Friday 04 June 2010] [11:50:55] <sustrik>  on phone
| [Friday 04 June 2010] [11:51:01] <sustrik>  wait a sec
| [Friday 04 June 2010] [11:51:07] <mato> no problem
| [Friday 04 June 2010] [11:59:55] <jugg> http://www.zeromq.org/bindings:c  "C++ binding is the native API of MQ project"  ?
| [Friday 04 June 2010] [12:00:24] <mato> ah, that should be changed
| [Friday 04 June 2010] [12:00:32] <mato> the C API is the "native" API
| [Friday 04 June 2010] [12:00:50] <mato> I think what sustrik meant is that the "C++ binding is included with the core 0MQ distribution"
| [Friday 04 June 2010] [12:01:49] <mato> oh, i see
| [Friday 04 June 2010] [12:01:52] <mato> i'll fix it
| [Friday 04 June 2010] [12:26:15] <sustrik>  mato: re
| [Friday 04 June 2010] [12:26:47] <mato> sustrik: i'm still here...
| [Friday 04 June 2010] [12:27:00] <sustrik>  ok, back to announcement :)
| [Friday 04 June 2010] [12:27:03] <mato> waiting for your draft of what goes in NEWS for 2.0.7
| [Friday 04 June 2010] [12:27:09] <mato> then i will review and add my stuff
| [Friday 04 June 2010] [12:27:13] <sustrik>  ack
| [Friday 04 June 2010] [12:27:44] <sustrik>  what NEWS are you speaking about?
| [Friday 04 June 2010] [12:27:51] <sustrik>  the file seems to be empty
| [Friday 04 June 2010] [12:27:55] <mato> pull git
| [Friday 04 June 2010] [12:28:14] <mato> sustrik: I moved the "interesting" text from ChangeLog into NEWS
| [Friday 04 June 2010] [12:28:26] <mato> leaving the ChangeLog with just... the changes :-)
| [Friday 04 June 2010] [12:28:36] <sustrik>  got it
| [Friday 04 June 2010] [12:31:23] <lvh>  I've sent that mail to zeromq-dev if anyone's interested
| [Friday 04 June 2010] [12:31:40] <lvh>  (but email is an asynchronous process, this is a notification not an interrupt ;-))
| [Friday 04 June 2010] [12:31:49] <sustrik>  mato: pt1
| [Friday 04 June 2010] [12:31:50] <sustrik>  * Multi-hop REQ/REP pattern is fully supprted. This feature allows to put
| [Friday 04 June 2010] [12:31:50] <sustrik>    a device(s) between REP and REP sockets thus allowing for scenarios like
| [Friday 04 June 2010] [12:31:50] <sustrik>    multi-threaded server, shared service queue etc. The whole infrastructure
| [Friday 04 June 2010] [12:31:50] <sustrik>    is transparent to the applications.
| [Friday 04 June 2010] [12:32:27] <lvh>  Huh, I'm not longer a member so I need moderator approval. Wonder how that happened.
| [Friday 04 June 2010] [12:32:37] <sustrik>  lvh: i've approved you
| [Friday 04 June 2010] [12:32:41] <sustrik>  your email
| [Friday 04 June 2010] [12:32:59] <sustrik>  maybe you are subscribed with a different email address?
| [Friday 04 June 2010] [12:33:36] <sustrik>  where's part 1 btw?
| [Friday 04 June 2010] [12:33:38] <lvh>  No, I just checked, for some reason I unsubscribed. No idea why, I don't remember doing that
| [Friday 04 June 2010] [12:33:52] <lvh>  sustrik: Well, that was a month or so back when we were talking about how to implement it
| [Friday 04 June 2010] [12:33:56] <lvh>  that fizzled out
| [Friday 04 June 2010] [12:33:59] <sustrik>  ah, i see
| [Friday 04 June 2010] [12:34:04] <mato> sustrik: write it all up, put it in git, i will review it there
| [Friday 04 June 2010] [12:34:04] <lvh>  so it should really be "try 2" not "part 2"
| [Friday 04 June 2010] [12:34:13] <mato> sustrik: pizza has just arrived, am going to eat, brb
| [Friday 04 June 2010] [12:34:13] <sustrik>  mato: ok
| [Friday 04 June 2010] [12:34:33] <lvh>  Whaaa? now mailman is telling me the confirmation string is bad
| [Friday 04 June 2010] [12:34:52] <lvh>  Oh, wiat, never mind, I'm just being an idiot.
| [Friday 04 June 2010] [12:35:01] <sustrik>  :)
| [Friday 04 June 2010] [12:35:55] <jugg> is there any benefits/tradeoffs documentation/discussion on io_threads?
| [Friday 04 June 2010] [12:36:37] <lvh>  I don't know ZMQ but I know the mechanics it uses
| [Friday 04 June 2010] [12:36:56] <lvh>  I really don't see why you would ever want 2 io_threads unless you can somehow shove long-term blocking disk io into the io thread
| [Friday 04 June 2010] [12:37:30] <lvh>  which afaik doesn't happen very often (does it?)
| [Friday 04 June 2010] [12:37:42] <sustrik>  lvh: two possibilities
| [Friday 04 June 2010] [12:37:54] <sustrik>  1. if your app is extremely network I/O intensive
| [Friday 04 June 2010] [12:38:07] <sustrik>  2. if you need extra low latency
| [Friday 04 June 2010] [12:38:15] <lvh>  I can sort-of understand 2
| [Friday 04 June 2010] [12:38:27] <lvh>  I don't understand why eg epoll would start behaving better for 1
| [Friday 04 June 2010] [12:38:36] <sustrik>  in latter case running i/o threads on two different cpu cores can prevent latency peaks
| [Friday 04 June 2010] [12:38:51] <lvh>  yep
| [Friday 04 June 2010] [12:38:57] <sustrik>  it's not about epoll
| [Friday 04 June 2010] [12:39:13] <lvh>  It's about 1 CPU moving stuff around vs 2 CPUs doing that?
| [Friday 04 June 2010] [12:39:19] <sustrik>  rather about the associated work (such as copying data from kernel to user space)
| [Friday 04 June 2010] [12:39:24] <lvh>  right
| [Friday 04 June 2010] [12:39:37] <lvh>  I guess, I haven't done the benchmarks and I'm assuming you have :)
| [Friday 04 June 2010] [12:39:44] <sustrik>  yes :)
| [Friday 04 June 2010] [12:40:05] <lvh>  is there a way to shove blocking disk IO into the io thread in zmq?
| [Friday 04 June 2010] [12:40:09] <lvh>  I mean a *sane* way.
| [Friday 04 June 2010] [12:41:46] <lvh>  Oh, by the way: how does "Is fully distributed: no central servers to crash, millions of WAN and LAN nodes." apply to things like zmq_forwarder/zmq_queue? AFAICT it doesn't, really?
| [Friday 04 June 2010] [12:42:03] <lvh>  My use case involves decoupling M producers from N consumers. That's what we use AMQP for now.
| [Friday 04 June 2010] [12:45:58] <lvh>  (The three things blocking us from moving to ZeroMQ at the moment are: it doesn't do Twisted yet, Thrift support uncertain for a lot of implementations (even though that's more of a Thrift problem than a ZeroMQ problem), and reliable delivery is a bit hazy)
| [Friday 04 June 2010] [12:50:07] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r9b8f902 10/ NEWS : initial version of 2.0.7 NEWS - http://bit.ly/a8mp7Z
| [Friday 04 June 2010] [12:50:23] <sustrik>  mato: committed "new features" and "interface"
| [Friday 04 June 2010] [12:50:35] <sustrik>  i'll leave "build" part to you
| [Friday 04 June 2010] [12:51:14] <sustrik>  lvh: yes, forwarder/queue is meant
| [Friday 04 June 2010] [12:51:30] <mato> sustrik: ok, going to look at it now
| [Friday 04 June 2010] [12:51:38] <sustrik>  these are not real "central servers"
| [Friday 04 June 2010] [12:51:42] <sustrik>  rather dumb routers
| [Friday 04 June 2010] [12:52:00] <sustrik>  what's thrift?
| [Friday 04 June 2010] [12:52:28] <lvh>  sustrik: Do you know Protocol Buffers?
| [Friday 04 June 2010] [12:52:38] <sustrik>  yes
| [Friday 04 June 2010] [12:52:42] <lvh>  sustrik: Basically, Thrift is something that you describe data structures and services to
| [Friday 04 June 2010] [12:52:44] <lvh>  sustrik: Oh, even better
| [Friday 04 June 2010] [12:52:49] <lvh>  sustrik: thrift = protobufs + rpc
| [Friday 04 June 2010] [12:52:54] <sustrik>  ok, got it
| [Friday 04 June 2010] [12:53:05] <lvh>  sustrik: you describe services and it generates code for a whole bunch of languages
| [Friday 04 June 2010] [12:53:09] <sustrik>  what does it have to do with 0mq?
| [Friday 04 June 2010] [12:53:25] <lvh>  sustrik: it's not 0mq's problem, but I want to put the binary format in zmq messages
| [Friday 04 June 2010] [12:53:31] <sustrik>  can the transport layer be migrated to whatever messaging implementation you like?
| [Friday 04 June 2010] [12:53:37] <lvh>  sustrik: a lot of thrift bindings dont give you the format directly
| [Friday 04 June 2010] [12:53:43] <lvh>  sustrik: yes unless those implementations suck
| [Friday 04 June 2010] [12:53:49] <lvh>  sustrik: like I said, that's not 0mq's problem
| [Friday 04 June 2010] [12:53:53] <sustrik>  ok, i see
| [Friday 04 June 2010] [12:54:01] <sustrik>  reliability: yes
| [Friday 04 June 2010] [12:54:04] <lvh>  sustrik: they just hook it directly into their service code
| [Friday 04 June 2010] [12:54:17] <sustrik>  it'll get better soon though
| [Friday 04 June 2010] [12:54:40] <lvh>  the python thrift code does the right thing, it essentially gives you objects that have serialization methods that return raw bytestrings
| [Friday 04 June 2010] [12:54:50] <lvh>  "raw" makes no sense there, you get the idea
| [Friday 04 June 2010] [12:55:05] <sustrik>  sure
| [Friday 04 June 2010] [12:55:09] <lvh>  sustrik: Cool :-) We can wait, AMQP works fine in production now anywya
| [Friday 04 June 2010] [12:57:24] <mato> sustrik: put devices between REP and REP sockets, you mean REQ and REP sockets?
| [Friday 04 June 2010] [13:01:11] <sustrik>  mato: yes
| [Friday 04 June 2010] [13:01:17] <sustrik>  typo
| [Friday 04 June 2010] [13:03:30] <sustrik>  mato: i have to leave now
| [Friday 04 June 2010] [13:03:39] <sustrik>  anything else i should do?
| [Friday 04 June 2010] [13:04:14] <mato> sustrik: well, if you're happy with me uploading everything and sending out the release announcement, then no
| [Friday 04 June 2010] [13:04:29] <sustrik>  great
| [Friday 04 June 2010] [13:04:40] <mato> ok then
| [Friday 04 June 2010] [13:04:51] <sustrik>  just a note
| [Friday 04 June 2010] [13:04:58] <sustrik>  when sending an announcement
| [Friday 04 June 2010] [13:05:00] <mato> yes?
| [Friday 04 June 2010] [13:05:23] <sustrik>  note that API/ABI have changed and that it may take few days for language bindings to catch up
| [Friday 04 June 2010] [13:05:38] <mato> yes, good point
| [Friday 04 June 2010] [13:06:03] <mato> i'm changing your text a bit, do you mind?
| [Friday 04 June 2010] [13:07:14] <sustrik>  sure, do so
| [Friday 04 June 2010] [13:07:15] <versificateur>    hello
| [Friday 04 June 2010] [13:07:19] <sustrik>  leaving now
| [Friday 04 June 2010] [13:07:22] <sustrik>  see you  later
| [Friday 04 June 2010] [13:07:24] <mato> see you
| [Friday 04 June 2010] [13:08:25] <versificateur>    does the java bindings (jzmq) support rcv multipart??
| [Friday 04 June 2010] [13:08:54] <versificateur>    mato:??
| [Friday 04 June 2010] [13:09:03] <versificateur>    sustrik:??
| [Friday 04 June 2010] [13:09:12] <mato> versificateur: i don't use jzmq, sorry
| [Friday 04 June 2010] [13:09:23] <mato> but there's no reason why it shouldn't
| [Friday 04 June 2010] [13:09:43] <versificateur>    :( thanks
| [Friday 04 June 2010] [13:10:06] <mato> versificateur: if it doesn't work then report a bug :)
| [Friday 04 June 2010] [13:10:48] <versificateur>    okay 
| [Friday 04 June 2010] [13:21:04] <CIA-17>   zeromq2: 03Martin Lucina 07master * re8a9614 10/ NEWS : Update NEWS for 2.0.7 release - http://bit.ly/9Hb3hZ
| [Friday 04 June 2010] [13:31:05] <CIA-17>   zeromq2: 03Martin Lucina 07master * r5c97ff9 10/ NEWS : More NEWS for 2.0.7 - http://bit.ly/cwE7pj
| [Friday 04 June 2010] [13:31:05] <CIA-17>   zeromq2: 03Martin Lucina 07master * r8f51a10 10/ ChangeLog : Update ChangeLog for v2.0.7 - http://bit.ly/cgL2VL
| [Friday 04 June 2010] [14:35:19] <versificateur>    please could you tell what this error refer to??
| [Friday 04 June 2010] [14:35:25] <versificateur>    Assertion failed: !inpipe && !outpipe (pair.cpp:47)
| [Friday 04 June 2010] [23:07:13] <jugg> I'm getting a Segmentation fault from within the first time I call zmq::poll, I haven't put it through a debugger yet...
| [Friday 04 June 2010] [23:08:56] <jugg> is pollitem_t[n].socket expecting a socket pointer?
| [Friday 04 June 2010] [23:09:45] <jugg> hmm, apparently not, nevermind.
| [Saturday 05 June 2010] [00:52:56] <CIA-17> rbzmq: 03Brian Buchanan 07master * ra5e4d99 10/ rbzmq.cpp : fix some type-checking bugs in ZMQ.select() - http://bit.ly/bQsfwP
| [Saturday 05 June 2010] [01:21:17] <CIA-17> rbzmq: 03Brian Buchanan 07master * rd11835f 10/ (rbzmq.cpp zmq.gemspec): Update for ZeroMQ 2.0.7 - http://bit.ly/bIgwVj
| [Saturday 05 June 2010] [01:22:58] <CIA-17> rbzmq: 03Brian Buchanan 07master * rcb96877 10/ (4 files): Update perf tests for 2.0.7 - http://bit.ly/bKk2zC
| [Saturday 05 June 2010] [04:08:50] Nick Nickname already in use. Trying palexander.
| [Saturday 05 June 2010] [04:08:52] Notice   -NickServ- palexander is not a registered nickname.
| [Saturday 05 June 2010] [04:08:52] CTCP Received Version request from frigg.
| [Saturday 05 June 2010] [04:08:53] Topic    The channel topic is "Welcome!".
| [Saturday 05 June 2010] [04:08:53] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Saturday 05 June 2010] [04:08:59] Mode Channel modes: no messages from outside, topic protection
| [Saturday 05 June 2010] [04:08:59] Created  This channel was created on 2010-02-05 10:44.
| [Saturday 05 June 2010] [04:09:02] Notice   -ChanServ- [#rekonq] welcome to rekonq, webkit KDE browser, channel
| [Saturday 05 June 2010] [06:03:23] <oleg_>  hello
| [Saturday 05 June 2010] [07:48:11] <zeromqer>   hey, i'm having some problems following first recipe on the cookbook
| [Saturday 05 June 2010] [07:48:32] <zeromqer>   http://dpaste.com/203476/
| [Saturday 05 June 2010] [07:49:35] <zeromqer>   compiles, and starts up and creates two threads, but doesn't seem to respond to anything
| [Saturday 05 June 2010] [07:50:03] <zeromqer>   also the first fprint doesn't print when i include zmq_recv later on
| [Saturday 05 June 2010] [08:06:27] <jugg>   zeromqer: what version of zeromq are you using?
| [Saturday 05 June 2010] [08:10:15] <zeromqer>   jugg: master from the git repo right now
| [Saturday 05 June 2010] [08:10:51] <zeromqer>   had to change the zmq_inits to use just a single parameter from the pastie
| [Saturday 05 June 2010] [08:12:38] <jugg>   can you paste the REQ handler code?
| [Saturday 05 June 2010] [08:18:53] <zeromqer>   jugg: here's the updated code for both: http://dpaste.com/203484/
| [Saturday 05 June 2010] [08:20:41] <jugg>   does this actually work: zmq_connect(s, "tcp://*:9555");
| [Saturday 05 June 2010] [08:21:06] <mikko>  zmq_connect(s, "tcp://*:9555");
| [Saturday 05 June 2010] [08:21:12] <mikko>  i dont think it does
| [Saturday 05 June 2010] [08:21:17] <mikko>  try specifying ip
| [Saturday 05 June 2010] [08:21:37] <mikko>  does *:9995 bind ok?
| [Saturday 05 June 2010] [08:21:44] <jugg>   there is an assert after binding
| [Saturday 05 June 2010] [08:21:45] <mikko>  i would imagine that it is 0.0.0.0:9995
| [Saturday 05 June 2010] [08:22:36] <zeromqer>   yeah, the assert gives no issues
| [Saturday 05 June 2010] [08:22:52] <zeromqer>   mikko: but i did just try specifying my ip and still no luck
| [Saturday 05 June 2010] [08:23:02] <jugg>   127.0.0.1 ?
| [Saturday 05 June 2010] [08:23:36] <zeromqer>   jugg: yeah, both that and my eth0 ip
| [Saturday 05 June 2010] [08:23:39] <mikko>  and no firewall in between?
| [Saturday 05 June 2010] [08:23:50] <zeromqer>   same computer :P
| [Saturday 05 June 2010] [08:23:59] <mikko>  eth0 might still be firewalled
| [Saturday 05 June 2010] [08:24:26] <jugg>   nothing else jumps out, try "inproc://test" instead.
| [Saturday 05 June 2010] [08:24:28] <zeromqer>   oh, good point. but yeah, no firewall on my machine
| [Saturday 05 June 2010] [08:24:39] <zeromqer>   ah, hm.. good idea
| [Saturday 05 June 2010] [08:26:35] <zeromqer>   jugg: assert fails on the client when i use "inproc://test", anything special i should be doing?
| [Saturday 05 June 2010] [08:27:37] <mikko>  try icp:///tmp/test.sock instead
| [Saturday 05 June 2010] [08:27:47] <mikko>  i had some problems with inproc some time ago as well
| [Saturday 05 June 2010] [08:28:13] <zeromqer>   opps, yeah, i was running them as separate processes anyway... switching to ipc
| [Saturday 05 June 2010] [08:30:42] <zeromqer>   mikko: and now the server bind assert fails... (using "icp:///tmp/test.sock")
| [Saturday 05 June 2010] [08:31:43] <zeromqer>   does zmq_bind set any error messages?
| [Saturday 05 June 2010] [08:33:18] <mikko>  use zmq_strerror
| [Saturday 05 June 2010] [08:35:45] <zeromqer>   ha, "Error occurred during zmq_init(): Protocol not supported"
| [Saturday 05 June 2010] [08:37:13] <zeromqer>   any chance i configured zmq wrong?
| [Saturday 05 June 2010] [08:40:47] <sustrik>    ipc
| [Saturday 05 June 2010] [08:40:49] <sustrik>    not icp
| [Saturday 05 June 2010] [08:44:09] <mikko>  sorry 
| [Saturday 05 June 2010] [08:44:11] <mikko>  my typo
| [Saturday 05 June 2010] [08:50:22] <zeromqer>   mikko: ha, well it survived past both of us! thanks sustrik
| [Saturday 05 June 2010] [08:50:35] <zeromqer>   anyway... server runs, client immediately segfaults
| [Saturday 05 June 2010] [08:51:17] <zeromqer>   here's a backtrace: http://dpaste.com/203497/
| [Saturday 05 June 2010] [08:51:56] <sustrik>    zeromqer: what are you doing?
| [Saturday 05 June 2010] [08:52:40] <sustrik>    looks like you are passing invalid message to recv function
| [Saturday 05 June 2010] [08:52:46] <zeromqer>   hm..
| [Saturday 05 June 2010] [08:54:02] <zeromqer>   sustrik: sweet, i commented out that section and got some communication between server and client
| [Saturday 05 June 2010] [08:57:19] <zeromqer>   does anything look really wrong in section? http://dpaste.com/203498/ (last two stanzas are what i commented out)
| [Saturday 05 June 2010] [09:00:25] <sustrik>    you don't initialise the message
| [Saturday 05 June 2010] [09:00:36] <sustrik>    zmq_msg_init (&response);
| [Saturday 05 June 2010] [09:06:47] <zeromqer>   sustrik: argh.. initialized now, and all working, thanks
| [Saturday 05 June 2010] [09:07:07] <zeromqer>   my only issue is that the now working code over ipc still does nothing over tcp
| [Saturday 05 June 2010] [09:07:49] <sustrik>    show us your test prog
| [Saturday 05 June 2010] [09:11:40] <CIA-17> jzmq: 03Martin Sustrik 07master * r1a16589 10/ (7 files in 3 dirs): updated to match 0MQ/2.0.7 - http://bit.ly/bWgan8
| [Saturday 05 June 2010] [09:11:48] <zeromqer>   sustrik: server.c http://dpaste.com/203503/ and client.c http://dpaste.com/203504/
| [Saturday 05 June 2010] [09:13:40] <zeromqer>   also, if i interrupt them both with gdb, i get an equivalent backtrace: http://dpaste.com/203505/
| [Saturday 05 June 2010] [09:13:52] <sustrik>    zeromqer: you are connecting both sides
| [Saturday 05 June 2010] [09:13:56] <sustrik>    server should bind
| [Saturday 05 June 2010] [09:14:29] <zeromqer>   what? srsly?
| [Saturday 05 June 2010] [09:14:34] <zeromqer>   typo, brb
| [Saturday 05 June 2010] [09:14:48] <sustrik>    jugg: are you still there?
| [Saturday 05 June 2010] [09:14:51] <sustrik>    what assert?
| [Saturday 05 June 2010] [09:15:16] <zeromqer>   works great now!
| [Saturday 05 June 2010] [09:15:20] <sustrik>    :)
| [Saturday 05 June 2010] [09:15:26] <zeromqer>   thanks so much guys
| [Saturday 05 June 2010] [09:15:45] <zeromqer>   sorry if i was a pain, i'm a bit in unfamiliar territory...
| [Saturday 05 June 2010] [09:16:05] <sustrik>    you are welcome
| [Saturday 05 June 2010] [09:16:33] <jugg>   sustrik: yes, the assert in the code example that was pasted.
| [Saturday 05 June 2010] [09:17:36] <sustrik>    i'm lost
| [Saturday 05 June 2010] [09:17:43] <sustrik>    are _you_ seeing the assert?
| [Saturday 05 June 2010] [09:17:56] <sustrik>    or is it zeromqer's assert?
| [Saturday 05 June 2010] [09:18:26] <sustrik>    <mikko> does *:9995 bind ok?
| [Saturday 05 June 2010] [09:18:26] <sustrik>    <jugg> there is an assert after binding
| [Saturday 05 June 2010] [09:18:26] <sustrik>    <mikko> i would imagine that it is 0.0.0.0:9995
| [Saturday 05 June 2010] [09:18:26] <sustrik>    <zeromqer> yeah, the assert gives no issues
| [Saturday 05 June 2010] [09:19:02] <sustrik>    is it the one we just solved or something unrelated
| [Saturday 05 June 2010] [09:19:03] <sustrik>    ?
| [Saturday 05 June 2010] [09:24:11] <jugg>   sustrik: I was simply stating that if the binding failed, zeromqer would see an assert.  I never ran that code.
| [Saturday 05 June 2010] [09:24:30] <sustrik>    ah, ok
| [Saturday 05 June 2010] [09:24:37] <sustrik>    sorry for confusion
| [Saturday 05 June 2010] [09:24:43] <jugg>   np
| [Saturday 05 June 2010] [09:25:56] <jugg>   nice work with the latest round of updates.  Things appear to be working well... the documentation updates are great.  I should have waited a couple of weeks to start learning. :P
| [Saturday 05 June 2010] [09:28:03] <zeromqer>   sustrik: jugg: *:9995 works as well btw, it was all my fault from the beginning :P
| [Saturday 05 June 2010] [09:31:20] <sustrik>    :)
| [Saturday 05 June 2010] [10:05:47] <CIA-17> clrzmq: 03Martin Sustrik 07master * rf8bfa69 10/ (5 files in 5 dirs): updated to match 0MQ/2.0.7 - http://bit.ly/dlnSkU
| 
| *** Logfile started
| *** on Sat Jun 5 12:56:55 2010
| 
| [Saturday 05 June 2010] [12:56:55] Topic    The channel topic is "Welcome!".
| [Saturday 05 June 2010] [12:56:55] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Saturday 05 June 2010] [12:57:01] Mode Channel modes: no messages from outside, topic protection
| [Saturday 05 June 2010] [12:57:01] Created  This channel was created on 2010-02-05 10:44.
| [Saturday 05 June 2010] [12:57:42] <versificateur>  I want to have a server that send message to a list of clients
| [Saturday 05 June 2010] [12:58:44] <versificateur>  but the problem is that client/ server should work without blocking
| [Saturday 05 June 2010] [12:59:09] <versificateur>  when a client send a REQ
| [Saturday 05 June 2010] [12:59:38] <versificateur>  it should be able to send another REQ without leavaing an exception
| [Saturday 05 June 2010] [13:00:22] <versificateur>  due to fact that server can take some times to reply the client
| [Saturday 05 June 2010] [13:00:41] <versificateur>  mikko: do you follow me??
| [Saturday 05 June 2010] [13:06:45] <mikko>  i do
| [Saturday 05 June 2010] [13:07:09] <mikko>  but as far as a i know req/rep pattern works in that kind of sequence
| [Saturday 05 June 2010] [13:07:18] <mikko>  request/reply/request/reply etc
| [Saturday 05 June 2010] [13:09:04] <versificateur>  so no possibility to request/request/send/send ...
| [Saturday 05 June 2010] [13:09:45] <mikko>  what kind of use case is this?
| [Saturday 05 June 2010] [13:09:52] <mikko>  does the server do a lot of processing with the data?
| [Saturday 05 June 2010] [13:11:54] <versificateur>  now if you do a request you have to wait for an reply before sending another request (in REP/REQ pattern)
| [Saturday 05 June 2010] [13:12:38] <mikko>  that's how i've understood req/rep pattern
| [Saturday 05 June 2010] [13:13:16] <versificateur>  but I need to send as much as request I want whitout blocking by waiting the reply
| [Saturday 05 June 2010] [13:13:17] <mikko>  i might be wrong in this as well
| [Saturday 05 June 2010] [13:13:37] <versificateur>  like the PAIR/PAIR pattern
| [Saturday 05 June 2010] [13:14:20] <versificateur>  but the PAIR/PAIR only accept to connections
| [Saturday 05 June 2010] [13:14:30] <versificateur>  two connections
| [Saturday 05 June 2010] [13:16:07] <mikko>  hmm
| [Saturday 05 June 2010] [13:16:19] <mikko>  the way i would probably do it is:
| [Saturday 05 June 2010] [13:16:39] <mikko>  server uses req/rep pattern and also publisher
| [Saturday 05 June 2010] [13:16:55] <mikko>  client sends request, server replies immediately with id-number or uuid 
| [Saturday 05 June 2010] [13:17:16] <mikko>  server processes the data in background and PUBLISHes the result in a topic
| [Saturday 05 June 2010] [13:17:28] <mikko>  the client is subscribed to the topic and receives the reply async
| [Saturday 05 June 2010] [13:17:37] <mikko>  when ever the server is ready to give it
| [Saturday 05 June 2010] [13:17:43] <mikko>  makes sense?
| [Saturday 05 June 2010] [13:19:25] <versificateur>  yes...
| [Saturday 05 June 2010] [13:19:55] <versificateur>  it's a way to resolve the problem
| [Saturday 05 June 2010] [13:20:21] <mikko>  i gotta go to the gym
| [Saturday 05 June 2010] [13:20:26] <mikko>  i'll be back in about 1.5 hours
| [Saturday 05 June 2010] [13:21:06] <versificateur>  thanks for your help and see you later...
| [Saturday 05 June 2010] [13:23:31] Mode ChanServ gives CIA-17 permission to talk.
| [Saturday 05 June 2010] [13:36:22] <CIA-17> rbzmq: 03Brian Buchanan 07master * r998a64a 10/ rbzmq.cpp : fix zmq_send() and zmq_recv() for Ruby 1.9 - http://bit.ly/bsSDT7
| [Saturday 05 June 2010] [13:49:34] <sustrik>    versificateur: is the server sending replies?
| [Saturday 05 June 2010] [13:49:57] <versificateur>  sustrik: yes
| [Saturday 05 June 2010] [13:50:00] <sustrik>    if so, you can use XREQ socket on the client side
| [Saturday 05 June 2010] [13:50:16] <versificateur>  but asynchrously
| [Saturday 05 June 2010] [13:50:18] <sustrik>    it's like REQ but does not force you to wait for answer
| [Saturday 05 June 2010] [13:50:56] <sustrik>    REP side is OK as is for you?
| [Saturday 05 June 2010] [13:52:56] <versificateur>  so XREP allow to send reply without wait for request?
| [Saturday 05 June 2010] [13:53:05] <sustrik>    yes
| [Saturday 05 June 2010] [13:53:54] <sustrik>    you should be aware that during the request transmission ID of the sender is sticked to the request
| [Saturday 05 June 2010] [13:54:09] <sustrik>    when using REQ/REP, 0MQ manages it for you transparently
| [Saturday 05 June 2010] [13:54:19] <sustrik>    with XREP/XREQ you have to manage it by hand
| [Saturday 05 June 2010] [13:54:38] <sustrik>    so when you send message X on the xreq side
| [Saturday 05 June 2010] [13:54:48] <sustrik>    you'll get a two-part message on the xrep side
| [Saturday 05 June 2010] [13:55:06] <sustrik>    first part is the ID of the client that send the request (opaque binary BLOB)
| [Saturday 05 June 2010] [13:55:11] <sustrik>    second part is X
| [Saturday 05 June 2010] [13:55:29] <sustrik>    when you want to send the reply
| [Saturday 05 June 2010] [13:55:47] <sustrik>    you have to stick the client ID in the front of your reply
| [Saturday 05 June 2010] [13:56:01] <sustrik>    so you send a two-part messahe, ID + reply itself
| [Saturday 05 June 2010] [13:56:11] <sustrik>    makes sense?
| [Saturday 05 June 2010] [13:56:55] <versificateur>  yes 
| [Saturday 05 June 2010] [13:57:31] <versificateur>  is there some code examples??
| [Saturday 05 June 2010] [13:57:58] <sustrik>    hm, not really
| [Saturday 05 June 2010] [13:58:20] <sustrik>    you may ask on the mailing list, presumably someone is already using it in that way
| [Saturday 05 June 2010] [13:58:29] <versificateur>  okay
| [Saturday 05 June 2010] [13:58:49] <versificateur>  does the jzmq support it? (in the 2.06 version)
| [Saturday 05 June 2010] [13:59:08] <sustrik>    i think getsockopt is still missing
| [Saturday 05 June 2010] [13:59:48] <sustrik>    it's needed to find out whether message consists of single or multiple parts
| [Saturday 05 June 2010] [14:00:00] <sustrik>    just implement it if needed, it should be easy
| [Saturday 05 June 2010] [14:01:39] <versificateur>  okay... it's the RECV_MORE method?
| [Saturday 05 June 2010] [14:02:27] <sustrik>    in C it's getsockopt (s, ZMQ_RCVMORE, &more, &more_size);
| [Saturday 05 June 2010] [14:02:52] <sustrik>    in java you can either implement generic getsockopt method
| [Saturday 05 June 2010] [14:03:08] <sustrik>    or special getRcvMore ()
| [Saturday 05 June 2010] [14:03:19] <versificateur>  okay
| 
| *** Logfile started
| *** on Sat Jun 5 15:54:00 2010
| 
| [Saturday 05 June 2010] [15:54:00] Topic    The channel topic is "Welcome!".
| [Saturday 05 June 2010] [15:54:00] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Saturday 05 June 2010] [15:54:06] Mode Channel modes: no messages from outside, topic protection
| [Saturday 05 June 2010] [15:54:06] Created  This channel was created on 2010-02-05 10:44.
| [Saturday 05 June 2010] [16:33:31] <versificateur>  mikko: sustrik give me all information
| [Saturday 05 June 2010] [16:33:48] <versificateur>  sustrik: are you there?
| [Saturday 05 June 2010] [16:34:18] <sustrik>    versificateur: yes
| [Saturday 05 June 2010] [16:34:21] <sustrik>    what's up?
| [Saturday 05 June 2010] [16:34:49] <versificateur>  i want to know if java binding support device ZMQ_QUEUE?
| [Saturday 05 June 2010] [16:35:22] <sustrik>    you mean an in-process device?
| [Saturday 05 June 2010] [16:35:37] <versificateur>  yes
| [Saturday 05 June 2010] [16:35:49] <versificateur>  like your multithreaded example
| [Saturday 05 June 2010] [16:36:17] <sustrik>    the zmq_device method is not exposed via java binding
| [Saturday 05 June 2010] [16:36:23] <sustrik>    you would have to add that as well
| [Saturday 05 June 2010] [16:38:02] <versificateur>  a look to jzmq could help?
| [Saturday 05 June 2010] [16:38:37] <sustrik>    i mean you would have to expose the zmq_device function via jzmq
| [Saturday 05 June 2010] [16:38:58] <sustrik>    it's few lines of code afaict
| [Saturday 05 June 2010] [16:39:54] <sustrik>    have a look at how other functions are wrapped and do it in similar manner
| [Saturday 05 June 2010] [16:41:29] <versificateur>  i'll try and send you back the result for approval
| [Saturday 05 June 2010] [16:42:06] <sustrik>    great, that'll make life easier for all the java users of 0mq :)
| [Saturday 05 June 2010] [23:09:11] <postmodern> im having trouble compiling zeromq 2.0.7 on Fedora13
| [Saturday 05 June 2010] [23:09:17] <postmodern> mainly it cannot find libuuid
| [Saturday 05 June 2010] [23:09:28] <postmodern> since fedora installs it to /lib/libuuid.so.1
| [Saturday 05 June 2010] [23:09:40] <postmodern> once i created a libuuid.so symlink to libuuid.so.1, it worked
| [Saturday 05 June 2010] [23:10:44] <postmodern> fedora13 is apparently using libuuid 2.17.2
| [Saturday 05 June 2010] [23:10:59] <postmodern> also there's no uuid/uuid.h only /usr/include/uuid.h
| [Sunday 06 June 2010] [02:53:01] <postmodern>   when did the prototype for zmq_init change
| [Sunday 06 June 2010] [02:53:07] <postmodern>   it used to take 3 arguments, now it only takes 1
| [Sunday 06 June 2010] [17:10:07] <zedas>    sustrik: hey, 2.0.7 had some sudden changes that has completely broken the python module
| [Sunday 06 June 2010] [17:10:34] <zedas>    sustrik: actually, probably all of them except C and C++.  did you talk with anyone before just rolling that out?
| [Sunday 06 June 2010] [17:17:29] <zedas>    sustrik: well i'm attempting to fix the python driver, but if you're going to make API changes at the last minute before releases then that's seriously uncool.
| [Sunday 06 June 2010] [17:17:58] <sustrik>  zedas:hi
| [Sunday 06 June 2010] [17:18:05] <sustrik>  any better idea?
| [Sunday 06 June 2010] [17:18:36] <zedas>    make the change and then wait until all the maintainers catch up
| [Sunday 06 June 2010] [17:19:20] <zedas>    i mean you must have made this change last week right before release because i was trakcing your git and the pyzmq git
| [Sunday 06 June 2010] [17:19:44] <sustrik>  yes, it was made immediately before release
| [Sunday 06 June 2010] [17:20:05] <zedas>    instead, 2.0.7 should have had the old api, and then 2.0.8 could have the new one.
| [Sunday 06 June 2010] [17:20:28] <sustrik>  the problem is with sync of 0mq core and bindings
| [Sunday 06 June 2010] [17:20:37] <sustrik>  bindings are independent projects
| [Sunday 06 June 2010] [17:21:10] <sustrik>  how would you sync in such an environment?
| [Sunday 06 June 2010] [17:21:26] <sustrik>  the real solution is to make bindings make numbered releases
| [Sunday 06 June 2010] [17:21:37] <zedas>    do you have a mailing list?
| [Sunday 06 June 2010] [17:21:51] <sustrik>  go on, propose a solution
| [Sunday 06 June 2010] [17:21:57] <zedas>    you definitely don't sync by just changing the base zmq_init api in a release.
| [Sunday 06 June 2010] [17:22:05] <sustrik>  so?
| [Sunday 06 June 2010] [17:22:26] <zedas>    well that breaks everything.  it's fundamental to many dependencies
| [Sunday 06 June 2010] [17:22:45] <sustrik>  i know, i have no solution though
| [Sunday 06 June 2010] [17:22:59] <zedas>    i suggest this: point releases never change base APIs.  people cna rely on 2.0.7 and 2.0.8 being compilation compatible.
| [Sunday 06 June 2010] [17:23:38] <zedas>    next, if you want to change the API, then you make the decision to boost the 2nd number and people know it.
| [Sunday 06 June 2010] [17:23:55] <zedas>    then, right before you make the API change, release a final point release with the old api, and start on the new one.
| [Sunday 06 June 2010] [17:24:18] <zedas>    that way, i can get the important bug fixes and changes just before the API change, and I can keep working while you can advance the API.
| [Sunday 06 June 2010] [17:24:23] <sustrik>  so you propose maintaining 2 codebases, old compatibility one and a development one?
| [Sunday 06 June 2010] [17:24:35] <zedas>    nope no need for that, since you got git.
| [Sunday 06 June 2010] [17:24:43] <zedas>    if i need 2.0.7 i grab that revision
| [Sunday 06 June 2010] [17:24:52] <sustrik>  backporting of bug fixes?
| [Sunday 06 June 2010] [17:25:06] <zedas>    i'm saying you have a release policy.  dont change the API without doing a point release and then bump the 2nd version number
| [Sunday 06 June 2010] [17:25:33] <zedas>    if someone needs to then they will, but with git backports are way easier
| [Sunday 06 June 2010] [17:25:56] <sustrik>  actually beckward incompatible change should bump the major revision
| [Sunday 06 June 2010] [17:26:03] <zedas>    it's really just a communication policy.  you're saying "you can base your software on point releases"
| [Sunday 06 June 2010] [17:26:29] <sustrik>  so far we've tried to avoid insane version like 27.0.0
| [Sunday 06 June 2010] [17:26:41] <sustrik>  so we've just tagged it as "beta"
| [Sunday 06 June 2010] [17:26:50] <sustrik>  but maybe it's time to freeze the api
| [Sunday 06 June 2010] [17:27:00] <zedas>    yeah but changing zmq_init jsut breaks everything
| [Sunday 06 June 2010] [17:27:20] <zedas>    so when people go to use it, or when i advocate it, people think it's unstable and get turned off
| [Sunday 06 June 2010] [17:27:35] <sustrik>  sure, i am aware of the problem
| [Sunday 06 June 2010] [17:27:44] <sustrik>  what's needed is stable distro
| [Sunday 06 June 2010] [17:27:58] <sustrik>  plus a dev branch
| [Sunday 06 June 2010] [17:28:05] <zedas>    well let me ask, what was the reasoning for changing init?
| [Sunday 06 June 2010] [17:28:25] <sustrik>  the args are no more needed, so it's API cleanup
| [Sunday 06 June 2010] [17:29:17] <sustrik>  basically, it's a tension between trying to keep API clean and a need to support existing users
| [Sunday 06 June 2010] [17:29:48] <zedas>    you can do both, plenty of projects do
| [Sunday 06 June 2010] [17:29:51] <versificateur>    sustrik: have you try to compile the java bindings (jzmq) with new 2.0.7 ??
| [Sunday 06 June 2010] [17:30:02] <sustrik>  versificateur: yes
| [Sunday 06 June 2010] [17:30:15] <sustrik>  it worked for me
| [Sunday 06 June 2010] [17:30:47] <versificateur>    sustrik: it seems that test classes (local_thr...) are broken.. 
| [Sunday 06 June 2010] [17:30:57] <sustrik>  what's the problem?
| [Sunday 06 June 2010] [17:31:32] <sustrik>  zedas: please, do start the discussion of the release policy on the mailing list
| [Sunday 06 June 2010] [17:33:00] <zedas>    hehe whew, hacking generated python C code sucks.
| [Sunday 06 June 2010] [17:33:24] <versificateur>    local_lat.java:36 context(init,int,int) in org.zeromq.ZMQ cannot be applied to (int)
| [Sunday 06 June 2010] [17:33:53] <sustrik>  verisificateur: do you have the latest version?
| [Sunday 06 June 2010] [17:33:59] <versificateur>    ZMQ.Context ctx = ZMQ.context(1);
| [Sunday 06 June 2010] [17:34:31] <sustrik>  hm, have you rebuilt and reinstalled it?
| [Sunday 06 June 2010] [17:34:41] <versificateur>    yes
| [Sunday 06 June 2010] [17:34:58] <zedas>    sustrik versificateur probably the same zmq_init change?
| [Sunday 06 June 2010] [17:35:03] <sustrik>  no stray old version of jzmq somewhere on your paths?
| [Sunday 06 June 2010] [17:35:08] <sustrik>  yes, it's the same thing
| [Sunday 06 June 2010] [17:35:16] <sustrik>  i've changed the jzmq though
| [Sunday 06 June 2010] [17:35:45] <versificateur>    i'll check my paths...
| [Sunday 06 June 2010] [17:36:12] <sustrik>  back to the release policy: i think there should simply be two codebases, the stable one and the experimental one
| [Sunday 06 June 2010] [17:38:00] <zedas>    well i'm screwed.
| [Sunday 06 June 2010] [17:38:14] <zedas>    i'll have to contact the pyzmq author and find out what version of pyrex he's using.
| [Sunday 06 June 2010] [17:38:21] <sustrik>  zedas: sorry about that
| [Sunday 06 June 2010] [17:38:25] <zedas>    hacking the output C code doesn't work at all.
| [Sunday 06 June 2010] [17:38:46] <sustrik>  please do complain about it
| [Sunday 06 June 2010] [17:38:53] <sustrik>  it should be solved in some way
| [Sunday 06 June 2010] [17:39:12] <zedas>    anyway, I *did* manage to merge 0mq into libtask: http://swtch.com/libtask/
| [Sunday 06 June 2010] [17:39:35] <zedas>    so you get coroutines that can process 0mq messages and file/socket I/O off an abstraction from zmq_poll
| [Sunday 06 June 2010] [17:40:09] <sustrik>  what's the project?
| [Sunday 06 June 2010] [17:40:26] <sustrik>  a portability lib?
| [Sunday 06 June 2010] [17:40:37]     * sustrik is checking it
| [Sunday 06 June 2010] [17:40:53] <zedas>    it's a portable abstraction on coroutines in C
| [Sunday 06 June 2010] [17:41:03] <zedas>    super duper fast, but it used plain old poll
| [Sunday 06 June 2010] [17:41:27] <zedas>    so with my little update it uses 0mq poll and then i can use the same abstraction for sockets, files, or 0mq
| [Sunday 06 June 2010] [17:41:41] <zedas>    and it took a tiny bit of changes to work.
| [Sunday 06 June 2010] [17:41:46] <sustrik>  ah, i see
| [Sunday 06 June 2010] [17:42:06] <zedas>    mostly just to see if it'd work :-)
| [Sunday 06 June 2010] [17:42:50] <sustrik>  well, my long term goal is to expose 0MQ via BSD socket API, that would achieve the same goal
| [Sunday 06 June 2010] [17:43:38] <sustrik>  but again, such a thing would break backward compatibility :(
| [Sunday 06 June 2010] [17:43:42] <versificateur>    I didn't found something noticeable in my paths..
| [Sunday 06 June 2010] [17:43:59] <versificateur>    so should i remove all 2.0.6 files
| [Sunday 06 June 2010] [17:44:07] <versificateur>    and reinstall??
| [Sunday 06 June 2010] [17:44:20] <sustrik>  versificateur: let me try myself
| [Sunday 06 June 2010] [17:47:50] <sustrik>  versificateur: hm, it builds ok for me
| [Sunday 06 June 2010] [17:47:59] <sustrik>  maybe you have old 0MQ core still
| [Sunday 06 June 2010] [17:48:11] <sustrik>  have you installed 0MQ/2.0.7?
| [Sunday 06 June 2010] [17:48:16] <versificateur>    yes probably
| [Sunday 06 June 2010] [17:49:17] <sustrik>  were does the context(init,int,int) come from?
| [Sunday 06 June 2010] [17:49:24] <sustrik>  can you check where is it defined?
| [Sunday 06 June 2010] [17:51:05] <versificateur>    yes i'll try
| [Sunday 06 June 2010] [17:51:49] <cremes>   zedas: the ruby ffi bindings are compatible with the 2.0.7 release if you want to dip your toe back into ruby waters... ;)
| [Sunday 06 June 2010] [17:52:15] <cremes>   (or will be when i push 0.5.0 in about 30 minutes)
| [Sunday 06 June 2010] [17:55:36] <sustrik>  let _me_ start the discussion of the stable versions on the mailing list :|
| [Sunday 06 June 2010] [17:59:29] <versificateur>    okay i fix it
| [Sunday 06 June 2010] [18:00:18] <sustrik>  versificatuer: no, do not fix it, just find where it's coming from
| [Sunday 06 June 2010] [18:00:47] <versificateur>    It was my ZMQ.java file
| [Sunday 06 June 2010] [18:01:03] <sustrik>  the one from github?
| [Sunday 06 June 2010] [18:01:05] <versificateur>    I've modifications on the 2.0.6 version
| [Sunday 06 June 2010] [18:01:19] <sustrik>  ah, ok, that explains it
| [Sunday 06 June 2010] [18:02:19] <versificateur>    but now with the 2.0.7 what does the ZMQ.Context(1) mean?
| [Sunday 06 June 2010] [18:02:40] <versificateur>    application? thread?...
| [Sunday 06 June 2010] [18:02:46] <cremes>   versificateur: io threads
| [Sunday 06 June 2010] [18:03:34] <versificateur>    so it's the first arg of the old implementation??
| [Sunday 06 June 2010] [18:04:00] <sustrik>  it's second arg of the old implementation
| [Sunday 06 June 2010] [18:04:22] <sustrik>  api_threads is not needed as you can use 0mq from as many threads as you want now
| [Sunday 06 June 2010] [18:06:04] <sustrik>  zedas: ok, done, i've started the discussion
| [Sunday 06 June 2010] [18:06:30] <sustrik>  let's see what happens
| [Sunday 06 June 2010] [18:06:58] <versificateur>    so taking the multithreaded example i'll have (1) instead of (11,1,0)
| [Sunday 06 June 2010] [18:07:09] <sustrik>  yes
| [Sunday 06 June 2010] [18:12:38] <versificateur>    I made the Device port to jzmq
| [Sunday 06 June 2010] [18:13:00] <sustrik>  great
| [Sunday 06 June 2010] [18:13:10] <versificateur>    i'll test it and ask you for a pull request
| [Sunday 06 June 2010] [18:13:26] <sustrik>  thanks!
| [Sunday 06 June 2010] [18:32:53] <zedas>    sweet, 0mq works great with libtask
| [Sunday 06 June 2010] [18:33:19] <zedas>    i'm able to slam the hell out of it with 0mq req/rep messages and also do full socket hits and serve files.
| [Sunday 06 June 2010] [18:38:41] <zedas>    http://dpaste.de/o5xx/ here's the end result
| [Sunday 06 June 2010] [18:38:48] <zedas>    very nice.
| [Sunday 06 June 2010] [18:48:40] <foysavas> zedas: coroutines? but event-driven is all the fad right now :P
| [Sunday 06 June 2010] [18:49:38] <foysavas> actually coroutines make a lot of sense for a web server, under what conditions would you have a task reschedule itself?
| [Sunday 06 June 2010] [18:50:22] <zedas>    foysavas: well it's event-driven, just done with coroutines :-)
| [Sunday 06 June 2010] [18:51:27] <foysavas> ah, true, you're just saw that you're using zmq_poll
| [Sunday 06 June 2010] [19:02:32] <foysavas> sustrik: btw, if you make two branches, one stable, one dev, make stable 'master'
| [Sunday 06 June 2010] [19:03:30] <foysavas> not sure why it's so popular to do otherwise
| [Sunday 06 June 2010] [19:20:05] <foysavas> sustrik: also, i just wrote up some D bindings for zmq. any chance of linking to them from the zeromq site, once i put them up on github?
| 
| *** Logfile started
| *** on Sun Jun 6 19:51:08 2010
| 
| [Sunday 06 June 2010] [19:51:08] Topic  The channel topic is "Welcome!".
| [Sunday 06 June 2010] [19:51:08] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Sunday 06 June 2010] [19:51:13] Mode   Channel modes: no messages from outside, topic protection
| [Sunday 06 June 2010] [19:51:13] Created    This channel was created on 2010-02-05 10:44.
| [Sunday 06 June 2010] [20:06:07] <mikko>    foysavas: try again tomorrow
| [Sunday 06 June 2010] [20:06:13] <mikko>    foysavas: sustrik can help you on that
| [Sunday 06 June 2010] [22:12:56] <silassewell>  I understand that its not a priority right now (or possibly at all), but I was wondering if anyone was aware of any type of security mechanism successfully being layered on top of zeromq (something like tls as opposed to ipsec)?
| [Sunday 06 June 2010] [22:32:25] <mikko>    its a complicated issue
| [Sunday 06 June 2010] [22:32:52] <mikko>    the topic has come up more than once
| [Sunday 06 June 2010] [22:33:19] <mikko>    the problematic thing is different needs people have and especially when you have more complex messaging topologies
| [Sunday 06 June 2010] [22:33:28] <mikko>    such as forwarding devices that are not trusted etc
| [Sunday 06 June 2010] [22:37:01] <silassewell>  yeah, I'm not looking for a builtin / standard solution, I was just wondering if anyone had heard of someone successfully deploying zeromq in an untrusted environment
| [Sunday 06 June 2010] [22:38:12] <mikko>    i would imagine something like pub/priv key signing would work
| [Sunday 06 June 2010] [22:38:18] <mikko>    adds some overhead to the messages
| [Sunday 06 June 2010] [22:38:45] <mikko>    or just encryption
| [Sunday 06 June 2010] [22:38:56] <mikko>    are you looking to hide the messages or guarantee integrity?
| [Sunday 06 June 2010] [22:40:39] <silassewell>  hide the message and authenticate the sender
| [Sunday 06 June 2010] [22:41:04] <mikko>    i guess you could follow similar pattern to email?
| [Sunday 06 June 2010] [22:42:09] <silassewell>  yeah, I'll start experimenting with it, I just wanted to see if anyone had done it before I began
| [Sunday 06 June 2010] [23:50:13] <jugg> http://api.zeromq.org/zmq_cpp.html doesn't document the overloaded poll() interface, ie, that poll() can be called with or without a timeout value; if without, defaults to -1, eg. no timeout.
| [Monday 07 June 2010] [01:02:05] <jugg> hmm, is it not possible to unbind/disconnect a socket from an endpoint?  It seems I have to close the socket, in which case all connections and bindings for that socket are lost.
| [Monday 07 June 2010] [01:10:26] Notice -NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Monday 07 June 2010] [01:10:26] Notice -NickServ- You are now identified for travlr.
| [Monday 07 June 2010] [01:10:26] CTCP   Received Version request from frigg.
| [Monday 07 June 2010] [01:10:28] Topic  The channel topic is "Welcome!".
| [Monday 07 June 2010] [01:10:28] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Monday 07 June 2010] [01:10:28] Notice -ChanServ- [#rekonq] welcome to rekonq, webkit KDE browser, channel
| [Monday 07 June 2010] [01:10:34] Mode   Channel modes: no messages from outside, topic protection
| [Monday 07 June 2010] [01:10:34] Created    This channel was created on 2010-02-05 10:44.
| [Monday 07 June 2010] [02:02:31] Notice -NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Monday 07 June 2010] [02:02:31] Notice -NickServ- You are now identified for travlr.
| [Monday 07 June 2010] [02:02:31] CTCP   Received Version request from frigg.
| [Monday 07 June 2010] [02:02:33] Topic  The channel topic is "Welcome!".
| [Monday 07 June 2010] [02:02:33] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Monday 07 June 2010] [02:02:33] Notice -ChanServ- [#rekonq] welcome to rekonq, webkit KDE browser, channel
| [Monday 07 June 2010] [02:02:39] Mode   Channel modes: no messages from outside, topic protection
| [Monday 07 June 2010] [02:02:39] Created    This channel was created on 2010-02-05 10:44.
| [Monday 07 June 2010] [02:37:57] <sustrik>  zedas: nice, is the libtask project repo available online?
| [Monday 07 June 2010] [02:38:14] <sustrik>  it may make sense to link to it from zeromq.org website
| [Monday 07 June 2010] [02:38:48] <sustrik>  foysavas: yes, please do put the D binding to the github
| [Monday 07 June 2010] [02:39:05] <sustrik>  then let me know and I link it from zeromq.org
| [Monday 07 June 2010] [02:39:08] <zedas>    sustrik: "repo" is a bit of a stretch http://swtch.com/libtask/
| [Monday 07 June 2010] [02:39:13] <zedas>    but i'll have something up
| [Monday 07 June 2010] [02:39:22] <sustrik>  thanks, let me know then
| [Monday 07 June 2010] [02:39:35] <sustrik>  this stuff looks really useful
| [Monday 07 June 2010] [02:39:42] <sustrik>  it would be shame to let it die
| [Monday 07 June 2010] [02:43:34] <sustrik>  jugg: good catch about the zmq_poll in C++
| [Monday 07 June 2010] [02:43:53] <sustrik>  jugg: no it's not possible, you have to close the socket
| [Monday 07 June 2010] [02:44:02] <sustrik>  (following bsd sockets API here)
| [Monday 07 June 2010] [02:47:24] <Olivier_c>    hi all.
| [Monday 07 June 2010] [02:49:41] <sustrik>  hi
| [Monday 07 June 2010] [02:53:52] <Olivier_c>    sustrik, why have you removed zmq_stopwatch_start/stop in 2.07 ? i don't see anything about it in the changelog.   
| [Monday 07 June 2010] [02:54:27] <sustrik>  it was an undocumented feature intended only for internal use
| [Monday 07 June 2010] [02:54:48] <sustrik>  0mq is not intended to be a portability library
| [Monday 07 June 2010] [02:55:00] <sustrik>  the functions were used only by perf tests
| [Monday 07 June 2010] [02:55:28] <sustrik>  now they are in perf/helpers.cpp
| [Monday 07 June 2010] [02:56:07] <Olivier_c>    ok, thanks for the informations :) i should clean my code then .
| [Monday 07 June 2010] [02:56:33] <sustrik>  sorry for inconvenience, we are trying to keep the API as clean as possible
| [Monday 07 June 2010] [02:57:14] <sustrik>  pain now = less trouble afterwards :)
| [Monday 07 June 2010] [02:59:30] <Olivier_c>    no problem. i'm gonna change this, and probably come back with (still) troubles with openpgm :)
| [Monday 07 June 2010] [03:04:16] <CIA-17>   zeromq2: 03Martin Sustrik 07master * rce53d02 10/ doc/zmq_cpp.txt : C++ docs for zmq::poll function improved - http://bit.ly/9IX99E
| [Monday 07 June 2010] [03:04:17] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r784e73a 10/ (ChangeLog NEWS): Merge branch 'master' of git@github.com:sustrik/zeromq2 - http://bit.ly/aAMj5O
| [Monday 07 June 2010] [05:21:35] <jugg> what is a sensible way to recover from a REQ/REP deadlock?  How does both sides of the endpoint re-synchronize when things get out of sync?  How does either side ever know things are out of sync?
| [Monday 07 June 2010] [05:22:08] <mikko>    how do they get out of sync?
| [Monday 07 June 2010] [05:24:10] <jugg> a REQ is sent, the REP never replies (it goes away).  When it comes back, REQ never recovers.  (I mentioned this yesterday)
| [Monday 07 June 2010] [05:24:41] <jugg> The mention suggest of using Poll, has this issue:
| [Monday 07 June 2010] [05:25:48] <jugg> the REQ socket state is out of order, so REQ send fails.  ANd because of my above question, that it isn't possible to close a connection, the problem increases, because closing the socket is a problem.
| [Monday 07 June 2010] [05:26:17] <jugg> ie. everytime poll times out, I have to close the socket.
| [Monday 07 June 2010] [05:26:29] <jugg> this interrupts a bunch of other things, so it isn't an acceptable solution.
| [Monday 07 June 2010] [05:26:41] <sustrik>  jugg: yes, that's the current state of affairs
| [Monday 07 June 2010] [05:26:57] <sustrik>  this should be done inside of 0MQ
| [Monday 07 June 2010] [05:27:01] <sustrik>  bit it's not yet
| [Monday 07 June 2010] [05:27:20] <jugg> yes, I"m trying to find a sensible work around.  I htink the only option is closing the socket?
| [Monday 07 June 2010] [05:27:26] <sustrik>  yes
| [Monday 07 June 2010] [05:27:29] <jugg> :( ok
| [Monday 07 June 2010] [05:27:34] <sustrik>  i know :(
| [Monday 07 June 2010] [05:52:23] <mato> re
| [Monday 07 June 2010] [05:52:31] <mato> sustrik: what is this business of moving repositories?
| [Monday 07 June 2010] [05:52:45] <sustrik>  imatix is going to maintain stable version
| [Monday 07 June 2010] [05:53:08] <sustrik>  sustrik/zeromq2 is my playground from now on :)
| [Monday 07 June 2010] [05:53:38] <mato> so it's a fork?
| [Monday 07 June 2010] [05:54:02] <sustrik>  yes, it's a different repo
| [Monday 07 June 2010] [05:54:36] <sustrik>  those who want stable API should use imatix/zeromq
| [Monday 07 June 2010] [05:54:53] <mato> then imatix should prominently announce this somehow
| [Monday 07 June 2010] [05:55:00] <mato> but i guess i'll leave that to imatix
| [Monday 07 June 2010] [05:55:04] <sustrik>  :)
| [Monday 07 June 2010] [05:55:09] <mato> you know
| [Monday 07 June 2010] [05:55:11] <mato> with a roadmap
| [Monday 07 June 2010] [05:55:13] <mato> issue tracker
| [Monday 07 June 2010] [05:55:16] <mato> maintenance plan
| [Monday 07 June 2010] [05:55:19] <sustrik>  yup
| [Monday 07 June 2010] [05:55:19] <mato> and so on :-)
| [Monday 07 June 2010] [05:56:35] <mato> sustrik: so practically, i can keep committing to your repository if i want to make changes?
| [Monday 07 June 2010] [05:57:13] <sustrik>  i am going to play with berkeley sockets api there
| [Monday 07 June 2010] [05:57:45] <sustrik>  so it depends on what you want to commit
| [Monday 07 June 2010] [05:58:05] <sustrik>  if it's say a bugfix that should get to stable version asap, go for imatix/zeromq
| [Monday 07 June 2010] [05:58:43] <mato> sustrik: and you will not be fixing bugs in the stable version? or will you?
| [Monday 07 June 2010] [05:58:48]     * mato is confused
| [Monday 07 June 2010] [05:58:58] <sustrik>  the idea afaiu
| [Monday 07 June 2010] [05:59:13] <sustrik>  is that zeromq/imatix now moves quickly towards the stable version
| [Monday 07 June 2010] [05:59:15] <sustrik>  alpha
| [Monday 07 June 2010] [05:59:16] <sustrik>  rc
| [Monday 07 June 2010] [05:59:17] <sustrik>  etc.
| [Monday 07 June 2010] [05:59:34] <sustrik>  sustrik/zeromq2 is my sandbox
| [Monday 07 June 2010] [06:00:19] <sustrik>  as for the bugs, i'll fix them in both
| [Monday 07 June 2010] [06:00:44] <sustrik>  but imatix/zeromq is more important
| [Monday 07 June 2010] [06:00:49] <sustrik>  as it's meant to be stable
| [Monday 07 June 2010] [06:01:26] <mato> right, but the stability of this fork is decided by imatix presumably
| [Monday 07 June 2010] [06:01:31] <sustrik>  yes
| [Monday 07 June 2010] [06:01:32] <mato> they have a plan
| [Monday 07 June 2010] [06:01:50] <sustrik>  i believe so
| [Monday 07 June 2010] [06:02:42]     * mato is still confused
| [Monday 07 June 2010] [06:02:51] <mato> should i ask imatix about these plans on the mailing list?
| [Monday 07 June 2010] [06:03:15] <sustrik>  up to you
| [Monday 07 June 2010] [06:03:50] <mato> i'm just somewhat upset that the decision appears to have been made without seeking *any* input from the community or contributors
| [Monday 07 June 2010] [06:04:01] <mato> without proposing any roadmap what stable means
| [Monday 07 June 2010] [06:08:05] <sustrik>  the point is people are compaining about unstable APIs
| [Monday 07 June 2010] [06:08:10] <sustrik>  fair enough
| [Monday 07 June 2010] [06:08:12] <mato> people always complain
| [Monday 07 June 2010] [06:08:40] <sustrik>  i think 0mq have reached the point where it's used enough to deserve a stable branch
| [Monday 07 June 2010] [06:08:58] <sustrik>  no point in people using my sandbox for production use :|
| [Monday 07 June 2010] [06:09:02] <mato> my point is that you wrote an email asking for comments on the way forward, and PH just wrote back 12hrs later with an executive decision
| [Monday 07 June 2010] [06:09:12] <sustrik>  i asked him to do so
| [Monday 07 June 2010] [06:10:07] <sustrik>  maintaining a stable branch _is_ an executive decision
| [Monday 07 June 2010] [06:13:13] <mato> sustrik: i find it interesting that my input as the contributor who has been preparing the last few stable releases *for free* is not wanted
| [Monday 07 June 2010] [06:13:55] <sustrik>  sustrik/zeromq2 is *my* repo
| [Monday 07 June 2010] [06:14:27] <sustrik>  i just don't want people to come in and complain about the release policy
| [Monday 07 June 2010] [06:14:31] <sustrik>  it's a sandbox
| [Monday 07 June 2010] [06:14:44] <mato> sustrik: that's what branches are for, damnit
| [Monday 07 June 2010] [06:15:23] <mato> sustrik: you have, let me see, 129 people watching your repository
| [Monday 07 June 2010] [06:15:41] <mato> sustrik: so let's face it, that repository should be the canonical source for 0MQ
| [Monday 07 June 2010] [06:16:04] <mato> or, if not, it should be prominently announced, all over the place, not in an email hidden under "Stable release" on the mailing list
| [Monday 07 June 2010] [06:16:21] <sustrik>  sure, it should
| [Monday 07 June 2010] [06:16:57] <mato> anyway, i will reply on the mailing list
| [Monday 07 June 2010] [06:17:00] <sustrik>  ok
| [Monday 07 June 2010] [07:49:01] <jugg> sustrik: will you be pushing changes to the imatix repo as you work?
| [Monday 07 June 2010] [07:49:13] <sustrik>  jugg: yes
| [Monday 07 June 2010] [07:49:19] <sustrik>  the only point is about the API
| [Monday 07 June 2010] [07:49:39] <sustrik>  people using 0mq in production don't want APIs to be changed
| [Monday 07 June 2010] [07:49:51] <sustrik>  thus we need a "stable" repo
| [Monday 07 June 2010] [07:49:58] <sustrik>  ->imatix/zeromq
| [Monday 07 June 2010] [07:50:20] <sustrik>  my own sustrik/zeromq2 i'll use for experimenting with API
| [Monday 07 June 2010] [07:50:40] <sustrik>  so it's worth of following only is you are interested in reseach-related stuff
| [Monday 07 June 2010] [07:50:53] <sustrik>  research*
| [Monday 07 June 2010] [07:51:50] <sustrik>  does that make sense?
| [Monday 07 June 2010] [07:56:43] <jugg> yes/no.  Even if another repository is made to be the "official" one, I'd still expect the branches shared between the two repositories to remain synched, and any experimental work to be done on branches existing only in your repository.
| [Monday 07 June 2010] [07:58:05] <jugg> I expect the "master" branch to be one of those shared branches that remain sync'd
| [Monday 07 June 2010] [07:59:14] <sustrik>  i just don't want to have the whole project under sustrik account
| [Monday 07 June 2010] [07:59:24] <sustrik>  it's not a one-man show any longer
| [Monday 07 June 2010] [08:00:41] <jugg> makes sense
| [Monday 07 June 2010] [11:24:46] <jugg> while building from source, `./configure --prefix=/some/path`  is this used only for `make install`?  ie, if I re-run ./configure with a different prefix, do I have to rebuild?
| [Monday 07 June 2010] [11:26:47] <sustrik>  jugg: no idea
| [Monday 07 June 2010] [11:27:18] <sustrik>  you should be able to find the answer somewhere in the autools documentation
| [Monday 07 June 2010] [11:27:25] <sustrik>  autotools*
| [Monday 07 June 2010] [11:29:39] <jugg> when doing a full make after changing the prefix, these files differ:
| [Monday 07 June 2010] [11:29:55] <jugg> ./lib/libzmq.a
| [Monday 07 June 2010] [11:29:55] <jugg> ./lib/libzmq.la
| [Monday 07 June 2010] [11:29:55] <jugg> ./lib/pkgconfig/libzmq.pc
| [Monday 07 June 2010] [11:30:18] <jugg> when not doing an make, only the .a and .pc differ.  The .la still points to the old directory.
| [Monday 07 June 2010] [11:31:56] <jugg> but all of the files themselves were placed in the correct (updated) locations.
| [Monday 07 June 2010] [11:33:22] <jugg> wierd that the static lib changes without actually doing a rebuild. ?
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: 03Brian Granger 07master * rafabbb5 10/ (18 files in 7 dirs): 
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: Updating to new 2.0.7 API changes.
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: * Context only takes the number of io threads.
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: * P2P -> PAIR.
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: * No stopwatch.
| [Monday 07 June 2010] [11:56:13] <CIA-17>   pyzmq: * No LWM socket option. - http://bit.ly/9vHx2a
| [Monday 07 June 2010] [11:57:37] <guido_g>  ahhh... time to pull :)
| [Monday 07 June 2010] [14:24:14] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r240fc33 10/ src/tcp_connecter.cpp : minor comment clarification - http://bit.ly/9qdEMQ
| [Monday 07 June 2010] [20:59:24] <jugg> I got this assert in my app when rebooting a peer computer: tcp_connector.cpp:296:    zmq_assert (err == ECONNREFUSED || err == ETIMEDOUT);   Is there a reason that zmq dies if the remote port is unavailable?
| [Monday 07 June 2010] [23:30:22] <jugg> sustrik: github is showing that you committed a comment change on that very assert 9 hours ago... ???  that is very wierd.
| [Tuesday 08 June 2010] [00:58:14] <umesh>   I am wondering if ZeroMQ supports a many to many delivery model.
| [Tuesday 08 June 2010] [00:58:35] <umesh>   The documentation for publish and subscribe mention that it is used to implement a one to many model:
| [Tuesday 08 June 2010] [00:58:35] <umesh>   "The publish-subscribe pattern is used for one-to-many distribution of data from a single publisher to multiple subscribers in a fanout fashion."
| [Tuesday 08 June 2010] [00:58:48] <umesh>   Can multiple entities publish on the same channel and thus make it a many to many model ?
| [Tuesday 08 June 2010] [01:01:59] <sustrik> jugg: the assert tries to capture possible netwrok-related error codes
| [Tuesday 08 June 2010] [01:02:15] <sustrik> can you have a look which error are you exactly experiencing?
| [Tuesday 08 June 2010] [01:02:33] <sustrik> as for the commit it just fixed the comment there, it haven't changed the actual code
| [Tuesday 08 June 2010] [01:03:03] <sustrik> umesh: you have to have zmq_forwarder device in the middle
| [Tuesday 08 June 2010] [01:09:26] <alefka>  hi
| [Tuesday 08 June 2010] [01:10:18] <sustrik> hi
| [Tuesday 08 June 2010] [01:11:03] <umesh>   ok
| [Tuesday 08 June 2010] [01:11:14] <alefka>  I have some questions about 0mq. Could u help me?
| [Tuesday 08 June 2010] [01:11:29] <umesh>   Sustrik: can you explain with very simple example ...
| [Tuesday 08 June 2010] [01:12:02] <sustrik> umesh: have a look here: http://github.com/sustrik/zeromq-chat
| [Tuesday 08 June 2010] [01:12:09] <sustrik> aalefka: yes
| [Tuesday 08 June 2010] [01:12:16] <umesh>   is there are sample code given in the cookbook or anywahere where we have zmq_forwarder in between 
| [Tuesday 08 June 2010] [01:12:20] <umesh>   ok
| [Tuesday 08 June 2010] [01:13:39] <alefka>  I created publisher socket (ZMQ_PUB) and bind it. Can I wait a connection from client on this socket?
| [Tuesday 08 June 2010] [01:14:07] <sustrik> yes
| [Tuesday 08 June 2010] [01:14:18] <sustrik> well, you mean get notified?
| [Tuesday 08 June 2010] [01:14:25] <sustrik> then no
| [Tuesday 08 June 2010] [01:17:35] <alefka>  sustrik: How I can wait? After binding I begin send messages, but because there is no connected subscribers I send this messages in the nowhere
| [Tuesday 08 June 2010] [01:17:58] <sustrik> that's the nature of the thing
| [Tuesday 08 June 2010] [01:18:08] <sustrik> PUB is like a radio transmission
| [Tuesday 08 June 2010] [01:18:20] <sustrik> if noone is listening, the data go to nowhere
| [Tuesday 08 June 2010] [01:18:49] <sustrik> what are you trying to do?
| [Tuesday 08 June 2010] [01:23:49] <alefka>  I need some client/server app which can dispatch about million messages per sec. In my REQ/REP socket tests there is not enough throughput, therefore I trying implement this logic on the PUB/SUB sockets.
| [Tuesday 08 June 2010] [01:27:23] <sustrik> sure
| [Tuesday 08 June 2010] [01:27:40] <sustrik> but why do you need not to drop messages when there's no client?
| [Tuesday 08 June 2010] [01:28:03] <sustrik> how many listerenrs there are in your scenario?
| [Tuesday 08 June 2010] [01:28:07] <sustrik> just a single one?
| [Tuesday 08 June 2010] [01:29:48] <alefka>  sustrik: >> sure. I executed latency tests on a 100 000 messages (16 bytes) and it spend about 5 secs
| [Tuesday 08 June 2010] [01:30:03] <alefka>  sustrik: >> just a single one? : yes
| [Tuesday 08 June 2010] [01:30:43] <sustrik> so all you need is one-to-one communication?
| [Tuesday 08 June 2010] [01:30:55] <sustrik> why aren't you using standard sockets then?
| [Tuesday 08 June 2010] [01:31:59] <sustrik> (there's a PAIR socket for this use case, but it's still experimental and misses features such as reconnection)
| [Tuesday 08 June 2010] [01:35:20] <alefka>  yes. by command of my boss "just test it" :)
| [Tuesday 08 June 2010] [01:36:35] <alefka>  >> (there's a PAIR socket... I will try this feature
| [Tuesday 08 June 2010] [01:38:52] <sustrik> alefka: actually, it won't work
| [Tuesday 08 June 2010] [01:39:09] <sustrik> the problem you are trying to solve is still unresolved in PAIR
| [Tuesday 08 June 2010] [01:39:38] <sustrik> anyway, what's the scenario 0mq is intended to be used in?
| [Tuesday 08 June 2010] [01:39:48] <sustrik> one-to-many data distribution?
| [Tuesday 08 June 2010] [01:40:11] <alefka>  one-to-one
| [Tuesday 08 June 2010] [01:40:54] <sustrik> ok, there's one option
| [Tuesday 08 June 2010] [01:41:11] <sustrik> there are DOWNSTREAM and UPSTREAM sockets
| [Tuesday 08 June 2010] [01:41:20] <sustrik> these are meant for pipelining
| [Tuesday 08 June 2010] [01:41:35] <sustrik> but let's say your one-to-one scenario is a simple pipeline
| [Tuesday 08 June 2010] [01:41:48] <sustrik> use DOWNSTREAM on the publisher side
| [Tuesday 08 June 2010] [01:41:58] <sustrik> and UPSTREAM on the receiver side
| [Tuesday 08 June 2010] [01:42:04] <umesh>   http://www.zeromq.org/code:examples-chat
| [Tuesday 08 June 2010] [01:42:06] <sustrik> the messages should not be dropped
| [Tuesday 08 June 2010] [01:42:09] <umesh>   where can i get this ?
| [Tuesday 08 June 2010] [01:42:18] <sustrik> ?
| [Tuesday 08 June 2010] [01:42:26] <umesh>   its not wirh zeromq sources which I dodnloaded ...
| [Tuesday 08 June 2010] [01:42:29] <umesh>   with*
| [Tuesday 08 June 2010] [01:42:48] <umesh>   the example mentioned in this is not with zeromq sources ..
| [Tuesday 08 June 2010] [01:42:49] <sustrik> it's old outdated tutorial
| [Tuesday 08 June 2010] [01:42:56] <umesh>   ok
| [Tuesday 08 June 2010] [01:43:04] <sustrik> use the github project i've pointed you to
| [Tuesday 08 June 2010] [01:43:08] <umesh>   ok
| [Tuesday 08 June 2010] [01:43:24] <sustrik> see the README file
| [Tuesday 08 June 2010] [01:43:25] <alefka>  How I understand they are contains some buffer inside which stores output/input messages
| [Tuesday 08 June 2010] [01:43:33] <alefka>  is it so?
| [Tuesday 08 June 2010] [01:43:37] <umesh>   I thought this is the more sopisticated example of the link you provided ... therefore just wanted to have a look at it ...
| [Tuesday 08 June 2010] [01:44:02] <sustrik> alefka: yes there are buffers inside sockets
| [Tuesday 08 June 2010] [01:44:15] <sustrik> umesh: it was the old version of the same thing
| [Tuesday 08 June 2010] [01:44:22] <sustrik> some 2 years old :)
| [Tuesday 08 June 2010] [01:45:12] <umesh>   ok
| [Tuesday 08 June 2010] [01:45:33] <umesh>   sustrik: one question ..
| [Tuesday 08 June 2010] [01:45:38] <sustrik> go on
| [Tuesday 08 June 2010] [01:45:42] <alefka>  sustrik: ok
| [Tuesday 08 June 2010] [01:45:50] <umesh>   zmq does not support many to many directly ... right ...
| [Tuesday 08 June 2010] [01:46:25] <sustrik> you mean without device in a middle?
| [Tuesday 08 June 2010] [01:46:26] <umesh>   but this way of doing broker achitecture or many to many will add more latency/delay ... 
| [Tuesday 08 June 2010] [01:46:34] <sustrik> you can do that but it's annoying
| [Tuesday 08 June 2010] [01:46:55] <umesh>   yup ... without device in the middle ...
| [Tuesday 08 June 2010] [01:46:57] <sustrik> you have to bind each publsiher
| [Tuesday 08 June 2010] [01:47:10] <sustrik> and connect to each publisher from each subscriber
| [Tuesday 08 June 2010] [01:47:32] <sustrik> that means subscriber should be aware of all publishers
| [Tuesday 08 June 2010] [01:47:34] <umesh>   which will be better performance wise ...
| [Tuesday 08 June 2010] [01:47:42] <sustrik> yes, it'll be better
| [Tuesday 08 June 2010] [01:47:50] <sustrik> but it's management nightmare :)
| [Tuesday 08 June 2010] [01:47:56] <sustrik> it's up to you
| [Tuesday 08 June 2010] [01:48:13] <umesh>   and when you say annoying ... what is annoying nature in it ...
| [Tuesday 08 June 2010] [01:48:31] <umesh>   ok
| [Tuesday 08 June 2010] [01:48:38] <sustrik> you have to maintail list of publishers at each subscriber
| [Tuesday 08 June 2010] [01:48:48] <umesh>   annoying is subsriber should know publishers ...
| [Tuesday 08 June 2010] [01:48:57] <sustrik> yes
| [Tuesday 08 June 2010] [01:49:14] <umesh>   ok
| [Tuesday 08 June 2010] [01:49:42] <umesh>   thanx ...
| [Tuesday 08 June 2010] [01:49:44] <sustrik> np
| [Tuesday 08 June 2010] [01:50:10] <umesh>   also adding more publishers will be diffcult in that case ...
| [Tuesday 08 June 2010] [01:51:55] <sustrik> yes
| [Tuesday 08 June 2010] [01:52:14] <sustrik> it can be done in opposite way also: publishers have to know subscribers
| [Tuesday 08 June 2010] [01:52:19] <sustrik> but that's even worse
| [Tuesday 08 June 2010] [01:52:40] <umesh>   hmmm ...
| [Tuesday 08 June 2010] [01:52:49] <sustrik> you can still use multicast
| [Tuesday 08 June 2010] [01:53:10] <sustrik> all the publishers publish to the same multicast group
| [Tuesday 08 June 2010] [01:53:25] <sustrik> all the subscribers subscribe to the multicast group
| [Tuesday 08 June 2010] [01:53:33] <sustrik> but it works on LAN only
| [Tuesday 08 June 2010] [01:54:00] <umesh>   yup
| [Tuesday 08 June 2010] [01:54:26] <umesh>   everything has some procs and cons ... better to me looks like is device in the middle ...
| [Tuesday 08 June 2010] [01:54:58] <sustrik> ack
| [Tuesday 08 June 2010] [01:55:08] <umesh>   ack ?
| [Tuesday 08 June 2010] [01:55:32] <sustrik> yes (acknowledged) :)
| [Tuesday 08 June 2010] [01:55:38] <umesh>   ok
| [Tuesday 08 June 2010] [01:55:53] <umesh>   you believe the same ... :)
| [Tuesday 08 June 2010] [01:57:02] <umesh>   one more question : not related to this discussio...
| [Tuesday 08 June 2010] [01:57:16] <umesh>   zmq does not have zmq_select ... why ?
| [Tuesday 08 June 2010] [01:57:30] <umesh>   it does have zmq_poll  ... but not zmq_select ?
| [Tuesday 08 June 2010] [01:58:51] <sustrik> pollsets used in select are in fact bitmaps
| [Tuesday 08 June 2010] [01:59:07] <sustrik> you can use that approach when you fds are integers
| [Tuesday 08 June 2010] [01:59:20] <sustrik> sockets in 0mq are void*
| [Tuesday 08 June 2010] [01:59:27] <sustrik> that doesn't fit to a bitmap
| [Tuesday 08 June 2010] [01:59:48] <umesh>   ok
| [Tuesday 08 June 2010] [02:00:16] <umesh>   is there any way of using standard select with zmq_sockets ...
| [Tuesday 08 June 2010] [02:00:17] <umesh>   ?
| [Tuesday 08 June 2010] [02:01:31] <umesh>   i think no ...
| [Tuesday 08 June 2010] [02:01:42] <umesh>   but still thought asking you ...
| [Tuesday 08 June 2010] [02:09:08] <sustrik> umesh: no way at the moment
| [Tuesday 08 June 2010] [02:09:18] <sustrik> zmq socket is not a file descriptor
| [Tuesday 08 June 2010] [02:09:36] <sustrik> so you cannot use it for polling via *any* standard mechanism
| [Tuesday 08 June 2010] [02:10:02] <sustrik> we'll be moving that way in the future though
| [Tuesday 08 June 2010] [02:12:29] <umesh>   ok
| [Tuesday 08 June 2010] [02:24:32] <umesh>   where is the source code for zmq_server ?
| [Tuesday 08 June 2010] [02:24:38] <umesh>   I did not find any ...
| [Tuesday 08 June 2010] [02:24:43] <sustrik> there's no zmq_server
| [Tuesday 08 June 2010] [02:24:47] <sustrik> where are you looking at?
| [Tuesday 08 June 2010] [02:25:53] <umesh>   http://www.zeromq.org/code:examples-exchange ..
| [Tuesday 08 June 2010] [02:26:03] <umesh>   I also looked at teh sources 
| [Tuesday 08 June 2010] [02:26:07] <umesh>   the*
| [Tuesday 08 June 2010] [02:26:26] <sustrik> it's outdated
| [Tuesday 08 June 2010] [02:26:28] <umesh>   it mentions about zmq_server ...
| [Tuesday 08 June 2010] [02:26:34] <sustrik> i should delete these two papers
| [Tuesday 08 June 2010] [02:26:43] <umesh>   http://www.zeromq.org/code:examples-camera
| [Tuesday 08 June 2010] [02:26:48] <umesh>   even this as well 
| [Tuesday 08 June 2010] [02:26:51] <umesh>   why ?
| [Tuesday 08 June 2010] [02:27:00] <sustrik> it's old documentation
| [Tuesday 08 June 2010] [02:27:05] <umesh>   ok
| [Tuesday 08 June 2010] [02:27:10] <sustrik> it should have been deleted long ago
| [Tuesday 08 June 2010] [02:27:21] <umesh>   is there any new example of this ...
| [Tuesday 08 June 2010] [02:27:32] <sustrik> the one i pointed you to
| [Tuesday 08 June 2010] [02:27:39] <sustrik> is there any problem with it?
| [Tuesday 08 June 2010] [02:28:44] <umesh>   nope ...
| [Tuesday 08 June 2010] [02:29:00] <umesh>   i was just looking at the different code examples ...
| [Tuesday 08 June 2010] [02:29:13] <umesh>   to understand zmq in much better way ...
| [Tuesday 08 June 2010] [02:30:08] <sustrik> dunno, have a look at the blogs
| [Tuesday 08 June 2010] [02:30:24] <sustrik> there's "multithreaded server in 10mins." might be helpful
| [Tuesday 08 June 2010] [02:30:42] <umesh>   also in that chat example you pointed out me ... is there any way to listen to specific events only ...
| [Tuesday 08 June 2010] [02:30:57] <umesh>   we ca do this by selective subscribe ... right ?
| [Tuesday 08 June 2010] [02:31:01] <umesh>   can*
| [Tuesday 08 June 2010] [02:31:05] <sustrik> yes
| [Tuesday 08 June 2010] [02:31:13] <umesh>   instead of subscribing to all messages ...
| [Tuesday 08 June 2010] [02:31:15] <umesh>   ok
| [Tuesday 08 June 2010] [04:28:26] <alefka>  anybody here?
| [Tuesday 08 June 2010] [04:29:28] <guido_g> sure
| [Tuesday 08 June 2010] [04:33:02] <alefka>  guido_g: it seems I found some bug or I'm mistaken. 
| [Tuesday 08 June 2010] [04:36:09] <alefka>  guido_g: why some packets not received when I send them from publisher socket (server side, socket listening) to the client (whos connecting)
| [Tuesday 08 June 2010] [04:38:26] <alefka>  anybody...
| [Tuesday 08 June 2010] [04:49:33] <alefka>  :(
| [Tuesday 08 June 2010] [04:52:22] <sustrik> alfka: i'm here now :)
| [Tuesday 08 June 2010] [04:53:05] <alefka>  sustrik: Hi :)
| [Tuesday 08 June 2010] [04:53:18] <alefka>  it seems I found some bug or I'm mistaken.
| [Tuesday 08 June 2010] [04:53:25] <alefka>  why some packets not received when I send them from publisher socket (server side, socket listening) to the client (whos connecting)
| [Tuesday 08 June 2010] [04:53:48] <sustrik> while the client is _connecting_ and not yet _connected_ the messages are dropped
| [Tuesday 08 June 2010] [04:54:04] <sustrik> as i said, it's like radio transmission
| [Tuesday 08 June 2010] [04:54:06] <alefka>  but waiting a client connection
| [Tuesday 08 June 2010] [04:54:24] <sustrik> ?
| [Tuesday 08 June 2010] [04:54:26] <alefka>  just reading from keyboard char
| [Tuesday 08 June 2010] [04:54:39] <alefka>  but I'm waiting a client connection
| [Tuesday 08 June 2010] [04:54:55] <sustrik> but it's not yet connected, right?
| [Tuesday 08 June 2010] [04:55:20] <sustrik> it's PUB/SUB?
| [Tuesday 08 June 2010] [04:55:45] <sustrik> can you show your test program?
| [Tuesday 08 June 2010] [04:55:53] <alefka>  yes
| [Tuesday 08 June 2010] [04:56:00] <alefka>  how I can send you it?
| [Tuesday 08 June 2010] [04:57:41] <sustrik> it doesn't seem to get through
| [Tuesday 08 June 2010] [04:57:50] <sustrik> paste is to some public board
| [Tuesday 08 June 2010] [04:58:21] <sustrik> or send it be email
| [Tuesday 08 June 2010] [04:59:04] <alefka>  what is your email?
| [Tuesday 08 June 2010] [04:59:22] <sustrik> send it to the mailing list
| [Tuesday 08 June 2010] [04:59:28] <sustrik> or is it private?
| [Tuesday 08 June 2010] [04:59:53] <sustrik> confidential i mean?
| [Tuesday 08 June 2010] [05:00:37] <alefka>  I don't see.
| [Tuesday 08 June 2010] [05:01:15] <alefka>  sustrik@chello089173040080.chello.sk ????
| [Tuesday 08 June 2010] [05:02:07] <sustrik> see here: http://www.zeromq.org/mailing-lists
| [Tuesday 08 June 2010] [05:11:11] <alefka>  files attach to the message or insert into the body?
| [Tuesday 08 June 2010] [05:11:34] <alefka>  *as text
| [Tuesday 08 June 2010] [05:12:59] <sustrik> doesn't matter
| [Tuesday 08 June 2010] [05:20:21] <alefka>  sended
| [Tuesday 08 June 2010] [06:31:20] <versificateur>   hello
| [Tuesday 08 June 2010] [06:32:48] <versificateur>   could someone good in JNI have a look at this?
| [Tuesday 08 June 2010] [06:33:14] <versificateur>   http://pastebin.com/D7bA0ENV
| [Tuesday 08 June 2010] [06:34:04] <versificateur>   I tried to run a java code on it but it crash
| [Tuesday 08 June 2010] [06:34:57] <versificateur>   sustrik: your help is welcome
| [Tuesday 08 June 2010] [06:36:13] <sustrik> versificateur: you have to convrt jobject representing the 0MQ socket to handle to the socket
| [Tuesday 08 June 2010] [06:36:51] <sustrik> iirc the jobject contains the void* stored as jint 
| [Tuesday 08 June 2010] [06:36:58] <sustrik> or something like that
| [Tuesday 08 June 2010] [07:02:23] <versificateur>   i correct it
| [Tuesday 08 June 2010] [07:02:25] <versificateur>   thanks
| [Tuesday 08 June 2010] [07:02:39] <versificateur>   it's seems that it works
| [Tuesday 08 June 2010] [07:03:16] <versificateur>   i'll test with some REQ/REP code
| [Tuesday 08 June 2010] [07:06:40] <umesh>   subscribe to specific topic not working ...
| [Tuesday 08 June 2010] [07:06:56] <umesh>   I am using the simple chat program using forwarder ...
| [Tuesday 08 June 2010] [07:07:08] <umesh>   I want to display the specic messages ...
| [Tuesday 08 June 2010] [07:07:53] <umesh>   so what I did was I subscribed to the specific messages ... using s.setsockopt (ZMQ_SUBSCRIBE, "umesh\x00", 0);
| [Tuesday 08 June 2010] [07:08:06] <umesh>   and i haven't change the code for prompt ...
| [Tuesday 08 June 2010] [07:08:11] <sustrik> the third argument is the size
| [Tuesday 08 June 2010] [07:08:24] <umesh>   ohhh ... i missed it ...
| [Tuesday 08 June 2010] [07:08:27] <umesh>   sorry ...
| [Tuesday 08 June 2010] [07:08:30] <sustrik> :)
| [Tuesday 08 June 2010] [07:08:35] <umesh>   I knew it but ... i forgot ...
| [Tuesday 08 June 2010] [07:10:48] <CIA-17>  zeromq-examples: 03Martin Lucina 07master * r8cee253 10/ zmq-camera.c : Update to 0MQ 2.0.7 API - http://bit.ly/9qJTRz
| [Tuesday 08 June 2010] [07:12:55] <versificateur>   sustrik: if i bind a socket will it be opened or only when i started send/recv data?? 
| [Tuesday 08 June 2010] [07:14:07] <versificateur>   because i bind a PUB socket on a TCP port but executing a netstat command do show it
| [Tuesday 08 June 2010] [07:14:53] <sustrik> bind translates to standard TCP bind
| [Tuesday 08 June 2010] [07:15:03] <sustrik> connect translates to TCP connect
| [Tuesday 08 June 2010] [07:26:20] <CIA-17>  zeromq-examples: 03Martin Lucina 07turbo * r267de4a 10/ zmq-camera.c : Update to 0MQ 2.0.7 API - http://bit.ly/a3fCGF
| [Tuesday 08 June 2010] [07:33:13] <umesh>   in setsocket_opt like s.setsockopt (ZMQ_SUBSCRIBE, "xy.z\x00", 5);
| [Tuesday 08 June 2010] [07:33:23] <umesh>   why it is required to give \x00 ...
| [Tuesday 08 June 2010] [07:33:46] <umesh>   if i just give "xy.z" will also be null terminated ...
| [Tuesday 08 June 2010] [07:33:52] <umesh>   ?
| [Tuesday 08 June 2010] [07:34:39] <guido_g> the \000 is part of the subscription
| [Tuesday 08 June 2010] [07:35:00] <sustrik> it's used as delimiter in the example
| [Tuesday 08 June 2010] [07:35:12] <sustrik> if it's confusing use some other character instead
| [Tuesday 08 June 2010] [07:35:14] <sustrik> like |
| [Tuesday 08 June 2010] [07:35:18] <sustrik> or something
| [Tuesday 08 June 2010] [07:36:48] <umesh>   ok
| [Tuesday 08 June 2010] [07:36:51]    * sustrik thinks the \x00 should be replaced by something more sane in the cookbook...
| [Tuesday 08 June 2010] [07:37:06] <umesh>   its really very confusing ...
| [Tuesday 08 June 2010] [07:37:24] <sustrik> let me see...
| [Tuesday 08 June 2010] [07:37:30] <umesh>   i think in cookbook you can update this ...
| [Tuesday 08 June 2010] [07:37:56] <umesh>   also strlen gives difficulty if we use delimiter as \x00 ..
| [Tuesday 08 June 2010] [07:38:51] <sustrik> umesh: want to do that?
| [Tuesday 08 June 2010] [07:40:50] <umesh>   yup I can also do that ...
| [Tuesday 08 June 2010] [07:40:57] <sustrik> great, thanks!
| [Tuesday 08 June 2010] [07:41:08] <umesh>   but do I have rights to change cookbook text ...
| [Tuesday 08 June 2010] [07:41:16] <sustrik> you have to join the wiki to be able to edit
| [Tuesday 08 June 2010] [07:41:22] <sustrik> see left below
| [Tuesday 08 June 2010] [07:41:22] <umesh>   ok
| [Tuesday 08 June 2010] [07:41:33] <umesh>   I have already joined it ...
| [Tuesday 08 June 2010] [07:41:43] <sustrik> ah, then just edit it
| [Tuesday 08 June 2010] [07:46:21] <umesh>   does password update takes time ...
| [Tuesday 08 June 2010] [07:46:40] <umesh>   i am not able to login ... it says login and password does not match
| [Tuesday 08 June 2010] [07:46:47] <sustrik> :)
| [Tuesday 08 June 2010] [07:46:54] <sustrik> dunno
| [Tuesday 08 June 2010] [07:47:09] <sustrik> maybe you've made type when entering it?
| [Tuesday 08 June 2010] [07:47:13] <sustrik> typo
| [Tuesday 08 June 2010] [07:47:46] <umesh>   confirmed 2 times ...
| [Tuesday 08 June 2010] [07:48:16] <sustrik> ignore it and create a new account
| [Tuesday 08 June 2010] [07:55:54] <umesh>   done 
| [Tuesday 08 June 2010] [07:56:00] <umesh>   check the page once ...
| [Tuesday 08 June 2010] [07:56:12] <umesh>   http://www.zeromq.org/docs:cookbook
| [Tuesday 08 June 2010] [07:56:35] <umesh>   one more question : When I susbscribe to a topic ...
| [Tuesday 08 June 2010] [07:56:52] <umesh>   I get complete message with topic prefix ...
| [Tuesday 08 June 2010] [07:56:59] <umesh>   is it correct behaviour  ?
| [Tuesday 08 June 2010] [07:57:33] <umesh>   because I have assumed that it will only give me the message without topic ...
| [Tuesday 08 June 2010] [08:01:23] <guido_g> where does this assumption come from?
| [Tuesday 08 June 2010] [08:01:33] <guido_g> the topic is part of the (multipart-)message
| [Tuesday 08 June 2010] [08:13:26] <umesh>   it was just my thinking that topic will be removed before giving it to user ... not from any reading ...
| [Tuesday 08 June 2010] [08:16:48] <versificateur>   how can i read ONLY a part of a multipart message with java binding
| [Tuesday 08 June 2010] [08:17:05] <versificateur>   for example with a socket like this
| [Tuesday 08 June 2010] [08:17:16] <versificateur>   jsonSubscriber.setsockopt(ZMQ.SUBSCRIBE, "servers.smpp");
| [Tuesday 08 June 2010] [08:17:32] <sustrik> umesh: look good
| [Tuesday 08 June 2010] [08:17:41] <sustrik> but you forgot this piece: "Messages that receivers are going to subscribe to have to start with a NULL-terminated string (the topic)"
| [Tuesday 08 June 2010] [08:17:53] <sustrik> it's |-terminated now
| [Tuesday 08 June 2010] [08:18:19] <versificateur>   actually i got two messages 
| [Tuesday 08 June 2010] [08:18:49] <sustrik> if you send two messages
| [Tuesday 08 June 2010] [08:18:56] <sustrik> you receive two messages
| [Tuesday 08 June 2010] [08:19:09] <sustrik> there's nothing to do about that
| [Tuesday 08 June 2010] [08:20:01] <umesh>   yup
| [Tuesday 08 June 2010] [08:20:12] <umesh>   I will change that ...
| [Tuesday 08 June 2010] [08:22:06] <umesh>   done the change ...
| [Tuesday 08 June 2010] [08:24:50] <versificateur>   i thought that if subscribe with the channel name i'll only receive one message
| [Tuesday 08 June 2010] [08:25:57] <versificateur>   the message alone, not with the channel name as another message
| [Tuesday 08 June 2010] [08:27:33] <sustrik> it's fifo
| [Tuesday 08 June 2010] [08:27:41] <sustrik> what goes in, get out
| [Tuesday 08 June 2010] [08:28:15] <sustrik> umesh: thx
| [Tuesday 08 June 2010] [08:31:39] <versificateur>   yes I knew... but when i use the python bindings i only receive the message itself not the channel  
| [Tuesday 08 June 2010] [08:33:11] <versificateur>   so what <socket>.setsockopt(ZMQ.SUBSCRIBE, <some channel>); does in java bindings?
| [Tuesday 08 June 2010] [08:35:20] <sustrik> see zmq_setsockopt(3) man page
| [Tuesday 08 June 2010] [08:39:26] <umesh>   in zmq how we can do content based publish/subscrive instead of topic based ...
| [Tuesday 08 June 2010] [08:40:56] <sustrik> you want to add your own matching algorithm?
| [Tuesday 08 June 2010] [08:42:48] <umesh>   yup ...
| [Tuesday 08 June 2010] [08:43:02] <umesh>   how can i do that if I need to do ...
| [Tuesday 08 June 2010] [08:43:23] <umesh>   it not decided yet ... but I am trying to evalute that option as well ... 
| [Tuesday 08 June 2010] [08:54:25] <versificateur>   sustrik: so SUBSCRIBE setsockopt is only a filter ? i'll receive the channel submessage as well as the data submessage?
| [Tuesday 08 June 2010] [08:57:08] <versificateur>   like i started with the python bindings which has recv_multipart that handle each part sent I thought it was like that in java also
| [Tuesday 08 June 2010] [08:57:55] <versificateur>   but i'll have to do my recv multipart myself
| [Tuesday 08 June 2010] [08:58:52] <versificateur>   sustrik: I need more information on device behavior like it's not documented
| [Tuesday 08 June 2010] [09:00:06] <versificateur>   it's seems that it run an infinite loop in background
| [Tuesday 08 June 2010] [09:01:06] <versificateur>   because code after it don't run
| [Tuesday 08 June 2010] [09:03:24] <sustrik> umesh: you have to plug in your own algorithm
| [Tuesday 08 June 2010] [09:03:47] <sustrik> the current algorithm is placed in src/prefix_tree.hpp and .cpp
| [Tuesday 08 June 2010] [09:04:22] <sustrik> versificatuer: there's no such thing as channel and data submessages
| [Tuesday 08 June 2010] [09:04:29] <sustrik> there are just messages
| [Tuesday 08 June 2010] [09:04:34] <sustrik> some of them are single-part
| [Tuesday 08 June 2010] [09:04:40] <sustrik> some of them are multipart
| [Tuesday 08 June 2010] [09:05:08] <sustrik> subscription means 0MQ looks at the message and checks whether it's beginning matches the subscription
| [Tuesday 08 June 2010] [09:05:14] <sustrik> if not so it drops it
| [Tuesday 08 June 2010] [09:05:16] <sustrik> that's it
| [Tuesday 08 June 2010] [09:05:25] <versificateur>   well
| [Tuesday 08 June 2010] [09:05:38] <versificateur>   i understand
| [Tuesday 08 June 2010] [09:05:59] <versificateur>   it's a filter
| [Tuesday 08 June 2010] [09:06:00] <sustrik> versificateur: wrt device, yes it uses your thread to loop
| [Tuesday 08 June 2010] [09:07:23] <versificateur>   ok it's why you put it at the end of your multithreaded example
| [Tuesday 08 June 2010] [09:08:06] <sustrik> yes
| [Tuesday 08 June 2010] [09:08:35] <versificateur>   thanks!
| [Tuesday 08 June 2010] [09:08:37] <sustrik> np
| [Tuesday 08 June 2010] [09:09:20] <versificateur>   i finished test of Device implemetation in java
| [Tuesday 08 June 2010] [09:09:40] <versificateur>   i'll put it on giithub and ask you for a pull equest
| [Tuesday 08 June 2010] [09:14:15] <sustrik> grat, thanks!
| [Tuesday 08 June 2010] [09:21:45] <versificateur>   is  SNDMORE in java bindings implemented to send mutipart message?
| [Tuesday 08 June 2010] [09:24:45] <sustrik> not sure
| [Tuesday 08 June 2010] [09:24:47] <sustrik> let me see
| [Tuesday 08 June 2010] [09:25:46] <sustrik> a-ha it misses
| [Tuesday 08 June 2010] [09:26:44] <sustrik> should go to ZMQ.java
| [Tuesday 08 June 2010] [09:26:46] <sustrik> like this:
| [Tuesday 08 June 2010] [09:26:48] <sustrik> public static final int NOBLOCK = 1;
| [Tuesday 08 June 2010] [09:26:54] <sustrik> public static final int SNDMORE = 2;
| [Tuesday 08 June 2010] [09:27:13] <sustrik> will you add that to your fix?
| [Tuesday 08 June 2010] [09:27:28] <versificateur>   yes
| [Tuesday 08 June 2010] [09:37:59] Nick  impl_ is now known as impl.
| [Tuesday 08 June 2010] [11:36:06] <sustrik> versificateur: there's a question for you on the mailing list
| [Tuesday 08 June 2010] [11:36:39] <versificateur>   susrik: okay 
| [Tuesday 08 June 2010] [11:37:16] <versificateur>   i send the pull request to you only?? or to mato too?
| [Tuesday 08 June 2010] [11:39:58] <versificateur>   sustrik:???
| [Tuesday 08 June 2010] [11:40:40] <sustrik> send it to me
| [Tuesday 08 June 2010] [11:41:28] <sustrik> thx!
| [Tuesday 08 June 2010] [11:42:05] <versificateur>   :)
| [Tuesday 08 June 2010] [11:42:44] <versificateur>   the link to check the mailing list question
| [Tuesday 08 June 2010] [11:42:59] <versificateur>   i don't find it
| [Tuesday 08 June 2010] [12:51:09] <mikko>   sustrik: http://pastebin.com/8c824QBZ
| [Tuesday 08 June 2010] [12:52:13] <mikko>   happens when you dont send/recv/bind/connect
| [Tuesday 08 June 2010] [12:52:17] <mikko>   just create context and socket
| [Tuesday 08 June 2010] [15:32:59] <sustrik> mikko: i think it's OK
| [Tuesday 08 June 2010] [15:33:25] <sustrik> command_t structure that is being sent
| [Tuesday 08 June 2010] [15:33:30] <sustrik> is actually a union
| [Tuesday 08 June 2010] [15:33:56] <sustrik> for this particular command type there is less actual data than sizeof (command_t)
| [Tuesday 08 June 2010] [15:34:09] <sustrik> that's why valgring complains
| [Tuesday 08 June 2010] [16:28:39] <dermoth> Hey there... It's been a while I wantes to ask this; I'm curious about the high water mark
| [Tuesday 08 June 2010] [16:28:51] <dermoth>  /swap options, specifically how they work and where the data is stored...
| [Tuesday 08 June 2010] [16:29:21] <sustrik> dermoth: hi
| [Tuesday 08 June 2010] [16:29:26] <dermoth> hy sustrik 
| [Tuesday 08 June 2010] [16:29:47] <dermoth> hi
| [Tuesday 08 June 2010] [16:29:50] <sustrik> hwm limits number of messages in the memory
| [Tuesday 08 June 2010] [16:29:58] <dermoth> I understand the concept
| [Tuesday 08 June 2010] [16:30:04] <sustrik> swap is not ported from 1.0 yet
| [Tuesday 08 June 2010] [16:30:13] <sustrik> but should arrive soon
| [Tuesday 08 June 2010] [16:30:18] <dermoth> oh so it's just a no-op right now?
| [Tuesday 08 June 2010] [16:30:24] <sustrik> yes
| [Tuesday 08 June 2010] [16:30:54] <sustrik> it should simply offload the data on the HD when memory limits are hit
| [Tuesday 08 June 2010] [16:33:42] <dermoth> Ok, assuming it was working as expected, lets say I have web server workers that connects using an upstream/downstream scheme... could I just set HWM to zero (or nearly zero) to swap everything to disk when my forwarder device goes down? If the server crash and gets back up, will zeromq try to resume the transferts as soon as it is initialized? connected to the same device again?
| [Tuesday 08 June 2010] [16:34:37] <sustrik> no, it's not a persistence device
| [Tuesday 08 June 2010] [16:34:38] <dermoth> obviously with ZMQ_SWAP too ;)
| [Tuesday 08 June 2010] [16:34:44] <sustrik> it's swap
| [Tuesday 08 June 2010] [16:35:04] <dermoth> ok, so it's just to avoid using up all memory
| [Tuesday 08 June 2010] [16:35:05] <sustrik> used just to handle the situation when the data don't fit into memory
| [Tuesday 08 June 2010] [16:35:14] <sustrik> exactly
| [Tuesday 08 June 2010] [16:35:14] <dermoth> I see
| [Tuesday 08 June 2010] [16:43:12] <travisbrady> Where can I find the stock exchange example?  ./configure --with-exchange isn't recognized anymore.
| [Tuesday 08 June 2010] [16:52:57] <sustrik> it haven't been ported to 0MQ/2.0 yet
| [Tuesday 08 June 2010] [16:53:19] <sustrik> you can give it a try
| [Tuesday 08 June 2010] [16:56:31] <travisbrady> Ahh, ok, I'll take a look in the old repo on github
| [Tuesday 08 June 2010] [18:45:08] <jugg>    ZMQ_PAIR - for inproc:// endpoints, is the implementation usable?  The docs say its still experiemental (missing auto-reconnection), but I think that may not be so applicable to inproc?
| [Tuesday 08 June 2010] [18:47:28] <dermoth> jugg, I guess inproc reconnection migth be needed if you have threads that may restart and re-bind... I have no idea how stable it is though :)
| [Tuesday 08 June 2010] [18:51:05] <jugg>    For this implementation, that situation won't(!) occur.
| [Tuesday 08 June 2010] [18:53:27] <jugg>    hmm, "auto-reconnection" I hope has different meaning than one side of the endpoint closing the socket and re-opening though.
| [Tuesday 08 June 2010] [18:55:27] <jugg>    sockets are per thread, so it would be necessary to close the socket on thread exit, and create the socket on thread start.  I'd expect that use case *not* to fall under the missing "auto-reconnection" feature.
| [Tuesday 08 June 2010] [18:56:11] <jugg>    But my expectations don't always line up with reality :)
| [Tuesday 08 June 2010] [19:05:26] <dermoth> jugg, I could be wrong, but my understanding is that auto-reconnection means if the side that bind shuts down and restart, the socket will re-connect.
| [Tuesday 08 June 2010] [19:06:26] <dermoth> jugg, this is how it works with TCP...
| [Tuesday 08 June 2010] [19:08:29] <dermoth> note that unless you use req/rep sockets there is no guarantee the data will be delivered - however as long as your socket stays alive it will keep trying to deliver the data (that is with TCP)
| [Tuesday 08 June 2010] [19:14:10] <jugg>    Yah, if the bind socket goes away, I could see that "auto-reconnect" could be applicable to connected sockets.  thanks.
| [Wednesday 09 June 2010] [02:41:12] <jugg>  grrr. inproc requires the bind to occur before connect?  :(
| [Wednesday 09 June 2010] [02:42:12] <sustrik>   jugg: yes
| [Wednesday 09 June 2010] [02:42:18] <sustrik>   fixing it is on todo list
| [Wednesday 09 June 2010] [02:43:09] <jugg>  ok... back to managing thread startup synchronization :(
| [Wednesday 09 June 2010] [02:48:38] <sustrik>   jugg: don't you rather want to fix it in 0mq? it would be probably less hassle.
| [Wednesday 09 June 2010] [02:48:47] <sustrik>   i can give you pointers as where to look
| [Wednesday 09 June 2010] [02:49:11] <jugg>  please do
| [Wednesday 09 June 2010] [02:49:18] <sustrik>   ok, wait a sec
| [Wednesday 09 June 2010] [02:50:22] <sustrik>   have a look here:
| [Wednesday 09 June 2010] [02:50:23] <sustrik>   http://github.com/sustrik/zeromq2/blob/master/src/ctx.hpp#L144
| [Wednesday 09 June 2010] [02:50:42] <sustrik>   it's a map of inproc endpoints created by binds
| [Wednesday 09 June 2010] [02:51:24] <sustrik>   when a socket connects to an inproc endpoint it checks this map and finds the socket that created it
| [Wednesday 09 June 2010] [02:51:54] <sustrik>   what's missing is a similar map of endpoint people wish to connect to, but which don't exist at the moment
| [Wednesday 09 June 2010] [02:53:55] <sustrik>   then have a look here:
| [Wednesday 09 June 2010] [02:53:56] <sustrik>   http://github.com/sustrik/zeromq2/blob/master/src/ctx.hpp#L144
| [Wednesday 09 June 2010] [02:54:06] <sustrik>   sorry
| [Wednesday 09 June 2010] [02:54:07] <sustrik>   here:
| [Wednesday 09 June 2010] [02:54:08] <sustrik>   http://github.com/sustrik/zeromq2/blob/master/src/ctx.cpp#L260
| [Wednesday 09 June 2010] [02:54:26] <sustrik>   register_endpoint is a function that's called when inproc bind is done
| [Wednesday 09 June 2010] [02:54:36] <sustrik>   aside of storing the name in the map
| [Wednesday 09 June 2010] [02:54:57] <sustrik>   it should check whether there are any sockets waiting to connect to the newly created endpoint
| [Wednesday 09 June 2010] [02:55:04] <sustrik>   and if so, connect them
| [Wednesday 09 June 2010] [02:56:07] <jugg>  ok, thanks.  I'll look through it.
| [Wednesday 09 June 2010] [02:56:18] <sustrik>   the inproc connecting code is here: http://github.com/sustrik/zeromq2/blob/master/src/socket_base.cpp#L181
| [Wednesday 09 June 2010] [02:56:52] <sustrik>   in overall, the whole thing has some 100-200 lines, so it should not be too complex to fix
| [Wednesday 09 June 2010] [06:25:35] <mikko> ZMQ_SNDMORE is a flag to send rather than setsockopt, right?
| [Wednesday 09 June 2010] [06:29:58] <sustrik>   yes
| [Wednesday 09 June 2010] [06:30:18] <sustrik>   mikko: ZMQ_RCVMORE on the other hand is a socketopt
| [Wednesday 09 June 2010] [06:30:42] <sustrik>   it's kind of asymetric, but the API looks the least complex this way
| [Wednesday 09 June 2010] [06:42:17] <mikko> rcvmore is uint64_t 
| [Wednesday 09 June 2010] [06:42:17] <mikko> ?
| [Wednesday 09 June 2010] [06:44:55] <mikko> int64t
| [Wednesday 09 June 2010] [06:46:14] <sustrik>   int64_t
| 
| *** Logfile started
| *** on Wed Jun 9 11:14:03 2010
| 
| [Wednesday 09 June 2010] [11:14:03] Topic   The channel topic is "Welcome!".
| [Wednesday 09 June 2010] [11:14:03] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 09 June 2010] [11:14:09] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 09 June 2010] [11:14:09] Created This channel was created on 2010-02-05 10:44.
| [Wednesday 09 June 2010] [11:49:44] <CIA-17>    zeromq2: 03Martin Sustrik 07master * r604f747 10/ src/poll.cpp : issue 32 - poll_t poller broken - http://bit.ly/aucae6
| 
| *** Logfile started
| *** on Wed Jun 9 19:09:19 2010
| 
| [Wednesday 09 June 2010] [19:09:19] Topic   The channel topic is "Welcome!".
| [Wednesday 09 June 2010] [19:09:19] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 09 June 2010] [19:09:25] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 09 June 2010] [19:09:25] Created This channel was created on 2010-02-05 10:44.
| [Wednesday 09 June 2010] [19:43:45] <travisbrady>   sustrik: they are in the same os thread yes
| [Thursday 10 June 2010] [00:43:24] <sustrik>    travisbrady: ok
| [Thursday 10 June 2010] [00:43:40] <sustrik>    can you get a backtrace from the bus error?
| [Thursday 10 June 2010] [00:54:43] <travisbrady>    sustrik: I actually worked through the earlier issue, I'm now working on zmq_msg_data
| [Thursday 10 June 2010] [01:02:37] <sustrik>    ok, so everthing works ok as for now?
| [Thursday 10 June 2010] [01:02:56] <travisbrady>    well, now I'm getting "Assertion failed: !inpipe && !outpipe (pair.cpp:47)"
| [Thursday 10 June 2010] [01:03:04] <travisbrady>    Looking at pair.cpp now
| [Thursday 10 June 2010] [01:03:42] <sustrik>    travisbrady: pair is unfinished
| [Thursday 10 June 2010] [01:04:13] <sustrik>    docs say:
| [Thursday 10 June 2010] [01:04:14] <sustrik>    Note
| [Thursday 10 June 2010] [01:04:14] <sustrik>                   ZMQ_PAIR sockets are experimental, and are currently missing several features such as auto-reconnection.
| [Thursday 10 June 2010] [01:04:40] <sustrik>    so rather try using different socket type
| [Thursday 10 June 2010] [01:05:06] <travisbrady>    Hmm, I was using type 4
| [Thursday 10 June 2010] [01:05:38] <sustrik>    REP?
| [Thursday 10 June 2010] [01:05:42] <sustrik>    that one is OK
| [Thursday 10 June 2010] [01:07:23] <travisbrady>    sustrik: Yeah, I'm basically trying to implement the simple client server app from http://www.zeromq.org/docs:cookbook in ocaml as a test
| [Thursday 10 June 2010] [01:08:04] <sustrik>    sure, that should work
| [Thursday 10 June 2010] [01:08:25] <sustrik>    just avoid PAIR sockets
| [Thursday 10 June 2010] [01:11:56] <travisbrady>    Hmm, yeah I'm not touching them at all, I have no idea how I'm reaching that assertion in pair.cpp
| [Thursday 10 June 2010] [01:13:52] <sustrik>    uninitialised socket type used (0 = pair)?
| [Thursday 10 June 2010] [01:15:41] <travisbrady>    Ahh, yep, you're right.  There was a problem in my wrap_zmq_socket function
| [Thursday 10 June 2010] [01:21:53] <CIA-17> zeromq2: 03Martin Sustrik 07master * rd329c55 10/ src/tcp_connecter.cpp : issue 31 - Assertion failed: err == ECONNREFUSED || err == ETIMEDOUT (tcp_connecter.cpp:296) - http://bit.ly/aOnmHR
| [Thursday 10 June 2010] [01:21:54] <CIA-17> zeromq2: 03Martin Sustrik 07master * r76e0153 10/ (4 files): issue 33 - missing virtual destructors - http://bit.ly/9Xaca8
| [Thursday 10 June 2010] [01:34:53] <CIA-17> zeromq2: 03Piotr Trojanek 07master * r8782b4d 10/ configure.in : -lcrypto added to linking flags for QNX - http://bit.ly/b35ZMj
| 
| *** Logfile started
| *** on Thu Jun 10 05:49:53 2010
| 
| [Thursday 10 June 2010] [05:49:53] Topic    The channel topic is "Welcome!".
| [Thursday 10 June 2010] [05:49:53] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Thursday 10 June 2010] [05:49:59] Mode Channel modes: no messages from outside, topic protection
| [Thursday 10 June 2010] [05:49:59] Created  This channel was created on 2010-02-05 10:44.
| [Thursday 10 June 2010] [06:37:09] <CIA-17> zeromq2: 03Martin Sustrik 07master * r74a3907 10/ (src/encoder.hpp src/uuid.cpp): couple of ICC warnings fixed - http://bit.ly/9CRrH6
| [Thursday 10 June 2010] [06:56:44] <alefka> hi
| [Thursday 10 June 2010] [06:58:23] <CIA-17> zeromq2: 03Piotr Trojanek 07master * rc818b14 10/ src/ctx.cpp : clearing thread info structure - http://bit.ly/bjl1Cr
| [Thursday 10 June 2010] [06:58:31] <alefka> Has any possibility to point length of data to send?
| [Thursday 10 June 2010] [06:59:29] <sustrik>    alefka: you don't know how much data you want to send?
| [Thursday 10 June 2010] [07:00:14]   * sustrik is puzzled
| [Thursday 10 June 2010] [07:00:56] <alefka> know. I have large buffer (64 K), but I want to send for example the first 20 bytes... Can I do it without recreation of array?
| [Thursday 10 June 2010] [07:01:44] <alefka> just point to send function a length parameter for example or something else
| [Thursday 10 June 2010] [07:02:31] <alefka> In the regular zeromq lib I have no found the one
| [Thursday 10 June 2010] [07:02:44] <sustrik>    zmq::message_t msg  (20);
| [Thursday 10 June 2010] [07:02:54] <sustrik>    memcpy (msg.data (), buffer, 20);
| [Thursday 10 June 2010] [07:02:58] <sustrik>    s.send (msg);
| [Thursday 10 June 2010] [07:07:56] <alefka> aha... I use Java
| [Thursday 10 June 2010] [07:08:02] <alefka> :)
| [Thursday 10 June 2010] [07:23:54] <umesh>  I am getting error while compiling python bindings of zeromq
| [Thursday 10 June 2010] [07:24:20] <umesh>  zmq/_zmq.c: In function init_zmq:
| [Thursday 10 June 2010] [07:24:21] <umesh>  zmq/_zmq.c:9723: error: ZMQ_PAIR undeclared (first use in this function)
| [Thursday 10 June 2010] [07:24:21] <umesh>  zmq/_zmq.c:9723: error: (Each undeclared identifier is reported only once
| [Thursday 10 June 2010] [07:24:21] <umesh>  zmq/_zmq.c:9723: error: for each function it appears in.)
| [Thursday 10 June 2010] [07:24:32] <umesh>  these are the errors i get 
| [Thursday 10 June 2010] [07:26:18] <sustrik>    umesh: do you have latest pyzmq?
| [Thursday 10 June 2010] [07:26:48] <umesh>  i version before latest ...
| [Thursday 10 June 2010] [07:26:54] <umesh>  as i am using 2.0.6 
| [Thursday 10 June 2010] [07:27:05] <umesh>  1 version before latest ...
| [Thursday 10 June 2010] [07:27:39] <sustrik>    the latest version updates to 2.0.7 API:
| [Thursday 10 June 2010] [07:27:40] <sustrik>    Updating to new 2.0.7 API changes.
| [Thursday 10 June 2010] [07:27:40] <sustrik>    * Context only takes the number of io threads.
| [Thursday 10 June 2010] [07:27:40] <sustrik>    * P2P -> PAIR.
| [Thursday 10 June 2010] [07:27:40] <sustrik>    * No stopwatch.
| [Thursday 10 June 2010] [07:27:40] <sustrik>    * No LWM socket option.
| [Thursday 10 June 2010] [07:29:23] <umesh>  thats the reason i am not using latest ... because i am using zmq c version  2.0.6
| [Thursday 10 June 2010] [07:34:27] <sustrik>    then use P2P
| [Thursday 10 June 2010] [07:34:34] <sustrik>    it was renamed to PAIR in 2.0.7
| [Thursday 10 June 2010] [07:36:54] <alefka> sustrik: \I suppose java lib has no such oportunity... is it so?
| [Thursday 10 June 2010] [07:37:18] <sustrik>    java lib works with java byte arrays
| [Thursday 10 June 2010] [07:37:37] <alefka> ok
| [Thursday 10 June 2010] [07:37:42] <sustrik>    is it a problem to take first 20 characters from a byte array?
| [Thursday 10 June 2010] [07:37:54] <sustrik>    arr [0..19]
| [Thursday 10 June 2010] [07:37:56] <sustrik>    or something
| [Thursday 10 June 2010] [07:38:03]   * sustrik doesn't speak java
| [Thursday 10 June 2010] [08:44:18] <umesh>  can i ask some git questions here .
| [Thursday 10 June 2010] [08:44:46] <umesh>  basically how to go to i version back for a specific file in git respository if you are at head 
| [Thursday 10 June 2010] [09:19:12] Part addicted has left this channel ("Konversation terminated!").
| [Thursday 10 June 2010] [11:33:43] <CIA-17> rbzmq: 03Brian Buchanan 07master * r12c3a9f 10/ rbzmq.cpp : whitespace cleanup for consistent coding style - http://bit.ly/9CGo7J
| [Thursday 10 June 2010] [11:33:43] <CIA-17> rbzmq: 03Brian Buchanan 07master * r1f7c517 10/ rbzmq.cpp : fix crash on access of socket that has been closed - http://bit.ly/dfwZoH
| [Thursday 10 June 2010] [12:16:20] <sbeaulois>  hi 
| [Thursday 10 June 2010] [12:19:51] <sbeaulois>  I tried to bind pyzmq on  rhel 5 but i got some error m=when finish binding 
| [Thursday 10 June 2010] [12:20:38] <sbeaulois>  i cannot import zmq module from comand 
| [Thursday 10 June 2010] [12:21:05] <guido_g>    paste the error message to a paste-bin
| [Thursday 10 June 2010] [12:21:22] <guido_g>    w/o the messages we can't help
| [Thursday 10 June 2010] [12:21:24] <sbeaulois>  cannot import name _zmq
| [Thursday 10 June 2010] [12:21:35] <guido_g>    -> <sbeaulois> I tried to bind pyzmq on  rhel 5 but i got some error m=when finish binding
| [Thursday 10 June 2010] [12:22:15] <guido_g>    what shall this line say?
| [Thursday 10 June 2010] [12:22:29] <sbeaulois>  my english is not good 
| [Thursday 10 June 2010] [12:22:30] <sbeaulois>  ok 
| [Thursday 10 June 2010] [12:22:42] <sbeaulois>  i will like bind pyzmq 
| [Thursday 10 June 2010] [12:23:00] <sbeaulois>  on RedHat Entriprise Linux 5
| [Thursday 10 June 2010] [12:24:50] <guido_g>    what do you mean with "bind"?
| [Thursday 10 June 2010] [12:25:10] <sbeaulois>  install
| [Thursday 10 June 2010] [12:25:20] <guido_g>    ahhh
| [Thursday 10 June 2010] [12:25:25] <sbeaulois>  i will compiled pyzmq
| [Thursday 10 June 2010] [12:25:33] <guido_g>    ok
| [Thursday 10 June 2010] [12:25:38] <guido_g>    any errors there?
| [Thursday 10 June 2010] [12:25:53] <sbeaulois>  i compiled pyzmq fine
| [Thursday 10 June 2010] [12:26:09] <guido_g>    ok
| [Thursday 10 June 2010] [12:26:16] <guido_g>    how did you do that?
| [Thursday 10 June 2010] [12:26:21] <sbeaulois>  but when i tried to import zmq from python command line i got somes errors 
| [Thursday 10 June 2010] [12:26:31] <sbeaulois>   cannot import name _zmq
| [Thursday 10 June 2010] [12:26:55] <guido_g>    how did you compile and install pyzmq?
| [Thursday 10 June 2010] [12:27:02] <versificateur>  look at here http://blog.boxedice.com/2010/05/23/building-zeromq-and-pyzmq-on-red-hat/
| [Thursday 10 June 2010] [12:27:43] <guido_g>    ok
| [Thursday 10 June 2010] [12:27:53] <guido_g>    did you follow all the mentioned steps?
| [Thursday 10 June 2010] [12:28:11] <sbeaulois>  verficateur => ok 
| [Thursday 10 June 2010] [12:28:44] <guido_g>    versificateur: ahhh, /me is silent then :)
| [Thursday 10 June 2010] [12:29:54] <versificateur>  :) what means /me ?
| [Thursday 10 June 2010] [12:30:02] <sbeaulois>  i'am going to trie it
| [Thursday 10 June 2010] [12:30:22] <guido_g>    versificateur: myself, I, the one writing
| [Thursday 10 June 2010] [12:30:44] <versificateur>  sustrik: are you here??
| [Thursday 10 June 2010] [12:30:45] <guido_g>    versificateur: most clients expand that to your nick, when given as first word
| [Thursday 10 June 2010] [12:30:49] <guido_g>    like:
| [Thursday 10 June 2010] [12:30:55] <versificateur>  ah okay
| [Thursday 10 June 2010] [12:30:55]   * guido_g is silent now
| [Thursday 10 June 2010] [15:38:42] <sustrik>    i am here
| [Thursday 10 June 2010] [15:38:52] <sustrik>    but i have no experience with pyzmq
| [Thursday 10 June 2010] [15:38:59] <sustrik>    brian should know
| [Thursday 10 June 2010] [15:39:05] <sustrik>    try asking on the mailing list
| [Thursday 10 June 2010] [16:26:19] Notice   -Martinp23- [Global Notice] Our webchat is experiencing big changes! Channel ops: you may need to fix some of your bans or quiets as a result. All the details can be found at http://bit.ly/ckfqLh and you can get help at any time in #freenode. Thanks for using freenode and have a great day!
| [Thursday 10 June 2010] [16:48:14] <travlr> Is kde-4.5 called kde-4.4.85, and if so Is kde-4.4.9999 the latest for kde-4.4 ???
| [Thursday 10 June 2010] [16:49:42] <travlr> sorry wrong channel :P
| [Thursday 10 June 2010] [19:47:59] Mode ChanServ gives CIA-17 permission to talk.
| [Thursday 10 June 2010] [21:15:29] Nick kcollins is now known as temme.
| [Friday 11 June 2010] [00:56:18] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r27877d7 10/ src/tcp_connecter.cpp : EHOSTUNREACH is acceptable outcome from connect - http://bit.ly/dzcG79
| [Friday 11 June 2010] [01:03:20] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r5ee355d 10/ src/tcp_connecter.cpp : if connect asserts, exact error is reported - http://bit.ly/b0P5Qg
| [Friday 11 June 2010] [01:56:07] <umesh>    can I use XREP and REQ socket pairs ...
| [Friday 11 June 2010] [01:56:26] <umesh>    means in server I will use XREP and client will use REQ socket ...
| [Friday 11 June 2010] [01:56:59] <umesh>    I want to do this because I want to send multiple responses to a single request ...  
| [Friday 11 June 2010] [01:57:40] <sustrik>  umesh that won't work
| [Friday 11 June 2010] [01:57:51] <sustrik>  use XREQ/XREP
| [Friday 11 June 2010] [01:57:57] <umesh>    ok
| [Friday 11 June 2010] [01:58:19] <sustrik>  be aware that you have to copy routeback info from request to reply
| [Friday 11 June 2010] [01:58:25] <sustrik>  by hand
| [Friday 11 June 2010] [01:58:37] <umesh>    will I be able to send multiple responses to the single request ...
| [Friday 11 June 2010] [01:58:39] <umesh>    ?
| [Friday 11 June 2010] [01:59:09] <sustrik>  when you get the request on the XREP side
| [Friday 11 June 2010] [01:59:21] <sustrik>  it'll be composed of routeback info and your message
| [Friday 11 June 2010] [01:59:38] <sustrik>  routeback info says how to route the reply back to the requester
| [Friday 11 June 2010] [01:59:47] <sustrik>  you have to copy it to the reply
| [Friday 11 June 2010] [01:59:56] <sustrik>  so that 0MQ knows where to send the message
| [Friday 11 June 2010] [02:00:15] <sustrik>  REQ/REP does this for you; with XREQ/XREP you have to handle it by hand
| [Friday 11 June 2010] [02:00:37] <sustrik>  btw, sending a multi-part reply won't do?
| [Friday 11 June 2010] [02:04:23] <CIA-17>   zeromq2: 03Brian Buchanan 07master * rac90b7e 10/ (AUTHORS src/socket_base.cpp): issue 35 - ZMQ_RCVMORE sometimes erroneously returns false - http://bit.ly/dvw31S
| [Friday 11 June 2010] [02:05:36] <umesh>    sustrik: I want to avoid parsing in client ...
| [Friday 11 June 2010] [02:05:46] <umesh>    of multipart reply ...
| [Friday 11 June 2010] [02:05:50] <sustrik>  then use multi-part reply
| [Friday 11 June 2010] [02:05:54] <sustrik>  ?
| [Friday 11 June 2010] [02:05:57] <sustrik>  what parsing
| [Friday 11 June 2010] [02:06:30] <sustrik>  in any case the point is that multi-part message is guaranteed to be atomic
| [Friday 11 June 2010] [02:06:37] <sustrik>  you either get all parts or none
| [Friday 11 June 2010] [02:06:56] <umesh>    if I send multipart reply then in the client when I recv ... I will get one message and then need to parse that multipart message 
| [Friday 11 June 2010] [02:07:07] <umesh>    ok
| [Friday 11 June 2010] [02:07:17] <umesh>    means I will get multple recv ...
| [Friday 11 June 2010] [02:07:21] <sustrik>  yes
| [Friday 11 June 2010] [02:07:24] <umesh>    ok
| [Friday 11 June 2010] [02:07:59] <sustrik>  see ZMQ_SNDMORE and ZMQ_RCVMORE
| [Friday 11 June 2010] [02:09:25] <umesh>    no documention of this in zmq_setsocketopt manaul 
| [Friday 11 June 2010] [02:09:48] <umesh>    therefore I was not aware of this multipart reply ...
| [Friday 11 June 2010] [02:11:43] <umesh>    not even in send and recv api
| 
| *** Logfile started
| *** on Fri Jun 11 08:31:34 2010
| 
| [Friday 11 June 2010] [08:31:34] Topic  The channel topic is "Welcome!".
| [Friday 11 June 2010] [08:31:34] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Friday 11 June 2010] [08:31:40] Mode   Channel modes: no messages from outside, topic protection
| [Friday 11 June 2010] [08:31:40] Created    This channel was created on 2010-02-05 10:44.
| [Friday 11 June 2010] [08:31:41] <sustrik>  why ephemeral ports then?
| [Friday 11 June 2010] [08:31:46] <brickhazel>   yes the nameservice locations are fixed, everything else is random
| [Friday 11 June 2010] [08:33:12] <brickhazel>   we have a resource manager that is capable of dynamically starting a service anywhere in the network depending on loading
| [Friday 11 June 2010] [08:33:26] <brickhazel>   we then want to be able to discover the service
| [Friday 11 June 2010] [08:33:26] <sustrik>  if it's accessible :)
| [Friday 11 June 2010] [08:33:56] <sustrik>  well, this may work in corporate environment, but won't work in Internet scenarios
| [Friday 11 June 2010] [08:33:57] <brickhazel>   if what is accessible?  
| [Friday 11 June 2010] [08:34:07] <brickhazel>   true.. this is a closed system
| [Friday 11 June 2010] [08:34:15] <sustrik>  the location where you want to start the service
| [Friday 11 June 2010] [08:34:32] <sustrik>  yes, but 0mq is meant also for Internet environments
| [Friday 11 June 2010] [08:34:39] <sustrik>  and thus ephemeral ports are not an option
| [Friday 11 June 2010] [08:34:51] <sustrik>  you can fork the project and add the code if needed...
| [Friday 11 June 2010] [08:35:59] <brickhazel>   hmm... not a big fan of forking
| [Friday 11 June 2010] [08:38:19] <brickhazel>   ok, thanks for your help.. i need to think about this some more
| [Friday 11 June 2010] [08:45:48] <sustrik>  brickhazel: think of services, http is on port 80, ssh is on port 22, why should your service be different
| [Friday 11 June 2010] [08:46:58] <brickhazel>   sustrik: these are more like micro-services sprinkled throughout our closed network
| [Friday 11 June 2010] [08:47:21] <brickhazel>   failover is a common occurrence
| [Friday 11 June 2010] [08:47:53] <brickhazel>   it is a very dynamic system and service discovery is how we have been connecting things so far
| [Friday 11 June 2010] [08:48:04] <sustrik>  sure, it's up to you
| [Friday 11 June 2010] [08:48:22] <brickhazel>   i think there are too many endpoints to try to manage by hand (aka assigning fixed ports to services)
| [Friday 11 June 2010] [08:48:34] <sustrik>  too many service types?
| [Friday 11 June 2010] [08:48:39] <brickhazel>   yes
| [Friday 11 June 2010] [08:48:57] <sustrik>  the person who implements the service should choose a port number for it
| [Friday 11 June 2010] [08:49:06] <sustrik>  it's not that much work
| [Friday 11 June 2010] [08:50:19] <brickhazel>   true... but this is a system of subsystems
| [Friday 11 June 2010] [08:50:31] <brickhazel>   someone has to manage a master list of all ports
| [Friday 11 June 2010] [08:50:40] <brickhazel>   across many different projects
| [Friday 11 June 2010] [08:51:00] <sustrik>  IANA? :)
| [Friday 11 June 2010] [08:51:28] <brickhazel>   :) yes but this is not internet scale
| [Friday 11 June 2010] [08:51:51] <sustrik>  having a port number registered at IANA is good for your ego :)
| [Friday 11 June 2010] [08:51:54] <brickhazel>   more like a distributed/parallel processing system
| [Friday 11 June 2010] [08:52:13] <brickhazel>   :) i bet
| [Friday 11 June 2010] [08:52:26] <sustrik>  i understand
| [Friday 11 June 2010] [08:52:46] <sustrik>  the whole point of 0mq, however, is to make app you write infinitely scalable
| [Friday 11 June 2010] [08:53:10] <sustrik>  unfortunately, local hacks like ephemeral port numbers interfere with that
| [Friday 11 June 2010] [08:54:17] <sustrik>  that's why i don't want it in the trunk
| [Friday 11 June 2010] [08:54:30] <brickhazel>   i understand
| [Friday 11 June 2010] [08:59:31] <umesh>    I am getting the extra appended string on the server in REQ/REP sockets 
| [Friday 11 June 2010] [08:59:44] <sustrik>  ?
| [Friday 11 June 2010] [08:59:50] <umesh>    I send string "ns_set app app1" from client 
| [Friday 11 June 2010] [09:00:11] <umesh>    and I recieved "ns_set app app1fifo_fast" on server
| [Friday 11 June 2010] [09:00:39] <umesh>    I checked pcap capture ... it shows correctly "ns_set app app1"
| [Friday 11 June 2010] [09:00:40] <sustrik>  i assume there's no terminating zero in the string
| [Friday 11 June 2010] [09:01:06] <sustrik>  thus printf prints also the bogus memory after the end of the string
| [Friday 11 June 2010] [09:02:33] <umesh>    but original string does have ...
| [Friday 11 June 2010] [09:03:24] <sustrik>  i assume you don't send it in the message
| [Friday 11 June 2010] [09:18:56] <umesh>    now working ...
| [Friday 11 June 2010] [09:19:16] <umesh>    it was the issue of null char ... i saw pcap as well ... end 0 was not there 
| [Friday 11 June 2010] [09:19:34] <umesh>    one more point ... how is multipart messages are implemented ...
| [Friday 11 June 2010] [09:19:57] <umesh>    means only one message is send or multiple messges clubbed together ...
| [Friday 11 June 2010] [09:20:05] <umesh>    and then send ...
| [Friday 11 June 2010] [09:20:09] <umesh>    i assume later 
| [Friday 11 June 2010] [09:21:21] <sustrik>  the latter
| [Friday 11 June 2010] [09:23:49] <umesh>    ok
| [Friday 11 June 2010] [12:37:19] Nick   test is now known as Guest80153.
| [Friday 11 June 2010] [14:22:36] <cremes>   is the "request identity" prepended to messages sent on XREQ sockets guaranteed to remain the same for the life of the socket?
| [Friday 11 June 2010] [14:24:43] <sustrik>  cremes: yes
| [Friday 11 June 2010] [14:24:58] <sustrik>  hm, well, unless reconnection happens
| [Friday 11 June 2010] [14:25:18] <sustrik>  if you set the identity by hand it'll never change
| [Friday 11 June 2010] [14:25:48] <sustrik>  if you don't set it, it is generated by the peer each time TCP connection is established
| [Friday 11 June 2010] [14:26:02] <cremes>   oh, i see
| [Friday 11 June 2010] [14:26:06] <cremes>   i'll set it myself then
| [Friday 11 June 2010] [14:26:16] <cremes>   i don't want it to ever change
| [Friday 11 June 2010] [14:27:04] <sustrik>  this is to be done in the binding or in your app?
| [Friday 11 June 2010] [14:27:09] <cremes>   in my app
| [Friday 11 June 2010] [14:27:13] <sustrik>  ok
| [Friday 11 June 2010] [14:27:16] <sustrik>  makes semse
| [Friday 11 June 2010] [14:27:19] <sustrik>  sense
| [Friday 11 June 2010] [14:27:27] <cremes>   i'm leaving the binding as "vanilla" as possible so it matches the C api closely
| [Friday 11 June 2010] [14:27:50] <sustrik>  yes, that's good
| [Friday 11 June 2010] [14:28:06] <cremes>   sustrik: on a related note, i'd like to confirm that it doesn't make any sense to set an identity on a SUB socket since it can't transmit
| [Friday 11 June 2010] [14:28:35] <sustrik>  it does
| [Friday 11 June 2010] [14:28:40] <sustrik>  the point with identities
| [Friday 11 June 2010] [14:28:51] <cremes>   rephrase please
| [Friday 11 June 2010] [14:29:00] <sustrik>  is that they allow to track resources assigned to particular connection
| [Friday 11 June 2010] [14:29:12] <sustrik>  example:
| [Friday 11 June 2010] [14:29:27] <sustrik>  when SUB socket connect to PUB socket
| [Friday 11 June 2010] [14:29:36] <versificateur>    hello
| [Friday 11 June 2010] [14:29:38] <sustrik>  PUB socket creates a message queue
| [Friday 11 June 2010] [14:29:45] <sustrik>  for that particular connection
| [Friday 11 June 2010] [14:30:01] <sustrik>  if the connection breaks and gets reestablished
| [Friday 11 June 2010] [14:30:34] <sustrik>  SUB's identity allows the PUB to pair the new connection with the old queue
| [Friday 11 June 2010] [14:30:46] <cremes>   ah, it maps the queue by identity? i think i get it now.
| [Friday 11 June 2010] [14:30:51] <sustrik>  yes
| [Friday 11 June 2010] [14:30:55] <versificateur>    sustrik: did you had a look to my jzmq modifications?
| [Friday 11 June 2010] [14:31:02] <cremes>   thank you for the clarification
| [Friday 11 June 2010] [14:31:10] <sustrik>  np
| [Friday 11 June 2010] [14:31:13] <sustrik>  versificateur: yes i did
| [Friday 11 June 2010] [14:31:18] <sustrik>  i replied on github
| [Friday 11 June 2010] [14:31:23] <sustrik>  you've probably missed the message
| [Friday 11 June 2010] [14:31:44] <sustrik>  anyway the problem is that every single line of zmq is touched in the patch
| [Friday 11 June 2010] [14:31:54] <sustrik>  it's impossible to review it
| [Friday 11 June 2010] [14:32:03] <sustrik>  maybe the line endings are different?
| [Friday 11 June 2010] [14:34:02] <versificateur>    hum...
| [Friday 11 June 2010] [14:34:27] <versificateur>    i can tell you files I added
| [Friday 11 June 2010] [14:34:38] <sustrik>  you have written it on windows?
| [Friday 11 June 2010] [14:34:44] <versificateur>    and files i modified...
| [Friday 11 June 2010] [14:35:01] <versificateur>    no no not on windows
| [Friday 11 June 2010] [14:35:27] <versificateur>    i currently work on Fedora 12 and Ubuntu 10.04
| [Friday 11 June 2010] [14:35:33] <sustrik>  i recall there were changes to MSVC project
| [Friday 11 June 2010] [14:35:39] <sustrik>  let me see...
| [Friday 11 June 2010] [14:36:21] <versificateur>    i made them manually
| [Friday 11 June 2010] [14:36:31] <versificateur>    then tested them on windows
| [Friday 11 June 2010] [14:36:36] <sustrik>  ah
| [Friday 11 June 2010] [14:37:45] <sustrik>  have a look here:
| [Friday 11 June 2010] [14:37:47] <sustrik>  http://github.com/bluig/jzmq/commit/20c2ead95d48039950d52c929daf3de2b8d05e4f
| [Friday 11 June 2010] [14:38:28] <sustrik>  how come everything is marked as changed?
| [Friday 11 June 2010] [14:39:31] <versificateur>    probably because I'm not good with git
| [Friday 11 June 2010] [14:39:45] <sustrik>  neither am i
| [Friday 11 June 2010] [14:39:58] <sustrik>  hallo! any git experts around???
| [Friday 11 June 2010] [14:41:21] <sustrik>  hm, maybe the diff itself failed in some strange way
| [Friday 11 June 2010] [14:41:30] <versificateur>    perhaps i should remove the repository and restart from scratch???
| [Friday 11 June 2010] [14:41:34] <sustrik>  there are 2 unmodified lines there...
| [Friday 11 June 2010] [14:42:12] <sustrik>  well, you are testing it on linux and windows, right?
| [Friday 11 June 2010] [14:42:37] <versificateur>    yeah
| [Friday 11 June 2010] [14:42:47] <sustrik>  that's the same i would do
| [Friday 11 June 2010] [14:42:51] <sustrik>  so let's do it this way
| [Friday 11 June 2010] [14:43:01] <sustrik>  i'll add you as contributor to the project
| [Friday 11 June 2010] [14:43:12] <versificateur>    :)
| [Friday 11 June 2010] [14:43:15] <sustrik>  that'll allow you to commit yourself
| [Friday 11 June 2010] [14:43:28] <versificateur>    thanks
| [Friday 11 June 2010] [14:43:28] <sustrik>  you make sure that it builds/works on the two platforms
| [Friday 11 June 2010] [14:43:32] <sustrik>  wait a sec
| [Friday 11 June 2010] [14:45:07] <sustrik>  versificateur: done
| [Friday 11 June 2010] [14:45:47] <versificateur>    :)
| [Friday 11 June 2010] [14:55:45] <travisbrady>  versificateur: which language are you writing a binding for?
| [Friday 11 June 2010] [15:00:20] <versificateur>    java
| [Friday 11 June 2010] [16:20:41] <sg>   anybody on?
| [Friday 11 June 2010] [17:06:45] <soren>    I'm hoping someone can help me explain this: http://pastebin.com/qsWYHhdK
| [Friday 11 June 2010] [17:07:34] <soren>    When I run those two, the consumer only sees every 256th message.
| [Friday 11 June 2010] [17:08:04] <soren>    I thought the producer might be going to fast, so I added the sleep statement.. Didn't help at all.
| [Friday 11 June 2010] [17:08:20] <soren>    I'm sure I'm doing something silly, but I can't see what it is.
| [Friday 11 June 2010] [17:11:37] <soren>    err... but now it works.
| [Friday 11 June 2010] [17:12:33] <soren>    I can't imagine what I changed..
| [Friday 11 June 2010] [17:12:47] <sustrik>  soren: hi
| [Friday 11 June 2010] [17:13:10] <sustrik>  you are subsribed only for messages that start with zero byte :)
| [Friday 11 June 2010] [17:13:18] <sustrik>  zmq_setsockopt (socket, ZMQ_SUBSCRIBE, "", 1);
| [Friday 11 June 2010] [17:13:49] <soren>    Yeah, I fixed that.
| [Friday 11 June 2010] [17:14:00] <soren>    ...and I wasn't half an hour ago when it was acting strangely.
| [Friday 11 June 2010] [17:14:21] <soren>    So, I read in the docs that zmq_send returning doesn't mean it's been sent.
| [Friday 11 June 2010] [17:14:35] <sustrik>  nope, it's async
| [Friday 11 June 2010] [17:15:22] <soren>    What I swear I was experiencing was that the consumer would only see anything happen once for every 256 messages sent by the producer, and it would only receive one message.
| [Friday 11 June 2010] [17:15:25] <soren>    It was very odd.
| [Friday 11 June 2010] [17:15:50] <sustrik>  it looks exactly as if the subscription for zero byte was in place
| [Friday 11 June 2010] [17:16:00] <soren>    Why would anything go through that way?
| [Friday 11 June 2010] [17:16:18] <soren>    I mean... Why would I see every 256th message?
| [Friday 11 June 2010] [17:16:19] <sustrik>  you are putting sequence of integers into the message
| [Friday 11 June 2010] [17:16:29] <soren>    Oh.
| [Friday 11 June 2010] [17:16:32] <sustrik>  so the messages look like this
| [Friday 11 June 2010] [17:16:33] <soren>    Oh!
| [Friday 11 June 2010] [17:16:34] <sustrik>  00000000
| [Friday 11 June 2010] [17:16:37] <soren>    Right, right.
| [Friday 11 June 2010] [17:16:37] <sustrik>  01000000
| [Friday 11 June 2010] [17:16:39] <soren>     I see where you're going.
| [Friday 11 June 2010] [17:16:51] <soren>    That answers my next question.
| [Friday 11 June 2010] [17:17:33] <soren>    ...which was going to be "how does the sender set the "topic" of the message (i.e. what the consumer subscribes to)", but I get that now.
| [Friday 11 June 2010] [17:17:42] <soren>    ...but you're probably quite right.
| [Friday 11 June 2010] [17:17:52] <soren>    zeromq was just too clever for me. :)
| [Friday 11 June 2010] [17:17:58] <sustrik>  :)
| [Friday 11 June 2010] [17:18:46] <soren>    Ok, another question...
| [Friday 11 June 2010] [17:19:30] <soren>    I currently have an app that uses amqp to send messages around using a topic exchange. All nodes connect to the same broker and pass msgs around.
| [Friday 11 June 2010] [17:20:04] <soren>    To achieve something similar with zeromq, I should use multicast, right?
| [Friday 11 June 2010] [17:20:30] <sustrik>  multicast is quite hard to configure
| [Friday 11 June 2010] [17:20:49] <soren>    Yeah, that's the impression I get.
| [Friday 11 June 2010] [17:20:51] <sustrik>  if you don't care about having a single process in the middle
| [Friday 11 June 2010] [17:20:56] <sustrik>  use zmq_forwarder
| [Friday 11 June 2010] [17:21:03] <sustrik>  see example here: http://github.com/sustrik/zeromq-chat
| [Friday 11 June 2010] [17:21:04] <soren>    Well, I do that now, but I'd like to not have to have that.
| [Friday 11 June 2010] [17:21:40] <sustrik>  other option is to connect each subscriber to every publisher
| [Friday 11 June 2010] [17:22:02] <soren>    Yeah, that would suck.
| [Friday 11 June 2010] [17:22:10] <sustrik>  then multicast
| [Friday 11 June 2010] [17:22:15] <soren>    I'd like to be able to add and remove both publishers and subscribers on the fly.
| [Friday 11 June 2010] [17:22:33] <soren>    I've never wrapped my head around multicast addressing.
| [Friday 11 June 2010] [17:22:45] <sustrik>  the point is that for all-to-all communication you need a central node
| [Friday 11 June 2010] [17:22:52] <sustrik>  it can be either zmq_forwarder
| [Friday 11 June 2010] [17:23:02] <sustrik>  of your network switch (in case of multicast)
| [Friday 11 June 2010] [17:23:29] <sustrik>  so these are the only options:
| [Friday 11 June 2010] [17:23:36] <sustrik>  1. connect each-to-each by hand
| [Friday 11 June 2010] [17:23:46] <sustrik>  2. have zmq_forwarder in the middle
| [Friday 11 June 2010] [17:23:50] <sustrik>  3. use multicast
| [Friday 11 June 2010] [17:24:21] <soren>    Ok. I'm trying the multicast example from the cookbook..
| [Friday 11 June 2010] [17:24:42] <soren>    I've replaced my zmq_bind and zmq_connects from the example in the pastebin with:
| [Friday 11 June 2010] [17:24:57] <soren>    zmq_connect(socket, "epgm://eth0;239.192.1.1:5555");
| [Friday 11 June 2010] [17:25:20] <soren>    and nothing is getting through. Does this not work locally?
| [Friday 11 June 2010] [17:25:26] <soren>    On the same box, I mean.
| [Friday 11 June 2010] [17:31:45] <sustrik>  it should
| [Friday 11 June 2010] [17:32:00] <sustrik>  multicast loopback is set to on by default
| [Friday 11 June 2010] [17:32:43] <sustrik>  not sure about eth0 though
| [Friday 11 June 2010] [17:32:46] <sustrik>  try lo instead
| [Friday 11 June 2010] [17:33:31] <soren>    eth0 has the MULTICAST flag set.
| [Friday 11 June 2010] [17:34:29] <sustrik>  i mean, i am not sure that you can loopback via eth0
| [Friday 11 June 2010] [17:34:35] <sustrik>  thy lo (127.0.0.1)
| [Friday 11 June 2010] [17:34:38] <sustrik>  try*
| [Friday 11 June 2010] [17:34:42] <soren>    Yeah, lo works.
| [Friday 11 June 2010] [17:34:47]     * soren ponders
| [Friday 11 June 2010] [17:35:11] <soren>    The multicast addresss... Is that just something everyone needs to agree on?
| [Friday 11 June 2010] [17:35:40] <sustrik>  there's specific interval of addresses assigned to multicast
| [Friday 11 June 2010] [17:35:58] <sustrik>  within that interval your apps must agree on specific address
| [Friday 11 June 2010] [17:36:02] <soren>    Right, right, sure.
| [Friday 11 June 2010] [17:36:16] <soren>    Right, it was just that last bit I wasn't sure about.
| [Friday 11 June 2010] [17:36:38] <soren>    How far does multicast reach? Broadcast domain?
| [Friday 11 June 2010] [17:36:56] <soren>    Or can it go further somehow?
| [Friday 11 June 2010] [17:37:05] <sustrik>  depends on how your routers are set
| [Friday 11 June 2010] [17:37:10] <soren>    Ok.
| [Friday 11 June 2010] [17:37:18] <sustrik>  but normally multicast is disabled on routers
| [Friday 11 June 2010] [17:38:10] <soren>    Gotcha.
| [Friday 11 June 2010] [17:38:29] <soren>    Ok, so not only must the interface used be UP and have MULTICAST set, it must also have an address.
| [Friday 11 June 2010] [17:38:42] <soren>    eth0 only passed two of those requirements :)
| [Friday 11 June 2010] [17:40:12] <soren>    sustrik: Thanks a lot! This has been very enlightening.
| [Friday 11 June 2010] [17:40:21] <sustrik>  you are welcome
| [Friday 11 June 2010] [21:42:02] Nick   Jeff_ is now known as Guest15169.
| 
| *** Logfile started
| *** on Sat Jun 12 08:51:31 2010
| 
| [Saturday 12 June 2010] [08:51:31] Topic    The channel topic is "Welcome!".
| [Saturday 12 June 2010] [08:51:31] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Saturday 12 June 2010] [08:51:37] Mode Channel modes: no messages from outside, topic protection
| [Saturday 12 June 2010] [08:51:37] Created  This channel was created on 2010-02-05 10:44.
| [Sunday 13 June 2010] [04:34:58] <rgl>  hello
| [Sunday 13 June 2010] [04:35:20] <rgl>  known any zeromq binding to nodejs?
| [Sunday 13 June 2010] [04:40:11] <guido_g>  not out of my head
| [Sunday 13 June 2010] [04:40:58] <sustrik>  what's nodejs?
| [Sunday 13 June 2010] [04:42:31] <guido_g>  http://nodejs.org/
| [Sunday 13 June 2010] [04:42:58] <guido_g>  sort of http server in java-script
| [Sunday 13 June 2010] [04:43:03] <sustrik>  a-ha
| [Sunday 13 June 2010] [04:43:11] <guido_g>  toy of the month :)
| [Sunday 13 June 2010] [04:43:39] <sustrik>  funny thing is that lot of people are basically doing http<->0mq bridges
| [Sunday 13 June 2010] [04:44:00] <guido_g>  http is *the* thing
| [Sunday 13 June 2010] [04:44:05] <sustrik>  :)
| [Sunday 13 June 2010] [04:44:12] <guido_g>  even for things it's suitable for
| [Sunday 13 June 2010] [04:44:36] <guido_g>  but what do i know, i'm only a technician
| [Sunday 13 June 2010] [04:44:56] <sustrik>  no idea here either
| [Sunday 13 June 2010] [04:45:17] <sustrik>  i'm a C person
| [Sunday 13 June 2010] [04:45:27] <sustrik>  huh, what's http?- style
| [Sunday 13 June 2010] [05:32:54] <Steffen___>   FYI, I wrote a Perl binding for 0MQ2 yesterday. http://github.com/tsee/ZeroMQ-Perl
| [Sunday 13 June 2010] [05:33:03] <Steffen___>   It's based on the C++ interface.
| [Sunday 13 June 2010] [05:33:24] <Steffen___>   Seems to be working fine. Adds 8us latency, according to my tests on a laptop.
| [Sunday 13 June 2010] [05:33:41] <Steffen___>   Some of the get/setsockopt calls are still untested/flaky.
| [Sunday 13 June 2010] [05:34:50] <Steffen___>   License is currently dual Artistic License/GPL just like Perl itself. No documentation (I wrote it in the afternoon). I'll be on a business trip for three weeks starting today, so no support either. I do intend to release it to CPAN and maintain it down the road.
| [Sunday 13 June 2010] [05:36:19] <Steffen___>   I'm reporting it here since I'm on the run and couldn't be bothered to subscribe to the mailing list just for that. Might do that when I get back. Feel free to contact me at smueller@cpan.org.
| [Sunday 13 June 2010] [05:37:09] <Steffen___>   PS: For non-Perl folks: Building it is as easy as "perl Makefile.PL && make && make test && sudo make install"
| [Sunday 13 June 2010] [05:38:37] <Steffen___>   Strange talking to myself ;)
| [Sunday 13 June 2010] [05:38:43] <Steffen___>   Have a nice week-end.
| [Sunday 13 June 2010] [07:48:14] Nick   y is now known as Guest66958.
| [Sunday 13 June 2010] [10:57:55] <mikko>    good morning
| [Sunday 13 June 2010] [10:58:00] <mikko>    or more like afternoon now
| [Sunday 13 June 2010] [13:02:30] Nick   y is now known as Guest98295.
| [Sunday 13 June 2010] [13:25:12] Nick   Guest98295 is now known as rgl.
| [Monday 14 June 2010] [00:16:57] <Gambit->  evenin' chaps
| [Monday 14 June 2010] [00:17:20] <Gambit->  I'm trying to make the architectural decision between zeromq and rabbitmq.  Anyone care to discuss, or have references to cite?
| [Monday 14 June 2010] [00:18:07] <sustrik>  hi
| [Monday 14 June 2010] [00:18:15] <sustrik>  depends on your scenario
| [Monday 14 June 2010] [00:18:19] <Gambit->  evenin' sustrik
| [Monday 14 June 2010] [00:18:22] <Gambit->  indeed it does
| [Monday 14 June 2010] [00:18:28] <sustrik>  what's your use case?
| [Monday 14 June 2010] [00:18:30] <Gambit->  Would you like a description?
| [Monday 14 June 2010] [00:18:34] <sustrik>  in broad terms?
| [Monday 14 June 2010] [00:18:36]     * Gambit- nods, "One moment while I type."
| [Monday 14 June 2010] [00:21:06] <Gambit->  Topology: a cluster of widely distributed devices with no mutual connectivity contracts.  Each device has several different active entities that may need to communiciate with a varying subset of other device in the cluster.
| [Monday 14 June 2010] [00:21:51] <sustrik>  SOA-style?
| [Monday 14 June 2010] [00:22:04] <Gambit->  You'll have to explain what you mean by that.
| [Monday 14 June 2010] [00:22:39] <sustrik>  ok, other way round: what industry?
| [Monday 14 June 2010] [00:22:54] <sustrik>  financials/embedded/supercomputing etc.
| [Monday 14 June 2010] [00:23:49] <Gambit->  technically speaking, we're a major traffic manipulation company and we're supporting clusters of our devices spread across customer installations communicating and coordinating with eachother in heirarchies of active-active groups.
| [Monday 14 June 2010] [00:24:55] <Gambit->  I can totally be more specific, but I'm still learning how to phrase the question, if you understand :)
| [Monday 14 June 2010] [00:25:03] <sustrik>  yep
| [Monday 14 June 2010] [00:25:32] <sustrik>  so the whole system is out of scope of a single entrerprise
| [Monday 14 June 2010] [00:25:44] <Gambit->  it may all be owned by one enterprise.
| [Monday 14 June 2010] [00:25:51] <Gambit->  but it might be spread across many divisions
| [Monday 14 June 2010] [00:26:11] <sustrik>  can there be a singe central point?
| [Monday 14 June 2010] [00:26:16] <Gambit->  our customers tend to do crazy things we don't expect, so any combination around there is likely.
| [Monday 14 June 2010] [00:26:20] <sustrik>  messaging "broker"?
| [Monday 14 June 2010] [00:26:34] <sustrik>  single*
| [Monday 14 June 2010] [00:26:46] <Gambit->  It's possible - though more likely there will be an active-active type point where there are multiple boxes that all act as failover points for eachother.
| [Monday 14 June 2010] [00:27:08] <sustrik>  but in overall, all is centralised
| [Monday 14 June 2010] [00:27:28] <sustrik>  all the failover boxes are at the same place, doing same thing
| [Monday 14 June 2010] [00:27:34] <Gambit->  in that case, yes.
| [Monday 14 June 2010] [00:27:57] <sustrik>  well, in such case i would prefer rabbitmq
| [Monday 14 June 2010] [00:28:00] <Gambit->  in other cases, there may be, say, 5 boxes in an active-active-active-active-active configuration without any particular head end.
| [Monday 14 June 2010] [00:29:23] <Gambit->  What is your logic?  Also, what is your experience? :)
| [Monday 14 June 2010] [00:29:27] <sustrik>  as far as I understand your scenario is a typical corporate scenario with centralised control and no need for strange topologies
| [Monday 14 June 2010] [00:29:37] <sustrik>  ah, one more thing:
| [Monday 14 June 2010] [00:29:45] <sustrik>  expected performance?
| [Monday 14 June 2010] [00:29:49] <Gambit->  well we may have boxes taht will have no connectivity for long periods of time, and then connect in.
| [Monday 14 June 2010] [00:30:03] <Gambit->  also, strange topologies will be mitigated most likely by having an overlay network.
| [Monday 14 June 2010] [00:30:18] <Gambit->  Performance is something of a elephant in the room at the moment.
| [Monday 14 June 2010] [00:30:32] <sustrik>  any estimates?
| [Monday 14 June 2010] [00:30:40] <Gambit->  Can you provide some buckets?
| [Monday 14 June 2010] [00:30:41] <sustrik>  in orders of magnitude?
| [Monday 14 June 2010] [00:30:54] <sustrik>  10 msgs./sec?
| [Monday 14 June 2010] [00:31:01] <sustrik>  1000000 msgs./sec?
| [Monday 14 June 2010] [00:31:04] <Gambit->  :)
| [Monday 14 June 2010] [00:31:34] <sustrik>  sub millisecond latency?
| [Monday 14 June 2010] [00:31:36] <Gambit->  I'm going to SWAG and say in the 100-1000/s range.
| [Monday 14 June 2010] [00:31:37] <sustrik>  etc.
| [Monday 14 June 2010] [00:31:53] <Gambit->  but that's probably awefully high.
| [Monday 14 June 2010] [00:32:16] <Gambit->  I don't think there's any expectation for latency less than 100ms.
| [Monday 14 June 2010] [00:32:27] <sustrik>  ok, rabbitmq looks to fit your case
| [Monday 14 June 2010] [00:32:35] <Gambit->  though our usecases are so fuzzy that it's hard to say for certain.
| [Monday 14 June 2010] [00:32:48] <Gambit->  we know we need some infrastructure, but we only know todays requirements.
| [Monday 14 June 2010] [00:32:56] <sustrik>  the rationale is that rabbitmq is a typical corporate middleware
| [Monday 14 June 2010] [00:33:10] <sustrik>  you'll have central server to control
| [Monday 14 June 2010] [00:33:15] <sustrik>  management tools
| [Monday 14 June 2010] [00:33:30] <sustrik>  decent performance etc.
| [Monday 14 June 2010] [00:33:40] <Gambit->  Well there may be no central server, there may just be 5-10 boxes, all peers.  But they could all be 'central' servers, I would expect.
| [Monday 14 June 2010] [00:33:43] <sustrik>  0mq is more adequate for extreme use cases
| [Monday 14 June 2010] [00:34:12] <Gambit->  can you establish your credentials and authority, for a moment?
| [Monday 14 June 2010] [00:34:26] <sustrik>  i'm 0mq's author :)
| [Monday 14 June 2010] [00:34:44] <Gambit->  god I love irc :D
| [Monday 14 June 2010] [00:35:03] <sustrik>  the point is that the two products are quite different in what they offer
| [Monday 14 June 2010] [00:35:11] <sustrik>  0mq:
| [Monday 14 June 2010] [00:35:15] <sustrik>  - it's a library
| [Monday 14 June 2010] [00:35:25] <sustrik>  - fully automatic, no management, like TCP
| [Monday 14 June 2010] [00:35:36] <sustrik>  - very fast
| [Monday 14 June 2010] [00:35:44] <sustrik>  - less feature complete
| [Monday 14 June 2010] [00:35:51] <sustrik>  rabbitmq:
| [Monday 14 June 2010] [00:35:54] <sustrik>  - it's a server
| [Monday 14 June 2010] [00:36:13] <sustrik>  - you manage it as any other server
| [Monday 14 June 2010] [00:36:28] <sustrik>  - performance is lower but pretty decent
| [Monday 14 June 2010] [00:36:38] <sustrik>  - more feature complete
| [Monday 14 June 2010] [00:37:39] <Gambit->  Whereabouts would you draw the performance line?
| [Monday 14 June 2010] [00:37:54] <sustrik>  50000 msgs/sec
| [Monday 14 June 2010] [00:38:43] <sustrik>  ah, it also depends on the size of messages
| [Monday 14 June 2010] [00:38:52] <sustrik>  1kb vs. 100GB
| [Monday 14 June 2010] [00:39:03] <sustrik>  for later i would go with 0mq
| [Monday 14 June 2010] [00:39:27] <Gambit->  I'm going to say we're in the 5-50k range
| [Monday 14 June 2010] [00:39:42] <sustrik>  yes, so you have no performance problem
| [Monday 14 June 2010] [00:39:48] <sustrik>  both solutions would be OK
| [Monday 14 June 2010] [00:39:55] <sustrik>  in performance terms
| [Monday 14 June 2010] [00:40:30]     * Gambit- nods
| [Monday 14 June 2010] [00:40:51] <Gambit->  Does 0mq support actual multicast?
| [Monday 14 June 2010] [00:40:55] <sustrik>  yes
| [Monday 14 June 2010] [00:41:03] <sustrik>  PGM in particular
| [Monday 14 June 2010] [00:42:13] <Gambit->  That's something we'd have to cobble together with rabbitmq, I believe.  I don't see any evidence of it being directly supported, though there are several plugins that could be used to bootstrap it.
| [Monday 14 June 2010] [00:42:35] <sustrik>  no, rabbitmq doesn't support it
| [Monday 14 June 2010] [00:42:50] <sustrik>  why do you need it?
| [Monday 14 June 2010] [00:42:58] <Gambit->  there's some things like 'shovels', which apparently lets you move messages from one queue to another, that could be used to fake it.
| [Monday 14 June 2010] [00:43:04] <Gambit->  Some nodes may be at the end of long thin mostly broken straws.
| [Monday 14 June 2010] [00:43:21] <Gambit->  if they have to do a broadcast, it's infeasible to expect them to send messages to everyone else.
| [Monday 14 June 2010] [00:43:44] <sustrik>  that's solved by having broker in the middle, no?
| [Monday 14 June 2010] [00:43:55] <sustrik>  send to broker, broker resends to everyone else
| [Monday 14 June 2010] [00:44:13] <Gambit->  The way I'd been thinking about it, though, is that you'd need to have a broker on each device.
| [Monday 14 June 2010] [00:44:20] <Gambit->  That may, obviously, be wrong.
| [Monday 14 June 2010] [00:44:45] <Gambit->  there are multiple agents on each device that would need to communicate to some subset of the rest of the cluster, after all.
| [Monday 14 June 2010] [00:45:13] <Gambit->  some orthogonal subset, that is.
| [Monday 14 June 2010] [00:45:13] <sustrik>  device = hw device?
| [Monday 14 June 2010] [00:45:27] <Gambit->  A device is a linux box, for the sake of this conversation.
| [Monday 14 June 2010] [00:45:36] <Gambit->  s/sake/intent/
| [Monday 14 June 2010] [00:45:46] <sustrik>  ok
| [Monday 14 June 2010] [00:46:11] <sustrik>  well, you can even use both products if needed
| [Monday 14 June 2010] [00:46:20] <sustrik>  there's nothing to stop you
| [Monday 14 June 2010] [00:46:39] <sustrik>  in your case i would try to play with both for a while to get some feeling
| [Monday 14 June 2010] [00:47:23] <Gambit->  How's the intercompatability?
| [Monday 14 June 2010] [00:47:42] <sustrik>  none at the moment
| [Monday 14 June 2010] [00:48:15] <Gambit->  So given what I'd describe, wouldn't I need to run a broker on each device?  Especially since they may not have connectivity to any other device?
| [Monday 14 June 2010] [00:48:43] <sustrik>  there are several services on a device, right?
| [Monday 14 June 2010] [00:48:49] <Gambit->  Correct.
| [Monday 14 June 2010] [00:48:55] <sustrik>  those are running 24/7?
| [Monday 14 June 2010] [00:48:59] <Gambit->  Yup.
| [Monday 14 June 2010] [00:49:23] <sustrik>  are the messages expected to survive service failure?
| [Monday 14 June 2010] [00:50:12]     * Gambit- wiggles his hand a bit, "Let's say no, because that will make it easier."
| [Monday 14 June 2010] [00:50:15] <sustrik>  or device failure (like power outage)
| [Monday 14 June 2010] [00:50:33] <sustrik>  it's pretty important question
| [Monday 14 June 2010] [00:50:45] <Gambit->  It's a massively important question.
| [Monday 14 June 2010] [00:50:45] <sustrik>  if you need it, you need a broker on each device
| [Monday 14 June 2010] [00:51:07] <Gambit->  We already have, essentially, a process that manages all of our configuration and related things.
| [Monday 14 June 2010] [00:51:33] <Gambit->  Currently we aren't designing for any additional repositories.
| [Monday 14 June 2010] [00:51:42] <Gambit->  which means we're not expecting anything to survive device failure.
| [Monday 14 June 2010] [00:52:06] <Gambit->  however, if two agents require a broker to communicate between themselves, then it's absolutely necessary to run a broker on each device, since each device may be running in a standalone configuration.
| [Monday 14 June 2010] [00:53:05] <sustrik>  if you need a brokerless design you have to use 0mq
| [Monday 14 June 2010] [00:53:31] <sustrik>  you have to have some hands-on experience to do a correct decision
| [Monday 14 June 2010] [00:53:36]     * Gambit- nods
| [Monday 14 June 2010] [00:53:45] <Gambit->  That said, there's no reason we can't run a broker on each box.
| [Monday 14 June 2010] [00:53:48] <sustrik>  but think of 0mq as something like TCP
| [Monday 14 June 2010] [00:53:59] <sustrik>  and rabbitmq of something like SQL server
| [Monday 14 June 2010] [00:54:15] <Gambit->  That crosses my eyes a bit :)
| [Monday 14 June 2010] [00:54:30] <Gambit->  but I think I catch your intent.
| [Monday 14 June 2010] [00:54:39] <sustrik>  :)
| [Monday 14 June 2010] [00:55:10] <Gambit->  How does 0mq handle membership?
| [Monday 14 June 2010] [00:55:21] <sustrik>  membership in what?
| [Monday 14 June 2010] [00:55:36] <Gambit->  For the use case where, all the way across the cluster, a new device comes up and requests to receive messages of a certain topic.
| [Monday 14 June 2010] [00:55:44] <sustrik>  ah
| [Monday 14 June 2010] [00:55:50] <Gambit->  Apologies, as always, for incorrect terminology usage.
| [Monday 14 June 2010] [00:56:02] <sustrik>  pseudocode:
| [Monday 14 June 2010] [00:56:23] <sustrik>  s = zmq_socket (SUBSCRIBER);
| [Monday 14 June 2010] [00:56:38] <sustrik>  s.connect ("tcp://myserver:5555");
| [Monday 14 June 2010] [00:56:56] <sustrik>  s.setsockopt (SUBSCRIBE, "ab.cd.");
| [Monday 14 June 2010] [00:57:01] <sustrik>  that's it
| [Monday 14 June 2010] [00:57:07] <Gambit->  who is 'myserver'?
| [Monday 14 June 2010] [00:57:19] <sustrik>  the peer you want to get messages from
| [Monday 14 June 2010] [00:57:22] <Gambit->  ah
| [Monday 14 June 2010] [00:57:37] <Gambit->  so I would have to connect to each peer I wanted to get messages from, and request the subscription?
| [Monday 14 June 2010] [00:57:46] <sustrik>  yes
| [Monday 14 June 2010] [00:57:52] <Gambit->  How does the multicast fit into that?
| [Monday 14 June 2010] [00:58:12] <sustrik>  s.connect ("pgm://eth0;224.0.0.1:5555");
| [Monday 14 June 2010] [00:58:27] <Gambit->  ah
| [Monday 14 June 2010] [00:58:30] <Gambit->  interesting.
| [Monday 14 June 2010] [00:59:04] <Gambit->  so you can use the multicast to get away from having to know specifically who is managing what.
| [Monday 14 June 2010] [00:59:26] <sustrik>  yes
| [Monday 14 June 2010] [00:59:52] <sustrik>  you have to have a node in the middle if you want to do everyone-to-everyone messaging
| [Monday 14 June 2010] [01:00:03] <sustrik>  with IP multicast it's your network switch
| [Monday 14 June 2010] [01:00:10] <Gambit->  yeah
| [Monday 14 June 2010] [01:00:14] <sustrik>  with tcp, you need the broker
| [Monday 14 June 2010] [01:00:17] <Gambit->  that ip switch is usually me.
| [Monday 14 June 2010] [01:00:26] <Gambit->  so we'd have to support that.
| [Monday 14 June 2010] [01:00:30]     * Gambit- contemplates.
| [Monday 14 June 2010] [01:00:56] <sustrik>  it's all on the local box?
| [Monday 14 June 2010] [01:01:06] <sustrik>  then definitely use TCP
| [Monday 14 June 2010] [01:01:08] <Gambit->  No, sorry, that was poorly said.
| [Monday 14 June 2010] [01:01:25] <Gambit->  Our product is often used as a load balancer.
| [Monday 14 June 2010] [01:01:41] <Gambit->  how similar is the wire protocol between 0mq and rabbitmq, btw?
| [Monday 14 June 2010] [01:01:46] <Gambit->  are you guys expecting to converge at somepoint?
| [Monday 14 June 2010] [01:02:39] <sustrik>  well, rabitmq is a multiprotocol server
| [Monday 14 June 2010] [01:02:58] <sustrik>  so it's shouldn't be hard to plug 0mq into it as an underlying transport
| [Monday 14 June 2010] [01:03:22] <sustrik>  especially that there's an Erlang binding for 0mq recently
| [Monday 14 June 2010] [01:03:28] <Gambit->  Again with the TCP/SQL Server comparisons :)
| [Monday 14 June 2010] [01:04:02] <Gambit->  I think I've been thinking of 0mq as another implementation of AMQP, when it's really not.
| [Monday 14 June 2010] [01:04:10] <sustrik>  no, it's not
| [Monday 14 June 2010] [01:04:43] <sustrik>  it's a layer in networking stack that allows you to speak with serveral peers at the same time
| [Monday 14 June 2010] [01:04:49] <sustrik>  that's more or less it
| [Monday 14 June 2010] [01:04:59] <Gambit->  So... A better PGM?
| [Monday 14 June 2010] [01:05:21] <sustrik>  PGM is only about data distribution
| [Monday 14 June 2010] [01:05:30] <Gambit->  Not about messages, eh?
| [Monday 14 June 2010] [01:05:44] <sustrik>  it's more about scenarios:
| [Monday 14 June 2010] [01:05:53] <sustrik>  PGM: send this message/data to everyone
| [Monday 14 June 2010] [01:06:03] <sustrik>  0MQ: 1. dtto
| [Monday 14 June 2010] [01:06:07] <sustrik>  2. request/reply
| [Monday 14 June 2010] [01:06:10] <sustrik>  3. load balancing
| [Monday 14 June 2010] [01:06:12] <sustrik>  etc.
| [Monday 14 June 2010] [01:06:43] <Gambit->  Right.
| [Monday 14 June 2010] [01:06:59] <Gambit->  Okay, many many thanks for your time.  Any other words of wisdom here?
| [Monday 14 June 2010] [01:07:27] <sustrik>  try it yourself, then decide :)
| [Monday 14 June 2010] [01:07:36]     * Gambit- grins and nods
| [Monday 14 June 2010] [01:07:52] <Gambit->  Right then, thanks :)
| [Monday 14 June 2010] [01:16:16] <Gambit->  Well, practically speaking I'm likely to delegate a large chunk of this.
| [Monday 14 June 2010] [01:16:18] <Gambit->  but yeah.
| [Monday 14 June 2010] [01:16:29] <Gambit->  okay, that's that report put together and sent off.
| [Monday 14 June 2010] [01:16:52] <Gambit->  Thanks again sustrik, strongly appreciate the dialog.  Next time you're in the Seattle area, give me a shout :)
| [Monday 14 June 2010] [01:17:17] <sustrik>  never been there, but i'll should once i get there :)
| [Monday 14 June 2010] [01:17:45] <Gambit->  it's a nice town :)
| [Monday 14 June 2010] [01:17:57] <Gambit->  righto, then, ciao!
| [Monday 14 June 2010] [01:17:59] Part   Gambit- has left this channel.
| [Monday 14 June 2010] [01:20:28] <umesh>    is there any way by which server notifies client while going down in zmq ... 
| [Monday 14 June 2010] [01:20:31] <umesh>    ?
| [Monday 14 June 2010] [01:24:00] <umesh>    there is no such way of sending the notification ?
| [Monday 14 June 2010] [01:34:07] <sustrik>  no, there's not, you would need a sync API for that
| [Monday 14 June 2010] [01:34:24] <sustrik>  you can of course send messages by hand over TCP if needed
| [Monday 14 June 2010] [01:45:13] <umesh>    ok
| [Monday 14 June 2010] [01:45:23] <umesh>    so not possible in zermq 
| [Monday 14 June 2010] [01:46:08] <umesh>    hand over tcp means ... while going down ...i can send message to peer notifying of it 
| [Monday 14 June 2010] [01:47:09] <umesh>    right ?
| [Monday 14 June 2010] [02:42:03] <umesh>    is it safe if I create a seperate thread for recv call ... in server ...
| [Monday 14 June 2010] [02:42:35] <umesh>    means instead of waiting for the recv in hte main process ... I will create thread and wait there ... 
| [Monday 14 June 2010] [02:45:47] <sustrik>  hand over tcp = open raw BSD socket, push the data through it
| [Monday 14 June 2010] [02:46:04] <sustrik>  yes, you can recv in a worker thread
| [Monday 14 June 2010] [02:46:30] <sustrik>  the only requirement is that each 0MQ socket is used from exactly one OS thread
| [Monday 14 June 2010] [02:47:17] <umesh>    ok
| [Monday 14 June 2010] [03:36:20] <mikko>    good morning
| [Monday 14 June 2010] [03:36:34] <sustrik>  morning
| [Monday 14 June 2010] [05:03:59] <mikko>    i wrote a http publisher for 0MQ last night
| [Monday 14 June 2010] [05:04:17] <mikko>    but if anyone happens to have need for such a thing it's here http://valokuva.org/~mikko/code/httpublish/
| [Monday 14 June 2010] [05:04:39] <mikko>    it takes a http post and publishes it over 0MQ
| [Monday 14 June 2010] [05:07:29] <sustrik>  mikko: i think we should somehow centralise links for useful stuff of this kind
| [Monday 14 June 2010] [05:08:00] <sustrik>  tools section on the website?
| [Monday 14 June 2010] [05:08:32] <sustrik>  at least mention it on the mailing list so that link won't get lost
| [Monday 14 June 2010] [05:31:53] <mikko>    sustrik: "Misc" maybe
| [Monday 14 June 2010] [05:32:06] <mikko>    i'll push it to github later so it won't get lost
| [Monday 14 June 2010] [05:32:12] <sustrik>  great
| [Monday 14 June 2010] [05:32:16] <mikko>    seems like i can push 6k messages a second with that
| [Monday 14 June 2010] [05:32:28] <mikko>    (testing with ab)
| [Monday 14 June 2010] [05:33:09] <sustrik>  is that good or bad result?
| [Monday 14 June 2010] [05:33:18]     * sustrik has little experience with http
| [Monday 14 June 2010] [05:34:10] <mikko>    it's fairly good 
| [Monday 14 June 2010] [05:34:22] <mikko>    doing the same thing over php i might get 800 - 1.2k
| [Monday 14 June 2010] [05:34:30] <sustrik>  ok, i see
| [Monday 14 June 2010] [05:34:33] <mikko>    i don't really know what to compare to
| [Monday 14 June 2010] [05:34:39] <sustrik>  ack
| [Monday 14 June 2010] [05:34:57] <mikko>    maybe even http device for 0MQ might make sense
| [Monday 14 June 2010] [05:34:58] <sustrik>  ok, when you have the gihub repo we'll find some place for the link
| [Monday 14 June 2010] [05:35:08] <mikko>    would allow pretty integration
| [Monday 14 June 2010] [05:35:18] <sustrik>  mikko: i thought about that actually
| [Monday 14 June 2010] [05:35:38] <sustrik>  but i am too lazy to write it :)
| [Monday 14 June 2010] [05:36:09] <sustrik>  wouldn't it make sense to turn your code into a device?
| [Monday 14 June 2010] [05:36:12] <mikko>    i remember seeing a tiny http parsing library somewhere
| [Monday 14 June 2010] [05:36:26] <mikko>    yes, the code currently uses libevent http abstraction
| [Monday 14 June 2010] [05:36:35] <mikko>    moving over to a device would mean leaving that abstraction
| [Monday 14 June 2010] [05:36:39] <mikko>    and parsing the http
| [Monday 14 June 2010] [05:36:55] <sustrik>  so now it sends the http message over 0mq?
| [Monday 14 June 2010] [05:37:11] <mikko>    yep
| [Monday 14 June 2010] [05:37:23] <mikko>    but all http protocol parsing is done by libevent
| [Monday 14 June 2010] [05:37:52] <mikko>    i remember the node.js had a tiny C library for parsing http in async fashion
| [Monday 14 June 2010] [05:37:59] <sustrik>  so the http header is stripped and only payload is passed over 0mq?
| [Monday 14 June 2010] [05:38:07] <mikko>    yes
| [Monday 14 June 2010] [05:38:12] <sustrik>  ok, got it
| [Monday 14 June 2010] [05:38:16] <mikko>    it responds to /publish 
| [Monday 14 June 2010] [05:38:24] <mikko>    POST /publish HTTP/1.0
| [Monday 14 June 2010] [05:38:29] <mikko>    Content-Length: 5
| [Monday 14 June 2010] [05:38:32] <mikko>     
| [Monday 14 June 2010] [05:38:34] <mikko>    aaaaa
| [Monday 14 June 2010] [05:38:44] <mikko>    would send aaaaa over to 0mq
| [Monday 14 June 2010] [05:39:16] <sustrik>  can you have a look at the node.js library?
| [Monday 14 June 2010] [05:39:30] <mikko>    yeah, trying to find
| [Monday 14 June 2010] [05:41:40] <mikko>    http://github.com/ry/http-parser
| [Monday 14 June 2010] [05:41:43] <mikko>    i think it's that one
| [Monday 14 June 2010] [05:41:59] <mikko>    the readme looks promising
| [Monday 14 June 2010] [05:42:14]     * sustrik is checking it
| [Monday 14 June 2010] [05:44:15] <sustrik>  it looks viable
| [Monday 14 June 2010] [05:45:27] <mikko>    i could take a poke to it
| [Monday 14 June 2010] [05:45:30] <mikko>    later today
| [Monday 14 June 2010] [05:45:44] <mikko>    good introduction to devices if nothing else :)
| [Monday 14 June 2010] [05:46:18] <sustrik>  devices are dead simple
| [Monday 14 June 2010] [06:30:40] <rgl>  mikko, have you seen zed mongrel2.org ?
| [Monday 14 June 2010] [06:33:09] <mikko>    rgl: yeah, i saw the posting on mailing-lists
| [Monday 14 June 2010] [06:33:20] <mikko>    mongrel however reminds me of Ruby for some reason
| [Monday 14 June 2010] [06:36:43] <rgl>  yes. it's an http server for ruby.
| [Monday 14 June 2010] [06:36:55] <rgl>  thou... mongrel2 is no longer that.
| [Monday 14 June 2010] [06:37:12] <rgl>  mainly mongrel has a nice http parser. which is used in mongrel2.
| [Monday 14 June 2010] [06:41:51] <mikko>    mongrel2 is C ?
| [Monday 14 June 2010] [06:43:07] <mikko>    "Since Mongrel2 will be written in C it should do files pretty well too, but easy application architectures and operations support will come first. "
| [Monday 14 June 2010] [07:07:36] <rgl>  yup.
| [Monday 14 June 2010] [08:10:09] <mikko>    sustrik: forwarder.cpp
| [Monday 14 June 2010] [08:10:17] <sustrik>  yes?
| [Monday 14 June 2010] [08:10:18] <mikko>    sustrik: should that contain zmq_msg_close for the message?
| [Monday 14 June 2010] [08:10:26] <sustrik>  let me see
| [Monday 14 June 2010] [08:11:27] <sustrik>  there's no zmq_msg_close afaics
| [Monday 14 June 2010] [08:11:45] <mikko>    i mean should there be?
| [Monday 14 June 2010] [08:11:54] <sustrik>  it's an infinite loop
| [Monday 14 June 2010] [08:12:09] <mikko>    ah ok
| [Monday 14 June 2010] [08:12:18] <mikko>    btw
| [Monday 14 June 2010] [08:12:36] <mikko>    how do you normally handle errors in constructing the objects inside zeromq2?
| [Monday 14 June 2010] [08:12:41] <mikko>    throw an exception?
| [Monday 14 June 2010] [08:12:50] <sustrik>  out of memory you mean?
| [Monday 14 June 2010] [08:12:52] <sustrik>  assert
| [Monday 14 June 2010] [08:13:13] <mikko>    ok
| [Monday 14 June 2010] [08:13:30] <sustrik>  as for the infinite loop, it should be fixed
| [Monday 14 June 2010] [08:13:34] <sustrik>  i forgot about it
| [Monday 14 June 2010] [08:13:55] <sustrik>  now with 2.0.7 the loop can be exited by terminating the associated context
| [Monday 14 June 2010] [08:14:34]     * sustrik makes a mental note
| [Monday 14 June 2010] [09:11:26] <willvarfar>   so does zeromq handle persistance of messages, mailbox-like?
| [Monday 14 June 2010] [09:29:47] <sustrik>  willvarfar: no, it does not
| [Monday 14 June 2010] [09:37:37] <willvarfar>   what message queue system would you recommend if I needed offline delivery?
| [Monday 14 June 2010] [09:53:48] <sustrik>  rabbitmq
| [Monday 14 June 2010] [11:08:49] <rgl>  sustrik, even the queue device? I mean, doesn't it queue messages until someone can pick them up?
| [Monday 14 June 2010] [11:17:10] <sustrik>  rgl: it does
| [Monday 14 June 2010] [11:17:17] <sustrik>  but it does so in memory
| [Monday 14 June 2010] [11:17:31] <sustrik>  so in case of power failure the messages are loast
| [Monday 14 June 2010] [11:17:35] <sustrik>  lost*
| [Monday 14 June 2010] [11:18:04] <rgl>  ah, non persistence there?  ok.
| [Monday 14 June 2010] [11:20:49] <mikko>    sustrik: are there any plans for persistence?
| [Monday 14 June 2010] [11:23:22] <sustrik>  mikko: not near-term plans
| [Monday 14 June 2010] [11:24:02] <sustrik>  on-disk offload (swap) should be added shortly, but no real persistence
| [Monday 14 June 2010] [11:24:09] <mikko>    the queue device looks pretty simple
| [Monday 14 June 2010] [11:24:27] <sustrik>  it is
| [Monday 14 June 2010] [11:24:54] <mikko>    the http device looks like to be more complicated
| [Monday 14 June 2010] [11:25:16] <sustrik>  the http part maybe
| [Monday 14 June 2010] [11:25:41] <sustrik>  the 0mq part would be the same as in queue device afaiu
| [Monday 14 June 2010] [11:26:04] <mikko>    should i inherit http_socket from socket_base?
| [Monday 14 June 2010] [11:26:33] <mikko>    im still not got quite into the code
| [Monday 14 June 2010] [11:26:34] <sustrik>  well, there are two options
| [Monday 14 June 2010] [11:26:48] <sustrik>  either you add http as a new transport mechanism
| [Monday 14 June 2010] [11:26:55] <sustrik>  aside of tcp, inproc et al.
| [Monday 14 June 2010] [11:27:13] <sustrik>  that's pretty complex to implement, but most generic solution
| [Monday 14 June 2010] [11:27:33] <sustrik>  the other option is create a device that would be http<->0mq bridge
| [Monday 14 June 2010] [11:28:00] <sustrik>  http connections are on one side, 0mq connections on the other
| [Monday 14 June 2010] [11:28:14] <mikko>    i was thinking about starting with porting the publisher over to 0mq device
| [Monday 14 June 2010] [11:28:31] <sustrik>  sorry, what publisher?
| [Monday 14 June 2010] [11:28:38] <mikko>    httpublish.c i pasted earlier
| [Monday 14 June 2010] [11:29:03] <mikko>    and then maybe extend to have a req/rep support as well
| [Monday 14 June 2010] [11:29:26] <mikko>    so you could do a http call -> 0mq req -> 0mq rep -> http rep
| [Monday 14 June 2010] [11:30:45] <sustrik>  right, it's a standalone application
| [Monday 14 June 2010] [11:30:55] <sustrik>  so it's the latter solution (the bridge)
| [Monday 14 June 2010] [11:49:29] <zedas>    mikko, rgl: yep, mongrel2 is C.
| [Monday 14 June 2010] [11:54:04] <CIA-17>   rbzmq: 03Brian Buchanan 07master * r3d19085 10/ rbzmq.cpp : remove support for libzmq < 2.0.7 - http://bit.ly/d26OdF
| [Monday 14 June 2010] [11:54:05] <CIA-17>   rbzmq: 03Brian Buchanan 07master * r92d3af8 10/ (.gitignore zmq.gemspec rbzmq.c rbzmq.cpp): add rdoc documentation - http://bit.ly/cZzye1
| [Monday 14 June 2010] [11:54:31] <rgl>  zedas, is there a reason to call it mongrel2? I mean, why use the mongrel moniker?
| [Monday 14 June 2010] [12:03:13] <zedas>    rgl: 1. at the core is the mongrel http parser, which is the main thing.  2. i've wanted to reprise the mongrel server for a long time. 3. the current maintainers of mongrel let it die, which sucks. 4. the name still means "good web server" to a lot of people. 5. i don't believe everything in the universe should fit neatly into a single moniker like a library catalog.
| [Monday 14 June 2010] [12:06:57] <rgl>  zedas, I see. that perfectly acceptable :D
| [Monday 14 June 2010] [12:22:58] <mikko>    zedas: it is plain C?
| [Monday 14 June 2010] [12:24:15] <mikko>    good
| [Monday 14 June 2010] [12:24:20] <mikko>    i'll keep my eye on that
| [Monday 14 June 2010] [12:26:46] <zedas>    mikko: so far.
| [Monday 14 June 2010] [15:24:41] Notice -NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Monday 14 June 2010] [15:24:41] Notice -NickServ- You are now identified for travlr.
| [Monday 14 June 2010] [15:24:41] CTCP   Received Version request from frigg.
| [Monday 14 June 2010] [15:24:43] Topic  The channel topic is "Welcome!".
| [Monday 14 June 2010] [15:24:43] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Monday 14 June 2010] [15:24:43] Notice -ChanServ- [#rekonq] welcome to rekonq, webkit KDE browser, channel
| [Monday 14 June 2010] [15:24:49] Mode   Channel modes: no messages from outside, topic protection
| [Monday 14 June 2010] [15:24:49] Created    This channel was created on 2010-02-05 10:44.
| [Monday 14 June 2010] [18:33:40] Nick   iFire` is now known as iFire.
| [Monday 14 June 2010] [20:41:43] <travisbrady>  sustrik: is the example at the bottom of this page out of date? http://api.zeromq.org/zmq_getsockopt.html the simple program I wrote to emulate it is crashing http://pastie.org/1004700 on Mac OS X
| [Monday 14 June 2010] [21:36:15] <foysavas> zedas: mikko: mongrel may have a good name to it, but sequels tend to suck. besides what ever happened to naming it gaegogi?
| [Monday 14 June 2010] [22:10:35] <zedas>    foysavas: too offensive
| [Tuesday 15 June 2010] [01:39:04] Part  abadr has left this channel.
| [Tuesday 15 June 2010] [01:48:59] Mode  ChanServ gives CIA-17 permission to talk.
| [Tuesday 15 June 2010] [01:55:09] <sustrik> travisbrady: yes, the example is broken
| [Tuesday 15 June 2010] [01:55:51] <sustrik> the last parameter should be pointer to size not the size itself
| [Tuesday 15 June 2010] [01:55:55] <sustrik> thanks for spotting this
| [Tuesday 15 June 2010] [01:58:50] <travisbrady> sustrik: sure, glad to help.  I'm working on a client lib and polling and getsockopt are all I've got left
| [Tuesday 15 June 2010] [01:59:36] <sustrik> great!
| [Tuesday 15 June 2010] [02:00:14] <travisbrady> I've got the simple server and the chat examples working nicely.  need to do the perf stuff next
| [Tuesday 15 June 2010] [02:01:13] <sustrik> yes, that's always interesting
| [Tuesday 15 June 2010] [02:01:33] <sustrik> seeing how much your language runtime adds to latency
| [Tuesday 15 June 2010] [02:02:41] <travisbrady> Any idea which languages (outside of c/c++) are fastest currently?
| [Tuesday 15 June 2010] [02:02:56] <CIA-17>  zeromq2: 03Martin Sustrik 07master * r9858447 10/ doc/zmq_getsockopt.txt : getsockopt documentation fixed - http://bit.ly/aeBuDC
| [Tuesday 15 June 2010] [02:03:08] <sustrik> C is the native API
| [Tuesday 15 June 2010] [02:03:15] <sustrik> so it's definitely the fastest
| [Tuesday 15 June 2010] [02:03:25] <sustrik> however, C++ is just a thin wrapper
| [Tuesday 15 June 2010] [02:03:37] <sustrik> that gets optimised away anyway
| [Tuesday 15 June 2010] [02:03:46] <sustrik> so it should be as fast as C
| [Tuesday 15 June 2010] [02:05:16] <travisbrady> But apart from those is java introduce the least latency?  Haskell? 
| [Tuesday 15 June 2010] [02:05:41] <travisbrady> pardon me, I mean to say "DOES java" not "is Java", must be time for bed
| [Tuesday 15 June 2010] [02:09:33] <sustrik> depends on message size
| [Tuesday 15 June 2010] [02:09:57] <sustrik> brian grager done a lot of work on using zero-copy in python binding
| [Tuesday 15 June 2010] [02:10:09] <sustrik> so the performance for large messages is equivalent to C
| [Tuesday 15 June 2010] [02:12:14] <sustrik> compiled languages on the other hand may have the least performance impact on small messages (List, .NET)
| [Tuesday 15 June 2010] [02:12:18] <sustrik> Lisp*
| [Tuesday 15 June 2010] [02:12:28] <sustrik> Java
| [Tuesday 15 June 2010] [02:29:26] <umesh>   I have a client server code using req-rep sockets ...
| [Tuesday 15 June 2010] [02:29:47] <umesh>   I start a client first ... 
| [Tuesday 15 June 2010] [02:30:47] <umesh>   if I don't start the server it wiats indefinitely ... is there any way to detect error like server is not up or connection reset ... if server goes down before client send etc ...
| [Tuesday 15 June 2010] [02:30:58] <umesh>   waits*
| [Tuesday 15 June 2010] [02:36:27] <sustrik> no
| [Tuesday 15 June 2010] [02:39:11] <umesh>   no way through zmq_poll as well ?
| [Tuesday 15 June 2010] [02:44:04] <sustrik> no, 0MQ is async library
| [Tuesday 15 June 2010] [02:44:16] <sustrik> the message gets sends once it's possible
| [Tuesday 15 June 2010] [02:44:26] <sustrik> at the time you call zmq_send it's just queued
| [Tuesday 15 June 2010] [02:44:43] <sustrik> if you want to use your 0mq server with sync client
| [Tuesday 15 June 2010] [02:45:00] <sustrik> i would suggest simply using raw TCP connection on the clients side
| [Tuesday 15 June 2010] [02:45:28] <sustrik> there was a discussion about writing a sync 0mq client couple of times
| [Tuesday 15 June 2010] [02:45:33] <sustrik> but nodody really did it
| [Tuesday 15 June 2010] [02:49:03] <umesh>   ok ... thanks
| [Tuesday 15 June 2010] [08:02:57] <CIA-17>  zeromq2: 03Martin Sustrik 07master * r341e8a2 10/ AUTHORS : test commit - http://bit.ly/d13f9p
| [Tuesday 15 June 2010] [11:37:34] <CIA-17>  rbzmq: 03Brian Buchanan 07master * rdb6d541 10/ .gitignore : ignore *.tmproj - http://bit.ly/c0AocM
| [Tuesday 15 June 2010] [18:18:44] <rgl> zedas, I'm almost convinced to start using fossil. the last sentence on your post was brutal heheh
| [Tuesday 15 June 2010] [18:54:37] <zedas>   rgl: hehe, i calls it like i see it. :-)
| 
| *** Logfile started
| *** on Wed Jun 16 00:55:18 2010
| 
| [Wednesday 16 June 2010] [00:55:18] Topic   The channel topic is "Welcome!".
| [Wednesday 16 June 2010] [00:55:18] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 16 June 2010] [00:55:24] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 16 June 2010] [00:55:24] Created This channel was created on 2010-02-05 10:44.
| [Wednesday 16 June 2010] [01:05:09] Part    abadr has left this channel.
| [Wednesday 16 June 2010] [01:18:11] <sustrik>   aunc: hi
| [Wednesday 16 June 2010] [01:19:18] <guido_g>   long gone he is :)
| [Wednesday 16 June 2010] [01:19:34] <guido_g>   good morning, btw
| [Wednesday 16 June 2010] [01:19:38] <sustrik>   morning
| [Wednesday 16 June 2010] [01:19:48] <sustrik>   missed that
| [Wednesday 16 June 2010] [01:20:24] <guido_g>   easy, it's early
| [Wednesday 16 June 2010] [01:20:54] <sustrik>   you are in CET as well?
| [Wednesday 16 June 2010] [01:21:05] <guido_g>   yes
| [Wednesday 16 June 2010] [01:22:24] <guido_g>   just fell out of bed :)
| [Wednesday 16 June 2010] [01:31:25] <sustrik>   yes made my tea
| [Wednesday 16 June 2010] [01:32:00] <guido_g>   2nd coffee here
| [Wednesday 16 June 2010] [01:32:36] <guido_g>   the news say the world is still crazy, so everthing is as usual
| [Wednesday 16 June 2010] [01:35:08] <sustrik>   :)
| [Wednesday 16 June 2010] [03:32:14] <guido_g>   re
| [Wednesday 16 June 2010] [05:50:29] <Efhache>   Hi everybody... I need some help about ZMQ... I've found a tutorial about instant messaging on the zmq website 
| [Wednesday 16 June 2010] [05:51:32] <Efhache>   with referece to a "chat example" in the zmq package....  Where can I find it?  I've seen into the coockbook a link to a chat example but the link is broked
| [Wednesday 16 June 2010] [05:51:40] <Efhache>   Some one have the source code?
| [Wednesday 16 June 2010] [05:59:50] <guido_g>   it might be the links need an update because the repos have been renamed
| [Wednesday 16 June 2010] [06:00:05] <guido_g>   have a look at the mailing list for the new repository names
| [Wednesday 16 June 2010] [06:26:00] <sustrik>   Efhache: Ok, the links are fixed now
| [Wednesday 16 June 2010] [07:04:42] <Efhache>   with a lot of delay....  thank you sustrik for your help :-)
| [Wednesday 16 June 2010] [07:05:00] <sustrik>   you are welcome!
| [Wednesday 16 June 2010] [07:19:06] <Efhache>   just one more question : this is code is in link with the "Intant Messaging (tutorial) " on the zmq website?
| [Wednesday 16 June 2010] [07:19:27] <Efhache>   I do not find a "chatroom" process in the code. Is it right?
| [Wednesday 16 June 2010] [07:22:31] <umesh_>    I am using the xreq/xrep sockets ...
| [Wednesday 16 June 2010] [07:23:06] <umesh_>    I have send the single req from client to server ... but i am getting two messages in the server ...
| [Wednesday 16 June 2010] [07:23:21] <umesh_>    also I am not getting the response back in the client ...
| [Wednesday 16 June 2010] [07:35:04] <guido_g>   *sigh*
| [Wednesday 16 June 2010] [07:35:23] <guido_g>   first part of the message received is the id, second part the data
| [Wednesday 16 June 2010] [07:35:44] <guido_g>   you have to prepend the id to the result returned
| [Wednesday 16 June 2010] [07:40:26] <umesh_>    ok ...
| [Wednesday 16 June 2010] [07:41:11] <umesh_>    if I am sending multiple responses ... then all the responses should have id ...
| [Wednesday 16 June 2010] [07:59:20] <guido_g>   multiple responses to one are done with multiple message parts
| [Wednesday 16 June 2010] [07:59:27] <guido_g>   *to one request
| [Wednesday 16 June 2010] [08:01:14] <sustrik>   Efhache: the tutorial is outdated
| [Wednesday 16 June 2010] [08:01:24] <sustrik>   have a look at README file in the project
| [Wednesday 16 June 2010] [08:08:46] <umesh_>    I do not want to use that ... one of the reason being it will only send data once on the wire ...
| [Wednesday 16 June 2010] [08:09:07] <umesh_>    I have application line which sends status information on wire ...
| [Wednesday 16 June 2010] [08:09:36] <umesh_>    e.g. I am installing applicatiob remotely and that send the status in % of application installed ...
| [Wednesday 16 June 2010] [08:14:06] <guido_g>   (x)req/(x)rep is built to supoort the one request and one response pattern
| [Wednesday 16 June 2010] [08:14:28] <guido_g>   if you want to have something different, use a different socket type
| [Wednesday 16 June 2010] [08:18:12] <umesh_>    but sending the single response is not even working ...
| [Wednesday 16 June 2010] [08:18:30] <guido_g>   w/o the code we can only guess
| [Wednesday 16 June 2010] [08:18:37] <umesh_>    Assertion failed: msg_->flags & ZMQ_MSG_MORE (xrep.cpp:146)
| [Wednesday 16 June 2010] [08:19:05] <umesh_>    and if I provide SNDMORE flag in send ... it does not crash but does not recv anything ...
| [Wednesday 16 June 2010] [08:19:23] <guido_g>   umesh_: show the code
| [Wednesday 16 June 2010] [08:19:52] <sustrik>   umesh_: if you are sending responses via XREP socket
| [Wednesday 16 June 2010] [08:19:53] <guido_g>   and I mean the code that _actually_ has been run
| [Wednesday 16 June 2010] [08:20:08] <sustrik>   you have to prefix the response by the requester ID
| [Wednesday 16 June 2010] [08:20:23] <sustrik>   the same you've get with the request
| [Wednesday 16 June 2010] [08:20:41] <guido_g>   that's what i told him above
| [Wednesday 16 June 2010] [08:21:13] <sustrik>   the assert just checks that there are at least two parts to the message: ID and body
| [Wednesday 16 June 2010] [08:21:23] <sustrik>   xrep.cpp:146 i mean
| [Wednesday 16 June 2010] [08:22:26] <umesh_>    http://pastebin.com/nQigmsKx
| [Wednesday 16 June 2010] [08:22:35] <umesh_>    check here at pastebin
| [Wednesday 16 June 2010] [08:22:51] <umesh_>    this is just the server part ...
| [Wednesday 16 June 2010] [08:23:24] <umesh_>    i think I got a error ...
| [Wednesday 16 June 2010] [08:23:35] <umesh_>    i need to send 2 responses ... 
| [Wednesday 16 June 2010] [08:23:56] <umesh_>    in first id and second actaul resposne
| [Wednesday 16 June 2010] [08:24:29] <umesh_>    but what i did was i just sent one response in which id is prepended to response 
| [Wednesday 16 June 2010] [08:24:50] <guido_g>   you need to send a 2 part message
| [Wednesday 16 June 2010] [08:25:39] <guido_g>   the first part (with the id) is sent with the ZMQ_MSG_MORE flag set
| [Wednesday 16 June 2010] [08:25:53] <guido_g>   the 2nd part is your response, w/o the flag set
| [Wednesday 16 June 2010] [08:28:36] <umesh_>    its working now 
| [Wednesday 16 June 2010] [08:29:07] <umesh_>    is there no way to send multiple responses to the single request ... without multipart messages ...
| [Wednesday 16 June 2010] [08:29:08] <umesh_>    ?
| [Wednesday 16 June 2010] [08:29:20] <guido_g>   no
| [Wednesday 16 June 2010] [08:32:52] <umesh_>    ok
| [Wednesday 16 June 2010] [12:04:52] Nick    mw_ is now known as mw.
| [Wednesday 16 June 2010] [20:35:14] <rgl>   zedas, go mongrel go! :-)
| [Wednesday 16 June 2010] [21:19:18] Topic   The channel topic is "Welcome!".
| [Wednesday 16 June 2010] [21:19:18] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 16 June 2010] [21:19:24] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 16 June 2010] [21:19:24] Created This channel was created on 2010-02-05 10:44.
| 
| *** Logfile started
| *** on Wed Jun 16 23:49:26 2010
| 
| [Wednesday 16 June 2010] [23:49:26] Topic   The channel topic is "Welcome!".
| [Wednesday 16 June 2010] [23:49:26] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 16 June 2010] [23:49:32] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 16 June 2010] [23:49:32] Created This channel was created on 2010-02-05 10:44.
| [Thursday 17 June 2010] [00:07:15] <nak>    hi
| [Thursday 17 June 2010] [00:59:05] <sustrik>    nak: hi
| [Thursday 17 June 2010] [01:05:15] <guido_g>    good morning all
| [Thursday 17 June 2010] [01:08:57] <nak>    sustrik: trying to code an irc bot using zeromq
| [Thursday 17 June 2010] [01:08:59] <nak>    in c
| [Thursday 17 June 2010] [01:09:05] <nak>    could you give me any tips on how to set this up
| [Thursday 17 June 2010] [01:09:10] <nak>    so far i've gotten to the zmq_connect part
| [Thursday 17 June 2010] [01:10:37] <sustrik>    there's an example that works that way
| [Thursday 17 June 2010] [01:11:11] <sustrik>    http://github.com/zeromq/zeromq-chat
| [Thursday 17 June 2010] [01:12:49] <nak>    thanks
| [Thursday 17 June 2010] [01:16:14] <nak>    sustrik: the s.connect there isn't the same as the one in c
| [Thursday 17 June 2010] [01:16:23] <nak>    in c you have to send a tcp://address:port
| [Thursday 17 June 2010] [01:16:28] <nak>    there you just connect?
| [Thursday 17 June 2010] [01:17:03] <sustrik>    sorry, what are you speaking about?
| [Thursday 17 June 2010] [01:19:08] <nak>    int zmq_connect (void *socket, const char *address);
| [Thursday 17 June 2010] [01:19:23] <nak>    where the format has to be rc = zmq_connect (socket, "tcp://server001:5555");
| [Thursday 17 June 2010] [01:19:28] <sustrik>    yes
| [Thursday 17 June 2010] [01:19:44] <nak>    ok
| [Thursday 17 June 2010] [01:27:46] <nak>            zmq::message_t msg (strlen (textbuf) + 1);
| [Thursday 17 June 2010] [01:27:46] <nak>            memcpy (msg.data (), textbuf, msg.size ());
| [Thursday 17 June 2010] [01:27:49] <nak>    hnn
| [Thursday 17 June 2010] [01:28:03] <nak>    so in c this would be zmq_msg_t msg = strlen (textbuf) + 1;
| [Thursday 17 June 2010] [01:28:17] <nak>    and the memcpy?
| [Thursday 17 June 2010] [01:40:18] <sustrik>    zmq_msg_t msg;
| [Thursday 17 June 2010] [01:40:35] <sustrik>    zmq_msg_init_size (&msg, strlen (textbuf) + 1);
| [Thursday 17 June 2010] [01:40:42] <sustrik>    memcpy (...)
| [Thursday 17 June 2010] [01:51:27] <nak>    sustrik: http://codepad.org/XGEpa7gw
| [Thursday 17 June 2010] [01:51:34] <nak>    i don't know the zeromq types, etc
| [Thursday 17 June 2010] [01:51:37] <nak>    foreign to me.
| [Thursday 17 June 2010] [01:51:51] <nak>    what should i pass to memcpy
| [Thursday 17 June 2010] [01:51:54] <nak>    msg.data?
| [Thursday 17 June 2010] [01:53:39] <guido_g>    http://api.zeromq.org/zmq_msg_init_size.html <- docs
| [Thursday 17 June 2010] [01:53:55] <guido_g>    http://api.zeromq.org/zmq.html <- even more docs
| [Thursday 17 June 2010] [01:59:43] <nak>    :)
| [Thursday 17 June 2010] [01:59:57] Part nak has left this channel.
| 
| *** Logfile started
| *** on Thu Jun 17 02:39:46 2010
| 
| [Thursday 17 June 2010] [02:39:46] Topic    The channel topic is "Welcome!".
| [Thursday 17 June 2010] [02:39:46] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Thursday 17 June 2010] [02:39:52] Mode Channel modes: no messages from outside, topic protection
| [Thursday 17 June 2010] [02:39:52] Created  This channel was created on 2010-02-05 10:44.
| [Thursday 17 June 2010] [02:42:48] <umesh>  how can i build pyzmq with static zmq libraries ...
| [Thursday 17 June 2010] [02:54:02] <sustrik>    question for brian
| [Thursday 17 June 2010] [02:54:14] <sustrik>    try asking on mailing list
| [Thursday 17 June 2010] [02:54:34] <umesh>  ok
| [Thursday 17 June 2010] [04:58:04] <middayc>    I would like to make a Rebol binding to 0mq .. are there any zmqlib.so / dll available maybe that one could download without recompiling?
| [Thursday 17 June 2010] [05:02:45] <CIA-17> zeromq2: 03Martin Sustrik 07master * r9151de3 10/ src/socket_base.cpp : generate identity for transient inproc connections - http://bit.ly/bsKHxn
| [Thursday 17 June 2010] [05:03:13] <sustrik>    middayc: not that I am aware of
| [Thursday 17 June 2010] [05:03:22] <sustrik>    however, recompiling takes few seconds
| [Thursday 17 June 2010] [05:03:50] <sustrik>    well, there are some linux packages out there
| [Thursday 17 June 2010] [05:04:26] <middayc>    I am on windows now and I don't have VS2008, just VS6 and probably to crappy computer to make VS2008 run well anyway
| [Thursday 17 June 2010] [05:06:09] <sustrik>    you don't need it to run well
| [Thursday 17 June 2010] [05:06:16] <sustrik>    it's a very small project
| [Thursday 17 June 2010] [05:06:28] <sustrik>    so it'll compile even on crappy computer
| [Thursday 17 June 2010] [05:07:27] <middayc>    last time I tried VS2008 it was horrible.. I will try it again .. ok thanks :) .. just wanted to make sure I am not wasting time downloading and installing visual studio if there is some dll somewhere to try
| [Thursday 17 June 2010] [05:09:19] <sustrik>    middayc: optionally, it should be compilable under mingw if you have that installed
| [Thursday 17 June 2010] [05:10:31] <middayc>    I think I have.. I am not too good lower level programmer .. I will try the default way now. if mongrel2 plans work 0mq will get quite some attention :)
| [Thursday 17 June 2010] [05:11:30] <sustrik>    ok
| [Thursday 17 June 2010] [05:24:39] <middayc>    ha, I have the dll, I already had vs2008 installed, just didn't have it registered .. I will tell you if I make the rebol binding. Thanks
| [Thursday 17 June 2010] [05:26:21] <middayc>    I see you also have interprocess communication? so this could be a good option to make for example rebol apps multicore?
| [Thursday 17 June 2010] [05:42:03] <sustrik>    ipc doesn't work on win32 sadly
| [Thursday 17 June 2010] [05:42:13] <sustrik>    but using TCP loopback works well
| [Thursday 17 June 2010] [05:42:44] <sustrik>    e.g: zmq_bind ("tcp://127.0.0.1:5555"); 
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: 03Martin Hurton 07master * r4777fe4 10/ src/pipe.cpp : 
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: pipe: fix bug in rollback() method
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: The msgs_written variable keeps track how many complete
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: messages have been written so far. The rollback operation drops all
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: fragments of the last incomplete message so it shouldn't
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: change this variable at all. - http://bit.ly/9SRCM8
| [Thursday 17 June 2010] [08:53:29] <middayc>    what would a errno 19 or 22 mean with bind (in .h file when I see errors (if I see correctly) thy should all be above 156384712
| [Thursday 17 June 2010] [09:10:41] <middayc>    ah, I found strerror
| [Thursday 17 June 2010] [09:11:40] <sustrik>    middayc: yeah, strerror should help
| [Thursday 17 June 2010] [09:11:56] <sustrik>    the error you are seeing is probably defined in a system header somewhere
| [Thursday 17 June 2010] [09:18:47] <middayc>    19 means "no such device" I get -1 and "no such device on zmq-bind sock "tcp://localhost:5555"  but 0 and still 19 on zmq-bind sock "tcp://127.0.0.1:5555" ... later with recv I get "Operation cannot be accomplished in current state" but I am not sure if I handle &msg there properly yet (in binding)
| [Thursday 17 June 2010] [09:36:03] <sustrik>    what's happens when you do zmq_bind ("tcp://127.0.0.1:5555") ?
| [Thursday 17 June 2010] [09:38:50] <middayc>    I get 0 (but if I call errno anyway it returns "no such device" if it matters)
| [Thursday 17 June 2010] [09:39:41] <sustrik>    if you get 0 it's OK
| [Thursday 17 June 2010] [09:40:21] <sustrik>    note that on win32 there are no interface names
| [Thursday 17 June 2010] [09:40:33] <sustrik>    so you have to bind using an IP address of the interface
| [Thursday 17 June 2010] [09:43:57] <middayc>    aha, I saw that localhost didn't work.. no problem . I think I am having problem creating and passing that zmq_msg_t struct to init and then recv .. this is completely on my end (rebol's) so I shouldn't bother you about it
| [Thursday 17 June 2010] [09:51:20] <sustrik>    ok
| [Thursday 17 June 2010] [10:21:59] <middayc>    I wrote this in rebol chat (it's not so big community) so I guess I will bother you a little more :) .. http://www.qwikitxt.com/use.rsp?key=17-Jun-2010-t2ebk9a6r8ld1c1o4q3z in case you have time you can look at it and if my assumptions are stupidly wrong you can tell me :)
| [Thursday 17 June 2010] [10:37:47] <sustrik>    middayc: it depends on how rebol handles C objects
| [Thursday 17 June 2010] [10:38:09] <sustrik>    as a void*?
| [Thursday 17 June 2010] [10:38:56] <sustrik>    ok, even more essential question:
| [Thursday 17 June 2010] [10:39:10] <sustrik>    how does rebol wrap C libraries?
| [Thursday 17 June 2010] [10:39:23] <sustrik>    usign a bridge C library a la JNI
| [Thursday 17 June 2010] [10:39:51] <sustrik>    or by calling C functions directly from rebol (like .net)?
| [Thursday 17 June 2010] [10:46:14] <middayc>    http://paste.factorcode.org/paste?id=1734 it's very simple on rebol side, but it has it's limitations.. this is how I specify binding for simpler func ... I talked to some rebol guys and I will write some c code, similarly as lua handles this for example.
| [Thursday 17 June 2010] [10:50:05] <sustrik>    middayc: yes, the lua way helps as it doesn't require rebol to deal with messy C details (such as sizeof zmq_msg_t)
| [Thursday 17 June 2010] [10:50:19] <sustrik>    say for implementing send
| [Thursday 17 June 2010] [10:50:32] <sustrik>    you pass it rebol string (or bytearray or whatevet)
| [Thursday 17 June 2010] [10:50:47] <sustrik>    the underlying wrapper function (in C) will create zmq_msg_t
| [Thursday 17 June 2010] [10:50:59] <sustrik>    initialise it and copy the data into it
| [Thursday 17 June 2010] [10:51:04] <sustrik>    easy
| [Thursday 17 June 2010] [10:53:25] <CIA-17> zeromq2: 03Martin Sustrik 07master * r7f01e99 10/ (11 files in 3 dirs): stopwatch returned to libzmq - http://bit.ly/bFfVsS
| [Thursday 17 June 2010] [11:10:10] <CIA-17> zeromq2: 03Martin Sustrik 07master * rcff7ba2 10/ (6 files in 6 dirs): Windows build fixed - http://bit.ly/dx2FhU
| [Thursday 17 June 2010] [11:24:19] <middayc>    thanks for your oppinion.. I will do it that way then. And of course thanks for making 0mq .. what I like the most so far is that it has a minimal simple api
| [Thursday 17 June 2010] [11:31:04] <sustrik>    middayc: thanks
| [Thursday 17 June 2010] [11:34:45] <middayc>    (and power with ipc/speed/flexibility/.. I believe powerful things don't have to be bloated and 0mq is that way)
| [Thursday 17 June 2010] [11:36:04] <sustrik>    actually, bloat is mostly followed by performance degradation
| [Thursday 17 June 2010] [11:40:26] <middayc>    yes, I think exactly the same way :)
| [Thursday 17 June 2010] [14:41:37] <CIA-17> rbzmq: 03Brian Buchanan 07master * r048a024 10/ (zmq2.gemspec zmq.gemspec): rename gem to zmq2 - http://bit.ly/aq9jRH
| [Thursday 17 June 2010] [19:03:51] Nick y is now known as Guest27156.
| [Thursday 17 June 2010] [20:54:12] <achew22>    can anyone point me to a good introduction to zeromq that focuses on python?
| [Thursday 17 June 2010] [22:04:33] Part achew22 has left this channel.
| [Friday 18 June 2010] [02:55:24] <umesh>    I read some code in zeromq ...
| [Friday 18 June 2010] [02:55:41] <umesh>    i have some queries related to it 
| [Friday 18 June 2010] [02:56:29] <umesh>    I have observed that in zmq for req/rep ... it uses normal tcp/ip apis internally ...
| [Friday 18 June 2010] [02:56:48] <umesh>    like listen, bind, connect, accecp, recv and send etc ...
| [Friday 18 June 2010] [02:57:38] <umesh>    but when we close the server generall read or recv returns 0 when server is shutdown using cntrl-c or exit or abort ... 
| [Friday 18 June 2010] [02:58:32] <umesh>    but in case of zmq recv does not return 0 when server is closed using exit or abort 
| [Friday 18 June 2010] [02:58:34] <umesh>    why ?
| [Friday 18 June 2010] [03:34:14] Nick   y is now known as Guest13742.
| [Friday 18 June 2010] [03:55:54] <sustrik>  becore there are N connections
| [Friday 18 June 2010] [03:55:59] <sustrik>  because*
| [Friday 18 June 2010] [03:56:15] <sustrik>  one failing doesn't make other unusable
| [Friday 18 June 2010] [04:17:27] <umesh>    sustrik: I did not understood your answer very clearly 
| [Friday 18 June 2010] [04:18:00] <sustrik>  0mq sockets can have arbitrary number of BSD sockets under the hood
| [Friday 18 June 2010] [04:18:21] <sustrik>  if one of the BSD sockets fail
| [Friday 18 June 2010] [04:18:31] <sustrik>  the others are still up and kicking
| [Friday 18 June 2010] [04:20:16] <mikko>    is there any way to know that send to one endpoint failed?
| [Friday 18 June 2010] [04:20:29] <mikko>    is there a need to know ever?
| [Friday 18 June 2010] [04:20:43] <sustrik>  there's no such thing as "send to one endpoint"
| [Friday 18 June 2010] [04:20:55] <sustrik>  if you want that kind of stuff, use BSD sockets directly
| [Friday 18 June 2010] [04:21:14] <mikko>    maybe i misphrased
| [Friday 18 June 2010] [04:21:40] <mikko>    i mean if i connect 0mq socket to three endpoints and one of them is unreachable. as a developer do i need/want to know about that?
| [Friday 18 June 2010] [04:22:28] <sustrik>  the design of 0mq is such that you don't know
| [Friday 18 June 2010] [04:22:35] <sustrik>  it's like speaking to a cloud
| [Friday 18 June 2010] [04:22:55] <sustrik>  if you want to manage connections on one-by-one basis, that's what BSD sockets are for
| [Friday 18 June 2010] [04:23:55] <mikko>    fire and forget
| [Friday 18 June 2010] [04:24:29] <sustrik>  yes
| [Friday 18 June 2010] [04:25:26] <mikko>    i started working on http device but got stuck on figuring out SLAs for different things at work
| [Friday 18 June 2010] [04:26:15] <sustrik>  no haste :)
| [Friday 18 June 2010] [04:29:40] <mikko>    the thing i like about imatix page is that it lists prices for professional services
| [Friday 18 June 2010] [04:29:47] <mikko>    that is nice and transparent
| [Friday 18 June 2010] [04:30:02] <mikko>    most of the companies have phone number and you need to go through hoops to get prices
| [Friday 18 June 2010] [04:30:39] <sustrik>  yes, experienced that myself
| [Friday 18 June 2010] [04:32:17] <sustrik>  presumably, the price is not the same for everyone
| [Friday 18 June 2010] [04:32:35] <mikko>    yeah, that's what i assume
| [Friday 18 June 2010] [04:32:43] <mikko>    the bigger company calling the bigger the price is
| [Friday 18 June 2010] [04:33:00] <mikko>    makes it very hard to calculate costs for a project especially under very strict NDA
| [Friday 18 June 2010] [04:39:32] <sustrik>  true
| [Friday 18 June 2010] [06:44:11] <umesh>    sustrik: you remember on that day we discussed about the  writing a sync 0mq client
| [Friday 18 June 2010] [06:44:40] <umesh>    and you told discussion happended couple of times but no one really did it ...
| [Friday 18 June 2010] [06:44:47] <umesh>    I can do it ...
| [Friday 18 June 2010] [06:44:55] <umesh>    can you give me some pointers ...
| [Friday 18 June 2010] [06:45:01] <umesh>    on this ...
| [Friday 18 June 2010] [06:45:08] <umesh>    how can we do it etc ...
| [Friday 18 June 2010] [06:45:38] <sustrik>  umesh: it's easy
| [Friday 18 June 2010] [06:45:46] <sustrik>  have a look at zmq_tcp(7)
| [Friday 18 June 2010] [06:45:54] <sustrik>  the wire format section
| [Friday 18 June 2010] [06:46:03] <sustrik>  that's how 0mq messages look like on the wire
| [Friday 18 June 2010] [06:46:19] <sustrik>  so the only thing you have to do is to open a TCP socket
| [Friday 18 June 2010] [06:46:26] <sustrik>  and read/write such messages
| [Friday 18 June 2010] [06:46:30] <sustrik>  and report errors :)
| [Friday 18 June 2010] [06:49:05] <umesh>    ok
| [Friday 18 June 2010] [11:13:58] <cremes>   going async to sync... i just don't see the point to doing that; async is perfect already
| [Friday 18 June 2010] [11:19:41] <sustrik>  error handling i suppose
| [Friday 18 June 2010] [11:32:39] <cremes>   pffftt; that's what error callbacks are for.
| [Saturday 19 June 2010] [03:43:20] Nick y is now known as Guest93184.
| [Saturday 19 June 2010] [07:45:16] Nick Guest93184 is now known as rgl.
| 
| *** Logfile started
| *** on Sat Jun 19 10:52:12 2010
| 
| [Saturday 19 June 2010] [10:52:12] Topic    The channel topic is "Welcome!".
| [Saturday 19 June 2010] [10:52:12] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Saturday 19 June 2010] [10:52:18] Mode Channel modes: no messages from outside, topic protection
| [Saturday 19 June 2010] [10:52:18] Created  This channel was created on 2010-02-05 10:44.
| [Saturday 19 June 2010] [10:54:57] Mode ChanServ gives CIA-19 permission to talk.
| [Saturday 19 June 2010] [14:09:10] <CIA-19> zeromq2: 03Martin Hurton 07master * r2c3913b 10/ src/pair.cpp : fix double free error in PAIR socket - http://bit.ly/dawP59
| [Saturday 19 June 2010] [14:42:38] Nick y is now known as Guest66642.
| [Saturday 19 June 2010] [14:49:47] <CIA-19> zeromq2: 03Martin Hurton 07master * r10c28c1 10/ src/pipe.cpp : Revive reader on pipe termination -
| 
| *** Logfile started
| *** on Sun Jun 20 14:17:29 2010
| 
| [Sunday 20 June 2010] [14:17:29] Topic  The channel topic is "Welcome!".
| [Sunday 20 June 2010] [14:17:29] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Sunday 20 June 2010] [14:17:35] Mode   Channel modes: no messages from outside, topic protection
| [Sunday 20 June 2010] [14:17:36] Created    This channel was created on 2010-02-05 10:44.
| [Sunday 20 June 2010] [20:26:15] <Jad>  hey I'm looking for recommendations on SSL libraries (C preferably) for building some degree of security into a high volume socket server
| [Sunday 20 June 2010] [20:29:07] <Jad>  OpenSSL seems like the obvious choice
| [Sunday 20 June 2010] [21:34:50] <Jad>  does anyone have any experience with setting up the PHP extension on windoze?
| [Sunday 20 June 2010] [22:36:08] <impl> mikko would probably, since he wrote it (or maybe at least wrote one of them, I don't know if there are multiple)
| [Sunday 20 June 2010] [22:52:42] <Jad>  ok
| [Sunday 20 June 2010] [22:53:14] <Jad>  thnx
| [Monday 21 June 2010] [00:46:35] <Jad>  got it working
| [Monday 21 June 2010] [04:51:10] <mikko>    Jad: i got old windows builds somewhere
| [Monday 21 June 2010] [04:51:20] <mikko>    would need to update at some point
| [Monday 21 June 2010] [05:05:05] Part   xiaohao has left this channel.
| [Monday 21 June 2010] [05:24:06] <mikko>    hmm
| [Monday 21 June 2010] [05:24:11] <mikko>    windows builds fail atm
| [Monday 21 June 2010] [05:24:14] <mikko>    with github trunk
| [Monday 21 June 2010] [05:32:43] <sustrik>  mikko: let me try
| [Monday 21 June 2010] [05:33:15] <sustrik>  mikko: you meant zeromq2 of php bindign?
| [Monday 21 June 2010] [05:34:22] <mikko>    sustrik: zeromq2
| [Monday 21 June 2010] [05:34:35] <sustrik>  ok
| [Monday 21 June 2010] [05:34:36] <mikko>    visual studio templates refer to app_threads.cpp
| [Monday 21 June 2010] [05:34:52] <mikko>    and there is a missing return in zmq.cpp
| [Monday 21 June 2010] [05:34:56] <mikko>    let me get the line
| [Monday 21 June 2010] [05:35:04] <sustrik>  wait a se
| [Monday 21 June 2010] [05:35:05] <sustrik>  sec
| [Monday 21 June 2010] [05:35:16] <mikko>    642
| [Monday 21 June 2010] [05:35:18] <sustrik>  where did you get your source code from?
| [Monday 21 June 2010] [05:35:22] <mikko>    github 
| [Monday 21 June 2010] [05:35:25] <sustrik>  sustrik/zeromq2
| [Monday 21 June 2010] [05:35:26] <sustrik>  ?
| [Monday 21 June 2010] [05:35:27] <mikko>    yep
| [Monday 21 June 2010] [05:35:37] <mikko>    just did svn update
| [Monday 21 June 2010] [05:35:53] <sustrik>  last week the official version ws renamed to zeromq/zeromq2
| [Monday 21 June 2010] [05:35:59] <mikko>    ok
| [Monday 21 June 2010] [05:36:07] <mikko>    my build scripts just do svn up on everything
| [Monday 21 June 2010] [05:36:08] <sustrik>  sustrik/zeromq2 is my private sandbox now :)
| [Monday 21 June 2010] [05:36:11] <mikko>    and then build
| [Monday 21 June 2010] [05:36:26] <sustrik>  sorry for confusion
| [Monday 21 June 2010] [05:37:04] <mikko>    it's nice that i can use tortoisesvn to communicate with github on my win build machine
| [Monday 21 June 2010] [05:55:14] <sustrik>  mikko: btw, speaking of windows, do you have 2 win boxes by chance?
| [Monday 21 June 2010] [05:57:35] <mikko>    sustrik: i use VMs
| [Monday 21 June 2010] [05:57:46] <sustrik>  ah, ok then
| [Monday 21 June 2010] [05:57:48] <mikko>    so in theory i can have two windows boxes
| [Monday 21 June 2010] [05:57:51] <mikko>    :)
| [Monday 21 June 2010] [05:58:11] <sustrik>  i was interested in whether anyone can reproduce the opedds's latency test
| [Monday 21 June 2010] [05:58:18] <sustrik>  they are claming 0mq latency of 170us
| [Monday 21 June 2010] [05:58:23] <sustrik>  between 2 win boxes
| [Monday 21 June 2010] [05:58:28] <mikko>    i dont think vm is that usable
| [Monday 21 June 2010] [05:58:35] <mikko>    as there is going to be latency 
| [Monday 21 June 2010] [05:58:46] <sustrik>  nope, it would have impact on the test
| [Monday 21 June 2010] [05:59:07] <sustrik>  never mind, i'll ask on the mailing list
| [Monday 21 June 2010] [05:59:08] <mikko>    regarding zeromq support
| [Monday 21 June 2010] [05:59:11] <sustrik>  yes?
| [Monday 21 June 2010] [05:59:14] <mikko>    is it going to be yourself who is supporting it?
| [Monday 21 June 2010] [05:59:32] <sustrik>  there are several people involved
| [Monday 21 June 2010] [05:59:40] <mikko>    ok, good
| [Monday 21 June 2010] [05:59:40] <sustrik>  i am mainly doing development
| [Monday 21 June 2010] [05:59:58] <mikko>    so that if you get hit by a bus there is still someone supporting it
| [Monday 21 June 2010] [06:00:06] <sustrik>  yes, sure :)
| [Monday 21 June 2010] [06:00:20] <mikko>    good, good
| [Monday 21 June 2010] [06:00:36] <sustrik>  i am the visible figure here, others are doing paid work that's not visible
| [Monday 21 June 2010] [07:54:36] <sjampoo>  Is there anything more to the pipeline pattern? Or is basically just a req/rep pattern without the rep part? As the req/rep part also balances over its peers.
| [Monday 21 June 2010] [07:57:15] <sustrik>  sjampoo: it's similar
| [Monday 21 June 2010] [07:57:38] <sustrik>  the crucial difference is that replies are not routed back
| [Monday 21 June 2010] [07:57:45] <sustrik>  instead they are routed forward
| [Monday 21 June 2010] [07:58:14] <sjampoo>  ok!
| [Monday 21 June 2010] [15:19:12] <Jad>  yeah I updated everything to vc9, didn't even realize about this issue on windows boxes
| [Monday 21 June 2010] [15:19:28] <Jad>  works great now
| [Monday 21 June 2010] [19:31:20] Notice -NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Monday 21 June 2010] [19:31:20] Notice -NickServ- You are now identified for travlr.
| [Monday 21 June 2010] [19:31:22] Topic  The channel topic is "Welcome!".
| [Monday 21 June 2010] [19:31:22] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Monday 21 June 2010] [19:31:28] Mode   Channel modes: no messages from outside, topic protection
| [Monday 21 June 2010] [19:31:28] Created    This channel was created on 2010-02-05 10:44.
| [Monday 21 June 2010] [22:04:53] <stuarthalloway>   if I run either the latency/throughput tests from Java, but increase the roundtrip count by a factor of 10, I get an exception:
| [Monday 21 June 2010] [22:05:09] <stuarthalloway>   "Context was terminated" at org.zeromq.ZMQ$Socket.recv
| [Monday 21 June 2010] [22:05:28] <stuarthalloway>   running with verbose:gc suggests that this happens immediately after the first garbage collection
| [Monday 21 June 2010] [22:06:16] <stuarthalloway>   ...which suggests a resource management issue, or maybe I have a bad build
| [Monday 21 June 2010] [22:06:42] <stuarthalloway>   I am using 2.0.7 plus the latest jzmq from git
| [Tuesday 22 June 2010] [05:41:16] Mode  ChanServ gives CIA-17 permission to talk.
| [Tuesday 22 June 2010] [06:52:36] <travlr>  sustrik: Hi Martin.. are you available?
| [Tuesday 22 June 2010] [06:55:32] <sustrik> hi
| [Tuesday 22 June 2010] [06:55:38] <sustrik> yeah, i'm here
| [Tuesday 22 June 2010] [06:58:40] <travlr>  Hi. I first want to appologize for the the email I (peter alexander) posted to the list last night. I was half asleep when I wrote it and didn't mean to suggest that I could know more about things than you do. I most certainly do not and I think thats the way my email may have come across.
| [Tuesday 22 June 2010] [07:09:07] <sustrik> travlr: you very well may know more
| [Tuesday 22 June 2010] [07:09:16] <sustrik> it's the pipelining
| [Tuesday 22 June 2010] [07:09:26] <sustrik> i haven't been involved with that much
| [Tuesday 22 June 2010] [07:09:50] <sustrik> the existing behaviour is based on few cases we've seen
| [Tuesday 22 June 2010] [07:09:56] <sustrik> no theoretical beckground there
| [Tuesday 22 June 2010] [07:10:55] <travlr>  ok, very well. but I am self taught and no where near your caliber of expertise. enough said.
| [Tuesday 22 June 2010] [07:11:30] <travlr>  would you like to have a doxygen api representation for the zmq sources?
| [Tuesday 22 June 2010] [07:12:48] <sustrik> what would that require?
| [Tuesday 22 June 2010] [07:12:58] <sustrik> adding formatted comments to the source?
| [Tuesday 22 June 2010] [07:13:56] <travlr>  changing the comments from /* .. */ to /** .. */ and // to /// and then deciding on a suitable style sheet.
| [Tuesday 22 June 2010] [07:15:13] <travlr>  i could do a patch set or clone on github for you to decide.
| [Tuesday 22 June 2010] [07:16:16] <sustrik> that would be great
| [Tuesday 22 June 2010] [07:18:49] <travlr>  ok I'll start with that today and while doing so I'll familiarize myself with the sources so I can hopefully help the community to formulate more flexible/powerful load balancing/distribution and possibly resource management aspects of zmq. 
| [Tuesday 22 June 2010] [07:23:19] <sustrik> great
| [Tuesday 22 June 2010] [07:23:22] <sustrik> good luck :)
| [Tuesday 22 June 2010] [07:24:05] <travlr>  k. thanks.
| [Tuesday 22 June 2010] [07:41:36] <sjampoo> I've written an introduction to ZeroMQ for my blog
| [Tuesday 22 June 2010] [07:41:42] <sjampoo> It is currently in draft mode here: http://nichol.as/?p=606&shareadraft=baba606_4c20a0df10298
| [Tuesday 22 June 2010] [07:41:58] <sjampoo> I'd appreciate any feedback, especially if i am telling bullshit ;) 
| [Tuesday 22 June 2010] [07:43:15] <sjampoo> i'll be off for now, but would really like to hear if you think stuff is missing or wrong by email (to nicholas@nichol.as)
| [Tuesday 22 June 2010] [07:46:37] <sustrik> sjampoo: let me see
| [Tuesday 22 June 2010] [07:47:05] <sustrik> the graphic design is awesome!
| [Tuesday 22 June 2010] [07:52:11] <sustrik> sjampoo: what tool do you use for drawing diagrams?
| [Tuesday 22 June 2010] [07:52:15] <sustrik> they are really neat
| [Tuesday 22 June 2010] [07:57:46] <sjampoo> Thanks, its OmniGaffle for OSX, really one of my favorite tools
| [Tuesday 22 June 2010] [07:57:51] <sjampoo> Have to catch a train now!
| [Tuesday 22 June 2010] [07:58:57] <travlr>  they are sweet. anything similar to omnigraffe on linux i wonder.
| [Tuesday 22 June 2010] [08:00:45] <sustrik> doesn't look like :(
| [Tuesday 22 June 2010] [08:02:23] <travlr>  yeah not as sweet from what i have found but here' s a nice site for alternatives anyway. http://alternativeto.net/desktop/omnigraffle/?platform=linux
| [Tuesday 22 June 2010] [08:06:07]    * sustrik is using Dia
| [Tuesday 22 June 2010] [08:06:28] <sustrik> I would switch for OmniGaffe if I had a Mac box
| [Tuesday 22 June 2010] [08:06:48] <sustrik> but looks like I'll stay with Dia for now
| [Tuesday 22 June 2010] [08:07:22] Part  sustrik has left this channel ("Leaving").
| [Tuesday 22 June 2010] [08:07:59] <travlr>  Dia is nice, i haven't used it in quite a while though. Aris Express looks like it might be cool. http://alternativeto.net/desktop/aris-express/about
| [Tuesday 22 June 2010] [08:08:46] <travlr>  but its trial ware :(
| [Tuesday 22 June 2010] [08:09:49] <travlr>  oh my mistake.. its not trial ware.
| [Tuesday 22 June 2010] [08:18:37] <sustrik> maybe worth of trying - but it seems to be tied to a particular design methodology rather than being a generic drawing tool
| [Tuesday 22 June 2010] [08:24:34] <travlr>  yup. i almost jumped on the koffice team a year ago to modernize kivio, but as usual time is always a problem
| [Tuesday 22 June 2010] [08:32:01] <travlr>  sustrik: would you consider including an alternative cmake build system in zmq master if i told you i would be around to help maintain it? 
| [Tuesday 22 June 2010] [08:41:29] <sustrik> travlr: there's already a cmake build system here: git://github.com/PatrickCheng/zeromq2.git
| [Tuesday 22 June 2010] [08:41:53] <sustrik> if you want to help with it try speaking to the guy maintaining it
| [Tuesday 22 June 2010] [08:44:50] <travlr>  yes, i was aware of his fork. not a problem but merely a question. i'm not big on autotools so i thought i'd simply ask you.
| [Tuesday 22 June 2010] [08:46:11] <sustrik> well, the state of affairs is that the autotools build works on all supported platforms
| [Tuesday 22 June 2010] [08:46:25] <sustrik> if cmake build wants to become an alternative
| [Tuesday 22 June 2010] [08:46:40] <sustrik> there's a lot of testing to do on different platforms
| [Tuesday 22 June 2010] [08:47:46] <travlr>  i see. cmake is portable to all platforms though i believe. right?
| [Tuesday 22 June 2010] [08:49:27] <sustrik> i think so, but you have to deal with petty details by hand
| [Tuesday 22 June 2010] [08:50:14] <sustrik> have a look here: http://github.com/zeromq/zeromq2/blob/master/configure.in
| [Tuesday 22 June 2010] [08:50:32] <sustrik> different things done on different platforms...
| [Tuesday 22 June 2010] [08:50:36] <travlr>  yes. no prob. something for me to think about in the future maybe. i'm not yet schooled on all platform intricacies so i'll just use it privately for now.
| [Tuesday 22 June 2010] [11:40:29] <bapt>    Hi alk
| [Tuesday 22 June 2010] [11:41:52] <bapt>    is it possible with using pubsub that only one client (randomly) get the published messages
| [Tuesday 22 June 2010] [11:41:55] <bapt>    ?
| [Tuesday 22 June 2010] [11:42:43] <bapt>    I mean the publisher send a message N clients subscribed to it but I want only one client to really do the treatment
| [Tuesday 22 June 2010] [11:56:43] <cremes>  bapt: so you want all clients to receive the message but only 1 client to actually process the data?
| [Tuesday 22 June 2010] [11:57:45] <bapt>    yes
| [Tuesday 22 June 2010] [11:58:35] <cremes>  i would recommend looking at the butterfly example; it doesn't use pub/sub
| [Tuesday 22 June 2010] [11:58:38] <bapt>    in fact what I want is butterfly (I'm looking at the tutorail right now)
| [Tuesday 22 June 2010] [11:58:42] <bapt>     :)
| [Tuesday 22 June 2010] [11:58:45] <cremes>  it uses downstream/upstream sockets
| [Tuesday 22 June 2010] [11:58:55] <cremes>  oh, then you are on the right track!
| [Tuesday 22 June 2010] [11:59:10] <cremes>  do you have a specific question on that example?
| [Tuesday 22 June 2010] [11:59:22] <bapt>    not currently
| [Tuesday 22 June 2010] [11:59:45] <bapt>    thanks
| [Tuesday 22 June 2010] [12:00:21] <cremes>  ok
| [Tuesday 22 June 2010] [12:11:40] <bapt>    it's incredibly easy and powerfull
| [Tuesday 22 June 2010] [12:12:07] <bapt>    thanks a lot for 0mq, you saved a lot of my coding time :)
| [Tuesday 22 June 2010] [15:23:56] <jldupont>    hi - is there an official apt repository? i.e. apt-get 
| [Tuesday 22 June 2010] [15:25:17] <jldupont>    anyone??
| [Tuesday 22 June 2010] [15:28:44] <mivert>  jldupont: 2.0.6 is in sid and maverick http://packages.debian.org/source/sid/zeromq https://launchpad.net/ubuntu/maverick/+source/zeromq iMatix does not produce debs though
| [Tuesday 22 June 2010] [15:29:09] <jldupont>    mivert: thanks.
| [Tuesday 22 June 2010] [15:34:10] <sustrik> jldupont: there are deb packaging scripts in debian subdirectory, so in theory you can build the package yourself
| [Tuesday 22 June 2010] [15:34:47] <jldupont>    sustrik: thanks.  Is there a problem if I package and publish on Launchpad?
| [Tuesday 22 June 2010] [15:35:01] <sustrik> no, no problem at all
| [Tuesday 22 June 2010] [15:35:46] <jldupont>    just one doubt:  can the Python bindings do non-blocking?
| [Tuesday 22 June 2010] [15:36:44] <sustrik> you mean async, right?
| [Tuesday 22 June 2010] [15:37:03] <sustrik> the messages being sent on the background
| [Tuesday 22 June 2010] [15:37:12] <jldupont>    I guess.  I want to "recv" with timeout.
| [Tuesday 22 June 2010] [15:37:35] <sustrik> ah, there's no timeout in recv
| [Tuesday 22 June 2010] [15:37:35] <jldupont>    i.e. no blocking in receive loop
| [Tuesday 22 June 2010] [15:37:39] <sustrik> so you have to poll
| [Tuesday 22 June 2010] [15:37:45] <sustrik> (that one has timeout)
| [Tuesday 22 June 2010] [15:37:49] <sustrik> and then recv
| [Tuesday 22 June 2010] [15:37:58] <sustrik> either blocking or non-blocking
| [Tuesday 22 June 2010] [15:38:12] <sustrik> all these features should be available in pyzmq
| [Tuesday 22 June 2010] [15:38:19] <jldupont>    great.
| [Tuesday 22 June 2010] [15:38:56] <jldupont>    so, if I want a "message fabric", I have to build one myself i.e. there isn't a "broker/switch" in the system as in AMQP. Right?
| [Tuesday 22 June 2010] [15:39:51] <sustrik> there are so called "devices"
| [Tuesday 22 June 2010] [15:40:04] <sustrik> they are like micro-brokers
| [Tuesday 22 June 2010] [15:40:22] <sustrik> say an executable that is in fact a queue
| [Tuesday 22 June 2010] [15:40:27] <sustrik> single one
| [Tuesday 22 June 2010] [15:40:34] <sustrik> (zmq_queue)
| [Tuesday 22 June 2010] [15:40:54] <sustrik> but you can build the fabric by hand if you wish so
| [Tuesday 22 June 2010] [15:41:15] <jldupont>    hmmm... http://api.zeromq.org/zmq_forwarder.html ... sort of empty...
| [Tuesday 22 June 2010] [15:42:02] <sustrik> have a look here http://github.com/zeromq/zeromq-chat/blob/master/README
| [Tuesday 22 June 2010] [15:43:16] <jldupont>    ok thanks. I'll check it out later. Ciao.
| [Tuesday 22 June 2010] [15:43:30] <sustrik> cyl
| [Tuesday 22 June 2010] [15:49:38] <soren>   I'm wondering about a few things wrt to pub/sub using multicast.
| [Tuesday 22 June 2010] [15:50:04] <soren>   I haven't completely wrapped my head around multicast yet, so please bear with me.
| [Tuesday 22 June 2010] [15:50:08] <soren>   :)
| [Tuesday 22 June 2010] [15:51:15] <soren>   Ok, so say I have a bunch of publishers (let's say 100-ish) and a /lot/ of subscribers (let's say 100000-ish).
| [Tuesday 22 June 2010] [15:51:44] <soren>   They all "connect" (is that even the correct term for multicast) to some multicast IP and port.
| [Tuesday 22 June 2010] [15:51:59] <soren>   The publishers have no idea how many subscribers there are, right?
| [Tuesday 22 June 2010] [15:52:16] <soren>   The distribution is handled by... what? The networking infrastructure?
| [Tuesday 22 June 2010] [15:52:31] <soren>   Like routers/switches or whatnot, I mean?
| [Tuesday 22 June 2010] [15:54:24] <soren>   Furthermore, if the subscribers only set a message filter using ZMQ_SUBSRIBE, they still receive all the messages, they're just filtered by zmq and never reach my application, correct?
| [Tuesday 22 June 2010] [15:57:06] <soren>   sustrik: Can I pick your brain on this ^^ for a few minutes? :)
| [Tuesday 22 June 2010] [15:58:35] <sustrik> the right term is "to join a multicast group"
| [Tuesday 22 June 2010] [15:58:56] <sustrik> publishers have no idea of subscribers and vice versa
| [Tuesday 22 June 2010] [15:59:13] <sustrik> data are distributed by your network switch
| [Tuesday 22 June 2010] [15:59:40] <sustrik> in theory multicast traffic can pass via router to another subnet but don't try that at home
| [Tuesday 22 June 2010] [15:59:47] <soren>   Right.
| [Tuesday 22 June 2010] [15:59:55] <soren>   Ok, so it requires a reasonably capable switch.
| [Tuesday 22 June 2010] [16:00:10] <sustrik> look for switches with "IGMP snooping"
| [Tuesday 22 June 2010] [16:00:11] <soren>   I mean... a $20 gigabit switch probably won't give me much multicast love.
| [Tuesday 22 June 2010] [16:00:29] <sustrik> have a look at the specs
| [Tuesday 22 June 2010] [16:00:50] <soren>   Sure. Ok.
| [Tuesday 22 June 2010] [16:01:12] <sustrik> for high-perf scenarios you should always keep in mind that the actual throughput is limited by switches backplane throughput
| [Tuesday 22 June 2010] [16:01:22] <soren>   Sure.
| [Tuesday 22 June 2010] [16:01:33] <sustrik> ~100Gb/sec for real switches
| [Tuesday 22 June 2010] [16:01:43] <sustrik> (not toy switches)
| [Tuesday 22 June 2010] [16:01:53] <soren>   :)
| [Tuesday 22 June 2010] [16:02:41] <soren>   I assume a multicast group is defined by the IP alone?
| [Tuesday 22 June 2010] [16:03:03] <sustrik> yes
| [Tuesday 22 June 2010] [16:03:09] <soren>   Ok.
| [Tuesday 22 June 2010] [16:03:15] <sustrik> it's a range of IP addresses you can choose from
| [Tuesday 22 June 2010] [16:03:45] <soren>   Sure, sure, I'm just thinkgin..
| [Tuesday 22 June 2010] [16:04:43] <soren>   my connection string also includes a port number, but if the multicast group is defined by IP (and not the port), I want to make sure not to just use one IP with multiple ports.
| [Tuesday 22 June 2010] [16:05:10] <soren>   ...Since I might as well let the switch help me filter messages.
| [Tuesday 22 June 2010] [16:06:29] <soren>   Am I making sense? :)
| [Tuesday 22 June 2010] [16:09:49] <soren>   brb
| 
| *** Logfile started
| *** on Tue Jun 22 17:14:55 2010
| 
| [Tuesday 22 June 2010] [17:14:55] Topic The channel topic is "Welcome!".
| [Tuesday 22 June 2010] [17:14:55] Topic The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Tuesday 22 June 2010] [17:15:01] Mode  Channel modes: no messages from outside, topic protection
| [Tuesday 22 June 2010] [17:15:01] Created   This channel was created on 2010-02-05 10:44.
| [Tuesday 22 June 2010] [18:50:51] <jldupont>    is there more information on how to configure the "zmq_forwarder" application?
| [Tuesday 22 June 2010] [18:58:27] <jldupont>    or there isn't much to configure else than what's up on http://www.zeromq.org/docs:cookbook#toc8 ?  I.e. can the forwarder discriminate against the "message type" and forward only to subscribers interested by a given "message type"?
| 
| *** Logfile started
| *** on Wed Jun 23 01:57:00 2010
| 
| [Wednesday 23 June 2010] [01:57:00] Topic   The channel topic is "Welcome!".
| [Wednesday 23 June 2010] [01:57:00] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 23 June 2010] [01:57:06] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 23 June 2010] [01:57:06] Created This channel was created on 2010-02-05 10:44.
| [Wednesday 23 June 2010] [05:17:09] Part    tmp123456 has left this channel.
| [Wednesday 23 June 2010] [08:27:29] <Umesh> is the man page of zmq_outdated ...
| [Wednesday 23 June 2010] [08:27:50] <Umesh> is the man page of zmq_tcp (7) outdated 
| [Wednesday 23 June 2010] [08:28:28] <Umesh> because on tcp socket i am not geeting the messages compatible with the messages mentioned on this page ...
| [Wednesday 23 June 2010] [08:31:32] <sustrik>   Umesh: what are you getting exactly?
| [Wednesday 23 June 2010] [08:32:34] <Umesh> i first get 2 bytes 1 1 
| [Wednesday 23 June 2010] [08:32:55] <Umesh> sorry ... forget first part now typed ...
| [Wednesday 23 June 2010] [08:33:10] <sustrik>   that's an empty message
| [Wednesday 23 June 2010] [08:33:24] <sustrik>   you are right, it's not documented
| [Wednesday 23 June 2010] [08:33:29] <Umesh> i get 2 reads ...
| [Wednesday 23 June 2010] [08:33:46] <sustrik>   but peers use it to identify themselves when a connection is established
| [Wednesday 23 June 2010] [08:33:47] <Umesh> 1st read 1 0 ... means empty message ...
| [Wednesday 23 June 2010] [08:34:16] <sustrik>   so when connection is established
| [Wednesday 23 June 2010] [08:34:24] <sustrik>   peer A says "i'm A"
| [Wednesday 23 June 2010] [08:34:30] <sustrik>   and peer B says "i'm B"
| [Wednesday 23 June 2010] [08:34:31] <Umesh> and then 2nd read 1 1  + frame described in man zmq_tcp(7)
| [Wednesday 23 June 2010] [08:35:02] <sustrik>   what's your topology?
| [Wednesday 23 June 2010] [08:35:12] <sustrik>   req/rep with queue in the middle?
| [Wednesday 23 June 2010] [08:35:14] <Umesh> req/res socket ...
| [Wednesday 23 June 2010] [08:35:23] <Umesh> nope ... no que in the middle
| [Wednesday 23 June 2010] [08:35:24] <sustrik>   ah, right
| [Wednesday 23 June 2010] [08:35:45] <sustrik>   so the first (empty) message is an identification
| [Wednesday 23 June 2010] [08:35:51] <sustrik>   that's say for all socket types
| [Wednesday 23 June 2010] [08:36:09] <sustrik>   now, req/rep has more complex protocol
| [Wednesday 23 June 2010] [08:36:33] <Umesh> actually i wanted to use the sync client with zmq server ...
| [Wednesday 23 June 2010] [08:36:48] <sustrik>   what it has to do is to attach a way back to the requester to each request
| [Wednesday 23 June 2010] [08:36:49] <Umesh> therefore i am trying to send /recv message mentioned in the format ...
| [Wednesday 23 June 2010] [08:36:56] <Umesh> of man 7 zmq_tcp
| [Wednesday 23 June 2010] [08:37:27] <sustrik>   so that reply can be sent back to the right requester
| [Wednesday 23 June 2010] [08:37:30] <Umesh> using the normal tcp/ip socket apis
| [Wednesday 23 June 2010] [08:37:36] <sustrik>   Umesh: yes
| [Wednesday 23 June 2010] [08:37:42] <sustrik>   the format described is OK
| [Wednesday 23 June 2010] [08:37:53] <sustrik>   however, sockets add one layer on top of it
| [Wednesday 23 June 2010] [08:38:11] <Umesh> ok
| [Wednesday 23 June 2010] [08:38:16] <sustrik>   so some of the messages (message parts) are used by 0MQ infrastrucuture
| [Wednesday 23 June 2010] [08:38:29] <sustrik>   namely: first message on TCP connection is peer's identity
| [Wednesday 23 June 2010] [08:38:39] <sustrik>   then
| [Wednesday 23 June 2010] [08:39:13] <sustrik>   each REQ/REP message carries a stack of identities that identify the way back to the requester
| [Wednesday 23 June 2010] [08:39:28] <sustrik>   so for example
| [Wednesday 23 June 2010] [08:39:37] <sustrik>   requester A says "ABC"
| [Wednesday 23 June 2010] [08:40:05] <sustrik>   what you see on the wire is that message part ABC is preceded by an empty message part ||ABC|
| [Wednesday 23 June 2010] [08:40:29] <sustrik>   the empty message part serves to delimit the actual message from the routing info
| [Wednesday 23 June 2010] [08:41:04] <Umesh> ok
| [Wednesday 23 June 2010] [08:41:07] <sustrik>   when the message is received the identity of the sending peer is attached to it
| [Wednesday 23 June 2010] [08:41:11] <sustrik>   |A||ABC|
| [Wednesday 23 June 2010] [08:41:51] <sustrik>   if it's sent further (as when there's a zmq_queue in the middle)
| [Wednesday 23 June 2010] [08:42:01] <sustrik>   there's another identity added to the request
| [Wednesday 23 June 2010] [08:42:08] <sustrik>   |my_queue|A||ABC|
| [Wednesday 23 June 2010] [08:42:19] <sustrik>   there can be multiple hops
| [Wednesday 23 June 2010] [08:42:28] <Umesh> ok
| [Wednesday 23 June 2010] [08:42:36] <sustrik>   and thus multiple identities in the traceroute stack
| [Wednesday 23 June 2010] [08:42:43] <sustrik>   what REP socket does
| [Wednesday 23 June 2010] [08:42:46] <Umesh> is there not any way to not to have these identities ?
| [Wednesday 23 June 2010] [08:43:00] <Umesh> for normal working with bsd tcp/ip sockets 
| [Wednesday 23 June 2010] [08:43:25] <sustrik>   you would need 0MQ equivalent of DNS then
| [Wednesday 23 June 2010] [08:43:40] <sustrik>   still you would need a single identity in the request
| [Wednesday 23 June 2010] [08:43:51] <sustrik>   so that REP would know where to send the reply
| [Wednesday 23 June 2010] [08:44:09] <Umesh> one identity is fine ... that i can decode easily ...
| [Wednesday 23 June 2010] [08:44:24] <sustrik>   you can easily decode mulitple identities as well
| [Wednesday 23 June 2010] [08:44:33] <Umesh> one way can be never use hops/queue in between 
| [Wednesday 23 June 2010] [08:44:38] <sustrik>   the point is that the stack is terminated by empty message part
| [Wednesday 23 June 2010] [08:45:03] <sustrik>   no need for such drastic measures
| [Wednesday 23 June 2010] [08:45:08] <sustrik>   what you need to do  is:
| [Wednesday 23 June 2010] [08:45:13] <sustrik>   on the REQ side
| [Wednesday 23 June 2010] [08:45:32] <sustrik>   1. when sending message prepend it by empty message part (1 1)
| [Wednesday 23 June 2010] [08:45:48] <sustrik>   2. when receiving the message chop off the empty message part (1 1)
| [Wednesday 23 June 2010] [08:45:53] <sustrik>   on the REP side
| [Wednesday 23 June 2010] [08:46:27] <sustrik>   1. when receiving a message store all the identities in the stack until you encounter empty message part (stack delimiter)
| [Wednesday 23 June 2010] [08:46:45] <sustrik>   2. when sending a reply prepend all the stored identities to the reply
| [Wednesday 23 June 2010] [08:46:48] <sustrik>   that's it
| [Wednesday 23 June 2010] [08:46:55] <Umesh> ok
| [Wednesday 23 June 2010] [08:47:23] <Umesh> does i nned to send 1 0 first message always ?
| [Wednesday 23 June 2010] [08:47:28] <Umesh> need*
| [Wednesday 23 June 2010] [08:48:17] <sustrik>   that's only when you open the connection
| [Wednesday 23 June 2010] [08:48:27] <sustrik>   1. create TCP connection
| [Wednesday 23 June 2010] [08:48:30] <sustrik>   2. send 1 0
| [Wednesday 23 June 2010] [08:48:39] <sustrik>   3. receive one message (peer's identity)
| [Wednesday 23 June 2010] [08:50:02] <Umesh> ok ...
| [Wednesday 23 June 2010] [09:37:15] <Umesh> sustrik: one more doubt ... this multihop support is added in the release 2.0.7 ... right ?
| [Wednesday 23 June 2010] [09:37:27] <sustrik>   yes
| [Wednesday 23 June 2010] [10:01:06] <Umesh> ok
| [Wednesday 23 June 2010] [10:46:03] Part    sadfasdf has left this channel.
| [Wednesday 23 June 2010] [11:34:49] <jldupont>  FYI: http://nichol.as/zeromq-an-introduction
| [Wednesday 23 June 2010] [11:35:35] <sustrik>   jldupont: yes, it's already linked from zeromq.org (see blogs section)
| [Wednesday 23 June 2010] [11:35:48] <jldupont>  ok
| [Wednesday 23 June 2010] [11:36:26] <jldupont>  so, if I got this right, the first string sent on a pub/sub constitutes the "message type", right?
| [Wednesday 23 June 2010] [11:37:17] <sustrik>   it's a bit different
| [Wednesday 23 June 2010] [11:37:34] <jldupont>  i.e. ?
| [Wednesday 23 June 2010] [11:37:39] <sustrik>   any message beginning with particular sequence of bytes matches the subscription
| [Wednesday 23 June 2010] [11:37:45] <jldupont>  ok
| [Wednesday 23 June 2010] [11:38:31] <jldupont>  btw, I never was able to build the Python documentation on my system... 
| [Wednesday 23 June 2010] [11:38:47] <jldupont>  problem with matplotlib-sphinx-ext
| [Wednesday 23 June 2010] [11:38:55] <jldupont>  linux karmic
| [Wednesday 23 June 2010] [11:39:15] <sustrik>   dunno, i have nothing to do with python binding... try complaining on the mailing list
| [Wednesday 23 June 2010] [11:39:21] <jldupont>  ;-)
| [Wednesday 23 June 2010] [11:40:03] <sustrik>   or there's an issue tracker on pyzmq github project
| [Wednesday 23 June 2010] [11:41:00] <jldupont>  from what I can tell, the "wire" format might be brittle to "out-of-sync" cases... the delineation mechanisms appears weak... but of course, I might not have seen all documentation ;-)
| [Wednesday 23 June 2010] [11:43:25] <jldupont>  anyhow, 0mq is definitely more friendly to work with than rabbitmq.
| [Wednesday 23 June 2010] [11:44:40] <sustrik>   jldupont: can you elaborate on the delineation?
| [Wednesday 23 June 2010] [11:50:16] <jldupont>  I mean there must be "symbols" reserved for the framing and "symbols" valid for the data.
| [Wednesday 23 June 2010] [11:50:46] <jldupont>  I only see "payload length" which can cause problems when it comes to "out-of-sync" conditions i.e. where is the next boundary?
| [Wednesday 23 June 2010] [11:51:12] <sustrik>   it can't go out-of-sync as it's layered on top of TCP
| [Wednesday 23 June 2010] [11:51:47] <sustrik>   i would like to have first two bytes in each TCP packet reserved fro "offset of the first 0mq message in the packet"
| [Wednesday 23 June 2010] [11:51:50] <sustrik>   but
| [Wednesday 23 June 2010] [11:52:30] <sustrik>   1. BSD sockets have no API for sending data delineated with TCP packets
| [Wednesday 23 June 2010] [11:52:59] <sustrik>   2. networking hardware does all kind of black magic with TCP packets (packet coallescing etc.)
| [Wednesday 23 June 2010] [11:53:55] <jldupont>  I just mean that if something goes wrong on the software stack side, recovering the connection might not be possible... only tear-down, bring up will do.
| [Wednesday 23 June 2010] [11:54:06] <jldupont>  but that might be a good compromise.
| [Wednesday 23 June 2010] [11:54:13] <jldupont>  I mean, it's good enough.
| [Wednesday 23 June 2010] [11:54:24] <jldupont>  since that sort of condition is rare-ish.
| [Wednesday 23 June 2010] [11:56:14] <jldupont>  the trouble is detecting this situation....
| [Wednesday 23 June 2010] [11:56:55] <jldupont>  interesting failure mode... can be mitigated with appropriate timeouts, drop/bring up
| [Wednesday 23 June 2010] [12:02:01] <sustrik>   jldupont: reusing the failed connection?
| [Wednesday 23 June 2010] [12:02:11] <sustrik>   that would be pretty dangerous imo
| [Wednesday 23 June 2010] [12:02:27] <jldupont>  no. drop & reconnect
| [Wednesday 23 June 2010] [12:02:34] <sustrik>   ah
| [Wednesday 23 June 2010] [12:02:52] <jldupont>  ( aka tear-down/bring-up )
| [Wednesday 23 June 2010] [12:02:59] <sustrik>   that has no implication on wire protocol imo
| [Wednesday 23 June 2010] [12:03:05] <sustrik>   as you start anew each time
| [Wednesday 23 June 2010] [12:03:17] <sztanpet>  doesnt 0mq automatically reconnect you btw?
| [Wednesday 23 June 2010] [12:03:21] <sustrik>   yes
| [Wednesday 23 June 2010] [12:03:24] <jldupont>  ... but the trouble is mid-flight
| [Wednesday 23 June 2010] [12:03:41] <sztanpet>  what of it
| [Wednesday 23 June 2010] [12:03:53] <sztanpet>  its the same with tcp, i cant quite see your problem
| [Wednesday 23 June 2010] [12:05:11] <jldupont>  like I said, if a problem occurs mid-flight, then the connection can be detected faulty and tear/down/bring-up would occur.
| [Wednesday 23 June 2010] [12:05:35] <jldupont>  if that failure mode is taken care of in 0mq, then let's finish this discussion.
| [Wednesday 23 June 2010] [12:12:46] <sustrik>   yes, it is
| [Wednesday 23 June 2010] [12:12:56] <jldupont>  ok
| [Wednesday 23 June 2010] [14:41:56] <chris2>    hi. i'm trying to use the zmq2 gem for pub/sub
| [Wednesday 23 June 2010] [14:42:10] <chris2>    and i can pub, but nothing appears at sub
| [Wednesday 23 June 2010] [14:43:23] <cremes>    chris2: when you say "gem" i assume you are using ruby; is that correct?
| [Wednesday 23 June 2010] [14:43:30] <chris2>    erm, yes
| [Wednesday 23 June 2010] [14:43:32] <chris2>    right
| [Wednesday 23 June 2010] [14:43:37] <chris2>    i can paste my code too
| [Wednesday 23 June 2010] [14:43:47] <cremes>    please do (use pastie or a gist)
| [Wednesday 23 June 2010] [14:44:40] <chris2>    http://pastie.org/1016242
| [Wednesday 23 June 2010] [14:45:16] <chris2>    i ported that from the py at http://nichol.as/zeromq-an-introduction
| [Wednesday 23 June 2010] [14:45:50] <cremes>    ok; is the pub loop printing out each message that it sends?
| [Wednesday 23 June 2010] [14:45:58] <chris2>    the pub sends nicely
| [Wednesday 23 June 2010] [14:46:06] <chris2>    the sub doesnt show anything
| [Wednesday 23 June 2010] [14:46:20] <cremes>    let me try and run it myself... give me a couple...
| [Wednesday 23 June 2010] [14:46:58] <chris2>    i ran strace on the sub, and it shows
| [Wednesday 23 June 2010] [14:46:59] <chris2>    recvfrom(8, 0x7fff8c0810f0, 48, 64, 0, 0) = -1 EAGAIN (Resource temporarily unavailable)
| [Wednesday 23 June 2010] [14:47:08] <chris2>    roughly pulsed like the pub
| [Wednesday 23 June 2010] [14:47:16] <chris2>    so i guess there is some kind of transmission
| [Wednesday 23 June 2010] [14:51:28] <chris2>    hah, fixed it
| [Wednesday 23 June 2010] [14:51:31] <cremes>    chris2: i'm having some trouble installing the zmq2 gem; it installed fine but now complains about a missing file (zmq_native)
| [Wednesday 23 June 2010] [14:51:34] <cremes>    what was it?
| [Wednesday 23 June 2010] [14:51:39] <chris2>    s.setsockopt(ZMQ::SUBSCRIBE, "")
| [Wednesday 23 June 2010] [14:51:44] <chris2>    i need to subscribe to everything
| [Wednesday 23 June 2010] [14:51:45] <cremes>    ah!
| [Wednesday 23 June 2010] [14:51:53] <chris2>    the py api seems to do that by default
| [Wednesday 23 June 2010] [14:52:00] <cremes>    good catch
| [Wednesday 23 June 2010] [14:52:10] <chris2>    py api seems a bit nicer in general
| [Wednesday 23 June 2010] [14:52:17] <chris2>    but im not sure if zmq2 is even official
| [Wednesday 23 June 2010] [14:52:31] <cremes>    what does official mean anyway? use what works best.
| [Wednesday 23 June 2010] [14:53:01] <chris2>    sure
| [Wednesday 23 June 2010] [14:53:10] <chris2>    but then the api should be similar i think
| [Wednesday 23 June 2010] [14:53:25] <chris2>    ok, multiple sub works too
| [Wednesday 23 June 2010] [14:53:29] <cremes>    the zeromq guys don't anything about ruby (or python or php or lua) so they are hoping community folks take over the bindings
| [Wednesday 23 June 2010] [14:54:10] <chris2>    http://www.zeromq.org/bindings:ruby ?
| [Wednesday 23 June 2010] [14:54:42] <cremes>    yes; also http://www.zeromq.org/bindings:ruby-ffi for jruby, rubinius and others
| [Wednesday 23 June 2010] [14:54:48] <cremes>    (i wrote those)
| [Wednesday 23 June 2010] [14:55:00] <cremes>    er, i wrote the ffi bindings for ruby
| [Wednesday 23 June 2010] [14:55:19] <chris2>    ok
| [Wednesday 23 June 2010] [14:58:19] <chris2>    also, is there a thing i can place inbetween to add persistence of the messages?
| [Wednesday 23 June 2010] [15:00:01] <cremes>    chris2: there isn't anything in the 0mq library that provides persistence; you would need to create that yourself
| [Wednesday 23 June 2010] [15:00:19] <chris2>    just figured someone already wrote a daemon or something to do that in general
| [Wednesday 23 June 2010] [15:00:34] <cremes>    not yet; you could be the first
| [Wednesday 23 June 2010] [15:00:51] <chris2>    its probably not entirely trivial then :)
| [Wednesday 23 June 2010] [15:01:31] <cremes>    nope, not trivial; messages can be in the 0mq queue, a system buffer, a driver buffer, on the wire, or in those same buffers on the receiving end
| [Wednesday 23 June 2010] [15:01:42] <chris2>    yeah
| [Wednesday 23 June 2010] [15:01:57] <cremes>    you would need an explicit ack that a message was persisted
| [Wednesday 23 June 2010] [15:02:08] <cremes>    it's a thorny issue
| [Wednesday 23 June 2010] [15:02:15] <chris2>    true that
| [Wednesday 23 June 2010] [15:26:10] <CIA-17>    rbzmq: 03Brian Buchanan 07master * r5be8033 10/ rbzmq.c : Make the flags argument to ZMQ::Socket.send() and ZMQ::Socket.recv() optional. Resolves issue #1. - http://bit.ly/aeY6wZ
| [Wednesday 23 June 2010] [15:26:21] <chris2>    awesome quick :D
| [Wednesday 23 June 2010] [15:28:09] <chris2>    is pub/sub filtering really implemented on the pub side?
| [Wednesday 23 June 2010] [15:28:16] <chris2>    or does sub get everything and then filters
| [Wednesday 23 June 2010] [15:29:04] <CIA-17>    rbzmq: 03Brian Buchanan 07master * r7043d45 10/ rbzmq.c : Update method signatures for socket.send and socket.recv in the documentation. - http://bit.ly/aG9JWs
| [Wednesday 23 June 2010] [15:33:07] <sustrik>   chris2: unfortunately, yes
| [Wednesday 23 June 2010] [15:33:16] <chris2>    kinda lame?
| [Wednesday 23 June 2010] [15:33:25] <sustrik>   passing the subscriptions upstream is on the roadmap for a long time
| [Wednesday 23 June 2010] [15:33:50] <sustrik>   but it's not trivial and so far there was noone to sponsor the development
| [Wednesday 23 June 2010] [15:34:07] <chris2>    okay
| [Wednesday 23 June 2010] [15:34:13] <chris2>    zmq is still cool
| [Wednesday 23 June 2010] [15:34:24] <sustrik>   :)
| [Wednesday 23 June 2010] [15:34:24] <chris2>    i guess i have some use for it
| [Wednesday 23 June 2010] [16:12:29] <mml>   is there a way to buffer unconsumed messages in a pub/sub config?
| [Wednesday 23 June 2010] [16:12:41] <mml>   i.e. all consumers are down, but i'm using a forwarder process..
| [Wednesday 23 June 2010] [16:12:56] <mml>   i want the forwarder to que msgs until the consumers return
| [Wednesday 23 June 2010] [16:13:07] <mml>   like ::SWAP et. al.
| [Wednesday 23 June 2010] [16:13:29] <mml>   or is that to 'brokery'
| [Wednesday 23 June 2010] [16:13:32] <mml>   s/to/too
| [Wednesday 23 June 2010] [16:17:41] <mml>   and, is the zmq forwarder config syntax documented somewhere?
| [Wednesday 23 June 2010] [16:20:07] <cremes>    mml: the forwarder "device" included with 0mq doesn't do any buffering
| [Wednesday 23 June 2010] [16:20:30] <cremes>    the forwarder also has no idea if anyone is connected to it; it would need to "heartbeat" or otherwise communicate with downstream clients
| [Wednesday 23 June 2010] [16:20:40] <cremes>    all of this is possible, but you would need to write the logic yourself
| [Wednesday 23 June 2010] [16:21:05] <cremes>    an no, the configuration for forwarder isn't documented anywhere; the code is short enough to figure it out though
| [Wednesday 23 June 2010] [16:21:57] <mml>   cremes: tx
| [Wednesday 23 June 2010] [16:22:09] <cremes>    you're welcome
| [Wednesday 23 June 2010] [16:31:37]      * mml is sad that zmq is inappropriate for what he needs
| [Wednesday 23 June 2010] [16:31:51] <mml>   the ruby bindings worked great fwiw
| [Wednesday 23 June 2010] [16:32:28] <bj_990>    are you guys as slick as ice http://www.zeroc.com/ ? 
| [Wednesday 23 June 2010] [16:53:23] <mivert>    bj_990: yes? pretty different though.  Ice does RPC and serialization, MQ does messaging.
| [Wednesday 23 June 2010] [16:54:18] <bj_990>    i just saw that
| [Wednesday 23 June 2010] [16:54:18] <bj_990>    :D
| [Wednesday 23 June 2010] [16:54:37] <bj_990>    thanks mivert 
| [Wednesday 23 June 2010] [16:54:44] <mivert>    np
| [Wednesday 23 June 2010] [17:22:33] <bj_990>    this looks great
| [Wednesday 23 June 2010] [17:30:39] <bj_990>    be back in the near future... 
| [Wednesday 23 June 2010] [23:37:03] <alisdair>  is zeromq a protocol at all, or is it mostly an alternate interface to sockets?
| [Thursday 24 June 2010] [01:46:43] Part __20h__ has left this channel.
| [Thursday 24 June 2010] [02:07:42] <travlr> alisdair: zmq transports a "blob" of data so the descriptor of the blob is provided by the app programmer. 
| [Thursday 24 June 2010] [02:08:33] <alisdair>   travlr: i get that, but does it wrap that at all? can i use zeromq at only one end of a connection, or does it need to be used at both?
| [Thursday 24 June 2010] [02:09:28] <travlr> alisdair: "only one end" ... do you mean using standard-sockets in the system... if so see zmq_poll() doc
| [Thursday 24 June 2010] [02:09:37] <alisdair>   well
| [Thursday 24 June 2010] [02:09:42] <alisdair>   if i write a client using zeromq
| [Thursday 24 June 2010] [02:09:48] <alisdair>   does the server need to be aware of that?
| [Thursday 24 June 2010] [02:10:21] <travlr> is the server using a standard-socket?
| [Thursday 24 June 2010] [02:10:36] <travlr> bsd socket?
| [Thursday 24 June 2010] [02:11:32] <travlr> look at the zmq_poll() doc I think that will help answer your question.
| [Thursday 24 June 2010] [02:13:08] <alisdair>   standard sockets
| [Thursday 24 June 2010] [02:13:49] <travlr> also, see the mato's zmq-camera example of integrating other system aspects: http://github.com/mato/zeromq-examples
| [Thursday 24 June 2010] [02:14:21] <alisdair>   i just want to know, does zeromq add any wrapping to a packet? if i send a packet from a client written using zeromq, does the receiving system need to know anything about it to process it? is it just a regular udp/tcp packet?
| [Thursday 24 June 2010] [02:16:26] <travlr> zmq_recv() just recieves the "blob". no un-wrapping is necessary. it does wrap the blob with possible addressing and delineation protocol aspects. 
| [Thursday 24 June 2010] [02:17:06] <travlr> see: zmq_tcp(7), zmq_pgm(7), zmq_ipc(7), and zmq_inproc(7) for details.
| [Thursday 24 June 2010] [02:17:48] <travlr> http://api.zeromq.org/zmq.html
| [Thursday 24 June 2010] [02:33:13] <Umesh>  http://www.zeromq.org/whitepapers:design-v06#toc0
| [Thursday 24 June 2010] [02:33:21] <Umesh>  is this white paper outdated ?
| [Thursday 24 June 2010] [02:36:09] <travlr> Umesh: In a sense yes, but not totally. zmq2 is a departure from zmq1 in that is entirely brokerless and there is no message protocol. I don't know yet myself where all the similarities and differences lie.
| [Thursday 24 June 2010] [02:39:16] <sustrik>    Umesh: in general, yes. what exactly are you interested in?
| [Thursday 24 June 2010] [02:41:12] <Umesh>  I am intrested in load balancing for client server 
| [Thursday 24 June 2010] [02:41:56] <Umesh>  there it was how we can do load balancing in the zmq is described in that white paper 
| [Thursday 24 June 2010] [02:42:13] <Umesh>  while reading that paper i felt it is outdated ...
| [Thursday 24 June 2010] [02:42:38] <Umesh>  so we can't do load balancing inbuilt in the zmq ... right ?
| [Thursday 24 June 2010] [02:42:50] <Umesh>  for REQ/REP socket
| [Thursday 24 June 2010] [02:45:11] <sustrik>    yes, there's load balancing in-built
| [Thursday 24 June 2010] [02:45:22] <sustrik>    when there are several peers to REQ socket
| [Thursday 24 June 2010] [02:45:31] <sustrik>    the requests are load-balanced among them
| [Thursday 24 June 2010] [02:45:46] <Umesh>  ok
| [Thursday 24 June 2010] [02:46:03] <Umesh>  then how we can choose the endpoint for that peer ...
| [Thursday 24 June 2010] [02:46:13] <sustrik>    ?
| [Thursday 24 June 2010] [02:46:15] <Umesh>  I haven't seen any such apis 
| [Thursday 24 June 2010] [02:46:32] <sustrik>    there's no need for specific apis
| [Thursday 24 June 2010] [02:46:37] <Umesh>  means say i have a name server on m1, m2 and m3 ...
| [Thursday 24 June 2010] [02:47:07] <sustrik>    s =socket (REQ);
| [Thursday 24 June 2010] [02:47:13] <sustrik>    s.connect (m1);
| [Thursday 24 June 2010] [02:47:15] <sustrik>    s.connect (m2);
| [Thursday 24 June 2010] [02:47:17] <sustrik>    s.connect (m3);
| [Thursday 24 June 2010] [02:47:24] <sustrik>    that's what you meant?
| [Thursday 24 June 2010] [02:47:58] <Umesh>  then I create a REQ socket and then connect ...
| [Thursday 24 June 2010] [02:48:03] <Umesh>  then send data ...
| [Thursday 24 June 2010] [02:48:10] <sustrik>    yes
| [Thursday 24 June 2010] [02:48:16] <Umesh>  so data will go to machine where i connect ...
| [Thursday 24 June 2010] [02:48:18] <Umesh>  right ...
| [Thursday 24 June 2010] [02:48:30] <sustrik>    or you can bind and let name servers connect to your app
| [Thursday 24 June 2010] [02:48:38] <Umesh>  ok so you mean i should connect to all name server ... right ?
| [Thursday 24 June 2010] [02:48:39] <sustrik>    depends on what you are doing
| [Thursday 24 June 2010] [02:48:45] <sustrik>    right
| [Thursday 24 June 2010] [02:48:53] <Umesh>  to enable laod balancing ...
| [Thursday 24 June 2010] [02:49:36] <Umesh>  is there any way to know all machines on the port using the zmq ... something like getaddribfo
| [Thursday 24 June 2010] [02:50:27] <Umesh>  just a summary of our discussion : To enable load balansing in the zmq ... REQ socket should connect to all REP sockets it know ... right ?
| [Thursday 24 June 2010] [02:50:52] <sustrik>    REQ sockets should have multiple peers
| [Thursday 24 June 2010] [02:51:03] <Umesh>  yup ...
| [Thursday 24 June 2010] [02:51:05] <sustrik>    whether they are connected to are they connect themselves
| [Thursday 24 June 2010] [02:51:33] <sustrik>    as for locating the machines... it's pretty hard when you think of Intetnet
| [Thursday 24 June 2010] [02:51:50] <sustrik>    there may be a machine running somewhere in Ougadougou
| [Thursday 24 June 2010] [02:52:02] <sustrik>    no, no way to locate all the instances
| [Thursday 24 June 2010] [02:52:07] <Umesh>  ok
| [Thursday 24 June 2010] [02:52:14] <sustrik>    what you may want is a shared queue
| [Thursday 24 June 2010] [02:52:27] <sustrik>    i.e. all clients connect to the shared queue
| [Thursday 24 June 2010] [02:52:38] <Umesh>  but for lan ... I can still use the getaddrinfo call ... to find all the machines to connect to ...
| [Thursday 24 June 2010] [02:52:38] <sustrik>    all servers connect to the shared queue
| [Thursday 24 June 2010] [02:53:08] <sustrik>    the share queue load balances the requests among the servers
| [Thursday 24 June 2010] [02:53:11] <Umesh>  means use a queue device in between ... create one hop ..
| [Thursday 24 June 2010] [02:53:15] <sustrik>    yes
| [Thursday 24 June 2010] [02:53:40] <sustrik>    ad getaddrinfo: i am afraid it doesn't work that way
| [Thursday 24 June 2010] [02:53:50]   * sustrik is not a DNS expert though
| [Thursday 24 June 2010] [02:53:58] <Umesh>  but for lan ... I can still use the getaddrinfo call ... to find all the machines to connect to ...
| [Thursday 24 June 2010] [02:54:38] <sustrik>    how would you do that?
| [Thursday 24 June 2010] [02:54:42] <Umesh>  i will just not specify node in that call ... only specify port ... get all the machines listening on that port ...
| [Thursday 24 June 2010] [02:55:05] <sustrik>    i doubt getaddrinfo works that way
| [Thursday 24 June 2010] [02:55:37] <Umesh>  getaddrinfo(NULL, PORT, &hints, &servinfo))
| [Thursday 24 June 2010] [02:55:47] <sustrik>    does it work?
| [Thursday 24 June 2010] [02:55:55] <Umesh>  here PORT will be the port of the name server ...
| [Thursday 24 June 2010] [02:56:03] <Umesh>  it works for normal tcp ip ...
| [Thursday 24 June 2010] [02:56:09] <sustrik>    wow
| [Thursday 24 June 2010] [02:56:24] <Umesh>  so i think it will work for zmq ...
| [Thursday 24 June 2010] [02:56:33] <Umesh>  isn't it ...
| [Thursday 24 June 2010] [02:56:35] <Umesh>  ?
| [Thursday 24 June 2010] [02:56:52] <sustrik>    if it works then it would surely work
| [Thursday 24 June 2010] [02:56:56] <sustrik>    even for 0mq
| [Thursday 24 June 2010] [02:56:58]   * sustrik wonders how that works under the covers
| [Thursday 24 June 2010] [02:57:00] <Umesh>  ok
| [Thursday 24 June 2010] [02:57:19] <Umesh>  i will give the try ... 
| [Thursday 24 June 2010] [02:58:43] <Umesh>  one more doubt ... which load balancing we does ?
| [Thursday 24 June 2010] [02:58:54] <Umesh>  means round robin ... etc ?
| [Thursday 24 June 2010] [03:15:05] <sustrik>    round robin
| [Thursday 24 June 2010] [03:16:39] <Umesh>  ok
| [Thursday 24 June 2010] [03:27:17] <Umesh>  hi sustrik ... 
| [Thursday 24 June 2010] [03:27:29] <Umesh>  i think i was wrong for getaddrinfo ...
| [Thursday 24 June 2010] [03:27:55] <Umesh>  it will not work for normal tcp/ip as well
| [Thursday 24 June 2010] [03:39:35] <sustrik>    :)
| [Thursday 24 June 2010] [03:55:27] <Efhache>    Hi everybody
| [Thursday 24 June 2010] [03:56:15] <Efhache>    I come back to you because I need some help...  I'm learning how to use zmq... In this goal I test some example application.
| [Thursday 24 June 2010] [03:56:35] <Efhache>    Right now I test the tcp client/server application example
| [Thursday 24 June 2010] [03:57:50] <Efhache>    but I've a little problem... when I try to send my message I've an "unknown error" (returned by strerror) and the client of course segfault when I try to receive
| [Thursday 24 June 2010] [03:58:20] <Efhache>    The error is "ERREUR -1 send: Unknown error 156384763 "  
| [Thursday 24 June 2010] [03:58:27] <Efhache>    Could you help me ???
| [Thursday 24 June 2010] [03:58:58] <Efhache>    here is the line code used to send my message : rc = zmq_send (s, &query, 0);
| [Thursday 24 June 2010] [04:03:00] <travlr> If you post the code piece somewhere, I'll try to help.
| [Thursday 24 June 2010] [04:08:26] <Efhache>    Can I post it here?
| [Thursday 24 June 2010] [04:08:32] <Efhache>    (piece by piece) ?
| [Thursday 24 June 2010] [04:09:47] <travlr> use dpaste or gist or some similar web service so I may be able to see what might be incorrect
| [Thursday 24 June 2010] [04:12:23] <travlr> http://dpaste.com/ or http://gist.github.com/ or some other
| [Thursday 24 June 2010] [04:12:47] <Efhache>    http://dpaste.com/hold/210910/
| [Thursday 24 June 2010] [04:14:20] <sustrik>    Efhache: 0mq defines few additional errors
| [Thursday 24 June 2010] [04:14:31] <sustrik>    use zmq_strerror instead of strerror to decode them
| [Thursday 24 June 2010] [04:14:38] <Efhache>    ok
| [Thursday 24 June 2010] [04:17:39] <Efhache>    ERREUR -1 send: Operation cannot be accomplished in current state
| [Thursday 24 June 2010] [04:17:47] <Efhache>    no more information for me...
| [Thursday 24 June 2010] [04:17:49] <Efhache>    :-/
| [Thursday 24 June 2010] [04:21:06] <travlr> has the server been executed before the client?
| [Thursday 24 June 2010] [04:22:20] <Efhache>    yes of course
| [Thursday 24 June 2010] [04:22:35] <Efhache>    and the server is running 
| [Thursday 24 June 2010] [04:22:43] <sustrik>    REQ/REP sockets reuquire alternate sequence of sends & recvs
| [Thursday 24 June 2010] [04:22:58] <sustrik>    so with REQ send a request, the receveive a reply
| [Thursday 24 June 2010] [04:23:10] <sustrik>    with REP receiver a request, then send the reply
| [Thursday 24 June 2010] [04:23:23] <sustrik>    if you fail to do so you'll get the above error
| [Thursday 24 June 2010] [04:24:26] <travlr> yeah i see it now too. you need to use ZMQ_REQ in your client.
| [Thursday 24 June 2010] [04:24:36] <Efhache>    ok
| [Thursday 24 June 2010] [04:26:16] <Efhache>    I replace REP by REQ... now I've not error on the send() function. But a segfault on the recv.  I must rechange the context before received???
| [Thursday 24 June 2010] [04:26:40] <travlr> no but did you use ZMQ_REP in the server?
| [Thursday 24 June 2010] [04:27:53] <Efhache>    Yes
| [Thursday 24 June 2010] [04:28:15] <Efhache>    This code comes from the cookbook examples
| [Thursday 24 June 2010] [04:28:54] <travlr> yeah, it should work out of the box. do you want to post the server code to dpaste
| [Thursday 24 June 2010] [04:29:04] <Efhache>    ok
| [Thursday 24 June 2010] [04:29:38] <Efhache>    http://dpaste.com/hold/210915/
| [Thursday 24 June 2010] [04:30:40] <Efhache>    May be I'll study the code from the latency example
| [Thursday 24 June 2010] [04:32:15] <travlr> i don't know because it looks ok, but i may be over looking something
| [Thursday 24 June 2010] [04:33:19] <Efhache>    It's ok now
| [Thursday 24 June 2010] [04:33:27] <travlr> what was it?
| [Thursday 24 June 2010] [04:33:38] <Efhache>    I've foget the zmq_msg_init of my resultset variable
| [Thursday 24 June 2010] [04:34:13] <travlr> yes i see.. ok cool
| [Thursday 24 June 2010] [04:34:56] <Efhache>    thank's a lot for your help ;-)
| [Thursday 24 June 2010] [04:35:07] <travlr> sure
| [Thursday 24 June 2010] [04:35:26] <Efhache>    Just to be sure... with this example, I've just a P2P  connection between processes ?
| [Thursday 24 June 2010] [04:35:56] <Efhache>    If I'd like to make a communication between a process and two (or more) others
| [Thursday 24 June 2010] [04:36:07] <Efhache>    I need to create each time a endpoint ?
| [Thursday 24 June 2010] [04:36:15] <travlr> REQ/REP you can use multiple peers.
| [Thursday 24 June 2010] [04:37:08] <Efhache>    ok
| [Thursday 24 June 2010] [04:37:09] <travlr> just use connect to the socket multiple times for each client.. etc.
| [Thursday 24 June 2010] [04:37:45] <travlr> then it will load-balance in a round robin fashion.. i don't know if that's what you want
| [Thursday 24 June 2010] [04:38:10] <travlr> you may want PUB/SUB maybe..
| [Thursday 24 June 2010] [04:38:31] <travlr> or other
| [Thursday 24 June 2010] [04:43:17] <Efhache>    I've make a rapid test with two client and it seems that it works... but I'd be sure... how can I make in the server to have a specific message for each client
| [Thursday 24 June 2010] [04:43:49] <Efhache>    I can find in the server an id of the sender ?
| [Thursday 24 June 2010] [04:44:35] <travlr> i don't think so. try returning a specific message for each client.
| [Thursday 24 June 2010] [04:44:50] <travlr> for testing
| [Thursday 24 June 2010] [04:45:09] <Efhache>    ok
| [Thursday 24 June 2010] [04:48:23] <Efhache>    thank you  for your help
| [Thursday 24 June 2010] [04:48:29] <travlr> k
| [Thursday 24 June 2010] [04:53:33] <Efhache>    no chance... the server do not make automatically a difference between the senders... clients received all replies...
| [Thursday 24 June 2010] [05:00:28] <travlr> Efhache: From the zmq_socket doc: "Each request sent is load-balanced among all services, and each reply received is matched with the last issued request."
| [Thursday 24 June 2010] [05:52:16] <sustrik>    Efhache: what do you want to do?
| [Thursday 24 June 2010] [05:52:37] <sustrik>    if you want to reply to the requester use REQ/REP
| [Thursday 24 June 2010] [05:52:45] <sustrik>    if you want to send to all client use PUB/SUB
| [Thursday 24 June 2010] [07:00:38] <bavluo> While compiling/install the PyZMQ extension I am getting "zmq/_zmq.c: In function init_zmq: EMTHREAD undeclared (first use in this function)". I have cloned the latest ZMQ and PyZMQ for github
| [Thursday 24 June 2010] [08:02:37] <Umesh>  Is there a way to write distributed REP server in zeromq ...
| [Thursday 24 June 2010] [08:12:16] <sustrik>    yes, place a queue device in the middle
| [Thursday 24 June 2010] [08:26:48] <Umesh>  ok
| [Thursday 24 June 2010] [08:27:20] <Umesh>  but it will send a request to all the servers ... write ?
| [Thursday 24 June 2010] [08:27:35] <Umesh>  right ?
| [Thursday 24 June 2010] [08:28:17] <Umesh>  or it will load balance the traffic ?
| [Thursday 24 June 2010] [08:29:33] <sustrik>    load balance
| [Thursday 24 June 2010] [08:29:52] <sustrik>    REQ/REP always load balances
| [Thursday 24 June 2010] [08:30:03] <sustrik>    PUB/SUB always distributes the messages to everyone
| [Thursday 24 June 2010] [08:31:04] <Umesh>  just one question : I don't see any lb object in req.hpp 
| [Thursday 24 June 2010] [08:31:20] <Umesh>  its there in xreq.hpp
| [Thursday 24 June 2010] [08:31:57] <Umesh>  so it is like xreq only have laod balancing ...
| [Thursday 24 June 2010] [08:34:37] <Efhache>    travlr : I see only now your response... sorry... what happens if multi client send request, each of the clients received all the replies? right?
| [Thursday 24 June 2010] [08:35:38] <Efhache>    sustrik :  I'just want to make a lighted broker : when it received a message from one process it re-sent this message to all connected processes.
| [Thursday 24 June 2010] [08:36:16] <sustrik>    Umesh: it's there but it's written by hand
| [Thursday 24 June 2010] [08:36:35] <sustrik>    the code should be polished a bit so that REQ uses lb_t as well...
| [Thursday 24 June 2010] [08:37:23] <sustrik>    Efhache: such a thing already exists
| [Thursday 24 June 2010] [08:37:30] <sustrik>    use zmq_forwarder to do this
| [Thursday 24 June 2010] [08:38:07] <sustrik>    have a look at an example here: http://github.com/zeromq/zeromq-chat/blob/master/README
| [Thursday 24 June 2010] [08:38:08] <Efhache>    but the example code that I've used  seems to do it...
| [Thursday 24 June 2010] [08:38:47] <sustrik>    sure, if you want to implement it yourself, why not
| [Thursday 24 June 2010] [08:40:02] <Efhache>    witouht implemented it myself... the code from 2 hours ago seems do it... I've tested the "server" with two clients and the both have received the reply from servers
| [Thursday 24 June 2010] [08:40:19] <Efhache>    may be a "bug" of my code   or is it normal?
| [Thursday 24 June 2010] [08:40:45] <sustrik>    what code? sorry, i missed it
| [Thursday 24 June 2010] [08:41:06] <Umesh>  sustrik : code present in the devices/zmq_queue/zmq_queue.cpp ... can be straight away used as a queue in the middle right ?
| [Thursday 24 June 2010] [08:41:19] <sustrik>    Umesh: yes
| [Thursday 24 June 2010] [08:41:23] <Umesh>  ok
| [Thursday 24 June 2010] [08:41:39] <sustrik>    there's an executable generated for convenience sake: devices/zmq_queue
| [Thursday 24 June 2010] [08:42:13] <Umesh>  but it uses XREQ/XREP sockets  .... and my client server uses REQ/REP ...
| [Thursday 24 June 2010] [08:42:23] <Umesh>  then will it work with them ?
| [Thursday 24 June 2010] [08:42:27] <sustrik>    yes
| [Thursday 24 June 2010] [08:42:31] <Umesh>  ok
| [Thursday 24 June 2010] [08:54:18] <Efhache>    sustrik : it was a problem in my code... with a remanence in a string used for reply...
| [Thursday 24 June 2010] [08:54:43] <Efhache>    sustrik : have you an exemple of "broadcasting" ?
| [Thursday 24 June 2010] [08:56:12] <sustrik>    what about this one: http://github.com/zeromq/zeromq-chat
| [Thursday 24 June 2010] [08:56:56] <sustrik>    or this one: http://lwn.net/Articles/370307/ (Java vs. Python)
| [Thursday 24 June 2010] [08:57:37] <sustrik>    or this one: http://nichol.as/zeromq-an-introduction (Python)
| [Thursday 24 June 2010] [09:11:38] <Efhache>    sustrik : thank you... if I goof understand to make a sort of lighted broker. I will must creating two context. One for receiving and one tu publish (server part)   and for the clients one for sending and one for subscribing
| [Thursday 24 June 2010] [09:11:42] <Efhache>    is it right?
| [Thursday 24 June 2010] [09:12:33] <sustrik>    what are you trying to do, i still don't get it
| [Thursday 24 June 2010] [09:12:43] <sustrik>    can you describe the scenario?
| [Thursday 24 June 2010] [09:14:18] <Efhache>    OK...  one process who received messagre from two (or more) other process   and re-sent the receive message to all connected processes
| [Thursday 24 June 2010] [09:36:49] <Efhache>    in C language
| [Thursday 24 June 2010] [09:54:46] <sustrik>    what you need is a single context
| [Thursday 24 June 2010] [09:54:51] <sustrik>    one sub socket
| [Thursday 24 June 2010] [09:54:56] <sustrik>    and one pub
| [Thursday 24 June 2010] [09:54:58] <sustrik>    socket
| [Thursday 24 June 2010] [09:55:08] <sustrik>    get messages from sub socket
| [Thursday 24 June 2010] [09:55:16] <sustrik>    and send them to the pub socket
| [Thursday 24 June 2010] [09:55:26] <sustrik>    that's exactly what zmq_forwarder does
| [Thursday 24 June 2010] [10:01:20] <Efhache>    ok
| [Thursday 24 June 2010] [10:02:50] <Efhache>    sorry but it's a new concept for me...
| [Thursday 24 June 2010] [10:03:43] <Efhache>    have you an example in C ?
| [Thursday 24 June 2010] [10:05:23] <Efhache>    I can not find information about zmq_forwarder in the doc (man page)   just "comming soon"
| [Thursday 24 June 2010] [10:10:39] <Efhache>    But if I read the chat example (http://github.com/zeromq/zeromq-chat/blob/master/prompt.cpp) message do not come from the client... is it true? And the client can only receive from prompt...
| [Thursday 24 June 2010] [10:10:39] <sustrik>    http://github.com/zeromq/zeromq-chat
| [Thursday 24 June 2010] [10:11:30] <Efhache>    so I need to context no? one for sending message (from a client to prompt)  and an other for SUB
| [Thursday 24 June 2010] [10:11:31] <sustrik>    you can merge display and prompt into a single application if you want
| [Thursday 24 June 2010] [10:11:34] <Efhache>    no ?
| [Thursday 24 June 2010] [10:11:53] <sustrik>    nope you can open both sockets from the same context
| [Thursday 24 June 2010] [10:12:07] <sustrik>    forget about multiple context, you're never going to need it
| [Thursday 24 June 2010] [10:12:17] <sustrik>    unless you are doing very advanced stuff
| [Thursday 24 June 2010] [10:13:31] <Efhache>    I think so I do not understand the concept of "context"...  I'll read more documentation... sorry
| [Thursday 24 June 2010] [10:14:20] <sustrik>    context is a global state of the library
| [Thursday 24 June 2010] [10:14:27] <sustrik>    you need only one context
| [Thursday 24 June 2010] [10:15:30] <Efhache>    ok
| [Thursday 24 June 2010] [10:16:07] <Efhache>    absolute not link with a protocol or a specific socket
| [Thursday 24 June 2010] [12:50:16] Nick sztanphet is now known as sztanpet.
| [Thursday 24 June 2010] [13:54:07] Part kleppari has left this channel.
| [Thursday 24 June 2010] [20:32:58] Part jldupont has left this channel.
| [Thursday 24 June 2010] [20:52:03] Mode gibson.freenode.net gives CIA-17 permission to talk.
| 
| *** Logfile started
| *** on Fri Jun 25 00:49:18 2010
| 
| [Friday 25 June 2010] [00:49:18] Topic  The channel topic is "Welcome!".
| [Friday 25 June 2010] [00:49:18] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Friday 25 June 2010] [00:49:24] Mode   Channel modes: no messages from outside, topic protection
| [Friday 25 June 2010] [00:49:24] Created    This channel was created on 2010-02-05 10:44.
| [Friday 25 June 2010] [04:01:14] Nick   sztanphet is now known as sztanpet.
| [Friday 25 June 2010] [06:38:24] <vtl>  sustrik: hi!
| [Friday 25 June 2010] [06:38:54] <sustrik>  hi
| [Friday 25 June 2010] [06:39:24] <vtl>  sustrik: question: http://paste.lisp.org/display/111844
| [Friday 25 June 2010] [06:40:00] <sustrik>  errno is thread-local
| [Friday 25 June 2010] [06:40:18] <sustrik>  so you get err1
| [Friday 25 June 2010] [06:41:10] <vtl>  sustrik: cool, 10x! as i thought... we have different opinion with a guy who forked cl-zmq :)
| [Friday 25 June 2010] [06:41:37] <sustrik>  :)
| [Friday 25 June 2010] [06:41:43] <sustrik>  it's POSIX behaviour
| [Friday 25 June 2010] [06:41:46] <vtl>  yes
| [Friday 25 June 2010] [06:41:47] <sustrik>  let me find the doc
| [Friday 25 June 2010] [06:42:08] <vtl>  man errno, i think
| [Friday 25 June 2010] [06:43:11] <sustrik>  right
| [Friday 25 June 2010] [06:43:39] <sustrik>  it's ISO C
| [Friday 25 June 2010] [06:59:41] <vtl>  I think I understood... In managed environments (like lisp, python, java, .net) thread may be interrupted by runtime for garbage collecting. if GC calls libraries functions or syscalls, it may clobber this thread's errno. When such event happens in between zmq_foo() and zmq_errno(), then zmq_errno() will return wrong errno.
| [Friday 25 June 2010] [07:04:39] <sustrik>  right, that may happen
| [Friday 25 June 2010] [07:19:51] <sustrik>  vtl: thinking about it
| [Friday 25 June 2010] [07:20:13] <sustrik>  in theory, it would be possible to solve the problem in 0mq itself
| [Friday 25 June 2010] [07:20:25] <sustrik>  solve the errno into 0mq-own thread-local variable
| [Friday 25 June 2010] [07:20:33] <sustrik>  and return that one from zmq_errno
| [Friday 25 June 2010] [07:20:49] <vtl>  I think this in not worth trying
| [Friday 25 June 2010] [07:21:00] <vtl>  because other foreign libraries will fail in the same way :)
| [Friday 25 June 2010] [07:21:01] <sustrik>  do you have a better solution?
| [Friday 25 June 2010] [07:21:15] <sustrik>  yes, definitely
| [Friday 25 June 2010] [07:21:24] <sustrik>  how is this solved in cl?
| [Friday 25 June 2010] [07:21:58] <vtl>  this is generally not solved in cl. but one paricular commercial version of CL (this is Allegro) has workaround for it
| [Friday 25 June 2010] [07:22:18] <sustrik>  ok, isee
| [Friday 25 June 2010] [07:22:31] <vtl>  I think, it is possible to hack CFFI library to solve such kind of problems
| [Friday 25 June 2010] [07:22:48] <vtl>  of course, other languages still problematic in this place
| [Friday 25 June 2010] [07:34:10] <cremes>   sustrik: why not make errno a member/property of the context class?
| [Friday 25 June 2010] [07:34:29] <cremes>   the system errno could be copied into that member after each 0mq call
| [Friday 25 June 2010] [07:43:52] <sustrik>  cremes: a socket option
| [Friday 25 June 2010] [07:44:03] <sustrik>  same as with Berkeley sockets (SO_ERROR)
| [Friday 25 June 2010] [07:44:34] <sustrik>  yes, this sounds more sane than zmq_errno
| [Friday 25 June 2010] [07:44:40] <CIA-17>   zeromq2: 03Martin Hurton 07master * rfca2e8e 10/ (7 files): Add SWAP support - http://bit.ly/bRzKds
| [Friday 25 June 2010] [07:47:01] <cremes>   right, move it to the socket class (why would i suggest context? d'oh!)
| [Friday 25 June 2010] [07:50:54] <cremes>   though that's another api change/break
| [Friday 25 June 2010] [07:56:40] <sustrik>  cremes: right
| [Friday 25 June 2010] [07:56:54] <sustrik>  in theory it may be done in 2 steps
| [Friday 25 June 2010] [07:57:03] <sustrik>  1. add the error socket option
| [Friday 25 June 2010] [07:57:07] <sustrik>  2. remove zmq_errno
| [Friday 25 June 2010] [07:57:25] <sustrik>  the latter can be done when major version number is bumped
| [Friday 25 June 2010] [08:30:27] <jugg> sustrik: recent commit "devices exit in case of context termination" 11891d : src/forwarder.cpp lines 33 and 40, I believe are missing the necessary "rc = " assignment?
| [Friday 25 June 2010] [08:31:32] <jugg> hmm, same thing in src/streamer.cpp
| [Friday 25 June 2010] [08:32:07] <sustrik>  let me see
| [Friday 25 June 2010] [08:34:44] <sustrik>  oops
| [Friday 25 June 2010] [08:34:50] <sustrik>  let me correct it!
| [Friday 25 June 2010] [08:41:33] <jugg> Using C++ bindings, it seems that the only time one needs to do a msg.rebuild is before a send.   But between a send and a recv or between a recv and another recv this is not necessary, as it would appear the zmq_recv internals close a message then re-initializes it as needed.  Is this correct?
| [Friday 25 June 2010] [08:43:52] <jugg> (the same could be stated/asked for the C api, restating with message close/init pairing instead of the C++ message rebuild)
| [Friday 25 June 2010] [08:44:00] <sustrik>  ok, fixed
| [Friday 25 June 2010] [08:44:32] <sustrik>  jugg: yes
| [Friday 25 June 2010] [08:44:52] <sustrik>  the only use for rebuild is when you have a message as a member variable of a class
| [Friday 25 June 2010] [08:45:03] <sustrik>  then you want to say resize it
| [Friday 25 June 2010] [08:45:15] <sustrik>  you would have to destroy it and reinistantiate it
| [Friday 25 June 2010] [08:45:32] <sustrik>  but that's not possible becasue it's a member variable!
| [Friday 25 June 2010] [08:45:49] <sustrik>  so you would have to allocate it dynamically or something...
| [Friday 25 June 2010] [08:45:57] <sustrik>  instead, you can simply call rebuild
| [Friday 25 June 2010] [08:48:42] <jugg> ok, but whether you destroy or rebuild, this is only necessary if you want to send a message of a different size.  Anytime you want to recv a message, there is no reason to free the associated memory from previous use of the message... eg, the zmq internals aren't going to leak memory previously allocated for a message.
| [Friday 25 June 2010] [08:50:08] <jugg> I'm talking about the zmq_msg_t memory not an instantiated C++ message class.
| [Friday 25 June 2010] [08:55:26] <sustrik>  jugg: yes
| [Friday 25 June 2010] [08:55:31] <sustrik>  i think it's mentioned in the docs
| [Friday 25 June 2010] [08:55:34] <sustrik>  let me see...
| [Friday 25 June 2010] [08:55:54] <sustrik>  zmq_recv(3):
| [Friday 25 June 2010] [08:55:55] <sustrik>  Any content previously stored in msg
| [Friday 25 June 2010] [08:55:55] <sustrik>         shall be properly deallocated.
| [Friday 25 June 2010] [09:03:24] <jugg> *sigh* I get caught up reading/ walking through the code and forget about the documentation.  appologies.
| [Friday 25 June 2010] [09:04:29] <sustrik>  :)
| [Friday 25 June 2010] [09:28:45] <jugg> I have a setup where a SUB socket binds a TCP port on two different interfaces.  There are two PUB sockets that connect, one to each interface of the SUB socket.  I experienced an instance with this setup that messages quit flowing from one of the publishers to the subscriber while messages continued to flow from the other publisher.
| [Friday 25 June 2010] [09:28:48] <jugg> However there were no errors, or anything to indicate anything was wrong besides the fact the messages weren't flowing.  At the OS level, the TCP port for the "dead" connection was still active, with one in LISTEN state, and the other in ESTABLISHED for the SUB and PUB socket respectively.
| [Friday 25 June 2010] [09:29:04] <jugg> Restarting the publisher application restored communications.
| [Friday 25 June 2010] [09:30:37] <jugg> If this happens in the future, any suggestions on how to inspect what is going on?
| [Friday 25 June 2010] [09:33:18] <sustrik>  jugg: my guess would be that there's a loophole in fair queueing algorithm somewhere
| [Friday 25 June 2010] [09:33:55] <sustrik>  if there are messages available from both publshers SUB socket round robins between them
| [Friday 25 June 2010] [09:34:43] <sustrik>  what you describe looks like SUB erroneously believes one of the pipes has no messages
| [Friday 25 June 2010] [09:34:52] <sustrik>  (although it does)
| [Friday 25 June 2010] [09:35:03] <sustrik>  and doesn't include it into the round robit
| [Friday 25 June 2010] [09:35:06] <sustrik>  robin
| [Friday 25 June 2010] [09:35:35] <jugg> where should I be looking in the zmq code?
| [Friday 25 June 2010] [09:36:18] <sustrik>  ljugg: are use using zmq_poll or just zmq_recv?
| [Friday 25 June 2010] [09:37:17] <jugg> just zmq_recv
| [Friday 25 June 2010] [09:37:38] <sustrik>  then it's fq_t::recv
| [Friday 25 June 2010] [09:38:00] <sustrik>  fq.cpp:81
| [Friday 25 June 2010] [09:54:25] <jugg> change to topic for a moment, working through that code is going to take a bit...  on multi-part messages, are the parts stacked up on the sending side or the receiving side?
| [Friday 25 June 2010] [10:00:43] <sustrik>  jugg: both sides
| [Friday 25 June 2010] [10:00:58] <sustrik>  the rule is that they are stacked on the write side of the pipe
| [Friday 25 June 2010] [10:01:14] <sustrik>  one pipe being between sender thread and sender's I/O thread
| [Friday 25 June 2010] [10:01:32] <sustrik>  other one being between receiver's I/O thread and receiver thread itself
| [Friday 25 June 2010] [10:27:35] <jugg> ok, so before they reach the receivers I/O thread, they've been stacked up in the sender's I/O thread.  Then they are all sent to the receiver, and the receiver I/O thread stacks them up until they are all received before passing them off to the receiver thread, yes?
| [Friday 25 June 2010] [10:30:22] <sustrik>  yes
| [Friday 25 June 2010] [10:38:49] <jugg> ok, so why expose the multipart concept to the receiving side at all then?  Why not assemble it all into a single message for final delivery?  The above structure provides no benefit for reducing total transfer time, nor allowing the receiving end to work on parts of the messages as they come in, thus reducing total processing time.
| [Friday 25 June 2010] [10:39:06] <jugg> It seems to me that either the receiving side should just get a single message delivered to the receiver thread, or that it shouldn't be atomic.
| [Friday 25 June 2010] [10:41:42] <sustrik>  jugg: the goal here is to allow for some basic structure in the message content
| [Friday 25 June 2010] [10:42:11] <sustrik>  so if sender has say 3 big matrices in different places in memory
| [Friday 25 June 2010] [10:42:41] <sustrik>  he'll use multi-part message as a means to achieve zero-copy
| [Friday 25 June 2010] [10:43:07] <sustrik>  however, he still wants to tell the boundaries between matrices on the receiving side
| [Friday 25 June 2010] [10:43:40] <sustrik>  that's why boundaries between message parts are honoured
| [Friday 25 June 2010] [10:44:20] <sustrik>  0mq uses this mechanism under the cover btw to distinguish 0mq-specific data on the wire from the user data
| [Friday 25 June 2010] [10:48:34] <jugg> ok, that makes sense.  So, perhaps two alternate multi-part implementations feature requests then:  1. allow the sending side to send each part immediately, and only stack them on the receiving side I/O thread.  2. allow non atomic multi-part messaging.
| [Friday 25 June 2010] [10:49:59] <sustrik>  1. makes sense
| [Friday 25 June 2010] [10:50:12] <sustrik>  2. what would that be good for?
| [Friday 25 June 2010] [10:51:44] <jugg> 2. A REQ is made (ie SQL query) and the REP has multiple rows, if it was non atomic, then each row could be sent back and be operated on without waiting for the entire set to arrive.
| [Friday 25 June 2010] [10:52:02] <travlr>   my guess might be in a stream processing sense of individual message parts.
| [Friday 25 June 2010] [10:52:19] <travlr>   yeah, what he said :)
| [Friday 25 June 2010] [10:53:02] <jugg> Another use is a REQ is made, and something more intensive like, a file set - a bunch of images - is returned.  These images need to be resized.  There is no reason to wait for the entire set to arrive.
| [Friday 25 June 2010] [10:58:08] <sustrik>  jugg: i would say each image (or row) is a separate message in these scenarios
| [Friday 25 June 2010] [10:58:29] <sustrik>  the rationale is that all the elements in the set are of the same type
| [Friday 25 June 2010] [10:58:46] <sustrik>  and thus eligible for parallelised processing or similar
| [Friday 25 June 2010] [10:59:10] <sustrik>  message parts make sense where there are different elements concatenated into a single message
| [Friday 25 June 2010] [10:59:20] <sustrik>  for example 0mq-routing-data + user-data
| [Friday 25 June 2010] [10:59:43] <travlr>   or a topic + user-data
| [Friday 25 June 2010] [10:59:46] <sustrik>  yes
| [Friday 25 June 2010] [11:00:01] <sustrik>  different semantics is the key here
| [Friday 25 June 2010] [11:00:26] <sustrik>  from this point of view atomicity makes perfect sense
| [Friday 25 June 2010] [11:00:42] <sustrik>  it doesn't make sense to deliver just the routing data
| [Friday 25 June 2010] [11:00:48] <sustrik>  or a topic
| [Friday 25 June 2010] [11:01:04] <sustrik>  and say load-balance the user-content somewhere else
| [Friday 25 June 2010] [11:02:17] <travlr>   seeing the big picture along with the  nuances is important for the various concepts in 0mq, huh.
| [Friday 25 June 2010] [11:02:43] <sustrik>  yes, this kind of thing is missing from docs :(
| [Friday 25 June 2010] [11:02:53] <sustrik>  but anyway, i have no idea where it shouldb e put
| [Friday 25 June 2010] [11:03:10] <travlr>   i want to help with docs in the near future
| [Friday 25 June 2010] [11:03:30] <travlr>   i'm still studying it all though for now
| [Friday 25 June 2010] [11:03:30] <sustrik>  do you have idea what exactly would you like to do?
| [Friday 25 June 2010] [11:03:51] <travlr>   docs?
| [Friday 25 June 2010] [11:04:00] <sustrik>  yes
| [Friday 25 June 2010] [11:04:07] <sustrik>  I liked Nicholas' blog yesterday
| [Friday 25 June 2010] [11:04:12] <travlr>   yes
| [Friday 25 June 2010] [11:04:15] <sustrik>  it seems this kind of stuff is highly needed
| [Friday 25 June 2010] [11:04:17] <travlr>   very much
| [Friday 25 June 2010] [11:04:35] <travlr>   along the same vain martin
| [Friday 25 June 2010] [11:04:42] <travlr>   s/vain/vane
| [Friday 25 June 2010] [11:05:42] <travlr>   first i want to understand 0mq inside out, which is what i'm working on atm
| [Friday 25 June 2010] [11:05:50] <jugg> sustrik: I understand that, however, I think the SQL example (whether the results are images or something else) has its use case as well.  The client knows that it wants an entire set of data, it doesn't know what comprises that set of data, and so it can't ask for each part individually.
| [Friday 25 June 2010] [11:06:00] <jugg> But it makes sense from an efficiency stand point to break the set of data into individual parts for transmission and processing.  Certainly the smarts could be layered ontop of 0MQ for getting each part individually, but greatly simplifies things by having 0MQ support this natively.
| [Friday 25 June 2010] [11:06:53] <sustrik>  jugg: understood
| [Friday 25 June 2010] [11:07:03] <sustrik>  what you have in mind is some kind of "terminator" message
| [Friday 25 June 2010] [11:07:20] <sustrik>  a message that says "this is the end of a message group"
| [Friday 25 June 2010] [11:08:10] <sustrik>  however, my feeling is that this kind of feature should be layered on top of 0MQ
| [Friday 25 June 2010] [11:08:14] <jugg> Well, what I want is a single REQ message to be able to receive multiple REP messages - whatever that looks like.
| [Friday 25 June 2010] [11:08:54] <jugg> the way multipart messaging works at the API level works for this very well.  It is just the implementation that does not.
| [Friday 25 June 2010] [11:09:29] <sustrik>  ok, i see
| [Friday 25 June 2010] [11:10:07] <sustrik>  the scenario makes sense
| [Friday 25 June 2010] [11:10:17] <sustrik>  the implications are non trivial
| [Friday 25 June 2010] [11:10:41] <sustrik>  if server X1 sends a first row, then halts for an hour
| [Friday 25 June 2010] [11:10:48] <sustrik>  the client would read the first low
| [Friday 25 June 2010] [11:10:56] <sustrik>  then halt waiting for and hour
| [Friday 25 June 2010] [11:11:12] <sustrik>  although there may be other resultssets available from server X2
| [Friday 25 June 2010] [11:11:26] <sustrik>  this cannot happen with simple REQ socket
| [Friday 25 June 2010] [11:11:32] <sustrik>  but it can happen with XREQ
| [Friday 25 June 2010] [11:11:43] <sustrik>  it's complex stuff, lot of space to experiment
| [Friday 25 June 2010] [11:12:36] <jugg> I'm not sure what you meant be other result sets...  subsequent REQ can't be made until the REP is satisfied... this is no different than the current REQ/REP behavior... if I send a REQ, it waits an indefinite time for a REP.
| [Friday 25 June 2010] [11:12:56] <sustrik>  the problem is that there may be a queue in the middle
| [Friday 25 June 2010] [11:13:12] <sustrik>  the queue has to be able to process multiple requsts at the same time
| [Friday 25 June 2010] [11:13:22] <sustrik>  otherwise it would work in lock-step fashion
| [Friday 25 June 2010] [11:13:28] <sustrik>  and the scalability would go soutg
| [Friday 25 June 2010] [11:13:31] <sustrik>  south
| [Friday 25 June 2010] [11:14:13] <sustrik>  so the queue (composed on XREQ and XREP socket) would have to work on message-part-scale
| [Friday 25 June 2010] [11:14:28] <sustrik>  which is doable, but not the state of affairs right now
| [Friday 25 June 2010] [11:14:41] <sustrik>  if you are interested in the topic feel free to propose a solution
| [Friday 25 June 2010] [11:15:51] <jugg> I guess from my no-understanding of the internals, looking at it from the point of view that multi-part messaging exists and works, then only (and maybe this is the sticking point) is to make the multi-parts non stacking on either end.
| [Friday 25 June 2010] [11:16:19] <jugg> "then only" => "the only change"
| [Friday 25 June 2010] [11:17:10] <sustrik>  the main problem is in the middle
| [Friday 25 June 2010] [11:17:49] <sustrik>  how would you achieve that queue isn't stuck when there's a half-sent mutli-part message being processed
| [Friday 25 June 2010] [11:17:57] <sustrik>  and the sender dies without terminating it?
| [Friday 25 June 2010] [11:18:31] <sustrik>  also, you need fairness guarantees, so the queue cannot process very long recordset in a single go
| [Friday 25 June 2010] [11:18:42] <jugg> You've mentioned this "middle queues" before, I'm still at a loss on them and what they are... :/
| [Friday 25 June 2010] [11:18:58] <sustrik>  instead it has to assign it a timeslice, process part of it, then move to another clients etc.
| [Friday 25 June 2010] [11:19:11] <sustrik>  "queue device"
| [Friday 25 June 2010] [11:19:41] <sustrik>  it's a component both requesters and repliers can connect to
| [Friday 25 June 2010] [11:19:54] <sustrik>  it then load balances the requests and routes the replies back
| [Friday 25 June 2010] [11:20:11] <sustrik>  see queue.cpp
| [Friday 25 June 2010] [11:36:21] <travlr>   sustrik: stuff like your previous conversation need to go in faq or clarified elsewhere etc. 
| [Friday 25 June 2010] [11:36:39] <travlr>   i'll be scrubbing the irc and mail list eventually
| [Friday 25 June 2010] [11:36:52] <sustrik>  you mean the message part stuff?
| [Friday 25 June 2010] [11:37:04] <travlr>   well anything with nuance
| [Friday 25 June 2010] [11:37:31] <sustrik>  the question is what should go to FAQ, what should go to docs and what should go elsewhere
| [Friday 25 June 2010] [11:38:03] <sustrik>  stacking the technical info into FAQ is probably not the best solution possible
| [Friday 25 June 2010] [11:38:26] <travlr>   i'm just saying that i'll keep in mind these issues as i go and will help any way i can with stuff like docs
| [Friday 25 June 2010] [11:38:52] <sustrik>  yes, i'm just thinking out aloud
| [Friday 25 June 2010] [11:39:43] <sustrik>  maybe there's some kind of "ideology" document missing
| [Friday 25 June 2010] [11:39:56] <travlr>   thats true for all of foss
| [Friday 25 June 2010] [11:40:01] <sustrik>  i.e. not the strict technical reference
| [Friday 25 June 2010] [11:40:19] <sustrik>  but some talk about what are individual features intended for
| [Friday 25 June 2010] [11:40:25] <jugg> sustrik: what happens with the current multipart if the sender dies while the I/O thread is sending out the messages?  Same problem, no?
| [Friday 25 June 2010] [11:40:29] <sustrik>  and why they are designed in the way they are etc.
| [Friday 25 June 2010] [11:40:38] <travlr>   sustrik: we'll have a conversation about this soon
| [Friday 25 June 2010] [11:40:49] <travlr>   and i'll go to town
| [Friday 25 June 2010] [11:41:18] <sustrik>  jugg: no, the incomplete messages are rolled back in that case
| [Friday 25 June 2010] [11:41:37] <sustrik>  trvlr: ok
| [Friday 25 June 2010] [11:48:10] <jugg> sustrik: Could the internals track whether the final message in a non atomic multipart message has been received, and if it has not, then the recv function return an error if the internals detect a disconnect of the sender?  Failing such a possibility, I'd say if the only thing hindering this capability are intermediate queues, then document the risk and recommend not using them for this particular usage.
| [Friday 25 June 2010] [11:50:11] <jugg> I haven't really understood why these "devices" are part of the core implementation anyway, they do not require access (afaict) to the internals of 0MQ, and could be implemented as stand alone applications/libraries, or even just example code.
| [Friday 25 June 2010] [11:53:41] <sustrik>  jugg: yes, right now the implementation of devices is pretty trivial
| [Friday 25 June 2010] [11:53:59] <sustrik>  in the future it's going to be more tightly integrated with the core
| [Friday 25 June 2010] [11:54:59] <sustrik>  as for the usage of deivces have a look here: http://www.zeromq.org/blog:multithreaded-server
| [Friday 25 June 2010] [11:55:19] <sustrik>  that's pretty straightforward usage of queue device
| [Friday 25 June 2010] [11:56:06] <sustrik>  with that in mind, try to put down your non-atomic multi-part messages idea into email and send it to the mailing list
| [Friday 25 June 2010] [11:56:31] <sustrik>  it would be good to see some discussion on the topic
| [Friday 25 June 2010] [11:59:05] <sustrik>  btw, i would suggest to name these "stream messages"; it's shorter that "non-atomic multi-part messages"
| [Friday 25 June 2010] [12:07:36] <jugg> sustrik: will do
| [Friday 25 June 2010] [12:08:58] <jugg> thanks for working through all of that.  I need to go back and dig into that possible fair queue issue now.
| [Friday 25 June 2010] [12:09:58] <sustrik>  you are welcome
| [Friday 25 June 2010] [12:35:50] <CIA-17>   zeromq2: 03Pieter Hintjens 07master * r1dda8a2 10/ src/msg_store.cpp : Used more expressive variable names - http://bit.ly/aynV9A
| [Friday 25 June 2010] [21:24:07] <zedas>    sustrik: question about zmq_poll:  it uses epoll if available right?  is there more you need to do?
| [Friday 25 June 2010] [21:29:45] <zedas>    sustrik: ahhh, zmq_poll system checks the rlimit and restricts available open fds to that.  i'll look at doing the same.
| [Saturday 26 June 2010] [02:23:32] <sustrik>    zedas: hi
| [Saturday 26 June 2010] [02:23:39] <sustrik>    what code are you looking at?
| [Saturday 26 June 2010] [02:23:50] <sustrik>    at the moment zmq_poll translates to standard poll
| [Saturday 26 June 2010] [02:24:20] <sustrik>    calling epoll makes not sense unless 0mq's zmq_poll API changes in the corresponding way
| [Saturday 26 June 2010] [02:25:05] <sustrik>    (registering fds separated from polling etc.)
| [Saturday 26 June 2010] [02:35:06] <zedas>  sustrik: i was looking at the poll.cpp and others.
| [Saturday 26 June 2010] [02:35:20] <zedas>  so i was under the impression that zmq_poll abstracts poll/epoll/kqueue.
| [Saturday 26 June 2010] [02:35:25] <zedas>  at least that's how the docs read.
| [Saturday 26 June 2010] [02:35:28] <zedas>  that not true?
| [Saturday 26 June 2010] [02:35:41] <sustrik>    the polling is done at 2 places
| [Saturday 26 June 2010] [02:35:56] <sustrik>    I/O threads from the thread pool are polling using epoll/whatever
| [Saturday 26 June 2010] [02:36:14] <sustrik>    meaning that if one 0MQ socket manages 100,000 TCP connections
| [Saturday 26 June 2010] [02:36:30] <sustrik>    these are looked for by epoll-based mechanism (on Linux at least)
| [Saturday 26 June 2010] [02:36:41] <sustrik>    then there's user polling (zmq_poll)
| [Saturday 26 June 2010] [02:36:56] <sustrik>    this at the moment translates to POSIX poll
| [Saturday 26 June 2010] [02:37:13] <sustrik>    however, i wouldn't expect anyone to use large amount of 0mq sockets
| [Saturday 26 June 2010] [02:37:46] <sustrik>    the only problem is if user wants to poll on couple of 0mq sockets + large amount of system sockets
| [Saturday 26 June 2010] [02:37:51] <sustrik>    is that your case?
| [Saturday 26 June 2010] [02:39:42] <zedas>  probably.  it's in mongrel2
| [Saturday 26 June 2010] [02:39:59] <zedas>  it craps out at 1024 sockets, which i haven't investigated yet, but even poll should handle that
| [Saturday 26 June 2010] [02:40:27] <zedas>  so, if you have these abstractions on epoll, kqueue, devpoll, and poll, why not have zmq_poll use them?
| [Saturday 26 June 2010] [02:40:46] <sustrik>    epoll reuires different API
| [Saturday 26 June 2010] [02:40:51] <sustrik>    otherwise it's of no use
| [Saturday 26 June 2010] [02:41:21] <sustrik>    the performance boost is related to registering the fds separately from polling as such
| [Saturday 26 June 2010] [02:42:15] <sustrik>    current zmq_poll is only a dumb copy of POSIX poll
| [Saturday 26 June 2010] [02:42:47] <sustrik>    there have been some discussion on alternate API but it never got into implementation phase
| [Saturday 26 June 2010] [02:43:52] <zedas>  well, plenty of libraries have given a consistent api to all the different event mechanisms
| [Saturday 26 June 2010] [02:44:03] <zedas>  it's not like this is anything new, even if they have different apis.
| [Saturday 26 June 2010] [02:44:27] <zedas>  looking at the code, it looks like you have the basis for the abstraction, probably just needs to be pulled into zmq_poll and used
| [Saturday 26 June 2010] [02:44:33] <zedas>  i may look at doing that in the near future.
| [Saturday 26 June 2010] [02:44:50] <sustrik>    that would be nice
| [Saturday 26 June 2010] [02:44:58] <zedas>  that and get rid of this #ifdef, the loop that seems to no be needed, etc.
| [Saturday 26 June 2010] [02:45:15] <sustrik>    what loop?
| [Saturday 26 June 2010] [02:46:11] <zedas>  the double nested while(true)
| [Saturday 26 June 2010] [02:46:26] <zedas>  haven't seen a poll loop implemented that way, so i'm assuming there's something odd there
| [Saturday 26 June 2010] [02:47:41] <zedas>  yeah i think i could clean this up and make it use the abstractions you've got
| [Saturday 26 June 2010] [02:47:57] <zedas>  or at least make it use epoll if that's available.
| [Saturday 26 June 2010] [02:48:25] <zedas>  hehe hell i could just write a zmq_epoll and zmq_kqueue and leave it to the developer :-)
| [Saturday 26 June 2010] [02:48:38] <zedas>  but that'd be me, so i want zmq_poll to do whatever works best
| [Saturday 26 June 2010] [02:48:40] <sustrik>    yes, that's the option
| [Saturday 26 June 2010] [02:48:59] <sustrik>    the obvious problem is that there's no POSIX standard fro epoll-style polling
| [Saturday 26 June 2010] [02:49:24] <sustrik>    kqueue seems to be most neat, but still it's hard to decide on actual API
| [Saturday 26 June 2010] [02:49:41] <sustrik>    try posting your new API to the mailing list first to see what others have to say about it
| [Saturday 26 June 2010] [02:51:48] <zedas>  i'll give it a shot when i get to that part.  right after i find out why it craps out at 1024 fds
| [Saturday 26 June 2010] [02:52:04] <sustrik>    ack
| [Saturday 26 June 2010] [02:52:11] <zedas>  with poll it shouldn't do that but it does.  which means people will perf test it and then bitch that i'm using select
| [Saturday 26 June 2010] [02:52:54] <zedas>  well not an issue now, just gonna drive me crazy later :-)
| [Saturday 26 June 2010] [02:53:10] <sustrik>    ok, good luck for now
| [Saturday 26 June 2010] [02:55:20] <zedas>  yeah so far it's working great.
| [Saturday 26 June 2010] [02:55:43] <zedas>  i've got the tasks working flawlessly with sockets or 0mq
| [Saturday 26 June 2010] [02:58:06] <sustrik>    glad to hear that!
| 
| *** Logfile started
| *** on Mon Jul 12 14:57:25 2010
| 
| [Tuesday 01 June 2010] [00:51:40] <jugg>    s.bind("tcp://localhost:15555"); fails with "no such device"  However, s.bind("tcp://127.0.0.1:15555"); works fine, as does s.bind("tcp://lo:15555");
| [Tuesday 01 June 2010] [00:51:40] <jugg>    whereas s.connect("tcp://localhost:15555"); and s.connect("tcp://127.0.0.1:15555"); both work fine, but s.connect("tcp://lo:15555"); fails with "Invalid argument".
| [Tuesday 01 June 2010] [00:53:34] <jugg>    any combination of the successful bind/connect allow messages to flow just fine. (eg. bind - lo, connect - localhost)
| [Tuesday 01 June 2010] [00:54:41] <jugg>    any idea why binding 'localhost' fails, and connecting 'lo' fails?
| [Tuesday 01 June 2010] [03:38:33] <sustrik> jugg: you can bind only to local NIC
| [Tuesday 01 June 2010] [03:38:47] <sustrik> "localhost" is a hostname not NIC name
| [Tuesday 01 June 2010] [03:38:50] <sustrik> use "lo"
| [Tuesday 01 June 2010] [03:38:56] <sustrik> "eth0" and alike
| [Tuesday 01 June 2010] [03:39:22] <sustrik> (on linux)
| [Tuesday 01 June 2010] [03:53:00] <jugg>    sustrik: it must also accept local ip addresses.  And since the zmq layer already can resolve hostnames, it would be a convience to have it do so here as well.
| [Tuesday 01 June 2010] [03:55:01] <sustrik> the problem is that there's no hint to distinguish between nic names and hostnames
| [Tuesday 01 June 2010] [03:57:19] <jugg>    a simple if fail then try scheme could be used
| [Tuesday 01 June 2010] [03:58:12] <sustrik> yup, we've thought of that
| [Tuesday 01 June 2010] [03:58:39] <sustrik> presumably, resolve nic name first, hostname if it fails
| [Tuesday 01 June 2010] [03:59:06] <sustrik> obviously, it would mean that nic name can then overshadow a remote host
| [Tuesday 01 June 2010] [03:59:26] <jugg>    yes, although I might think to have a hardcoded check for 'localhost' first.
| [Tuesday 01 June 2010] [04:00:10] <sustrik> it's up to OS to resolve names, 0mq should not mess with that imho
| [Tuesday 01 June 2010] [04:02:07] <jugg>    certainly.  I was saying that if the device is 'localhost' then just skip nic name lookup (being that localhost is quite the common case).
| [Tuesday 01 June 2010] [04:03:18] <sustrik> my point was that "localhost" is just a name a should thus be resolved by OS
| [Tuesday 01 June 2010] [04:08:26] <jugg>    anyway, I assume that trying to connect to a nic name is nonsensical, which is why s.connect("tcp://lo:15555") fails?  It certainly is an odd error message however "invalid arguement", now that I've played with it "invalid argument" is the error message for any bogus hostname.  Not very helpful.
| [Tuesday 01 June 2010] [04:18:52] <jugg>    all of this mucking around is because I got off track while trying to debug odd observed behavior with zmq resulting from the socket type and transport combination.  eg pub/sub works fine with tcp:, but often fails with ipc:
| [Tuesday 01 June 2010] [04:19:51] <jugg>    I haven't isolated it yet, so I can't give a useful bug report (if any).
| [Tuesday 01 June 2010] [04:27:15] <sustrik> interesting
| [Tuesday 01 June 2010] [04:27:26] <sustrik> the code is same for tcp and ipc
| [Tuesday 01 June 2010] [04:27:39] <sustrik> can you at least say what kind of error are you seeing?
| [Tuesday 01 June 2010] [04:38:40] <jugg>    well, it could still yet be very much user error, but it appeared that subscriptions were not taking affect, and in several instances, I would get an error about the ipc: address having some problem (the exact error messages are out of my scrollback).  Yet, those error message seemed to go away if I changed the socket type.  And when using tcp: I've never seen either of those issues.
| [Tuesday 01 June 2010] [04:49:00] <sustrik> ok, i see
| [Tuesday 01 June 2010] [04:49:10] <sustrik> if it ever happens again please do report the problem
| [Tuesday 01 June 2010] [05:39:19] <jugg>    hmm, I thought publications got into the bit bucket if the endpont doesn't exist.  This is the case if the publisher is the one that binds the socket, but if it is the subscriber that binds the socket, then the publisher queues up all of its messages.  Is this expected?  And if so, why the change in behavior depending on which socket type binds/connects?
| [Tuesday 01 June 2010] [05:53:32] <sustrik> PUB/SUB messaging pattern is like a radio tranmission; if you are not listining to the broadcast you won't be able to catch up later on
| [Tuesday 01 June 2010] [07:39:38] <jugg>    yes, so why is the publisher queuing up the messages?
| [Tuesday 01 June 2010] [07:46:04] <sustrik> jugg: the queueing is built in so that messages are not dropped all the time because of random traffic peaks
| [Tuesday 01 June 2010] [07:46:20] <sustrik> if you set HWM socket option on your publisher
| [Tuesday 01 June 2010] [07:46:26] <sustrik> you'll limit the size of the queue
| [Tuesday 01 June 2010] [07:46:50] <sustrik> once the max number of messages in the queue is reached, publisher will start dropping them
| [Tuesday 01 June 2010] [07:47:25] <jugg>    yes, so why does this queuing only occur if the publisher connects?  It doesn't occur if the publisher binds.
| [Tuesday 01 June 2010] [07:48:16] <sustrik> when you bind, there's no queue created at that moment
| [Tuesday 01 June 2010] [07:48:30] <sustrik> you don't know how many peers will connect in the future
| [Tuesday 01 June 2010] [07:48:44] <sustrik> and thus you cannot create appropriate number of queues
| [Tuesday 01 June 2010] [07:49:07] <sustrik> when you connect you need only one queue, so it's created immediately
| [Tuesday 01 June 2010] [07:49:44] <sustrik> the code can be changed so that 'connect' queue is created only when connecting to the peer succeeds
| [Tuesday 01 June 2010] [07:50:03] <sustrik> but i am not sure what advantage we would get from that
| [Tuesday 01 June 2010] [07:50:10] <jugg>    consistency?
| [Tuesday 01 June 2010] [07:50:18] <sustrik> sure
| [Tuesday 01 June 2010] [07:50:24] <jugg>    otherwise this needs documented.
| [Tuesday 01 June 2010] [07:50:42] <sustrik> well, the documentation is "messages can be dropped"
| [Tuesday 01 June 2010] [07:50:59] <sustrik> when exactly they are dropped is implemetation detail
| [Tuesday 01 June 2010] [07:51:09] <jugg>    eh
| [Tuesday 01 June 2010] [09:41:10] <jugg>    in a pub/sub configuration, it would appear that the only way to have multiple subscribers is if the pub socket is the one that binds the endpoint.  In the case where a subscriber binds the endpoint, and the publisher connects, then other subscribers that connect do not receive publications.  I'd expect that either all connecting subscribers receive the publications, or that it is not possible for other subscribers to successfully connect.
| [Tuesday 01 June 2010] [09:43:45] <sustrik> jugg: sorry, i've missed the point
| [Tuesday 01 June 2010] [09:43:55] <sustrik> can you say it in more simple way
| [Tuesday 01 June 2010] [09:43:57] <sustrik> ?
| [Tuesday 01 June 2010] [09:44:24] <jugg>    a subscriber binds an endpoint
| [Tuesday 01 June 2010] [09:44:29] <jugg>    a publisher connects to the endpoint
| [Tuesday 01 June 2010] [09:44:32] <jugg>    everything is happy
| [Tuesday 01 June 2010] [09:44:38] <jugg>    more subscribers connect to the endpoint
| [Tuesday 01 June 2010] [09:44:48] <jugg>    these subscribers do not receive publications
| [Tuesday 01 June 2010] [09:45:10] <sustrik> subscribers connect to the subscriber endpoint?
| [Tuesday 01 June 2010] [09:45:17] <jugg>    yes
| [Tuesday 01 June 2010] [09:45:34] <sustrik> SUB socket is not compatible with another SUB socket
| [Tuesday 01 June 2010] [09:45:41] <sustrik> see zmq_socket(3)
| [Tuesday 01 June 2010] [09:45:54] <sustrik> SUB must speak to PUB and vice versa
| [Tuesday 01 June 2010] [09:46:19] <sustrik> what are you trying to do?
| [Tuesday 01 June 2010] [09:46:57] <jugg>    which is why I'd expect the subsequent connects to fail.
| [Tuesday 01 June 2010] [09:47:12] <sustrik> yes, they should
| [Tuesday 01 June 2010] [09:47:19] <sustrik> but the connect is async
| [Tuesday 01 June 2010] [09:47:28] <sustrik> so the error should be delivered asynchronously
| [Tuesday 01 June 2010] [09:47:36] <sustrik> we need an error queue for that
| [Tuesday 01 June 2010] [09:47:44] <sustrik> TODO
| [Tuesday 01 June 2010] [09:47:54] <jugg>    I see
| [Tuesday 01 June 2010] [09:55:19] <jugg>    So if the subscriber binds the endpoint, it is essentially stating that this is a private subscription, multiple publishers can publish to this private subscription.  Multiple subscribe message filters may be used by the subscriber if desired.
| [Tuesday 01 June 2010] [09:56:03] <jugg>    If a publisher binds an endpoint, then many subscribers may connect to this endpoint.  But a subscriber can only receive messages from a single publisher in this case.
| [Tuesday 01 June 2010] [09:56:22] <sustrik> i would say it's symmetric
| [Tuesday 01 June 2010] [09:56:35] <sustrik> consider you can connect the same socket multiple times
| [Tuesday 01 June 2010] [09:56:43] <sustrik> so, for example:
| [Tuesday 01 June 2010] [09:56:59] <sustrik> pub.bind (A)
| [Tuesday 01 June 2010] [09:57:08] <sustrik> sub1.connect (A)
| [Tuesday 01 June 2010] [09:57:15] <sustrik> sub2.connect (A)
| [Tuesday 01 June 2010] [09:57:20] <sustrik> is equivalent to:
| [Tuesday 01 June 2010] [09:57:26] <sustrik> sub1.bind (A)
| [Tuesday 01 June 2010] [09:57:30] <sustrik> sub2.bind (B)
| [Tuesday 01 June 2010] [09:57:33] <sustrik> pub.connect (A)
| [Tuesday 01 June 2010] [09:57:38] <sustrik> pub.connect (B)
| [Tuesday 01 June 2010] [09:58:10] <sustrik> resulting connection diagram looks the same in both cases
| [Tuesday 01 June 2010] [10:00:40] <jugg>    clear enough, thanks.
| [Tuesday 01 June 2010] [10:02:49] <sustrik> you are welcome
| [Tuesday 01 June 2010] [11:56:25] <jugg>    quoting http://www.zeromq.org/blog:road "we designed a minimalist wire protocol which can be described in a couple of paragraphs"  Are those paragraphs available?
| [Tuesday 01 June 2010] [12:01:20] Nick  ivan`` is now known as ivan.
| [Tuesday 01 June 2010] [14:58:27] <cremes>  is it expected behavior that zmq_term() has an assertion failure unless all sockets in the context are closed first?
| [Tuesday 01 June 2010] [14:59:24] <cremes>  this is against 2.0.6 release
| [Tuesday 01 June 2010] [15:44:00] <mato>    cremes: no, that would be a bug
| [Tuesday 01 June 2010] [15:44:27] <mato>    cremes: however, that code has changed on master, so i suggest you re-test there
| [Tuesday 01 June 2010] [15:44:36] <cremes>  all right... i'll test on master in a bit
| [Tuesday 01 June 2010] [15:50:00] <CIA-17>  zeromq2: 03Martin Lucina 07master * r74a03df 10/ (AUTHORS foreign/xmlParser/xmlParser.cpp): Merge branch 'master' of github.com:sustrik/zeromq2 - http://bit.ly/9cipXX
| [Tuesday 01 June 2010] [16:20:08] <mato>    cremes: since you asked about zmq_term()... I'm updating the docs for 2.0.7.
| [Tuesday 01 June 2010] [16:20:21] <mato>    cremes: could you comment if the following is clear: ?
| [Tuesday 01 June 2010] [16:20:28] <mato>           The zmq_term() function terminates the 0MQ context context.
| [Tuesday 01 June 2010] [16:20:28] <mato>           If there are no longer any sockets open within context at the time zmq_term() is
| [Tuesday 01 June 2010] [16:20:31] <mato>           called then context shall be shut down and all associated resources shall be
| [Tuesday 01 June 2010] [16:20:33] <cremes>  ok; i'm compiling master now so i can see if i am still getting on behavior
| [Tuesday 01 June 2010] [16:20:34] <mato>           released immediately.
| [Tuesday 01 June 2010] [16:20:37] <mato>           Otherwise, the following applies:
| [Tuesday 01 June 2010] [16:20:39] <mato>              The zmq_term() function shall return immediately.
| [Tuesday 01 June 2010] [16:20:42] <mato>              Any blocking operations currently in progress on sockets open within context
| [Tuesday 01 June 2010] [16:20:45] <mato>               shall return immediately with an error code of ETERM.
| [Tuesday 01 June 2010] [16:20:47] <mato>              With the exception of zmq_close(), any further operations on sockets open
| [Tuesday 01 June 2010] [16:20:50] <mato>               within context shall fail with an error code of ETERM.
| [Tuesday 01 June 2010] [16:20:53] <mato>              The actual shutdown of context, and release of any associated resources,
| [Tuesday 01 June 2010] [16:20:56] <mato>               shall be delayed until the last socket within it is closed with zmq_close().
| [Tuesday 01 June 2010] [16:21:11] <mato>    cremes: thx, but read the above, since that's the behaviour on master
| [Tuesday 01 June 2010] [16:21:30] <mato>    cremes: is my description clear enough?
| [Tuesday 01 June 2010] [16:21:38] <cremes>  it makes perfect sense; it is very clear
| [Tuesday 01 June 2010] [16:21:42] <mato>    great, thanks
| [Tuesday 01 June 2010] [16:23:15] <CIA-17>  zeromq2: 03Martin Lucina 07master * r8ba1d3c 10/ (6 files): Documentation: zmq_term() and ETERM for 2.0.7 - http://bit.ly/cd4hIx
| [Tuesday 01 June 2010] [16:23:16] <CIA-17>  zeromq2: 03Martin Lucina 07master * r9d00d30 10/ doc/zmq_init.txt : Documentation: zmq_init() API changes for 2.0.7 - http://bit.ly/bhbjsl
| [Tuesday 01 June 2010] [16:28:09] <versificateur>   hello everyone!
| [Tuesday 01 June 2010] [16:28:54] <versificateur>   i'm back to ask for some help aagin.. :)
| [Tuesday 01 June 2010] [16:30:21] <versificateur>   i've some difficulties to run (compile) the c++ server code i wrote based on zmq blog examples
| [Tuesday 01 June 2010] [16:31:24] <versificateur>   I got the following error: Package libzmq was not found in the pkg-config search path.
| [Tuesday 01 June 2010] [16:32:28] <cremes>  versificateur: please pastie the whole error including the command you used
| [Tuesday 01 June 2010] [16:34:55] <versificateur>   g++ `pkg-config --libs --cflags libzmq` -o server server.cpp Package libzmq was not found in the pkg-config search path. Perhaps you should add the directory containing `libzmq.pc' to the PKG_CONFIG_PATH environment variable 
| [Tuesday 01 June 2010] [16:35:00] <versificateur>   oops
| [Tuesday 01 June 2010] [16:35:18] <versificateur>    g++ `pkg-config --libs --cflags libzmq` -o server server.cpp
| [Tuesday 01 June 2010] [16:35:29] <versificateur>   Package libzmq was not found in the pkg-config search path.
| [Tuesday 01 June 2010] [16:35:38] <versificateur>   Perhaps you should add the directory containing `libzmq.pc'
| [Tuesday 01 June 2010] [16:35:48] <versificateur>   to the PKG_CONFIG_PATH environment variable
| [Tuesday 01 June 2010] [16:37:06] <versificateur>   but I try locate and found the required at pkg-config
| [Tuesday 01 June 2010] [16:37:12] <versificateur>   locate libzmq.pc
| [Tuesday 01 June 2010] [16:41:19] <sbeaulois>   hi 
| [Tuesday 01 June 2010] [16:42:06] <sbeaulois>   i tried to compile zmq on RHEL but  i have some errors when i tried ./configure  configure: error: cannot link with -luuid, install uuid-dev
| [Tuesday 01 June 2010] [16:42:25] <sbeaulois>   i cann't fin uuid-dev for RHEL
| [Tuesday 01 June 2010] [16:43:00] <mato>    sbeaulois: I think it's called uuid-devel on RH
| [Tuesday 01 June 2010] [16:43:23] <sbeaulois>   i have install uuid-devel but i have the same error 
| [Tuesday 01 June 2010] [16:46:49] <mato>    sbeaulois: which version of RHEL?
| [Tuesday 01 June 2010] [16:47:58] <sbeaulois>   i use RHEL 5 
| [Tuesday 01 June 2010] [16:48:50] <mato>    don't know, sorry, I don't have that here... you need to install whichever package provides libuuid.a
| [Tuesday 01 June 2010] [16:49:12] <sbeaulois>   fine 
| [Tuesday 01 June 2010] [16:49:14] <versificateur>   i resolve my problem by exporting the PKG_CONFIG_PATH
| [Tuesday 01 June 2010] [16:49:47] <versificateur>   it compile fine
| [Tuesday 01 June 2010] [16:50:26] <versificateur>   but when i run the binarie i have this error
| [Tuesday 01 June 2010] [16:50:33] <versificateur>   ./server: error while loading shared libraries: libzmq.so.0: cannot open shared object file: No such file or directory
| [Tuesday 01 June 2010] [16:51:31] <versificateur>   it's similar to what an old issue i met with python bindings installation
| [Tuesday 01 June 2010] [16:51:49] <versificateur>   is anyone experienced this before??
| [Tuesday 01 June 2010] [16:52:17] <mato>    versificateur: you need to run ldconfig as root
| [Tuesday 01 June 2010] [16:52:18] <cremes>  versificateur: your compile line is wrong; don't use "libzmq" just use "zmq"
| [Tuesday 01 June 2010] [16:52:36] <cremes>  or what mato said :)
| [Tuesday 01 June 2010] [16:53:43] <versificateur>   mato: before or after compile??
| [Tuesday 01 June 2010] [16:54:12] <mato>    versificateur: only once, after doing make install for zmq
| [Tuesday 01 June 2010] [16:54:49] <versificateur>   okay i'm trying
| [Tuesday 01 June 2010] [16:56:27] <versificateur>   cremes: i don't think the zmq.cp exist
| [Tuesday 01 June 2010] [16:56:41] <mato>    versificateur: no, it's libzmq.pc
| [Tuesday 01 June 2010] [16:57:16] <versificateur>   so my compile line was right??
| [Tuesday 01 June 2010] [17:00:24] <mato>    yes
| [Tuesday 01 June 2010] [17:02:49] <versificateur>   i retried after ldconfig but still have the same issue
| [Tuesday 01 June 2010] [17:03:18] <mato>    you did do a make install after building zeromq, yes?
| [Tuesday 01 June 2010] [17:04:19] <versificateur>   after running ./configure make make install?
| [Tuesday 01 June 2010] [17:04:23] <versificateur>   yes
| [Tuesday 01 June 2010] [17:04:48] <mato>    don't know, then your system doesn't have /usr/local/lib in it's /etc/ld.so.conf or equivalent
| [Tuesday 01 June 2010] [17:06:20] <versificateur>   yes i think so
| [Tuesday 01 June 2010] [17:10:00] <versificateur>   i'll try by adding a zmq-64.conf with /usr/local/lib 
| [Tuesday 01 June 2010] [17:10:19] <versificateur>   to /etc/ld.so.conf.d
| [Tuesday 01 June 2010] [17:10:25] <versificateur>   directory
| [Tuesday 01 June 2010] [17:10:51] <mato>    yup, don't forget to rerun ldconfig when you make any changes
| [Tuesday 01 June 2010] [17:17:31] <versificateur>   mato: thanks!!! it works
| [Tuesday 01 June 2010] [17:18:11] <versificateur>   running netstat -l shoow me the zeromq port listening
| [Tuesday 01 June 2010] [17:18:30] <versificateur>   now i can test my code...
| [Tuesday 01 June 2010] [17:18:48] <versificateur>   thanks again :)
| [Tuesday 01 June 2010] [17:22:07] <mato>    np
| [Tuesday 01 June 2010] [17:25:22] <sbeaulois>   hi 
| [Tuesday 01 June 2010] [17:25:42] <sbeaulois>   i found solution of my problem 
| [Tuesday 01 June 2010] [17:26:45] <sbeaulois>   libuuid-devel is within of e2fsprogs package
| [Tuesday 01 June 2010] [18:04:25] <sbeaulois>   ne help 
| [Tuesday 01 June 2010] [18:04:30] <sbeaulois>   need help 
| [Tuesday 01 June 2010] [18:04:52] <sbeaulois>   try to compil my java script but   i have some error 
| [Tuesday 01 June 2010] [18:04:56] <sbeaulois>   java.lang.UnsatisfiedLinkError: /usr/local/lib/libjzmq.so.0.0.0: libzmq.so.0
| [Tuesday 01 June 2010] [18:05:02] <sbeaulois>   not found
| [Tuesday 01 June 2010] [18:05:40] <sbeaulois>   java.lang.UnsatisfiedLinkError: /usr/local/lib/libjzmq.so.0.0.0: libzmq.so.0: cannot open shared object file: No such file or directory
| 
| *** Logfile started
| *** on Tue Jun 1 20:38:41 2010
| 
| [Tuesday 01 June 2010] [20:38:41] Topic The channel topic is "Welcome!".
| [Tuesday 01 June 2010] [20:38:41] Topic The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Tuesday 01 June 2010] [20:38:47] Mode  Channel modes: no messages from outside, topic protection
| [Tuesday 01 June 2010] [20:38:47] Created   This channel was created on 2010-02-05 10:44.
| [Wednesday 02 June 2010] [04:00:18] <sjampoo>   morning, is the pollset and waitfd as discussed on the mailing list going to be part of 2.0.7 or is this something which will be implemented somewhere in the future? I would love to have an estimate on that, ie a month / a year. 
| [Wednesday 02 June 2010] [04:06:30] Part    zedas has left this channel.
| [Wednesday 02 June 2010] [04:15:10] <sustrik>   jugg: yes, see zmq_tcp(7)
| [Wednesday 02 June 2010] [04:21:07] <jugg>  thanks
| [Wednesday 02 June 2010] [04:22:39] <sustrik>   sjampoo: i'll add it after 2.0.7 release
| [Wednesday 02 June 2010] [04:22:54] <sustrik>   however, the API would still be unstable
| [Wednesday 02 June 2010] [04:23:13] <sustrik>   presumably, it can be done in better way
| [Wednesday 02 June 2010] [04:23:27] <sustrik>   everything depends on performance impact
| [Wednesday 02 June 2010] [04:31:30]      * sjampoo nods
| [Wednesday 02 June 2010] [07:43:41] <mato>  sustrik: are you there?
| [Wednesday 02 June 2010] [08:03:18] <sustrik>   mato: hi
| [Wednesday 02 June 2010] [08:03:38] <mato>  sustrik: you wrote that ZMQ_HWM is per-peer, what happens where there are no peers?
| [Wednesday 02 June 2010] [08:04:06] <sustrik>   exceptional behaviour is triggered
| [Wednesday 02 June 2010] [08:04:14] <sustrik>   drop/block
| [Wednesday 02 June 2010] [08:04:37] <mato>  yes, but when?
| [Wednesday 02 June 2010] [08:04:43] <sustrik>   on send
| [Wednesday 02 June 2010] [08:05:21] <mato>  ok, but immediately, right?
| [Wednesday 02 June 2010] [08:05:44] <sustrik>   right
| [Wednesday 02 June 2010] [08:53:48] <mato>  sustrik: the problem i'm having is that it's impossible to explain flow control accurately without dealing with the *actual* peers connected on a socket
| [Wednesday 02 June 2010] [08:54:06] <mato>  sustrik: this is further complicated by the fact that the term "connect" is overloaded
| [Wednesday 02 June 2010] [08:55:41] <mato>  sustrik: for example, it's really hard to explain coherently the state when a socket "has no peers"
| [Wednesday 02 June 2010] [08:56:06] <mato>  sustrik: which means that it has been connected with zmq_connect(), but no peers exist
| [Wednesday 02 June 2010] [09:05:12] <sustrik>   mato: don't even try to explain that
| [Wednesday 02 June 2010] [09:05:21] <sustrik>   what has to be documented is
| [Wednesday 02 June 2010] [09:05:37] <sustrik>   1. dealing with overloads (drop vs. block)
| [Wednesday 02 June 2010] [09:06:06] <sustrik>   2. HWM socket option - this is used to prevent out-of-memory rather than for flow control
| [Wednesday 02 June 2010] [09:07:20] <mato>  sustrik: it's impossible to explain accurately what HWM *means* without dealing with the existence of the individual message queues associated with a socket!
| [Wednesday 02 June 2010] [09:07:37] <mato>  same for drop/blocking behaviour
| [Wednesday 02 June 2010] [09:08:01] <sustrik>   mato: yes
| [Wednesday 02 June 2010] [09:08:16] <mato>  yes?
| [Wednesday 02 June 2010] [09:08:53] <sustrik>   HWM is maximal number of messages destined for one peer that the socket may hold 
| [Wednesday 02 June 2010] [09:09:07] <sustrik>   the connection doesn't have to exist
| [Wednesday 02 June 2010] [09:09:16] <sustrik>   even the peer may not be running at the moment
| [Wednesday 02 June 2010] [09:10:11] <mato>  the problem is "the connection" != "the socket connection"
| [Wednesday 02 June 2010] [09:10:39] <sustrik>   i prefer to say "there's no concept of connections in 0mq"
| [Wednesday 02 June 2010] [09:11:02] <mato>  then we need to rename the concept of connections to something else :-)
| [Wednesday 02 June 2010] [09:11:16] <sustrik>   what do you mean by connection?
| [Wednesday 02 June 2010] [09:11:54] <mato>  sctp got around this by using the term "association" IIRC
| [Wednesday 02 June 2010] [09:12:40] <mato>  sustrik: what i mean by connection is the "something" created by zmq_connect() or zmq_bind() :-)
| [Wednesday 02 June 2010] [09:13:05] <sustrik>   bind creates nothing, just an endpoint
| [Wednesday 02 June 2010] [09:13:07] <sustrik>   a name
| [Wednesday 02 June 2010] [09:13:20] <sustrik>   do you mean message pipe/queue?
| [Wednesday 02 June 2010] [09:13:22] <mato>  and connect? does what? :-)
| [Wednesday 02 June 2010] [09:13:44] <sustrik>   attaches to endpoint + creates a queue
| [Wednesday 02 June 2010] [09:14:13] <sustrik>   bind just creates the endpoint, creation of associated queue is async
| [Wednesday 02 June 2010] [09:14:18] <sustrik>   queues*
| [Wednesday 02 June 2010] [09:14:41] <sustrik>   but that's invisible to user
| [Wednesday 02 June 2010] [09:14:51] <sustrik>   and - imo - should not be mentioned in documentation
| [Wednesday 02 June 2010] [09:14:58] <sustrik>   what user needs to know is:
| [Wednesday 02 June 2010] [09:15:11] <sustrik>   1. socket may spak to multiple peers
| [Wednesday 02 June 2010] [09:15:28] <sustrik>   2. socket has a routing algorithm
| [Wednesday 02 June 2010] [09:15:41] <sustrik>   (which decides which peer gets which message)
| [Wednesday 02 June 2010] [09:15:56] <sustrik>   3. HWM limits number of messages routed to particular peer
| [Wednesday 02 June 2010] [09:16:08] <sustrik>   messages in memory*
| [Wednesday 02 June 2010] [09:22:40] <mato>  see, with 1. the terminology problem kicks in again:
| [Wednesday 02 June 2010] [09:22:47] <mato>  current doc:
| [Wednesday 02 June 2010] [09:22:52] <mato>  A
| [Wednesday 02 June 2010] [09:22:52] <mato>  'ZMQ_REQ' socket may be connected to multiple peers; each request sent is
| [Wednesday 02 June 2010] [09:22:52] <mato>  load-balanced among all connected peers.
| [Wednesday 02 June 2010] [09:24:41] <sustrik>   well, what's the problem with that?
| [Wednesday 02 June 2010] [09:24:53] <sustrik>   "connected" word?
| [Wednesday 02 June 2010] [09:24:59] <mato>  i think so
| [Wednesday 02 June 2010] [09:25:00] <sustrik>   just drop it
| [Wednesday 02 June 2010] [09:25:17] <sustrik>   "load-balanced among all peers."
| [Wednesday 02 June 2010] [09:25:26] <sustrik>   that's more precise actually
| [Wednesday 02 June 2010] [09:37:10] <mato>  crap, i still don't know how to explain the relationship between socket <-> endpoints <-> queues <-> peers
| [Wednesday 02 June 2010] [09:40:21] <sustrik>   :)
| [Wednesday 02 June 2010] [09:40:26] <mato>  sustrik: let me try and put my problem another way
| [Wednesday 02 June 2010] [09:40:42] <mato>  you keep saying that "there are no connections", and that we should not talk about them in the documentation
| [Wednesday 02 June 2010] [09:41:05] <mato>  but the explanation of ZMQ_HWM is directly dependent on the individual connections to peers
| [Wednesday 02 June 2010] [09:41:18] <mato>  or at least the queues created by those connections
| [Wednesday 02 June 2010] [09:42:32] <sustrik>   there's a peer
| [Wednesday 02 June 2010] [09:42:44] <sustrik>   there's a queue associated with the peer
| [Wednesday 02 June 2010] [09:43:01] <sustrik>   actual connection to the peer is invisible to the user
| [Wednesday 02 June 2010] [09:43:36] <mato>  so i do need to talk about the queues associated with a socket's peers
| [Wednesday 02 June 2010] [09:43:51] <sustrik>   what's wrong with the explanaition above:
| [Wednesday 02 June 2010] [09:43:57] <sustrik>   sustrik> 1. socket may spak to multiple peers
| [Wednesday 02 June 2010] [09:43:57] <sustrik>   <sustrik> 2. socket has a routing algorithm
| [Wednesday 02 June 2010] [09:43:57] <sustrik>   <sustrik> (which decides which peer gets which message)
| [Wednesday 02 June 2010] [09:43:57] <sustrik>   <sustrik> 3. HWM limits number of messages routed to particular peer
| [Wednesday 02 June 2010] [09:44:10] <mato>  it's not an explanation
| [Wednesday 02 June 2010] [09:44:14] <sustrik>   ?
| [Wednesday 02 June 2010] [09:45:24] <mato>  it needs to be uncompressed :-)
| [Wednesday 02 June 2010] [09:47:06] <sustrik>   ah, ok
| [Wednesday 02 June 2010] [09:47:22] <mato>  anyway, i'm trying
| [Wednesday 02 June 2010] [09:47:50] <mato>  maybe it'd help if you were sitting next to me ...
| [Wednesday 02 June 2010] [09:51:39] <sustrik>   hm
| [Wednesday 02 June 2010] [09:51:46] <sustrik>   let's give it one more try
| [Wednesday 02 June 2010] [09:52:22] <sustrik>   socket may speak to multiple peers
| [Wednesday 02 June 2010] [09:52:23] <mato>  if we get it right you won't have to answer nearly as many emails :-)
| [Wednesday 02 June 2010] [09:52:36] <sustrik>   yes, i know
| [Wednesday 02 June 2010] [09:52:47] <sustrik>   actually, it's not even peers
| [Wednesday 02 June 2010] [09:53:12] <sustrik>   because the peer may not even be running at the moment
| [Wednesday 02 June 2010] [09:53:18] <mato>  see, there is a concept missing
| [Wednesday 02 June 2010] [09:53:28] <sustrik>   what about endpoint
| [Wednesday 02 June 2010] [09:53:34] <sustrik>   we use that. no?
| [Wednesday 02 June 2010] [09:53:56] <sustrik>   so, there are endpoints on the network
| [Wednesday 02 June 2010] [09:53:56] <mato>  yes, but at the moment we talk about connecting to endpoints, which overloads the word connect
| [Wednesday 02 June 2010] [09:54:10] <sustrik>   they are pure virtual entities
| [Wednesday 02 June 2010] [09:54:17] <sustrik>   such as multicast group
| [Wednesday 02 June 2010] [09:54:34] <sustrik>   there's no real thing corresponding to multicast group, right?
| [Wednesday 02 June 2010] [09:54:45] <mato>  not really
| [Wednesday 02 June 2010] [09:54:48] <sustrik>   it's just a name
| [Wednesday 02 June 2010] [09:54:55] <sustrik>   ideal concept
| [Wednesday 02 June 2010] [09:55:07] <sustrik>   the 0MQ endpoint is the same kind of thing
| [Wednesday 02 June 2010] [09:55:25] <sustrik>   now, a socket can "implement" the endpoint
| [Wednesday 02 June 2010] [09:55:29] <sustrik>   by binding to it
| [Wednesday 02 June 2010] [09:56:10] <sustrik>   another socket may announce it's desire to speak to a particular endpoint
| [Wednesday 02 June 2010] [09:56:23] <sustrik>   (same thing as joining a multicast group)
| [Wednesday 02 June 2010] [09:56:29] <sustrik>   that's "connect"
| [Wednesday 02 June 2010] [09:57:18] <sustrik>   the whole point is that there may be no application associated with particular endpoint
| [Wednesday 02 June 2010] [09:57:30] <sustrik>   endpoint = name
| [Wednesday 02 June 2010] [09:58:16] <sustrik>   each socket is speaking to multiple peers
| [Wednesday 02 June 2010] [09:58:32] <sustrik>   it does so either by binding to an endpoint or connecting to an endpoint
| [Wednesday 02 June 2010] [09:58:34] <mato>  "speaking to" is not a technical term :-)
| [Wednesday 02 June 2010] [09:58:39] <sustrik>   communicating
| [Wednesday 02 June 2010] [10:00:00] <mato>  how does one refer to a peer a socket is communicating with?
| [Wednesday 02 June 2010] [10:00:18] <sustrik>   peer?
| [Wednesday 02 June 2010] [10:01:22] <sustrik>   anyway, the problem is that peers may not be alive, online and reading messages
| [Wednesday 02 June 2010] [10:01:59] <sustrik>   in such case we may limit number of messages in memory destined for a single peer by setting HWM
| [Wednesday 02 June 2010] [10:02:53] <sustrik>   i know, the whole explanation is creaky, but at least it gives some intuitive insight
| [Wednesday 02 June 2010] [10:03:52] <mato>  creaky, yes :-(
| [Wednesday 02 June 2010] [10:07:57] <mato>  sustrik: so you don't want to talk about message queues associated with sockets at all?
| [Wednesday 02 June 2010] [10:08:14] <sustrik>   do we need to?
| [Wednesday 02 June 2010] [10:08:25] <sustrik>   i am a fan of occam's razor
| [Wednesday 02 June 2010] [10:09:18] <mato>  ok, let me try and see if i can explain everything by removing all references to "message queue associated with socket ..." :-)
| [Wednesday 02 June 2010] [10:09:34] <sustrik>   ;)
| [Wednesday 02 June 2010] [10:29:51] <mato>  sustrik: ok, read this:
| [Wednesday 02 June 2010] [10:30:03] <mato>  The 'ZMQ_HWM' option shall set the high water mark for the specified 'socket'.
| [Wednesday 02 June 2010] [10:30:03] <mato>  The high water mark is a hard limit on the maximum number of outstanding
| [Wednesday 02 June 2010] [10:30:03] <mato>  messages 0MQ shall queue in memory for any single peer that the specified
| [Wednesday 02 June 2010] [10:30:03] <mato>  'socket' is communicating with.
| [Wednesday 02 June 2010] [10:30:03] <mato>  If this limit has been reached for all peers then the socket shall enter an
| [Wednesday 02 June 2010] [10:30:06] <mato>  exceptional state, and depending on the socket type 0MQ shall take appropriate
| [Wednesday 02 June 2010] [10:30:08] <mato>  action such as blocking or dropping newly sent messages; refer to
| [Wednesday 02 June 2010] [10:30:11] <mato>  linkzmq:zmq_socket[3] for details. The exceptional state shall persist until
| [Wednesday 02 June 2010] [10:30:13] <mato>  the number of outstanding messages for at least one peer falls below the low
| [Wednesday 02 June 2010] [10:30:16] <mato>  water mark; the low water mark shall be computed automatically by 0MQ.
| [Wednesday 02 June 2010] [10:30:29] <mato>  avoids using the term "connected to" anywhere
| [Wednesday 02 June 2010] [10:30:35] <mato>  or mentioning message queues
| [Wednesday 02 June 2010] [10:31:02] <mato>  i can even change "shall queue in memory" to "shall hold in memory" if queue is a no-no :-)
| [Wednesday 02 June 2010] [10:31:22] <sustrik>   doesn't matter
| [Wednesday 02 June 2010] [10:31:24] <mato>  sustrik: further, then related to this, the following paragraph for ZMQ_REQ:
| [Wednesday 02 June 2010] [10:31:30] <mato>  in zmq_socket(3)
| [Wednesday 02 June 2010] [10:31:31] <sustrik>   the problem is that it's not true
| [Wednesday 02 June 2010] [10:31:43] <mato>  what is not true?
| [Wednesday 02 June 2010] [10:32:10] <sustrik>   the part about the exceptional state
| [Wednesday 02 June 2010] [10:32:23] <sustrik>   what you've written applies to sat REQ/REP
| [Wednesday 02 June 2010] [10:32:28] <sustrik>   doesn't apply to PUB/SUB
| [Wednesday 02 June 2010] [10:32:37] <mato>  hmm, crap, ok
| [Wednesday 02 June 2010] [10:32:42] <sustrik>   :)
| [Wednesday 02 June 2010] [10:32:58] <sustrik>   try to express it in a simple manner
| [Wednesday 02 June 2010] [10:33:08] <mato>  so how about we keep the 1st paragraph only?
| [Wednesday 02 June 2010] [10:33:15] <mato>  and then refer to the individual socket types?
| [Wednesday 02 June 2010] [10:33:26] <sustrik>   yes
| [Wednesday 02 June 2010] [10:33:26] <mato>  1st paragraph being this bit:
| [Wednesday 02 June 2010] [10:33:30] <mato>  The 'ZMQ_HWM' option shall set the high water mark for the specified 'socket'.
| [Wednesday 02 June 2010] [10:33:30] <mato>  The high water mark is a hard limit on the maximum number of outstanding
| [Wednesday 02 June 2010] [10:33:30] <mato>  messages 0MQ shall queue in memory for any single peer that the specified
| [Wednesday 02 June 2010] [10:33:30] <mato>  'socket' is communicating with.
| [Wednesday 02 June 2010] [10:33:34] <sustrik>   yes
| [Wednesday 02 June 2010] [10:33:48] <mato>  ok, so then the relevant paragraph for REQ sockets:
| [Wednesday 02 June 2010] [10:33:54] <mato>  When a 'ZMQ_REQ' socket enters an exceptional state due to having reached the
| [Wednesday 02 June 2010] [10:33:54] <mato>  high water mark for all peers, or if there are no peers at all, then any
| [Wednesday 02 June 2010] [10:33:54] <mato>  _zmq_send()_ operations on the socket shall block until the exceptional state
| [Wednesday 02 June 2010] [10:33:54] <mato>  ends or at least one peer is connected; messages are not discarded.
| [Wednesday 02 June 2010] [10:33:58] <mato>  makes sense?
| [Wednesday 02 June 2010] [10:34:07] <mato>  i still have a problem there with "at least one peer is connected"
| [Wednesday 02 June 2010] [10:34:29] <mato>  note the careful absence of "connecting" anywhere else :-)
| [Wednesday 02 June 2010] [10:35:40] <sustrik>   "until at least one peer becomes available for sending"
| [Wednesday 02 June 2010] [10:36:04] <mato>  do i want to talk about when exactly the exceptional state ends?
| [Wednesday 02 June 2010] [10:36:15] <mato>  or just be vague and mysterious?
| [Wednesday 02 June 2010] [10:36:20] <sustrik>   be vague
| [Wednesday 02 June 2010] [10:36:24] <sustrik>   it depends on lwm
| [Wednesday 02 June 2010] [10:36:29] <sustrik>   which is invisible
| [Wednesday 02 June 2010] [10:36:33] <mato>  :-(
| [Wednesday 02 June 2010] [10:36:48] <sustrik>   what's wrong with that?
| [Wednesday 02 June 2010] [10:36:56] <sustrik>   you have the same thing with TCP
| [Wednesday 02 June 2010] [10:37:02] <mato>  ok
| [Wednesday 02 June 2010] [10:37:03] <sustrik>   and you even don't realise it
| [Wednesday 02 June 2010] [10:38:53] <mato>  sustrik: can i use the following summary table for sockets:
| [Wednesday 02 June 2010] [10:38:58] <mato>  .Summary of ZMQ_REQ characteristics
| [Wednesday 02 June 2010] [10:38:59] <mato>  Compatible peer sockets:: 'ZMQ_REP'
| [Wednesday 02 June 2010] [10:38:59] <mato>  Direction:: Bidirectional
| [Wednesday 02 June 2010] [10:38:59] <mato>  Send/receive pattern:: Send, Receive, Send, Receive, ...
| [Wednesday 02 June 2010] [10:38:59] <mato>  Queuing strategy:: Load-balanced
| [Wednesday 02 June 2010] [10:39:01] <mato>  Flow control:: Block
| [Wednesday 02 June 2010] [10:39:38] <mato>  maybe queueing strategy should be "Routing strategy" ?
| [Wednesday 02 June 2010] [10:40:15] <mato>  and Flow control should be called something else, "ZMQ_HWM behaviour" ?
| [Wednesday 02 June 2010] [10:41:25] <lvh>   Is it just me, or did 0MQ involve a broker some time ago?
| [Wednesday 02 June 2010] [10:41:44] <lvh>   I'm seeing all this brokerless stuff and I don't get it.
| [Wednesday 02 June 2010] [10:41:55] <mato>  lvh: no, it never did... there was a zmq_locator in 1.x but that did something else
| [Wednesday 02 June 2010] [10:42:09] <mato>  sustrik: halo?
| [Wednesday 02 June 2010] [10:42:28] <sustrik>   mato: here i am
| [Wednesday 02 June 2010] [10:42:40] <mato>  sustrik: see above
| [Wednesday 02 June 2010] [10:42:44] <sustrik>   yes
| [Wednesday 02 June 2010] [10:42:55] <sustrik>   send/receive patter is kind of funny
| [Wednesday 02 June 2010] [10:43:00] <sustrik>   but i don't care
| [Wednesday 02 June 2010] [10:43:01] <mato>  brian suggested that
| [Wednesday 02 June 2010] [10:43:06] <sustrik>   it's ok
| [Wednesday 02 June 2010] [10:43:27] <mato>  and the others?
| [Wednesday 02 June 2010] [10:43:41] <sustrik>   there are actually two strategies
| [Wednesday 02 June 2010] [10:43:53] <sustrik>   one for outgoing messages, one for incoming messages
| [Wednesday 02 June 2010] [10:44:24] <sustrik>   say REQ load balances outgoing messages
| [Wednesday 02 June 2010] [10:44:32] <mato>  yeah, that makes sense
| [Wednesday 02 June 2010] [10:44:46] <mato>  what it does with incoming messages you don't really care
| [Wednesday 02 June 2010] [10:44:47] <sustrik>   and receives only from the peer it sent the last request to
| [Wednesday 02 June 2010] [10:45:04] <mato>  hmm, how can I put that in one sentence...
| [Wednesday 02 June 2010] [10:45:09] <sustrik>   well, for say REP socket, the incoming stratege is fair queueing
| [Wednesday 02 June 2010] [10:45:17] <sustrik>   strategy*
| [Wednesday 02 June 2010] [10:46:06] <sustrik>   wouldn't it be better to explain what the socket does in one sentence
| [Wednesday 02 June 2010] [10:46:15] <mato>  I do that already
| [Wednesday 02 June 2010] [10:46:23] <mato>  but I wanted a summary table in there
| [Wednesday 02 June 2010] [10:46:26] <sustrik>   instead of splitting it into 4 different rows in a table
| [Wednesday 02 June 2010] [10:46:52] <mato>  sustrik: if you were here you would see what i have on my screen :-(
| [Wednesday 02 June 2010] [10:46:53] <sustrik>   ok, let's go through the table
| [Wednesday 02 June 2010] [10:47:07] <sustrik>   comaptible sockets is OK
| [Wednesday 02 June 2010] [10:47:07] <mato>  do we want a table or not?
| [Wednesday 02 June 2010] [10:47:26] <mato>  I thought it would be good to explain in prose first, and then have a table at the end
| [Wednesday 02 June 2010] [10:47:34] <lvh>   Okay. We have a bunch of entry points for mobile devices that speak JSON-over-HTTPS and Thrift-over-SSL. They send stuff to an AMQP broker (RabbitMQ): a queue for persisting, which roundrobins stuff to persisters that write to a database, and then a pubsub thing for a live web interface. I don't understand how you do the load balancing bit in ZMQ. How do persisters register? How do they know *where* to register if there is no central
| [Wednesday 02 June 2010] [10:47:35] <lvh>   broker?
| [Wednesday 02 June 2010] [10:48:42] <sustrik>   mato: i would omit the strategies from the table, they are explained in the text already
| [Wednesday 02 June 2010] [10:49:30] <mato>  sustrik: well, the table is nice for a quick look
| [Wednesday 02 June 2010] [10:49:39] <mato>  sustrik: if it can be done for all sockets correctly
| [Wednesday 02 June 2010] [10:49:40] <sustrik>   lvh: so devices are sending messages to a central node (broker) which then load-balances them among persisters, right?
| [Wednesday 02 June 2010] [10:49:49] <lvh>   sustrik: Yes, that's one part of the behavior
| [Wednesday 02 June 2010] [10:49:57] <lvh>   sustrik: Let's focus on that now :)
| [Wednesday 02 June 2010] [10:50:11] <lvh>   sustrik: That's a single AMQP queue.
| [Wednesday 02 June 2010] [10:50:25] <sustrik>   mato: you can try but strategies need textual description anyway
| [Wednesday 02 June 2010] [10:50:43] <sustrik>   lvh: is that req/rep scenario?
| [Wednesday 02 June 2010] [10:50:46] <lvh>   What does the failure mode look like? What happens to messages when a persister grabs a message and then blows up?
| [Wednesday 02 June 2010] [10:50:55] <sustrik>   are the persisters sending replies back to the devices?
| [Wednesday 02 June 2010] [10:51:10] <sustrik>   lvh: unreliable
| [Wednesday 02 June 2010] [10:51:16] <lvh>   sustrik: Ideally yes, to confirm "hey I wrote this thing and the db says its okay"
| [Wednesday 02 June 2010] [10:51:44] <sustrik>   you can run zmq_queue in the middle
| [Wednesday 02 June 2010] [10:51:53] <sustrik>   it's lika an AMQP queue
| [Wednesday 02 June 2010] [10:52:12] <sustrik>   then both devices and persisters can connect to it
| [Wednesday 02 June 2010] [10:52:17] <lvh>   Okay, cool :-) I'll read up on that one.
| [Wednesday 02 June 2010] [10:52:28] <lvh>   sustrik: How about the pubsubbing? Is that with zmq_queue too?
| [Wednesday 02 June 2010] [10:52:38] <sustrik>   no, that's zmq_forwarder
| [Wednesday 02 June 2010] [10:53:13] <lvh>   Aha! Okay, I'll read the docs for those two and try to figure it out. Thanks! :-)
| [Wednesday 02 June 2010] [10:54:58] <mato>  sustrik: so what's the incoming strategy for ZMQ_SUB?
| [Wednesday 02 June 2010] [10:56:45] <sustrik>   fair-queuing
| [Wednesday 02 June 2010] [10:59:58] <mato>  does this work:
| [Wednesday 02 June 2010] [11:00:04] <mato>  REQ:
| [Wednesday 02 June 2010] [11:00:11] <mato>  Compatible peer sockets:: 'ZMQ_REP'
| [Wednesday 02 June 2010] [11:00:11] <mato>  Direction:: Bidirectional
| [Wednesday 02 June 2010] [11:00:11] <mato>  Send/receive pattern:: Send, Receive, Send, Receive, ...
| [Wednesday 02 June 2010] [11:00:11] <mato>  Outgoing routing strategy:: Load-balanced
| [Wednesday 02 June 2010] [11:00:11] <mato>  Incoming routing strategy:: Last peer
| [Wednesday 02 June 2010] [11:00:13] <mato>  Flow control:: Block
| [Wednesday 02 June 2010] [11:00:15] <mato>  REP:
| [Wednesday 02 June 2010] [11:00:20] <mato>  Compatible peer sockets:: 'ZMQ_REQ'
| [Wednesday 02 June 2010] [11:00:20] <mato>  Direction:: Bidirectional
| [Wednesday 02 June 2010] [11:00:20] <mato>  Send/receive pattern:: Receive, Send, Receive, Send, ...
| [Wednesday 02 June 2010] [11:00:20] <mato>  Incoming routing strategy:: Fair-queued
| [Wednesday 02 June 2010] [11:00:20] <mato>  Outgoing routing stratagy:: Last peer
| [Wednesday 02 June 2010] [11:00:23] <mato>  Flow control:: Drop
| [Wednesday 02 June 2010] [11:02:54] <sustrik>   you have it mixed
| [Wednesday 02 June 2010] [11:02:59] <sustrik>   the upper is ZMQ_REQ
| [Wednesday 02 June 2010] [11:03:08] <sustrik>   the lower is ZMQ_REP
| [Wednesday 02 June 2010] [11:03:15] <mato>  that's what i wrote
| [Wednesday 02 June 2010] [11:03:56] <mato>  sustrik: what i'm asking is whether that kind of table makes sense
| [Wednesday 02 June 2010] [11:03:58] <sustrik>   oh, orry
| [Wednesday 02 June 2010] [11:04:00] <sustrik>   sorry
| [Wednesday 02 June 2010] [11:04:18] <sustrik>   yes, it makes sense
| [Wednesday 02 June 2010] [11:04:44] <mato>  the reason i want to put it in there beside the prose is brian wrote:
| [Wednesday 02 June 2010] [11:04:55] <mato>  In my understanding, 0MQ sockets
| [Wednesday 02 June 2010] [11:04:55] <mato>  can be described in a uniform manner by specifying things like:
| [Wednesday 02 June 2010] [11:04:55] <mato>  * Bidirectional or unidirectional
| [Wednesday 02 June 2010] [11:04:55] <mato>  * send/recv pattern (ssssss, rrrrrrr, srsrsrsr, etc.)
| [Wednesday 02 June 2010] [11:04:55] <mato>  * Outbound/inbound message queuing pattern (load balanced, fair queued)
| [Wednesday 02 June 2010] [11:04:58] <mato>  * Number of allowed clients.
| [Wednesday 02 June 2010] [11:05:00] <mato>  * How multiple clients are handled.
| [Wednesday 02 June 2010] [11:05:03] <mato>  * Number of allowed in flight messages (synch, async)
| [Wednesday 02 June 2010] [11:05:05] <mato>  * Algorithm used when the queue fills.
| [Wednesday 02 June 2010] [11:05:08] <mato>  * Allowed peer socket types.
| [Wednesday 02 June 2010] [11:05:10] <mato>  * I may be missing certain things.
| [Wednesday 02 June 2010] [11:05:13] <mato>  * How identities are used in message routing.
| [Wednesday 02 June 2010] [11:05:15] <mato>  The main problem that I see right now is that some of these things are
| [Wednesday 02 June 2010] [11:05:18] <mato>  not clearly documented.  Making a list of all these things and
| [Wednesday 02 June 2010] [11:05:20] <mato>  documenting them for each socket type would be immensely helpful and
| [Wednesday 02 June 2010] [11:05:23] <mato>  clarify the abstraction of a 0MQ socket.
| [Wednesday 02 June 2010] [11:05:25] <mato>  ...
| [Wednesday 02 June 2010] [11:05:28] <mato>  so it seems that a table would help
| [Wednesday 02 June 2010] [11:05:30] <sustrik>   yes, sure
| [Wednesday 02 June 2010] [11:05:30] <mato>  sustrik: agree?
| [Wednesday 02 June 2010] [11:05:36] <sustrik>   yes
| [Wednesday 02 June 2010] [11:05:45] <sustrik>   let's use your current table
| [Wednesday 02 June 2010] [11:05:55] <sustrik>   if there are more things to specify
| [Wednesday 02 June 2010] [11:05:59] <sustrik>   we can add it later
| [Wednesday 02 June 2010] [11:06:02] <mato>  ok, good
| [Wednesday 02 June 2010] [11:06:21] <mato>  it makes peer look scary:
| [Wednesday 02 June 2010] [11:06:25] <mato>  Compatible peer sockets:: 'ZMQ_PAIR'
| [Wednesday 02 June 2010] [11:06:26] <mato>  Direction:: Bidirectional
| [Wednesday 02 June 2010] [11:06:26] <mato>  Send/receive pattern:: Unrestricted
| [Wednesday 02 June 2010] [11:06:26] <mato>  Incoming routing strategy:: N/A
| [Wednesday 02 June 2010] [11:06:26] <mato>  Outgoing routing strategy:: N/A
| [Wednesday 02 June 2010] [11:06:28] <mato>  Flow control:: Block
| [Wednesday 02 June 2010] [11:06:30] <mato>  lots of N/A :)
| [Wednesday 02 June 2010] [11:07:03] <mato>  sustrik: one more thing needs  to go in that table
| [Wednesday 02 June 2010] [11:07:36] <sustrik>   :)
| [Wednesday 02 June 2010] [11:07:46] <mato>  sustrik: which is what brian calls "number of allowed clients", and what he means is whether a socket can be many-to-many/many-to-one/etc
| [Wednesday 02 June 2010] [11:07:53] <mato>  what is that "thing" called? :-)
| [Wednesday 02 June 2010] [11:08:03] <sustrik>   arity
| [Wednesday 02 June 2010] [11:08:12] <sustrik>   cardinality
| [Wednesday 02 June 2010] [11:08:15] <sustrik>   dunno
| [Wednesday 02 June 2010] [11:08:39] <mato>  hmm, neither of those really work
| [Wednesday 02 June 2010] [11:08:57] <sustrik>   any normal 0mq socket allows many peers
| [Wednesday 02 June 2010] [11:09:03] <sustrik>   pair is pathological case
| [Wednesday 02 June 2010] [11:09:12] <sustrik>   just note in the text
| [Wednesday 02 June 2010] [11:09:23] <mato>  already noted
| [Wednesday 02 June 2010] [11:09:24] <sustrik>   word 'pathological' should be definitely present :)
| [Wednesday 02 June 2010] [11:18:34] <lvh>   sustrik: So, in a typical setup, would these brokers and forwarders have dedicated machines? I'm assuming that you *DO* actually need to know where your forwarder/queue is.
| [Wednesday 02 June 2010] [11:18:56] <sustrik>   yes, you have to connect to it
| [Wednesday 02 June 2010] [11:19:13] <sustrik>   having a dedicated machine seems like an overkill
| [Wednesday 02 June 2010] [11:19:20] <sustrik>   depends on what are you doing
| [Wednesday 02 June 2010] [11:19:38] <sustrik>   if you are NASDAQ, you probably want a dedicated machine...
| [Wednesday 02 June 2010] [11:19:52] <lvh>   well, we're currently on EC2
| [Wednesday 02 June 2010] [11:20:09] <lvh>   I suppose we could move to RC and use a tiny 256M box, and even that's overkill.
| [Wednesday 02 June 2010] [11:20:43] <sustrik>   then use a single box :)
| [Wednesday 02 June 2010] [11:21:25] <mato>  %^#$^
| [Wednesday 02 June 2010] [11:22:31] <mato>  sustrik: so how do i translate this without mentioning message queues/pipes:
| [Wednesday 02 June 2010] [11:22:39] <mato>  REP:
| [Wednesday 02 June 2010] [11:22:39] <mato>  Ak je spojenie urcene na odoslanie odpovede preplnene, potom ZMQ
| [Wednesday 02 June 2010] [11:22:39] <mato>  spravu zahodi a send skonci uspesne.
| [Wednesday 02 June 2010] [11:23:37] <sustrik>   that's the flow control bit?
| [Wednesday 02 June 2010] [11:23:45] <mato>  yes
| [Wednesday 02 June 2010] [11:24:20] <sustrik>   if there's not enough space to store the message, it'll be dropped
| [Wednesday 02 June 2010] [11:25:23] <mato>  sustrik: it needs to be explained in the context of REP and HWM
| [Wednesday 02 June 2010] [11:25:56] <mato>  help me out here
| [Wednesday 02 June 2010] [11:26:43] <sustrik>   if requester is not receiving replies and the number of outstanding replies reaches HWM any further replies will be dropped
| [Wednesday 02 June 2010] [11:30:17] <mato>  sustrik: hw about this?
| [Wednesday 02 June 2010] [11:30:22] <mato>  When a 'ZMQ_REP' socket enters an exceptional state due to having reached the
| [Wednesday 02 June 2010] [11:30:23] <mato>  high water mark for a _client_, then any replies sent to the _client_ in
| [Wednesday 02 June 2010] [11:30:23] <mato>  question shall be dropped until the exceptional state ends.
| [Wednesday 02 June 2010] [11:30:48] <sustrik>   yes, why not
| [Wednesday 02 June 2010] [12:05:50] <mato>  sustrik: are you still there?
| [Wednesday 02 June 2010] [12:11:46] <sustrik>   mato: yes
| [Wednesday 02 June 2010] [12:12:00] <mato>  sustrik: in a moment i will commit my changes
| [Wednesday 02 June 2010] [12:12:15] <mato>  sustrik: i've also added some general text to zmq_socket in an attempt to explain the interesting bits
| [Wednesday 02 June 2010] [12:12:23] <mato>  sustrik: once i commit it can you review this please?
| [Wednesday 02 June 2010] [12:12:30] <sustrik>   sure, i will
| [Wednesday 02 June 2010] [12:12:40] <sustrik>   one more question, btw
| [Wednesday 02 June 2010] [12:12:53] <sustrik>   there's a "zmqd" thing in the trunk
| [Wednesday 02 June 2010] [12:13:11] <sustrik>   should we drop the devices in favour of zmqd
| [Wednesday 02 June 2010] [12:13:19] <sustrik>   or keep both for the time being
| [Wednesday 02 June 2010] [12:13:22] <sustrik>   ?
| [Wednesday 02 June 2010] [12:13:30] <mato>  sustrik: oh, btw, since we're removing app_threads, zmq_socket will no longer return EMTHREAD ever?
| [Wednesday 02 June 2010] [12:13:48] <mato>  sustrik: as for zmqd, i'm not sure, i've not had a chance to review it
| [Wednesday 02 June 2010] [12:13:48] <sustrik>   actually, it will
| [Wednesday 02 June 2010] [12:14:07] <sustrik>   when it reaches max socket count
| [Wednesday 02 June 2010] [12:14:12] <sustrik>   as with POSIX
| [Wednesday 02 June 2010] [12:14:24] <mato>  sustrik: for 2.0.7 i would ignore zmqd, and keep packaging the current devices
| [Wednesday 02 June 2010] [12:14:31] <sustrik>   ok
| [Wednesday 02 June 2010] [12:14:35] <mato>  sustrik: since the devices/zmqd really need a proper review
| [Wednesday 02 June 2010] [12:15:05] <sustrik>   fine
| [Wednesday 02 June 2010] [12:15:27] <sustrik>   what about renaming EMTHREAD to EMFILE?
| [Wednesday 02 June 2010] [12:15:40] <sustrik>   probably not
| [Wednesday 02 June 2010] [12:15:48] <sustrik>   just an idea
| [Wednesday 02 June 2010] [12:15:57] <mato>  what does this value have to do with it?
| [Wednesday 02 June 2010] [12:16:13] <mato>   Maximal number of OS threads that can own 0MQ sockets
| [Wednesday 02 June 2010] [12:16:13] <mato>          //  at the same time.
| [Wednesday 02 June 2010] [12:16:13] <mato>          max_app_threads = 512,
| [Wednesday 02 June 2010] [12:16:18] <mato>  from config.hpp
| [Wednesday 02 June 2010] [12:16:30] <sustrik>   yes, that's max thread count
| [Wednesday 02 June 2010] [12:16:42] <sustrik>   kind of like max socket count in POSIX OS
| [Wednesday 02 June 2010] [12:16:51] <sustrik>   max fd count i meant
| [Wednesday 02 June 2010] [12:17:22] <mato>  ok
| [Wednesday 02 June 2010] [12:17:59] <mato>  in that case I'll change the error explanation to just say:
| [Wednesday 02 June 2010] [12:18:03] <mato>  *EMTHREAD*::
| [Wednesday 02 June 2010] [12:18:03] <mato>  The number of application threads using sockets within this 'context' has been
| [Wednesday 02 June 2010] [12:18:04] <mato>  exceeded. 
| [Wednesday 02 June 2010] [12:18:08] <mato>  and nothing else
| [Wednesday 02 June 2010] [12:18:26] <sustrik>   there's no concept of application thread now
| [Wednesday 02 June 2010] [12:18:30] <sustrik>   i would just say
| [Wednesday 02 June 2010] [12:18:40] <sustrik>   "maximal number of sockets exceeded"
| [Wednesday 02 June 2010] [12:18:46] <sustrik>   it's not precise
| [Wednesday 02 June 2010] [12:18:47] <mato>  sorry, yeah
| [Wednesday 02 June 2010] [12:18:55] <mato>  Maximum btw
| [Wednesday 02 June 2010] [12:19:04] <mato>  I don't know where you keep getting maximal from :-)
| [Wednesday 02 June 2010] [12:19:06] <sustrik>   but nobody going to experience the error
| [Wednesday 02 June 2010] [12:19:15] <sustrik>   slovak language
| [Wednesday 02 June 2010] [12:19:23] <mato>  oh, you never know, there may be people using more than 512 threads
| [Wednesday 02 June 2010] [12:19:35] <sustrik>   those are doomed anyway
| [Wednesday 02 June 2010] [12:19:37] <sustrik>   :)
| [Wednesday 02 June 2010] [12:19:51] <mato>  not if you imagine that they're running on some freaky 48-core box :-)
| [Wednesday 02 June 2010] [12:20:07] <sustrik>   supercomputing use cases
| [Wednesday 02 June 2010] [12:20:27] <sustrik>   guys on blue gene should be smart enough to figure it out
| [Wednesday 02 June 2010] [12:20:59] <cremes>    mato: is zmq_init still taking a threads parameter? if so, does your latest doc update explain its meaning better?
| [Wednesday 02 June 2010] [12:21:15] <mato>  cremes: it is, but won't be for 2.0.7
| [Wednesday 02 June 2010] [12:21:29] <mato>  hence the doc update
| [Wednesday 02 June 2010] [12:21:49] <cremes>    so in 2.0.7 the call to zmq_init will no longer take any arguments?
| [Wednesday 02 June 2010] [12:21:54] <mato>  correct
| [Wednesday 02 June 2010] [12:22:01] <cremes>    good
| [Wednesday 02 June 2010] [12:22:06] <sustrik>   not corrext
| [Wednesday 02 June 2010] [12:22:14] <cremes>    oops
| [Wednesday 02 June 2010] [12:22:16] <sustrik>   there's still io_threads parameter
| [Wednesday 02 June 2010] [12:22:23] <mato>  yeah, that's right, sorry
| [Wednesday 02 June 2010] [12:22:23] <sustrik>   size of working thread pool
| [Wednesday 02 June 2010] [12:22:43] <sustrik>   app_threads and flags is dropped
| [Wednesday 02 June 2010] [12:22:49] <cremes>    ah, ok
| [Wednesday 02 June 2010] [12:23:15] <cremes>    i never understood what app threads were for... 
| [Wednesday 02 June 2010] [12:23:20] <cremes>    but now it doesn't matter
| [Wednesday 02 June 2010] [12:23:24] <mato>  :-)
| [Wednesday 02 June 2010] [12:23:36] <sustrik>   that's why we removed them
| [Wednesday 02 June 2010] [12:23:37] <mato>  cremes: anything else you don't know what its for?
| [Wednesday 02 June 2010] [12:23:43] <mato>  cremes: maybe we can remove that too :-)
| [Wednesday 02 June 2010] [12:23:53] <cremes>    ha!
| [Wednesday 02 June 2010] [12:24:36] <sustrik>   seriously
| [Wednesday 02 June 2010] [12:24:39] <cremes>    let me see... you may want to clarify that zmq_poll can return when *any* event occurs inside the library even if no sockets are readable/writable
| [Wednesday 02 June 2010] [12:25:08] <cremes>    and the usec delay value is the maximum it may block and will likely return earlier
| [Wednesday 02 June 2010] [12:25:15] <sustrik>   yeah, that's kind of confusing
| [Wednesday 02 June 2010] [12:25:42] <cremes>    i know :)
| [Wednesday 02 June 2010] [12:25:58] <sustrik>   i would like to block till timeout expires but people seem to be so much concerned about zmq_poll performance...
| [Wednesday 02 June 2010] [12:27:16] <cremes>    sustrik: that behavior as fine as long as it is documented
| [Wednesday 02 June 2010] [12:27:32] <cremes>    particularly the part that it's possible that no sockets are readable/writable
| [Wednesday 02 June 2010] [12:27:57] <sustrik>   mato: can you add one sentence explaining that?
| [Wednesday 02 June 2010] [12:28:01] <cremes>    i'd like to keep 0mq as fast as possible so that my choice of a slow language (ruby) doesn't hurt as much
| [Wednesday 02 June 2010] [12:28:19] <lvh>   you should probably measure your bottlenecks first
| [Wednesday 02 June 2010] [12:28:33] <lvh>   IO tends to be it but ZMQ is probably a tiny bit of that
| [Wednesday 02 June 2010] [12:28:35] <mato>  sustrik: working on it now
| [Wednesday 02 June 2010] [12:29:17] <sustrik>   lvh: that's true wrt latency
| [Wednesday 02 June 2010] [12:29:34] <sustrik>   as for throughput it should be as fast as possible
| [Wednesday 02 June 2010] [12:29:47] <sustrik>   because network stack is called only once in a while
| [Wednesday 02 June 2010] [12:30:03] <sustrik>   so it most cases 0mq overhead is the only overhead there is
| [Wednesday 02 June 2010] [12:30:37] <sustrik>   exact timeouts on zmq_poll require one call to gettimeofday per invocation
| [Wednesday 02 June 2010] [12:30:49] <sustrik>   that can slow the whole thing down
| [Wednesday 02 June 2010] [12:32:49] <mato>  sustrik: so poll returns any time, even if there are no events and timeout has not yet expired?
| [Wednesday 02 June 2010] [12:33:40] <sustrik>   yes
| [Wednesday 02 June 2010] [12:33:58] <sustrik>   the only guarantee is that it won't return _after_ the timeout expired
| [Wednesday 02 June 2010] [12:34:14] <mato>  IMPORTANT: The _zmq_poll()_ function may return *before* the 'timeout' period
| [Wednesday 02 June 2010] [12:34:15] <mato>  has expired even if no events have been signaled.
| [Wednesday 02 June 2010] [12:34:17] <mato>  this should do?
| [Wednesday 02 June 2010] [12:34:27] <mato>  right after the RETURN value section
| [Wednesday 02 June 2010] [12:34:28] <sustrik>   cremes?
| [Wednesday 02 June 2010] [12:35:55] <sustrik>   looks like he's away, i, for myself, am happy with the wording
| [Wednesday 02 June 2010] [12:35:59] <mato>  ok
| [Wednesday 02 June 2010] [12:36:24] <mato>  poll is a hack anyway and needs to be redone :)
| [Wednesday 02 June 2010] [12:36:47] <sustrik>   yeah, but the exact timeout would be a problem anyway :|
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: 03Martin Lucina 07master * r7c9b09b 10/ (7 files): 
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: Documentation: Flow control, zmq_socket(3)
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: Mostly Flow control and additions to zmq_socket(3)
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: Removed/changed lots of text regarding message queues
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: More fixes for 2.0.7 changes - http://bit.ly/d24DAg
| [Wednesday 02 June 2010] [12:38:36] <mato>  sustrik: ok, committed
| [Wednesday 02 June 2010] [12:38:56] <mato>  sustrik: please take a look at the beginning of zmq_socket(3) and tell me if the added text is correct and helpful or not
| [Wednesday 02 June 2010] [12:39:11] <sustrik>   lemme see
| [Wednesday 02 June 2010] [12:44:04] <sustrik>   very nice
| [Wednesday 02 June 2010] [12:44:10] <mato>  thanks
| [Wednesday 02 June 2010] [12:44:35] <mato>  i wanted to emphasize the many-to-many and multiple endpoints 
| [Wednesday 02 June 2010] [12:44:43] <sustrik>   yes, that's good
| [Wednesday 02 June 2010] [12:44:53] <sustrik>   it should be pointed out explicitly
| [Wednesday 02 June 2010] [12:45:15] <mato>  great, then this should help
| [Wednesday 02 June 2010] [12:45:22] <mato>  sustrik: beer & pizza?
| [Wednesday 02 June 2010] [12:45:38] <sustrik>   i've just ate
| [Wednesday 02 June 2010] [12:45:48] <sustrik>   beer?
| [Wednesday 02 June 2010] [12:46:03] <mato>  beer is good, but i need food too
| [Wednesday 02 June 2010] [12:46:17] <sustrik>   where do you want to go?
| [Wednesday 02 June 2010] [12:46:29] <mato>  somewhere outside
| [Wednesday 02 June 2010] [12:46:38] <sustrik>   it's *COLD*
| [Wednesday 02 June 2010] [12:46:53] <mato>  is it? i thought not really
| [Wednesday 02 June 2010] [12:47:01] <sustrik>   14 degrees or something
| [Wednesday 02 June 2010] [12:47:18] <mato>  sustrik: ok how about randal? that has been and pizza
| [Wednesday 02 June 2010] [12:47:29] <mato>  sustrik: and no concert tonight, i just checked
| [Wednesday 02 June 2010] [12:47:33] <sustrik>   is it open now?
| [Wednesday 02 June 2010] [12:47:39] <mato>  yes, every day
| [Wednesday 02 June 2010] [12:47:47] <sustrik>   ok then
| [Wednesday 02 June 2010] [12:47:59] <mato>  see you there at half past seven then?
| [Wednesday 02 June 2010] [12:48:11] <sustrik>   more or less
| [Wednesday 02 June 2010] [12:48:20] <sustrik>   i have few emails to answer still
| [Wednesday 02 June 2010] [12:48:28] <mato>  ok
| [Wednesday 02 June 2010] [12:55:22] <cremes>    mato, sustrik: the zmq_poll rewording is fine
| [Wednesday 02 June 2010] [12:55:38] <sustrik>   ack
| [Wednesday 02 June 2010] [15:03:33] <lvh>   What's the recommended thing for debian stable packages?
| 
| *** Logfile started
| *** on Thu Jun 3 02:17:03 2010
| 
| [Thursday 03 June 2010] [02:17:03] Topic    The channel topic is "Welcome!".
| [Thursday 03 June 2010] [02:17:03] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Thursday 03 June 2010] [02:17:09] Mode Channel modes: no messages from outside, topic protection
| [Thursday 03 June 2010] [02:17:09] Created  This channel was created on 2010-02-05 10:44.
| 
| *** Logfile started
| *** on Thu Jun 3 02:24:46 2010
| 
| [Thursday 03 June 2010] [02:24:46] Topic    The channel topic is "Welcome!".
| [Thursday 03 June 2010] [02:24:46] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Thursday 03 June 2010] [02:24:52] Mode Channel modes: no messages from outside, topic protection
| [Thursday 03 June 2010] [02:24:52] Created  This channel was created on 2010-02-05 10:44.
| [Thursday 03 June 2010] [03:24:05] <sbeaulois_> hello
| [Thursday 03 June 2010] [03:27:05] <versificateur>  hello everyone!
| [Thursday 03 June 2010] [03:28:00] <versificateur>  I have some difficulties to reach messges sent by zeromq
| [Thursday 03 June 2010] [03:28:52] <versificateur>  when I connect to hosts other than localhost
| [Thursday 03 June 2010] [03:29:55] <versificateur>  the connection is opened but i get no message from the server
| [Thursday 03 June 2010] [03:30:42] <versificateur>  however it's works fine in local
| [Thursday 03 June 2010] [03:30:42] <guido_g>    show source in paste-bin
| [Thursday 03 June 2010] [03:31:00] <guido_g>    all other things are guessing :)
| [Thursday 03 June 2010] [03:34:14] <versificateur>  http://pastebin.com/5pWd2mFc
| [Thursday 03 June 2010] [03:34:25] <versificateur>  this is the server
| [Thursday 03 June 2010] [03:36:06] <versificateur>  http://pastebin.com/NvCZ3157
| [Thursday 03 June 2010] [03:36:25] <versificateur>  and the test i wrote based on pyzmq example
| [Thursday 03 June 2010] [03:37:42] <guido_g>    ok
| [Thursday 03 June 2010] [03:38:08] <guido_g>    can you check if the server is listening on all ips of the server?
| [Thursday 03 June 2010] [03:38:25] <guido_g>    on linux netstat would do the job
| [Thursday 03 June 2010] [03:38:34] <guido_g>    netstat -tanp
| [Thursday 03 June 2010] [03:38:46] <versificateur>  yes it's listening
| [Thursday 03 June 2010] [03:38:55] <sustrik>    i think the problem is that you exit the sender before it's able to send the message
| [Thursday 03 June 2010] [03:39:16] <sustrik>    try sleeping for a while before you exit the sender
| [Thursday 03 June 2010] [03:41:23] <versificateur>  but the same code works well when zeromq subscriber and publisher are on the same machine
| [Thursday 03 June 2010] [03:41:50] <guido_g>    yes, because there is no network involved, completely different behaviour
| [Thursday 03 June 2010] [03:41:53] <sustrik>    i assume that's because loopback is faster than inter-machine communication
| [Thursday 03 June 2010] [03:42:20] <sustrik>    so it local case the message manages to get through before the application quits
| [Thursday 03 June 2010] [03:43:01] <versificateur>  okay i'll try sleeping
| [Thursday 03 June 2010] [03:43:17] <versificateur>  after sendin??
| [Thursday 03 June 2010] [03:43:50] <guido_g>    yes
| [Thursday 03 June 2010] [03:44:07] <guido_g>    just to make sure that mq has time to send
| [Thursday 03 June 2010] [03:44:40] <versificateur>  i'll start with huge value and decrease gradually
| [Thursday 03 June 2010] [03:45:04] <sustrik>    one second should do
| [Thursday 03 June 2010] [03:50:15] <versificateur>  i tried with 5 second but received nothing
| [Thursday 03 June 2010] [03:52:10] <sustrik>    another possibility:
| [Thursday 03 June 2010] [03:52:30] <sustrik>    do you start the subscriber fast enough?
| [Thursday 03 June 2010] [03:52:43] <sustrik>    i see there's a sleep in the code to allow subscriber to connect
| [Thursday 03 June 2010] [03:53:16] <sustrik>    do you start it within 1 second after starting the publisher?
| [Thursday 03 June 2010] [03:54:40] <sustrik>    versificateur: let me explain how pub/sub is supposed to work
| [Thursday 03 June 2010] [03:55:08] <sustrik>    the idea is that publisher is a long-lived application that broadcast continuous stream of messages
| [Thursday 03 June 2010] [03:55:28] <sustrik>    the subscribers connect to the publisher and start receiving the stream at some point
| [Thursday 03 June 2010] [03:56:43] <versificateur>  it's what publisher do
| [Thursday 03 June 2010] [03:56:55] <versificateur>  my publisher do
| [Thursday 03 June 2010] [03:57:09] <sustrik>    does it run in loop?
| [Thursday 03 June 2010] [03:57:30]   * sustrik doesn't speak python
| [Thursday 03 June 2010] [03:57:45] <sustrik>    my impression is that it publishes a message and quits
| [Thursday 03 June 2010] [03:58:07] <sustrik>    rather than transmitting a continuous stream
| [Thursday 03 June 2010] [03:58:33] <versificateur>  not really . it open a connection (bind) 
| [Thursday 03 June 2010] [03:58:50] <versificateur>  and send every message
| [Thursday 03 June 2010] [03:59:17] <versificateur>  he receive from an upstream application
| [Thursday 03 June 2010] [04:00:20]   * sustrik is lost in the python code :)
| [Thursday 03 June 2010] [04:00:27] <sustrik>    where should i look for the loop?
| [Thursday 03 June 2010] [04:01:49] <sustrik>    it's clear up to line 34
| [Thursday 03 June 2010] [04:01:56] <sustrik>    then i get lost
| [Thursday 03 June 2010] [04:02:22] <versificateur>  http://pastebin.com/pdNkax6c
| [Thursday 03 June 2010] [04:02:44] <versificateur>  okay i'll resume basically what the application do
| [Thursday 03 June 2010] [04:03:06]   * sustrik is listening
| [Thursday 03 June 2010] [04:03:42] <versificateur>  it receive a GET request through a WSGI python server
| [Thursday 03 June 2010] [04:03:43] <guido_g>    ahhh it's running in web-server
| [Thursday 03 June 2010] [04:04:23] <versificateur>  yes it's the last code i send
| [Thursday 03 June 2010] [04:05:42] <versificateur>  but before running the WSGI server it start the zeromq publisher
| [Thursday 03 June 2010] [04:06:27] <versificateur>  with import bmpMessageHandler on line 4
| [Thursday 03 June 2010] [04:07:55] <sustrik>    ok, so it  does publish a continuous stream of messages
| [Thursday 03 June 2010] [04:08:28] <versificateur>  and everytime a GET request is send it run the method that send message
| [Thursday 03 June 2010] [04:08:28] <sustrik>    can you check whether there's data over the wire (tcpdump/wireshark)
| [Thursday 03 June 2010] [04:08:31] <sustrik>    ?
| [Thursday 03 June 2010] [04:08:48] <versificateur>  i'll try
| [Thursday 03 June 2010] [04:09:12] <versificateur>  on the publisher or subscriber?
| [Thursday 03 June 2010] [04:09:29] <sustrik>    should be the same
| [Thursday 03 June 2010] [04:09:34] <sustrik>    it's up to you
| [Thursday 03 June 2010] [05:35:23] <mikko>  good morning
| [Thursday 03 June 2010] [05:35:37] <mikko>  man it's hard to get back to work after hols
| [Thursday 03 June 2010] [05:36:07] <mikko>  sustrik: are there any upcoming changes to the polling api?
| [Thursday 03 June 2010] [05:36:25] <sustrik>    hi
| [Thursday 03 June 2010] [05:36:35] <sustrik>    you mean the waitfd thing?
| [Thursday 03 June 2010] [05:36:46] <mikko>  i mean the pollset changes 
| [Thursday 03 June 2010] [05:36:57] <sustrik>    ah, no
| [Thursday 03 June 2010] [05:36:59] <mikko>  adding / removing items to/from pollset
| [Thursday 03 June 2010] [05:37:00] <mikko>  ok
| [Thursday 03 June 2010] [05:37:06] <sustrik>    it'll stay as is in 2.0.7
| [Thursday 03 June 2010] [05:37:14] <mikko>  so making a pollset myself is a sensible thing to do
| [Thursday 03 June 2010] [05:37:24] <sustrik>    yes
| [Thursday 03 June 2010] [05:37:38] <mikko>  cool, because i wrote one some time ago
| [Thursday 03 June 2010] [05:37:44] <mikko>  just need to polish it and push in
| [Thursday 03 June 2010] [05:37:51] <sustrik>    great
| [Thursday 03 June 2010] [05:37:56] <mikko>  thanks
| [Thursday 03 June 2010] [05:38:12] <mikko>  a lot of improvements in 2.0.7
| [Thursday 03 June 2010] [05:41:29] <versificateur>  i finally locate the bug
| [Thursday 03 June 2010] [05:42:21] <versificateur>  it's in the deamon i run to start the WSGI server
| [Thursday 03 June 2010] [05:42:33] <versificateur>  i'l try to fix it
| [Thursday 03 June 2010] [05:42:43] <versificateur>  thanks sustrik
| [Thursday 03 June 2010] [05:43:04] <sustrik>    you are welcome
| [Thursday 03 June 2010] [05:43:48] <sustrik>    versificateur: is it an open source project you are working on?
| [Thursday 03 June 2010] [05:46:14] <versificateur>  not yet but it could become
| [Thursday 03 June 2010] [05:47:29] <sustrik>    if so, it would make sense to link it from zeromq.org site
| [Thursday 03 June 2010] [05:48:02] <sustrik>    webserver<->application server communication is a thing many people would love to use
| [Thursday 03 June 2010] [05:54:12] <versificateur>  of course... and i think it has a lot of sens in a JSON-like oriented data consumption world
| [Thursday 03 June 2010] [06:05:31] <sustrik>    ack
| [Thursday 03 June 2010] [06:06:28] <sustrik>    so if you go open source just ping me and i'll link to your project
| [Thursday 03 June 2010] [07:31:52] <umesh>  I wan to send multicast messages using zeromq 
| [Thursday 03 June 2010] [07:32:06] <umesh>  I wrote the sample code for send and recv 
| [Thursday 03 June 2010] [07:32:18] <umesh>  namely mc_send and mc_recv
| [Thursday 03 June 2010] [07:32:33] <umesh>  first I run mc_recv and then mc_send ...
| [Thursday 03 June 2010] [07:32:57] <umesh>  but message is sent properly from mc_send ... but not received in mc_recv
| [Thursday 03 June 2010] [07:33:27] <umesh>  then I add the delay of 15 seconds in mc_send between zmq_connect and zmq_send api
| [Thursday 03 June 2010] [07:33:41] <umesh>  then mc_recv the message correctly ...
| [Thursday 03 June 2010] [07:34:01] <umesh>  can anyone tell me why this delay of x seconds is required 
| [Thursday 03 June 2010] [07:34:36] <guido_g>    the message is put into the mq io-thread, which runs asynchronoulsly to the main thread
| [Thursday 03 June 2010] [07:34:59] <sustrik>    yea, but the receiver is run first
| [Thursday 03 June 2010] [07:35:05] <guido_g>    so if the main thread exits, the io-thread is terminated and therefore nothing is sent
| [Thursday 03 June 2010] [07:35:12] <sustrik>    ah
| [Thursday 03 June 2010] [07:35:27]   * sustrik forgot :)
| [Thursday 03 June 2010] [07:35:52] <sustrik>    umesh: that may be the problem
| [Thursday 03 June 2010] [07:36:07] <umesh>  guido_g : ok got ...
| [Thursday 03 June 2010] [07:36:14] <sustrik>    the 15 sec slep before send may not be required
| [Thursday 03 June 2010] [07:36:16] <guido_g>    it's sort of *the* standard problem
| [Thursday 03 June 2010] [07:36:21] <sustrik>    try sleeping after the send
| [Thursday 03 June 2010] [07:36:34] <umesh>  then is there any way to avoid the sleep ...
| [Thursday 03 June 2010] [07:36:36] <sustrik>    is it in faq?
| [Thursday 03 June 2010] [07:36:49] <guido_g>    don't know
| [Thursday 03 June 2010] [07:36:53] <sustrik>    umesh: sending in loop
| [Thursday 03 June 2010] [07:37:03] <umesh>  means how i can do io-thread synchronously ...
| [Thursday 03 June 2010] [07:37:15] <sustrik>    0mq is async
| [Thursday 03 June 2010] [07:37:25] <sustrik>    you can try using openpgm directly
| [Thursday 03 June 2010] [07:37:48] <umesh>  i want to do it using zeromq ..
| [Thursday 03 June 2010] [07:38:56] <sustrik>    sorry, it's inherently async (that's what MQ means = message queueing)
| [Thursday 03 June 2010] [07:39:16] <guido_g>    sustrik: nope, it's not in the faq
| [Thursday 03 June 2010] [07:39:17] <sustrik>    guido_g: no mention of it in FAQ
| [Thursday 03 June 2010] [07:39:20] <sustrik>    :)
| [Thursday 03 June 2010] [07:39:21] <guido_g>    :)
| [Thursday 03 June 2010] [07:39:27] <umesh>  one more question : does zeromq send the more than one packter for multicast ?
| [Thursday 03 June 2010] [07:39:44] <sustrik>    packet?
| [Thursday 03 June 2010] [07:40:12] <sustrik>    guido_g: let's think of a faq question...
| [Thursday 03 June 2010] [07:40:15] <umesh>  I am asking this because : when I have no sleep and no messages received ... I still can see some multicast messages in wireshark ...
| [Thursday 03 June 2010] [07:40:39] <sustrik>    those are SPM's right?
| [Thursday 03 June 2010] [07:40:51] <sustrik>    (check the details in wireshark)
| [Thursday 03 June 2010] [07:41:44] <umesh>  SPM means  ?
| [Thursday 03 June 2010] [07:41:52] <sustrik>    type of PGM packet
| [Thursday 03 June 2010] [07:42:13] <guido_g>    the protocol used to control the message flow
| [Thursday 03 June 2010] [07:42:23] <guido_g>    like the special packtes used by tcp
| [Thursday 03 June 2010] [07:42:46] <sustrik>    yesh, there are packets like SPM/NACK/NCF/ODATA/RDATA...
| [Thursday 03 June 2010] [07:43:19] <umesh>  ok
| [Thursday 03 June 2010] [07:43:55] <umesh>  how we can decide these are SPM packtes ? because wireshark does not tell anything related to SPM ...
| [Thursday 03 June 2010] [07:44:02] <sustrik>    guido_g: what avout thisL
| [Thursday 03 June 2010] [07:44:03] <sustrik>    "I send a message to PUB socket, then I quit. The message does not appear at the connected SUB socket. What's wrong?"
| [Thursday 03 June 2010] [07:44:08] <umesh>  like it does for TCP ACK/FIN etc ...
| [Thursday 03 June 2010] [07:44:17] <sustrik>    it should
| [Thursday 03 June 2010] [07:44:29] <sustrik>    PGM dissector is part of wireshark out-of-the-box
| [Thursday 03 June 2010] [07:44:40] <sustrik>    what does it say?
| [Thursday 03 June 2010] [07:44:57] <guido_g>    sustrik: ok, maybe  adding "using pgm/epgm"
| [Thursday 03 June 2010] [07:45:00] <sustrik>    umesh: ah, you are using epgm?
| [Thursday 03 June 2010] [07:45:10] <umesh>  yup
| [Thursday 03 June 2010] [07:45:16] <sustrik>    guido_g: it can happen with tcp as well
| [Thursday 03 June 2010] [07:45:40] <sustrik>    umesh: ah, that's encapsulated PGM, wireshark can dissect that
| [Thursday 03 June 2010] [07:45:42] <sustrik>    try using pgm
| [Thursday 03 June 2010] [07:45:47] <guido_g>    oh well, yes
| [Thursday 03 June 2010] [07:45:55] <sustrik>    (you'll have to run your apps as root)
| [Thursday 03 June 2010] [07:46:02] <guido_g>    i constantly forget that pub/sun is possible via tcp as well :)
| [Thursday 03 June 2010] [07:46:02] <umesh>  ok
| [Thursday 03 June 2010] [07:46:18] <sustrik>    what should the answer be?
| [Thursday 03 June 2010] [07:46:23] <umesh>  but does pgm or epgm has anything to do to related to sleep issue ?
| [Thursday 03 June 2010] [07:46:33] <guido_g>    no
| [Thursday 03 June 2010] [07:46:35] <sustrik>    no, it's the same thing
| [Thursday 03 June 2010] [07:46:36] <umesh>  or it will behave same for both pgm and epgm ?
| [Thursday 03 June 2010] [07:46:38] <sustrik>    almost
| [Thursday 03 June 2010] [07:46:40] <umesh>  ok
| [Thursday 03 June 2010] [07:46:58] <guido_g>    sustrik: what are differences (for mq usage)?
| [Thursday 03 June 2010] [07:47:16] <sustrik>    epgm doesn't have to be run as root
| [Thursday 03 June 2010] [07:47:23] <sustrik>    it's not a standard though
| [Thursday 03 June 2010] [07:47:38] <sustrik>    pgm has to be run as root but it's a standard (RFC3208)
| [Thursday 03 June 2010] [07:48:20] <sustrik>    the consequence, for example, is that wireshark can parse pgm but not epgm
| [Thursday 03 June 2010] [07:48:26] <guido_g>    or with the capabilities set, if you're not root :)
| [Thursday 03 June 2010] [07:48:31] <sustrik>    right
| [Thursday 03 June 2010] [07:49:18] <umesh>  (process:27705): Pgm-WARNING **: PGM protocol requires CAP_NET_RAW capability, e.g. sudo execcap 'cap_net_raw=ep'
| [Thursday 03 June 2010] [07:49:33] <umesh>  this error i am getting when I use pgm instead of epm ...
| [Thursday 03 June 2010] [07:49:33] <sustrik>    "yes
| [Thursday 03 June 2010] [07:49:44] <sustrik>    are you running it as root?
| [Thursday 03 June 2010] [07:49:55] <umesh>  i are run as root ... then no error 
| [Thursday 03 June 2010] [07:50:21] <sustrik>    the whole point is that PGM is defined to be stacked on top of IP directly
| [Thursday 03 June 2010] [07:50:28] <sustrik>    same way as TCP or UDP is
| [Thursday 03 June 2010] [07:50:51] <sustrik>    so the user-space implementation has to use raw IP sockets to implement it
| [Thursday 03 June 2010] [07:51:01] <umesh>  ok .. now its showing spm in wire shark
| [Thursday 03 June 2010] [07:51:03] <sustrik>    but these can be used only be root
| [Thursday 03 June 2010] [07:51:08] <sustrik>    ok
| [Thursday 03 June 2010] [07:51:14] <sustrik>    spm is like a heartbeat
| [Thursday 03 June 2010] [07:51:17] <sustrik>    more or less
| [Thursday 03 June 2010] [07:51:27] <sustrik>    so what happens is that you start the publisher
| [Thursday 03 June 2010] [07:51:32] <sustrik>    and sleep for 15 secs
| [Thursday 03 June 2010] [07:51:53] <sustrik>    during those 15 secs, publisher is sending SPMs once in a while
| [Thursday 03 June 2010] [07:52:02] <sustrik>    everything works as expected
| [Thursday 03 June 2010] [07:52:07] <sustrik>    then you send a message
| [Thursday 03 June 2010] [07:52:25] <sustrik>    but before it gets to the wire you shut down the publisher
| [Thursday 03 June 2010] [07:52:43] <sustrik>    that's it
| [Thursday 03 June 2010] [07:54:01] <umesh>  also this 15s is not predictable time 
| [Thursday 03 June 2010] [07:54:15] <umesh>  some time it can be more or sometime it can be less ...
| [Thursday 03 June 2010] [07:54:26] <sustrik>    it's your code, no?
| [Thursday 03 June 2010] [07:54:30] <umesh>  so what can be the ideal solution to avoid 15 s or sleep 
| [Thursday 03 June 2010] [07:54:30] <sustrik>    sleep (15);
| [Thursday 03 June 2010] [07:54:49] <sustrik>    drop the 15 sec sleep, it's not needed
| [Thursday 03 June 2010] [07:55:03] <sustrik>    what you need to do is to sleep _after_ you send the message
| [Thursday 03 June 2010] [07:55:14] <sustrik>    so the publisher has some time to push the message to the wire
| [Thursday 03 June 2010] [07:55:20] <umesh>  for how much time ?
| [Thursday 03 June 2010] [07:55:22] <umesh>  ok 
| [Thursday 03 June 2010] [07:55:25] <sustrik>    1 ms
| [Thursday 03 June 2010] [07:55:30] <sustrik>    or something
| [Thursday 03 June 2010] [07:55:37] <umesh>  got so even 1 ms will also work ... right eor even less ...
| [Thursday 03 June 2010] [07:55:53] <umesh>  eor* = or 
| [Thursday 03 June 2010] [07:55:54] <umesh>  ok
| [Thursday 03 June 2010] [07:55:56] <umesh>  got
| [Thursday 03 June 2010] [07:55:57] <sustrik>    the latency is in orders of microseconds
| [Thursday 03 June 2010] [07:56:12] <sustrik>    so millisecond should be more than enough
| [Thursday 03 June 2010] [07:58:35] <umesh>  even i micro seconds is also working now ...
| [Thursday 03 June 2010] [07:59:26] <umesh>  also more question ... are REQ/REPLY type of sockets in 0mq syncronous ?
| [Thursday 03 June 2010] [07:59:47] <umesh>  because I haven't seen this issue of sleep for that ...
| [Thursday 03 June 2010] [08:00:21] <sustrik>    they are not, but you cannot experience the problem simply because you wait for reply
| [Thursday 03 June 2010] [08:00:29] <sustrik>    so you cannot quit before the request was sent
| [Thursday 03 June 2010] [08:10:15] <umesh>  ok
| [Thursday 03 June 2010] [08:23:50] <lvh>    What's the recommended thing for debian stable packages?
| [Thursday 03 June 2010] [08:27:06] <mato>   sustrik: ping
| [Thursday 03 June 2010] [08:27:16] <lvh>    I'll compile it if I have to
| [Thursday 03 June 2010] [08:27:17] <mato>   sustrik: will the following do for an update of zmq_tcp(7) for 2.0.7?
| [Thursday 03 June 2010] [08:27:24] <mato>   The flags field consists of a single octet containing various control flags:
| [Thursday 03 June 2010] [08:27:24] <mato>   Bit 0: To Be Continued (TBC). A TBC value of 0 indicates that there are no more message parts to follow; or that the message being sent is not a multi-part message. A TBC value of 1 indicates that the message being sent is a multi-part message and more message parts are to follow.
| [Thursday 03 June 2010] [08:27:30] <mato>   Bits 1-7: Reserved. Bits 1-7 are reserved for future expansion and MUST be set to zero.
| [Thursday 03 June 2010] [08:27:57] <mato>   or do you want to actually explain it in more detail?
| [Thursday 03 June 2010] [08:28:31] <mato>   oh, and of course we can call it MORE if that's the canonical name, I just liked "TBC"
| [Thursday 03 June 2010] [08:37:12] <mato>   sustrik: are you there?
| [Thursday 03 June 2010] [08:50:29] <versificateur>  hi i've a problem again 
| [Thursday 03 June 2010] [08:51:00] <versificateur>  http://pastebin.com/QZJ672jT
| [Thursday 03 June 2010] [08:53:35] <versificateur>  i've this error -> Assertion failed: !inpipe && !outpipe (pair.cpp:47)
| [Thursday 03 June 2010] [08:55:08] <versificateur>  following the muttithread server sustrik wrote i tried to pass a SUBCRIBER message to a thread of P2P
| [Thursday 03 June 2010] [08:55:27] <versificateur>  but it seems that inproc doesn't accept P2P
| [Thursday 03 June 2010] [08:55:53] <versificateur>  if anyone has an idea ...???
| [Thursday 03 June 2010] [11:23:21] <versificateur>  is there anyone tohelp me?
| [Thursday 03 June 2010] [11:42:04] <cremes> versificateur: i'm not as fluent in C as i used to be, so keep that in mind...
| [Thursday 03 June 2010] [11:42:13] <cremes> lines 71 and 77 look wrong to me
| [Thursday 03 June 2010] [11:42:24] <cremes> i don't think you can use P2P/PAIR sockets with the queue device
| [Thursday 03 June 2010] [11:42:45] <cremes> i think you need to make your clients use REQ and your workers use REP sockets
| [Thursday 03 June 2010] [15:22:43] <sustrik>    mato: the text is OK IMO
| [Thursday 03 June 2010] [15:23:06] <sustrik>    MORE is used now, TBC sounded too much like a contagious disease
| [Thursday 03 June 2010] [16:13:02] <sustrik>    mato: would it be possible to remove pgm examples from the build system?
| [Thursday 03 June 2010] [18:15:01] <CIA-17> rbzmq: 03Brian Buchanan 07master * r72d81eb 10/ rbzmq.cpp : add ZMQ.select() wrapper for zmq_poll() function (+6 more commits...) - http://bit.ly/chNoHH
| [Thursday 03 June 2010] [22:02:46] Nick ivan`` is now known as ivan.
| [Thursday 03 June 2010] [23:03:23] Part flaguy48 has left this channel.
| 
| *** Logfile started
| *** on Fri Jun 4 03:05:54 2010
| 
| [Friday 04 June 2010] [03:05:54] Topic  The channel topic is "Welcome!".
| [Friday 04 June 2010] [03:05:54] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Friday 04 June 2010] [03:06:00] Mode   Channel modes: no messages from outside, topic protection
| [Friday 04 June 2010] [03:06:00] Created    This channel was created on 2010-02-05 10:44.
| [Friday 04 June 2010] [03:38:54] <lvh>  Hey.
| [Friday 04 June 2010] [03:39:06] <lvh>  What's the reccomended way to get ZeroMQ running on Debian stable?
| [Friday 04 June 2010] [03:39:30] <lvh>  I've tried manually downloading the libzmq0/zeromq packages, but they require a version of libuuid1 much higher than that in Debian 5.0.
| [Friday 04 June 2010] [03:39:54] <lvh>  Upgrade to testing?
| [Friday 04 June 2010] [04:09:07] <pieterh>  @lvh: grab the git and build from source
| [Friday 04 June 2010] [04:18:21] <lvh>  git master, or some other branch?
| [Friday 04 June 2010] [04:23:32] <sustrik>  lvh: depends on what you want
| [Friday 04 June 2010] [04:23:44] <sustrik>  officially released version is on branch 2.06
| [Friday 04 June 2010] [04:24:01] <sustrik>  trunk is going to be released shortly as version 2.0.7
| [Friday 04 June 2010] [04:44:04] <lvh>  So, for production use, just use the latest release branch. Okay, thanks :-)
| [Friday 04 June 2010] [04:50:51] <sustrik>  you are welcome
| [Friday 04 June 2010] [05:27:52] Part   jugg_ has left this channel.
| [Friday 04 June 2010] [05:29:49] Nick   jugg_ is now known as jugg.
| [Friday 04 June 2010] [06:58:20] <mato> re
| [Friday 04 June 2010] [06:58:34] <mato> sustrik: ack, ok, so MORE instead of TBC, you're right
| [Friday 04 June 2010] [06:58:54] <mato> sustrik: and as for the pgm examples, i'll happily remove those
| [Friday 04 June 2010] [07:38:11] <jugg> does multiple duplicate ZMQ_SUBSCRIBE keep a reference count and require ZMQ_UNSUBSCRIBE for each duplicate subscription?
| [Friday 04 June 2010] [07:46:15] <mato> it's in the doc for ZMQ_UNSUBSCRIBE:
| [Friday 04 June 2010] [07:46:21] <mato> If the socket has several instances of the same filter attached the ZMQ_UNSUBSCRIBE option shall remove only one instance, leaving the rest in place and functional.
| [Friday 04 June 2010] [08:14:50] <jugg> mato: somehow I missed that (I have no idea how).  thanks.
| [Friday 04 June 2010] [08:41:50] <sustrik>  mato: re
| [Friday 04 June 2010] [08:42:21] <mato> sustrik: hi
| [Friday 04 June 2010] [08:42:27] <sustrik>  hi
| [Friday 04 June 2010] [08:42:43] <mato> i have a problem with the helpers in that they need uint64_t, or long long
| [Friday 04 June 2010] [08:43:00] <mato> if i use long long C++ complains that it's not part of the standard :-(
| [Friday 04 June 2010] [08:43:19] <sustrik>  yes, include stdint.hpp
| [Friday 04 June 2010] [08:43:29] <sustrik>  it's ugly but it should work
| [Friday 04 June 2010] [08:43:34] <sustrik>  both under gcc and nsvc
| [Friday 04 June 2010] [08:43:36] <sustrik>  msvc
| [Friday 04 June 2010] [08:50:32] <mato> sustrik: zmqd annoys me, i don't think it should be in the 2.0.7 release at all
| [Friday 04 June 2010] [08:51:05] <sustrik>  you would like to remove it from the trunk?
| [Friday 04 June 2010] [08:51:26] <sustrik>  isn't it sufficient to just left it undocumented?
| [Friday 04 June 2010] [08:51:40] <mato> people will see that this "zmqd" thing is being built
| [Friday 04 June 2010] [08:51:44] <mato> and will get the wrong idea
| [Friday 04 June 2010] [08:52:08] <sustrik>  it has to get in once anyway
| [Friday 04 June 2010] [08:52:19] <sustrik>  either now or later
| [Friday 04 June 2010] [08:52:19] <mato> sustrik: d'you think we could remove it, make the release and then put it back? :-)
| [Friday 04 June 2010] [08:52:51] <mato> sustrik: or at least move it under devices/ and call it zmq_device or something vague like that
| [Friday 04 June 2010] [08:52:53] <sustrik>  if you care so much as to do the work, i won't object
| [Friday 04 June 2010] [08:53:19] <mato> sustrik: i'll do it, but what about the above option?
| [Friday 04 June 2010] [08:53:35] <mato> what is better?
| [Friday 04 June 2010] [08:53:41] <sustrik>  what would be the point?
| [Friday 04 June 2010] [08:53:48] <sustrik>  either leave it or remove it
| [Friday 04 June 2010] [08:53:54] <sustrik>  shrug
| [Friday 04 June 2010] [08:54:48] <mato> well the point is it should replace the existing devices...
| [Friday 04 June 2010] [08:55:20] <mato> the current situation will just confuse people
| [Friday 04 June 2010] [08:55:25] <mato> so let's remove it now
| [Friday 04 June 2010] [08:55:29] <mato> and put it back later
| [Friday 04 June 2010] [08:55:30] <mato> sustrik: ack?
| [Friday 04 June 2010] [08:55:44] <sustrik>  ack
| [Friday 04 June 2010] [09:01:14] <CIA-17>   zeromq2: 03Martin Lucina 07master * rd844a90 10/ (Makefile.am configure.in zmqd/Makefile.am zmqd/zmqd.cpp): zmqd: Removing for now, not ready for 2.0.7 (+6 more commits...) - http://bit.ly/9iefIH
| [Friday 04 June 2010] [09:08:11] <mato> sustrik: ok, all done and committed
| [Friday 04 June 2010] [09:08:16] <mato> sustrik: time to start breaking stuff
| [Friday 04 June 2010] [09:08:34] <sustrik>  ok
| [Friday 04 June 2010] [09:08:46] <sustrik>  let me remove the args from zmq_init
| [Friday 04 June 2010] [09:09:11] <mato> you do that, and remove all the deprecated stuff from zmq.h
| [Friday 04 June 2010] [09:09:21] <mato> and don't forget to update the perf tests
| [Friday 04 June 2010] [09:09:29] <sustrik>  and devices
| [Friday 04 June 2010] [09:09:31] <sustrik>  yes
| [Friday 04 June 2010] [09:24:20] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r67ca7dc 10/ (10 files in 6 dirs): obsolete API elements removed - this commit breaks backward compatibility - http://bit.ly/cLVjTO
| [Friday 04 June 2010] [09:24:25] <sustrik>  mato: done
| [Friday 04 June 2010] [09:24:30] <sustrik>  going to check on win32
| [Friday 04 June 2010] [09:24:46] <mato> sustrik: yup, i will check here on Linux, Solaris, NetBSD
| [Friday 04 June 2010] [09:35:50] <CIA-17>   zeromq2: 03Martin Lucina 07master * r621d741 10/ src/atomic_ptr.hpp : Fix Solaris/NetBSD breakage in atomic_ptr.hpp - http://bit.ly/c24C6Q
| [Friday 04 June 2010] [09:47:43] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r9279938 10/ (6 files in 6 dirs): MSVC build fixed - http://bit.ly/aNzO1F
| [Friday 04 June 2010] [09:50:59] <sustrik>  mato: msvc build is fixed
| [Friday 04 June 2010] [09:51:04] <mato> sustrik: great
| [Friday 04 June 2010] [09:51:09] <sustrik>  however, i believe it braks mingw build
| [Friday 04 June 2010] [09:51:15] <mato> why?
| [Friday 04 June 2010] [09:51:32] <sustrik>  i would expect some include files will be missing
| [Friday 04 June 2010] [09:51:46] <mato> huh?
| [Friday 04 June 2010] [09:52:06] <sustrik>  msvc build uses it's own platform.hpp
| [Friday 04 June 2010] [09:52:16] <sustrik>  which includes win socket headers
| [Friday 04 June 2010] [09:52:32] <sustrik>  this collided with #include <windows.h> in helpers.cpp
| [Friday 04 June 2010] [09:52:34] <sustrik>  so i removed it
| [Friday 04 June 2010] [09:52:51] <sustrik>  however, afaiu mingw build uses standard platform.hpp
| [Friday 04 June 2010] [09:52:54] <mato> can windows.h not be included 2x?
| [Friday 04 June 2010] [09:53:25] <sustrik>  iirc the point in that winsock has to be included _before_ windows.h
| [Friday 04 June 2010] [09:54:00] <mato> i have no idea how a "plain" mingw build works
| [Friday 04 June 2010] [09:54:08] <sustrik>  neither do i
| [Friday 04 June 2010] [09:54:15] <mato> and i suspect that no one does that, or if they do, we've never supported it explicity
| [Friday 04 June 2010] [09:54:33] <sustrik>  what about your win build?
| [Friday 04 June 2010] [09:54:48] <mato> given that a cross-build using mingw does work, then i see no reason for a native one not to
| [Friday 04 June 2010] [09:55:05] <mato> but yes, i should re-check that the cross build still works
| [Friday 04 June 2010] [09:55:10] <sustrik>  please, do
| [Friday 04 June 2010] [09:55:17] <sustrik>  i've changed the source
| [Friday 04 June 2010] [09:55:47] <mato> sustrik: in fact, maybe helpers.h should just include platform.hpp from ../src
| [Friday 04 June 2010] [09:55:54] <mato> would that work for msvc?
| [Friday 04 June 2010] [09:56:01] <sustrik>  i suppose so
| [Friday 04 June 2010] [09:56:53] <sustrik>  ok, change it that way and I retest with MSVC
| [Friday 04 June 2010] [09:57:58] <mato> sustrik: why did you change the snprintf in xmlParser back to sprintf?
| [Friday 04 June 2010] [09:58:40] <mato> sustrik: hang on
| [Friday 04 June 2010] [09:58:54] <mato> sustrik: why do you care about whether or not helpers.hpp includes windows.h?
| [Friday 04 June 2010] [09:58:59] <sustrik>  no snprintf in msvc
| [Friday 04 June 2010] [09:59:19] <sustrik>  because it breaks the build
| [Friday 04 June 2010] [09:59:28] <mato> i don't understand why
| [Friday 04 June 2010] [09:59:35] <mato> the perf tests do not use winsock
| [Friday 04 June 2010] [09:59:55] <sustrik>  but you'll get conflicts
| [Friday 04 June 2010] [10:00:03] <sustrik>  redefinition of symbols
| [Friday 04 June 2010] [10:00:15] <lvh>  Hey! I wanted to get Twisted support for 0MQ a while ago but that kind of fizzled out due to a combination of health problems and technical issues nobody agreed on. I'm going to try again because I think 0MQ support in Twisted would be good for both 0MQ and Twisted (duh). What I think was the critical point of failure was that the interested ZMQ folks didn't really understand Twisted's gory guts and vice versa (Twisted people not
| [Friday 04 June 2010] [10:00:15] <lvh>  understanding what ZMQ really wanted to do). I'm going to reopen the discussion on the Twisted side, but step one is educating people on just how ZMQ (wants to) work. Is there someone who could do a quick (less than 5m) review of the email I'm going to send to the TWisted mailing list to figure out if there are any grave technical mistakes in my understanding of ZMQ?
| [Friday 04 June 2010] [10:00:23] <lvh>  Wow, that was longer than I thought it was.
| [Friday 04 June 2010] [10:00:35] <mato> lvh: maybe it belongs on the mailing list? :-)
| [Friday 04 June 2010] [10:01:01] <lvh>  Which one?
| [Friday 04 June 2010] [10:01:06] <sustrik>  zeromq-dev
| [Friday 04 June 2010] [10:01:10] <sustrik>  i'll review it
| [Friday 04 June 2010] [10:01:17] <mato> sustrik: ah, you get these because stdint.hpp includes platform.hpp, which includes windows.h
| [Friday 04 June 2010] [10:01:17] <sustrik>  others may comment as well
| [Friday 04 June 2010] [10:01:20] <mato> sustrik: right?
| [Friday 04 June 2010] [10:01:24] <sustrik>  mato: right
| [Friday 04 June 2010] [10:01:40] <lvh>  sustrik: Good idea. I'll polish it up some more and then mail zeromq-dev :-)
| [Friday 04 June 2010] [10:01:42] <sustrik>  but i am sure the ordering also matters
| [Friday 04 June 2010] [10:01:51] <sustrik>  lvh: goodo
| [Friday 04 June 2010] [10:02:40] <mato> grr
| [Friday 04 June 2010] [10:02:52] <sustrik>  something like:
| [Friday 04 June 2010] [10:02:59] <sustrik>  #include <windows.h>
| [Friday 04 June 2010] [10:03:05] <sustrik>  #include <winsock2.h>
| [Friday 04 June 2010] [10:03:07] <sustrik>  fail
| [Friday 04 June 2010] [10:03:12] <sustrik>  other way round it's ok
| [Friday 04 June 2010] [10:03:21] <sustrik>  i may be wrong though
| [Friday 04 June 2010] [10:03:36] <sustrik>  it's just a dim memory of this kind of problem
| [Friday 04 June 2010] [10:03:36] <mato> i think you're doing the wrong thing with the msvc platform.hpp
| [Friday 04 June 2010] [10:03:43] <sustrik>  ?
| [Friday 04 June 2010] [10:03:47] <mato> it should not be including windows.h IMO
| [Friday 04 June 2010] [10:04:05] <sustrik>  what would you propose?
| [Friday 04 June 2010] [10:04:45] <mato> i would propose that winsock2.h and windows.h are included inside ifdefs by those components that actually use them
| [Friday 04 June 2010] [10:04:54] <mato> since that is what you're doing with all other system headers
| [Friday 04 June 2010] [10:04:58] <sustrik>  hm, that's lot of files
| [Friday 04 June 2010] [10:05:09] <sustrik>  but yes, it can work that way
| [Friday 04 June 2010] [10:05:21] <mato> yes, but that is consistent with all other platforms
| [Friday 04 June 2010] [10:05:25] <sustrik>  right
| [Friday 04 June 2010] [10:05:27] <sustrik>  let me do it
| [Friday 04 June 2010] [10:05:35] <sustrik>  see you in 10 mins
| [Friday 04 June 2010] [10:05:43] <mato> just stick it inside #ifdef _WIN32
| [Friday 04 June 2010] [10:05:45]     * sustrik is moving to winworld
| [Friday 04 June 2010] [10:10:41] <guido_g>  poor boy :)
| [Friday 04 June 2010] [10:30:11] <CIA-17>   zeromq2: 03Martin Sustrik 07master * rcf048bb 10/ (8 files in 3 dirs): platform.hpp for MSVC contains only very basic stuff - http://bit.ly/aLcqx0
| [Friday 04 June 2010] [10:31:56] <sustrik>  mato: done, try now
| [Friday 04 June 2010] [10:33:48] <mato> sustrik: trying...
| [Friday 04 June 2010] [10:36:50] <mato> sustrik: well, at least you haven't broken it on linux :)
| [Friday 04 June 2010] [10:38:01] <sustrik>  :)
| [Friday 04 June 2010] [10:42:16] <mato> sustrik: i get a bunch of warnings from the cross build about NOMINMAX being redefined in windows.hpp, those weren't there before
| [Friday 04 June 2010] [10:43:16] <sustrik>  try to fix it :)
| [Friday 04 June 2010] [10:43:33] <mato> what is NOMINMAX?
| [Friday 04 June 2010] [10:43:47] <sustrik>  this is exactly why i haven't dared to mess with helper functions :)
| [Friday 04 June 2010] [10:43:58] <sustrik>  windows defines it's own min and max
| [Friday 04 June 2010] [10:44:00] <sustrik>  as macros
| [Friday 04 June 2010] [10:44:10] <sustrik>  those collide with std::min and std::max
| [Friday 04 June 2010] [10:44:22] <sustrik>  so what you do is you define NOMINMAX
| [Friday 04 June 2010] [10:44:28] <sustrik>  then include windows.h
| [Friday 04 June 2010] [10:44:32] <mato> maybe it just needs a #ifndef NOMINMAX, #define 
| [Friday 04 June 2010] [10:44:36] <mato> let me try that
| [Friday 04 June 2010] [10:44:45] <sustrik>  this prevents definition of windows' min & max
| [Friday 04 June 2010] [10:46:52] <jugg> I have a REQ socket connected to an endpoint.  I send a message, and then wait in recv().  However, if the REP socket bound to the endpoint receives the message but dies/disconnects before sending the response, the REQ socket sits forever in recv() and never returns creating a dead lock.  Because when the REP socket comes back online, it doesn't have an requests in its queue so never sends a reply.
| [Friday 04 June 2010] [10:47:26] <sustrik>  jugg: yes, that's a known problem
| [Friday 04 June 2010] [10:47:39] <sustrik>  we are going to fix that by resending the request
| [Friday 04 June 2010] [10:48:14] <sustrik>  at the moment the only thing you can do to avoid it is to poll for reply (zmq_poll + timeout)
| [Friday 04 June 2010] [10:48:38] <sustrik>  when reply doesn't arrive in time just consider it lost and resend
| [Friday 04 June 2010] [10:48:50] <sustrik>  however, all this should be done inside 0mq
| [Friday 04 June 2010] [10:49:09] <sustrik>  it will, but it'll take some more time to get there
| [Friday 04 June 2010] [10:49:45] <jugg> ok, so a near-term fix isn't to be expected?
| [Friday 04 June 2010] [10:50:31] <sustrik>  mato: i would say you are going to implement it, within the scope of your current project, no?
| [Friday 04 June 2010] [10:50:50] <mato> sustrik: guess so
| [Friday 04 June 2010] [10:51:09]     * mato is fighting with the cross-build which is all broken :(
| [Friday 04 June 2010] [10:52:11] <sustrik>  jugg: looks like fix is to expected in near term
| [Friday 04 June 2010] [10:52:23] <jugg> :)
| [Friday 04 June 2010] [10:55:33] <mato> ah, my bad for not using the correct magic incantation
| [Friday 04 June 2010] [11:02:57] <CIA-17>   zeromq2: 03Martin Lucina 07master * r94dfe13 10/ src/windows.hpp : 
| [Friday 04 June 2010] [11:02:57] <CIA-17>   zeromq2: Fix MINGW build
| [Friday 04 June 2010] [11:02:57] <CIA-17>   zeromq2: Mingw seems to define NOMINMAX, so don't redefine it if already defined - http://bit.ly/9k7J9l
| [Friday 04 June 2010] [11:03:31] <mato> sustrik: ok, the cross build almost works; requires hand-patching a pgm include file because steven messed up, but i guess we don't care about that right now
| [Friday 04 June 2010] [11:03:47] <mato> sustrik: and AFAIK steven doesn't care about v2 of openpgm anyway
| [Friday 04 June 2010] [11:04:09] <mato> i just looked and he seems to be developing a version 3 *and* a version 5 :-)
| [Friday 04 June 2010] [11:04:36] <sustrik>  yes, ok
| [Friday 04 June 2010] [11:04:46] <sustrik>  what next?
| [Friday 04 June 2010] [11:05:01] <mato> let me think
| [Friday 04 June 2010] [11:05:12] <mato> 1. write up a draft of the release announcement
| [Friday 04 June 2010] [11:05:34] <mato> 2. put that into NEWS in the distro, moving the non-changelog bits also out of ChangeLog and into NEWS
| [Friday 04 June 2010] [11:06:02] <mato> 3. check that the Debian packaging is sane and put myself in as maintainer
| [Friday 04 June 2010] [11:06:14] <mato> I think that's all; then we can release
| [Friday 04 June 2010] [11:07:24] <sustrik>  ok, i can do 1
| [Friday 04 June 2010] [11:07:29] <mato> yes please
| [Friday 04 June 2010] [11:07:33] <mato> I will do 2 in the mean time
| [Friday 04 June 2010] [11:07:50] <mato> when you have a draft of 1 stick it at the top of NEWS and I'll review it
| [Friday 04 June 2010] [11:07:54] <mato> ack?
| [Friday 04 June 2010] [11:08:48] <sustrik>  ack
| [Friday 04 June 2010] [11:13:14] <CIA-17>   zeromq2: 03Martin Lucina 07master * rbaf659f 10/ (ChangeLog NEWS): Move news from ChangeLog into NEWS - http://bit.ly/dDsRc0
| [Friday 04 June 2010] [11:13:27] <mato> sustrik: look at NEWS, model what you write on the same as is there for 2.0.6
| [Friday 04 June 2010] [11:13:34] <mato> leaving out the bits that don't apply
| [Friday 04 June 2010] [11:44:57] <mato> sustrik: how are you getting on?
| [Friday 04 June 2010] [11:45:25] <mato> sustrik: the debian packaging will have to follow next week, i have a bunch of questions i need to ask adrian
| [Friday 04 June 2010] [11:45:34] <mato> sustrik: since i'm not quite sure that i've got the workflow right
| [Friday 04 June 2010] [11:45:53] <mato> sustrik: so as soon as we have a release announcement we're good to go
| [Friday 04 June 2010] [11:50:55] <sustrik>  on phone
| [Friday 04 June 2010] [11:51:01] <sustrik>  wait a sec
| [Friday 04 June 2010] [11:51:07] <mato> no problem
| [Friday 04 June 2010] [11:59:55] <jugg> http://www.zeromq.org/bindings:c  "C++ binding is the native API of MQ project"  ?
| [Friday 04 June 2010] [12:00:24] <mato> ah, that should be changed
| [Friday 04 June 2010] [12:00:32] <mato> the C API is the "native" API
| [Friday 04 June 2010] [12:00:50] <mato> I think what sustrik meant is that the "C++ binding is included with the core 0MQ distribution"
| [Friday 04 June 2010] [12:01:49] <mato> oh, i see
| [Friday 04 June 2010] [12:01:52] <mato> i'll fix it
| [Friday 04 June 2010] [12:26:15] <sustrik>  mato: re
| [Friday 04 June 2010] [12:26:47] <mato> sustrik: i'm still here...
| [Friday 04 June 2010] [12:27:00] <sustrik>  ok, back to announcement :)
| [Friday 04 June 2010] [12:27:03] <mato> waiting for your draft of what goes in NEWS for 2.0.7
| [Friday 04 June 2010] [12:27:09] <mato> then i will review and add my stuff
| [Friday 04 June 2010] [12:27:13] <sustrik>  ack
| [Friday 04 June 2010] [12:27:44] <sustrik>  what NEWS are you speaking about?
| [Friday 04 June 2010] [12:27:51] <sustrik>  the file seems to be empty
| [Friday 04 June 2010] [12:27:55] <mato> pull git
| [Friday 04 June 2010] [12:28:14] <mato> sustrik: I moved the "interesting" text from ChangeLog into NEWS
| [Friday 04 June 2010] [12:28:26] <mato> leaving the ChangeLog with just... the changes :-)
| [Friday 04 June 2010] [12:28:36] <sustrik>  got it
| [Friday 04 June 2010] [12:31:23] <lvh>  I've sent that mail to zeromq-dev if anyone's interested
| [Friday 04 June 2010] [12:31:40] <lvh>  (but email is an asynchronous process, this is a notification not an interrupt ;-))
| [Friday 04 June 2010] [12:31:49] <sustrik>  mato: pt1
| [Friday 04 June 2010] [12:31:50] <sustrik>  * Multi-hop REQ/REP pattern is fully supprted. This feature allows to put
| [Friday 04 June 2010] [12:31:50] <sustrik>    a device(s) between REP and REP sockets thus allowing for scenarios like
| [Friday 04 June 2010] [12:31:50] <sustrik>    multi-threaded server, shared service queue etc. The whole infrastructure
| [Friday 04 June 2010] [12:31:50] <sustrik>    is transparent to the applications.
| [Friday 04 June 2010] [12:32:27] <lvh>  Huh, I'm not longer a member so I need moderator approval. Wonder how that happened.
| [Friday 04 June 2010] [12:32:37] <sustrik>  lvh: i've approved you
| [Friday 04 June 2010] [12:32:41] <sustrik>  your email
| [Friday 04 June 2010] [12:32:59] <sustrik>  maybe you are subscribed with a different email address?
| [Friday 04 June 2010] [12:33:36] <sustrik>  where's part 1 btw?
| [Friday 04 June 2010] [12:33:38] <lvh>  No, I just checked, for some reason I unsubscribed. No idea why, I don't remember doing that
| [Friday 04 June 2010] [12:33:52] <lvh>  sustrik: Well, that was a month or so back when we were talking about how to implement it
| [Friday 04 June 2010] [12:33:56] <lvh>  that fizzled out
| [Friday 04 June 2010] [12:33:59] <sustrik>  ah, i see
| [Friday 04 June 2010] [12:34:04] <mato> sustrik: write it all up, put it in git, i will review it there
| [Friday 04 June 2010] [12:34:04] <lvh>  so it should really be "try 2" not "part 2"
| [Friday 04 June 2010] [12:34:13] <mato> sustrik: pizza has just arrived, am going to eat, brb
| [Friday 04 June 2010] [12:34:13] <sustrik>  mato: ok
| [Friday 04 June 2010] [12:34:33] <lvh>  Whaaa? now mailman is telling me the confirmation string is bad
| [Friday 04 June 2010] [12:34:52] <lvh>  Oh, wiat, never mind, I'm just being an idiot.
| [Friday 04 June 2010] [12:35:01] <sustrik>  :)
| [Friday 04 June 2010] [12:35:55] <jugg> is there any benefits/tradeoffs documentation/discussion on io_threads?
| [Friday 04 June 2010] [12:36:37] <lvh>  I don't know ZMQ but I know the mechanics it uses
| [Friday 04 June 2010] [12:36:56] <lvh>  I really don't see why you would ever want 2 io_threads unless you can somehow shove long-term blocking disk io into the io thread
| [Friday 04 June 2010] [12:37:30] <lvh>  which afaik doesn't happen very often (does it?)
| [Friday 04 June 2010] [12:37:42] <sustrik>  lvh: two possibilities
| [Friday 04 June 2010] [12:37:54] <sustrik>  1. if your app is extremely network I/O intensive
| [Friday 04 June 2010] [12:38:07] <sustrik>  2. if you need extra low latency
| [Friday 04 June 2010] [12:38:15] <lvh>  I can sort-of understand 2
| [Friday 04 June 2010] [12:38:27] <lvh>  I don't understand why eg epoll would start behaving better for 1
| [Friday 04 June 2010] [12:38:36] <sustrik>  in latter case running i/o threads on two different cpu cores can prevent latency peaks
| [Friday 04 June 2010] [12:38:51] <lvh>  yep
| [Friday 04 June 2010] [12:38:57] <sustrik>  it's not about epoll
| [Friday 04 June 2010] [12:39:13] <lvh>  It's about 1 CPU moving stuff around vs 2 CPUs doing that?
| [Friday 04 June 2010] [12:39:19] <sustrik>  rather about the associated work (such as copying data from kernel to user space)
| [Friday 04 June 2010] [12:39:24] <lvh>  right
| [Friday 04 June 2010] [12:39:37] <lvh>  I guess, I haven't done the benchmarks and I'm assuming you have :)
| [Friday 04 June 2010] [12:39:44] <sustrik>  yes :)
| [Friday 04 June 2010] [12:40:05] <lvh>  is there a way to shove blocking disk IO into the io thread in zmq?
| [Friday 04 June 2010] [12:40:09] <lvh>  I mean a *sane* way.
| [Friday 04 June 2010] [12:41:46] <lvh>  Oh, by the way: how does "Is fully distributed: no central servers to crash, millions of WAN and LAN nodes." apply to things like zmq_forwarder/zmq_queue? AFAICT it doesn't, really?
| [Friday 04 June 2010] [12:42:03] <lvh>  My use case involves decoupling M producers from N consumers. That's what we use AMQP for now.
| [Friday 04 June 2010] [12:45:58] <lvh>  (The three things blocking us from moving to ZeroMQ at the moment are: it doesn't do Twisted yet, Thrift support uncertain for a lot of implementations (even though that's more of a Thrift problem than a ZeroMQ problem), and reliable delivery is a bit hazy)
| [Friday 04 June 2010] [12:50:07] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r9b8f902 10/ NEWS : initial version of 2.0.7 NEWS - http://bit.ly/a8mp7Z
| [Friday 04 June 2010] [12:50:23] <sustrik>  mato: committed "new features" and "interface"
| [Friday 04 June 2010] [12:50:35] <sustrik>  i'll leave "build" part to you
| [Friday 04 June 2010] [12:51:14] <sustrik>  lvh: yes, forwarder/queue is meant
| [Friday 04 June 2010] [12:51:30] <mato> sustrik: ok, going to look at it now
| [Friday 04 June 2010] [12:51:38] <sustrik>  these are not real "central servers"
| [Friday 04 June 2010] [12:51:42] <sustrik>  rather dumb routers
| [Friday 04 June 2010] [12:52:00] <sustrik>  what's thrift?
| [Friday 04 June 2010] [12:52:28] <lvh>  sustrik: Do you know Protocol Buffers?
| [Friday 04 June 2010] [12:52:38] <sustrik>  yes
| [Friday 04 June 2010] [12:52:42] <lvh>  sustrik: Basically, Thrift is something that you describe data structures and services to
| [Friday 04 June 2010] [12:52:44] <lvh>  sustrik: Oh, even better
| [Friday 04 June 2010] [12:52:49] <lvh>  sustrik: thrift = protobufs + rpc
| [Friday 04 June 2010] [12:52:54] <sustrik>  ok, got it
| [Friday 04 June 2010] [12:53:05] <lvh>  sustrik: you describe services and it generates code for a whole bunch of languages
| [Friday 04 June 2010] [12:53:09] <sustrik>  what does it have to do with 0mq?
| [Friday 04 June 2010] [12:53:25] <lvh>  sustrik: it's not 0mq's problem, but I want to put the binary format in zmq messages
| [Friday 04 June 2010] [12:53:31] <sustrik>  can the transport layer be migrated to whatever messaging implementation you like?
| [Friday 04 June 2010] [12:53:37] <lvh>  sustrik: a lot of thrift bindings dont give you the format directly
| [Friday 04 June 2010] [12:53:43] <lvh>  sustrik: yes unless those implementations suck
| [Friday 04 June 2010] [12:53:49] <lvh>  sustrik: like I said, that's not 0mq's problem
| [Friday 04 June 2010] [12:53:53] <sustrik>  ok, i see
| [Friday 04 June 2010] [12:54:01] <sustrik>  reliability: yes
| [Friday 04 June 2010] [12:54:04] <lvh>  sustrik: they just hook it directly into their service code
| [Friday 04 June 2010] [12:54:17] <sustrik>  it'll get better soon though
| [Friday 04 June 2010] [12:54:40] <lvh>  the python thrift code does the right thing, it essentially gives you objects that have serialization methods that return raw bytestrings
| [Friday 04 June 2010] [12:54:50] <lvh>  "raw" makes no sense there, you get the idea
| [Friday 04 June 2010] [12:55:05] <sustrik>  sure
| [Friday 04 June 2010] [12:55:09] <lvh>  sustrik: Cool :-) We can wait, AMQP works fine in production now anywya
| [Friday 04 June 2010] [12:57:24] <mato> sustrik: put devices between REP and REP sockets, you mean REQ and REP sockets?
| [Friday 04 June 2010] [13:01:11] <sustrik>  mato: yes
| [Friday 04 June 2010] [13:01:17] <sustrik>  typo
| [Friday 04 June 2010] [13:03:30] <sustrik>  mato: i have to leave now
| [Friday 04 June 2010] [13:03:39] <sustrik>  anything else i should do?
| [Friday 04 June 2010] [13:04:14] <mato> sustrik: well, if you're happy with me uploading everything and sending out the release announcement, then no
| [Friday 04 June 2010] [13:04:29] <sustrik>  great
| [Friday 04 June 2010] [13:04:40] <mato> ok then
| [Friday 04 June 2010] [13:04:51] <sustrik>  just a note
| [Friday 04 June 2010] [13:04:58] <sustrik>  when sending an announcement
| [Friday 04 June 2010] [13:05:00] <mato> yes?
| [Friday 04 June 2010] [13:05:23] <sustrik>  note that API/ABI have changed and that it may take few days for language bindings to catch up
| [Friday 04 June 2010] [13:05:38] <mato> yes, good point
| [Friday 04 June 2010] [13:06:03] <mato> i'm changing your text a bit, do you mind?
| [Friday 04 June 2010] [13:07:14] <sustrik>  sure, do so
| [Friday 04 June 2010] [13:07:15] <versificateur>    hello
| [Friday 04 June 2010] [13:07:19] <sustrik>  leaving now
| [Friday 04 June 2010] [13:07:22] <sustrik>  see you  later
| [Friday 04 June 2010] [13:07:24] <mato> see you
| [Friday 04 June 2010] [13:08:25] <versificateur>    does the java bindings (jzmq) support rcv multipart??
| [Friday 04 June 2010] [13:08:54] <versificateur>    mato:??
| [Friday 04 June 2010] [13:09:03] <versificateur>    sustrik:??
| [Friday 04 June 2010] [13:09:12] <mato> versificateur: i don't use jzmq, sorry
| [Friday 04 June 2010] [13:09:23] <mato> but there's no reason why it shouldn't
| [Friday 04 June 2010] [13:09:43] <versificateur>    :( thanks
| [Friday 04 June 2010] [13:10:06] <mato> versificateur: if it doesn't work then report a bug :)
| [Friday 04 June 2010] [13:10:48] <versificateur>    okay 
| [Friday 04 June 2010] [13:21:04] <CIA-17>   zeromq2: 03Martin Lucina 07master * re8a9614 10/ NEWS : Update NEWS for 2.0.7 release - http://bit.ly/9Hb3hZ
| [Friday 04 June 2010] [13:31:05] <CIA-17>   zeromq2: 03Martin Lucina 07master * r5c97ff9 10/ NEWS : More NEWS for 2.0.7 - http://bit.ly/cwE7pj
| [Friday 04 June 2010] [13:31:05] <CIA-17>   zeromq2: 03Martin Lucina 07master * r8f51a10 10/ ChangeLog : Update ChangeLog for v2.0.7 - http://bit.ly/cgL2VL
| [Friday 04 June 2010] [14:35:19] <versificateur>    please could you tell what this error refer to??
| [Friday 04 June 2010] [14:35:25] <versificateur>    Assertion failed: !inpipe && !outpipe (pair.cpp:47)
| [Friday 04 June 2010] [23:07:13] <jugg> I'm getting a Segmentation fault from within the first time I call zmq::poll, I haven't put it through a debugger yet...
| [Friday 04 June 2010] [23:08:56] <jugg> is pollitem_t[n].socket expecting a socket pointer?
| [Friday 04 June 2010] [23:09:45] <jugg> hmm, apparently not, nevermind.
| [Saturday 05 June 2010] [00:52:56] <CIA-17> rbzmq: 03Brian Buchanan 07master * ra5e4d99 10/ rbzmq.cpp : fix some type-checking bugs in ZMQ.select() - http://bit.ly/bQsfwP
| [Saturday 05 June 2010] [01:21:17] <CIA-17> rbzmq: 03Brian Buchanan 07master * rd11835f 10/ (rbzmq.cpp zmq.gemspec): Update for ZeroMQ 2.0.7 - http://bit.ly/bIgwVj
| [Saturday 05 June 2010] [01:22:58] <CIA-17> rbzmq: 03Brian Buchanan 07master * rcb96877 10/ (4 files): Update perf tests for 2.0.7 - http://bit.ly/bKk2zC
| [Saturday 05 June 2010] [04:08:50] Nick Nickname already in use. Trying palexander.
| [Saturday 05 June 2010] [04:08:52] Notice   -NickServ- palexander is not a registered nickname.
| [Saturday 05 June 2010] [04:08:52] CTCP Received Version request from frigg.
| [Saturday 05 June 2010] [04:08:53] Topic    The channel topic is "Welcome!".
| [Saturday 05 June 2010] [04:08:53] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Saturday 05 June 2010] [04:08:59] Mode Channel modes: no messages from outside, topic protection
| [Saturday 05 June 2010] [04:08:59] Created  This channel was created on 2010-02-05 10:44.
| [Saturday 05 June 2010] [04:09:02] Notice   -ChanServ- [#rekonq] welcome to rekonq, webkit KDE browser, channel
| [Saturday 05 June 2010] [06:03:23] <oleg_>  hello
| [Saturday 05 June 2010] [07:48:11] <zeromqer>   hey, i'm having some problems following first recipe on the cookbook
| [Saturday 05 June 2010] [07:48:32] <zeromqer>   http://dpaste.com/203476/
| [Saturday 05 June 2010] [07:49:35] <zeromqer>   compiles, and starts up and creates two threads, but doesn't seem to respond to anything
| [Saturday 05 June 2010] [07:50:03] <zeromqer>   also the first fprint doesn't print when i include zmq_recv later on
| [Saturday 05 June 2010] [08:06:27] <jugg>   zeromqer: what version of zeromq are you using?
| [Saturday 05 June 2010] [08:10:15] <zeromqer>   jugg: master from the git repo right now
| [Saturday 05 June 2010] [08:10:51] <zeromqer>   had to change the zmq_inits to use just a single parameter from the pastie
| [Saturday 05 June 2010] [08:12:38] <jugg>   can you paste the REQ handler code?
| [Saturday 05 June 2010] [08:18:53] <zeromqer>   jugg: here's the updated code for both: http://dpaste.com/203484/
| [Saturday 05 June 2010] [08:20:41] <jugg>   does this actually work: zmq_connect(s, "tcp://*:9555");
| [Saturday 05 June 2010] [08:21:06] <mikko>  zmq_connect(s, "tcp://*:9555");
| [Saturday 05 June 2010] [08:21:12] <mikko>  i dont think it does
| [Saturday 05 June 2010] [08:21:17] <mikko>  try specifying ip
| [Saturday 05 June 2010] [08:21:37] <mikko>  does *:9995 bind ok?
| [Saturday 05 June 2010] [08:21:44] <jugg>   there is an assert after binding
| [Saturday 05 June 2010] [08:21:45] <mikko>  i would imagine that it is 0.0.0.0:9995
| [Saturday 05 June 2010] [08:22:36] <zeromqer>   yeah, the assert gives no issues
| [Saturday 05 June 2010] [08:22:52] <zeromqer>   mikko: but i did just try specifying my ip and still no luck
| [Saturday 05 June 2010] [08:23:02] <jugg>   127.0.0.1 ?
| [Saturday 05 June 2010] [08:23:36] <zeromqer>   jugg: yeah, both that and my eth0 ip
| [Saturday 05 June 2010] [08:23:39] <mikko>  and no firewall in between?
| [Saturday 05 June 2010] [08:23:50] <zeromqer>   same computer :P
| [Saturday 05 June 2010] [08:23:59] <mikko>  eth0 might still be firewalled
| [Saturday 05 June 2010] [08:24:26] <jugg>   nothing else jumps out, try "inproc://test" instead.
| [Saturday 05 June 2010] [08:24:28] <zeromqer>   oh, good point. but yeah, no firewall on my machine
| [Saturday 05 June 2010] [08:24:39] <zeromqer>   ah, hm.. good idea
| [Saturday 05 June 2010] [08:26:35] <zeromqer>   jugg: assert fails on the client when i use "inproc://test", anything special i should be doing?
| [Saturday 05 June 2010] [08:27:37] <mikko>  try icp:///tmp/test.sock instead
| [Saturday 05 June 2010] [08:27:47] <mikko>  i had some problems with inproc some time ago as well
| [Saturday 05 June 2010] [08:28:13] <zeromqer>   opps, yeah, i was running them as separate processes anyway... switching to ipc
| [Saturday 05 June 2010] [08:30:42] <zeromqer>   mikko: and now the server bind assert fails... (using "icp:///tmp/test.sock")
| [Saturday 05 June 2010] [08:31:43] <zeromqer>   does zmq_bind set any error messages?
| [Saturday 05 June 2010] [08:33:18] <mikko>  use zmq_strerror
| [Saturday 05 June 2010] [08:35:45] <zeromqer>   ha, "Error occurred during zmq_init(): Protocol not supported"
| [Saturday 05 June 2010] [08:37:13] <zeromqer>   any chance i configured zmq wrong?
| [Saturday 05 June 2010] [08:40:47] <sustrik>    ipc
| [Saturday 05 June 2010] [08:40:49] <sustrik>    not icp
| [Saturday 05 June 2010] [08:44:09] <mikko>  sorry 
| [Saturday 05 June 2010] [08:44:11] <mikko>  my typo
| [Saturday 05 June 2010] [08:50:22] <zeromqer>   mikko: ha, well it survived past both of us! thanks sustrik
| [Saturday 05 June 2010] [08:50:35] <zeromqer>   anyway... server runs, client immediately segfaults
| [Saturday 05 June 2010] [08:51:17] <zeromqer>   here's a backtrace: http://dpaste.com/203497/
| [Saturday 05 June 2010] [08:51:56] <sustrik>    zeromqer: what are you doing?
| [Saturday 05 June 2010] [08:52:40] <sustrik>    looks like you are passing invalid message to recv function
| [Saturday 05 June 2010] [08:52:46] <zeromqer>   hm..
| [Saturday 05 June 2010] [08:54:02] <zeromqer>   sustrik: sweet, i commented out that section and got some communication between server and client
| [Saturday 05 June 2010] [08:57:19] <zeromqer>   does anything look really wrong in section? http://dpaste.com/203498/ (last two stanzas are what i commented out)
| [Saturday 05 June 2010] [09:00:25] <sustrik>    you don't initialise the message
| [Saturday 05 June 2010] [09:00:36] <sustrik>    zmq_msg_init (&response);
| [Saturday 05 June 2010] [09:06:47] <zeromqer>   sustrik: argh.. initialized now, and all working, thanks
| [Saturday 05 June 2010] [09:07:07] <zeromqer>   my only issue is that the now working code over ipc still does nothing over tcp
| [Saturday 05 June 2010] [09:07:49] <sustrik>    show us your test prog
| [Saturday 05 June 2010] [09:11:40] <CIA-17> jzmq: 03Martin Sustrik 07master * r1a16589 10/ (7 files in 3 dirs): updated to match 0MQ/2.0.7 - http://bit.ly/bWgan8
| [Saturday 05 June 2010] [09:11:48] <zeromqer>   sustrik: server.c http://dpaste.com/203503/ and client.c http://dpaste.com/203504/
| [Saturday 05 June 2010] [09:13:40] <zeromqer>   also, if i interrupt them both with gdb, i get an equivalent backtrace: http://dpaste.com/203505/
| [Saturday 05 June 2010] [09:13:52] <sustrik>    zeromqer: you are connecting both sides
| [Saturday 05 June 2010] [09:13:56] <sustrik>    server should bind
| [Saturday 05 June 2010] [09:14:29] <zeromqer>   what? srsly?
| [Saturday 05 June 2010] [09:14:34] <zeromqer>   typo, brb
| [Saturday 05 June 2010] [09:14:48] <sustrik>    jugg: are you still there?
| [Saturday 05 June 2010] [09:14:51] <sustrik>    what assert?
| [Saturday 05 June 2010] [09:15:16] <zeromqer>   works great now!
| [Saturday 05 June 2010] [09:15:20] <sustrik>    :)
| [Saturday 05 June 2010] [09:15:26] <zeromqer>   thanks so much guys
| [Saturday 05 June 2010] [09:15:45] <zeromqer>   sorry if i was a pain, i'm a bit in unfamiliar territory...
| [Saturday 05 June 2010] [09:16:05] <sustrik>    you are welcome
| [Saturday 05 June 2010] [09:16:33] <jugg>   sustrik: yes, the assert in the code example that was pasted.
| [Saturday 05 June 2010] [09:17:36] <sustrik>    i'm lost
| [Saturday 05 June 2010] [09:17:43] <sustrik>    are _you_ seeing the assert?
| [Saturday 05 June 2010] [09:17:56] <sustrik>    or is it zeromqer's assert?
| [Saturday 05 June 2010] [09:18:26] <sustrik>    <mikko> does *:9995 bind ok?
| [Saturday 05 June 2010] [09:18:26] <sustrik>    <jugg> there is an assert after binding
| [Saturday 05 June 2010] [09:18:26] <sustrik>    <mikko> i would imagine that it is 0.0.0.0:9995
| [Saturday 05 June 2010] [09:18:26] <sustrik>    <zeromqer> yeah, the assert gives no issues
| [Saturday 05 June 2010] [09:19:02] <sustrik>    is it the one we just solved or something unrelated
| [Saturday 05 June 2010] [09:19:03] <sustrik>    ?
| [Saturday 05 June 2010] [09:24:11] <jugg>   sustrik: I was simply stating that if the binding failed, zeromqer would see an assert.  I never ran that code.
| [Saturday 05 June 2010] [09:24:30] <sustrik>    ah, ok
| [Saturday 05 June 2010] [09:24:37] <sustrik>    sorry for confusion
| [Saturday 05 June 2010] [09:24:43] <jugg>   np
| [Saturday 05 June 2010] [09:25:56] <jugg>   nice work with the latest round of updates.  Things appear to be working well... the documentation updates are great.  I should have waited a couple of weeks to start learning. :P
| [Saturday 05 June 2010] [09:28:03] <zeromqer>   sustrik: jugg: *:9995 works as well btw, it was all my fault from the beginning :P
| [Saturday 05 June 2010] [09:31:20] <sustrik>    :)
| [Saturday 05 June 2010] [10:05:47] <CIA-17> clrzmq: 03Martin Sustrik 07master * rf8bfa69 10/ (5 files in 5 dirs): updated to match 0MQ/2.0.7 - http://bit.ly/dlnSkU
| 
| *** Logfile started
| *** on Sat Jun 5 12:56:55 2010
| 
| [Saturday 05 June 2010] [12:56:55] Topic    The channel topic is "Welcome!".
| [Saturday 05 June 2010] [12:56:55] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Saturday 05 June 2010] [12:57:01] Mode Channel modes: no messages from outside, topic protection
| [Saturday 05 June 2010] [12:57:01] Created  This channel was created on 2010-02-05 10:44.
| [Saturday 05 June 2010] [12:57:42] <versificateur>  I want to have a server that send message to a list of clients
| [Saturday 05 June 2010] [12:58:44] <versificateur>  but the problem is that client/ server should work without blocking
| [Saturday 05 June 2010] [12:59:09] <versificateur>  when a client send a REQ
| [Saturday 05 June 2010] [12:59:38] <versificateur>  it should be able to send another REQ without leavaing an exception
| [Saturday 05 June 2010] [13:00:22] <versificateur>  due to fact that server can take some times to reply the client
| [Saturday 05 June 2010] [13:00:41] <versificateur>  mikko: do you follow me??
| [Saturday 05 June 2010] [13:06:45] <mikko>  i do
| [Saturday 05 June 2010] [13:07:09] <mikko>  but as far as a i know req/rep pattern works in that kind of sequence
| [Saturday 05 June 2010] [13:07:18] <mikko>  request/reply/request/reply etc
| [Saturday 05 June 2010] [13:09:04] <versificateur>  so no possibility to request/request/send/send ...
| [Saturday 05 June 2010] [13:09:45] <mikko>  what kind of use case is this?
| [Saturday 05 June 2010] [13:09:52] <mikko>  does the server do a lot of processing with the data?
| [Saturday 05 June 2010] [13:11:54] <versificateur>  now if you do a request you have to wait for an reply before sending another request (in REP/REQ pattern)
| [Saturday 05 June 2010] [13:12:38] <mikko>  that's how i've understood req/rep pattern
| [Saturday 05 June 2010] [13:13:16] <versificateur>  but I need to send as much as request I want whitout blocking by waiting the reply
| [Saturday 05 June 2010] [13:13:17] <mikko>  i might be wrong in this as well
| [Saturday 05 June 2010] [13:13:37] <versificateur>  like the PAIR/PAIR pattern
| [Saturday 05 June 2010] [13:14:20] <versificateur>  but the PAIR/PAIR only accept to connections
| [Saturday 05 June 2010] [13:14:30] <versificateur>  two connections
| [Saturday 05 June 2010] [13:16:07] <mikko>  hmm
| [Saturday 05 June 2010] [13:16:19] <mikko>  the way i would probably do it is:
| [Saturday 05 June 2010] [13:16:39] <mikko>  server uses req/rep pattern and also publisher
| [Saturday 05 June 2010] [13:16:55] <mikko>  client sends request, server replies immediately with id-number or uuid 
| [Saturday 05 June 2010] [13:17:16] <mikko>  server processes the data in background and PUBLISHes the result in a topic
| [Saturday 05 June 2010] [13:17:28] <mikko>  the client is subscribed to the topic and receives the reply async
| [Saturday 05 June 2010] [13:17:37] <mikko>  when ever the server is ready to give it
| [Saturday 05 June 2010] [13:17:43] <mikko>  makes sense?
| [Saturday 05 June 2010] [13:19:25] <versificateur>  yes...
| [Saturday 05 June 2010] [13:19:55] <versificateur>  it's a way to resolve the problem
| [Saturday 05 June 2010] [13:20:21] <mikko>  i gotta go to the gym
| [Saturday 05 June 2010] [13:20:26] <mikko>  i'll be back in about 1.5 hours
| [Saturday 05 June 2010] [13:21:06] <versificateur>  thanks for your help and see you later...
| [Saturday 05 June 2010] [13:23:31] Mode ChanServ gives CIA-17 permission to talk.
| [Saturday 05 June 2010] [13:36:22] <CIA-17> rbzmq: 03Brian Buchanan 07master * r998a64a 10/ rbzmq.cpp : fix zmq_send() and zmq_recv() for Ruby 1.9 - http://bit.ly/bsSDT7
| [Saturday 05 June 2010] [13:49:34] <sustrik>    versificateur: is the server sending replies?
| [Saturday 05 June 2010] [13:49:57] <versificateur>  sustrik: yes
| [Saturday 05 June 2010] [13:50:00] <sustrik>    if so, you can use XREQ socket on the client side
| [Saturday 05 June 2010] [13:50:16] <versificateur>  but asynchrously
| [Saturday 05 June 2010] [13:50:18] <sustrik>    it's like REQ but does not force you to wait for answer
| [Saturday 05 June 2010] [13:50:56] <sustrik>    REP side is OK as is for you?
| [Saturday 05 June 2010] [13:52:56] <versificateur>  so XREP allow to send reply without wait for request?
| [Saturday 05 June 2010] [13:53:05] <sustrik>    yes
| [Saturday 05 June 2010] [13:53:54] <sustrik>    you should be aware that during the request transmission ID of the sender is sticked to the request
| [Saturday 05 June 2010] [13:54:09] <sustrik>    when using REQ/REP, 0MQ manages it for you transparently
| [Saturday 05 June 2010] [13:54:19] <sustrik>    with XREP/XREQ you have to manage it by hand
| [Saturday 05 June 2010] [13:54:38] <sustrik>    so when you send message X on the xreq side
| [Saturday 05 June 2010] [13:54:48] <sustrik>    you'll get a two-part message on the xrep side
| [Saturday 05 June 2010] [13:55:06] <sustrik>    first part is the ID of the client that send the request (opaque binary BLOB)
| [Saturday 05 June 2010] [13:55:11] <sustrik>    second part is X
| [Saturday 05 June 2010] [13:55:29] <sustrik>    when you want to send the reply
| [Saturday 05 June 2010] [13:55:47] <sustrik>    you have to stick the client ID in the front of your reply
| [Saturday 05 June 2010] [13:56:01] <sustrik>    so you send a two-part messahe, ID + reply itself
| [Saturday 05 June 2010] [13:56:11] <sustrik>    makes sense?
| [Saturday 05 June 2010] [13:56:55] <versificateur>  yes 
| [Saturday 05 June 2010] [13:57:31] <versificateur>  is there some code examples??
| [Saturday 05 June 2010] [13:57:58] <sustrik>    hm, not really
| [Saturday 05 June 2010] [13:58:20] <sustrik>    you may ask on the mailing list, presumably someone is already using it in that way
| [Saturday 05 June 2010] [13:58:29] <versificateur>  okay
| [Saturday 05 June 2010] [13:58:49] <versificateur>  does the jzmq support it? (in the 2.06 version)
| [Saturday 05 June 2010] [13:59:08] <sustrik>    i think getsockopt is still missing
| [Saturday 05 June 2010] [13:59:48] <sustrik>    it's needed to find out whether message consists of single or multiple parts
| [Saturday 05 June 2010] [14:00:00] <sustrik>    just implement it if needed, it should be easy
| [Saturday 05 June 2010] [14:01:39] <versificateur>  okay... it's the RECV_MORE method?
| [Saturday 05 June 2010] [14:02:27] <sustrik>    in C it's getsockopt (s, ZMQ_RCVMORE, &more, &more_size);
| [Saturday 05 June 2010] [14:02:52] <sustrik>    in java you can either implement generic getsockopt method
| [Saturday 05 June 2010] [14:03:08] <sustrik>    or special getRcvMore ()
| [Saturday 05 June 2010] [14:03:19] <versificateur>  okay
| 
| *** Logfile started
| *** on Sat Jun 5 15:54:00 2010
| 
| [Saturday 05 June 2010] [15:54:00] Topic    The channel topic is "Welcome!".
| [Saturday 05 June 2010] [15:54:00] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Saturday 05 June 2010] [15:54:06] Mode Channel modes: no messages from outside, topic protection
| [Saturday 05 June 2010] [15:54:06] Created  This channel was created on 2010-02-05 10:44.
| [Saturday 05 June 2010] [16:33:31] <versificateur>  mikko: sustrik give me all information
| [Saturday 05 June 2010] [16:33:48] <versificateur>  sustrik: are you there?
| [Saturday 05 June 2010] [16:34:18] <sustrik>    versificateur: yes
| [Saturday 05 June 2010] [16:34:21] <sustrik>    what's up?
| [Saturday 05 June 2010] [16:34:49] <versificateur>  i want to know if java binding support device ZMQ_QUEUE?
| [Saturday 05 June 2010] [16:35:22] <sustrik>    you mean an in-process device?
| [Saturday 05 June 2010] [16:35:37] <versificateur>  yes
| [Saturday 05 June 2010] [16:35:49] <versificateur>  like your multithreaded example
| [Saturday 05 June 2010] [16:36:17] <sustrik>    the zmq_device method is not exposed via java binding
| [Saturday 05 June 2010] [16:36:23] <sustrik>    you would have to add that as well
| [Saturday 05 June 2010] [16:38:02] <versificateur>  a look to jzmq could help?
| [Saturday 05 June 2010] [16:38:37] <sustrik>    i mean you would have to expose the zmq_device function via jzmq
| [Saturday 05 June 2010] [16:38:58] <sustrik>    it's few lines of code afaict
| [Saturday 05 June 2010] [16:39:54] <sustrik>    have a look at how other functions are wrapped and do it in similar manner
| [Saturday 05 June 2010] [16:41:29] <versificateur>  i'll try and send you back the result for approval
| [Saturday 05 June 2010] [16:42:06] <sustrik>    great, that'll make life easier for all the java users of 0mq :)
| [Saturday 05 June 2010] [23:09:11] <postmodern> im having trouble compiling zeromq 2.0.7 on Fedora13
| [Saturday 05 June 2010] [23:09:17] <postmodern> mainly it cannot find libuuid
| [Saturday 05 June 2010] [23:09:28] <postmodern> since fedora installs it to /lib/libuuid.so.1
| [Saturday 05 June 2010] [23:09:40] <postmodern> once i created a libuuid.so symlink to libuuid.so.1, it worked
| [Saturday 05 June 2010] [23:10:44] <postmodern> fedora13 is apparently using libuuid 2.17.2
| [Saturday 05 June 2010] [23:10:59] <postmodern> also there's no uuid/uuid.h only /usr/include/uuid.h
| [Sunday 06 June 2010] [02:53:01] <postmodern>   when did the prototype for zmq_init change
| [Sunday 06 June 2010] [02:53:07] <postmodern>   it used to take 3 arguments, now it only takes 1
| [Sunday 06 June 2010] [17:10:07] <zedas>    sustrik: hey, 2.0.7 had some sudden changes that has completely broken the python module
| [Sunday 06 June 2010] [17:10:34] <zedas>    sustrik: actually, probably all of them except C and C++.  did you talk with anyone before just rolling that out?
| [Sunday 06 June 2010] [17:17:29] <zedas>    sustrik: well i'm attempting to fix the python driver, but if you're going to make API changes at the last minute before releases then that's seriously uncool.
| [Sunday 06 June 2010] [17:17:58] <sustrik>  zedas:hi
| [Sunday 06 June 2010] [17:18:05] <sustrik>  any better idea?
| [Sunday 06 June 2010] [17:18:36] <zedas>    make the change and then wait until all the maintainers catch up
| [Sunday 06 June 2010] [17:19:20] <zedas>    i mean you must have made this change last week right before release because i was trakcing your git and the pyzmq git
| [Sunday 06 June 2010] [17:19:44] <sustrik>  yes, it was made immediately before release
| [Sunday 06 June 2010] [17:20:05] <zedas>    instead, 2.0.7 should have had the old api, and then 2.0.8 could have the new one.
| [Sunday 06 June 2010] [17:20:28] <sustrik>  the problem is with sync of 0mq core and bindings
| [Sunday 06 June 2010] [17:20:37] <sustrik>  bindings are independent projects
| [Sunday 06 June 2010] [17:21:10] <sustrik>  how would you sync in such an environment?
| [Sunday 06 June 2010] [17:21:26] <sustrik>  the real solution is to make bindings make numbered releases
| [Sunday 06 June 2010] [17:21:37] <zedas>    do you have a mailing list?
| [Sunday 06 June 2010] [17:21:51] <sustrik>  go on, propose a solution
| [Sunday 06 June 2010] [17:21:57] <zedas>    you definitely don't sync by just changing the base zmq_init api in a release.
| [Sunday 06 June 2010] [17:22:05] <sustrik>  so?
| [Sunday 06 June 2010] [17:22:26] <zedas>    well that breaks everything.  it's fundamental to many dependencies
| [Sunday 06 June 2010] [17:22:45] <sustrik>  i know, i have no solution though
| [Sunday 06 June 2010] [17:22:59] <zedas>    i suggest this: point releases never change base APIs.  people cna rely on 2.0.7 and 2.0.8 being compilation compatible.
| [Sunday 06 June 2010] [17:23:38] <zedas>    next, if you want to change the API, then you make the decision to boost the 2nd number and people know it.
| [Sunday 06 June 2010] [17:23:55] <zedas>    then, right before you make the API change, release a final point release with the old api, and start on the new one.
| [Sunday 06 June 2010] [17:24:18] <zedas>    that way, i can get the important bug fixes and changes just before the API change, and I can keep working while you can advance the API.
| [Sunday 06 June 2010] [17:24:23] <sustrik>  so you propose maintaining 2 codebases, old compatibility one and a development one?
| [Sunday 06 June 2010] [17:24:35] <zedas>    nope no need for that, since you got git.
| [Sunday 06 June 2010] [17:24:43] <zedas>    if i need 2.0.7 i grab that revision
| [Sunday 06 June 2010] [17:24:52] <sustrik>  backporting of bug fixes?
| [Sunday 06 June 2010] [17:25:06] <zedas>    i'm saying you have a release policy.  dont change the API without doing a point release and then bump the 2nd version number
| [Sunday 06 June 2010] [17:25:33] <zedas>    if someone needs to then they will, but with git backports are way easier
| [Sunday 06 June 2010] [17:25:56] <sustrik>  actually beckward incompatible change should bump the major revision
| [Sunday 06 June 2010] [17:26:03] <zedas>    it's really just a communication policy.  you're saying "you can base your software on point releases"
| [Sunday 06 June 2010] [17:26:29] <sustrik>  so far we've tried to avoid insane version like 27.0.0
| [Sunday 06 June 2010] [17:26:41] <sustrik>  so we've just tagged it as "beta"
| [Sunday 06 June 2010] [17:26:50] <sustrik>  but maybe it's time to freeze the api
| [Sunday 06 June 2010] [17:27:00] <zedas>    yeah but changing zmq_init jsut breaks everything
| [Sunday 06 June 2010] [17:27:20] <zedas>    so when people go to use it, or when i advocate it, people think it's unstable and get turned off
| [Sunday 06 June 2010] [17:27:35] <sustrik>  sure, i am aware of the problem
| [Sunday 06 June 2010] [17:27:44] <sustrik>  what's needed is stable distro
| [Sunday 06 June 2010] [17:27:58] <sustrik>  plus a dev branch
| [Sunday 06 June 2010] [17:28:05] <zedas>    well let me ask, what was the reasoning for changing init?
| [Sunday 06 June 2010] [17:28:25] <sustrik>  the args are no more needed, so it's API cleanup
| [Sunday 06 June 2010] [17:29:17] <sustrik>  basically, it's a tension between trying to keep API clean and a need to support existing users
| [Sunday 06 June 2010] [17:29:48] <zedas>    you can do both, plenty of projects do
| [Sunday 06 June 2010] [17:29:51] <versificateur>    sustrik: have you try to compile the java bindings (jzmq) with new 2.0.7 ??
| [Sunday 06 June 2010] [17:30:02] <sustrik>  versificateur: yes
| [Sunday 06 June 2010] [17:30:15] <sustrik>  it worked for me
| [Sunday 06 June 2010] [17:30:47] <versificateur>    sustrik: it seems that test classes (local_thr...) are broken.. 
| [Sunday 06 June 2010] [17:30:57] <sustrik>  what's the problem?
| [Sunday 06 June 2010] [17:31:32] <sustrik>  zedas: please, do start the discussion of the release policy on the mailing list
| [Sunday 06 June 2010] [17:33:00] <zedas>    hehe whew, hacking generated python C code sucks.
| [Sunday 06 June 2010] [17:33:24] <versificateur>    local_lat.java:36 context(init,int,int) in org.zeromq.ZMQ cannot be applied to (int)
| [Sunday 06 June 2010] [17:33:53] <sustrik>  verisificateur: do you have the latest version?
| [Sunday 06 June 2010] [17:33:59] <versificateur>    ZMQ.Context ctx = ZMQ.context(1);
| [Sunday 06 June 2010] [17:34:31] <sustrik>  hm, have you rebuilt and reinstalled it?
| [Sunday 06 June 2010] [17:34:41] <versificateur>    yes
| [Sunday 06 June 2010] [17:34:58] <zedas>    sustrik versificateur probably the same zmq_init change?
| [Sunday 06 June 2010] [17:35:03] <sustrik>  no stray old version of jzmq somewhere on your paths?
| [Sunday 06 June 2010] [17:35:08] <sustrik>  yes, it's the same thing
| [Sunday 06 June 2010] [17:35:16] <sustrik>  i've changed the jzmq though
| [Sunday 06 June 2010] [17:35:45] <versificateur>    i'll check my paths...
| [Sunday 06 June 2010] [17:36:12] <sustrik>  back to the release policy: i think there should simply be two codebases, the stable one and the experimental one
| [Sunday 06 June 2010] [17:38:00] <zedas>    well i'm screwed.
| [Sunday 06 June 2010] [17:38:14] <zedas>    i'll have to contact the pyzmq author and find out what version of pyrex he's using.
| [Sunday 06 June 2010] [17:38:21] <sustrik>  zedas: sorry about that
| [Sunday 06 June 2010] [17:38:25] <zedas>    hacking the output C code doesn't work at all.
| [Sunday 06 June 2010] [17:38:46] <sustrik>  please do complain about it
| [Sunday 06 June 2010] [17:38:53] <sustrik>  it should be solved in some way
| [Sunday 06 June 2010] [17:39:12] <zedas>    anyway, I *did* manage to merge 0mq into libtask: http://swtch.com/libtask/
| [Sunday 06 June 2010] [17:39:35] <zedas>    so you get coroutines that can process 0mq messages and file/socket I/O off an abstraction from zmq_poll
| [Sunday 06 June 2010] [17:40:09] <sustrik>  what's the project?
| [Sunday 06 June 2010] [17:40:26] <sustrik>  a portability lib?
| [Sunday 06 June 2010] [17:40:37]     * sustrik is checking it
| [Sunday 06 June 2010] [17:40:53] <zedas>    it's a portable abstraction on coroutines in C
| [Sunday 06 June 2010] [17:41:03] <zedas>    super duper fast, but it used plain old poll
| [Sunday 06 June 2010] [17:41:27] <zedas>    so with my little update it uses 0mq poll and then i can use the same abstraction for sockets, files, or 0mq
| [Sunday 06 June 2010] [17:41:41] <zedas>    and it took a tiny bit of changes to work.
| [Sunday 06 June 2010] [17:41:46] <sustrik>  ah, i see
| [Sunday 06 June 2010] [17:42:06] <zedas>    mostly just to see if it'd work :-)
| [Sunday 06 June 2010] [17:42:50] <sustrik>  well, my long term goal is to expose 0MQ via BSD socket API, that would achieve the same goal
| [Sunday 06 June 2010] [17:43:38] <sustrik>  but again, such a thing would break backward compatibility :(
| [Sunday 06 June 2010] [17:43:42] <versificateur>    I didn't found something noticeable in my paths..
| [Sunday 06 June 2010] [17:43:59] <versificateur>    so should i remove all 2.0.6 files
| [Sunday 06 June 2010] [17:44:07] <versificateur>    and reinstall??
| [Sunday 06 June 2010] [17:44:20] <sustrik>  versificateur: let me try myself
| [Sunday 06 June 2010] [17:47:50] <sustrik>  versificateur: hm, it builds ok for me
| [Sunday 06 June 2010] [17:47:59] <sustrik>  maybe you have old 0MQ core still
| [Sunday 06 June 2010] [17:48:11] <sustrik>  have you installed 0MQ/2.0.7?
| [Sunday 06 June 2010] [17:48:16] <versificateur>    yes probably
| [Sunday 06 June 2010] [17:49:17] <sustrik>  were does the context(init,int,int) come from?
| [Sunday 06 June 2010] [17:49:24] <sustrik>  can you check where is it defined?
| [Sunday 06 June 2010] [17:51:05] <versificateur>    yes i'll try
| [Sunday 06 June 2010] [17:51:49] <cremes>   zedas: the ruby ffi bindings are compatible with the 2.0.7 release if you want to dip your toe back into ruby waters... ;)
| [Sunday 06 June 2010] [17:52:15] <cremes>   (or will be when i push 0.5.0 in about 30 minutes)
| [Sunday 06 June 2010] [17:55:36] <sustrik>  let _me_ start the discussion of the stable versions on the mailing list :|
| [Sunday 06 June 2010] [17:59:29] <versificateur>    okay i fix it
| [Sunday 06 June 2010] [18:00:18] <sustrik>  versificatuer: no, do not fix it, just find where it's coming from
| [Sunday 06 June 2010] [18:00:47] <versificateur>    It was my ZMQ.java file
| [Sunday 06 June 2010] [18:01:03] <sustrik>  the one from github?
| [Sunday 06 June 2010] [18:01:05] <versificateur>    I've modifications on the 2.0.6 version
| [Sunday 06 June 2010] [18:01:19] <sustrik>  ah, ok, that explains it
| [Sunday 06 June 2010] [18:02:19] <versificateur>    but now with the 2.0.7 what does the ZMQ.Context(1) mean?
| [Sunday 06 June 2010] [18:02:40] <versificateur>    application? thread?...
| [Sunday 06 June 2010] [18:02:46] <cremes>   versificateur: io threads
| [Sunday 06 June 2010] [18:03:34] <versificateur>    so it's the first arg of the old implementation??
| [Sunday 06 June 2010] [18:04:00] <sustrik>  it's second arg of the old implementation
| [Sunday 06 June 2010] [18:04:22] <sustrik>  api_threads is not needed as you can use 0mq from as many threads as you want now
| [Sunday 06 June 2010] [18:06:04] <sustrik>  zedas: ok, done, i've started the discussion
| [Sunday 06 June 2010] [18:06:30] <sustrik>  let's see what happens
| [Sunday 06 June 2010] [18:06:58] <versificateur>    so taking the multithreaded example i'll have (1) instead of (11,1,0)
| [Sunday 06 June 2010] [18:07:09] <sustrik>  yes
| [Sunday 06 June 2010] [18:12:38] <versificateur>    I made the Device port to jzmq
| [Sunday 06 June 2010] [18:13:00] <sustrik>  great
| [Sunday 06 June 2010] [18:13:10] <versificateur>    i'll test it and ask you for a pull request
| [Sunday 06 June 2010] [18:13:26] <sustrik>  thanks!
| [Sunday 06 June 2010] [18:32:53] <zedas>    sweet, 0mq works great with libtask
| [Sunday 06 June 2010] [18:33:19] <zedas>    i'm able to slam the hell out of it with 0mq req/rep messages and also do full socket hits and serve files.
| [Sunday 06 June 2010] [18:38:41] <zedas>    http://dpaste.de/o5xx/ here's the end result
| [Sunday 06 June 2010] [18:38:48] <zedas>    very nice.
| [Sunday 06 June 2010] [18:48:40] <foysavas> zedas: coroutines? but event-driven is all the fad right now :P
| [Sunday 06 June 2010] [18:49:38] <foysavas> actually coroutines make a lot of sense for a web server, under what conditions would you have a task reschedule itself?
| [Sunday 06 June 2010] [18:50:22] <zedas>    foysavas: well it's event-driven, just done with coroutines :-)
| [Sunday 06 June 2010] [18:51:27] <foysavas> ah, true, you're just saw that you're using zmq_poll
| [Sunday 06 June 2010] [19:02:32] <foysavas> sustrik: btw, if you make two branches, one stable, one dev, make stable 'master'
| [Sunday 06 June 2010] [19:03:30] <foysavas> not sure why it's so popular to do otherwise
| [Sunday 06 June 2010] [19:20:05] <foysavas> sustrik: also, i just wrote up some D bindings for zmq. any chance of linking to them from the zeromq site, once i put them up on github?
| 
| *** Logfile started
| *** on Sun Jun 6 19:51:08 2010
| 
| [Sunday 06 June 2010] [19:51:08] Topic  The channel topic is "Welcome!".
| [Sunday 06 June 2010] [19:51:08] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Sunday 06 June 2010] [19:51:13] Mode   Channel modes: no messages from outside, topic protection
| [Sunday 06 June 2010] [19:51:13] Created    This channel was created on 2010-02-05 10:44.
| [Sunday 06 June 2010] [20:06:07] <mikko>    foysavas: try again tomorrow
| [Sunday 06 June 2010] [20:06:13] <mikko>    foysavas: sustrik can help you on that
| [Sunday 06 June 2010] [22:12:56] <silassewell>  I understand that its not a priority right now (or possibly at all), but I was wondering if anyone was aware of any type of security mechanism successfully being layered on top of zeromq (something like tls as opposed to ipsec)?
| [Sunday 06 June 2010] [22:32:25] <mikko>    its a complicated issue
| [Sunday 06 June 2010] [22:32:52] <mikko>    the topic has come up more than once
| [Sunday 06 June 2010] [22:33:19] <mikko>    the problematic thing is different needs people have and especially when you have more complex messaging topologies
| [Sunday 06 June 2010] [22:33:28] <mikko>    such as forwarding devices that are not trusted etc
| [Sunday 06 June 2010] [22:37:01] <silassewell>  yeah, I'm not looking for a builtin / standard solution, I was just wondering if anyone had heard of someone successfully deploying zeromq in an untrusted environment
| [Sunday 06 June 2010] [22:38:12] <mikko>    i would imagine something like pub/priv key signing would work
| [Sunday 06 June 2010] [22:38:18] <mikko>    adds some overhead to the messages
| [Sunday 06 June 2010] [22:38:45] <mikko>    or just encryption
| [Sunday 06 June 2010] [22:38:56] <mikko>    are you looking to hide the messages or guarantee integrity?
| [Sunday 06 June 2010] [22:40:39] <silassewell>  hide the message and authenticate the sender
| [Sunday 06 June 2010] [22:41:04] <mikko>    i guess you could follow similar pattern to email?
| [Sunday 06 June 2010] [22:42:09] <silassewell>  yeah, I'll start experimenting with it, I just wanted to see if anyone had done it before I began
| [Sunday 06 June 2010] [23:50:13] <jugg> http://api.zeromq.org/zmq_cpp.html doesn't document the overloaded poll() interface, ie, that poll() can be called with or without a timeout value; if without, defaults to -1, eg. no timeout.
| [Monday 07 June 2010] [01:02:05] <jugg> hmm, is it not possible to unbind/disconnect a socket from an endpoint?  It seems I have to close the socket, in which case all connections and bindings for that socket are lost.
| [Monday 07 June 2010] [01:10:26] Notice -NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Monday 07 June 2010] [01:10:26] Notice -NickServ- You are now identified for travlr.
| [Monday 07 June 2010] [01:10:26] CTCP   Received Version request from frigg.
| [Monday 07 June 2010] [01:10:28] Topic  The channel topic is "Welcome!".
| [Monday 07 June 2010] [01:10:28] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Monday 07 June 2010] [01:10:28] Notice -ChanServ- [#rekonq] welcome to rekonq, webkit KDE browser, channel
| [Monday 07 June 2010] [01:10:34] Mode   Channel modes: no messages from outside, topic protection
| [Monday 07 June 2010] [01:10:34] Created    This channel was created on 2010-02-05 10:44.
| [Monday 07 June 2010] [02:02:31] Notice -NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Monday 07 June 2010] [02:02:31] Notice -NickServ- You are now identified for travlr.
| [Monday 07 June 2010] [02:02:31] CTCP   Received Version request from frigg.
| [Monday 07 June 2010] [02:02:33] Topic  The channel topic is "Welcome!".
| [Monday 07 June 2010] [02:02:33] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Monday 07 June 2010] [02:02:33] Notice -ChanServ- [#rekonq] welcome to rekonq, webkit KDE browser, channel
| [Monday 07 June 2010] [02:02:39] Mode   Channel modes: no messages from outside, topic protection
| [Monday 07 June 2010] [02:02:39] Created    This channel was created on 2010-02-05 10:44.
| [Monday 07 June 2010] [02:37:57] <sustrik>  zedas: nice, is the libtask project repo available online?
| [Monday 07 June 2010] [02:38:14] <sustrik>  it may make sense to link to it from zeromq.org website
| [Monday 07 June 2010] [02:38:48] <sustrik>  foysavas: yes, please do put the D binding to the github
| [Monday 07 June 2010] [02:39:05] <sustrik>  then let me know and I link it from zeromq.org
| [Monday 07 June 2010] [02:39:08] <zedas>    sustrik: "repo" is a bit of a stretch http://swtch.com/libtask/
| [Monday 07 June 2010] [02:39:13] <zedas>    but i'll have something up
| [Monday 07 June 2010] [02:39:22] <sustrik>  thanks, let me know then
| [Monday 07 June 2010] [02:39:35] <sustrik>  this stuff looks really useful
| [Monday 07 June 2010] [02:39:42] <sustrik>  it would be shame to let it die
| [Monday 07 June 2010] [02:43:34] <sustrik>  jugg: good catch about the zmq_poll in C++
| [Monday 07 June 2010] [02:43:53] <sustrik>  jugg: no it's not possible, you have to close the socket
| [Monday 07 June 2010] [02:44:02] <sustrik>  (following bsd sockets API here)
| [Monday 07 June 2010] [02:47:24] <Olivier_c>    hi all.
| [Monday 07 June 2010] [02:49:41] <sustrik>  hi
| [Monday 07 June 2010] [02:53:52] <Olivier_c>    sustrik, why have you removed zmq_stopwatch_start/stop in 2.07 ? i don't see anything about it in the changelog.   
| [Monday 07 June 2010] [02:54:27] <sustrik>  it was an undocumented feature intended only for internal use
| [Monday 07 June 2010] [02:54:48] <sustrik>  0mq is not intended to be a portability library
| [Monday 07 June 2010] [02:55:00] <sustrik>  the functions were used only by perf tests
| [Monday 07 June 2010] [02:55:28] <sustrik>  now they are in perf/helpers.cpp
| [Monday 07 June 2010] [02:56:07] <Olivier_c>    ok, thanks for the informations :) i should clean my code then .
| [Monday 07 June 2010] [02:56:33] <sustrik>  sorry for inconvenience, we are trying to keep the API as clean as possible
| [Monday 07 June 2010] [02:57:14] <sustrik>  pain now = less trouble afterwards :)
| [Monday 07 June 2010] [02:59:30] <Olivier_c>    no problem. i'm gonna change this, and probably come back with (still) troubles with openpgm :)
| [Monday 07 June 2010] [03:04:16] <CIA-17>   zeromq2: 03Martin Sustrik 07master * rce53d02 10/ doc/zmq_cpp.txt : C++ docs for zmq::poll function improved - http://bit.ly/9IX99E
| [Monday 07 June 2010] [03:04:17] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r784e73a 10/ (ChangeLog NEWS): Merge branch 'master' of git@github.com:sustrik/zeromq2 - http://bit.ly/aAMj5O
| [Monday 07 June 2010] [05:21:35] <jugg> what is a sensible way to recover from a REQ/REP deadlock?  How does both sides of the endpoint re-synchronize when things get out of sync?  How does either side ever know things are out of sync?
| [Monday 07 June 2010] [05:22:08] <mikko>    how do they get out of sync?
| [Monday 07 June 2010] [05:24:10] <jugg> a REQ is sent, the REP never replies (it goes away).  When it comes back, REQ never recovers.  (I mentioned this yesterday)
| [Monday 07 June 2010] [05:24:41] <jugg> The mention suggest of using Poll, has this issue:
| [Monday 07 June 2010] [05:25:48] <jugg> the REQ socket state is out of order, so REQ send fails.  ANd because of my above question, that it isn't possible to close a connection, the problem increases, because closing the socket is a problem.
| [Monday 07 June 2010] [05:26:17] <jugg> ie. everytime poll times out, I have to close the socket.
| [Monday 07 June 2010] [05:26:29] <jugg> this interrupts a bunch of other things, so it isn't an acceptable solution.
| [Monday 07 June 2010] [05:26:41] <sustrik>  jugg: yes, that's the current state of affairs
| [Monday 07 June 2010] [05:26:57] <sustrik>  this should be done inside of 0MQ
| [Monday 07 June 2010] [05:27:01] <sustrik>  bit it's not yet
| [Monday 07 June 2010] [05:27:20] <jugg> yes, I"m trying to find a sensible work around.  I htink the only option is closing the socket?
| [Monday 07 June 2010] [05:27:26] <sustrik>  yes
| [Monday 07 June 2010] [05:27:29] <jugg> :( ok
| [Monday 07 June 2010] [05:27:34] <sustrik>  i know :(
| [Monday 07 June 2010] [05:52:23] <mato> re
| [Monday 07 June 2010] [05:52:31] <mato> sustrik: what is this business of moving repositories?
| [Monday 07 June 2010] [05:52:45] <sustrik>  imatix is going to maintain stable version
| [Monday 07 June 2010] [05:53:08] <sustrik>  sustrik/zeromq2 is my playground from now on :)
| [Monday 07 June 2010] [05:53:38] <mato> so it's a fork?
| [Monday 07 June 2010] [05:54:02] <sustrik>  yes, it's a different repo
| [Monday 07 June 2010] [05:54:36] <sustrik>  those who want stable API should use imatix/zeromq
| [Monday 07 June 2010] [05:54:53] <mato> then imatix should prominently announce this somehow
| [Monday 07 June 2010] [05:55:00] <mato> but i guess i'll leave that to imatix
| [Monday 07 June 2010] [05:55:04] <sustrik>  :)
| [Monday 07 June 2010] [05:55:09] <mato> you know
| [Monday 07 June 2010] [05:55:11] <mato> with a roadmap
| [Monday 07 June 2010] [05:55:13] <mato> issue tracker
| [Monday 07 June 2010] [05:55:16] <mato> maintenance plan
| [Monday 07 June 2010] [05:55:19] <sustrik>  yup
| [Monday 07 June 2010] [05:55:19] <mato> and so on :-)
| [Monday 07 June 2010] [05:56:35] <mato> sustrik: so practically, i can keep committing to your repository if i want to make changes?
| [Monday 07 June 2010] [05:57:13] <sustrik>  i am going to play with berkeley sockets api there
| [Monday 07 June 2010] [05:57:45] <sustrik>  so it depends on what you want to commit
| [Monday 07 June 2010] [05:58:05] <sustrik>  if it's say a bugfix that should get to stable version asap, go for imatix/zeromq
| [Monday 07 June 2010] [05:58:43] <mato> sustrik: and you will not be fixing bugs in the stable version? or will you?
| [Monday 07 June 2010] [05:58:48]     * mato is confused
| [Monday 07 June 2010] [05:58:58] <sustrik>  the idea afaiu
| [Monday 07 June 2010] [05:59:13] <sustrik>  is that zeromq/imatix now moves quickly towards the stable version
| [Monday 07 June 2010] [05:59:15] <sustrik>  alpha
| [Monday 07 June 2010] [05:59:16] <sustrik>  rc
| [Monday 07 June 2010] [05:59:17] <sustrik>  etc.
| [Monday 07 June 2010] [05:59:34] <sustrik>  sustrik/zeromq2 is my sandbox
| [Monday 07 June 2010] [06:00:19] <sustrik>  as for the bugs, i'll fix them in both
| [Monday 07 June 2010] [06:00:44] <sustrik>  but imatix/zeromq is more important
| [Monday 07 June 2010] [06:00:49] <sustrik>  as it's meant to be stable
| [Monday 07 June 2010] [06:01:26] <mato> right, but the stability of this fork is decided by imatix presumably
| [Monday 07 June 2010] [06:01:31] <sustrik>  yes
| [Monday 07 June 2010] [06:01:32] <mato> they have a plan
| [Monday 07 June 2010] [06:01:50] <sustrik>  i believe so
| [Monday 07 June 2010] [06:02:42]     * mato is still confused
| [Monday 07 June 2010] [06:02:51] <mato> should i ask imatix about these plans on the mailing list?
| [Monday 07 June 2010] [06:03:15] <sustrik>  up to you
| [Monday 07 June 2010] [06:03:50] <mato> i'm just somewhat upset that the decision appears to have been made without seeking *any* input from the community or contributors
| [Monday 07 June 2010] [06:04:01] <mato> without proposing any roadmap what stable means
| [Monday 07 June 2010] [06:08:05] <sustrik>  the point is people are compaining about unstable APIs
| [Monday 07 June 2010] [06:08:10] <sustrik>  fair enough
| [Monday 07 June 2010] [06:08:12] <mato> people always complain
| [Monday 07 June 2010] [06:08:40] <sustrik>  i think 0mq have reached the point where it's used enough to deserve a stable branch
| [Monday 07 June 2010] [06:08:58] <sustrik>  no point in people using my sandbox for production use :|
| [Monday 07 June 2010] [06:09:02] <mato> my point is that you wrote an email asking for comments on the way forward, and PH just wrote back 12hrs later with an executive decision
| [Monday 07 June 2010] [06:09:12] <sustrik>  i asked him to do so
| [Monday 07 June 2010] [06:10:07] <sustrik>  maintaining a stable branch _is_ an executive decision
| [Monday 07 June 2010] [06:13:13] <mato> sustrik: i find it interesting that my input as the contributor who has been preparing the last few stable releases *for free* is not wanted
| [Monday 07 June 2010] [06:13:55] <sustrik>  sustrik/zeromq2 is *my* repo
| [Monday 07 June 2010] [06:14:27] <sustrik>  i just don't want people to come in and complain about the release policy
| [Monday 07 June 2010] [06:14:31] <sustrik>  it's a sandbox
| [Monday 07 June 2010] [06:14:44] <mato> sustrik: that's what branches are for, damnit
| [Monday 07 June 2010] [06:15:23] <mato> sustrik: you have, let me see, 129 people watching your repository
| [Monday 07 June 2010] [06:15:41] <mato> sustrik: so let's face it, that repository should be the canonical source for 0MQ
| [Monday 07 June 2010] [06:16:04] <mato> or, if not, it should be prominently announced, all over the place, not in an email hidden under "Stable release" on the mailing list
| [Monday 07 June 2010] [06:16:21] <sustrik>  sure, it should
| [Monday 07 June 2010] [06:16:57] <mato> anyway, i will reply on the mailing list
| [Monday 07 June 2010] [06:17:00] <sustrik>  ok
| [Monday 07 June 2010] [07:49:01] <jugg> sustrik: will you be pushing changes to the imatix repo as you work?
| [Monday 07 June 2010] [07:49:13] <sustrik>  jugg: yes
| [Monday 07 June 2010] [07:49:19] <sustrik>  the only point is about the API
| [Monday 07 June 2010] [07:49:39] <sustrik>  people using 0mq in production don't want APIs to be changed
| [Monday 07 June 2010] [07:49:51] <sustrik>  thus we need a "stable" repo
| [Monday 07 June 2010] [07:49:58] <sustrik>  ->imatix/zeromq
| [Monday 07 June 2010] [07:50:20] <sustrik>  my own sustrik/zeromq2 i'll use for experimenting with API
| [Monday 07 June 2010] [07:50:40] <sustrik>  so it's worth of following only is you are interested in reseach-related stuff
| [Monday 07 June 2010] [07:50:53] <sustrik>  research*
| [Monday 07 June 2010] [07:51:50] <sustrik>  does that make sense?
| [Monday 07 June 2010] [07:56:43] <jugg> yes/no.  Even if another repository is made to be the "official" one, I'd still expect the branches shared between the two repositories to remain synched, and any experimental work to be done on branches existing only in your repository.
| [Monday 07 June 2010] [07:58:05] <jugg> I expect the "master" branch to be one of those shared branches that remain sync'd
| [Monday 07 June 2010] [07:59:14] <sustrik>  i just don't want to have the whole project under sustrik account
| [Monday 07 June 2010] [07:59:24] <sustrik>  it's not a one-man show any longer
| [Monday 07 June 2010] [08:00:41] <jugg> makes sense
| [Monday 07 June 2010] [11:24:46] <jugg> while building from source, `./configure --prefix=/some/path`  is this used only for `make install`?  ie, if I re-run ./configure with a different prefix, do I have to rebuild?
| [Monday 07 June 2010] [11:26:47] <sustrik>  jugg: no idea
| [Monday 07 June 2010] [11:27:18] <sustrik>  you should be able to find the answer somewhere in the autools documentation
| [Monday 07 June 2010] [11:27:25] <sustrik>  autotools*
| [Monday 07 June 2010] [11:29:39] <jugg> when doing a full make after changing the prefix, these files differ:
| [Monday 07 June 2010] [11:29:55] <jugg> ./lib/libzmq.a
| [Monday 07 June 2010] [11:29:55] <jugg> ./lib/libzmq.la
| [Monday 07 June 2010] [11:29:55] <jugg> ./lib/pkgconfig/libzmq.pc
| [Monday 07 June 2010] [11:30:18] <jugg> when not doing an make, only the .a and .pc differ.  The .la still points to the old directory.
| [Monday 07 June 2010] [11:31:56] <jugg> but all of the files themselves were placed in the correct (updated) locations.
| [Monday 07 June 2010] [11:33:22] <jugg> wierd that the static lib changes without actually doing a rebuild. ?
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: 03Brian Granger 07master * rafabbb5 10/ (18 files in 7 dirs): 
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: Updating to new 2.0.7 API changes.
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: * Context only takes the number of io threads.
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: * P2P -> PAIR.
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: * No stopwatch.
| [Monday 07 June 2010] [11:56:13] <CIA-17>   pyzmq: * No LWM socket option. - http://bit.ly/9vHx2a
| [Monday 07 June 2010] [11:57:37] <guido_g>  ahhh... time to pull :)
| [Monday 07 June 2010] [14:24:14] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r240fc33 10/ src/tcp_connecter.cpp : minor comment clarification - http://bit.ly/9qdEMQ
| [Monday 07 June 2010] [20:59:24] <jugg> I got this assert in my app when rebooting a peer computer: tcp_connector.cpp:296:    zmq_assert (err == ECONNREFUSED || err == ETIMEDOUT);   Is there a reason that zmq dies if the remote port is unavailable?
| [Monday 07 June 2010] [23:30:22] <jugg> sustrik: github is showing that you committed a comment change on that very assert 9 hours ago... ???  that is very wierd.
| [Tuesday 08 June 2010] [00:58:14] <umesh>   I am wondering if ZeroMQ supports a many to many delivery model.
| [Tuesday 08 June 2010] [00:58:35] <umesh>   The documentation for publish and subscribe mention that it is used to implement a one to many model:
| [Tuesday 08 June 2010] [00:58:35] <umesh>   "The publish-subscribe pattern is used for one-to-many distribution of data from a single publisher to multiple subscribers in a fanout fashion."
| [Tuesday 08 June 2010] [00:58:48] <umesh>   Can multiple entities publish on the same channel and thus make it a many to many model ?
| [Tuesday 08 June 2010] [01:01:59] <sustrik> jugg: the assert tries to capture possible netwrok-related error codes
| [Tuesday 08 June 2010] [01:02:15] <sustrik> can you have a look which error are you exactly experiencing?
| [Tuesday 08 June 2010] [01:02:33] <sustrik> as for the commit it just fixed the comment there, it haven't changed the actual code
| [Tuesday 08 June 2010] [01:03:03] <sustrik> umesh: you have to have zmq_forwarder device in the middle
| [Tuesday 08 June 2010] [01:09:26] <alefka>  hi
| [Tuesday 08 June 2010] [01:10:18] <sustrik> hi
| [Tuesday 08 June 2010] [01:11:03] <umesh>   ok
| [Tuesday 08 June 2010] [01:11:14] <alefka>  I have some questions about 0mq. Could u help me?
| [Tuesday 08 June 2010] [01:11:29] <umesh>   Sustrik: can you explain with very simple example ...
| [Tuesday 08 June 2010] [01:12:02] <sustrik> umesh: have a look here: http://github.com/sustrik/zeromq-chat
| [Tuesday 08 June 2010] [01:12:09] <sustrik> aalefka: yes
| [Tuesday 08 June 2010] [01:12:16] <umesh>   is there are sample code given in the cookbook or anywahere where we have zmq_forwarder in between 
| [Tuesday 08 June 2010] [01:12:20] <umesh>   ok
| [Tuesday 08 June 2010] [01:13:39] <alefka>  I created publisher socket (ZMQ_PUB) and bind it. Can I wait a connection from client on this socket?
| [Tuesday 08 June 2010] [01:14:07] <sustrik> yes
| [Tuesday 08 June 2010] [01:14:18] <sustrik> well, you mean get notified?
| [Tuesday 08 June 2010] [01:14:25] <sustrik> then no
| [Tuesday 08 June 2010] [01:17:35] <alefka>  sustrik: How I can wait? After binding I begin send messages, but because there is no connected subscribers I send this messages in the nowhere
| [Tuesday 08 June 2010] [01:17:58] <sustrik> that's the nature of the thing
| [Tuesday 08 June 2010] [01:18:08] <sustrik> PUB is like a radio transmission
| [Tuesday 08 June 2010] [01:18:20] <sustrik> if noone is listening, the data go to nowhere
| [Tuesday 08 June 2010] [01:18:49] <sustrik> what are you trying to do?
| [Tuesday 08 June 2010] [01:23:49] <alefka>  I need some client/server app which can dispatch about million messages per sec. In my REQ/REP socket tests there is not enough throughput, therefore I trying implement this logic on the PUB/SUB sockets.
| [Tuesday 08 June 2010] [01:27:23] <sustrik> sure
| [Tuesday 08 June 2010] [01:27:40] <sustrik> but why do you need not to drop messages when there's no client?
| [Tuesday 08 June 2010] [01:28:03] <sustrik> how many listerenrs there are in your scenario?
| [Tuesday 08 June 2010] [01:28:07] <sustrik> just a single one?
| [Tuesday 08 June 2010] [01:29:48] <alefka>  sustrik: >> sure. I executed latency tests on a 100 000 messages (16 bytes) and it spend about 5 secs
| [Tuesday 08 June 2010] [01:30:03] <alefka>  sustrik: >> just a single one? : yes
| [Tuesday 08 June 2010] [01:30:43] <sustrik> so all you need is one-to-one communication?
| [Tuesday 08 June 2010] [01:30:55] <sustrik> why aren't you using standard sockets then?
| [Tuesday 08 June 2010] [01:31:59] <sustrik> (there's a PAIR socket for this use case, but it's still experimental and misses features such as reconnection)
| [Tuesday 08 June 2010] [01:35:20] <alefka>  yes. by command of my boss "just test it" :)
| [Tuesday 08 June 2010] [01:36:35] <alefka>  >> (there's a PAIR socket... I will try this feature
| [Tuesday 08 June 2010] [01:38:52] <sustrik> alefka: actually, it won't work
| [Tuesday 08 June 2010] [01:39:09] <sustrik> the problem you are trying to solve is still unresolved in PAIR
| [Tuesday 08 June 2010] [01:39:38] <sustrik> anyway, what's the scenario 0mq is intended to be used in?
| [Tuesday 08 June 2010] [01:39:48] <sustrik> one-to-many data distribution?
| [Tuesday 08 June 2010] [01:40:11] <alefka>  one-to-one
| [Tuesday 08 June 2010] [01:40:54] <sustrik> ok, there's one option
| [Tuesday 08 June 2010] [01:41:11] <sustrik> there are DOWNSTREAM and UPSTREAM sockets
| [Tuesday 08 June 2010] [01:41:20] <sustrik> these are meant for pipelining
| [Tuesday 08 June 2010] [01:41:35] <sustrik> but let's say your one-to-one scenario is a simple pipeline
| [Tuesday 08 June 2010] [01:41:48] <sustrik> use DOWNSTREAM on the publisher side
| [Tuesday 08 June 2010] [01:41:58] <sustrik> and UPSTREAM on the receiver side
| [Tuesday 08 June 2010] [01:42:04] <umesh>   http://www.zeromq.org/code:examples-chat
| [Tuesday 08 June 2010] [01:42:06] <sustrik> the messages should not be dropped
| [Tuesday 08 June 2010] [01:42:09] <umesh>   where can i get this ?
| [Tuesday 08 June 2010] [01:42:18] <sustrik> ?
| [Tuesday 08 June 2010] [01:42:26] <umesh>   its not wirh zeromq sources which I dodnloaded ...
| [Tuesday 08 June 2010] [01:42:29] <umesh>   with*
| [Tuesday 08 June 2010] [01:42:48] <umesh>   the example mentioned in this is not with zeromq sources ..
| [Tuesday 08 June 2010] [01:42:49] <sustrik> it's old outdated tutorial
| [Tuesday 08 June 2010] [01:42:56] <umesh>   ok
| [Tuesday 08 June 2010] [01:43:04] <sustrik> use the github project i've pointed you to
| [Tuesday 08 June 2010] [01:43:08] <umesh>   ok
| [Tuesday 08 June 2010] [01:43:24] <sustrik> see the README file
| [Tuesday 08 June 2010] [01:43:25] <alefka>  How I understand they are contains some buffer inside which stores output/input messages
| [Tuesday 08 June 2010] [01:43:33] <alefka>  is it so?
| [Tuesday 08 June 2010] [01:43:37] <umesh>   I thought this is the more sopisticated example of the link you provided ... therefore just wanted to have a look at it ...
| [Tuesday 08 June 2010] [01:44:02] <sustrik> alefka: yes there are buffers inside sockets
| [Tuesday 08 June 2010] [01:44:15] <sustrik> umesh: it was the old version of the same thing
| [Tuesday 08 June 2010] [01:44:22] <sustrik> some 2 years old :)
| [Tuesday 08 June 2010] [01:45:12] <umesh>   ok
| [Tuesday 08 June 2010] [01:45:33] <umesh>   sustrik: one question ..
| [Tuesday 08 June 2010] [01:45:38] <sustrik> go on
| [Tuesday 08 June 2010] [01:45:42] <alefka>  sustrik: ok
| [Tuesday 08 June 2010] [01:45:50] <umesh>   zmq does not support many to many directly ... right ...
| [Tuesday 08 June 2010] [01:46:25] <sustrik> you mean without device in a middle?
| [Tuesday 08 June 2010] [01:46:26] <umesh>   but this way of doing broker achitecture or many to many will add more latency/delay ... 
| [Tuesday 08 June 2010] [01:46:34] <sustrik> you can do that but it's annoying
| [Tuesday 08 June 2010] [01:46:55] <umesh>   yup ... without device in the middle ...
| [Tuesday 08 June 2010] [01:46:57] <sustrik> you have to bind each publsiher
| [Tuesday 08 June 2010] [01:47:10] <sustrik> and connect to each publisher from each subscriber
| [Tuesday 08 June 2010] [01:47:32] <sustrik> that means subscriber should be aware of all publishers
| [Tuesday 08 June 2010] [01:47:34] <umesh>   which will be better performance wise ...
| [Tuesday 08 June 2010] [01:47:42] <sustrik> yes, it'll be better
| [Tuesday 08 June 2010] [01:47:50] <sustrik> but it's management nightmare :)
| [Tuesday 08 June 2010] [01:47:56] <sustrik> it's up to you
| [Tuesday 08 June 2010] [01:48:13] <umesh>   and when you say annoying ... what is annoying nature in it ...
| [Tuesday 08 June 2010] [01:48:31] <umesh>   ok
| [Tuesday 08 June 2010] [01:48:38] <sustrik> you have to maintail list of publishers at each subscriber
| [Tuesday 08 June 2010] [01:48:48] <umesh>   annoying is subsriber should know publishers ...
| [Tuesday 08 June 2010] [01:48:57] <sustrik> yes
| [Tuesday 08 June 2010] [01:49:14] <umesh>   ok
| [Tuesday 08 June 2010] [01:49:42] <umesh>   thanx ...
| [Tuesday 08 June 2010] [01:49:44] <sustrik> np
| [Tuesday 08 June 2010] [01:50:10] <umesh>   also adding more publishers will be diffcult in that case ...
| [Tuesday 08 June 2010] [01:51:55] <sustrik> yes
| [Tuesday 08 June 2010] [01:52:14] <sustrik> it can be done in opposite way also: publishers have to know subscribers
| [Tuesday 08 June 2010] [01:52:19] <sustrik> but that's even worse
| [Tuesday 08 June 2010] [01:52:40] <umesh>   hmmm ...
| [Tuesday 08 June 2010] [01:52:49] <sustrik> you can still use multicast
| [Tuesday 08 June 2010] [01:53:10] <sustrik> all the publishers publish to the same multicast group
| [Tuesday 08 June 2010] [01:53:25] <sustrik> all the subscribers subscribe to the multicast group
| [Tuesday 08 June 2010] [01:53:33] <sustrik> but it works on LAN only
| [Tuesday 08 June 2010] [01:54:00] <umesh>   yup
| [Tuesday 08 June 2010] [01:54:26] <umesh>   everything has some procs and cons ... better to me looks like is device in the middle ...
| [Tuesday 08 June 2010] [01:54:58] <sustrik> ack
| [Tuesday 08 June 2010] [01:55:08] <umesh>   ack ?
| [Tuesday 08 June 2010] [01:55:32] <sustrik> yes (acknowledged) :)
| [Tuesday 08 June 2010] [01:55:38] <umesh>   ok
| [Tuesday 08 June 2010] [01:55:53] <umesh>   you believe the same ... :)
| [Tuesday 08 June 2010] [01:57:02] <umesh>   one more question : not related to this discussio...
| [Tuesday 08 June 2010] [01:57:16] <umesh>   zmq does not have zmq_select ... why ?
| [Tuesday 08 June 2010] [01:57:30] <umesh>   it does have zmq_poll  ... but not zmq_select ?
| [Tuesday 08 June 2010] [01:58:51] <sustrik> pollsets used in select are in fact bitmaps
| [Tuesday 08 June 2010] [01:59:07] <sustrik> you can use that approach when you fds are integers
| [Tuesday 08 June 2010] [01:59:20] <sustrik> sockets in 0mq are void*
| [Tuesday 08 June 2010] [01:59:27] <sustrik> that doesn't fit to a bitmap
| [Tuesday 08 June 2010] [01:59:48] <umesh>   ok
| [Tuesday 08 June 2010] [02:00:16] <umesh>   is there any way of using standard select with zmq_sockets ...
| [Tuesday 08 June 2010] [02:00:17] <umesh>   ?
| [Tuesday 08 June 2010] [02:01:31] <umesh>   i think no ...
| [Tuesday 08 June 2010] [02:01:42] <umesh>   but still thought asking you ...
| [Tuesday 08 June 2010] [02:09:08] <sustrik> umesh: no way at the moment
| [Tuesday 08 June 2010] [02:09:18] <sustrik> zmq socket is not a file descriptor
| [Tuesday 08 June 2010] [02:09:36] <sustrik> so you cannot use it for polling via *any* standard mechanism
| [Tuesday 08 June 2010] [02:10:02] <sustrik> we'll be moving that way in the future though
| [Tuesday 08 June 2010] [02:12:29] <umesh>   ok
| [Tuesday 08 June 2010] [02:24:32] <umesh>   where is the source code for zmq_server ?
| [Tuesday 08 June 2010] [02:24:38] <umesh>   I did not find any ...
| [Tuesday 08 June 2010] [02:24:43] <sustrik> there's no zmq_server
| [Tuesday 08 June 2010] [02:24:47] <sustrik> where are you looking at?
| [Tuesday 08 June 2010] [02:25:53] <umesh>   http://www.zeromq.org/code:examples-exchange ..
| [Tuesday 08 June 2010] [02:26:03] <umesh>   I also looked at teh sources 
| [Tuesday 08 June 2010] [02:26:07] <umesh>   the*
| [Tuesday 08 June 2010] [02:26:26] <sustrik> it's outdated
| [Tuesday 08 June 2010] [02:26:28] <umesh>   it mentions about zmq_server ...
| [Tuesday 08 June 2010] [02:26:34] <sustrik> i should delete these two papers
| [Tuesday 08 June 2010] [02:26:43] <umesh>   http://www.zeromq.org/code:examples-camera
| [Tuesday 08 June 2010] [02:26:48] <umesh>   even this as well 
| [Tuesday 08 June 2010] [02:26:51] <umesh>   why ?
| [Tuesday 08 June 2010] [02:27:00] <sustrik> it's old documentation
| [Tuesday 08 June 2010] [02:27:05] <umesh>   ok
| [Tuesday 08 June 2010] [02:27:10] <sustrik> it should have been deleted long ago
| [Tuesday 08 June 2010] [02:27:21] <umesh>   is there any new example of this ...
| [Tuesday 08 June 2010] [02:27:32] <sustrik> the one i pointed you to
| [Tuesday 08 June 2010] [02:27:39] <sustrik> is there any problem with it?
| [Tuesday 08 June 2010] [02:28:44] <umesh>   nope ...
| [Tuesday 08 June 2010] [02:29:00] <umesh>   i was just looking at the different code examples ...
| [Tuesday 08 June 2010] [02:29:13] <umesh>   to understand zmq in much better way ...
| [Tuesday 08 June 2010] [02:30:08] <sustrik> dunno, have a look at the blogs
| [Tuesday 08 June 2010] [02:30:24] <sustrik> there's "multithreaded server in 10mins." might be helpful
| [Tuesday 08 June 2010] [02:30:42] <umesh>   also in that chat example you pointed out me ... is there any way to listen to specific events only ...
| [Tuesday 08 June 2010] [02:30:57] <umesh>   we ca do this by selective subscribe ... right ?
| [Tuesday 08 June 2010] [02:31:01] <umesh>   can*
| [Tuesday 08 June 2010] [02:31:05] <sustrik> yes
| [Tuesday 08 June 2010] [02:31:13] <umesh>   instead of subscribing to all messages ...
| [Tuesday 08 June 2010] [02:31:15] <umesh>   ok
| [Tuesday 08 June 2010] [04:28:26] <alefka>  anybody here?
| [Tuesday 08 June 2010] [04:29:28] <guido_g> sure
| [Tuesday 08 June 2010] [04:33:02] <alefka>  guido_g: it seems I found some bug or I'm mistaken. 
| [Tuesday 08 June 2010] [04:36:09] <alefka>  guido_g: why some packets not received when I send them from publisher socket (server side, socket listening) to the client (whos connecting)
| [Tuesday 08 June 2010] [04:38:26] <alefka>  anybody...
| [Tuesday 08 June 2010] [04:49:33] <alefka>  :(
| [Tuesday 08 June 2010] [04:52:22] <sustrik> alfka: i'm here now :)
| [Tuesday 08 June 2010] [04:53:05] <alefka>  sustrik: Hi :)
| [Tuesday 08 June 2010] [04:53:18] <alefka>  it seems I found some bug or I'm mistaken.
| [Tuesday 08 June 2010] [04:53:25] <alefka>  why some packets not received when I send them from publisher socket (server side, socket listening) to the client (whos connecting)
| [Tuesday 08 June 2010] [04:53:48] <sustrik> while the client is _connecting_ and not yet _connected_ the messages are dropped
| [Tuesday 08 June 2010] [04:54:04] <sustrik> as i said, it's like radio transmission
| [Tuesday 08 June 2010] [04:54:06] <alefka>  but waiting a client connection
| [Tuesday 08 June 2010] [04:54:24] <sustrik> ?
| [Tuesday 08 June 2010] [04:54:26] <alefka>  just reading from keyboard char
| [Tuesday 08 June 2010] [04:54:39] <alefka>  but I'm waiting a client connection
| [Tuesday 08 June 2010] [04:54:55] <sustrik> but it's not yet connected, right?
| [Tuesday 08 June 2010] [04:55:20] <sustrik> it's PUB/SUB?
| [Tuesday 08 June 2010] [04:55:45] <sustrik> can you show your test program?
| [Tuesday 08 June 2010] [04:55:53] <alefka>  yes
| [Tuesday 08 June 2010] [04:56:00] <alefka>  how I can send you it?
| [Tuesday 08 June 2010] [04:57:41] <sustrik> it doesn't seem to get through
| [Tuesday 08 June 2010] [04:57:50] <sustrik> paste is to some public board
| [Tuesday 08 June 2010] [04:58:21] <sustrik> or send it be email
| [Tuesday 08 June 2010] [04:59:04] <alefka>  what is your email?
| [Tuesday 08 June 2010] [04:59:22] <sustrik> send it to the mailing list
| [Tuesday 08 June 2010] [04:59:28] <sustrik> or is it private?
| [Tuesday 08 June 2010] [04:59:53] <sustrik> confidential i mean?
| [Tuesday 08 June 2010] [05:00:37] <alefka>  I don't see.
| [Tuesday 08 June 2010] [05:01:15] <alefka>  sustrik@chello089173040080.chello.sk ????
| [Tuesday 08 June 2010] [05:02:07] <sustrik> see here: http://www.zeromq.org/mailing-lists
| [Tuesday 08 June 2010] [05:11:11] <alefka>  files attach to the message or insert into the body?
| [Tuesday 08 June 2010] [05:11:34] <alefka>  *as text
| [Tuesday 08 June 2010] [05:12:59] <sustrik> doesn't matter
| [Tuesday 08 June 2010] [05:20:21] <alefka>  sended
| [Tuesday 08 June 2010] [06:31:20] <versificateur>   hello
| [Tuesday 08 June 2010] [06:32:48] <versificateur>   could someone good in JNI have a look at this?
| [Tuesday 08 June 2010] [06:33:14] <versificateur>   http://pastebin.com/D7bA0ENV
| [Tuesday 08 June 2010] [06:34:04] <versificateur>   I tried to run a java code on it but it crash
| [Tuesday 08 June 2010] [06:34:57] <versificateur>   sustrik: your help is welcome
| [Tuesday 08 June 2010] [06:36:13] <sustrik> versificateur: you have to convrt jobject representing the 0MQ socket to handle to the socket
| [Tuesday 08 June 2010] [06:36:51] <sustrik> iirc the jobject contains the void* stored as jint 
| [Tuesday 08 June 2010] [06:36:58] <sustrik> or something like that
| [Tuesday 08 June 2010] [07:02:23] <versificateur>   i correct it
| [Tuesday 08 June 2010] [07:02:25] <versificateur>   thanks
| [Tuesday 08 June 2010] [07:02:39] <versificateur>   it's seems that it works
| [Tuesday 08 June 2010] [07:03:16] <versificateur>   i'll test with some REQ/REP code
| [Tuesday 08 June 2010] [07:06:40] <umesh>   subscribe to specific topic not working ...
| [Tuesday 08 June 2010] [07:06:56] <umesh>   I am using the simple chat program using forwarder ...
| [Tuesday 08 June 2010] [07:07:08] <umesh>   I want to display the specic messages ...
| [Tuesday 08 June 2010] [07:07:53] <umesh>   so what I did was I subscribed to the specific messages ... using s.setsockopt (ZMQ_SUBSCRIBE, "umesh\x00", 0);
| [Tuesday 08 June 2010] [07:08:06] <umesh>   and i haven't change the code for prompt ...
| [Tuesday 08 June 2010] [07:08:11] <sustrik> the third argument is the size
| [Tuesday 08 June 2010] [07:08:24] <umesh>   ohhh ... i missed it ...
| [Tuesday 08 June 2010] [07:08:27] <umesh>   sorry ...
| [Tuesday 08 June 2010] [07:08:30] <sustrik> :)
| [Tuesday 08 June 2010] [07:08:35] <umesh>   I knew it but ... i forgot ...
| [Tuesday 08 June 2010] [07:10:48] <CIA-17>  zeromq-examples: 03Martin Lucina 07master * r8cee253 10/ zmq-camera.c : Update to 0MQ 2.0.7 API - http://bit.ly/9qJTRz
| [Tuesday 08 June 2010] [07:12:55] <versificateur>   sustrik: if i bind a socket will it be opened or only when i started send/recv data?? 
| [Tuesday 08 June 2010] [07:14:07] <versificateur>   because i bind a PUB socket on a TCP port but executing a netstat command do show it
| [Tuesday 08 June 2010] [07:14:53] <sustrik> bind translates to standard TCP bind
| [Tuesday 08 June 2010] [07:15:03] <sustrik> connect translates to TCP connect
| [Tuesday 08 June 2010] [07:26:20] <CIA-17>  zeromq-examples: 03Martin Lucina 07turbo * r267de4a 10/ zmq-camera.c : Update to 0MQ 2.0.7 API - http://bit.ly/a3fCGF
| [Tuesday 08 June 2010] [07:33:13] <umesh>   in setsocket_opt like s.setsockopt (ZMQ_SUBSCRIBE, "xy.z\x00", 5);
| [Tuesday 08 June 2010] [07:33:23] <umesh>   why it is required to give \x00 ...
| [Tuesday 08 June 2010] [07:33:46] <umesh>   if i just give "xy.z" will also be null terminated ...
| [Tuesday 08 June 2010] [07:33:52] <umesh>   ?
| [Tuesday 08 June 2010] [07:34:39] <guido_g> the \000 is part of the subscription
| [Tuesday 08 June 2010] [07:35:00] <sustrik> it's used as delimiter in the example
| [Tuesday 08 June 2010] [07:35:12] <sustrik> if it's confusing use some other character instead
| [Tuesday 08 June 2010] [07:35:14] <sustrik> like |
| [Tuesday 08 June 2010] [07:35:18] <sustrik> or something
| [Tuesday 08 June 2010] [07:36:48] <umesh>   ok
| [Tuesday 08 June 2010] [07:36:51]    * sustrik thinks the \x00 should be replaced by something more sane in the cookbook...
| [Tuesday 08 June 2010] [07:37:06] <umesh>   its really very confusing ...
| [Tuesday 08 June 2010] [07:37:24] <sustrik> let me see...
| [Tuesday 08 June 2010] [07:37:30] <umesh>   i think in cookbook you can update this ...
| [Tuesday 08 June 2010] [07:37:56] <umesh>   also strlen gives difficulty if we use delimiter as \x00 ..
| [Tuesday 08 June 2010] [07:38:51] <sustrik> umesh: want to do that?
| [Tuesday 08 June 2010] [07:40:50] <umesh>   yup I can also do that ...
| [Tuesday 08 June 2010] [07:40:57] <sustrik> great, thanks!
| [Tuesday 08 June 2010] [07:41:08] <umesh>   but do I have rights to change cookbook text ...
| [Tuesday 08 June 2010] [07:41:16] <sustrik> you have to join the wiki to be able to edit
| [Tuesday 08 June 2010] [07:41:22] <sustrik> see left below
| [Tuesday 08 June 2010] [07:41:22] <umesh>   ok
| [Tuesday 08 June 2010] [07:41:33] <umesh>   I have already joined it ...
| [Tuesday 08 June 2010] [07:41:43] <sustrik> ah, then just edit it
| [Tuesday 08 June 2010] [07:46:21] <umesh>   does password update takes time ...
| [Tuesday 08 June 2010] [07:46:40] <umesh>   i am not able to login ... it says login and password does not match
| [Tuesday 08 June 2010] [07:46:47] <sustrik> :)
| [Tuesday 08 June 2010] [07:46:54] <sustrik> dunno
| [Tuesday 08 June 2010] [07:47:09] <sustrik> maybe you've made type when entering it?
| [Tuesday 08 June 2010] [07:47:13] <sustrik> typo
| [Tuesday 08 June 2010] [07:47:46] <umesh>   confirmed 2 times ...
| [Tuesday 08 June 2010] [07:48:16] <sustrik> ignore it and create a new account
| [Tuesday 08 June 2010] [07:55:54] <umesh>   done 
| [Tuesday 08 June 2010] [07:56:00] <umesh>   check the page once ...
| [Tuesday 08 June 2010] [07:56:12] <umesh>   http://www.zeromq.org/docs:cookbook
| [Tuesday 08 June 2010] [07:56:35] <umesh>   one more question : When I susbscribe to a topic ...
| [Tuesday 08 June 2010] [07:56:52] <umesh>   I get complete message with topic prefix ...
| [Tuesday 08 June 2010] [07:56:59] <umesh>   is it correct behaviour  ?
| [Tuesday 08 June 2010] [07:57:33] <umesh>   because I have assumed that it will only give me the message without topic ...
| [Tuesday 08 June 2010] [08:01:23] <guido_g> where does this assumption come from?
| [Tuesday 08 June 2010] [08:01:33] <guido_g> the topic is part of the (multipart-)message
| [Tuesday 08 June 2010] [08:13:26] <umesh>   it was just my thinking that topic will be removed before giving it to user ... not from any reading ...
| [Tuesday 08 June 2010] [08:16:48] <versificateur>   how can i read ONLY a part of a multipart message with java binding
| [Tuesday 08 June 2010] [08:17:05] <versificateur>   for example with a socket like this
| [Tuesday 08 June 2010] [08:17:16] <versificateur>   jsonSubscriber.setsockopt(ZMQ.SUBSCRIBE, "servers.smpp");
| [Tuesday 08 June 2010] [08:17:32] <sustrik> umesh: look good
| [Tuesday 08 June 2010] [08:17:41] <sustrik> but you forgot this piece: "Messages that receivers are going to subscribe to have to start with a NULL-terminated string (the topic)"
| [Tuesday 08 June 2010] [08:17:53] <sustrik> it's |-terminated now
| [Tuesday 08 June 2010] [08:18:19] <versificateur>   actually i got two messages 
| [Tuesday 08 June 2010] [08:18:49] <sustrik> if you send two messages
| [Tuesday 08 June 2010] [08:18:56] <sustrik> you receive two messages
| [Tuesday 08 June 2010] [08:19:09] <sustrik> there's nothing to do about that
| [Tuesday 08 June 2010] [08:20:01] <umesh>   yup
| [Tuesday 08 June 2010] [08:20:12] <umesh>   I will change that ...
| [Tuesday 08 June 2010] [08:22:06] <umesh>   done the change ...
| [Tuesday 08 June 2010] [08:24:50] <versificateur>   i thought that if subscribe with the channel name i'll only receive one message
| [Tuesday 08 June 2010] [08:25:57] <versificateur>   the message alone, not with the channel name as another message
| [Tuesday 08 June 2010] [08:27:33] <sustrik> it's fifo
| [Tuesday 08 June 2010] [08:27:41] <sustrik> what goes in, get out
| [Tuesday 08 June 2010] [08:28:15] <sustrik> umesh: thx
| [Tuesday 08 June 2010] [08:31:39] <versificateur>   yes I knew... but when i use the python bindings i only receive the message itself not the channel  
| [Tuesday 08 June 2010] [08:33:11] <versificateur>   so what <socket>.setsockopt(ZMQ.SUBSCRIBE, <some channel>); does in java bindings?
| [Tuesday 08 June 2010] [08:35:20] <sustrik> see zmq_setsockopt(3) man page
| [Tuesday 08 June 2010] [08:39:26] <umesh>   in zmq how we can do content based publish/subscrive instead of topic based ...
| [Tuesday 08 June 2010] [08:40:56] <sustrik> you want to add your own matching algorithm?
| [Tuesday 08 June 2010] [08:42:48] <umesh>   yup ...
| [Tuesday 08 June 2010] [08:43:02] <umesh>   how can i do that if I need to do ...
| [Tuesday 08 June 2010] [08:43:23] <umesh>   it not decided yet ... but I am trying to evalute that option as well ... 
| [Tuesday 08 June 2010] [08:54:25] <versificateur>   sustrik: so SUBSCRIBE setsockopt is only a filter ? i'll receive the channel submessage as well as the data submessage?
| [Tuesday 08 June 2010] [08:57:08] <versificateur>   like i started with the python bindings which has recv_multipart that handle each part sent I thought it was like that in java also
| [Tuesday 08 June 2010] [08:57:55] <versificateur>   but i'll have to do my recv multipart myself
| [Tuesday 08 June 2010] [08:58:52] <versificateur>   sustrik: I need more information on device behavior like it's not documented
| [Tuesday 08 June 2010] [09:00:06] <versificateur>   it's seems that it run an infinite loop in background
| [Tuesday 08 June 2010] [09:01:06] <versificateur>   because code after it don't run
| [Tuesday 08 June 2010] [09:03:24] <sustrik> umesh: you have to plug in your own algorithm
| [Tuesday 08 June 2010] [09:03:47] <sustrik> the current algorithm is placed in src/prefix_tree.hpp and .cpp
| [Tuesday 08 June 2010] [09:04:22] <sustrik> versificatuer: there's no such thing as channel and data submessages
| [Tuesday 08 June 2010] [09:04:29] <sustrik> there are just messages
| [Tuesday 08 June 2010] [09:04:34] <sustrik> some of them are single-part
| [Tuesday 08 June 2010] [09:04:40] <sustrik> some of them are multipart
| [Tuesday 08 June 2010] [09:05:08] <sustrik> subscription means 0MQ looks at the message and checks whether it's beginning matches the subscription
| [Tuesday 08 June 2010] [09:05:14] <sustrik> if not so it drops it
| [Tuesday 08 June 2010] [09:05:16] <sustrik> that's it
| [Tuesday 08 June 2010] [09:05:25] <versificateur>   well
| [Tuesday 08 June 2010] [09:05:38] <versificateur>   i understand
| [Tuesday 08 June 2010] [09:05:59] <versificateur>   it's a filter
| [Tuesday 08 June 2010] [09:06:00] <sustrik> versificateur: wrt device, yes it uses your thread to loop
| [Tuesday 08 June 2010] [09:07:23] <versificateur>   ok it's why you put it at the end of your multithreaded example
| [Tuesday 08 June 2010] [09:08:06] <sustrik> yes
| [Tuesday 08 June 2010] [09:08:35] <versificateur>   thanks!
| [Tuesday 08 June 2010] [09:08:37] <sustrik> np
| [Tuesday 08 June 2010] [09:09:20] <versificateur>   i finished test of Device implemetation in java
| [Tuesday 08 June 2010] [09:09:40] <versificateur>   i'll put it on giithub and ask you for a pull equest
| [Tuesday 08 June 2010] [09:14:15] <sustrik> grat, thanks!
| [Tuesday 08 June 2010] [09:21:45] <versificateur>   is  SNDMORE in java bindings implemented to send mutipart message?
| [Tuesday 08 June 2010] [09:24:45] <sustrik> not sure
| [Tuesday 08 June 2010] [09:24:47] <sustrik> let me see
| [Tuesday 08 June 2010] [09:25:46] <sustrik> a-ha it misses
| [Tuesday 08 June 2010] [09:26:44] <sustrik> should go to ZMQ.java
| [Tuesday 08 June 2010] [09:26:46] <sustrik> like this:
| [Tuesday 08 June 2010] [09:26:48] <sustrik> public static final int NOBLOCK = 1;
| [Tuesday 08 June 2010] [09:26:54] <sustrik> public static final int SNDMORE = 2;
| [Tuesday 08 June 2010] [09:27:13] <sustrik> will you add that to your fix?
| [Tuesday 08 June 2010] [09:27:28] <versificateur>   yes
| [Tuesday 08 June 2010] [09:37:59] Nick  impl_ is now known as impl.
| [Tuesday 08 June 2010] [11:36:06] <sustrik> versificateur: there's a question for you on the mailing list
| [Tuesday 08 June 2010] [11:36:39] <versificateur>   susrik: okay 
| [Tuesday 08 June 2010] [11:37:16] <versificateur>   i send the pull request to you only?? or to mato too?
| [Tuesday 08 June 2010] [11:39:58] <versificateur>   sustrik:???
| [Tuesday 08 June 2010] [11:40:40] <sustrik> send it to me
| [Tuesday 08 June 2010] [11:41:28] <sustrik> thx!
| [Tuesday 08 June 2010] [11:42:05] <versificateur>   :)
| [Tuesday 08 June 2010] [11:42:44] <versificateur>   the link to check the mailing list question
| [Tuesday 08 June 2010] [11:42:59] <versificateur>   i don't find it
| [Tuesday 08 June 2010] [12:51:09] <mikko>   sustrik: http://pastebin.com/8c824QBZ
| [Tuesday 08 June 2010] [12:52:13] <mikko>   happens when you dont send/recv/bind/connect
| [Tuesday 08 June 2010] [12:52:17] <mikko>   just create context and socket
| [Tuesday 08 June 2010] [15:32:59] <sustrik> mikko: i think it's OK
| [Tuesday 08 June 2010] [15:33:25] <sustrik> command_t structure that is being sent
| [Tuesday 08 June 2010] [15:33:30] <sustrik> is actually a union
| [Tuesday 08 June 2010] [15:33:56] <sustrik> for this particular command type there is less actual data than sizeof (command_t)
| [Tuesday 08 June 2010] [15:34:09] <sustrik> that's why valgring complains
| [Tuesday 08 June 2010] [16:28:39] <dermoth> Hey there... It's been a while I wantes to ask this; I'm curious about the high water mark
| [Tuesday 08 June 2010] [16:28:51] <dermoth>  /swap options, specifically how they work and where the data is stored...
| [Tuesday 08 June 2010] [16:29:21] <sustrik> dermoth: hi
| [Tuesday 08 June 2010] [16:29:26] <dermoth> hy sustrik 
| [Tuesday 08 June 2010] [16:29:47] <dermoth> hi
| [Tuesday 08 June 2010] [16:29:50] <sustrik> hwm limits number of messages in the memory
| [Tuesday 08 June 2010] [16:29:58] <dermoth> I understand the concept
| [Tuesday 08 June 2010] [16:30:04] <sustrik> swap is not ported from 1.0 yet
| [Tuesday 08 June 2010] [16:30:13] <sustrik> but should arrive soon
| [Tuesday 08 June 2010] [16:30:18] <dermoth> oh so it's just a no-op right now?
| [Tuesday 08 June 2010] [16:30:24] <sustrik> yes
| [Tuesday 08 June 2010] [16:30:54] <sustrik> it should simply offload the data on the HD when memory limits are hit
| [Tuesday 08 June 2010] [16:33:42] <dermoth> Ok, assuming it was working as expected, lets say I have web server workers that connects using an upstream/downstream scheme... could I just set HWM to zero (or nearly zero) to swap everything to disk when my forwarder device goes down? If the server crash and gets back up, will zeromq try to resume the transferts as soon as it is initialized? connected to the same device again?
| [Tuesday 08 June 2010] [16:34:37] <sustrik> no, it's not a persistence device
| [Tuesday 08 June 2010] [16:34:38] <dermoth> obviously with ZMQ_SWAP too ;)
| [Tuesday 08 June 2010] [16:34:44] <sustrik> it's swap
| [Tuesday 08 June 2010] [16:35:04] <dermoth> ok, so it's just to avoid using up all memory
| [Tuesday 08 June 2010] [16:35:05] <sustrik> used just to handle the situation when the data don't fit into memory
| [Tuesday 08 June 2010] [16:35:14] <sustrik> exactly
| [Tuesday 08 June 2010] [16:35:14] <dermoth> I see
| [Tuesday 08 June 2010] [16:43:12] <travisbrady> Where can I find the stock exchange example?  ./configure --with-exchange isn't recognized anymore.
| [Tuesday 08 June 2010] [16:52:57] <sustrik> it haven't been ported to 0MQ/2.0 yet
| [Tuesday 08 June 2010] [16:53:19] <sustrik> you can give it a try
| [Tuesday 08 June 2010] [16:56:31] <travisbrady> Ahh, ok, I'll take a look in the old repo on github
| [Tuesday 08 June 2010] [18:45:08] <jugg>    ZMQ_PAIR - for inproc:// endpoints, is the implementation usable?  The docs say its still experiemental (missing auto-reconnection), but I think that may not be so applicable to inproc?
| [Tuesday 08 June 2010] [18:47:28] <dermoth> jugg, I guess inproc reconnection migth be needed if you have threads that may restart and re-bind... I have no idea how stable it is though :)
| [Tuesday 08 June 2010] [18:51:05] <jugg>    For this implementation, that situation won't(!) occur.
| [Tuesday 08 June 2010] [18:53:27] <jugg>    hmm, "auto-reconnection" I hope has different meaning than one side of the endpoint closing the socket and re-opening though.
| [Tuesday 08 June 2010] [18:55:27] <jugg>    sockets are per thread, so it would be necessary to close the socket on thread exit, and create the socket on thread start.  I'd expect that use case *not* to fall under the missing "auto-reconnection" feature.
| [Tuesday 08 June 2010] [18:56:11] <jugg>    But my expectations don't always line up with reality :)
| [Tuesday 08 June 2010] [19:05:26] <dermoth> jugg, I could be wrong, but my understanding is that auto-reconnection means if the side that bind shuts down and restart, the socket will re-connect.
| [Tuesday 08 June 2010] [19:06:26] <dermoth> jugg, this is how it works with TCP...
| [Tuesday 08 June 2010] [19:08:29] <dermoth> note that unless you use req/rep sockets there is no guarantee the data will be delivered - however as long as your socket stays alive it will keep trying to deliver the data (that is with TCP)
| [Tuesday 08 June 2010] [19:14:10] <jugg>    Yah, if the bind socket goes away, I could see that "auto-reconnect" could be applicable to connected sockets.  thanks.
| [Wednesday 09 June 2010] [02:41:12] <jugg>  grrr. inproc requires the bind to occur before connect?  :(
| [Wednesday 09 June 2010] [02:42:12] <sustrik>   jugg: yes
| [Wednesday 09 June 2010] [02:42:18] <sustrik>   fixing it is on todo list
| [Wednesday 09 June 2010] [02:43:09] <jugg>  ok... back to managing thread startup synchronization :(
| [Wednesday 09 June 2010] [02:48:38] <sustrik>   jugg: don't you rather want to fix it in 0mq? it would be probably less hassle.
| [Wednesday 09 June 2010] [02:48:47] <sustrik>   i can give you pointers as where to look
| [Wednesday 09 June 2010] [02:49:11] <jugg>  please do
| [Wednesday 09 June 2010] [02:49:18] <sustrik>   ok, wait a sec
| [Wednesday 09 June 2010] [02:50:22] <sustrik>   have a look here:
| [Wednesday 09 June 2010] [02:50:23] <sustrik>   http://github.com/sustrik/zeromq2/blob/master/src/ctx.hpp#L144
| [Wednesday 09 June 2010] [02:50:42] <sustrik>   it's a map of inproc endpoints created by binds
| [Wednesday 09 June 2010] [02:51:24] <sustrik>   when a socket connects to an inproc endpoint it checks this map and finds the socket that created it
| [Wednesday 09 June 2010] [02:51:54] <sustrik>   what's missing is a similar map of endpoint people wish to connect to, but which don't exist at the moment
| [Wednesday 09 June 2010] [02:53:55] <sustrik>   then have a look here:
| [Wednesday 09 June 2010] [02:53:56] <sustrik>   http://github.com/sustrik/zeromq2/blob/master/src/ctx.hpp#L144
| [Wednesday 09 June 2010] [02:54:06] <sustrik>   sorry
| [Wednesday 09 June 2010] [02:54:07] <sustrik>   here:
| [Wednesday 09 June 2010] [02:54:08] <sustrik>   http://github.com/sustrik/zeromq2/blob/master/src/ctx.cpp#L260
| [Wednesday 09 June 2010] [02:54:26] <sustrik>   register_endpoint is a function that's called when inproc bind is done
| [Wednesday 09 June 2010] [02:54:36] <sustrik>   aside of storing the name in the map
| [Wednesday 09 June 2010] [02:54:57] <sustrik>   it should check whether there are any sockets waiting to connect to the newly created endpoint
| [Wednesday 09 June 2010] [02:55:04] <sustrik>   and if so, connect them
| [Wednesday 09 June 2010] [02:56:07] <jugg>  ok, thanks.  I'll look through it.
| [Wednesday 09 June 2010] [02:56:18] <sustrik>   the inproc connecting code is here: http://github.com/sustrik/zeromq2/blob/master/src/socket_base.cpp#L181
| [Wednesday 09 June 2010] [02:56:52] <sustrik>   in overall, the whole thing has some 100-200 lines, so it should not be too complex to fix
| [Wednesday 09 June 2010] [06:25:35] <mikko> ZMQ_SNDMORE is a flag to send rather than setsockopt, right?
| [Wednesday 09 June 2010] [06:29:58] <sustrik>   yes
| [Wednesday 09 June 2010] [06:30:18] <sustrik>   mikko: ZMQ_RCVMORE on the other hand is a socketopt
| [Wednesday 09 June 2010] [06:30:42] <sustrik>   it's kind of asymetric, but the API looks the least complex this way
| [Wednesday 09 June 2010] [06:42:17] <mikko> rcvmore is uint64_t 
| [Wednesday 09 June 2010] [06:42:17] <mikko> ?
| [Wednesday 09 June 2010] [06:44:55] <mikko> int64t
| [Wednesday 09 June 2010] [06:46:14] <sustrik>   int64_t
| 
| *** Logfile started
| *** on Wed Jun 9 11:14:03 2010
| 
| [Wednesday 09 June 2010] [11:14:03] Topic   The channel topic is "Welcome!".
| [Wednesday 09 June 2010] [11:14:03] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 09 June 2010] [11:14:09] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 09 June 2010] [11:14:09] Created This channel was created on 2010-02-05 10:44.
| [Wednesday 09 June 2010] [11:49:44] <CIA-17>    zeromq2: 03Martin Sustrik 07master * r604f747 10/ src/poll.cpp : issue 32 - poll_t poller broken - http://bit.ly/aucae6
| 
| *** Logfile started
| *** on Wed Jun 9 19:09:19 2010
| 
| [Wednesday 09 June 2010] [19:09:19] Topic   The channel topic is "Welcome!".
| [Wednesday 09 June 2010] [19:09:19] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 09 June 2010] [19:09:25] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 09 June 2010] [19:09:25] Created This channel was created on 2010-02-05 10:44.
| [Wednesday 09 June 2010] [19:43:45] <travisbrady>   sustrik: they are in the same os thread yes
| [Thursday 10 June 2010] [00:43:24] <sustrik>    travisbrady: ok
| [Thursday 10 June 2010] [00:43:40] <sustrik>    can you get a backtrace from the bus error?
| [Thursday 10 June 2010] [00:54:43] <travisbrady>    sustrik: I actually worked through the earlier issue, I'm now working on zmq_msg_data
| [Thursday 10 June 2010] [01:02:37] <sustrik>    ok, so everthing works ok as for now?
| [Thursday 10 June 2010] [01:02:56] <travisbrady>    well, now I'm getting "Assertion failed: !inpipe && !outpipe (pair.cpp:47)"
| [Thursday 10 June 2010] [01:03:04] <travisbrady>    Looking at pair.cpp now
| [Thursday 10 June 2010] [01:03:42] <sustrik>    travisbrady: pair is unfinished
| [Thursday 10 June 2010] [01:04:13] <sustrik>    docs say:
| [Thursday 10 June 2010] [01:04:14] <sustrik>    Note
| [Thursday 10 June 2010] [01:04:14] <sustrik>                   ZMQ_PAIR sockets are experimental, and are currently missing several features such as auto-reconnection.
| [Thursday 10 June 2010] [01:04:40] <sustrik>    so rather try using different socket type
| [Thursday 10 June 2010] [01:05:06] <travisbrady>    Hmm, I was using type 4
| [Thursday 10 June 2010] [01:05:38] <sustrik>    REP?
| [Thursday 10 June 2010] [01:05:42] <sustrik>    that one is OK
| [Thursday 10 June 2010] [01:07:23] <travisbrady>    sustrik: Yeah, I'm basically trying to implement the simple client server app from http://www.zeromq.org/docs:cookbook in ocaml as a test
| [Thursday 10 June 2010] [01:08:04] <sustrik>    sure, that should work
| [Thursday 10 June 2010] [01:08:25] <sustrik>    just avoid PAIR sockets
| [Thursday 10 June 2010] [01:11:56] <travisbrady>    Hmm, yeah I'm not touching them at all, I have no idea how I'm reaching that assertion in pair.cpp
| [Thursday 10 June 2010] [01:13:52] <sustrik>    uninitialised socket type used (0 = pair)?
| [Thursday 10 June 2010] [01:15:41] <travisbrady>    Ahh, yep, you're right.  There was a problem in my wrap_zmq_socket function
| [Thursday 10 June 2010] [01:21:53] <CIA-17> zeromq2: 03Martin Sustrik 07master * rd329c55 10/ src/tcp_connecter.cpp : issue 31 - Assertion failed: err == ECONNREFUSED || err == ETIMEDOUT (tcp_connecter.cpp:296) - http://bit.ly/aOnmHR
| [Thursday 10 June 2010] [01:21:54] <CIA-17> zeromq2: 03Martin Sustrik 07master * r76e0153 10/ (4 files): issue 33 - missing virtual destructors - http://bit.ly/9Xaca8
| [Thursday 10 June 2010] [01:34:53] <CIA-17> zeromq2: 03Piotr Trojanek 07master * r8782b4d 10/ configure.in : -lcrypto added to linking flags for QNX - http://bit.ly/b35ZMj
| 
| *** Logfile started
| *** on Thu Jun 10 05:49:53 2010
| 
| [Thursday 10 June 2010] [05:49:53] Topic    The channel topic is "Welcome!".
| [Thursday 10 June 2010] [05:49:53] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Thursday 10 June 2010] [05:49:59] Mode Channel modes: no messages from outside, topic protection
| [Thursday 10 June 2010] [05:49:59] Created  This channel was created on 2010-02-05 10:44.
| [Thursday 10 June 2010] [06:37:09] <CIA-17> zeromq2: 03Martin Sustrik 07master * r74a3907 10/ (src/encoder.hpp src/uuid.cpp): couple of ICC warnings fixed - http://bit.ly/9CRrH6
| [Thursday 10 June 2010] [06:56:44] <alefka> hi
| [Thursday 10 June 2010] [06:58:23] <CIA-17> zeromq2: 03Piotr Trojanek 07master * rc818b14 10/ src/ctx.cpp : clearing thread info structure - http://bit.ly/bjl1Cr
| [Thursday 10 June 2010] [06:58:31] <alefka> Has any possibility to point length of data to send?
| [Thursday 10 June 2010] [06:59:29] <sustrik>    alefka: you don't know how much data you want to send?
| [Thursday 10 June 2010] [07:00:14]   * sustrik is puzzled
| [Thursday 10 June 2010] [07:00:56] <alefka> know. I have large buffer (64 K), but I want to send for example the first 20 bytes... Can I do it without recreation of array?
| [Thursday 10 June 2010] [07:01:44] <alefka> just point to send function a length parameter for example or something else
| [Thursday 10 June 2010] [07:02:31] <alefka> In the regular zeromq lib I have no found the one
| [Thursday 10 June 2010] [07:02:44] <sustrik>    zmq::message_t msg  (20);
| [Thursday 10 June 2010] [07:02:54] <sustrik>    memcpy (msg.data (), buffer, 20);
| [Thursday 10 June 2010] [07:02:58] <sustrik>    s.send (msg);
| [Thursday 10 June 2010] [07:07:56] <alefka> aha... I use Java
| [Thursday 10 June 2010] [07:08:02] <alefka> :)
| [Thursday 10 June 2010] [07:23:54] <umesh>  I am getting error while compiling python bindings of zeromq
| [Thursday 10 June 2010] [07:24:20] <umesh>  zmq/_zmq.c: In function init_zmq:
| [Thursday 10 June 2010] [07:24:21] <umesh>  zmq/_zmq.c:9723: error: ZMQ_PAIR undeclared (first use in this function)
| [Thursday 10 June 2010] [07:24:21] <umesh>  zmq/_zmq.c:9723: error: (Each undeclared identifier is reported only once
| [Thursday 10 June 2010] [07:24:21] <umesh>  zmq/_zmq.c:9723: error: for each function it appears in.)
| [Thursday 10 June 2010] [07:24:32] <umesh>  these are the errors i get 
| [Thursday 10 June 2010] [07:26:18] <sustrik>    umesh: do you have latest pyzmq?
| [Thursday 10 June 2010] [07:26:48] <umesh>  i version before latest ...
| [Thursday 10 June 2010] [07:26:54] <umesh>  as i am using 2.0.6 
| [Thursday 10 June 2010] [07:27:05] <umesh>  1 version before latest ...
| [Thursday 10 June 2010] [07:27:39] <sustrik>    the latest version updates to 2.0.7 API:
| [Thursday 10 June 2010] [07:27:40] <sustrik>    Updating to new 2.0.7 API changes.
| [Thursday 10 June 2010] [07:27:40] <sustrik>    * Context only takes the number of io threads.
| [Thursday 10 June 2010] [07:27:40] <sustrik>    * P2P -> PAIR.
| [Thursday 10 June 2010] [07:27:40] <sustrik>    * No stopwatch.
| [Thursday 10 June 2010] [07:27:40] <sustrik>    * No LWM socket option.
| [Thursday 10 June 2010] [07:29:23] <umesh>  thats the reason i am not using latest ... because i am using zmq c version  2.0.6
| [Thursday 10 June 2010] [07:34:27] <sustrik>    then use P2P
| [Thursday 10 June 2010] [07:34:34] <sustrik>    it was renamed to PAIR in 2.0.7
| [Thursday 10 June 2010] [07:36:54] <alefka> sustrik: \I suppose java lib has no such oportunity... is it so?
| [Thursday 10 June 2010] [07:37:18] <sustrik>    java lib works with java byte arrays
| [Thursday 10 June 2010] [07:37:37] <alefka> ok
| [Thursday 10 June 2010] [07:37:42] <sustrik>    is it a problem to take first 20 characters from a byte array?
| [Thursday 10 June 2010] [07:37:54] <sustrik>    arr [0..19]
| [Thursday 10 June 2010] [07:37:56] <sustrik>    or something
| [Thursday 10 June 2010] [07:38:03]   * sustrik doesn't speak java
| [Thursday 10 June 2010] [08:44:18] <umesh>  can i ask some git questions here .
| [Thursday 10 June 2010] [08:44:46] <umesh>  basically how to go to i version back for a specific file in git respository if you are at head 
| [Thursday 10 June 2010] [09:19:12] Part addicted has left this channel ("Konversation terminated!").
| [Thursday 10 June 2010] [11:33:43] <CIA-17> rbzmq: 03Brian Buchanan 07master * r12c3a9f 10/ rbzmq.cpp : whitespace cleanup for consistent coding style - http://bit.ly/9CGo7J
| [Thursday 10 June 2010] [11:33:43] <CIA-17> rbzmq: 03Brian Buchanan 07master * r1f7c517 10/ rbzmq.cpp : fix crash on access of socket that has been closed - http://bit.ly/dfwZoH
| [Thursday 10 June 2010] [12:16:20] <sbeaulois>  hi 
| [Thursday 10 June 2010] [12:19:51] <sbeaulois>  I tried to bind pyzmq on  rhel 5 but i got some error m=when finish binding 
| [Thursday 10 June 2010] [12:20:38] <sbeaulois>  i cannot import zmq module from comand 
| [Thursday 10 June 2010] [12:21:05] <guido_g>    paste the error message to a paste-bin
| [Thursday 10 June 2010] [12:21:22] <guido_g>    w/o the messages we can't help
| [Thursday 10 June 2010] [12:21:24] <sbeaulois>  cannot import name _zmq
| [Thursday 10 June 2010] [12:21:35] <guido_g>    -> <sbeaulois> I tried to bind pyzmq on  rhel 5 but i got some error m=when finish binding
| [Thursday 10 June 2010] [12:22:15] <guido_g>    what shall this line say?
| [Thursday 10 June 2010] [12:22:29] <sbeaulois>  my english is not good 
| [Thursday 10 June 2010] [12:22:30] <sbeaulois>  ok 
| [Thursday 10 June 2010] [12:22:42] <sbeaulois>  i will like bind pyzmq 
| [Thursday 10 June 2010] [12:23:00] <sbeaulois>  on RedHat Entriprise Linux 5
| [Thursday 10 June 2010] [12:24:50] <guido_g>    what do you mean with "bind"?
| [Thursday 10 June 2010] [12:25:10] <sbeaulois>  install
| [Thursday 10 June 2010] [12:25:20] <guido_g>    ahhh
| [Thursday 10 June 2010] [12:25:25] <sbeaulois>  i will compiled pyzmq
| [Thursday 10 June 2010] [12:25:33] <guido_g>    ok
| [Thursday 10 June 2010] [12:25:38] <guido_g>    any errors there?
| [Thursday 10 June 2010] [12:25:53] <sbeaulois>  i compiled pyzmq fine
| [Thursday 10 June 2010] [12:26:09] <guido_g>    ok
| [Thursday 10 June 2010] [12:26:16] <guido_g>    how did you do that?
| [Thursday 10 June 2010] [12:26:21] <sbeaulois>  but when i tried to import zmq from python command line i got somes errors 
| [Thursday 10 June 2010] [12:26:31] <sbeaulois>   cannot import name _zmq
| [Thursday 10 June 2010] [12:26:55] <guido_g>    how did you compile and install pyzmq?
| [Thursday 10 June 2010] [12:27:02] <versificateur>  look at here http://blog.boxedice.com/2010/05/23/building-zeromq-and-pyzmq-on-red-hat/
| [Thursday 10 June 2010] [12:27:43] <guido_g>    ok
| [Thursday 10 June 2010] [12:27:53] <guido_g>    did you follow all the mentioned steps?
| [Thursday 10 June 2010] [12:28:11] <sbeaulois>  verficateur => ok 
| [Thursday 10 June 2010] [12:28:44] <guido_g>    versificateur: ahhh, /me is silent then :)
| [Thursday 10 June 2010] [12:29:54] <versificateur>  :) what means /me ?
| [Thursday 10 June 2010] [12:30:02] <sbeaulois>  i'am going to trie it
| [Thursday 10 June 2010] [12:30:22] <guido_g>    versificateur: myself, I, the one writing
| [Thursday 10 June 2010] [12:30:44] <versificateur>  sustrik: are you here??
| [Thursday 10 June 2010] [12:30:45] <guido_g>    versificateur: most clients expand that to your nick, when given as first word
| [Thursday 10 June 2010] [12:30:49] <guido_g>    like:
| [Thursday 10 June 2010] [12:30:55] <versificateur>  ah okay
| [Thursday 10 June 2010] [12:30:55]   * guido_g is silent now
| [Thursday 10 June 2010] [15:38:42] <sustrik>    i am here
| [Thursday 10 June 2010] [15:38:52] <sustrik>    but i have no experience with pyzmq
| [Thursday 10 June 2010] [15:38:59] <sustrik>    brian should know
| [Thursday 10 June 2010] [15:39:05] <sustrik>    try asking on the mailing list
| [Thursday 10 June 2010] [16:26:19] Notice   -Martinp23- [Global Notice] Our webchat is experiencing big changes! Channel ops: you may need to fix some of your bans or quiets as a result. All the details can be found at http://bit.ly/ckfqLh and you can get help at any time in #freenode. Thanks for using freenode and have a great day!
| [Thursday 10 June 2010] [16:48:14] <travlr> Is kde-4.5 called kde-4.4.85, and if so Is kde-4.4.9999 the latest for kde-4.4 ???
| [Thursday 10 June 2010] [16:49:42] <travlr> sorry wrong channel :P
| [Thursday 10 June 2010] [19:47:59] Mode ChanServ gives CIA-17 permission to talk.
| [Thursday 10 June 2010] [21:15:29] Nick kcollins is now known as temme.
| [Friday 11 June 2010] [00:56:18] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r27877d7 10/ src/tcp_connecter.cpp : EHOSTUNREACH is acceptable outcome from connect - http://bit.ly/dzcG79
| [Friday 11 June 2010] [01:03:20] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r5ee355d 10/ src/tcp_connecter.cpp : if connect asserts, exact error is reported - http://bit.ly/b0P5Qg
| [Friday 11 June 2010] [01:56:07] <umesh>    can I use XREP and REQ socket pairs ...
| [Friday 11 June 2010] [01:56:26] <umesh>    means in server I will use XREP and client will use REQ socket ...
| [Friday 11 June 2010] [01:56:59] <umesh>    I want to do this because I want to send multiple responses to a single request ...  
| [Friday 11 June 2010] [01:57:40] <sustrik>  umesh that won't work
| [Friday 11 June 2010] [01:57:51] <sustrik>  use XREQ/XREP
| [Friday 11 June 2010] [01:57:57] <umesh>    ok
| [Friday 11 June 2010] [01:58:19] <sustrik>  be aware that you have to copy routeback info from request to reply
| [Friday 11 June 2010] [01:58:25] <sustrik>  by hand
| [Friday 11 June 2010] [01:58:37] <umesh>    will I be able to send multiple responses to the single request ...
| [Friday 11 June 2010] [01:58:39] <umesh>    ?
| [Friday 11 June 2010] [01:59:09] <sustrik>  when you get the request on the XREP side
| [Friday 11 June 2010] [01:59:21] <sustrik>  it'll be composed of routeback info and your message
| [Friday 11 June 2010] [01:59:38] <sustrik>  routeback info says how to route the reply back to the requester
| [Friday 11 June 2010] [01:59:47] <sustrik>  you have to copy it to the reply
| [Friday 11 June 2010] [01:59:56] <sustrik>  so that 0MQ knows where to send the message
| [Friday 11 June 2010] [02:00:15] <sustrik>  REQ/REP does this for you; with XREQ/XREP you have to handle it by hand
| [Friday 11 June 2010] [02:00:37] <sustrik>  btw, sending a multi-part reply won't do?
| [Friday 11 June 2010] [02:04:23] <CIA-17>   zeromq2: 03Brian Buchanan 07master * rac90b7e 10/ (AUTHORS src/socket_base.cpp): issue 35 - ZMQ_RCVMORE sometimes erroneously returns false - http://bit.ly/dvw31S
| [Friday 11 June 2010] [02:05:36] <umesh>    sustrik: I want to avoid parsing in client ...
| [Friday 11 June 2010] [02:05:46] <umesh>    of multipart reply ...
| [Friday 11 June 2010] [02:05:50] <sustrik>  then use multi-part reply
| [Friday 11 June 2010] [02:05:54] <sustrik>  ?
| [Friday 11 June 2010] [02:05:57] <sustrik>  what parsing
| [Friday 11 June 2010] [02:06:30] <sustrik>  in any case the point is that multi-part message is guaranteed to be atomic
| [Friday 11 June 2010] [02:06:37] <sustrik>  you either get all parts or none
| [Friday 11 June 2010] [02:06:56] <umesh>    if I send multipart reply then in the client when I recv ... I will get one message and then need to parse that multipart message 
| [Friday 11 June 2010] [02:07:07] <umesh>    ok
| [Friday 11 June 2010] [02:07:17] <umesh>    means I will get multple recv ...
| [Friday 11 June 2010] [02:07:21] <sustrik>  yes
| [Friday 11 June 2010] [02:07:24] <umesh>    ok
| [Friday 11 June 2010] [02:07:59] <sustrik>  see ZMQ_SNDMORE and ZMQ_RCVMORE
| [Friday 11 June 2010] [02:09:25] <umesh>    no documention of this in zmq_setsocketopt manaul 
| [Friday 11 June 2010] [02:09:48] <umesh>    therefore I was not aware of this multipart reply ...
| [Friday 11 June 2010] [02:11:43] <umesh>    not even in send and recv api
| 
| *** Logfile started
| *** on Fri Jun 11 08:31:34 2010
| 
| [Friday 11 June 2010] [08:31:34] Topic  The channel topic is "Welcome!".
| [Friday 11 June 2010] [08:31:34] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Friday 11 June 2010] [08:31:40] Mode   Channel modes: no messages from outside, topic protection
| [Friday 11 June 2010] [08:31:40] Created    This channel was created on 2010-02-05 10:44.
| [Friday 11 June 2010] [08:31:41] <sustrik>  why ephemeral ports then?
| [Friday 11 June 2010] [08:31:46] <brickhazel>   yes the nameservice locations are fixed, everything else is random
| [Friday 11 June 2010] [08:33:12] <brickhazel>   we have a resource manager that is capable of dynamically starting a service anywhere in the network depending on loading
| [Friday 11 June 2010] [08:33:26] <brickhazel>   we then want to be able to discover the service
| [Friday 11 June 2010] [08:33:26] <sustrik>  if it's accessible :)
| [Friday 11 June 2010] [08:33:56] <sustrik>  well, this may work in corporate environment, but won't work in Internet scenarios
| [Friday 11 June 2010] [08:33:57] <brickhazel>   if what is accessible?  
| [Friday 11 June 2010] [08:34:07] <brickhazel>   true.. this is a closed system
| [Friday 11 June 2010] [08:34:15] <sustrik>  the location where you want to start the service
| [Friday 11 June 2010] [08:34:32] <sustrik>  yes, but 0mq is meant also for Internet environments
| [Friday 11 June 2010] [08:34:39] <sustrik>  and thus ephemeral ports are not an option
| [Friday 11 June 2010] [08:34:51] <sustrik>  you can fork the project and add the code if needed...
| [Friday 11 June 2010] [08:35:59] <brickhazel>   hmm... not a big fan of forking
| [Friday 11 June 2010] [08:38:19] <brickhazel>   ok, thanks for your help.. i need to think about this some more
| [Friday 11 June 2010] [08:45:48] <sustrik>  brickhazel: think of services, http is on port 80, ssh is on port 22, why should your service be different
| [Friday 11 June 2010] [08:46:58] <brickhazel>   sustrik: these are more like micro-services sprinkled throughout our closed network
| [Friday 11 June 2010] [08:47:21] <brickhazel>   failover is a common occurrence
| [Friday 11 June 2010] [08:47:53] <brickhazel>   it is a very dynamic system and service discovery is how we have been connecting things so far
| [Friday 11 June 2010] [08:48:04] <sustrik>  sure, it's up to you
| [Friday 11 June 2010] [08:48:22] <brickhazel>   i think there are too many endpoints to try to manage by hand (aka assigning fixed ports to services)
| [Friday 11 June 2010] [08:48:34] <sustrik>  too many service types?
| [Friday 11 June 2010] [08:48:39] <brickhazel>   yes
| [Friday 11 June 2010] [08:48:57] <sustrik>  the person who implements the service should choose a port number for it
| [Friday 11 June 2010] [08:49:06] <sustrik>  it's not that much work
| [Friday 11 June 2010] [08:50:19] <brickhazel>   true... but this is a system of subsystems
| [Friday 11 June 2010] [08:50:31] <brickhazel>   someone has to manage a master list of all ports
| [Friday 11 June 2010] [08:50:40] <brickhazel>   across many different projects
| [Friday 11 June 2010] [08:51:00] <sustrik>  IANA? :)
| [Friday 11 June 2010] [08:51:28] <brickhazel>   :) yes but this is not internet scale
| [Friday 11 June 2010] [08:51:51] <sustrik>  having a port number registered at IANA is good for your ego :)
| [Friday 11 June 2010] [08:51:54] <brickhazel>   more like a distributed/parallel processing system
| [Friday 11 June 2010] [08:52:13] <brickhazel>   :) i bet
| [Friday 11 June 2010] [08:52:26] <sustrik>  i understand
| [Friday 11 June 2010] [08:52:46] <sustrik>  the whole point of 0mq, however, is to make app you write infinitely scalable
| [Friday 11 June 2010] [08:53:10] <sustrik>  unfortunately, local hacks like ephemeral port numbers interfere with that
| [Friday 11 June 2010] [08:54:17] <sustrik>  that's why i don't want it in the trunk
| [Friday 11 June 2010] [08:54:30] <brickhazel>   i understand
| [Friday 11 June 2010] [08:59:31] <umesh>    I am getting the extra appended string on the server in REQ/REP sockets 
| [Friday 11 June 2010] [08:59:44] <sustrik>  ?
| [Friday 11 June 2010] [08:59:50] <umesh>    I send string "ns_set app app1" from client 
| [Friday 11 June 2010] [09:00:11] <umesh>    and I recieved "ns_set app app1fifo_fast" on server
| [Friday 11 June 2010] [09:00:39] <umesh>    I checked pcap capture ... it shows correctly "ns_set app app1"
| [Friday 11 June 2010] [09:00:40] <sustrik>  i assume there's no terminating zero in the string
| [Friday 11 June 2010] [09:01:06] <sustrik>  thus printf prints also the bogus memory after the end of the string
| [Friday 11 June 2010] [09:02:33] <umesh>    but original string does have ...
| [Friday 11 June 2010] [09:03:24] <sustrik>  i assume you don't send it in the message
| [Friday 11 June 2010] [09:18:56] <umesh>    now working ...
| [Friday 11 June 2010] [09:19:16] <umesh>    it was the issue of null char ... i saw pcap as well ... end 0 was not there 
| [Friday 11 June 2010] [09:19:34] <umesh>    one more point ... how is multipart messages are implemented ...
| [Friday 11 June 2010] [09:19:57] <umesh>    means only one message is send or multiple messges clubbed together ...
| [Friday 11 June 2010] [09:20:05] <umesh>    and then send ...
| [Friday 11 June 2010] [09:20:09] <umesh>    i assume later 
| [Friday 11 June 2010] [09:21:21] <sustrik>  the latter
| [Friday 11 June 2010] [09:23:49] <umesh>    ok
| [Friday 11 June 2010] [12:37:19] Nick   test is now known as Guest80153.
| [Friday 11 June 2010] [14:22:36] <cremes>   is the "request identity" prepended to messages sent on XREQ sockets guaranteed to remain the same for the life of the socket?
| [Friday 11 June 2010] [14:24:43] <sustrik>  cremes: yes
| [Friday 11 June 2010] [14:24:58] <sustrik>  hm, well, unless reconnection happens
| [Friday 11 June 2010] [14:25:18] <sustrik>  if you set the identity by hand it'll never change
| [Friday 11 June 2010] [14:25:48] <sustrik>  if you don't set it, it is generated by the peer each time TCP connection is established
| [Friday 11 June 2010] [14:26:02] <cremes>   oh, i see
| [Friday 11 June 2010] [14:26:06] <cremes>   i'll set it myself then
| [Friday 11 June 2010] [14:26:16] <cremes>   i don't want it to ever change
| [Friday 11 June 2010] [14:27:04] <sustrik>  this is to be done in the binding or in your app?
| [Friday 11 June 2010] [14:27:09] <cremes>   in my app
| [Friday 11 June 2010] [14:27:13] <sustrik>  ok
| [Friday 11 June 2010] [14:27:16] <sustrik>  makes semse
| [Friday 11 June 2010] [14:27:19] <sustrik>  sense
| [Friday 11 June 2010] [14:27:27] <cremes>   i'm leaving the binding as "vanilla" as possible so it matches the C api closely
| [Friday 11 June 2010] [14:27:50] <sustrik>  yes, that's good
| [Friday 11 June 2010] [14:28:06] <cremes>   sustrik: on a related note, i'd like to confirm that it doesn't make any sense to set an identity on a SUB socket since it can't transmit
| [Friday 11 June 2010] [14:28:35] <sustrik>  it does
| [Friday 11 June 2010] [14:28:40] <sustrik>  the point with identities
| [Friday 11 June 2010] [14:28:51] <cremes>   rephrase please
| [Friday 11 June 2010] [14:29:00] <sustrik>  is that they allow to track resources assigned to particular connection
| [Friday 11 June 2010] [14:29:12] <sustrik>  example:
| [Friday 11 June 2010] [14:29:27] <sustrik>  when SUB socket connect to PUB socket
| [Friday 11 June 2010] [14:29:36] <versificateur>    hello
| [Friday 11 June 2010] [14:29:38] <sustrik>  PUB socket creates a message queue
| [Friday 11 June 2010] [14:29:45] <sustrik>  for that particular connection
| [Friday 11 June 2010] [14:30:01] <sustrik>  if the connection breaks and gets reestablished
| [Friday 11 June 2010] [14:30:34] <sustrik>  SUB's identity allows the PUB to pair the new connection with the old queue
| [Friday 11 June 2010] [14:30:46] <cremes>   ah, it maps the queue by identity? i think i get it now.
| [Friday 11 June 2010] [14:30:51] <sustrik>  yes
| [Friday 11 June 2010] [14:30:55] <versificateur>    sustrik: did you had a look to my jzmq modifications?
| [Friday 11 June 2010] [14:31:02] <cremes>   thank you for the clarification
| [Friday 11 June 2010] [14:31:10] <sustrik>  np
| [Friday 11 June 2010] [14:31:13] <sustrik>  versificateur: yes i did
| [Friday 11 June 2010] [14:31:18] <sustrik>  i replied on github
| [Friday 11 June 2010] [14:31:23] <sustrik>  you've probably missed the message
| [Friday 11 June 2010] [14:31:44] <sustrik>  anyway the problem is that every single line of zmq is touched in the patch
| [Friday 11 June 2010] [14:31:54] <sustrik>  it's impossible to review it
| [Friday 11 June 2010] [14:32:03] <sustrik>  maybe the line endings are different?
| [Friday 11 June 2010] [14:34:02] <versificateur>    hum...
| [Friday 11 June 2010] [14:34:27] <versificateur>    i can tell you files I added
| [Friday 11 June 2010] [14:34:38] <sustrik>  you have written it on windows?
| [Friday 11 June 2010] [14:34:44] <versificateur>    and files i modified...
| [Friday 11 June 2010] [14:35:01] <versificateur>    no no not on windows
| [Friday 11 June 2010] [14:35:27] <versificateur>    i currently work on Fedora 12 and Ubuntu 10.04
| [Friday 11 June 2010] [14:35:33] <sustrik>  i recall there were changes to MSVC project
| [Friday 11 June 2010] [14:35:39] <sustrik>  let me see...
| [Friday 11 June 2010] [14:36:21] <versificateur>    i made them manually
| [Friday 11 June 2010] [14:36:31] <versificateur>    then tested them on windows
| [Friday 11 June 2010] [14:36:36] <sustrik>  ah
| [Friday 11 June 2010] [14:37:45] <sustrik>  have a look here:
| [Friday 11 June 2010] [14:37:47] <sustrik>  http://github.com/bluig/jzmq/commit/20c2ead95d48039950d52c929daf3de2b8d05e4f
| [Friday 11 June 2010] [14:38:28] <sustrik>  how come everything is marked as changed?
| [Friday 11 June 2010] [14:39:31] <versificateur>    probably because I'm not good with git
| [Friday 11 June 2010] [14:39:45] <sustrik>  neither am i
| [Friday 11 June 2010] [14:39:58] <sustrik>  hallo! any git experts around???
| [Friday 11 June 2010] [14:41:21] <sustrik>  hm, maybe the diff itself failed in some strange way
| [Friday 11 June 2010] [14:41:30] <versificateur>    perhaps i should remove the repository and restart from scratch???
| [Friday 11 June 2010] [14:41:34] <sustrik>  there are 2 unmodified lines there...
| [Friday 11 June 2010] [14:42:12] <sustrik>  well, you are testing it on linux and windows, right?
| [Friday 11 June 2010] [14:42:37] <versificateur>    yeah
| [Friday 11 June 2010] [14:42:47] <sustrik>  that's the same i would do
| [Friday 11 June 2010] [14:42:51] <sustrik>  so let's do it this way
| [Friday 11 June 2010] [14:43:01] <sustrik>  i'll add you as contributor to the project
| [Friday 11 June 2010] [14:43:12] <versificateur>    :)
| [Friday 11 June 2010] [14:43:15] <sustrik>  that'll allow you to commit yourself
| [Friday 11 June 2010] [14:43:28] <versificateur>    thanks
| [Friday 11 June 2010] [14:43:28] <sustrik>  you make sure that it builds/works on the two platforms
| [Friday 11 June 2010] [14:43:32] <sustrik>  wait a sec
| [Friday 11 June 2010] [14:45:07] <sustrik>  versificateur: done
| [Friday 11 June 2010] [14:45:47] <versificateur>    :)
| [Friday 11 June 2010] [14:55:45] <travisbrady>  versificateur: which language are you writing a binding for?
| [Friday 11 June 2010] [15:00:20] <versificateur>    java
| [Friday 11 June 2010] [16:20:41] <sg>   anybody on?
| [Friday 11 June 2010] [17:06:45] <soren>    I'm hoping someone can help me explain this: http://pastebin.com/qsWYHhdK
| [Friday 11 June 2010] [17:07:34] <soren>    When I run those two, the consumer only sees every 256th message.
| [Friday 11 June 2010] [17:08:04] <soren>    I thought the producer might be going to fast, so I added the sleep statement.. Didn't help at all.
| [Friday 11 June 2010] [17:08:20] <soren>    I'm sure I'm doing something silly, but I can't see what it is.
| [Friday 11 June 2010] [17:11:37] <soren>    err... but now it works.
| [Friday 11 June 2010] [17:12:33] <soren>    I can't imagine what I changed..
| [Friday 11 June 2010] [17:12:47] <sustrik>  soren: hi
| [Friday 11 June 2010] [17:13:10] <sustrik>  you are subsribed only for messages that start with zero byte :)
| [Friday 11 June 2010] [17:13:18] <sustrik>  zmq_setsockopt (socket, ZMQ_SUBSCRIBE, "", 1);
| [Friday 11 June 2010] [17:13:49] <soren>    Yeah, I fixed that.
| [Friday 11 June 2010] [17:14:00] <soren>    ...and I wasn't half an hour ago when it was acting strangely.
| [Friday 11 June 2010] [17:14:21] <soren>    So, I read in the docs that zmq_send returning doesn't mean it's been sent.
| [Friday 11 June 2010] [17:14:35] <sustrik>  nope, it's async
| [Friday 11 June 2010] [17:15:22] <soren>    What I swear I was experiencing was that the consumer would only see anything happen once for every 256 messages sent by the producer, and it would only receive one message.
| [Friday 11 June 2010] [17:15:25] <soren>    It was very odd.
| [Friday 11 June 2010] [17:15:50] <sustrik>  it looks exactly as if the subscription for zero byte was in place
| [Friday 11 June 2010] [17:16:00] <soren>    Why would anything go through that way?
| [Friday 11 June 2010] [17:16:18] <soren>    I mean... Why would I see every 256th message?
| [Friday 11 June 2010] [17:16:19] <sustrik>  you are putting sequence of integers into the message
| [Friday 11 June 2010] [17:16:29] <soren>    Oh.
| [Friday 11 June 2010] [17:16:32] <sustrik>  so the messages look like this
| [Friday 11 June 2010] [17:16:33] <soren>    Oh!
| [Friday 11 June 2010] [17:16:34] <sustrik>  00000000
| [Friday 11 June 2010] [17:16:37] <soren>    Right, right.
| [Friday 11 June 2010] [17:16:37] <sustrik>  01000000
| [Friday 11 June 2010] [17:16:39] <soren>     I see where you're going.
| [Friday 11 June 2010] [17:16:51] <soren>    That answers my next question.
| [Friday 11 June 2010] [17:17:33] <soren>    ...which was going to be "how does the sender set the "topic" of the message (i.e. what the consumer subscribes to)", but I get that now.
| [Friday 11 June 2010] [17:17:42] <soren>    ...but you're probably quite right.
| [Friday 11 June 2010] [17:17:52] <soren>    zeromq was just too clever for me. :)
| [Friday 11 June 2010] [17:17:58] <sustrik>  :)
| [Friday 11 June 2010] [17:18:46] <soren>    Ok, another question...
| [Friday 11 June 2010] [17:19:30] <soren>    I currently have an app that uses amqp to send messages around using a topic exchange. All nodes connect to the same broker and pass msgs around.
| [Friday 11 June 2010] [17:20:04] <soren>    To achieve something similar with zeromq, I should use multicast, right?
| [Friday 11 June 2010] [17:20:30] <sustrik>  multicast is quite hard to configure
| [Friday 11 June 2010] [17:20:49] <soren>    Yeah, that's the impression I get.
| [Friday 11 June 2010] [17:20:51] <sustrik>  if you don't care about having a single process in the middle
| [Friday 11 June 2010] [17:20:56] <sustrik>  use zmq_forwarder
| [Friday 11 June 2010] [17:21:03] <sustrik>  see example here: http://github.com/sustrik/zeromq-chat
| [Friday 11 June 2010] [17:21:04] <soren>    Well, I do that now, but I'd like to not have to have that.
| [Friday 11 June 2010] [17:21:40] <sustrik>  other option is to connect each subscriber to every publisher
| [Friday 11 June 2010] [17:22:02] <soren>    Yeah, that would suck.
| [Friday 11 June 2010] [17:22:10] <sustrik>  then multicast
| [Friday 11 June 2010] [17:22:15] <soren>    I'd like to be able to add and remove both publishers and subscribers on the fly.
| [Friday 11 June 2010] [17:22:33] <soren>    I've never wrapped my head around multicast addressing.
| [Friday 11 June 2010] [17:22:45] <sustrik>  the point is that for all-to-all communication you need a central node
| [Friday 11 June 2010] [17:22:52] <sustrik>  it can be either zmq_forwarder
| [Friday 11 June 2010] [17:23:02] <sustrik>  of your network switch (in case of multicast)
| [Friday 11 June 2010] [17:23:29] <sustrik>  so these are the only options:
| [Friday 11 June 2010] [17:23:36] <sustrik>  1. connect each-to-each by hand
| [Friday 11 June 2010] [17:23:46] <sustrik>  2. have zmq_forwarder in the middle
| [Friday 11 June 2010] [17:23:50] <sustrik>  3. use multicast
| [Friday 11 June 2010] [17:24:21] <soren>    Ok. I'm trying the multicast example from the cookbook..
| [Friday 11 June 2010] [17:24:42] <soren>    I've replaced my zmq_bind and zmq_connects from the example in the pastebin with:
| [Friday 11 June 2010] [17:24:57] <soren>    zmq_connect(socket, "epgm://eth0;239.192.1.1:5555");
| [Friday 11 June 2010] [17:25:20] <soren>    and nothing is getting through. Does this not work locally?
| [Friday 11 June 2010] [17:25:26] <soren>    On the same box, I mean.
| [Friday 11 June 2010] [17:31:45] <sustrik>  it should
| [Friday 11 June 2010] [17:32:00] <sustrik>  multicast loopback is set to on by default
| [Friday 11 June 2010] [17:32:43] <sustrik>  not sure about eth0 though
| [Friday 11 June 2010] [17:32:46] <sustrik>  try lo instead
| [Friday 11 June 2010] [17:33:31] <soren>    eth0 has the MULTICAST flag set.
| [Friday 11 June 2010] [17:34:29] <sustrik>  i mean, i am not sure that you can loopback via eth0
| [Friday 11 June 2010] [17:34:35] <sustrik>  thy lo (127.0.0.1)
| [Friday 11 June 2010] [17:34:38] <sustrik>  try*
| [Friday 11 June 2010] [17:34:42] <soren>    Yeah, lo works.
| [Friday 11 June 2010] [17:34:47]     * soren ponders
| [Friday 11 June 2010] [17:35:11] <soren>    The multicast addresss... Is that just something everyone needs to agree on?
| [Friday 11 June 2010] [17:35:40] <sustrik>  there's specific interval of addresses assigned to multicast
| [Friday 11 June 2010] [17:35:58] <sustrik>  within that interval your apps must agree on specific address
| [Friday 11 June 2010] [17:36:02] <soren>    Right, right, sure.
| [Friday 11 June 2010] [17:36:16] <soren>    Right, it was just that last bit I wasn't sure about.
| [Friday 11 June 2010] [17:36:38] <soren>    How far does multicast reach? Broadcast domain?
| [Friday 11 June 2010] [17:36:56] <soren>    Or can it go further somehow?
| [Friday 11 June 2010] [17:37:05] <sustrik>  depends on how your routers are set
| [Friday 11 June 2010] [17:37:10] <soren>    Ok.
| [Friday 11 June 2010] [17:37:18] <sustrik>  but normally multicast is disabled on routers
| [Friday 11 June 2010] [17:38:10] <soren>    Gotcha.
| [Friday 11 June 2010] [17:38:29] <soren>    Ok, so not only must the interface used be UP and have MULTICAST set, it must also have an address.
| [Friday 11 June 2010] [17:38:42] <soren>    eth0 only passed two of those requirements :)
| [Friday 11 June 2010] [17:40:12] <soren>    sustrik: Thanks a lot! This has been very enlightening.
| [Friday 11 June 2010] [17:40:21] <sustrik>  you are welcome
| [Friday 11 June 2010] [21:42:02] Nick   Jeff_ is now known as Guest15169.
| 
| *** Logfile started
| *** on Sat Jun 12 08:51:31 2010
| 
| [Saturday 12 June 2010] [08:51:31] Topic    The channel topic is "Welcome!".
| [Saturday 12 June 2010] [08:51:31] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Saturday 12 June 2010] [08:51:37] Mode Channel modes: no messages from outside, topic protection
| [Saturday 12 June 2010] [08:51:37] Created  This channel was created on 2010-02-05 10:44.
| [Sunday 13 June 2010] [04:34:58] <rgl>  hello
| [Sunday 13 June 2010] [04:35:20] <rgl>  known any zeromq binding to nodejs?
| [Sunday 13 June 2010] [04:40:11] <guido_g>  not out of my head
| [Sunday 13 June 2010] [04:40:58] <sustrik>  what's nodejs?
| [Sunday 13 June 2010] [04:42:31] <guido_g>  http://nodejs.org/
| [Sunday 13 June 2010] [04:42:58] <guido_g>  sort of http server in java-script
| [Sunday 13 June 2010] [04:43:03] <sustrik>  a-ha
| [Sunday 13 June 2010] [04:43:11] <guido_g>  toy of the month :)
| [Sunday 13 June 2010] [04:43:39] <sustrik>  funny thing is that lot of people are basically doing http<->0mq bridges
| [Sunday 13 June 2010] [04:44:00] <guido_g>  http is *the* thing
| [Sunday 13 June 2010] [04:44:05] <sustrik>  :)
| [Sunday 13 June 2010] [04:44:12] <guido_g>  even for things it's suitable for
| [Sunday 13 June 2010] [04:44:36] <guido_g>  but what do i know, i'm only a technician
| [Sunday 13 June 2010] [04:44:56] <sustrik>  no idea here either
| [Sunday 13 June 2010] [04:45:17] <sustrik>  i'm a C person
| [Sunday 13 June 2010] [04:45:27] <sustrik>  huh, what's http?- style
| [Sunday 13 June 2010] [05:32:54] <Steffen___>   FYI, I wrote a Perl binding for 0MQ2 yesterday. http://github.com/tsee/ZeroMQ-Perl
| [Sunday 13 June 2010] [05:33:03] <Steffen___>   It's based on the C++ interface.
| [Sunday 13 June 2010] [05:33:24] <Steffen___>   Seems to be working fine. Adds 8us latency, according to my tests on a laptop.
| [Sunday 13 June 2010] [05:33:41] <Steffen___>   Some of the get/setsockopt calls are still untested/flaky.
| [Sunday 13 June 2010] [05:34:50] <Steffen___>   License is currently dual Artistic License/GPL just like Perl itself. No documentation (I wrote it in the afternoon). I'll be on a business trip for three weeks starting today, so no support either. I do intend to release it to CPAN and maintain it down the road.
| [Sunday 13 June 2010] [05:36:19] <Steffen___>   I'm reporting it here since I'm on the run and couldn't be bothered to subscribe to the mailing list just for that. Might do that when I get back. Feel free to contact me at smueller@cpan.org.
| [Sunday 13 June 2010] [05:37:09] <Steffen___>   PS: For non-Perl folks: Building it is as easy as "perl Makefile.PL && make && make test && sudo make install"
| [Sunday 13 June 2010] [05:38:37] <Steffen___>   Strange talking to myself ;)
| [Sunday 13 June 2010] [05:38:43] <Steffen___>   Have a nice week-end.
| [Sunday 13 June 2010] [07:48:14] Nick   y is now known as Guest66958.
| [Sunday 13 June 2010] [10:57:55] <mikko>    good morning
| [Sunday 13 June 2010] [10:58:00] <mikko>    or more like afternoon now
| [Sunday 13 June 2010] [13:02:30] Nick   y is now known as Guest98295.
| [Sunday 13 June 2010] [13:25:12] Nick   Guest98295 is now known as rgl.
| [Monday 14 June 2010] [00:16:57] <Gambit->  evenin' chaps
| [Monday 14 June 2010] [00:17:20] <Gambit->  I'm trying to make the architectural decision between zeromq and rabbitmq.  Anyone care to discuss, or have references to cite?
| [Monday 14 June 2010] [00:18:07] <sustrik>  hi
| [Monday 14 June 2010] [00:18:15] <sustrik>  depends on your scenario
| [Monday 14 June 2010] [00:18:19] <Gambit->  evenin' sustrik
| [Monday 14 June 2010] [00:18:22] <Gambit->  indeed it does
| [Monday 14 June 2010] [00:18:28] <sustrik>  what's your use case?
| [Monday 14 June 2010] [00:18:30] <Gambit->  Would you like a description?
| [Monday 14 June 2010] [00:18:34] <sustrik>  in broad terms?
| [Monday 14 June 2010] [00:18:36]     * Gambit- nods, "One moment while I type."
| [Monday 14 June 2010] [00:21:06] <Gambit->  Topology: a cluster of widely distributed devices with no mutual connectivity contracts.  Each device has several different active entities that may need to communiciate with a varying subset of other device in the cluster.
| [Monday 14 June 2010] [00:21:51] <sustrik>  SOA-style?
| [Monday 14 June 2010] [00:22:04] <Gambit->  You'll have to explain what you mean by that.
| [Monday 14 June 2010] [00:22:39] <sustrik>  ok, other way round: what industry?
| [Monday 14 June 2010] [00:22:54] <sustrik>  financials/embedded/supercomputing etc.
| [Monday 14 June 2010] [00:23:49] <Gambit->  technically speaking, we're a major traffic manipulation company and we're supporting clusters of our devices spread across customer installations communicating and coordinating with eachother in heirarchies of active-active groups.
| [Monday 14 June 2010] [00:24:55] <Gambit->  I can totally be more specific, but I'm still learning how to phrase the question, if you understand :)
| [Monday 14 June 2010] [00:25:03] <sustrik>  yep
| [Monday 14 June 2010] [00:25:32] <sustrik>  so the whole system is out of scope of a single entrerprise
| [Monday 14 June 2010] [00:25:44] <Gambit->  it may all be owned by one enterprise.
| [Monday 14 June 2010] [00:25:51] <Gambit->  but it might be spread across many divisions
| [Monday 14 June 2010] [00:26:11] <sustrik>  can there be a singe central point?
| [Monday 14 June 2010] [00:26:16] <Gambit->  our customers tend to do crazy things we don't expect, so any combination around there is likely.
| [Monday 14 June 2010] [00:26:20] <sustrik>  messaging "broker"?
| [Monday 14 June 2010] [00:26:34] <sustrik>  single*
| [Monday 14 June 2010] [00:26:46] <Gambit->  It's possible - though more likely there will be an active-active type point where there are multiple boxes that all act as failover points for eachother.
| [Monday 14 June 2010] [00:27:08] <sustrik>  but in overall, all is centralised
| [Monday 14 June 2010] [00:27:28] <sustrik>  all the failover boxes are at the same place, doing same thing
| [Monday 14 June 2010] [00:27:34] <Gambit->  in that case, yes.
| [Monday 14 June 2010] [00:27:57] <sustrik>  well, in such case i would prefer rabbitmq
| [Monday 14 June 2010] [00:28:00] <Gambit->  in other cases, there may be, say, 5 boxes in an active-active-active-active-active configuration without any particular head end.
| [Monday 14 June 2010] [00:29:23] <Gambit->  What is your logic?  Also, what is your experience? :)
| [Monday 14 June 2010] [00:29:27] <sustrik>  as far as I understand your scenario is a typical corporate scenario with centralised control and no need for strange topologies
| [Monday 14 June 2010] [00:29:37] <sustrik>  ah, one more thing:
| [Monday 14 June 2010] [00:29:45] <sustrik>  expected performance?
| [Monday 14 June 2010] [00:29:49] <Gambit->  well we may have boxes taht will have no connectivity for long periods of time, and then connect in.
| [Monday 14 June 2010] [00:30:03] <Gambit->  also, strange topologies will be mitigated most likely by having an overlay network.
| [Monday 14 June 2010] [00:30:18] <Gambit->  Performance is something of a elephant in the room at the moment.
| [Monday 14 June 2010] [00:30:32] <sustrik>  any estimates?
| [Monday 14 June 2010] [00:30:40] <Gambit->  Can you provide some buckets?
| [Monday 14 June 2010] [00:30:41] <sustrik>  in orders of magnitude?
| [Monday 14 June 2010] [00:30:54] <sustrik>  10 msgs./sec?
| [Monday 14 June 2010] [00:31:01] <sustrik>  1000000 msgs./sec?
| [Monday 14 June 2010] [00:31:04] <Gambit->  :)
| [Monday 14 June 2010] [00:31:34] <sustrik>  sub millisecond latency?
| [Monday 14 June 2010] [00:31:36] <Gambit->  I'm going to SWAG and say in the 100-1000/s range.
| [Monday 14 June 2010] [00:31:37] <sustrik>  etc.
| [Monday 14 June 2010] [00:31:53] <Gambit->  but that's probably awefully high.
| [Monday 14 June 2010] [00:32:16] <Gambit->  I don't think there's any expectation for latency less than 100ms.
| [Monday 14 June 2010] [00:32:27] <sustrik>  ok, rabbitmq looks to fit your case
| [Monday 14 June 2010] [00:32:35] <Gambit->  though our usecases are so fuzzy that it's hard to say for certain.
| [Monday 14 June 2010] [00:32:48] <Gambit->  we know we need some infrastructure, but we only know todays requirements.
| [Monday 14 June 2010] [00:32:56] <sustrik>  the rationale is that rabbitmq is a typical corporate middleware
| [Monday 14 June 2010] [00:33:10] <sustrik>  you'll have central server to control
| [Monday 14 June 2010] [00:33:15] <sustrik>  management tools
| [Monday 14 June 2010] [00:33:30] <sustrik>  decent performance etc.
| [Monday 14 June 2010] [00:33:40] <Gambit->  Well there may be no central server, there may just be 5-10 boxes, all peers.  But they could all be 'central' servers, I would expect.
| [Monday 14 June 2010] [00:33:43] <sustrik>  0mq is more adequate for extreme use cases
| [Monday 14 June 2010] [00:34:12] <Gambit->  can you establish your credentials and authority, for a moment?
| [Monday 14 June 2010] [00:34:26] <sustrik>  i'm 0mq's author :)
| [Monday 14 June 2010] [00:34:44] <Gambit->  god I love irc :D
| [Monday 14 June 2010] [00:35:03] <sustrik>  the point is that the two products are quite different in what they offer
| [Monday 14 June 2010] [00:35:11] <sustrik>  0mq:
| [Monday 14 June 2010] [00:35:15] <sustrik>  - it's a library
| [Monday 14 June 2010] [00:35:25] <sustrik>  - fully automatic, no management, like TCP
| [Monday 14 June 2010] [00:35:36] <sustrik>  - very fast
| [Monday 14 June 2010] [00:35:44] <sustrik>  - less feature complete
| [Monday 14 June 2010] [00:35:51] <sustrik>  rabbitmq:
| [Monday 14 June 2010] [00:35:54] <sustrik>  - it's a server
| [Monday 14 June 2010] [00:36:13] <sustrik>  - you manage it as any other server
| [Monday 14 June 2010] [00:36:28] <sustrik>  - performance is lower but pretty decent
| [Monday 14 June 2010] [00:36:38] <sustrik>  - more feature complete
| [Monday 14 June 2010] [00:37:39] <Gambit->  Whereabouts would you draw the performance line?
| [Monday 14 June 2010] [00:37:54] <sustrik>  50000 msgs/sec
| [Monday 14 June 2010] [00:38:43] <sustrik>  ah, it also depends on the size of messages
| [Monday 14 June 2010] [00:38:52] <sustrik>  1kb vs. 100GB
| [Monday 14 June 2010] [00:39:03] <sustrik>  for later i would go with 0mq
| [Monday 14 June 2010] [00:39:27] <Gambit->  I'm going to say we're in the 5-50k range
| [Monday 14 June 2010] [00:39:42] <sustrik>  yes, so you have no performance problem
| [Monday 14 June 2010] [00:39:48] <sustrik>  both solutions would be OK
| [Monday 14 June 2010] [00:39:55] <sustrik>  in performance terms
| [Monday 14 June 2010] [00:40:30]     * Gambit- nods
| [Monday 14 June 2010] [00:40:51] <Gambit->  Does 0mq support actual multicast?
| [Monday 14 June 2010] [00:40:55] <sustrik>  yes
| [Monday 14 June 2010] [00:41:03] <sustrik>  PGM in particular
| [Monday 14 June 2010] [00:42:13] <Gambit->  That's something we'd have to cobble together with rabbitmq, I believe.  I don't see any evidence of it being directly supported, though there are several plugins that could be used to bootstrap it.
| [Monday 14 June 2010] [00:42:35] <sustrik>  no, rabbitmq doesn't support it
| [Monday 14 June 2010] [00:42:50] <sustrik>  why do you need it?
| [Monday 14 June 2010] [00:42:58] <Gambit->  there's some things like 'shovels', which apparently lets you move messages from one queue to another, that could be used to fake it.
| [Monday 14 June 2010] [00:43:04] <Gambit->  Some nodes may be at the end of long thin mostly broken straws.
| [Monday 14 June 2010] [00:43:21] <Gambit->  if they have to do a broadcast, it's infeasible to expect them to send messages to everyone else.
| [Monday 14 June 2010] [00:43:44] <sustrik>  that's solved by having broker in the middle, no?
| [Monday 14 June 2010] [00:43:55] <sustrik>  send to broker, broker resends to everyone else
| [Monday 14 June 2010] [00:44:13] <Gambit->  The way I'd been thinking about it, though, is that you'd need to have a broker on each device.
| [Monday 14 June 2010] [00:44:20] <Gambit->  That may, obviously, be wrong.
| [Monday 14 June 2010] [00:44:45] <Gambit->  there are multiple agents on each device that would need to communicate to some subset of the rest of the cluster, after all.
| [Monday 14 June 2010] [00:45:13] <Gambit->  some orthogonal subset, that is.
| [Monday 14 June 2010] [00:45:13] <sustrik>  device = hw device?
| [Monday 14 June 2010] [00:45:27] <Gambit->  A device is a linux box, for the sake of this conversation.
| [Monday 14 June 2010] [00:45:36] <Gambit->  s/sake/intent/
| [Monday 14 June 2010] [00:45:46] <sustrik>  ok
| [Monday 14 June 2010] [00:46:11] <sustrik>  well, you can even use both products if needed
| [Monday 14 June 2010] [00:46:20] <sustrik>  there's nothing to stop you
| [Monday 14 June 2010] [00:46:39] <sustrik>  in your case i would try to play with both for a while to get some feeling
| [Monday 14 June 2010] [00:47:23] <Gambit->  How's the intercompatability?
| [Monday 14 June 2010] [00:47:42] <sustrik>  none at the moment
| [Monday 14 June 2010] [00:48:15] <Gambit->  So given what I'd describe, wouldn't I need to run a broker on each device?  Especially since they may not have connectivity to any other device?
| [Monday 14 June 2010] [00:48:43] <sustrik>  there are several services on a device, right?
| [Monday 14 June 2010] [00:48:49] <Gambit->  Correct.
| [Monday 14 June 2010] [00:48:55] <sustrik>  those are running 24/7?
| [Monday 14 June 2010] [00:48:59] <Gambit->  Yup.
| [Monday 14 June 2010] [00:49:23] <sustrik>  are the messages expected to survive service failure?
| [Monday 14 June 2010] [00:50:12]     * Gambit- wiggles his hand a bit, "Let's say no, because that will make it easier."
| [Monday 14 June 2010] [00:50:15] <sustrik>  or device failure (like power outage)
| [Monday 14 June 2010] [00:50:33] <sustrik>  it's pretty important question
| [Monday 14 June 2010] [00:50:45] <Gambit->  It's a massively important question.
| [Monday 14 June 2010] [00:50:45] <sustrik>  if you need it, you need a broker on each device
| [Monday 14 June 2010] [00:51:07] <Gambit->  We already have, essentially, a process that manages all of our configuration and related things.
| [Monday 14 June 2010] [00:51:33] <Gambit->  Currently we aren't designing for any additional repositories.
| [Monday 14 June 2010] [00:51:42] <Gambit->  which means we're not expecting anything to survive device failure.
| [Monday 14 June 2010] [00:52:06] <Gambit->  however, if two agents require a broker to communicate between themselves, then it's absolutely necessary to run a broker on each device, since each device may be running in a standalone configuration.
| [Monday 14 June 2010] [00:53:05] <sustrik>  if you need a brokerless design you have to use 0mq
| [Monday 14 June 2010] [00:53:31] <sustrik>  you have to have some hands-on experience to do a correct decision
| [Monday 14 June 2010] [00:53:36]     * Gambit- nods
| [Monday 14 June 2010] [00:53:45] <Gambit->  That said, there's no reason we can't run a broker on each box.
| [Monday 14 June 2010] [00:53:48] <sustrik>  but think of 0mq as something like TCP
| [Monday 14 June 2010] [00:53:59] <sustrik>  and rabbitmq of something like SQL server
| [Monday 14 June 2010] [00:54:15] <Gambit->  That crosses my eyes a bit :)
| [Monday 14 June 2010] [00:54:30] <Gambit->  but I think I catch your intent.
| [Monday 14 June 2010] [00:54:39] <sustrik>  :)
| [Monday 14 June 2010] [00:55:10] <Gambit->  How does 0mq handle membership?
| [Monday 14 June 2010] [00:55:21] <sustrik>  membership in what?
| [Monday 14 June 2010] [00:55:36] <Gambit->  For the use case where, all the way across the cluster, a new device comes up and requests to receive messages of a certain topic.
| [Monday 14 June 2010] [00:55:44] <sustrik>  ah
| [Monday 14 June 2010] [00:55:50] <Gambit->  Apologies, as always, for incorrect terminology usage.
| [Monday 14 June 2010] [00:56:02] <sustrik>  pseudocode:
| [Monday 14 June 2010] [00:56:23] <sustrik>  s = zmq_socket (SUBSCRIBER);
| [Monday 14 June 2010] [00:56:38] <sustrik>  s.connect ("tcp://myserver:5555");
| [Monday 14 June 2010] [00:56:56] <sustrik>  s.setsockopt (SUBSCRIBE, "ab.cd.");
| [Monday 14 June 2010] [00:57:01] <sustrik>  that's it
| [Monday 14 June 2010] [00:57:07] <Gambit->  who is 'myserver'?
| [Monday 14 June 2010] [00:57:19] <sustrik>  the peer you want to get messages from
| [Monday 14 June 2010] [00:57:22] <Gambit->  ah
| [Monday 14 June 2010] [00:57:37] <Gambit->  so I would have to connect to each peer I wanted to get messages from, and request the subscription?
| [Monday 14 June 2010] [00:57:46] <sustrik>  yes
| [Monday 14 June 2010] [00:57:52] <Gambit->  How does the multicast fit into that?
| [Monday 14 June 2010] [00:58:12] <sustrik>  s.connect ("pgm://eth0;224.0.0.1:5555");
| [Monday 14 June 2010] [00:58:27] <Gambit->  ah
| [Monday 14 June 2010] [00:58:30] <Gambit->  interesting.
| [Monday 14 June 2010] [00:59:04] <Gambit->  so you can use the multicast to get away from having to know specifically who is managing what.
| [Monday 14 June 2010] [00:59:26] <sustrik>  yes
| [Monday 14 June 2010] [00:59:52] <sustrik>  you have to have a node in the middle if you want to do everyone-to-everyone messaging
| [Monday 14 June 2010] [01:00:03] <sustrik>  with IP multicast it's your network switch
| [Monday 14 June 2010] [01:00:10] <Gambit->  yeah
| [Monday 14 June 2010] [01:00:14] <sustrik>  with tcp, you need the broker
| [Monday 14 June 2010] [01:00:17] <Gambit->  that ip switch is usually me.
| [Monday 14 June 2010] [01:00:26] <Gambit->  so we'd have to support that.
| [Monday 14 June 2010] [01:00:30]     * Gambit- contemplates.
| [Monday 14 June 2010] [01:00:56] <sustrik>  it's all on the local box?
| [Monday 14 June 2010] [01:01:06] <sustrik>  then definitely use TCP
| [Monday 14 June 2010] [01:01:08] <Gambit->  No, sorry, that was poorly said.
| [Monday 14 June 2010] [01:01:25] <Gambit->  Our product is often used as a load balancer.
| [Monday 14 June 2010] [01:01:41] <Gambit->  how similar is the wire protocol between 0mq and rabbitmq, btw?
| [Monday 14 June 2010] [01:01:46] <Gambit->  are you guys expecting to converge at somepoint?
| [Monday 14 June 2010] [01:02:39] <sustrik>  well, rabitmq is a multiprotocol server
| [Monday 14 June 2010] [01:02:58] <sustrik>  so it's shouldn't be hard to plug 0mq into it as an underlying transport
| [Monday 14 June 2010] [01:03:22] <sustrik>  especially that there's an Erlang binding for 0mq recently
| [Monday 14 June 2010] [01:03:28] <Gambit->  Again with the TCP/SQL Server comparisons :)
| [Monday 14 June 2010] [01:04:02] <Gambit->  I think I've been thinking of 0mq as another implementation of AMQP, when it's really not.
| [Monday 14 June 2010] [01:04:10] <sustrik>  no, it's not
| [Monday 14 June 2010] [01:04:43] <sustrik>  it's a layer in networking stack that allows you to speak with serveral peers at the same time
| [Monday 14 June 2010] [01:04:49] <sustrik>  that's more or less it
| [Monday 14 June 2010] [01:04:59] <Gambit->  So... A better PGM?
| [Monday 14 June 2010] [01:05:21] <sustrik>  PGM is only about data distribution
| [Monday 14 June 2010] [01:05:30] <Gambit->  Not about messages, eh?
| [Monday 14 June 2010] [01:05:44] <sustrik>  it's more about scenarios:
| [Monday 14 June 2010] [01:05:53] <sustrik>  PGM: send this message/data to everyone
| [Monday 14 June 2010] [01:06:03] <sustrik>  0MQ: 1. dtto
| [Monday 14 June 2010] [01:06:07] <sustrik>  2. request/reply
| [Monday 14 June 2010] [01:06:10] <sustrik>  3. load balancing
| [Monday 14 June 2010] [01:06:12] <sustrik>  etc.
| [Monday 14 June 2010] [01:06:43] <Gambit->  Right.
| [Monday 14 June 2010] [01:06:59] <Gambit->  Okay, many many thanks for your time.  Any other words of wisdom here?
| [Monday 14 June 2010] [01:07:27] <sustrik>  try it yourself, then decide :)
| [Monday 14 June 2010] [01:07:36]     * Gambit- grins and nods
| [Monday 14 June 2010] [01:07:52] <Gambit->  Right then, thanks :)
| [Monday 14 June 2010] [01:16:16] <Gambit->  Well, practically speaking I'm likely to delegate a large chunk of this.
| [Monday 14 June 2010] [01:16:18] <Gambit->  but yeah.
| [Monday 14 June 2010] [01:16:29] <Gambit->  okay, that's that report put together and sent off.
| [Monday 14 June 2010] [01:16:52] <Gambit->  Thanks again sustrik, strongly appreciate the dialog.  Next time you're in the Seattle area, give me a shout :)
| [Monday 14 June 2010] [01:17:17] <sustrik>  never been there, but i'll should once i get there :)
| [Monday 14 June 2010] [01:17:45] <Gambit->  it's a nice town :)
| [Monday 14 June 2010] [01:17:57] <Gambit->  righto, then, ciao!
| [Monday 14 June 2010] [01:17:59] Part   Gambit- has left this channel.
| [Monday 14 June 2010] [01:20:28] <umesh>    is there any way by which server notifies client while going down in zmq ... 
| [Monday 14 June 2010] [01:20:31] <umesh>    ?
| [Monday 14 June 2010] [01:24:00] <umesh>    there is no such way of sending the notification ?
| [Monday 14 June 2010] [01:34:07] <sustrik>  no, there's not, you would need a sync API for that
| [Monday 14 June 2010] [01:34:24] <sustrik>  you can of course send messages by hand over TCP if needed
| [Monday 14 June 2010] [01:45:13] <umesh>    ok
| [Monday 14 June 2010] [01:45:23] <umesh>    so not possible in zermq 
| [Monday 14 June 2010] [01:46:08] <umesh>    hand over tcp means ... while going down ...i can send message to peer notifying of it 
| [Monday 14 June 2010] [01:47:09] <umesh>    right ?
| [Monday 14 June 2010] [02:42:03] <umesh>    is it safe if I create a seperate thread for recv call ... in server ...
| [Monday 14 June 2010] [02:42:35] <umesh>    means instead of waiting for the recv in hte main process ... I will create thread and wait there ... 
| [Monday 14 June 2010] [02:45:47] <sustrik>  hand over tcp = open raw BSD socket, push the data through it
| [Monday 14 June 2010] [02:46:04] <sustrik>  yes, you can recv in a worker thread
| [Monday 14 June 2010] [02:46:30] <sustrik>  the only requirement is that each 0MQ socket is used from exactly one OS thread
| [Monday 14 June 2010] [02:47:17] <umesh>    ok
| [Monday 14 June 2010] [03:36:20] <mikko>    good morning
| [Monday 14 June 2010] [03:36:34] <sustrik>  morning
| [Monday 14 June 2010] [05:03:59] <mikko>    i wrote a http publisher for 0MQ last night
| [Monday 14 June 2010] [05:04:17] <mikko>    but if anyone happens to have need for such a thing it's here http://valokuva.org/~mikko/code/httpublish/
| [Monday 14 June 2010] [05:04:39] <mikko>    it takes a http post and publishes it over 0MQ
| [Monday 14 June 2010] [05:07:29] <sustrik>  mikko: i think we should somehow centralise links for useful stuff of this kind
| [Monday 14 June 2010] [05:08:00] <sustrik>  tools section on the website?
| [Monday 14 June 2010] [05:08:32] <sustrik>  at least mention it on the mailing list so that link won't get lost
| [Monday 14 June 2010] [05:31:53] <mikko>    sustrik: "Misc" maybe
| [Monday 14 June 2010] [05:32:06] <mikko>    i'll push it to github later so it won't get lost
| [Monday 14 June 2010] [05:32:12] <sustrik>  great
| [Monday 14 June 2010] [05:32:16] <mikko>    seems like i can push 6k messages a second with that
| [Monday 14 June 2010] [05:32:28] <mikko>    (testing with ab)
| [Monday 14 June 2010] [05:33:09] <sustrik>  is that good or bad result?
| [Monday 14 June 2010] [05:33:18]     * sustrik has little experience with http
| [Monday 14 June 2010] [05:34:10] <mikko>    it's fairly good 
| [Monday 14 June 2010] [05:34:22] <mikko>    doing the same thing over php i might get 800 - 1.2k
| [Monday 14 June 2010] [05:34:30] <sustrik>  ok, i see
| [Monday 14 June 2010] [05:34:33] <mikko>    i don't really know what to compare to
| [Monday 14 June 2010] [05:34:39] <sustrik>  ack
| [Monday 14 June 2010] [05:34:57] <mikko>    maybe even http device for 0MQ might make sense
| [Monday 14 June 2010] [05:34:58] <sustrik>  ok, when you have the gihub repo we'll find some place for the link
| [Monday 14 June 2010] [05:35:08] <mikko>    would allow pretty integration
| [Monday 14 June 2010] [05:35:18] <sustrik>  mikko: i thought about that actually
| [Monday 14 June 2010] [05:35:38] <sustrik>  but i am too lazy to write it :)
| [Monday 14 June 2010] [05:36:09] <sustrik>  wouldn't it make sense to turn your code into a device?
| [Monday 14 June 2010] [05:36:12] <mikko>    i remember seeing a tiny http parsing library somewhere
| [Monday 14 June 2010] [05:36:26] <mikko>    yes, the code currently uses libevent http abstraction
| [Monday 14 June 2010] [05:36:35] <mikko>    moving over to a device would mean leaving that abstraction
| [Monday 14 June 2010] [05:36:39] <mikko>    and parsing the http
| [Monday 14 June 2010] [05:36:55] <sustrik>  so now it sends the http message over 0mq?
| [Monday 14 June 2010] [05:37:11] <mikko>    yep
| [Monday 14 June 2010] [05:37:23] <mikko>    but all http protocol parsing is done by libevent
| [Monday 14 June 2010] [05:37:52] <mikko>    i remember the node.js had a tiny C library for parsing http in async fashion
| [Monday 14 June 2010] [05:37:59] <sustrik>  so the http header is stripped and only payload is passed over 0mq?
| [Monday 14 June 2010] [05:38:07] <mikko>    yes
| [Monday 14 June 2010] [05:38:12] <sustrik>  ok, got it
| [Monday 14 June 2010] [05:38:16] <mikko>    it responds to /publish 
| [Monday 14 June 2010] [05:38:24] <mikko>    POST /publish HTTP/1.0
| [Monday 14 June 2010] [05:38:29] <mikko>    Content-Length: 5
| [Monday 14 June 2010] [05:38:32] <mikko>     
| [Monday 14 June 2010] [05:38:34] <mikko>    aaaaa
| [Monday 14 June 2010] [05:38:44] <mikko>    would send aaaaa over to 0mq
| [Monday 14 June 2010] [05:39:16] <sustrik>  can you have a look at the node.js library?
| [Monday 14 June 2010] [05:39:30] <mikko>    yeah, trying to find
| [Monday 14 June 2010] [05:41:40] <mikko>    http://github.com/ry/http-parser
| [Monday 14 June 2010] [05:41:43] <mikko>    i think it's that one
| [Monday 14 June 2010] [05:41:59] <mikko>    the readme looks promising
| [Monday 14 June 2010] [05:42:14]     * sustrik is checking it
| [Monday 14 June 2010] [05:44:15] <sustrik>  it looks viable
| [Monday 14 June 2010] [05:45:27] <mikko>    i could take a poke to it
| [Monday 14 June 2010] [05:45:30] <mikko>    later today
| [Monday 14 June 2010] [05:45:44] <mikko>    good introduction to devices if nothing else :)
| [Monday 14 June 2010] [05:46:18] <sustrik>  devices are dead simple
| [Monday 14 June 2010] [06:30:40] <rgl>  mikko, have you seen zed mongrel2.org ?
| [Monday 14 June 2010] [06:33:09] <mikko>    rgl: yeah, i saw the posting on mailing-lists
| [Monday 14 June 2010] [06:33:20] <mikko>    mongrel however reminds me of Ruby for some reason
| [Monday 14 June 2010] [06:36:43] <rgl>  yes. it's an http server for ruby.
| [Monday 14 June 2010] [06:36:55] <rgl>  thou... mongrel2 is no longer that.
| [Monday 14 June 2010] [06:37:12] <rgl>  mainly mongrel has a nice http parser. which is used in mongrel2.
| [Monday 14 June 2010] [06:41:51] <mikko>    mongrel2 is C ?
| [Monday 14 June 2010] [06:43:07] <mikko>    "Since Mongrel2 will be written in C it should do files pretty well too, but easy application architectures and operations support will come first. "
| [Monday 14 June 2010] [07:07:36] <rgl>  yup.
| [Monday 14 June 2010] [08:10:09] <mikko>    sustrik: forwarder.cpp
| [Monday 14 June 2010] [08:10:17] <sustrik>  yes?
| [Monday 14 June 2010] [08:10:18] <mikko>    sustrik: should that contain zmq_msg_close for the message?
| [Monday 14 June 2010] [08:10:26] <sustrik>  let me see
| [Monday 14 June 2010] [08:11:27] <sustrik>  there's no zmq_msg_close afaics
| [Monday 14 June 2010] [08:11:45] <mikko>    i mean should there be?
| [Monday 14 June 2010] [08:11:54] <sustrik>  it's an infinite loop
| [Monday 14 June 2010] [08:12:09] <mikko>    ah ok
| [Monday 14 June 2010] [08:12:18] <mikko>    btw
| [Monday 14 June 2010] [08:12:36] <mikko>    how do you normally handle errors in constructing the objects inside zeromq2?
| [Monday 14 June 2010] [08:12:41] <mikko>    throw an exception?
| [Monday 14 June 2010] [08:12:50] <sustrik>  out of memory you mean?
| [Monday 14 June 2010] [08:12:52] <sustrik>  assert
| [Monday 14 June 2010] [08:13:13] <mikko>    ok
| [Monday 14 June 2010] [08:13:30] <sustrik>  as for the infinite loop, it should be fixed
| [Monday 14 June 2010] [08:13:34] <sustrik>  i forgot about it
| [Monday 14 June 2010] [08:13:55] <sustrik>  now with 2.0.7 the loop can be exited by terminating the associated context
| [Monday 14 June 2010] [08:14:34]     * sustrik makes a mental note
| [Monday 14 June 2010] [09:11:26] <willvarfar>   so does zeromq handle persistance of messages, mailbox-like?
| [Monday 14 June 2010] [09:29:47] <sustrik>  willvarfar: no, it does not
| [Monday 14 June 2010] [09:37:37] <willvarfar>   what message queue system would you recommend if I needed offline delivery?
| [Monday 14 June 2010] [09:53:48] <sustrik>  rabbitmq
| [Monday 14 June 2010] [11:08:49] <rgl>  sustrik, even the queue device? I mean, doesn't it queue messages until someone can pick them up?
| [Monday 14 June 2010] [11:17:10] <sustrik>  rgl: it does
| [Monday 14 June 2010] [11:17:17] <sustrik>  but it does so in memory
| [Monday 14 June 2010] [11:17:31] <sustrik>  so in case of power failure the messages are loast
| [Monday 14 June 2010] [11:17:35] <sustrik>  lost*
| [Monday 14 June 2010] [11:18:04] <rgl>  ah, non persistence there?  ok.
| [Monday 14 June 2010] [11:20:49] <mikko>    sustrik: are there any plans for persistence?
| [Monday 14 June 2010] [11:23:22] <sustrik>  mikko: not near-term plans
| [Monday 14 June 2010] [11:24:02] <sustrik>  on-disk offload (swap) should be added shortly, but no real persistence
| [Monday 14 June 2010] [11:24:09] <mikko>    the queue device looks pretty simple
| [Monday 14 June 2010] [11:24:27] <sustrik>  it is
| [Monday 14 June 2010] [11:24:54] <mikko>    the http device looks like to be more complicated
| [Monday 14 June 2010] [11:25:16] <sustrik>  the http part maybe
| [Monday 14 June 2010] [11:25:41] <sustrik>  the 0mq part would be the same as in queue device afaiu
| [Monday 14 June 2010] [11:26:04] <mikko>    should i inherit http_socket from socket_base?
| [Monday 14 June 2010] [11:26:33] <mikko>    im still not got quite into the code
| [Monday 14 June 2010] [11:26:34] <sustrik>  well, there are two options
| [Monday 14 June 2010] [11:26:48] <sustrik>  either you add http as a new transport mechanism
| [Monday 14 June 2010] [11:26:55] <sustrik>  aside of tcp, inproc et al.
| [Monday 14 June 2010] [11:27:13] <sustrik>  that's pretty complex to implement, but most generic solution
| [Monday 14 June 2010] [11:27:33] <sustrik>  the other option is create a device that would be http<->0mq bridge
| [Monday 14 June 2010] [11:28:00] <sustrik>  http connections are on one side, 0mq connections on the other
| [Monday 14 June 2010] [11:28:14] <mikko>    i was thinking about starting with porting the publisher over to 0mq device
| [Monday 14 June 2010] [11:28:31] <sustrik>  sorry, what publisher?
| [Monday 14 June 2010] [11:28:38] <mikko>    httpublish.c i pasted earlier
| [Monday 14 June 2010] [11:29:03] <mikko>    and then maybe extend to have a req/rep support as well
| [Monday 14 June 2010] [11:29:26] <mikko>    so you could do a http call -> 0mq req -> 0mq rep -> http rep
| [Monday 14 June 2010] [11:30:45] <sustrik>  right, it's a standalone application
| [Monday 14 June 2010] [11:30:55] <sustrik>  so it's the latter solution (the bridge)
| [Monday 14 June 2010] [11:49:29] <zedas>    mikko, rgl: yep, mongrel2 is C.
| [Monday 14 June 2010] [11:54:04] <CIA-17>   rbzmq: 03Brian Buchanan 07master * r3d19085 10/ rbzmq.cpp : remove support for libzmq < 2.0.7 - http://bit.ly/d26OdF
| [Monday 14 June 2010] [11:54:05] <CIA-17>   rbzmq: 03Brian Buchanan 07master * r92d3af8 10/ (.gitignore zmq.gemspec rbzmq.c rbzmq.cpp): add rdoc documentation - http://bit.ly/cZzye1
| [Monday 14 June 2010] [11:54:31] <rgl>  zedas, is there a reason to call it mongrel2? I mean, why use the mongrel moniker?
| [Monday 14 June 2010] [12:03:13] <zedas>    rgl: 1. at the core is the mongrel http parser, which is the main thing.  2. i've wanted to reprise the mongrel server for a long time. 3. the current maintainers of mongrel let it die, which sucks. 4. the name still means "good web server" to a lot of people. 5. i don't believe everything in the universe should fit neatly into a single moniker like a library catalog.
| [Monday 14 June 2010] [12:06:57] <rgl>  zedas, I see. that perfectly acceptable :D
| [Monday 14 June 2010] [12:22:58] <mikko>    zedas: it is plain C?
| [Monday 14 June 2010] [12:24:15] <mikko>    good
| [Monday 14 June 2010] [12:24:20] <mikko>    i'll keep my eye on that
| [Monday 14 June 2010] [12:26:46] <zedas>    mikko: so far.
| [Monday 14 June 2010] [15:24:41] Notice -NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Monday 14 June 2010] [15:24:41] Notice -NickServ- You are now identified for travlr.
| [Monday 14 June 2010] [15:24:41] CTCP   Received Version request from frigg.
| [Monday 14 June 2010] [15:24:43] Topic  The channel topic is "Welcome!".
| [Monday 14 June 2010] [15:24:43] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Monday 14 June 2010] [15:24:43] Notice -ChanServ- [#rekonq] welcome to rekonq, webkit KDE browser, channel
| [Monday 14 June 2010] [15:24:49] Mode   Channel modes: no messages from outside, topic protection
| [Monday 14 June 2010] [15:24:49] Created    This channel was created on 2010-02-05 10:44.
| [Monday 14 June 2010] [18:33:40] Nick   iFire` is now known as iFire.
| [Monday 14 June 2010] [20:41:43] <travisbrady>  sustrik: is the example at the bottom of this page out of date? http://api.zeromq.org/zmq_getsockopt.html the simple program I wrote to emulate it is crashing http://pastie.org/1004700 on Mac OS X
| [Monday 14 June 2010] [21:36:15] <foysavas> zedas: mikko: mongrel may have a good name to it, but sequels tend to suck. besides what ever happened to naming it gaegogi?
| [Monday 14 June 2010] [22:10:35] <zedas>    foysavas: too offensive
| [Tuesday 15 June 2010] [01:39:04] Part  abadr has left this channel.
| [Tuesday 15 June 2010] [01:48:59] Mode  ChanServ gives CIA-17 permission to talk.
| [Tuesday 15 June 2010] [01:55:09] <sustrik> travisbrady: yes, the example is broken
| [Tuesday 15 June 2010] [01:55:51] <sustrik> the last parameter should be pointer to size not the size itself
| [Tuesday 15 June 2010] [01:55:55] <sustrik> thanks for spotting this
| [Tuesday 15 June 2010] [01:58:50] <travisbrady> sustrik: sure, glad to help.  I'm working on a client lib and polling and getsockopt are all I've got left
| [Tuesday 15 June 2010] [01:59:36] <sustrik> great!
| [Tuesday 15 June 2010] [02:00:14] <travisbrady> I've got the simple server and the chat examples working nicely.  need to do the perf stuff next
| [Tuesday 15 June 2010] [02:01:13] <sustrik> yes, that's always interesting
| [Tuesday 15 June 2010] [02:01:33] <sustrik> seeing how much your language runtime adds to latency
| [Tuesday 15 June 2010] [02:02:41] <travisbrady> Any idea which languages (outside of c/c++) are fastest currently?
| [Tuesday 15 June 2010] [02:02:56] <CIA-17>  zeromq2: 03Martin Sustrik 07master * r9858447 10/ doc/zmq_getsockopt.txt : getsockopt documentation fixed - http://bit.ly/aeBuDC
| [Tuesday 15 June 2010] [02:03:08] <sustrik> C is the native API
| [Tuesday 15 June 2010] [02:03:15] <sustrik> so it's definitely the fastest
| [Tuesday 15 June 2010] [02:03:25] <sustrik> however, C++ is just a thin wrapper
| [Tuesday 15 June 2010] [02:03:37] <sustrik> that gets optimised away anyway
| [Tuesday 15 June 2010] [02:03:46] <sustrik> so it should be as fast as C
| [Tuesday 15 June 2010] [02:05:16] <travisbrady> But apart from those is java introduce the least latency?  Haskell? 
| [Tuesday 15 June 2010] [02:05:41] <travisbrady> pardon me, I mean to say "DOES java" not "is Java", must be time for bed
| [Tuesday 15 June 2010] [02:09:33] <sustrik> depends on message size
| [Tuesday 15 June 2010] [02:09:57] <sustrik> brian grager done a lot of work on using zero-copy in python binding
| [Tuesday 15 June 2010] [02:10:09] <sustrik> so the performance for large messages is equivalent to C
| [Tuesday 15 June 2010] [02:12:14] <sustrik> compiled languages on the other hand may have the least performance impact on small messages (List, .NET)
| [Tuesday 15 June 2010] [02:12:18] <sustrik> Lisp*
| [Tuesday 15 June 2010] [02:12:28] <sustrik> Java
| [Tuesday 15 June 2010] [02:29:26] <umesh>   I have a client server code using req-rep sockets ...
| [Tuesday 15 June 2010] [02:29:47] <umesh>   I start a client first ... 
| [Tuesday 15 June 2010] [02:30:47] <umesh>   if I don't start the server it wiats indefinitely ... is there any way to detect error like server is not up or connection reset ... if server goes down before client send etc ...
| [Tuesday 15 June 2010] [02:30:58] <umesh>   waits*
| [Tuesday 15 June 2010] [02:36:27] <sustrik> no
| [Tuesday 15 June 2010] [02:39:11] <umesh>   no way through zmq_poll as well ?
| [Tuesday 15 June 2010] [02:44:04] <sustrik> no, 0MQ is async library
| [Tuesday 15 June 2010] [02:44:16] <sustrik> the message gets sends once it's possible
| [Tuesday 15 June 2010] [02:44:26] <sustrik> at the time you call zmq_send it's just queued
| [Tuesday 15 June 2010] [02:44:43] <sustrik> if you want to use your 0mq server with sync client
| [Tuesday 15 June 2010] [02:45:00] <sustrik> i would suggest simply using raw TCP connection on the clients side
| [Tuesday 15 June 2010] [02:45:28] <sustrik> there was a discussion about writing a sync 0mq client couple of times
| [Tuesday 15 June 2010] [02:45:33] <sustrik> but nodody really did it
| [Tuesday 15 June 2010] [02:49:03] <umesh>   ok ... thanks
| [Tuesday 15 June 2010] [08:02:57] <CIA-17>  zeromq2: 03Martin Sustrik 07master * r341e8a2 10/ AUTHORS : test commit - http://bit.ly/d13f9p
| [Tuesday 15 June 2010] [11:37:34] <CIA-17>  rbzmq: 03Brian Buchanan 07master * rdb6d541 10/ .gitignore : ignore *.tmproj - http://bit.ly/c0AocM
| [Tuesday 15 June 2010] [18:18:44] <rgl> zedas, I'm almost convinced to start using fossil. the last sentence on your post was brutal heheh
| [Tuesday 15 June 2010] [18:54:37] <zedas>   rgl: hehe, i calls it like i see it. :-)
| 
| *** Logfile started
| *** on Wed Jun 16 00:55:18 2010
| 
| [Wednesday 16 June 2010] [00:55:18] Topic   The channel topic is "Welcome!".
| [Wednesday 16 June 2010] [00:55:18] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 16 June 2010] [00:55:24] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 16 June 2010] [00:55:24] Created This channel was created on 2010-02-05 10:44.
| [Wednesday 16 June 2010] [01:05:09] Part    abadr has left this channel.
| [Wednesday 16 June 2010] [01:18:11] <sustrik>   aunc: hi
| [Wednesday 16 June 2010] [01:19:18] <guido_g>   long gone he is :)
| [Wednesday 16 June 2010] [01:19:34] <guido_g>   good morning, btw
| [Wednesday 16 June 2010] [01:19:38] <sustrik>   morning
| [Wednesday 16 June 2010] [01:19:48] <sustrik>   missed that
| [Wednesday 16 June 2010] [01:20:24] <guido_g>   easy, it's early
| [Wednesday 16 June 2010] [01:20:54] <sustrik>   you are in CET as well?
| [Wednesday 16 June 2010] [01:21:05] <guido_g>   yes
| [Wednesday 16 June 2010] [01:22:24] <guido_g>   just fell out of bed :)
| [Wednesday 16 June 2010] [01:31:25] <sustrik>   yes made my tea
| [Wednesday 16 June 2010] [01:32:00] <guido_g>   2nd coffee here
| [Wednesday 16 June 2010] [01:32:36] <guido_g>   the news say the world is still crazy, so everthing is as usual
| [Wednesday 16 June 2010] [01:35:08] <sustrik>   :)
| [Wednesday 16 June 2010] [03:32:14] <guido_g>   re
| [Wednesday 16 June 2010] [05:50:29] <Efhache>   Hi everybody... I need some help about ZMQ... I've found a tutorial about instant messaging on the zmq website 
| [Wednesday 16 June 2010] [05:51:32] <Efhache>   with referece to a "chat example" in the zmq package....  Where can I find it?  I've seen into the coockbook a link to a chat example but the link is broked
| [Wednesday 16 June 2010] [05:51:40] <Efhache>   Some one have the source code?
| [Wednesday 16 June 2010] [05:59:50] <guido_g>   it might be the links need an update because the repos have been renamed
| [Wednesday 16 June 2010] [06:00:05] <guido_g>   have a look at the mailing list for the new repository names
| [Wednesday 16 June 2010] [06:26:00] <sustrik>   Efhache: Ok, the links are fixed now
| [Wednesday 16 June 2010] [07:04:42] <Efhache>   with a lot of delay....  thank you sustrik for your help :-)
| [Wednesday 16 June 2010] [07:05:00] <sustrik>   you are welcome!
| [Wednesday 16 June 2010] [07:19:06] <Efhache>   just one more question : this is code is in link with the "Intant Messaging (tutorial) " on the zmq website?
| [Wednesday 16 June 2010] [07:19:27] <Efhache>   I do not find a "chatroom" process in the code. Is it right?
| [Wednesday 16 June 2010] [07:22:31] <umesh_>    I am using the xreq/xrep sockets ...
| [Wednesday 16 June 2010] [07:23:06] <umesh_>    I have send the single req from client to server ... but i am getting two messages in the server ...
| [Wednesday 16 June 2010] [07:23:21] <umesh_>    also I am not getting the response back in the client ...
| [Wednesday 16 June 2010] [07:35:04] <guido_g>   *sigh*
| [Wednesday 16 June 2010] [07:35:23] <guido_g>   first part of the message received is the id, second part the data
| [Wednesday 16 June 2010] [07:35:44] <guido_g>   you have to prepend the id to the result returned
| [Wednesday 16 June 2010] [07:40:26] <umesh_>    ok ...
| [Wednesday 16 June 2010] [07:41:11] <umesh_>    if I am sending multiple responses ... then all the responses should have id ...
| [Wednesday 16 June 2010] [07:59:20] <guido_g>   multiple responses to one are done with multiple message parts
| [Wednesday 16 June 2010] [07:59:27] <guido_g>   *to one request
| [Wednesday 16 June 2010] [08:01:14] <sustrik>   Efhache: the tutorial is outdated
| [Wednesday 16 June 2010] [08:01:24] <sustrik>   have a look at README file in the project
| [Wednesday 16 June 2010] [08:08:46] <umesh_>    I do not want to use that ... one of the reason being it will only send data once on the wire ...
| [Wednesday 16 June 2010] [08:09:07] <umesh_>    I have application line which sends status information on wire ...
| [Wednesday 16 June 2010] [08:09:36] <umesh_>    e.g. I am installing applicatiob remotely and that send the status in % of application installed ...
| [Wednesday 16 June 2010] [08:14:06] <guido_g>   (x)req/(x)rep is built to supoort the one request and one response pattern
| [Wednesday 16 June 2010] [08:14:28] <guido_g>   if you want to have something different, use a different socket type
| [Wednesday 16 June 2010] [08:18:12] <umesh_>    but sending the single response is not even working ...
| [Wednesday 16 June 2010] [08:18:30] <guido_g>   w/o the code we can only guess
| [Wednesday 16 June 2010] [08:18:37] <umesh_>    Assertion failed: msg_->flags & ZMQ_MSG_MORE (xrep.cpp:146)
| [Wednesday 16 June 2010] [08:19:05] <umesh_>    and if I provide SNDMORE flag in send ... it does not crash but does not recv anything ...
| [Wednesday 16 June 2010] [08:19:23] <guido_g>   umesh_: show the code
| [Wednesday 16 June 2010] [08:19:52] <sustrik>   umesh_: if you are sending responses via XREP socket
| [Wednesday 16 June 2010] [08:19:53] <guido_g>   and I mean the code that _actually_ has been run
| [Wednesday 16 June 2010] [08:20:08] <sustrik>   you have to prefix the response by the requester ID
| [Wednesday 16 June 2010] [08:20:23] <sustrik>   the same you've get with the request
| [Wednesday 16 June 2010] [08:20:41] <guido_g>   that's what i told him above
| [Wednesday 16 June 2010] [08:21:13] <sustrik>   the assert just checks that there are at least two parts to the message: ID and body
| [Wednesday 16 June 2010] [08:21:23] <sustrik>   xrep.cpp:146 i mean
| [Wednesday 16 June 2010] [08:22:26] <umesh_>    http://pastebin.com/nQigmsKx
| [Wednesday 16 June 2010] [08:22:35] <umesh_>    check here at pastebin
| [Wednesday 16 June 2010] [08:22:51] <umesh_>    this is just the server part ...
| [Wednesday 16 June 2010] [08:23:24] <umesh_>    i think I got a error ...
| [Wednesday 16 June 2010] [08:23:35] <umesh_>    i need to send 2 responses ... 
| [Wednesday 16 June 2010] [08:23:56] <umesh_>    in first id and second actaul resposne
| [Wednesday 16 June 2010] [08:24:29] <umesh_>    but what i did was i just sent one response in which id is prepended to response 
| [Wednesday 16 June 2010] [08:24:50] <guido_g>   you need to send a 2 part message
| [Wednesday 16 June 2010] [08:25:39] <guido_g>   the first part (with the id) is sent with the ZMQ_MSG_MORE flag set
| [Wednesday 16 June 2010] [08:25:53] <guido_g>   the 2nd part is your response, w/o the flag set
| [Wednesday 16 June 2010] [08:28:36] <umesh_>    its working now 
| [Wednesday 16 June 2010] [08:29:07] <umesh_>    is there no way to send multiple responses to the single request ... without multipart messages ...
| [Wednesday 16 June 2010] [08:29:08] <umesh_>    ?
| [Wednesday 16 June 2010] [08:29:20] <guido_g>   no
| [Wednesday 16 June 2010] [08:32:52] <umesh_>    ok
| [Wednesday 16 June 2010] [12:04:52] Nick    mw_ is now known as mw.
| [Wednesday 16 June 2010] [20:35:14] <rgl>   zedas, go mongrel go! :-)
| [Wednesday 16 June 2010] [21:19:18] Topic   The channel topic is "Welcome!".
| [Wednesday 16 June 2010] [21:19:18] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 16 June 2010] [21:19:24] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 16 June 2010] [21:19:24] Created This channel was created on 2010-02-05 10:44.
| 
| *** Logfile started
| *** on Wed Jun 16 23:49:26 2010
| 
| [Wednesday 16 June 2010] [23:49:26] Topic   The channel topic is "Welcome!".
| [Wednesday 16 June 2010] [23:49:26] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 16 June 2010] [23:49:32] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 16 June 2010] [23:49:32] Created This channel was created on 2010-02-05 10:44.
| [Thursday 17 June 2010] [00:07:15] <nak>    hi
| [Thursday 17 June 2010] [00:59:05] <sustrik>    nak: hi
| [Thursday 17 June 2010] [01:05:15] <guido_g>    good morning all
| [Thursday 17 June 2010] [01:08:57] <nak>    sustrik: trying to code an irc bot using zeromq
| [Thursday 17 June 2010] [01:08:59] <nak>    in c
| [Thursday 17 June 2010] [01:09:05] <nak>    could you give me any tips on how to set this up
| [Thursday 17 June 2010] [01:09:10] <nak>    so far i've gotten to the zmq_connect part
| [Thursday 17 June 2010] [01:10:37] <sustrik>    there's an example that works that way
| [Thursday 17 June 2010] [01:11:11] <sustrik>    http://github.com/zeromq/zeromq-chat
| [Thursday 17 June 2010] [01:12:49] <nak>    thanks
| [Thursday 17 June 2010] [01:16:14] <nak>    sustrik: the s.connect there isn't the same as the one in c
| [Thursday 17 June 2010] [01:16:23] <nak>    in c you have to send a tcp://address:port
| [Thursday 17 June 2010] [01:16:28] <nak>    there you just connect?
| [Thursday 17 June 2010] [01:17:03] <sustrik>    sorry, what are you speaking about?
| [Thursday 17 June 2010] [01:19:08] <nak>    int zmq_connect (void *socket, const char *address);
| [Thursday 17 June 2010] [01:19:23] <nak>    where the format has to be rc = zmq_connect (socket, "tcp://server001:5555");
| [Thursday 17 June 2010] [01:19:28] <sustrik>    yes
| [Thursday 17 June 2010] [01:19:44] <nak>    ok
| [Thursday 17 June 2010] [01:27:46] <nak>            zmq::message_t msg (strlen (textbuf) + 1);
| [Thursday 17 June 2010] [01:27:46] <nak>            memcpy (msg.data (), textbuf, msg.size ());
| [Thursday 17 June 2010] [01:27:49] <nak>    hnn
| [Thursday 17 June 2010] [01:28:03] <nak>    so in c this would be zmq_msg_t msg = strlen (textbuf) + 1;
| [Thursday 17 June 2010] [01:28:17] <nak>    and the memcpy?
| [Thursday 17 June 2010] [01:40:18] <sustrik>    zmq_msg_t msg;
| [Thursday 17 June 2010] [01:40:35] <sustrik>    zmq_msg_init_size (&msg, strlen (textbuf) + 1);
| [Thursday 17 June 2010] [01:40:42] <sustrik>    memcpy (...)
| [Thursday 17 June 2010] [01:51:27] <nak>    sustrik: http://codepad.org/XGEpa7gw
| [Thursday 17 June 2010] [01:51:34] <nak>    i don't know the zeromq types, etc
| [Thursday 17 June 2010] [01:51:37] <nak>    foreign to me.
| [Thursday 17 June 2010] [01:51:51] <nak>    what should i pass to memcpy
| [Thursday 17 June 2010] [01:51:54] <nak>    msg.data?
| [Thursday 17 June 2010] [01:53:39] <guido_g>    http://api.zeromq.org/zmq_msg_init_size.html <- docs
| [Thursday 17 June 2010] [01:53:55] <guido_g>    http://api.zeromq.org/zmq.html <- even more docs
| [Thursday 17 June 2010] [01:59:43] <nak>    :)
| [Thursday 17 June 2010] [01:59:57] Part nak has left this channel.
| 
| *** Logfile started
| *** on Thu Jun 17 02:39:46 2010
| 
| [Thursday 17 June 2010] [02:39:46] Topic    The channel topic is "Welcome!".
| [Thursday 17 June 2010] [02:39:46] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Thursday 17 June 2010] [02:39:52] Mode Channel modes: no messages from outside, topic protection
| [Thursday 17 June 2010] [02:39:52] Created  This channel was created on 2010-02-05 10:44.
| [Thursday 17 June 2010] [02:42:48] <umesh>  how can i build pyzmq with static zmq libraries ...
| [Thursday 17 June 2010] [02:54:02] <sustrik>    question for brian
| [Thursday 17 June 2010] [02:54:14] <sustrik>    try asking on mailing list
| [Thursday 17 June 2010] [02:54:34] <umesh>  ok
| [Thursday 17 June 2010] [04:58:04] <middayc>    I would like to make a Rebol binding to 0mq .. are there any zmqlib.so / dll available maybe that one could download without recompiling?
| [Thursday 17 June 2010] [05:02:45] <CIA-17> zeromq2: 03Martin Sustrik 07master * r9151de3 10/ src/socket_base.cpp : generate identity for transient inproc connections - http://bit.ly/bsKHxn
| [Thursday 17 June 2010] [05:03:13] <sustrik>    middayc: not that I am aware of
| [Thursday 17 June 2010] [05:03:22] <sustrik>    however, recompiling takes few seconds
| [Thursday 17 June 2010] [05:03:50] <sustrik>    well, there are some linux packages out there
| [Thursday 17 June 2010] [05:04:26] <middayc>    I am on windows now and I don't have VS2008, just VS6 and probably to crappy computer to make VS2008 run well anyway
| [Thursday 17 June 2010] [05:06:09] <sustrik>    you don't need it to run well
| [Thursday 17 June 2010] [05:06:16] <sustrik>    it's a very small project
| [Thursday 17 June 2010] [05:06:28] <sustrik>    so it'll compile even on crappy computer
| [Thursday 17 June 2010] [05:07:27] <middayc>    last time I tried VS2008 it was horrible.. I will try it again .. ok thanks :) .. just wanted to make sure I am not wasting time downloading and installing visual studio if there is some dll somewhere to try
| [Thursday 17 June 2010] [05:09:19] <sustrik>    middayc: optionally, it should be compilable under mingw if you have that installed
| [Thursday 17 June 2010] [05:10:31] <middayc>    I think I have.. I am not too good lower level programmer .. I will try the default way now. if mongrel2 plans work 0mq will get quite some attention :)
| [Thursday 17 June 2010] [05:11:30] <sustrik>    ok
| [Thursday 17 June 2010] [05:24:39] <middayc>    ha, I have the dll, I already had vs2008 installed, just didn't have it registered .. I will tell you if I make the rebol binding. Thanks
| [Thursday 17 June 2010] [05:26:21] <middayc>    I see you also have interprocess communication? so this could be a good option to make for example rebol apps multicore?
| [Thursday 17 June 2010] [05:42:03] <sustrik>    ipc doesn't work on win32 sadly
| [Thursday 17 June 2010] [05:42:13] <sustrik>    but using TCP loopback works well
| [Thursday 17 June 2010] [05:42:44] <sustrik>    e.g: zmq_bind ("tcp://127.0.0.1:5555"); 
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: 03Martin Hurton 07master * r4777fe4 10/ src/pipe.cpp : 
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: pipe: fix bug in rollback() method
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: The msgs_written variable keeps track how many complete
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: messages have been written so far. The rollback operation drops all
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: fragments of the last incomplete message so it shouldn't
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: change this variable at all. - http://bit.ly/9SRCM8
| [Thursday 17 June 2010] [08:53:29] <middayc>    what would a errno 19 or 22 mean with bind (in .h file when I see errors (if I see correctly) thy should all be above 156384712
| [Thursday 17 June 2010] [09:10:41] <middayc>    ah, I found strerror
| [Thursday 17 June 2010] [09:11:40] <sustrik>    middayc: yeah, strerror should help
| [Thursday 17 June 2010] [09:11:56] <sustrik>    the error you are seeing is probably defined in a system header somewhere
| [Thursday 17 June 2010] [09:18:47] <middayc>    19 means "no such device" I get -1 and "no such device on zmq-bind sock "tcp://localhost:5555"  but 0 and still 19 on zmq-bind sock "tcp://127.0.0.1:5555" ... later with recv I get "Operation cannot be accomplished in current state" but I am not sure if I handle &msg there properly yet (in binding)
| [Thursday 17 June 2010] [09:36:03] <sustrik>    what's happens when you do zmq_bind ("tcp://127.0.0.1:5555") ?
| [Thursday 17 June 2010] [09:38:50] <middayc>    I get 0 (but if I call errno anyway it returns "no such device" if it matters)
| [Thursday 17 June 2010] [09:39:41] <sustrik>    if you get 0 it's OK
| [Thursday 17 June 2010] [09:40:21] <sustrik>    note that on win32 there are no interface names
| [Thursday 17 June 2010] [09:40:33] <sustrik>    so you have to bind using an IP address of the interface
| [Thursday 17 June 2010] [09:43:57] <middayc>    aha, I saw that localhost didn't work.. no problem . I think I am having problem creating and passing that zmq_msg_t struct to init and then recv .. this is completely on my end (rebol's) so I shouldn't bother you about it
| [Thursday 17 June 2010] [09:51:20] <sustrik>    ok
| [Thursday 17 June 2010] [10:21:59] <middayc>    I wrote this in rebol chat (it's not so big community) so I guess I will bother you a little more :) .. http://www.qwikitxt.com/use.rsp?key=17-Jun-2010-t2ebk9a6r8ld1c1o4q3z in case you have time you can look at it and if my assumptions are stupidly wrong you can tell me :)
| [Thursday 17 June 2010] [10:37:47] <sustrik>    middayc: it depends on how rebol handles C objects
| [Thursday 17 June 2010] [10:38:09] <sustrik>    as a void*?
| [Thursday 17 June 2010] [10:38:56] <sustrik>    ok, even more essential question:
| [Thursday 17 June 2010] [10:39:10] <sustrik>    how does rebol wrap C libraries?
| [Thursday 17 June 2010] [10:39:23] <sustrik>    usign a bridge C library a la JNI
| [Thursday 17 June 2010] [10:39:51] <sustrik>    or by calling C functions directly from rebol (like .net)?
| [Thursday 17 June 2010] [10:46:14] <middayc>    http://paste.factorcode.org/paste?id=1734 it's very simple on rebol side, but it has it's limitations.. this is how I specify binding for simpler func ... I talked to some rebol guys and I will write some c code, similarly as lua handles this for example.
| [Thursday 17 June 2010] [10:50:05] <sustrik>    middayc: yes, the lua way helps as it doesn't require rebol to deal with messy C details (such as sizeof zmq_msg_t)
| [Thursday 17 June 2010] [10:50:19] <sustrik>    say for implementing send
| [Thursday 17 June 2010] [10:50:32] <sustrik>    you pass it rebol string (or bytearray or whatevet)
| [Thursday 17 June 2010] [10:50:47] <sustrik>    the underlying wrapper function (in C) will create zmq_msg_t
| [Thursday 17 June 2010] [10:50:59] <sustrik>    initialise it and copy the data into it
| [Thursday 17 June 2010] [10:51:04] <sustrik>    easy
| [Thursday 17 June 2010] [10:53:25] <CIA-17> zeromq2: 03Martin Sustrik 07master * r7f01e99 10/ (11 files in 3 dirs): stopwatch returned to libzmq - http://bit.ly/bFfVsS
| [Thursday 17 June 2010] [11:10:10] <CIA-17> zeromq2: 03Martin Sustrik 07master * rcff7ba2 10/ (6 files in 6 dirs): Windows build fixed - http://bit.ly/dx2FhU
| [Thursday 17 June 2010] [11:24:19] <middayc>    thanks for your oppinion.. I will do it that way then. And of course thanks for making 0mq .. what I like the most so far is that it has a minimal simple api
| [Thursday 17 June 2010] [11:31:04] <sustrik>    middayc: thanks
| [Thursday 17 June 2010] [11:34:45] <middayc>    (and power with ipc/speed/flexibility/.. I believe powerful things don't have to be bloated and 0mq is that way)
| [Thursday 17 June 2010] [11:36:04] <sustrik>    actually, bloat is mostly followed by performance degradation
| [Thursday 17 June 2010] [11:40:26] <middayc>    yes, I think exactly the same way :)
| [Thursday 17 June 2010] [14:41:37] <CIA-17> rbzmq: 03Brian Buchanan 07master * r048a024 10/ (zmq2.gemspec zmq.gemspec): rename gem to zmq2 - http://bit.ly/aq9jRH
| [Thursday 17 June 2010] [19:03:51] Nick y is now known as Guest27156.
| [Thursday 17 June 2010] [20:54:12] <achew22>    can anyone point me to a good introduction to zeromq that focuses on python?
| [Thursday 17 June 2010] [22:04:33] Part achew22 has left this channel.
| [Friday 18 June 2010] [02:55:24] <umesh>    I read some code in zeromq ...
| [Friday 18 June 2010] [02:55:41] <umesh>    i have some queries related to it 
| [Friday 18 June 2010] [02:56:29] <umesh>    I have observed that in zmq for req/rep ... it uses normal tcp/ip apis internally ...
| [Friday 18 June 2010] [02:56:48] <umesh>    like listen, bind, connect, accecp, recv and send etc ...
| [Friday 18 June 2010] [02:57:38] <umesh>    but when we close the server generall read or recv returns 0 when server is shutdown using cntrl-c or exit or abort ... 
| [Friday 18 June 2010] [02:58:32] <umesh>    but in case of zmq recv does not return 0 when server is closed using exit or abort 
| [Friday 18 June 2010] [02:58:34] <umesh>    why ?
| [Friday 18 June 2010] [03:34:14] Nick   y is now known as Guest13742.
| [Friday 18 June 2010] [03:55:54] <sustrik>  becore there are N connections
| [Friday 18 June 2010] [03:55:59] <sustrik>  because*
| [Friday 18 June 2010] [03:56:15] <sustrik>  one failing doesn't make other unusable
| [Friday 18 June 2010] [04:17:27] <umesh>    sustrik: I did not understood your answer very clearly 
| [Friday 18 June 2010] [04:18:00] <sustrik>  0mq sockets can have arbitrary number of BSD sockets under the hood
| [Friday 18 June 2010] [04:18:21] <sustrik>  if one of the BSD sockets fail
| [Friday 18 June 2010] [04:18:31] <sustrik>  the others are still up and kicking
| [Friday 18 June 2010] [04:20:16] <mikko>    is there any way to know that send to one endpoint failed?
| [Friday 18 June 2010] [04:20:29] <mikko>    is there a need to know ever?
| [Friday 18 June 2010] [04:20:43] <sustrik>  there's no such thing as "send to one endpoint"
| [Friday 18 June 2010] [04:20:55] <sustrik>  if you want that kind of stuff, use BSD sockets directly
| [Friday 18 June 2010] [04:21:14] <mikko>    maybe i misphrased
| [Friday 18 June 2010] [04:21:40] <mikko>    i mean if i connect 0mq socket to three endpoints and one of them is unreachable. as a developer do i need/want to know about that?
| [Friday 18 June 2010] [04:22:28] <sustrik>  the design of 0mq is such that you don't know
| [Friday 18 June 2010] [04:22:35] <sustrik>  it's like speaking to a cloud
| [Friday 18 June 2010] [04:22:55] <sustrik>  if you want to manage connections on one-by-one basis, that's what BSD sockets are for
| [Friday 18 June 2010] [04:23:55] <mikko>    fire and forget
| [Friday 18 June 2010] [04:24:29] <sustrik>  yes
| [Friday 18 June 2010] [04:25:26] <mikko>    i started working on http device but got stuck on figuring out SLAs for different things at work
| [Friday 18 June 2010] [04:26:15] <sustrik>  no haste :)
| [Friday 18 June 2010] [04:29:40] <mikko>    the thing i like about imatix page is that it lists prices for professional services
| [Friday 18 June 2010] [04:29:47] <mikko>    that is nice and transparent
| [Friday 18 June 2010] [04:30:02] <mikko>    most of the companies have phone number and you need to go through hoops to get prices
| [Friday 18 June 2010] [04:30:39] <sustrik>  yes, experienced that myself
| [Friday 18 June 2010] [04:32:17] <sustrik>  presumably, the price is not the same for everyone
| [Friday 18 June 2010] [04:32:35] <mikko>    yeah, that's what i assume
| [Friday 18 June 2010] [04:32:43] <mikko>    the bigger company calling the bigger the price is
| [Friday 18 June 2010] [04:33:00] <mikko>    makes it very hard to calculate costs for a project especially under very strict NDA
| [Friday 18 June 2010] [04:39:32] <sustrik>  true
| [Friday 18 June 2010] [06:44:11] <umesh>    sustrik: you remember on that day we discussed about the  writing a sync 0mq client
| [Friday 18 June 2010] [06:44:40] <umesh>    and you told discussion happended couple of times but no one really did it ...
| [Friday 18 June 2010] [06:44:47] <umesh>    I can do it ...
| [Friday 18 June 2010] [06:44:55] <umesh>    can you give me some pointers ...
| [Friday 18 June 2010] [06:45:01] <umesh>    on this ...
| [Friday 18 June 2010] [06:45:08] <umesh>    how can we do it etc ...
| [Friday 18 June 2010] [06:45:38] <sustrik>  umesh: it's easy
| [Friday 18 June 2010] [06:45:46] <sustrik>  have a look at zmq_tcp(7)
| [Friday 18 June 2010] [06:45:54] <sustrik>  the wire format section
| [Friday 18 June 2010] [06:46:03] <sustrik>  that's how 0mq messages look like on the wire
| [Friday 18 June 2010] [06:46:19] <sustrik>  so the only thing you have to do is to open a TCP socket
| [Friday 18 June 2010] [06:46:26] <sustrik>  and read/write such messages
| [Friday 18 June 2010] [06:46:30] <sustrik>  and report errors :)
| [Friday 18 June 2010] [06:49:05] <umesh>    ok
| [Friday 18 June 2010] [11:13:58] <cremes>   going async to sync... i just don't see the point to doing that; async is perfect already
| [Friday 18 June 2010] [11:19:41] <sustrik>  error handling i suppose
| [Friday 18 June 2010] [11:32:39] <cremes>   pffftt; that's what error callbacks are for.
| [Saturday 19 June 2010] [03:43:20] Nick y is now known as Guest93184.
| [Saturday 19 June 2010] [07:45:16] Nick Guest93184 is now known as rgl.
| 
| *** Logfile started
| *** on Sat Jun 19 10:52:12 2010
| 
| [Saturday 19 June 2010] [10:52:12] Topic    The channel topic is "Welcome!".
| [Saturday 19 June 2010] [10:52:12] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Saturday 19 June 2010] [10:52:18] Mode Channel modes: no messages from outside, topic protection
| [Saturday 19 June 2010] [10:52:18] Created  This channel was created on 2010-02-05 10:44.
| [Saturday 19 June 2010] [10:54:57] Mode ChanServ gives CIA-19 permission to talk.
| [Saturday 19 June 2010] [14:09:10] <CIA-19> zeromq2: 03Martin Hurton 07master * r2c3913b 10/ src/pair.cpp : fix double free error in PAIR socket - http://bit.ly/dawP59
| [Saturday 19 June 2010] [14:42:38] Nick y is now known as Guest66642.
| [Saturday 19 June 2010] [14:49:47] <CIA-19> zeromq2: 03Martin Hurton 07master * r10c28c1 10/ src/pipe.cpp : Revive reader on pipe termination -
| 
| *** Logfile started
| *** on Sun Jun 20 14:17:29 2010
| 
| [Sunday 20 June 2010] [14:17:29] Topic  The channel topic is "Welcome!".
| [Sunday 20 June 2010] [14:17:29] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Sunday 20 June 2010] [14:17:35] Mode   Channel modes: no messages from outside, topic protection
| [Sunday 20 June 2010] [14:17:36] Created    This channel was created on 2010-02-05 10:44.
| [Sunday 20 June 2010] [20:26:15] <Jad>  hey I'm looking for recommendations on SSL libraries (C preferably) for building some degree of security into a high volume socket server
| [Sunday 20 June 2010] [20:29:07] <Jad>  OpenSSL seems like the obvious choice
| [Sunday 20 June 2010] [21:34:50] <Jad>  does anyone have any experience with setting up the PHP extension on windoze?
| [Sunday 20 June 2010] [22:36:08] <impl> mikko would probably, since he wrote it (or maybe at least wrote one of them, I don't know if there are multiple)
| [Sunday 20 June 2010] [22:52:42] <Jad>  ok
| [Sunday 20 June 2010] [22:53:14] <Jad>  thnx
| [Monday 21 June 2010] [00:46:35] <Jad>  got it working
| [Monday 21 June 2010] [04:51:10] <mikko>    Jad: i got old windows builds somewhere
| [Monday 21 June 2010] [04:51:20] <mikko>    would need to update at some point
| [Monday 21 June 2010] [05:05:05] Part   xiaohao has left this channel.
| [Monday 21 June 2010] [05:24:06] <mikko>    hmm
| [Monday 21 June 2010] [05:24:11] <mikko>    windows builds fail atm
| [Monday 21 June 2010] [05:24:14] <mikko>    with github trunk
| [Monday 21 June 2010] [05:32:43] <sustrik>  mikko: let me try
| [Monday 21 June 2010] [05:33:15] <sustrik>  mikko: you meant zeromq2 of php bindign?
| [Monday 21 June 2010] [05:34:22] <mikko>    sustrik: zeromq2
| [Monday 21 June 2010] [05:34:35] <sustrik>  ok
| [Monday 21 June 2010] [05:34:36] <mikko>    visual studio templates refer to app_threads.cpp
| [Monday 21 June 2010] [05:34:52] <mikko>    and there is a missing return in zmq.cpp
| [Monday 21 June 2010] [05:34:56] <mikko>    let me get the line
| [Monday 21 June 2010] [05:35:04] <sustrik>  wait a se
| [Monday 21 June 2010] [05:35:05] <sustrik>  sec
| [Monday 21 June 2010] [05:35:16] <mikko>    642
| [Monday 21 June 2010] [05:35:18] <sustrik>  where did you get your source code from?
| [Monday 21 June 2010] [05:35:22] <mikko>    github 
| [Monday 21 June 2010] [05:35:25] <sustrik>  sustrik/zeromq2
| [Monday 21 June 2010] [05:35:26] <sustrik>  ?
| [Monday 21 June 2010] [05:35:27] <mikko>    yep
| [Monday 21 June 2010] [05:35:37] <mikko>    just did svn update
| [Monday 21 June 2010] [05:35:53] <sustrik>  last week the official version ws renamed to zeromq/zeromq2
| [Monday 21 June 2010] [05:35:59] <mikko>    ok
| [Monday 21 June 2010] [05:36:07] <mikko>    my build scripts just do svn up on everything
| [Monday 21 June 2010] [05:36:08] <sustrik>  sustrik/zeromq2 is my private sandbox now :)
| [Monday 21 June 2010] [05:36:11] <mikko>    and then build
| [Monday 21 June 2010] [05:36:26] <sustrik>  sorry for confusion
| [Monday 21 June 2010] [05:37:04] <mikko>    it's nice that i can use tortoisesvn to communicate with github on my win build machine
| [Monday 21 June 2010] [05:55:14] <sustrik>  mikko: btw, speaking of windows, do you have 2 win boxes by chance?
| [Monday 21 June 2010] [05:57:35] <mikko>    sustrik: i use VMs
| [Monday 21 June 2010] [05:57:46] <sustrik>  ah, ok then
| [Monday 21 June 2010] [05:57:48] <mikko>    so in theory i can have two windows boxes
| [Monday 21 June 2010] [05:57:51] <mikko>    :)
| [Monday 21 June 2010] [05:58:11] <sustrik>  i was interested in whether anyone can reproduce the opedds's latency test
| [Monday 21 June 2010] [05:58:18] <sustrik>  they are claming 0mq latency of 170us
| [Monday 21 June 2010] [05:58:23] <sustrik>  between 2 win boxes
| [Monday 21 June 2010] [05:58:28] <mikko>    i dont think vm is that usable
| [Monday 21 June 2010] [05:58:35] <mikko>    as there is going to be latency 
| [Monday 21 June 2010] [05:58:46] <sustrik>  nope, it would have impact on the test
| [Monday 21 June 2010] [05:59:07] <sustrik>  never mind, i'll ask on the mailing list
| [Monday 21 June 2010] [05:59:08] <mikko>    regarding zeromq support
| [Monday 21 June 2010] [05:59:11] <sustrik>  yes?
| [Monday 21 June 2010] [05:59:14] <mikko>    is it going to be yourself who is supporting it?
| [Monday 21 June 2010] [05:59:32] <sustrik>  there are several people involved
| [Monday 21 June 2010] [05:59:40] <mikko>    ok, good
| [Monday 21 June 2010] [05:59:40] <sustrik>  i am mainly doing development
| [Monday 21 June 2010] [05:59:58] <mikko>    so that if you get hit by a bus there is still someone supporting it
| [Monday 21 June 2010] [06:00:06] <sustrik>  yes, sure :)
| [Monday 21 June 2010] [06:00:20] <mikko>    good, good
| [Monday 21 June 2010] [06:00:36] <sustrik>  i am the visible figure here, others are doing paid work that's not visible
| [Monday 21 June 2010] [07:54:36] <sjampoo>  Is there anything more to the pipeline pattern? Or is basically just a req/rep pattern without the rep part? As the req/rep part also balances over its peers.
| [Monday 21 June 2010] [07:57:15] <sustrik>  sjampoo: it's similar
| [Monday 21 June 2010] [07:57:38] <sustrik>  the crucial difference is that replies are not routed back
| [Monday 21 June 2010] [07:57:45] <sustrik>  instead they are routed forward
| [Monday 21 June 2010] [07:58:14] <sjampoo>  ok!
| [Monday 21 June 2010] [15:19:12] <Jad>  yeah I updated everything to vc9, didn't even realize about this issue on windows boxes
| [Monday 21 June 2010] [15:19:28] <Jad>  works great now
| [Monday 21 June 2010] [19:31:20] Notice -NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Monday 21 June 2010] [19:31:20] Notice -NickServ- You are now identified for travlr.
| [Monday 21 June 2010] [19:31:22] Topic  The channel topic is "Welcome!".
| [Monday 21 June 2010] [19:31:22] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Monday 21 June 2010] [19:31:28] Mode   Channel modes: no messages from outside, topic protection
| [Monday 21 June 2010] [19:31:28] Created    This channel was created on 2010-02-05 10:44.
| [Monday 21 June 2010] [22:04:53] <stuarthalloway>   if I run either the latency/throughput tests from Java, but increase the roundtrip count by a factor of 10, I get an exception:
| [Monday 21 June 2010] [22:05:09] <stuarthalloway>   "Context was terminated" at org.zeromq.ZMQ$Socket.recv
| [Monday 21 June 2010] [22:05:28] <stuarthalloway>   running with verbose:gc suggests that this happens immediately after the first garbage collection
| [Monday 21 June 2010] [22:06:16] <stuarthalloway>   ...which suggests a resource management issue, or maybe I have a bad build
| [Monday 21 June 2010] [22:06:42] <stuarthalloway>   I am using 2.0.7 plus the latest jzmq from git
| [Tuesday 22 June 2010] [05:41:16] Mode  ChanServ gives CIA-17 permission to talk.
| [Tuesday 22 June 2010] [06:52:36] <travlr>  sustrik: Hi Martin.. are you available?
| [Tuesday 22 June 2010] [06:55:32] <sustrik> hi
| [Tuesday 22 June 2010] [06:55:38] <sustrik> yeah, i'm here
| [Tuesday 22 June 2010] [06:58:40] <travlr>  Hi. I first want to appologize for the the email I (peter alexander) posted to the list last night. I was half asleep when I wrote it and didn't mean to suggest that I could know more about things than you do. I most certainly do not and I think thats the way my email may have come across.
| [Tuesday 22 June 2010] [07:09:07] <sustrik> travlr: you very well may know more
| [Tuesday 22 June 2010] [07:09:16] <sustrik> it's the pipelining
| [Tuesday 22 June 2010] [07:09:26] <sustrik> i haven't been involved with that much
| [Tuesday 22 June 2010] [07:09:50] <sustrik> the existing behaviour is based on few cases we've seen
| [Tuesday 22 June 2010] [07:09:56] <sustrik> no theoretical beckground there
| [Tuesday 22 June 2010] [07:10:55] <travlr>  ok, very well. but I am self taught and no where near your caliber of expertise. enough said.
| [Tuesday 22 June 2010] [07:11:30] <travlr>  would you like to have a doxygen api representation for the zmq sources?
| [Tuesday 22 June 2010] [07:12:48] <sustrik> what would that require?
| [Tuesday 22 June 2010] [07:12:58] <sustrik> adding formatted comments to the source?
| [Tuesday 22 June 2010] [07:13:56] <travlr>  changing the comments from /* .. */ to /** .. */ and // to /// and then deciding on a suitable style sheet.
| [Tuesday 22 June 2010] [07:15:13] <travlr>  i could do a patch set or clone on github for you to decide.
| [Tuesday 22 June 2010] [07:16:16] <sustrik> that would be great
| [Tuesday 22 June 2010] [07:18:49] <travlr>  ok I'll start with that today and while doing so I'll familiarize myself with the sources so I can hopefully help the community to formulate more flexible/powerful load balancing/distribution and possibly resource management aspects of zmq. 
| [Tuesday 22 June 2010] [07:23:19] <sustrik> great
| [Tuesday 22 June 2010] [07:23:22] <sustrik> good luck :)
| [Tuesday 22 June 2010] [07:24:05] <travlr>  k. thanks.
| [Tuesday 22 June 2010] [07:41:36] <sjampoo> I've written an introduction to ZeroMQ for my blog
| [Tuesday 22 June 2010] [07:41:42] <sjampoo> It is currently in draft mode here: http://nichol.as/?p=606&shareadraft=baba606_4c20a0df10298
| [Tuesday 22 June 2010] [07:41:58] <sjampoo> I'd appreciate any feedback, especially if i am telling bullshit ;) 
| [Tuesday 22 June 2010] [07:43:15] <sjampoo> i'll be off for now, but would really like to hear if you think stuff is missing or wrong by email (to nicholas@nichol.as)
| [Tuesday 22 June 2010] [07:46:37] <sustrik> sjampoo: let me see
| [Tuesday 22 June 2010] [07:47:05] <sustrik> the graphic design is awesome!
| [Tuesday 22 June 2010] [07:52:11] <sustrik> sjampoo: what tool do you use for drawing diagrams?
| [Tuesday 22 June 2010] [07:52:15] <sustrik> they are really neat
| [Tuesday 22 June 2010] [07:57:46] <sjampoo> Thanks, its OmniGaffle for OSX, really one of my favorite tools
| [Tuesday 22 June 2010] [07:57:51] <sjampoo> Have to catch a train now!
| [Tuesday 22 June 2010] [07:58:57] <travlr>  they are sweet. anything similar to omnigraffe on linux i wonder.
| [Tuesday 22 June 2010] [08:00:45] <sustrik> doesn't look like :(
| [Tuesday 22 June 2010] [08:02:23] <travlr>  yeah not as sweet from what i have found but here' s a nice site for alternatives anyway. http://alternativeto.net/desktop/omnigraffle/?platform=linux
| [Tuesday 22 June 2010] [08:06:07]    * sustrik is using Dia
| [Tuesday 22 June 2010] [08:06:28] <sustrik> I would switch for OmniGaffe if I had a Mac box
| [Tuesday 22 June 2010] [08:06:48] <sustrik> but looks like I'll stay with Dia for now
| [Tuesday 22 June 2010] [08:07:22] Part  sustrik has left this channel ("Leaving").
| [Tuesday 22 June 2010] [08:07:59] <travlr>  Dia is nice, i haven't used it in quite a while though. Aris Express looks like it might be cool. http://alternativeto.net/desktop/aris-express/about
| [Tuesday 22 June 2010] [08:08:46] <travlr>  but its trial ware :(
| [Tuesday 22 June 2010] [08:09:49] <travlr>  oh my mistake.. its not trial ware.
| [Tuesday 22 June 2010] [08:18:37] <sustrik> maybe worth of trying - but it seems to be tied to a particular design methodology rather than being a generic drawing tool
| [Tuesday 22 June 2010] [08:24:34] <travlr>  yup. i almost jumped on the koffice team a year ago to modernize kivio, but as usual time is always a problem
| [Tuesday 22 June 2010] [08:32:01] <travlr>  sustrik: would you consider including an alternative cmake build system in zmq master if i told you i would be around to help maintain it? 
| [Tuesday 22 June 2010] [08:41:29] <sustrik> travlr: there's already a cmake build system here: git://github.com/PatrickCheng/zeromq2.git
| [Tuesday 22 June 2010] [08:41:53] <sustrik> if you want to help with it try speaking to the guy maintaining it
| [Tuesday 22 June 2010] [08:44:50] <travlr>  yes, i was aware of his fork. not a problem but merely a question. i'm not big on autotools so i thought i'd simply ask you.
| [Tuesday 22 June 2010] [08:46:11] <sustrik> well, the state of affairs is that the autotools build works on all supported platforms
| [Tuesday 22 June 2010] [08:46:25] <sustrik> if cmake build wants to become an alternative
| [Tuesday 22 June 2010] [08:46:40] <sustrik> there's a lot of testing to do on different platforms
| [Tuesday 22 June 2010] [08:47:46] <travlr>  i see. cmake is portable to all platforms though i believe. right?
| [Tuesday 22 June 2010] [08:49:27] <sustrik> i think so, but you have to deal with petty details by hand
| [Tuesday 22 June 2010] [08:50:14] <sustrik> have a look here: http://github.com/zeromq/zeromq2/blob/master/configure.in
| [Tuesday 22 June 2010] [08:50:32] <sustrik> different things done on different platforms...
| [Tuesday 22 June 2010] [08:50:36] <travlr>  yes. no prob. something for me to think about in the future maybe. i'm not yet schooled on all platform intricacies so i'll just use it privately for now.
| [Tuesday 22 June 2010] [11:40:29] <bapt>    Hi alk
| [Tuesday 22 June 2010] [11:41:52] <bapt>    is it possible with using pubsub that only one client (randomly) get the published messages
| [Tuesday 22 June 2010] [11:41:55] <bapt>    ?
| [Tuesday 22 June 2010] [11:42:43] <bapt>    I mean the publisher send a message N clients subscribed to it but I want only one client to really do the treatment
| [Tuesday 22 June 2010] [11:56:43] <cremes>  bapt: so you want all clients to receive the message but only 1 client to actually process the data?
| [Tuesday 22 June 2010] [11:57:45] <bapt>    yes
| [Tuesday 22 June 2010] [11:58:35] <cremes>  i would recommend looking at the butterfly example; it doesn't use pub/sub
| [Tuesday 22 June 2010] [11:58:38] <bapt>    in fact what I want is butterfly (I'm looking at the tutorail right now)
| [Tuesday 22 June 2010] [11:58:42] <bapt>     :)
| [Tuesday 22 June 2010] [11:58:45] <cremes>  it uses downstream/upstream sockets
| [Tuesday 22 June 2010] [11:58:55] <cremes>  oh, then you are on the right track!
| [Tuesday 22 June 2010] [11:59:10] <cremes>  do you have a specific question on that example?
| [Tuesday 22 June 2010] [11:59:22] <bapt>    not currently
| [Tuesday 22 June 2010] [11:59:45] <bapt>    thanks
| [Tuesday 22 June 2010] [12:00:21] <cremes>  ok
| [Tuesday 22 June 2010] [12:11:40] <bapt>    it's incredibly easy and powerfull
| [Tuesday 22 June 2010] [12:12:07] <bapt>    thanks a lot for 0mq, you saved a lot of my coding time :)
| [Tuesday 22 June 2010] [15:23:56] <jldupont>    hi - is there an official apt repository? i.e. apt-get 
| [Tuesday 22 June 2010] [15:25:17] <jldupont>    anyone??
| [Tuesday 22 June 2010] [15:28:44] <mivert>  jldupont: 2.0.6 is in sid and maverick http://packages.debian.org/source/sid/zeromq https://launchpad.net/ubuntu/maverick/+source/zeromq iMatix does not produce debs though
| [Tuesday 22 June 2010] [15:29:09] <jldupont>    mivert: thanks.
| [Tuesday 22 June 2010] [15:34:10] <sustrik> jldupont: there are deb packaging scripts in debian subdirectory, so in theory you can build the package yourself
| [Tuesday 22 June 2010] [15:34:47] <jldupont>    sustrik: thanks.  Is there a problem if I package and publish on Launchpad?
| [Tuesday 22 June 2010] [15:35:01] <sustrik> no, no problem at all
| [Tuesday 22 June 2010] [15:35:46] <jldupont>    just one doubt:  can the Python bindings do non-blocking?
| [Tuesday 22 June 2010] [15:36:44] <sustrik> you mean async, right?
| [Tuesday 22 June 2010] [15:37:03] <sustrik> the messages being sent on the background
| [Tuesday 22 June 2010] [15:37:12] <jldupont>    I guess.  I want to "recv" with timeout.
| [Tuesday 22 June 2010] [15:37:35] <sustrik> ah, there's no timeout in recv
| [Tuesday 22 June 2010] [15:37:35] <jldupont>    i.e. no blocking in receive loop
| [Tuesday 22 June 2010] [15:37:39] <sustrik> so you have to poll
| [Tuesday 22 June 2010] [15:37:45] <sustrik> (that one has timeout)
| [Tuesday 22 June 2010] [15:37:49] <sustrik> and then recv
| [Tuesday 22 June 2010] [15:37:58] <sustrik> either blocking or non-blocking
| [Tuesday 22 June 2010] [15:38:12] <sustrik> all these features should be available in pyzmq
| [Tuesday 22 June 2010] [15:38:19] <jldupont>    great.
| [Tuesday 22 June 2010] [15:38:56] <jldupont>    so, if I want a "message fabric", I have to build one myself i.e. there isn't a "broker/switch" in the system as in AMQP. Right?
| [Tuesday 22 June 2010] [15:39:51] <sustrik> there are so called "devices"
| [Tuesday 22 June 2010] [15:40:04] <sustrik> they are like micro-brokers
| [Tuesday 22 June 2010] [15:40:22] <sustrik> say an executable that is in fact a queue
| [Tuesday 22 June 2010] [15:40:27] <sustrik> single one
| [Tuesday 22 June 2010] [15:40:34] <sustrik> (zmq_queue)
| [Tuesday 22 June 2010] [15:40:54] <sustrik> but you can build the fabric by hand if you wish so
| [Tuesday 22 June 2010] [15:41:15] <jldupont>    hmmm... http://api.zeromq.org/zmq_forwarder.html ... sort of empty...
| [Tuesday 22 June 2010] [15:42:02] <sustrik> have a look here http://github.com/zeromq/zeromq-chat/blob/master/README
| [Tuesday 22 June 2010] [15:43:16] <jldupont>    ok thanks. I'll check it out later. Ciao.
| [Tuesday 22 June 2010] [15:43:30] <sustrik> cyl
| [Tuesday 22 June 2010] [15:49:38] <soren>   I'm wondering about a few things wrt to pub/sub using multicast.
| [Tuesday 22 June 2010] [15:50:04] <soren>   I haven't completely wrapped my head around multicast yet, so please bear with me.
| [Tuesday 22 June 2010] [15:50:08] <soren>   :)
| [Tuesday 22 June 2010] [15:51:15] <soren>   Ok, so say I have a bunch of publishers (let's say 100-ish) and a /lot/ of subscribers (let's say 100000-ish).
| [Tuesday 22 June 2010] [15:51:44] <soren>   They all "connect" (is that even the correct term for multicast) to some multicast IP and port.
| [Tuesday 22 June 2010] [15:51:59] <soren>   The publishers have no idea how many subscribers there are, right?
| [Tuesday 22 June 2010] [15:52:16] <soren>   The distribution is handled by... what? The networking infrastructure?
| [Tuesday 22 June 2010] [15:52:31] <soren>   Like routers/switches or whatnot, I mean?
| [Tuesday 22 June 2010] [15:54:24] <soren>   Furthermore, if the subscribers only set a message filter using ZMQ_SUBSRIBE, they still receive all the messages, they're just filtered by zmq and never reach my application, correct?
| [Tuesday 22 June 2010] [15:57:06] <soren>   sustrik: Can I pick your brain on this ^^ for a few minutes? :)
| [Tuesday 22 June 2010] [15:58:35] <sustrik> the right term is "to join a multicast group"
| [Tuesday 22 June 2010] [15:58:56] <sustrik> publishers have no idea of subscribers and vice versa
| [Tuesday 22 June 2010] [15:59:13] <sustrik> data are distributed by your network switch
| [Tuesday 22 June 2010] [15:59:40] <sustrik> in theory multicast traffic can pass via router to another subnet but don't try that at home
| [Tuesday 22 June 2010] [15:59:47] <soren>   Right.
| [Tuesday 22 June 2010] [15:59:55] <soren>   Ok, so it requires a reasonably capable switch.
| [Tuesday 22 June 2010] [16:00:10] <sustrik> look for switches with "IGMP snooping"
| [Tuesday 22 June 2010] [16:00:11] <soren>   I mean... a $20 gigabit switch probably won't give me much multicast love.
| [Tuesday 22 June 2010] [16:00:29] <sustrik> have a look at the specs
| [Tuesday 22 June 2010] [16:00:50] <soren>   Sure. Ok.
| [Tuesday 22 June 2010] [16:01:12] <sustrik> for high-perf scenarios you should always keep in mind that the actual throughput is limited by switches backplane throughput
| [Tuesday 22 June 2010] [16:01:22] <soren>   Sure.
| [Tuesday 22 June 2010] [16:01:33] <sustrik> ~100Gb/sec for real switches
| [Tuesday 22 June 2010] [16:01:43] <sustrik> (not toy switches)
| [Tuesday 22 June 2010] [16:01:53] <soren>   :)
| [Tuesday 22 June 2010] [16:02:41] <soren>   I assume a multicast group is defined by the IP alone?
| [Tuesday 22 June 2010] [16:03:03] <sustrik> yes
| [Tuesday 22 June 2010] [16:03:09] <soren>   Ok.
| [Tuesday 22 June 2010] [16:03:15] <sustrik> it's a range of IP addresses you can choose from
| [Tuesday 22 June 2010] [16:03:45] <soren>   Sure, sure, I'm just thinkgin..
| [Tuesday 22 June 2010] [16:04:43] <soren>   my connection string also includes a port number, but if the multicast group is defined by IP (and not the port), I want to make sure not to just use one IP with multiple ports.
| [Tuesday 22 June 2010] [16:05:10] <soren>   ...Since I might as well let the switch help me filter messages.
| [Tuesday 22 June 2010] [16:06:29] <soren>   Am I making sense? :)
| [Tuesday 22 June 2010] [16:09:49] <soren>   brb
| 
| *** Logfile started
| *** on Tue Jun 22 17:14:55 2010
| 
| [Tuesday 22 June 2010] [17:14:55] Topic The channel topic is "Welcome!".
| [Tuesday 22 June 2010] [17:14:55] Topic The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Tuesday 22 June 2010] [17:15:01] Mode  Channel modes: no messages from outside, topic protection
| [Tuesday 22 June 2010] [17:15:01] Created   This channel was created on 2010-02-05 10:44.
| [Tuesday 22 June 2010] [18:50:51] <jldupont>    is there more information on how to configure the "zmq_forwarder" application?
| [Tuesday 22 June 2010] [18:58:27] <jldupont>    or there isn't much to configure else than what's up on http://www.zeromq.org/docs:cookbook#toc8 ?  I.e. can the forwarder discriminate against the "message type" and forward only to subscribers interested by a given "message type"?
| 
| *** Logfile started
| *** on Wed Jun 23 01:57:00 2010
| 
| [Wednesday 23 June 2010] [01:57:00] Topic   The channel topic is "Welcome!".
| [Wednesday 23 June 2010] [01:57:00] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 23 June 2010] [01:57:06] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 23 June 2010] [01:57:06] Created This channel was created on 2010-02-05 10:44.
| [Wednesday 23 June 2010] [05:17:09] Part    tmp123456 has left this channel.
| [Wednesday 23 June 2010] [08:27:29] <Umesh> is the man page of zmq_outdated ...
| [Wednesday 23 June 2010] [08:27:50] <Umesh> is the man page of zmq_tcp (7) outdated 
| [Wednesday 23 June 2010] [08:28:28] <Umesh> because on tcp socket i am not geeting the messages compatible with the messages mentioned on this page ...
| [Wednesday 23 June 2010] [08:31:32] <sustrik>   Umesh: what are you getting exactly?
| [Wednesday 23 June 2010] [08:32:34] <Umesh> i first get 2 bytes 1 1 
| [Wednesday 23 June 2010] [08:32:55] <Umesh> sorry ... forget first part now typed ...
| [Wednesday 23 June 2010] [08:33:10] <sustrik>   that's an empty message
| [Wednesday 23 June 2010] [08:33:24] <sustrik>   you are right, it's not documented
| [Wednesday 23 June 2010] [08:33:29] <Umesh> i get 2 reads ...
| [Wednesday 23 June 2010] [08:33:46] <sustrik>   but peers use it to identify themselves when a connection is established
| [Wednesday 23 June 2010] [08:33:47] <Umesh> 1st read 1 0 ... means empty message ...
| [Wednesday 23 June 2010] [08:34:16] <sustrik>   so when connection is established
| [Wednesday 23 June 2010] [08:34:24] <sustrik>   peer A says "i'm A"
| [Wednesday 23 June 2010] [08:34:30] <sustrik>   and peer B says "i'm B"
| [Wednesday 23 June 2010] [08:34:31] <Umesh> and then 2nd read 1 1  + frame described in man zmq_tcp(7)
| [Wednesday 23 June 2010] [08:35:02] <sustrik>   what's your topology?
| [Wednesday 23 June 2010] [08:35:12] <sustrik>   req/rep with queue in the middle?
| [Wednesday 23 June 2010] [08:35:14] <Umesh> req/res socket ...
| [Wednesday 23 June 2010] [08:35:23] <Umesh> nope ... no que in the middle
| [Wednesday 23 June 2010] [08:35:24] <sustrik>   ah, right
| [Wednesday 23 June 2010] [08:35:45] <sustrik>   so the first (empty) message is an identification
| [Wednesday 23 June 2010] [08:35:51] <sustrik>   that's say for all socket types
| [Wednesday 23 June 2010] [08:36:09] <sustrik>   now, req/rep has more complex protocol
| [Wednesday 23 June 2010] [08:36:33] <Umesh> actually i wanted to use the sync client with zmq server ...
| [Wednesday 23 June 2010] [08:36:48] <sustrik>   what it has to do is to attach a way back to the requester to each request
| [Wednesday 23 June 2010] [08:36:49] <Umesh> therefore i am trying to send /recv message mentioned in the format ...
| [Wednesday 23 June 2010] [08:36:56] <Umesh> of man 7 zmq_tcp
| [Wednesday 23 June 2010] [08:37:27] <sustrik>   so that reply can be sent back to the right requester
| [Wednesday 23 June 2010] [08:37:30] <Umesh> using the normal tcp/ip socket apis
| [Wednesday 23 June 2010] [08:37:36] <sustrik>   Umesh: yes
| [Wednesday 23 June 2010] [08:37:42] <sustrik>   the format described is OK
| [Wednesday 23 June 2010] [08:37:53] <sustrik>   however, sockets add one layer on top of it
| [Wednesday 23 June 2010] [08:38:11] <Umesh> ok
| [Wednesday 23 June 2010] [08:38:16] <sustrik>   so some of the messages (message parts) are used by 0MQ infrastrucuture
| [Wednesday 23 June 2010] [08:38:29] <sustrik>   namely: first message on TCP connection is peer's identity
| [Wednesday 23 June 2010] [08:38:39] <sustrik>   then
| [Wednesday 23 June 2010] [08:39:13] <sustrik>   each REQ/REP message carries a stack of identities that identify the way back to the requester
| [Wednesday 23 June 2010] [08:39:28] <sustrik>   so for example
| [Wednesday 23 June 2010] [08:39:37] <sustrik>   requester A says "ABC"
| [Wednesday 23 June 2010] [08:40:05] <sustrik>   what you see on the wire is that message part ABC is preceded by an empty message part ||ABC|
| [Wednesday 23 June 2010] [08:40:29] <sustrik>   the empty message part serves to delimit the actual message from the routing info
| [Wednesday 23 June 2010] [08:41:04] <Umesh> ok
| [Wednesday 23 June 2010] [08:41:07] <sustrik>   when the message is received the identity of the sending peer is attached to it
| [Wednesday 23 June 2010] [08:41:11] <sustrik>   |A||ABC|
| [Wednesday 23 June 2010] [08:41:51] <sustrik>   if it's sent further (as when there's a zmq_queue in the middle)
| [Wednesday 23 June 2010] [08:42:01] <sustrik>   there's another identity added to the request
| [Wednesday 23 June 2010] [08:42:08] <sustrik>   |my_queue|A||ABC|
| [Wednesday 23 June 2010] [08:42:19] <sustrik>   there can be multiple hops
| [Wednesday 23 June 2010] [08:42:28] <Umesh> ok
| [Wednesday 23 June 2010] [08:42:36] <sustrik>   and thus multiple identities in the traceroute stack
| [Wednesday 23 June 2010] [08:42:43] <sustrik>   what REP socket does
| [Wednesday 23 June 2010] [08:42:46] <Umesh> is there not any way to not to have these identities ?
| [Wednesday 23 June 2010] [08:43:00] <Umesh> for normal working with bsd tcp/ip sockets 
| [Wednesday 23 June 2010] [08:43:25] <sustrik>   you would need 0MQ equivalent of DNS then
| [Wednesday 23 June 2010] [08:43:40] <sustrik>   still you would need a single identity in the request
| [Wednesday 23 June 2010] [08:43:51] <sustrik>   so that REP would know where to send the reply
| [Wednesday 23 June 2010] [08:44:09] <Umesh> one identity is fine ... that i can decode easily ...
| [Wednesday 23 June 2010] [08:44:24] <sustrik>   you can easily decode mulitple identities as well
| [Wednesday 23 June 2010] [08:44:33] <Umesh> one way can be never use hops/queue in between 
| [Wednesday 23 June 2010] [08:44:38] <sustrik>   the point is that the stack is terminated by empty message part
| [Wednesday 23 June 2010] [08:45:03] <sustrik>   no need for such drastic measures
| [Wednesday 23 June 2010] [08:45:08] <sustrik>   what you need to do  is:
| [Wednesday 23 June 2010] [08:45:13] <sustrik>   on the REQ side
| [Wednesday 23 June 2010] [08:45:32] <sustrik>   1. when sending message prepend it by empty message part (1 1)
| [Wednesday 23 June 2010] [08:45:48] <sustrik>   2. when receiving the message chop off the empty message part (1 1)
| [Wednesday 23 June 2010] [08:45:53] <sustrik>   on the REP side
| [Wednesday 23 June 2010] [08:46:27] <sustrik>   1. when receiving a message store all the identities in the stack until you encounter empty message part (stack delimiter)
| [Wednesday 23 June 2010] [08:46:45] <sustrik>   2. when sending a reply prepend all the stored identities to the reply
| [Wednesday 23 June 2010] [08:46:48] <sustrik>   that's it
| [Wednesday 23 June 2010] [08:46:55] <Umesh> ok
| [Wednesday 23 June 2010] [08:47:23] <Umesh> does i nned to send 1 0 first message always ?
| [Wednesday 23 June 2010] [08:47:28] <Umesh> need*
| [Wednesday 23 June 2010] [08:48:17] <sustrik>   that's only when you open the connection
| [Wednesday 23 June 2010] [08:48:27] <sustrik>   1. create TCP connection
| [Wednesday 23 June 2010] [08:48:30] <sustrik>   2. send 1 0
| [Wednesday 23 June 2010] [08:48:39] <sustrik>   3. receive one message (peer's identity)
| [Wednesday 23 June 2010] [08:50:02] <Umesh> ok ...
| [Wednesday 23 June 2010] [09:37:15] <Umesh> sustrik: one more doubt ... this multihop support is added in the release 2.0.7 ... right ?
| [Wednesday 23 June 2010] [09:37:27] <sustrik>   yes
| [Wednesday 23 June 2010] [10:01:06] <Umesh> ok
| [Wednesday 23 June 2010] [10:46:03] Part    sadfasdf has left this channel.
| [Wednesday 23 June 2010] [11:34:49] <jldupont>  FYI: http://nichol.as/zeromq-an-introduction
| [Wednesday 23 June 2010] [11:35:35] <sustrik>   jldupont: yes, it's already linked from zeromq.org (see blogs section)
| [Wednesday 23 June 2010] [11:35:48] <jldupont>  ok
| [Wednesday 23 June 2010] [11:36:26] <jldupont>  so, if I got this right, the first string sent on a pub/sub constitutes the "message type", right?
| [Wednesday 23 June 2010] [11:37:17] <sustrik>   it's a bit different
| [Wednesday 23 June 2010] [11:37:34] <jldupont>  i.e. ?
| [Wednesday 23 June 2010] [11:37:39] <sustrik>   any message beginning with particular sequence of bytes matches the subscription
| [Wednesday 23 June 2010] [11:37:45] <jldupont>  ok
| [Wednesday 23 June 2010] [11:38:31] <jldupont>  btw, I never was able to build the Python documentation on my system... 
| [Wednesday 23 June 2010] [11:38:47] <jldupont>  problem with matplotlib-sphinx-ext
| [Wednesday 23 June 2010] [11:38:55] <jldupont>  linux karmic
| [Wednesday 23 June 2010] [11:39:15] <sustrik>   dunno, i have nothing to do with python binding... try complaining on the mailing list
| [Wednesday 23 June 2010] [11:39:21] <jldupont>  ;-)
| [Wednesday 23 June 2010] [11:40:03] <sustrik>   or there's an issue tracker on pyzmq github project
| [Wednesday 23 June 2010] [11:41:00] <jldupont>  from what I can tell, the "wire" format might be brittle to "out-of-sync" cases... the delineation mechanisms appears weak... but of course, I might not have seen all documentation ;-)
| [Wednesday 23 June 2010] [11:43:25] <jldupont>  anyhow, 0mq is definitely more friendly to work with than rabbitmq.
| [Wednesday 23 June 2010] [11:44:40] <sustrik>   jldupont: can you elaborate on the delineation?
| [Wednesday 23 June 2010] [11:50:16] <jldupont>  I mean there must be "symbols" reserved for the framing and "symbols" valid for the data.
| [Wednesday 23 June 2010] [11:50:46] <jldupont>  I only see "payload length" which can cause problems when it comes to "out-of-sync" conditions i.e. where is the next boundary?
| [Wednesday 23 June 2010] [11:51:12] <sustrik>   it can't go out-of-sync as it's layered on top of TCP
| [Wednesday 23 June 2010] [11:51:47] <sustrik>   i would like to have first two bytes in each TCP packet reserved fro "offset of the first 0mq message in the packet"
| [Wednesday 23 June 2010] [11:51:50] <sustrik>   but
| [Wednesday 23 June 2010] [11:52:30] <sustrik>   1. BSD sockets have no API for sending data delineated with TCP packets
| [Wednesday 23 June 2010] [11:52:59] <sustrik>   2. networking hardware does all kind of black magic with TCP packets (packet coallescing etc.)
| [Wednesday 23 June 2010] [11:53:55] <jldupont>  I just mean that if something goes wrong on the software stack side, recovering the connection might not be possible... only tear-down, bring up will do.
| [Wednesday 23 June 2010] [11:54:06] <jldupont>  but that might be a good compromise.
| [Wednesday 23 June 2010] [11:54:13] <jldupont>  I mean, it's good enough.
| [Wednesday 23 June 2010] [11:54:24] <jldupont>  since that sort of condition is rare-ish.
| [Wednesday 23 June 2010] [11:56:14] <jldupont>  the trouble is detecting this situation....
| [Wednesday 23 June 2010] [11:56:55] <jldupont>  interesting failure mode... can be mitigated with appropriate timeouts, drop/bring up
| [Wednesday 23 June 2010] [12:02:01] <sustrik>   jldupont: reusing the failed connection?
| [Wednesday 23 June 2010] [12:02:11] <sustrik>   that would be pretty dangerous imo
| [Wednesday 23 June 2010] [12:02:27] <jldupont>  no. drop & reconnect
| [Wednesday 23 June 2010] [12:02:34] <sustrik>   ah
| [Wednesday 23 June 2010] [12:02:52] <jldupont>  ( aka tear-down/bring-up )
| [Wednesday 23 June 2010] [12:02:59] <sustrik>   that has no implication on wire protocol imo
| [Wednesday 23 June 2010] [12:03:05] <sustrik>   as you start anew each time
| [Wednesday 23 June 2010] [12:03:17] <sztanpet>  doesnt 0mq automatically reconnect you btw?
| [Wednesday 23 June 2010] [12:03:21] <sustrik>   yes
| [Wednesday 23 June 2010] [12:03:24] <jldupont>  ... but the trouble is mid-flight
| [Wednesday 23 June 2010] [12:03:41] <sztanpet>  what of it
| [Wednesday 23 June 2010] [12:03:53] <sztanpet>  its the same with tcp, i cant quite see your problem
| [Wednesday 23 June 2010] [12:05:11] <jldupont>  like I said, if a problem occurs mid-flight, then the connection can be detected faulty and tear/down/bring-up would occur.
| [Wednesday 23 June 2010] [12:05:35] <jldupont>  if that failure mode is taken care of in 0mq, then let's finish this discussion.
| [Wednesday 23 June 2010] [12:12:46] <sustrik>   yes, it is
| [Wednesday 23 June 2010] [12:12:56] <jldupont>  ok
| [Wednesday 23 June 2010] [14:41:56] <chris2>    hi. i'm trying to use the zmq2 gem for pub/sub
| [Wednesday 23 June 2010] [14:42:10] <chris2>    and i can pub, but nothing appears at sub
| [Wednesday 23 June 2010] [14:43:23] <cremes>    chris2: when you say "gem" i assume you are using ruby; is that correct?
| [Wednesday 23 June 2010] [14:43:30] <chris2>    erm, yes
| [Wednesday 23 June 2010] [14:43:32] <chris2>    right
| [Wednesday 23 June 2010] [14:43:37] <chris2>    i can paste my code too
| [Wednesday 23 June 2010] [14:43:47] <cremes>    please do (use pastie or a gist)
| [Wednesday 23 June 2010] [14:44:40] <chris2>    http://pastie.org/1016242
| [Wednesday 23 June 2010] [14:45:16] <chris2>    i ported that from the py at http://nichol.as/zeromq-an-introduction
| [Wednesday 23 June 2010] [14:45:50] <cremes>    ok; is the pub loop printing out each message that it sends?
| [Wednesday 23 June 2010] [14:45:58] <chris2>    the pub sends nicely
| [Wednesday 23 June 2010] [14:46:06] <chris2>    the sub doesnt show anything
| [Wednesday 23 June 2010] [14:46:20] <cremes>    let me try and run it myself... give me a couple...
| [Wednesday 23 June 2010] [14:46:58] <chris2>    i ran strace on the sub, and it shows
| [Wednesday 23 June 2010] [14:46:59] <chris2>    recvfrom(8, 0x7fff8c0810f0, 48, 64, 0, 0) = -1 EAGAIN (Resource temporarily unavailable)
| [Wednesday 23 June 2010] [14:47:08] <chris2>    roughly pulsed like the pub
| [Wednesday 23 June 2010] [14:47:16] <chris2>    so i guess there is some kind of transmission
| [Wednesday 23 June 2010] [14:51:28] <chris2>    hah, fixed it
| [Wednesday 23 June 2010] [14:51:31] <cremes>    chris2: i'm having some trouble installing the zmq2 gem; it installed fine but now complains about a missing file (zmq_native)
| [Wednesday 23 June 2010] [14:51:34] <cremes>    what was it?
| [Wednesday 23 June 2010] [14:51:39] <chris2>    s.setsockopt(ZMQ::SUBSCRIBE, "")
| [Wednesday 23 June 2010] [14:51:44] <chris2>    i need to subscribe to everything
| [Wednesday 23 June 2010] [14:51:45] <cremes>    ah!
| [Wednesday 23 June 2010] [14:51:53] <chris2>    the py api seems to do that by default
| [Wednesday 23 June 2010] [14:52:00] <cremes>    good catch
| [Wednesday 23 June 2010] [14:52:10] <chris2>    py api seems a bit nicer in general
| [Wednesday 23 June 2010] [14:52:17] <chris2>    but im not sure if zmq2 is even official
| [Wednesday 23 June 2010] [14:52:31] <cremes>    what does official mean anyway? use what works best.
| [Wednesday 23 June 2010] [14:53:01] <chris2>    sure
| [Wednesday 23 June 2010] [14:53:10] <chris2>    but then the api should be similar i think
| [Wednesday 23 June 2010] [14:53:25] <chris2>    ok, multiple sub works too
| [Wednesday 23 June 2010] [14:53:29] <cremes>    the zeromq guys don't anything about ruby (or python or php or lua) so they are hoping community folks take over the bindings
| [Wednesday 23 June 2010] [14:54:10] <chris2>    http://www.zeromq.org/bindings:ruby ?
| [Wednesday 23 June 2010] [14:54:42] <cremes>    yes; also http://www.zeromq.org/bindings:ruby-ffi for jruby, rubinius and others
| [Wednesday 23 June 2010] [14:54:48] <cremes>    (i wrote those)
| [Wednesday 23 June 2010] [14:55:00] <cremes>    er, i wrote the ffi bindings for ruby
| [Wednesday 23 June 2010] [14:55:19] <chris2>    ok
| [Wednesday 23 June 2010] [14:58:19] <chris2>    also, is there a thing i can place inbetween to add persistence of the messages?
| [Wednesday 23 June 2010] [15:00:01] <cremes>    chris2: there isn't anything in the 0mq library that provides persistence; you would need to create that yourself
| [Wednesday 23 June 2010] [15:00:19] <chris2>    just figured someone already wrote a daemon or something to do that in general
| [Wednesday 23 June 2010] [15:00:34] <cremes>    not yet; you could be the first
| [Wednesday 23 June 2010] [15:00:51] <chris2>    its probably not entirely trivial then :)
| [Wednesday 23 June 2010] [15:01:31] <cremes>    nope, not trivial; messages can be in the 0mq queue, a system buffer, a driver buffer, on the wire, or in those same buffers on the receiving end
| [Wednesday 23 June 2010] [15:01:42] <chris2>    yeah
| [Wednesday 23 June 2010] [15:01:57] <cremes>    you would need an explicit ack that a message was persisted
| [Wednesday 23 June 2010] [15:02:08] <cremes>    it's a thorny issue
| [Wednesday 23 June 2010] [15:02:15] <chris2>    true that
| [Wednesday 23 June 2010] [15:26:10] <CIA-17>    rbzmq: 03Brian Buchanan 07master * r5be8033 10/ rbzmq.c : Make the flags argument to ZMQ::Socket.send() and ZMQ::Socket.recv() optional. Resolves issue #1. - http://bit.ly/aeY6wZ
| [Wednesday 23 June 2010] [15:26:21] <chris2>    awesome quick :D
| [Wednesday 23 June 2010] [15:28:09] <chris2>    is pub/sub filtering really implemented on the pub side?
| [Wednesday 23 June 2010] [15:28:16] <chris2>    or does sub get everything and then filters
| [Wednesday 23 June 2010] [15:29:04] <CIA-17>    rbzmq: 03Brian Buchanan 07master * r7043d45 10/ rbzmq.c : Update method signatures for socket.send and socket.recv in the documentation. - http://bit.ly/aG9JWs
| [Wednesday 23 June 2010] [15:33:07] <sustrik>   chris2: unfortunately, yes
| [Wednesday 23 June 2010] [15:33:16] <chris2>    kinda lame?
| [Wednesday 23 June 2010] [15:33:25] <sustrik>   passing the subscriptions upstream is on the roadmap for a long time
| [Wednesday 23 June 2010] [15:33:50] <sustrik>   but it's not trivial and so far there was noone to sponsor the development
| [Wednesday 23 June 2010] [15:34:07] <chris2>    okay
| [Wednesday 23 June 2010] [15:34:13] <chris2>    zmq is still cool
| [Wednesday 23 June 2010] [15:34:24] <sustrik>   :)
| [Wednesday 23 June 2010] [15:34:24] <chris2>    i guess i have some use for it
| [Wednesday 23 June 2010] [16:12:29] <mml>   is there a way to buffer unconsumed messages in a pub/sub config?
| [Wednesday 23 June 2010] [16:12:41] <mml>   i.e. all consumers are down, but i'm using a forwarder process..
| [Wednesday 23 June 2010] [16:12:56] <mml>   i want the forwarder to que msgs until the consumers return
| [Wednesday 23 June 2010] [16:13:07] <mml>   like ::SWAP et. al.
| [Wednesday 23 June 2010] [16:13:29] <mml>   or is that to 'brokery'
| [Wednesday 23 June 2010] [16:13:32] <mml>   s/to/too
| [Wednesday 23 June 2010] [16:17:41] <mml>   and, is the zmq forwarder config syntax documented somewhere?
| [Wednesday 23 June 2010] [16:20:07] <cremes>    mml: the forwarder "device" included with 0mq doesn't do any buffering
| [Wednesday 23 June 2010] [16:20:30] <cremes>    the forwarder also has no idea if anyone is connected to it; it would need to "heartbeat" or otherwise communicate with downstream clients
| [Wednesday 23 June 2010] [16:20:40] <cremes>    all of this is possible, but you would need to write the logic yourself
| [Wednesday 23 June 2010] [16:21:05] <cremes>    an no, the configuration for forwarder isn't documented anywhere; the code is short enough to figure it out though
| [Wednesday 23 June 2010] [16:21:57] <mml>   cremes: tx
| [Wednesday 23 June 2010] [16:22:09] <cremes>    you're welcome
| [Wednesday 23 June 2010] [16:31:37]      * mml is sad that zmq is inappropriate for what he needs
| [Wednesday 23 June 2010] [16:31:51] <mml>   the ruby bindings worked great fwiw
| [Wednesday 23 June 2010] [16:32:28] <bj_990>    are you guys as slick as ice http://www.zeroc.com/ ? 
| [Wednesday 23 June 2010] [16:53:23] <mivert>    bj_990: yes? pretty different though.  Ice does RPC and serialization, MQ does messaging.
| [Wednesday 23 June 2010] [16:54:18] <bj_990>    i just saw that
| [Wednesday 23 June 2010] [16:54:18] <bj_990>    :D
| [Wednesday 23 June 2010] [16:54:37] <bj_990>    thanks mivert 
| [Wednesday 23 June 2010] [16:54:44] <mivert>    np
| [Wednesday 23 June 2010] [17:22:33] <bj_990>    this looks great
| [Wednesday 23 June 2010] [17:30:39] <bj_990>    be back in the near future... 
| [Wednesday 23 June 2010] [23:37:03] <alisdair>  is zeromq a protocol at all, or is it mostly an alternate interface to sockets?
| [Thursday 24 June 2010] [01:46:43] Part __20h__ has left this channel.
| [Thursday 24 June 2010] [02:07:42] <travlr> alisdair: zmq transports a "blob" of data so the descriptor of the blob is provided by the app programmer. 
| [Thursday 24 June 2010] [02:08:33] <alisdair>   travlr: i get that, but does it wrap that at all? can i use zeromq at only one end of a connection, or does it need to be used at both?
| [Thursday 24 June 2010] [02:09:28] <travlr> alisdair: "only one end" ... do you mean using standard-sockets in the system... if so see zmq_poll() doc
| [Thursday 24 June 2010] [02:09:37] <alisdair>   well
| [Thursday 24 June 2010] [02:09:42] <alisdair>   if i write a client using zeromq
| [Thursday 24 June 2010] [02:09:48] <alisdair>   does the server need to be aware of that?
| [Thursday 24 June 2010] [02:10:21] <travlr> is the server using a standard-socket?
| [Thursday 24 June 2010] [02:10:36] <travlr> bsd socket?
| [Thursday 24 June 2010] [02:11:32] <travlr> look at the zmq_poll() doc I think that will help answer your question.
| [Thursday 24 June 2010] [02:13:08] <alisdair>   standard sockets
| [Thursday 24 June 2010] [02:13:49] <travlr> also, see the mato's zmq-camera example of integrating other system aspects: http://github.com/mato/zeromq-examples
| [Thursday 24 June 2010] [02:14:21] <alisdair>   i just want to know, does zeromq add any wrapping to a packet? if i send a packet from a client written using zeromq, does the receiving system need to know anything about it to process it? is it just a regular udp/tcp packet?
| [Thursday 24 June 2010] [02:16:26] <travlr> zmq_recv() just recieves the "blob". no un-wrapping is necessary. it does wrap the blob with possible addressing and delineation protocol aspects. 
| [Thursday 24 June 2010] [02:17:06] <travlr> see: zmq_tcp(7), zmq_pgm(7), zmq_ipc(7), and zmq_inproc(7) for details.
| [Thursday 24 June 2010] [02:17:48] <travlr> http://api.zeromq.org/zmq.html
| [Thursday 24 June 2010] [02:33:13] <Umesh>  http://www.zeromq.org/whitepapers:design-v06#toc0
| [Thursday 24 June 2010] [02:33:21] <Umesh>  is this white paper outdated ?
| [Thursday 24 June 2010] [02:36:09] <travlr> Umesh: In a sense yes, but not totally. zmq2 is a departure from zmq1 in that is entirely brokerless and there is no message protocol. I don't know yet myself where all the similarities and differences lie.
| [Thursday 24 June 2010] [02:39:16] <sustrik>    Umesh: in general, yes. what exactly are you interested in?
| [Thursday 24 June 2010] [02:41:12] <Umesh>  I am intrested in load balancing for client server 
| [Thursday 24 June 2010] [02:41:56] <Umesh>  there it was how we can do load balancing in the zmq is described in that white paper 
| [Thursday 24 June 2010] [02:42:13] <Umesh>  while reading that paper i felt it is outdated ...
| [Thursday 24 June 2010] [02:42:38] <Umesh>  so we can't do load balancing inbuilt in the zmq ... right ?
| [Thursday 24 June 2010] [02:42:50] <Umesh>  for REQ/REP socket
| [Thursday 24 June 2010] [02:45:11] <sustrik>    yes, there's load balancing in-built
| [Thursday 24 June 2010] [02:45:22] <sustrik>    when there are several peers to REQ socket
| [Thursday 24 June 2010] [02:45:31] <sustrik>    the requests are load-balanced among them
| [Thursday 24 June 2010] [02:45:46] <Umesh>  ok
| [Thursday 24 June 2010] [02:46:03] <Umesh>  then how we can choose the endpoint for that peer ...
| [Thursday 24 June 2010] [02:46:13] <sustrik>    ?
| [Thursday 24 June 2010] [02:46:15] <Umesh>  I haven't seen any such apis 
| [Thursday 24 June 2010] [02:46:32] <sustrik>    there's no need for specific apis
| [Thursday 24 June 2010] [02:46:37] <Umesh>  means say i have a name server on m1, m2 and m3 ...
| [Thursday 24 June 2010] [02:47:07] <sustrik>    s =socket (REQ);
| [Thursday 24 June 2010] [02:47:13] <sustrik>    s.connect (m1);
| [Thursday 24 June 2010] [02:47:15] <sustrik>    s.connect (m2);
| [Thursday 24 June 2010] [02:47:17] <sustrik>    s.connect (m3);
| [Thursday 24 June 2010] [02:47:24] <sustrik>    that's what you meant?
| [Thursday 24 June 2010] [02:47:58] <Umesh>  then I create a REQ socket and then connect ...
| [Thursday 24 June 2010] [02:48:03] <Umesh>  then send data ...
| [Thursday 24 June 2010] [02:48:10] <sustrik>    yes
| [Thursday 24 June 2010] [02:48:16] <Umesh>  so data will go to machine where i connect ...
| [Thursday 24 June 2010] [02:48:18] <Umesh>  right ...
| [Thursday 24 June 2010] [02:48:30] <sustrik>    or you can bind and let name servers connect to your app
| [Thursday 24 June 2010] [02:48:38] <Umesh>  ok so you mean i should connect to all name server ... right ?
| [Thursday 24 June 2010] [02:48:39] <sustrik>    depends on what you are doing
| [Thursday 24 June 2010] [02:48:45] <sustrik>    right
| [Thursday 24 June 2010] [02:48:53] <Umesh>  to enable laod balancing ...
| [Thursday 24 June 2010] [02:49:36] <Umesh>  is there any way to know all machines on the port using the zmq ... something like getaddribfo
| [Thursday 24 June 2010] [02:50:27] <Umesh>  just a summary of our discussion : To enable load balansing in the zmq ... REQ socket should connect to all REP sockets it know ... right ?
| [Thursday 24 June 2010] [02:50:52] <sustrik>    REQ sockets should have multiple peers
| [Thursday 24 June 2010] [02:51:03] <Umesh>  yup ...
| [Thursday 24 June 2010] [02:51:05] <sustrik>    whether they are connected to are they connect themselves
| [Thursday 24 June 2010] [02:51:33] <sustrik>    as for locating the machines... it's pretty hard when you think of Intetnet
| [Thursday 24 June 2010] [02:51:50] <sustrik>    there may be a machine running somewhere in Ougadougou
| [Thursday 24 June 2010] [02:52:02] <sustrik>    no, no way to locate all the instances
| [Thursday 24 June 2010] [02:52:07] <Umesh>  ok
| [Thursday 24 June 2010] [02:52:14] <sustrik>    what you may want is a shared queue
| [Thursday 24 June 2010] [02:52:27] <sustrik>    i.e. all clients connect to the shared queue
| [Thursday 24 June 2010] [02:52:38] <Umesh>  but for lan ... I can still use the getaddrinfo call ... to find all the machines to connect to ...
| [Thursday 24 June 2010] [02:52:38] <sustrik>    all servers connect to the shared queue
| [Thursday 24 June 2010] [02:53:08] <sustrik>    the share queue load balances the requests among the servers
| [Thursday 24 June 2010] [02:53:11] <Umesh>  means use a queue device in between ... create one hop ..
| [Thursday 24 June 2010] [02:53:15] <sustrik>    yes
| [Thursday 24 June 2010] [02:53:40] <sustrik>    ad getaddrinfo: i am afraid it doesn't work that way
| [Thursday 24 June 2010] [02:53:50]   * sustrik is not a DNS expert though
| [Thursday 24 June 2010] [02:53:58] <Umesh>  but for lan ... I can still use the getaddrinfo call ... to find all the machines to connect to ...
| [Thursday 24 June 2010] [02:54:38] <sustrik>    how would you do that?
| [Thursday 24 June 2010] [02:54:42] <Umesh>  i will just not specify node in that call ... only specify port ... get all the machines listening on that port ...
| [Thursday 24 June 2010] [02:55:05] <sustrik>    i doubt getaddrinfo works that way
| [Thursday 24 June 2010] [02:55:37] <Umesh>  getaddrinfo(NULL, PORT, &hints, &servinfo))
| [Thursday 24 June 2010] [02:55:47] <sustrik>    does it work?
| [Thursday 24 June 2010] [02:55:55] <Umesh>  here PORT will be the port of the name server ...
| [Thursday 24 June 2010] [02:56:03] <Umesh>  it works for normal tcp ip ...
| [Thursday 24 June 2010] [02:56:09] <sustrik>    wow
| [Thursday 24 June 2010] [02:56:24] <Umesh>  so i think it will work for zmq ...
| [Thursday 24 June 2010] [02:56:33] <Umesh>  isn't it ...
| [Thursday 24 June 2010] [02:56:35] <Umesh>  ?
| [Thursday 24 June 2010] [02:56:52] <sustrik>    if it works then it would surely work
| [Thursday 24 June 2010] [02:56:56] <sustrik>    even for 0mq
| [Thursday 24 June 2010] [02:56:58]   * sustrik wonders how that works under the covers
| [Thursday 24 June 2010] [02:57:00] <Umesh>  ok
| [Thursday 24 June 2010] [02:57:19] <Umesh>  i will give the try ... 
| [Thursday 24 June 2010] [02:58:43] <Umesh>  one more doubt ... which load balancing we does ?
| [Thursday 24 June 2010] [02:58:54] <Umesh>  means round robin ... etc ?
| [Thursday 24 June 2010] [03:15:05] <sustrik>    round robin
| [Thursday 24 June 2010] [03:16:39] <Umesh>  ok
| [Thursday 24 June 2010] [03:27:17] <Umesh>  hi sustrik ... 
| [Thursday 24 June 2010] [03:27:29] <Umesh>  i think i was wrong for getaddrinfo ...
| [Thursday 24 June 2010] [03:27:55] <Umesh>  it will not work for normal tcp/ip as well
| [Thursday 24 June 2010] [03:39:35] <sustrik>    :)
| [Thursday 24 June 2010] [03:55:27] <Efhache>    Hi everybody
| [Thursday 24 June 2010] [03:56:15] <Efhache>    I come back to you because I need some help...  I'm learning how to use zmq... In this goal I test some example application.
| [Thursday 24 June 2010] [03:56:35] <Efhache>    Right now I test the tcp client/server application example
| [Thursday 24 June 2010] [03:57:50] <Efhache>    but I've a little problem... when I try to send my message I've an "unknown error" (returned by strerror) and the client of course segfault when I try to receive
| [Thursday 24 June 2010] [03:58:20] <Efhache>    The error is "ERREUR -1 send: Unknown error 156384763 "  
| [Thursday 24 June 2010] [03:58:27] <Efhache>    Could you help me ???
| [Thursday 24 June 2010] [03:58:58] <Efhache>    here is the line code used to send my message : rc = zmq_send (s, &query, 0);
| [Thursday 24 June 2010] [04:03:00] <travlr> If you post the code piece somewhere, I'll try to help.
| [Thursday 24 June 2010] [04:08:26] <Efhache>    Can I post it here?
| [Thursday 24 June 2010] [04:08:32] <Efhache>    (piece by piece) ?
| [Thursday 24 June 2010] [04:09:47] <travlr> use dpaste or gist or some similar web service so I may be able to see what might be incorrect
| [Thursday 24 June 2010] [04:12:23] <travlr> http://dpaste.com/ or http://gist.github.com/ or some other
| [Thursday 24 June 2010] [04:12:47] <Efhache>    http://dpaste.com/hold/210910/
| [Thursday 24 June 2010] [04:14:20] <sustrik>    Efhache: 0mq defines few additional errors
| [Thursday 24 June 2010] [04:14:31] <sustrik>    use zmq_strerror instead of strerror to decode them
| [Thursday 24 June 2010] [04:14:38] <Efhache>    ok
| [Thursday 24 June 2010] [04:17:39] <Efhache>    ERREUR -1 send: Operation cannot be accomplished in current state
| [Thursday 24 June 2010] [04:17:47] <Efhache>    no more information for me...
| [Thursday 24 June 2010] [04:17:49] <Efhache>    :-/
| [Thursday 24 June 2010] [04:21:06] <travlr> has the server been executed before the client?
| [Thursday 24 June 2010] [04:22:20] <Efhache>    yes of course
| [Thursday 24 June 2010] [04:22:35] <Efhache>    and the server is running 
| [Thursday 24 June 2010] [04:22:43] <sustrik>    REQ/REP sockets reuquire alternate sequence of sends & recvs
| [Thursday 24 June 2010] [04:22:58] <sustrik>    so with REQ send a request, the receveive a reply
| [Thursday 24 June 2010] [04:23:10] <sustrik>    with REP receiver a request, then send the reply
| [Thursday 24 June 2010] [04:23:23] <sustrik>    if you fail to do so you'll get the above error
| [Thursday 24 June 2010] [04:24:26] <travlr> yeah i see it now too. you need to use ZMQ_REQ in your client.
| [Thursday 24 June 2010] [04:24:36] <Efhache>    ok
| [Thursday 24 June 2010] [04:26:16] <Efhache>    I replace REP by REQ... now I've not error on the send() function. But a segfault on the recv.  I must rechange the context before received???
| [Thursday 24 June 2010] [04:26:40] <travlr> no but did you use ZMQ_REP in the server?
| [Thursday 24 June 2010] [04:27:53] <Efhache>    Yes
| [Thursday 24 June 2010] [04:28:15] <Efhache>    This code comes from the cookbook examples
| [Thursday 24 June 2010] [04:28:54] <travlr> yeah, it should work out of the box. do you want to post the server code to dpaste
| [Thursday 24 June 2010] [04:29:04] <Efhache>    ok
| [Thursday 24 June 2010] [04:29:38] <Efhache>    http://dpaste.com/hold/210915/
| [Thursday 24 June 2010] [04:30:40] <Efhache>    May be I'll study the code from the latency example
| [Thursday 24 June 2010] [04:32:15] <travlr> i don't know because it looks ok, but i may be over looking something
| [Thursday 24 June 2010] [04:33:19] <Efhache>    It's ok now
| [Thursday 24 June 2010] [04:33:27] <travlr> what was it?
| [Thursday 24 June 2010] [04:33:38] <Efhache>    I've foget the zmq_msg_init of my resultset variable
| [Thursday 24 June 2010] [04:34:13] <travlr> yes i see.. ok cool
| [Thursday 24 June 2010] [04:34:56] <Efhache>    thank's a lot for your help ;-)
| [Thursday 24 June 2010] [04:35:07] <travlr> sure
| [Thursday 24 June 2010] [04:35:26] <Efhache>    Just to be sure... with this example, I've just a P2P  connection between processes ?
| [Thursday 24 June 2010] [04:35:56] <Efhache>    If I'd like to make a communication between a process and two (or more) others
| [Thursday 24 June 2010] [04:36:07] <Efhache>    I need to create each time a endpoint ?
| [Thursday 24 June 2010] [04:36:15] <travlr> REQ/REP you can use multiple peers.
| [Thursday 24 June 2010] [04:37:08] <Efhache>    ok
| [Thursday 24 June 2010] [04:37:09] <travlr> just use connect to the socket multiple times for each client.. etc.
| [Thursday 24 June 2010] [04:37:45] <travlr> then it will load-balance in a round robin fashion.. i don't know if that's what you want
| [Thursday 24 June 2010] [04:38:10] <travlr> you may want PUB/SUB maybe..
| [Thursday 24 June 2010] [04:38:31] <travlr> or other
| [Thursday 24 June 2010] [04:43:17] <Efhache>    I've make a rapid test with two client and it seems that it works... but I'd be sure... how can I make in the server to have a specific message for each client
| [Thursday 24 June 2010] [04:43:49] <Efhache>    I can find in the server an id of the sender ?
| [Thursday 24 June 2010] [04:44:35] <travlr> i don't think so. try returning a specific message for each client.
| [Thursday 24 June 2010] [04:44:50] <travlr> for testing
| [Thursday 24 June 2010] [04:45:09] <Efhache>    ok
| [Thursday 24 June 2010] [04:48:23] <Efhache>    thank you  for your help
| [Thursday 24 June 2010] [04:48:29] <travlr> k
| [Thursday 24 June 2010] [04:53:33] <Efhache>    no chance... the server do not make automatically a difference between the senders... clients received all replies...
| [Thursday 24 June 2010] [05:00:28] <travlr> Efhache: From the zmq_socket doc: "Each request sent is load-balanced among all services, and each reply received is matched with the last issued request."
| [Thursday 24 June 2010] [05:52:16] <sustrik>    Efhache: what do you want to do?
| [Thursday 24 June 2010] [05:52:37] <sustrik>    if you want to reply to the requester use REQ/REP
| [Thursday 24 June 2010] [05:52:45] <sustrik>    if you want to send to all client use PUB/SUB
| [Thursday 24 June 2010] [07:00:38] <bavluo> While compiling/install the PyZMQ extension I am getting "zmq/_zmq.c: In function init_zmq: EMTHREAD undeclared (first use in this function)". I have cloned the latest ZMQ and PyZMQ for github
| [Thursday 24 June 2010] [08:02:37] <Umesh>  Is there a way to write distributed REP server in zeromq ...
| [Thursday 24 June 2010] [08:12:16] <sustrik>    yes, place a queue device in the middle
| [Thursday 24 June 2010] [08:26:48] <Umesh>  ok
| [Thursday 24 June 2010] [08:27:20] <Umesh>  but it will send a request to all the servers ... write ?
| [Thursday 24 June 2010] [08:27:35] <Umesh>  right ?
| [Thursday 24 June 2010] [08:28:17] <Umesh>  or it will load balance the traffic ?
| [Thursday 24 June 2010] [08:29:33] <sustrik>    load balance
| [Thursday 24 June 2010] [08:29:52] <sustrik>    REQ/REP always load balances
| [Thursday 24 June 2010] [08:30:03] <sustrik>    PUB/SUB always distributes the messages to everyone
| [Thursday 24 June 2010] [08:31:04] <Umesh>  just one question : I don't see any lb object in req.hpp 
| [Thursday 24 June 2010] [08:31:20] <Umesh>  its there in xreq.hpp
| [Thursday 24 June 2010] [08:31:57] <Umesh>  so it is like xreq only have laod balancing ...
| [Thursday 24 June 2010] [08:34:37] <Efhache>    travlr : I see only now your response... sorry... what happens if multi client send request, each of the clients received all the replies? right?
| [Thursday 24 June 2010] [08:35:38] <Efhache>    sustrik :  I'just want to make a lighted broker : when it received a message from one process it re-sent this message to all connected processes.
| [Thursday 24 June 2010] [08:36:16] <sustrik>    Umesh: it's there but it's written by hand
| [Thursday 24 June 2010] [08:36:35] <sustrik>    the code should be polished a bit so that REQ uses lb_t as well...
| [Thursday 24 June 2010] [08:37:23] <sustrik>    Efhache: such a thing already exists
| [Thursday 24 June 2010] [08:37:30] <sustrik>    use zmq_forwarder to do this
| [Thursday 24 June 2010] [08:38:07] <sustrik>    have a look at an example here: http://github.com/zeromq/zeromq-chat/blob/master/README
| [Thursday 24 June 2010] [08:38:08] <Efhache>    but the example code that I've used  seems to do it...
| [Thursday 24 June 2010] [08:38:47] <sustrik>    sure, if you want to implement it yourself, why not
| [Thursday 24 June 2010] [08:40:02] <Efhache>    witouht implemented it myself... the code from 2 hours ago seems do it... I've tested the "server" with two clients and the both have received the reply from servers
| [Thursday 24 June 2010] [08:40:19] <Efhache>    may be a "bug" of my code   or is it normal?
| [Thursday 24 June 2010] [08:40:45] <sustrik>    what code? sorry, i missed it
| [Thursday 24 June 2010] [08:41:06] <Umesh>  sustrik : code present in the devices/zmq_queue/zmq_queue.cpp ... can be straight away used as a queue in the middle right ?
| [Thursday 24 June 2010] [08:41:19] <sustrik>    Umesh: yes
| [Thursday 24 June 2010] [08:41:23] <Umesh>  ok
| [Thursday 24 June 2010] [08:41:39] <sustrik>    there's an executable generated for convenience sake: devices/zmq_queue
| [Thursday 24 June 2010] [08:42:13] <Umesh>  but it uses XREQ/XREP sockets  .... and my client server uses REQ/REP ...
| [Thursday 24 June 2010] [08:42:23] <Umesh>  then will it work with them ?
| [Thursday 24 June 2010] [08:42:27] <sustrik>    yes
| [Thursday 24 June 2010] [08:42:31] <Umesh>  ok
| [Thursday 24 June 2010] [08:54:18] <Efhache>    sustrik : it was a problem in my code... with a remanence in a string used for reply...
| [Thursday 24 June 2010] [08:54:43] <Efhache>    sustrik : have you an exemple of "broadcasting" ?
| [Thursday 24 June 2010] [08:56:12] <sustrik>    what about this one: http://github.com/zeromq/zeromq-chat
| [Thursday 24 June 2010] [08:56:56] <sustrik>    or this one: http://lwn.net/Articles/370307/ (Java vs. Python)
| [Thursday 24 June 2010] [08:57:37] <sustrik>    or this one: http://nichol.as/zeromq-an-introduction (Python)
| [Thursday 24 June 2010] [09:11:38] <Efhache>    sustrik : thank you... if I goof understand to make a sort of lighted broker. I will must creating two context. One for receiving and one tu publish (server part)   and for the clients one for sending and one for subscribing
| [Thursday 24 June 2010] [09:11:42] <Efhache>    is it right?
| [Thursday 24 June 2010] [09:12:33] <sustrik>    what are you trying to do, i still don't get it
| [Thursday 24 June 2010] [09:12:43] <sustrik>    can you describe the scenario?
| [Thursday 24 June 2010] [09:14:18] <Efhache>    OK...  one process who received messagre from two (or more) other process   and re-sent the receive message to all connected processes
| [Thursday 24 June 2010] [09:36:49] <Efhache>    in C language
| [Thursday 24 June 2010] [09:54:46] <sustrik>    what you need is a single context
| [Thursday 24 June 2010] [09:54:51] <sustrik>    one sub socket
| [Thursday 24 June 2010] [09:54:56] <sustrik>    and one pub
| [Thursday 24 June 2010] [09:54:58] <sustrik>    socket
| [Thursday 24 June 2010] [09:55:08] <sustrik>    get messages from sub socket
| [Thursday 24 June 2010] [09:55:16] <sustrik>    and send them to the pub socket
| [Thursday 24 June 2010] [09:55:26] <sustrik>    that's exactly what zmq_forwarder does
| [Thursday 24 June 2010] [10:01:20] <Efhache>    ok
| [Thursday 24 June 2010] [10:02:50] <Efhache>    sorry but it's a new concept for me...
| [Thursday 24 June 2010] [10:03:43] <Efhache>    have you an example in C ?
| [Thursday 24 June 2010] [10:05:23] <Efhache>    I can not find information about zmq_forwarder in the doc (man page)   just "comming soon"
| [Thursday 24 June 2010] [10:10:39] <Efhache>    But if I read the chat example (http://github.com/zeromq/zeromq-chat/blob/master/prompt.cpp) message do not come from the client... is it true? And the client can only receive from prompt...
| [Thursday 24 June 2010] [10:10:39] <sustrik>    http://github.com/zeromq/zeromq-chat
| [Thursday 24 June 2010] [10:11:30] <Efhache>    so I need to context no? one for sending message (from a client to prompt)  and an other for SUB
| [Thursday 24 June 2010] [10:11:31] <sustrik>    you can merge display and prompt into a single application if you want
| [Thursday 24 June 2010] [10:11:34] <Efhache>    no ?
| [Thursday 24 June 2010] [10:11:53] <sustrik>    nope you can open both sockets from the same context
| [Thursday 24 June 2010] [10:12:07] <sustrik>    forget about multiple context, you're never going to need it
| [Thursday 24 June 2010] [10:12:17] <sustrik>    unless you are doing very advanced stuff
| [Thursday 24 June 2010] [10:13:31] <Efhache>    I think so I do not understand the concept of "context"...  I'll read more documentation... sorry
| [Thursday 24 June 2010] [10:14:20] <sustrik>    context is a global state of the library
| [Thursday 24 June 2010] [10:14:27] <sustrik>    you need only one context
| [Thursday 24 June 2010] [10:15:30] <Efhache>    ok
| [Thursday 24 June 2010] [10:16:07] <Efhache>    absolute not link with a protocol or a specific socket
| [Thursday 24 June 2010] [12:50:16] Nick sztanphet is now known as sztanpet.
| [Thursday 24 June 2010] [13:54:07] Part kleppari has left this channel.
| [Thursday 24 June 2010] [20:32:58] Part jldupont has left this channel.
| [Thursday 24 June 2010] [20:52:03] Mode gibson.freenode.net gives CIA-17 permission to talk.
| 
| *** Logfile started
| *** on Fri Jun 25 00:49:18 2010
| 
| [Friday 25 June 2010] [00:49:18] Topic  The channel topic is "Welcome!".
| [Friday 25 June 2010] [00:49:18] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Friday 25 June 2010] [00:49:24] Mode   Channel modes: no messages from outside, topic protection
| [Friday 25 June 2010] [00:49:24] Created    This channel was created on 2010-02-05 10:44.
| [Friday 25 June 2010] [04:01:14] Nick   sztanphet is now known as sztanpet.
| [Friday 25 June 2010] [06:38:24] <vtl>  sustrik: hi!
| [Friday 25 June 2010] [06:38:54] <sustrik>  hi
| [Friday 25 June 2010] [06:39:24] <vtl>  sustrik: question: http://paste.lisp.org/display/111844
| [Friday 25 June 2010] [06:40:00] <sustrik>  errno is thread-local
| [Friday 25 June 2010] [06:40:18] <sustrik>  so you get err1
| [Friday 25 June 2010] [06:41:10] <vtl>  sustrik: cool, 10x! as i thought... we have different opinion with a guy who forked cl-zmq :)
| [Friday 25 June 2010] [06:41:37] <sustrik>  :)
| [Friday 25 June 2010] [06:41:43] <sustrik>  it's POSIX behaviour
| [Friday 25 June 2010] [06:41:46] <vtl>  yes
| [Friday 25 June 2010] [06:41:47] <sustrik>  let me find the doc
| [Friday 25 June 2010] [06:42:08] <vtl>  man errno, i think
| [Friday 25 June 2010] [06:43:11] <sustrik>  right
| [Friday 25 June 2010] [06:43:39] <sustrik>  it's ISO C
| [Friday 25 June 2010] [06:59:41] <vtl>  I think I understood... In managed environments (like lisp, python, java, .net) thread may be interrupted by runtime for garbage collecting. if GC calls libraries functions or syscalls, it may clobber this thread's errno. When such event happens in between zmq_foo() and zmq_errno(), then zmq_errno() will return wrong errno.
| [Friday 25 June 2010] [07:04:39] <sustrik>  right, that may happen
| [Friday 25 June 2010] [07:19:51] <sustrik>  vtl: thinking about it
| [Friday 25 June 2010] [07:20:13] <sustrik>  in theory, it would be possible to solve the problem in 0mq itself
| [Friday 25 June 2010] [07:20:25] <sustrik>  solve the errno into 0mq-own thread-local variable
| [Friday 25 June 2010] [07:20:33] <sustrik>  and return that one from zmq_errno
| [Friday 25 June 2010] [07:20:49] <vtl>  I think this in not worth trying
| [Friday 25 June 2010] [07:21:00] <vtl>  because other foreign libraries will fail in the same way :)
| [Friday 25 June 2010] [07:21:01] <sustrik>  do you have a better solution?
| [Friday 25 June 2010] [07:21:15] <sustrik>  yes, definitely
| [Friday 25 June 2010] [07:21:24] <sustrik>  how is this solved in cl?
| [Friday 25 June 2010] [07:21:58] <vtl>  this is generally not solved in cl. but one paricular commercial version of CL (this is Allegro) has workaround for it
| [Friday 25 June 2010] [07:22:18] <sustrik>  ok, isee
| [Friday 25 June 2010] [07:22:31] <vtl>  I think, it is possible to hack CFFI library to solve such kind of problems
| [Friday 25 June 2010] [07:22:48] <vtl>  of course, other languages still problematic in this place
| [Friday 25 June 2010] [07:34:10] <cremes>   sustrik: why not make errno a member/property of the context class?
| [Friday 25 June 2010] [07:34:29] <cremes>   the system errno could be copied into that member after each 0mq call
| [Friday 25 June 2010] [07:43:52] <sustrik>  cremes: a socket option
| [Friday 25 June 2010] [07:44:03] <sustrik>  same as with Berkeley sockets (SO_ERROR)
| [Friday 25 June 2010] [07:44:34] <sustrik>  yes, this sounds more sane than zmq_errno
| [Friday 25 June 2010] [07:44:40] <CIA-17>   zeromq2: 03Martin Hurton 07master * rfca2e8e 10/ (7 files): Add SWAP support - http://bit.ly/bRzKds
| [Friday 25 June 2010] [07:47:01] <cremes>   right, move it to the socket class (why would i suggest context? d'oh!)
| [Friday 25 June 2010] [07:50:54] <cremes>   though that's another api change/break
| [Friday 25 June 2010] [07:56:40] <sustrik>  cremes: right
| [Friday 25 June 2010] [07:56:54] <sustrik>  in theory it may be done in 2 steps
| [Friday 25 June 2010] [07:57:03] <sustrik>  1. add the error socket option
| [Friday 25 June 2010] [07:57:07] <sustrik>  2. remove zmq_errno
| [Friday 25 June 2010] [07:57:25] <sustrik>  the latter can be done when major version number is bumped
| [Friday 25 June 2010] [08:30:27] <jugg> sustrik: recent commit "devices exit in case of context termination" 11891d : src/forwarder.cpp lines 33 and 40, I believe are missing the necessary "rc = " assignment?
| [Friday 25 June 2010] [08:31:32] <jugg> hmm, same thing in src/streamer.cpp
| [Friday 25 June 2010] [08:32:07] <sustrik>  let me see
| [Friday 25 June 2010] [08:34:44] <sustrik>  oops
| [Friday 25 June 2010] [08:34:50] <sustrik>  let me correct it!
| [Friday 25 June 2010] [08:41:33] <jugg> Using C++ bindings, it seems that the only time one needs to do a msg.rebuild is before a send.   But between a send and a recv or between a recv and another recv this is not necessary, as it would appear the zmq_recv internals close a message then re-initializes it as needed.  Is this correct?
| [Friday 25 June 2010] [08:43:52] <jugg> (the same could be stated/asked for the C api, restating with message close/init pairing instead of the C++ message rebuild)
| [Friday 25 June 2010] [08:44:00] <sustrik>  ok, fixed
| [Friday 25 June 2010] [08:44:32] <sustrik>  jugg: yes
| [Friday 25 June 2010] [08:44:52] <sustrik>  the only use for rebuild is when you have a message as a member variable of a class
| [Friday 25 June 2010] [08:45:03] <sustrik>  then you want to say resize it
| [Friday 25 June 2010] [08:45:15] <sustrik>  you would have to destroy it and reinistantiate it
| [Friday 25 June 2010] [08:45:32] <sustrik>  but that's not possible becasue it's a member variable!
| [Friday 25 June 2010] [08:45:49] <sustrik>  so you would have to allocate it dynamically or something...
| [Friday 25 June 2010] [08:45:57] <sustrik>  instead, you can simply call rebuild
| [Friday 25 June 2010] [08:48:42] <jugg> ok, but whether you destroy or rebuild, this is only necessary if you want to send a message of a different size.  Anytime you want to recv a message, there is no reason to free the associated memory from previous use of the message... eg, the zmq internals aren't going to leak memory previously allocated for a message.
| [Friday 25 June 2010] [08:50:08] <jugg> I'm talking about the zmq_msg_t memory not an instantiated C++ message class.
| [Friday 25 June 2010] [08:55:26] <sustrik>  jugg: yes
| [Friday 25 June 2010] [08:55:31] <sustrik>  i think it's mentioned in the docs
| [Friday 25 June 2010] [08:55:34] <sustrik>  let me see...
| [Friday 25 June 2010] [08:55:54] <sustrik>  zmq_recv(3):
| [Friday 25 June 2010] [08:55:55] <sustrik>  Any content previously stored in msg
| [Friday 25 June 2010] [08:55:55] <sustrik>         shall be properly deallocated.
| [Friday 25 June 2010] [09:03:24] <jugg> *sigh* I get caught up reading/ walking through the code and forget about the documentation.  appologies.
| [Friday 25 June 2010] [09:04:29] <sustrik>  :)
| [Friday 25 June 2010] [09:28:45] <jugg> I have a setup where a SUB socket binds a TCP port on two different interfaces.  There are two PUB sockets that connect, one to each interface of the SUB socket.  I experienced an instance with this setup that messages quit flowing from one of the publishers to the subscriber while messages continued to flow from the other publisher.
| [Friday 25 June 2010] [09:28:48] <jugg> However there were no errors, or anything to indicate anything was wrong besides the fact the messages weren't flowing.  At the OS level, the TCP port for the "dead" connection was still active, with one in LISTEN state, and the other in ESTABLISHED for the SUB and PUB socket respectively.
| [Friday 25 June 2010] [09:29:04] <jugg> Restarting the publisher application restored communications.
| [Friday 25 June 2010] [09:30:37] <jugg> If this happens in the future, any suggestions on how to inspect what is going on?
| [Friday 25 June 2010] [09:33:18] <sustrik>  jugg: my guess would be that there's a loophole in fair queueing algorithm somewhere
| [Friday 25 June 2010] [09:33:55] <sustrik>  if there are messages available from both publshers SUB socket round robins between them
| [Friday 25 June 2010] [09:34:43] <sustrik>  what you describe looks like SUB erroneously believes one of the pipes has no messages
| [Friday 25 June 2010] [09:34:52] <sustrik>  (although it does)
| [Friday 25 June 2010] [09:35:03] <sustrik>  and doesn't include it into the round robit
| [Friday 25 June 2010] [09:35:06] <sustrik>  robin
| [Friday 25 June 2010] [09:35:35] <jugg> where should I be looking in the zmq code?
| [Friday 25 June 2010] [09:36:18] <sustrik>  ljugg: are use using zmq_poll or just zmq_recv?
| [Friday 25 June 2010] [09:37:17] <jugg> just zmq_recv
| [Friday 25 June 2010] [09:37:38] <sustrik>  then it's fq_t::recv
| [Friday 25 June 2010] [09:38:00] <sustrik>  fq.cpp:81
| [Friday 25 June 2010] [09:54:25] <jugg> change to topic for a moment, working through that code is going to take a bit...  on multi-part messages, are the parts stacked up on the sending side or the receiving side?
| [Friday 25 June 2010] [10:00:43] <sustrik>  jugg: both sides
| [Friday 25 June 2010] [10:00:58] <sustrik>  the rule is that they are stacked on the write side of the pipe
| [Friday 25 June 2010] [10:01:14] <sustrik>  one pipe being between sender thread and sender's I/O thread
| [Friday 25 June 2010] [10:01:32] <sustrik>  other one being between receiver's I/O thread and receiver thread itself
| [Friday 25 June 2010] [10:27:35] <jugg> ok, so before they reach the receivers I/O thread, they've been stacked up in the sender's I/O thread.  Then they are all sent to the receiver, and the receiver I/O thread stacks them up until they are all received before passing them off to the receiver thread, yes?
| [Friday 25 June 2010] [10:30:22] <sustrik>  yes
| [Friday 25 June 2010] [10:38:49] <jugg> ok, so why expose the multipart concept to the receiving side at all then?  Why not assemble it all into a single message for final delivery?  The above structure provides no benefit for reducing total transfer time, nor allowing the receiving end to work on parts of the messages as they come in, thus reducing total processing time.
| [Friday 25 June 2010] [10:39:06] <jugg> It seems to me that either the receiving side should just get a single message delivered to the receiver thread, or that it shouldn't be atomic.
| [Friday 25 June 2010] [10:41:42] <sustrik>  jugg: the goal here is to allow for some basic structure in the message content
| [Friday 25 June 2010] [10:42:11] <sustrik>  so if sender has say 3 big matrices in different places in memory
| [Friday 25 June 2010] [10:42:41] <sustrik>  he'll use multi-part message as a means to achieve zero-copy
| [Friday 25 June 2010] [10:43:07] <sustrik>  however, he still wants to tell the boundaries between matrices on the receiving side
| [Friday 25 June 2010] [10:43:40] <sustrik>  that's why boundaries between message parts are honoured
| [Friday 25 June 2010] [10:44:20] <sustrik>  0mq uses this mechanism under the cover btw to distinguish 0mq-specific data on the wire from the user data
| [Friday 25 June 2010] [10:48:34] <jugg> ok, that makes sense.  So, perhaps two alternate multi-part implementations feature requests then:  1. allow the sending side to send each part immediately, and only stack them on the receiving side I/O thread.  2. allow non atomic multi-part messaging.
| [Friday 25 June 2010] [10:49:59] <sustrik>  1. makes sense
| [Friday 25 June 2010] [10:50:12] <sustrik>  2. what would that be good for?
| [Friday 25 June 2010] [10:51:44] <jugg> 2. A REQ is made (ie SQL query) and the REP has multiple rows, if it was non atomic, then each row could be sent back and be operated on without waiting for the entire set to arrive.
| [Friday 25 June 2010] [10:52:02] <travlr>   my guess might be in a stream processing sense of individual message parts.
| [Friday 25 June 2010] [10:52:19] <travlr>   yeah, what he said :)
| [Friday 25 June 2010] [10:53:02] <jugg> Another use is a REQ is made, and something more intensive like, a file set - a bunch of images - is returned.  These images need to be resized.  There is no reason to wait for the entire set to arrive.
| [Friday 25 June 2010] [10:58:08] <sustrik>  jugg: i would say each image (or row) is a separate message in these scenarios
| [Friday 25 June 2010] [10:58:29] <sustrik>  the rationale is that all the elements in the set are of the same type
| [Friday 25 June 2010] [10:58:46] <sustrik>  and thus eligible for parallelised processing or similar
| [Friday 25 June 2010] [10:59:10] <sustrik>  message parts make sense where there are different elements concatenated into a single message
| [Friday 25 June 2010] [10:59:20] <sustrik>  for example 0mq-routing-data + user-data
| [Friday 25 June 2010] [10:59:43] <travlr>   or a topic + user-data
| [Friday 25 June 2010] [10:59:46] <sustrik>  yes
| [Friday 25 June 2010] [11:00:01] <sustrik>  different semantics is the key here
| [Friday 25 June 2010] [11:00:26] <sustrik>  from this point of view atomicity makes perfect sense
| [Friday 25 June 2010] [11:00:42] <sustrik>  it doesn't make sense to deliver just the routing data
| [Friday 25 June 2010] [11:00:48] <sustrik>  or a topic
| [Friday 25 June 2010] [11:01:04] <sustrik>  and say load-balance the user-content somewhere else
| [Friday 25 June 2010] [11:02:17] <travlr>   seeing the big picture along with the  nuances is important for the various concepts in 0mq, huh.
| [Friday 25 June 2010] [11:02:43] <sustrik>  yes, this kind of thing is missing from docs :(
| [Friday 25 June 2010] [11:02:53] <sustrik>  but anyway, i have no idea where it shouldb e put
| [Friday 25 June 2010] [11:03:10] <travlr>   i want to help with docs in the near future
| [Friday 25 June 2010] [11:03:30] <travlr>   i'm still studying it all though for now
| [Friday 25 June 2010] [11:03:30] <sustrik>  do you have idea what exactly would you like to do?
| [Friday 25 June 2010] [11:03:51] <travlr>   docs?
| [Friday 25 June 2010] [11:04:00] <sustrik>  yes
| [Friday 25 June 2010] [11:04:07] <sustrik>  I liked Nicholas' blog yesterday
| [Friday 25 June 2010] [11:04:12] <travlr>   yes
| [Friday 25 June 2010] [11:04:15] <sustrik>  it seems this kind of stuff is highly needed
| [Friday 25 June 2010] [11:04:17] <travlr>   very much
| [Friday 25 June 2010] [11:04:35] <travlr>   along the same vain martin
| [Friday 25 June 2010] [11:04:42] <travlr>   s/vain/vane
| [Friday 25 June 2010] [11:05:42] <travlr>   first i want to understand 0mq inside out, which is what i'm working on atm
| [Friday 25 June 2010] [11:05:50] <jugg> sustrik: I understand that, however, I think the SQL example (whether the results are images or something else) has its use case as well.  The client knows that it wants an entire set of data, it doesn't know what comprises that set of data, and so it can't ask for each part individually.
| [Friday 25 June 2010] [11:06:00] <jugg> But it makes sense from an efficiency stand point to break the set of data into individual parts for transmission and processing.  Certainly the smarts could be layered ontop of 0MQ for getting each part individually, but greatly simplifies things by having 0MQ support this natively.
| [Friday 25 June 2010] [11:06:53] <sustrik>  jugg: understood
| [Friday 25 June 2010] [11:07:03] <sustrik>  what you have in mind is some kind of "terminator" message
| [Friday 25 June 2010] [11:07:20] <sustrik>  a message that says "this is the end of a message group"
| [Friday 25 June 2010] [11:08:10] <sustrik>  however, my feeling is that this kind of feature should be layered on top of 0MQ
| [Friday 25 June 2010] [11:08:14] <jugg> Well, what I want is a single REQ message to be able to receive multiple REP messages - whatever that looks like.
| [Friday 25 June 2010] [11:08:54] <jugg> the way multipart messaging works at the API level works for this very well.  It is just the implementation that does not.
| [Friday 25 June 2010] [11:09:29] <sustrik>  ok, i see
| [Friday 25 June 2010] [11:10:07] <sustrik>  the scenario makes sense
| [Friday 25 June 2010] [11:10:17] <sustrik>  the implications are non trivial
| [Friday 25 June 2010] [11:10:41] <sustrik>  if server X1 sends a first row, then halts for an hour
| [Friday 25 June 2010] [11:10:48] <sustrik>  the client would read the first low
| [Friday 25 June 2010] [11:10:56] <sustrik>  then halt waiting for and hour
| [Friday 25 June 2010] [11:11:12] <sustrik>  although there may be other resultssets available from server X2
| [Friday 25 June 2010] [11:11:26] <sustrik>  this cannot happen with simple REQ socket
| [Friday 25 June 2010] [11:11:32] <sustrik>  but it can happen with XREQ
| [Friday 25 June 2010] [11:11:43] <sustrik>  it's complex stuff, lot of space to experiment
| [Friday 25 June 2010] [11:12:36] <jugg> I'm not sure what you meant be other result sets...  subsequent REQ can't be made until the REP is satisfied... this is no different than the current REQ/REP behavior... if I send a REQ, it waits an indefinite time for a REP.
| [Friday 25 June 2010] [11:12:56] <sustrik>  the problem is that there may be a queue in the middle
| [Friday 25 June 2010] [11:13:12] <sustrik>  the queue has to be able to process multiple requsts at the same time
| [Friday 25 June 2010] [11:13:22] <sustrik>  otherwise it would work in lock-step fashion
| [Friday 25 June 2010] [11:13:28] <sustrik>  and the scalability would go soutg
| [Friday 25 June 2010] [11:13:31] <sustrik>  south
| [Friday 25 June 2010] [11:14:13] <sustrik>  so the queue (composed on XREQ and XREP socket) would have to work on message-part-scale
| [Friday 25 June 2010] [11:14:28] <sustrik>  which is doable, but not the state of affairs right now
| [Friday 25 June 2010] [11:14:41] <sustrik>  if you are interested in the topic feel free to propose a solution
| [Friday 25 June 2010] [11:15:51] <jugg> I guess from my no-understanding of the internals, looking at it from the point of view that multi-part messaging exists and works, then only (and maybe this is the sticking point) is to make the multi-parts non stacking on either end.
| [Friday 25 June 2010] [11:16:19] <jugg> "then only" => "the only change"
| [Friday 25 June 2010] [11:17:10] <sustrik>  the main problem is in the middle
| [Friday 25 June 2010] [11:17:49] <sustrik>  how would you achieve that queue isn't stuck when there's a half-sent mutli-part message being processed
| [Friday 25 June 2010] [11:17:57] <sustrik>  and the sender dies without terminating it?
| [Friday 25 June 2010] [11:18:31] <sustrik>  also, you need fairness guarantees, so the queue cannot process very long recordset in a single go
| [Friday 25 June 2010] [11:18:42] <jugg> You've mentioned this "middle queues" before, I'm still at a loss on them and what they are... :/
| [Friday 25 June 2010] [11:18:58] <sustrik>  instead it has to assign it a timeslice, process part of it, then move to another clients etc.
| [Friday 25 June 2010] [11:19:11] <sustrik>  "queue device"
| [Friday 25 June 2010] [11:19:41] <sustrik>  it's a component both requesters and repliers can connect to
| [Friday 25 June 2010] [11:19:54] <sustrik>  it then load balances the requests and routes the replies back
| [Friday 25 June 2010] [11:20:11] <sustrik>  see queue.cpp
| [Friday 25 June 2010] [11:36:21] <travlr>   sustrik: stuff like your previous conversation need to go in faq or clarified elsewhere etc. 
| [Friday 25 June 2010] [11:36:39] <travlr>   i'll be scrubbing the irc and mail list eventually
| [Friday 25 June 2010] [11:36:52] <sustrik>  you mean the message part stuff?
| [Friday 25 June 2010] [11:37:04] <travlr>   well anything with nuance
| [Friday 25 June 2010] [11:37:31] <sustrik>  the question is what should go to FAQ, what should go to docs and what should go elsewhere
| [Friday 25 June 2010] [11:38:03] <sustrik>  stacking the technical info into FAQ is probably not the best solution possible
| [Friday 25 June 2010] [11:38:26] <travlr>   i'm just saying that i'll keep in mind these issues as i go and will help any way i can with stuff like docs
| [Friday 25 June 2010] [11:38:52] <sustrik>  yes, i'm just thinking out aloud
| [Friday 25 June 2010] [11:39:43] <sustrik>  maybe there's some kind of "ideology" document missing
| [Friday 25 June 2010] [11:39:56] <travlr>   thats true for all of foss
| [Friday 25 June 2010] [11:40:01] <sustrik>  i.e. not the strict technical reference
| [Friday 25 June 2010] [11:40:19] <sustrik>  but some talk about what are individual features intended for
| [Friday 25 June 2010] [11:40:25] <jugg> sustrik: what happens with the current multipart if the sender dies while the I/O thread is sending out the messages?  Same problem, no?
| [Friday 25 June 2010] [11:40:29] <sustrik>  and why they are designed in the way they are etc.
| [Friday 25 June 2010] [11:40:38] <travlr>   sustrik: we'll have a conversation about this soon
| [Friday 25 June 2010] [11:40:49] <travlr>   and i'll go to town
| [Friday 25 June 2010] [11:41:18] <sustrik>  jugg: no, the incomplete messages are rolled back in that case
| [Friday 25 June 2010] [11:41:37] <sustrik>  trvlr: ok
| [Friday 25 June 2010] [11:48:10] <jugg> sustrik: Could the internals track whether the final message in a non atomic multipart message has been received, and if it has not, then the recv function return an error if the internals detect a disconnect of the sender?  Failing such a possibility, I'd say if the only thing hindering this capability are intermediate queues, then document the risk and recommend not using them for this particular usage.
| [Friday 25 June 2010] [11:50:11] <jugg> I haven't really understood why these "devices" are part of the core implementation anyway, they do not require access (afaict) to the internals of 0MQ, and could be implemented as stand alone applications/libraries, or even just example code.
| [Friday 25 June 2010] [11:53:41] <sustrik>  jugg: yes, right now the implementation of devices is pretty trivial
| [Friday 25 June 2010] [11:53:59] <sustrik>  in the future it's going to be more tightly integrated with the core
| [Friday 25 June 2010] [11:54:59] <sustrik>  as for the usage of deivces have a look here: http://www.zeromq.org/blog:multithreaded-server
| [Friday 25 June 2010] [11:55:19] <sustrik>  that's pretty straightforward usage of queue device
| [Friday 25 June 2010] [11:56:06] <sustrik>  with that in mind, try to put down your non-atomic multi-part messages idea into email and send it to the mailing list
| [Friday 25 June 2010] [11:56:31] <sustrik>  it would be good to see some discussion on the topic
| [Friday 25 June 2010] [11:59:05] <sustrik>  btw, i would suggest to name these "stream messages"; it's shorter that "non-atomic multi-part messages"
| [Friday 25 June 2010] [12:07:36] <jugg> sustrik: will do
| [Friday 25 June 2010] [12:08:58] <jugg> thanks for working through all of that.  I need to go back and dig into that possible fair queue issue now.
| [Friday 25 June 2010] [12:09:58] <sustrik>  you are welcome
| [Friday 25 June 2010] [12:35:50] <CIA-17>   zeromq2: 03Pieter Hintjens 07master * r1dda8a2 10/ src/msg_store.cpp : Used more expressive variable names - http://bit.ly/aynV9A
| [Friday 25 June 2010] [21:24:07] <zedas>    sustrik: question about zmq_poll:  it uses epoll if available right?  is there more you need to do?
| [Friday 25 June 2010] [21:29:45] <zedas>    sustrik: ahhh, zmq_poll system checks the rlimit and restricts available open fds to that.  i'll look at doing the same.
| [Saturday 26 June 2010] [02:23:32] <sustrik>    zedas: hi
| [Saturday 26 June 2010] [02:23:39] <sustrik>    what code are you looking at?
| [Saturday 26 June 2010] [02:23:50] <sustrik>    at the moment zmq_poll translates to standard poll
| [Saturday 26 June 2010] [02:24:20] <sustrik>    calling epoll makes not sense unless 0mq's zmq_poll API changes in the corresponding way
| [Saturday 26 June 2010] [02:25:05] <sustrik>    (registering fds separated from polling etc.)
| [Saturday 26 June 2010] [02:35:06] <zedas>  sustrik: i was looking at the poll.cpp and others.
| [Saturday 26 June 2010] [02:35:20] <zedas>  so i was under the impression that zmq_poll abstracts poll/epoll/kqueue.
| [Saturday 26 June 2010] [02:35:25] <zedas>  at least that's how the docs read.
| [Saturday 26 June 2010] [02:35:28] <zedas>  that not true?
| [Saturday 26 June 2010] [02:35:41] <sustrik>    the polling is done at 2 places
| [Saturday 26 June 2010] [02:35:56] <sustrik>    I/O threads from the thread pool are polling using epoll/whatever
| [Saturday 26 June 2010] [02:36:14] <sustrik>    meaning that if one 0MQ socket manages 100,000 TCP connections
| [Saturday 26 June 2010] [02:36:30] <sustrik>    these are looked for by epoll-based mechanism (on Linux at least)
| [Saturday 26 June 2010] [02:36:41] <sustrik>    then there's user polling (zmq_poll)
| [Saturday 26 June 2010] [02:36:56] <sustrik>    this at the moment translates to POSIX poll
| [Saturday 26 June 2010] [02:37:13] <sustrik>    however, i wouldn't expect anyone to use large amount of 0mq sockets
| [Saturday 26 June 2010] [02:37:46] <sustrik>    the only problem is if user wants to poll on couple of 0mq sockets + large amount of system sockets
| [Saturday 26 June 2010] [02:37:51] <sustrik>    is that your case?
| [Saturday 26 June 2010] [02:39:42] <zedas>  probably.  it's in mongrel2
| [Saturday 26 June 2010] [02:39:59] <zedas>  it craps out at 1024 sockets, which i haven't investigated yet, but even poll should handle that
| [Saturday 26 June 2010] [02:40:27] <zedas>  so, if you have these abstractions on epoll, kqueue, devpoll, and poll, why not have zmq_poll use them?
| [Saturday 26 June 2010] [02:40:46] <sustrik>    epoll reuires different API
| [Saturday 26 June 2010] [02:40:51] <sustrik>    otherwise it's of no use
| [Saturday 26 June 2010] [02:41:21] <sustrik>    the performance boost is related to registering the fds separately from polling as such
| [Saturday 26 June 2010] [02:42:15] <sustrik>    current zmq_poll is only a dumb copy of POSIX poll
| [Saturday 26 June 2010] [02:42:47] <sustrik>    there have been some discussion on alternate API but it never got into implementation phase
| [Saturday 26 June 2010] [02:43:52] <zedas>  well, plenty of libraries have given a consistent api to all the different event mechanisms
| [Saturday 26 June 2010] [02:44:03] <zedas>  it's not like this is anything new, even if they have different apis.
| [Saturday 26 June 2010] [02:44:27] <zedas>  looking at the code, it looks like you have the basis for the abstraction, probably just needs to be pulled into zmq_poll and used
| [Saturday 26 June 2010] [02:44:33] <zedas>  i may look at doing that in the near future.
| [Saturday 26 June 2010] [02:44:50] <sustrik>    that would be nice
| [Saturday 26 June 2010] [02:44:58] <zedas>  that and get rid of this #ifdef, the loop that seems to no be needed, etc.
| [Saturday 26 June 2010] [02:45:15] <sustrik>    what loop?
| [Saturday 26 June 2010] [02:46:11] <zedas>  the double nested while(true)
| [Saturday 26 June 2010] [02:46:26] <zedas>  haven't seen a poll loop implemented that way, so i'm assuming there's something odd there
| [Saturday 26 June 2010] [02:47:41] <zedas>  yeah i think i could clean this up and make it use the abstractions you've got
| [Saturday 26 June 2010] [02:47:57] <zedas>  or at least make it use epoll if that's available.
| [Saturday 26 June 2010] [02:48:25] <zedas>  hehe hell i could just write a zmq_epoll and zmq_kqueue and leave it to the developer :-)
| [Saturday 26 June 2010] [02:48:38] <zedas>  but that'd be me, so i want zmq_poll to do whatever works best
| [Saturday 26 June 2010] [02:48:40] <sustrik>    yes, that's the option
| [Saturday 26 June 2010] [02:48:59] <sustrik>    the obvious problem is that there's no POSIX standard fro epoll-style polling
| [Saturday 26 June 2010] [02:49:24] <sustrik>    kqueue seems to be most neat, but still it's hard to decide on actual API
| [Saturday 26 June 2010] [02:49:41] <sustrik>    try posting your new API to the mailing list first to see what others have to say about it
| [Saturday 26 June 2010] [02:51:48] <zedas>  i'll give it a shot when i get to that part.  right after i find out why it craps out at 1024 fds
| [Saturday 26 June 2010] [02:52:04] <sustrik>    ack
| [Saturday 26 June 2010] [02:52:11] <zedas>  with poll it shouldn't do that but it does.  which means people will perf test it and then bitch that i'm using select
| [Saturday 26 June 2010] [02:52:54] <zedas>  well not an issue now, just gonna drive me crazy later :-)
| [Saturday 26 June 2010] [02:53:10] <sustrik>    ok, good luck for now
| [Saturday 26 June 2010] [02:55:20] <zedas>  yeah so far it's working great.
| [Saturday 26 June 2010] [02:55:43] <zedas>  i've got the tasks working flawlessly with sockets or 0mq
| [Saturday 26 June 2010] [02:58:06] <sustrik>    glad to hear that!
| 
| *** Logfile started
| *** on Mon Jul 12 14:57:25 2010
| 
| [Tuesday 01 June 2010] [00:51:40] <jugg>    s.bind("tcp://localhost:15555"); fails with "no such device"  However, s.bind("tcp://127.0.0.1:15555"); works fine, as does s.bind("tcp://lo:15555");
| [Tuesday 01 June 2010] [00:51:40] <jugg>    whereas s.connect("tcp://localhost:15555"); and s.connect("tcp://127.0.0.1:15555"); both work fine, but s.connect("tcp://lo:15555"); fails with "Invalid argument".
| [Tuesday 01 June 2010] [00:53:34] <jugg>    any combination of the successful bind/connect allow messages to flow just fine. (eg. bind - lo, connect - localhost)
| [Tuesday 01 June 2010] [00:54:41] <jugg>    any idea why binding 'localhost' fails, and connecting 'lo' fails?
| [Tuesday 01 June 2010] [03:38:33] <sustrik> jugg: you can bind only to local NIC
| [Tuesday 01 June 2010] [03:38:47] <sustrik> "localhost" is a hostname not NIC name
| [Tuesday 01 June 2010] [03:38:50] <sustrik> use "lo"
| [Tuesday 01 June 2010] [03:38:56] <sustrik> "eth0" and alike
| [Tuesday 01 June 2010] [03:39:22] <sustrik> (on linux)
| [Tuesday 01 June 2010] [03:53:00] <jugg>    sustrik: it must also accept local ip addresses.  And since the zmq layer already can resolve hostnames, it would be a convience to have it do so here as well.
| [Tuesday 01 June 2010] [03:55:01] <sustrik> the problem is that there's no hint to distinguish between nic names and hostnames
| [Tuesday 01 June 2010] [03:57:19] <jugg>    a simple if fail then try scheme could be used
| [Tuesday 01 June 2010] [03:58:12] <sustrik> yup, we've thought of that
| [Tuesday 01 June 2010] [03:58:39] <sustrik> presumably, resolve nic name first, hostname if it fails
| [Tuesday 01 June 2010] [03:59:06] <sustrik> obviously, it would mean that nic name can then overshadow a remote host
| [Tuesday 01 June 2010] [03:59:26] <jugg>    yes, although I might think to have a hardcoded check for 'localhost' first.
| [Tuesday 01 June 2010] [04:00:10] <sustrik> it's up to OS to resolve names, 0mq should not mess with that imho
| [Tuesday 01 June 2010] [04:02:07] <jugg>    certainly.  I was saying that if the device is 'localhost' then just skip nic name lookup (being that localhost is quite the common case).
| [Tuesday 01 June 2010] [04:03:18] <sustrik> my point was that "localhost" is just a name a should thus be resolved by OS
| [Tuesday 01 June 2010] [04:08:26] <jugg>    anyway, I assume that trying to connect to a nic name is nonsensical, which is why s.connect("tcp://lo:15555") fails?  It certainly is an odd error message however "invalid arguement", now that I've played with it "invalid argument" is the error message for any bogus hostname.  Not very helpful.
| [Tuesday 01 June 2010] [04:18:52] <jugg>    all of this mucking around is because I got off track while trying to debug odd observed behavior with zmq resulting from the socket type and transport combination.  eg pub/sub works fine with tcp:, but often fails with ipc:
| [Tuesday 01 June 2010] [04:19:51] <jugg>    I haven't isolated it yet, so I can't give a useful bug report (if any).
| [Tuesday 01 June 2010] [04:27:15] <sustrik> interesting
| [Tuesday 01 June 2010] [04:27:26] <sustrik> the code is same for tcp and ipc
| [Tuesday 01 June 2010] [04:27:39] <sustrik> can you at least say what kind of error are you seeing?
| [Tuesday 01 June 2010] [04:38:40] <jugg>    well, it could still yet be very much user error, but it appeared that subscriptions were not taking affect, and in several instances, I would get an error about the ipc: address having some problem (the exact error messages are out of my scrollback).  Yet, those error message seemed to go away if I changed the socket type.  And when using tcp: I've never seen either of those issues.
| [Tuesday 01 June 2010] [04:49:00] <sustrik> ok, i see
| [Tuesday 01 June 2010] [04:49:10] <sustrik> if it ever happens again please do report the problem
| [Tuesday 01 June 2010] [05:39:19] <jugg>    hmm, I thought publications got into the bit bucket if the endpont doesn't exist.  This is the case if the publisher is the one that binds the socket, but if it is the subscriber that binds the socket, then the publisher queues up all of its messages.  Is this expected?  And if so, why the change in behavior depending on which socket type binds/connects?
| [Tuesday 01 June 2010] [05:53:32] <sustrik> PUB/SUB messaging pattern is like a radio tranmission; if you are not listining to the broadcast you won't be able to catch up later on
| [Tuesday 01 June 2010] [07:39:38] <jugg>    yes, so why is the publisher queuing up the messages?
| [Tuesday 01 June 2010] [07:46:04] <sustrik> jugg: the queueing is built in so that messages are not dropped all the time because of random traffic peaks
| [Tuesday 01 June 2010] [07:46:20] <sustrik> if you set HWM socket option on your publisher
| [Tuesday 01 June 2010] [07:46:26] <sustrik> you'll limit the size of the queue
| [Tuesday 01 June 2010] [07:46:50] <sustrik> once the max number of messages in the queue is reached, publisher will start dropping them
| [Tuesday 01 June 2010] [07:47:25] <jugg>    yes, so why does this queuing only occur if the publisher connects?  It doesn't occur if the publisher binds.
| [Tuesday 01 June 2010] [07:48:16] <sustrik> when you bind, there's no queue created at that moment
| [Tuesday 01 June 2010] [07:48:30] <sustrik> you don't know how many peers will connect in the future
| [Tuesday 01 June 2010] [07:48:44] <sustrik> and thus you cannot create appropriate number of queues
| [Tuesday 01 June 2010] [07:49:07] <sustrik> when you connect you need only one queue, so it's created immediately
| [Tuesday 01 June 2010] [07:49:44] <sustrik> the code can be changed so that 'connect' queue is created only when connecting to the peer succeeds
| [Tuesday 01 June 2010] [07:50:03] <sustrik> but i am not sure what advantage we would get from that
| [Tuesday 01 June 2010] [07:50:10] <jugg>    consistency?
| [Tuesday 01 June 2010] [07:50:18] <sustrik> sure
| [Tuesday 01 June 2010] [07:50:24] <jugg>    otherwise this needs documented.
| [Tuesday 01 June 2010] [07:50:42] <sustrik> well, the documentation is "messages can be dropped"
| [Tuesday 01 June 2010] [07:50:59] <sustrik> when exactly they are dropped is implemetation detail
| [Tuesday 01 June 2010] [07:51:09] <jugg>    eh
| [Tuesday 01 June 2010] [09:41:10] <jugg>    in a pub/sub configuration, it would appear that the only way to have multiple subscribers is if the pub socket is the one that binds the endpoint.  In the case where a subscriber binds the endpoint, and the publisher connects, then other subscribers that connect do not receive publications.  I'd expect that either all connecting subscribers receive the publications, or that it is not possible for other subscribers to successfully connect.
| [Tuesday 01 June 2010] [09:43:45] <sustrik> jugg: sorry, i've missed the point
| [Tuesday 01 June 2010] [09:43:55] <sustrik> can you say it in more simple way
| [Tuesday 01 June 2010] [09:43:57] <sustrik> ?
| [Tuesday 01 June 2010] [09:44:24] <jugg>    a subscriber binds an endpoint
| [Tuesday 01 June 2010] [09:44:29] <jugg>    a publisher connects to the endpoint
| [Tuesday 01 June 2010] [09:44:32] <jugg>    everything is happy
| [Tuesday 01 June 2010] [09:44:38] <jugg>    more subscribers connect to the endpoint
| [Tuesday 01 June 2010] [09:44:48] <jugg>    these subscribers do not receive publications
| [Tuesday 01 June 2010] [09:45:10] <sustrik> subscribers connect to the subscriber endpoint?
| [Tuesday 01 June 2010] [09:45:17] <jugg>    yes
| [Tuesday 01 June 2010] [09:45:34] <sustrik> SUB socket is not compatible with another SUB socket
| [Tuesday 01 June 2010] [09:45:41] <sustrik> see zmq_socket(3)
| [Tuesday 01 June 2010] [09:45:54] <sustrik> SUB must speak to PUB and vice versa
| [Tuesday 01 June 2010] [09:46:19] <sustrik> what are you trying to do?
| [Tuesday 01 June 2010] [09:46:57] <jugg>    which is why I'd expect the subsequent connects to fail.
| [Tuesday 01 June 2010] [09:47:12] <sustrik> yes, they should
| [Tuesday 01 June 2010] [09:47:19] <sustrik> but the connect is async
| [Tuesday 01 June 2010] [09:47:28] <sustrik> so the error should be delivered asynchronously
| [Tuesday 01 June 2010] [09:47:36] <sustrik> we need an error queue for that
| [Tuesday 01 June 2010] [09:47:44] <sustrik> TODO
| [Tuesday 01 June 2010] [09:47:54] <jugg>    I see
| [Tuesday 01 June 2010] [09:55:19] <jugg>    So if the subscriber binds the endpoint, it is essentially stating that this is a private subscription, multiple publishers can publish to this private subscription.  Multiple subscribe message filters may be used by the subscriber if desired.
| [Tuesday 01 June 2010] [09:56:03] <jugg>    If a publisher binds an endpoint, then many subscribers may connect to this endpoint.  But a subscriber can only receive messages from a single publisher in this case.
| [Tuesday 01 June 2010] [09:56:22] <sustrik> i would say it's symmetric
| [Tuesday 01 June 2010] [09:56:35] <sustrik> consider you can connect the same socket multiple times
| [Tuesday 01 June 2010] [09:56:43] <sustrik> so, for example:
| [Tuesday 01 June 2010] [09:56:59] <sustrik> pub.bind (A)
| [Tuesday 01 June 2010] [09:57:08] <sustrik> sub1.connect (A)
| [Tuesday 01 June 2010] [09:57:15] <sustrik> sub2.connect (A)
| [Tuesday 01 June 2010] [09:57:20] <sustrik> is equivalent to:
| [Tuesday 01 June 2010] [09:57:26] <sustrik> sub1.bind (A)
| [Tuesday 01 June 2010] [09:57:30] <sustrik> sub2.bind (B)
| [Tuesday 01 June 2010] [09:57:33] <sustrik> pub.connect (A)
| [Tuesday 01 June 2010] [09:57:38] <sustrik> pub.connect (B)
| [Tuesday 01 June 2010] [09:58:10] <sustrik> resulting connection diagram looks the same in both cases
| [Tuesday 01 June 2010] [10:00:40] <jugg>    clear enough, thanks.
| [Tuesday 01 June 2010] [10:02:49] <sustrik> you are welcome
| [Tuesday 01 June 2010] [11:56:25] <jugg>    quoting http://www.zeromq.org/blog:road "we designed a minimalist wire protocol which can be described in a couple of paragraphs"  Are those paragraphs available?
| [Tuesday 01 June 2010] [12:01:20] Nick  ivan`` is now known as ivan.
| [Tuesday 01 June 2010] [14:58:27] <cremes>  is it expected behavior that zmq_term() has an assertion failure unless all sockets in the context are closed first?
| [Tuesday 01 June 2010] [14:59:24] <cremes>  this is against 2.0.6 release
| [Tuesday 01 June 2010] [15:44:00] <mato>    cremes: no, that would be a bug
| [Tuesday 01 June 2010] [15:44:27] <mato>    cremes: however, that code has changed on master, so i suggest you re-test there
| [Tuesday 01 June 2010] [15:44:36] <cremes>  all right... i'll test on master in a bit
| [Tuesday 01 June 2010] [15:50:00] <CIA-17>  zeromq2: 03Martin Lucina 07master * r74a03df 10/ (AUTHORS foreign/xmlParser/xmlParser.cpp): Merge branch 'master' of github.com:sustrik/zeromq2 - http://bit.ly/9cipXX
| [Tuesday 01 June 2010] [16:20:08] <mato>    cremes: since you asked about zmq_term()... I'm updating the docs for 2.0.7.
| [Tuesday 01 June 2010] [16:20:21] <mato>    cremes: could you comment if the following is clear: ?
| [Tuesday 01 June 2010] [16:20:28] <mato>           The zmq_term() function terminates the 0MQ context context.
| [Tuesday 01 June 2010] [16:20:28] <mato>           If there are no longer any sockets open within context at the time zmq_term() is
| [Tuesday 01 June 2010] [16:20:31] <mato>           called then context shall be shut down and all associated resources shall be
| [Tuesday 01 June 2010] [16:20:33] <cremes>  ok; i'm compiling master now so i can see if i am still getting on behavior
| [Tuesday 01 June 2010] [16:20:34] <mato>           released immediately.
| [Tuesday 01 June 2010] [16:20:37] <mato>           Otherwise, the following applies:
| [Tuesday 01 June 2010] [16:20:39] <mato>              The zmq_term() function shall return immediately.
| [Tuesday 01 June 2010] [16:20:42] <mato>              Any blocking operations currently in progress on sockets open within context
| [Tuesday 01 June 2010] [16:20:45] <mato>               shall return immediately with an error code of ETERM.
| [Tuesday 01 June 2010] [16:20:47] <mato>              With the exception of zmq_close(), any further operations on sockets open
| [Tuesday 01 June 2010] [16:20:50] <mato>               within context shall fail with an error code of ETERM.
| [Tuesday 01 June 2010] [16:20:53] <mato>              The actual shutdown of context, and release of any associated resources,
| [Tuesday 01 June 2010] [16:20:56] <mato>               shall be delayed until the last socket within it is closed with zmq_close().
| [Tuesday 01 June 2010] [16:21:11] <mato>    cremes: thx, but read the above, since that's the behaviour on master
| [Tuesday 01 June 2010] [16:21:30] <mato>    cremes: is my description clear enough?
| [Tuesday 01 June 2010] [16:21:38] <cremes>  it makes perfect sense; it is very clear
| [Tuesday 01 June 2010] [16:21:42] <mato>    great, thanks
| [Tuesday 01 June 2010] [16:23:15] <CIA-17>  zeromq2: 03Martin Lucina 07master * r8ba1d3c 10/ (6 files): Documentation: zmq_term() and ETERM for 2.0.7 - http://bit.ly/cd4hIx
| [Tuesday 01 June 2010] [16:23:16] <CIA-17>  zeromq2: 03Martin Lucina 07master * r9d00d30 10/ doc/zmq_init.txt : Documentation: zmq_init() API changes for 2.0.7 - http://bit.ly/bhbjsl
| [Tuesday 01 June 2010] [16:28:09] <versificateur>   hello everyone!
| [Tuesday 01 June 2010] [16:28:54] <versificateur>   i'm back to ask for some help aagin.. :)
| [Tuesday 01 June 2010] [16:30:21] <versificateur>   i've some difficulties to run (compile) the c++ server code i wrote based on zmq blog examples
| [Tuesday 01 June 2010] [16:31:24] <versificateur>   I got the following error: Package libzmq was not found in the pkg-config search path.
| [Tuesday 01 June 2010] [16:32:28] <cremes>  versificateur: please pastie the whole error including the command you used
| [Tuesday 01 June 2010] [16:34:55] <versificateur>   g++ `pkg-config --libs --cflags libzmq` -o server server.cpp Package libzmq was not found in the pkg-config search path. Perhaps you should add the directory containing `libzmq.pc' to the PKG_CONFIG_PATH environment variable 
| [Tuesday 01 June 2010] [16:35:00] <versificateur>   oops
| [Tuesday 01 June 2010] [16:35:18] <versificateur>    g++ `pkg-config --libs --cflags libzmq` -o server server.cpp
| [Tuesday 01 June 2010] [16:35:29] <versificateur>   Package libzmq was not found in the pkg-config search path.
| [Tuesday 01 June 2010] [16:35:38] <versificateur>   Perhaps you should add the directory containing `libzmq.pc'
| [Tuesday 01 June 2010] [16:35:48] <versificateur>   to the PKG_CONFIG_PATH environment variable
| [Tuesday 01 June 2010] [16:37:06] <versificateur>   but I try locate and found the required at pkg-config
| [Tuesday 01 June 2010] [16:37:12] <versificateur>   locate libzmq.pc
| [Tuesday 01 June 2010] [16:41:19] <sbeaulois>   hi 
| [Tuesday 01 June 2010] [16:42:06] <sbeaulois>   i tried to compile zmq on RHEL but  i have some errors when i tried ./configure  configure: error: cannot link with -luuid, install uuid-dev
| [Tuesday 01 June 2010] [16:42:25] <sbeaulois>   i cann't fin uuid-dev for RHEL
| [Tuesday 01 June 2010] [16:43:00] <mato>    sbeaulois: I think it's called uuid-devel on RH
| [Tuesday 01 June 2010] [16:43:23] <sbeaulois>   i have install uuid-devel but i have the same error 
| [Tuesday 01 June 2010] [16:46:49] <mato>    sbeaulois: which version of RHEL?
| [Tuesday 01 June 2010] [16:47:58] <sbeaulois>   i use RHEL 5 
| [Tuesday 01 June 2010] [16:48:50] <mato>    don't know, sorry, I don't have that here... you need to install whichever package provides libuuid.a
| [Tuesday 01 June 2010] [16:49:12] <sbeaulois>   fine 
| [Tuesday 01 June 2010] [16:49:14] <versificateur>   i resolve my problem by exporting the PKG_CONFIG_PATH
| [Tuesday 01 June 2010] [16:49:47] <versificateur>   it compile fine
| [Tuesday 01 June 2010] [16:50:26] <versificateur>   but when i run the binarie i have this error
| [Tuesday 01 June 2010] [16:50:33] <versificateur>   ./server: error while loading shared libraries: libzmq.so.0: cannot open shared object file: No such file or directory
| [Tuesday 01 June 2010] [16:51:31] <versificateur>   it's similar to what an old issue i met with python bindings installation
| [Tuesday 01 June 2010] [16:51:49] <versificateur>   is anyone experienced this before??
| [Tuesday 01 June 2010] [16:52:17] <mato>    versificateur: you need to run ldconfig as root
| [Tuesday 01 June 2010] [16:52:18] <cremes>  versificateur: your compile line is wrong; don't use "libzmq" just use "zmq"
| [Tuesday 01 June 2010] [16:52:36] <cremes>  or what mato said :)
| [Tuesday 01 June 2010] [16:53:43] <versificateur>   mato: before or after compile??
| [Tuesday 01 June 2010] [16:54:12] <mato>    versificateur: only once, after doing make install for zmq
| [Tuesday 01 June 2010] [16:54:49] <versificateur>   okay i'm trying
| [Tuesday 01 June 2010] [16:56:27] <versificateur>   cremes: i don't think the zmq.cp exist
| [Tuesday 01 June 2010] [16:56:41] <mato>    versificateur: no, it's libzmq.pc
| [Tuesday 01 June 2010] [16:57:16] <versificateur>   so my compile line was right??
| [Tuesday 01 June 2010] [17:00:24] <mato>    yes
| [Tuesday 01 June 2010] [17:02:49] <versificateur>   i retried after ldconfig but still have the same issue
| [Tuesday 01 June 2010] [17:03:18] <mato>    you did do a make install after building zeromq, yes?
| [Tuesday 01 June 2010] [17:04:19] <versificateur>   after running ./configure make make install?
| [Tuesday 01 June 2010] [17:04:23] <versificateur>   yes
| [Tuesday 01 June 2010] [17:04:48] <mato>    don't know, then your system doesn't have /usr/local/lib in it's /etc/ld.so.conf or equivalent
| [Tuesday 01 June 2010] [17:06:20] <versificateur>   yes i think so
| [Tuesday 01 June 2010] [17:10:00] <versificateur>   i'll try by adding a zmq-64.conf with /usr/local/lib 
| [Tuesday 01 June 2010] [17:10:19] <versificateur>   to /etc/ld.so.conf.d
| [Tuesday 01 June 2010] [17:10:25] <versificateur>   directory
| [Tuesday 01 June 2010] [17:10:51] <mato>    yup, don't forget to rerun ldconfig when you make any changes
| [Tuesday 01 June 2010] [17:17:31] <versificateur>   mato: thanks!!! it works
| [Tuesday 01 June 2010] [17:18:11] <versificateur>   running netstat -l shoow me the zeromq port listening
| [Tuesday 01 June 2010] [17:18:30] <versificateur>   now i can test my code...
| [Tuesday 01 June 2010] [17:18:48] <versificateur>   thanks again :)
| [Tuesday 01 June 2010] [17:22:07] <mato>    np
| [Tuesday 01 June 2010] [17:25:22] <sbeaulois>   hi 
| [Tuesday 01 June 2010] [17:25:42] <sbeaulois>   i found solution of my problem 
| [Tuesday 01 June 2010] [17:26:45] <sbeaulois>   libuuid-devel is within of e2fsprogs package
| [Tuesday 01 June 2010] [18:04:25] <sbeaulois>   ne help 
| [Tuesday 01 June 2010] [18:04:30] <sbeaulois>   need help 
| [Tuesday 01 June 2010] [18:04:52] <sbeaulois>   try to compil my java script but   i have some error 
| [Tuesday 01 June 2010] [18:04:56] <sbeaulois>   java.lang.UnsatisfiedLinkError: /usr/local/lib/libjzmq.so.0.0.0: libzmq.so.0
| [Tuesday 01 June 2010] [18:05:02] <sbeaulois>   not found
| [Tuesday 01 June 2010] [18:05:40] <sbeaulois>   java.lang.UnsatisfiedLinkError: /usr/local/lib/libjzmq.so.0.0.0: libzmq.so.0: cannot open shared object file: No such file or directory
| 
| *** Logfile started
| *** on Tue Jun 1 20:38:41 2010
| 
| [Tuesday 01 June 2010] [20:38:41] Topic The channel topic is "Welcome!".
| [Tuesday 01 June 2010] [20:38:41] Topic The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Tuesday 01 June 2010] [20:38:47] Mode  Channel modes: no messages from outside, topic protection
| [Tuesday 01 June 2010] [20:38:47] Created   This channel was created on 2010-02-05 10:44.
| [Wednesday 02 June 2010] [04:00:18] <sjampoo>   morning, is the pollset and waitfd as discussed on the mailing list going to be part of 2.0.7 or is this something which will be implemented somewhere in the future? I would love to have an estimate on that, ie a month / a year. 
| [Wednesday 02 June 2010] [04:06:30] Part    zedas has left this channel.
| [Wednesday 02 June 2010] [04:15:10] <sustrik>   jugg: yes, see zmq_tcp(7)
| [Wednesday 02 June 2010] [04:21:07] <jugg>  thanks
| [Wednesday 02 June 2010] [04:22:39] <sustrik>   sjampoo: i'll add it after 2.0.7 release
| [Wednesday 02 June 2010] [04:22:54] <sustrik>   however, the API would still be unstable
| [Wednesday 02 June 2010] [04:23:13] <sustrik>   presumably, it can be done in better way
| [Wednesday 02 June 2010] [04:23:27] <sustrik>   everything depends on performance impact
| [Wednesday 02 June 2010] [04:31:30]      * sjampoo nods
| [Wednesday 02 June 2010] [07:43:41] <mato>  sustrik: are you there?
| [Wednesday 02 June 2010] [08:03:18] <sustrik>   mato: hi
| [Wednesday 02 June 2010] [08:03:38] <mato>  sustrik: you wrote that ZMQ_HWM is per-peer, what happens where there are no peers?
| [Wednesday 02 June 2010] [08:04:06] <sustrik>   exceptional behaviour is triggered
| [Wednesday 02 June 2010] [08:04:14] <sustrik>   drop/block
| [Wednesday 02 June 2010] [08:04:37] <mato>  yes, but when?
| [Wednesday 02 June 2010] [08:04:43] <sustrik>   on send
| [Wednesday 02 June 2010] [08:05:21] <mato>  ok, but immediately, right?
| [Wednesday 02 June 2010] [08:05:44] <sustrik>   right
| [Wednesday 02 June 2010] [08:53:48] <mato>  sustrik: the problem i'm having is that it's impossible to explain flow control accurately without dealing with the *actual* peers connected on a socket
| [Wednesday 02 June 2010] [08:54:06] <mato>  sustrik: this is further complicated by the fact that the term "connect" is overloaded
| [Wednesday 02 June 2010] [08:55:41] <mato>  sustrik: for example, it's really hard to explain coherently the state when a socket "has no peers"
| [Wednesday 02 June 2010] [08:56:06] <mato>  sustrik: which means that it has been connected with zmq_connect(), but no peers exist
| [Wednesday 02 June 2010] [09:05:12] <sustrik>   mato: don't even try to explain that
| [Wednesday 02 June 2010] [09:05:21] <sustrik>   what has to be documented is
| [Wednesday 02 June 2010] [09:05:37] <sustrik>   1. dealing with overloads (drop vs. block)
| [Wednesday 02 June 2010] [09:06:06] <sustrik>   2. HWM socket option - this is used to prevent out-of-memory rather than for flow control
| [Wednesday 02 June 2010] [09:07:20] <mato>  sustrik: it's impossible to explain accurately what HWM *means* without dealing with the existence of the individual message queues associated with a socket!
| [Wednesday 02 June 2010] [09:07:37] <mato>  same for drop/blocking behaviour
| [Wednesday 02 June 2010] [09:08:01] <sustrik>   mato: yes
| [Wednesday 02 June 2010] [09:08:16] <mato>  yes?
| [Wednesday 02 June 2010] [09:08:53] <sustrik>   HWM is maximal number of messages destined for one peer that the socket may hold 
| [Wednesday 02 June 2010] [09:09:07] <sustrik>   the connection doesn't have to exist
| [Wednesday 02 June 2010] [09:09:16] <sustrik>   even the peer may not be running at the moment
| [Wednesday 02 June 2010] [09:10:11] <mato>  the problem is "the connection" != "the socket connection"
| [Wednesday 02 June 2010] [09:10:39] <sustrik>   i prefer to say "there's no concept of connections in 0mq"
| [Wednesday 02 June 2010] [09:11:02] <mato>  then we need to rename the concept of connections to something else :-)
| [Wednesday 02 June 2010] [09:11:16] <sustrik>   what do you mean by connection?
| [Wednesday 02 June 2010] [09:11:54] <mato>  sctp got around this by using the term "association" IIRC
| [Wednesday 02 June 2010] [09:12:40] <mato>  sustrik: what i mean by connection is the "something" created by zmq_connect() or zmq_bind() :-)
| [Wednesday 02 June 2010] [09:13:05] <sustrik>   bind creates nothing, just an endpoint
| [Wednesday 02 June 2010] [09:13:07] <sustrik>   a name
| [Wednesday 02 June 2010] [09:13:20] <sustrik>   do you mean message pipe/queue?
| [Wednesday 02 June 2010] [09:13:22] <mato>  and connect? does what? :-)
| [Wednesday 02 June 2010] [09:13:44] <sustrik>   attaches to endpoint + creates a queue
| [Wednesday 02 June 2010] [09:14:13] <sustrik>   bind just creates the endpoint, creation of associated queue is async
| [Wednesday 02 June 2010] [09:14:18] <sustrik>   queues*
| [Wednesday 02 June 2010] [09:14:41] <sustrik>   but that's invisible to user
| [Wednesday 02 June 2010] [09:14:51] <sustrik>   and - imo - should not be mentioned in documentation
| [Wednesday 02 June 2010] [09:14:58] <sustrik>   what user needs to know is:
| [Wednesday 02 June 2010] [09:15:11] <sustrik>   1. socket may spak to multiple peers
| [Wednesday 02 June 2010] [09:15:28] <sustrik>   2. socket has a routing algorithm
| [Wednesday 02 June 2010] [09:15:41] <sustrik>   (which decides which peer gets which message)
| [Wednesday 02 June 2010] [09:15:56] <sustrik>   3. HWM limits number of messages routed to particular peer
| [Wednesday 02 June 2010] [09:16:08] <sustrik>   messages in memory*
| [Wednesday 02 June 2010] [09:22:40] <mato>  see, with 1. the terminology problem kicks in again:
| [Wednesday 02 June 2010] [09:22:47] <mato>  current doc:
| [Wednesday 02 June 2010] [09:22:52] <mato>  A
| [Wednesday 02 June 2010] [09:22:52] <mato>  'ZMQ_REQ' socket may be connected to multiple peers; each request sent is
| [Wednesday 02 June 2010] [09:22:52] <mato>  load-balanced among all connected peers.
| [Wednesday 02 June 2010] [09:24:41] <sustrik>   well, what's the problem with that?
| [Wednesday 02 June 2010] [09:24:53] <sustrik>   "connected" word?
| [Wednesday 02 June 2010] [09:24:59] <mato>  i think so
| [Wednesday 02 June 2010] [09:25:00] <sustrik>   just drop it
| [Wednesday 02 June 2010] [09:25:17] <sustrik>   "load-balanced among all peers."
| [Wednesday 02 June 2010] [09:25:26] <sustrik>   that's more precise actually
| [Wednesday 02 June 2010] [09:37:10] <mato>  crap, i still don't know how to explain the relationship between socket <-> endpoints <-> queues <-> peers
| [Wednesday 02 June 2010] [09:40:21] <sustrik>   :)
| [Wednesday 02 June 2010] [09:40:26] <mato>  sustrik: let me try and put my problem another way
| [Wednesday 02 June 2010] [09:40:42] <mato>  you keep saying that "there are no connections", and that we should not talk about them in the documentation
| [Wednesday 02 June 2010] [09:41:05] <mato>  but the explanation of ZMQ_HWM is directly dependent on the individual connections to peers
| [Wednesday 02 June 2010] [09:41:18] <mato>  or at least the queues created by those connections
| [Wednesday 02 June 2010] [09:42:32] <sustrik>   there's a peer
| [Wednesday 02 June 2010] [09:42:44] <sustrik>   there's a queue associated with the peer
| [Wednesday 02 June 2010] [09:43:01] <sustrik>   actual connection to the peer is invisible to the user
| [Wednesday 02 June 2010] [09:43:36] <mato>  so i do need to talk about the queues associated with a socket's peers
| [Wednesday 02 June 2010] [09:43:51] <sustrik>   what's wrong with the explanaition above:
| [Wednesday 02 June 2010] [09:43:57] <sustrik>   sustrik> 1. socket may spak to multiple peers
| [Wednesday 02 June 2010] [09:43:57] <sustrik>   <sustrik> 2. socket has a routing algorithm
| [Wednesday 02 June 2010] [09:43:57] <sustrik>   <sustrik> (which decides which peer gets which message)
| [Wednesday 02 June 2010] [09:43:57] <sustrik>   <sustrik> 3. HWM limits number of messages routed to particular peer
| [Wednesday 02 June 2010] [09:44:10] <mato>  it's not an explanation
| [Wednesday 02 June 2010] [09:44:14] <sustrik>   ?
| [Wednesday 02 June 2010] [09:45:24] <mato>  it needs to be uncompressed :-)
| [Wednesday 02 June 2010] [09:47:06] <sustrik>   ah, ok
| [Wednesday 02 June 2010] [09:47:22] <mato>  anyway, i'm trying
| [Wednesday 02 June 2010] [09:47:50] <mato>  maybe it'd help if you were sitting next to me ...
| [Wednesday 02 June 2010] [09:51:39] <sustrik>   hm
| [Wednesday 02 June 2010] [09:51:46] <sustrik>   let's give it one more try
| [Wednesday 02 June 2010] [09:52:22] <sustrik>   socket may speak to multiple peers
| [Wednesday 02 June 2010] [09:52:23] <mato>  if we get it right you won't have to answer nearly as many emails :-)
| [Wednesday 02 June 2010] [09:52:36] <sustrik>   yes, i know
| [Wednesday 02 June 2010] [09:52:47] <sustrik>   actually, it's not even peers
| [Wednesday 02 June 2010] [09:53:12] <sustrik>   because the peer may not even be running at the moment
| [Wednesday 02 June 2010] [09:53:18] <mato>  see, there is a concept missing
| [Wednesday 02 June 2010] [09:53:28] <sustrik>   what about endpoint
| [Wednesday 02 June 2010] [09:53:34] <sustrik>   we use that. no?
| [Wednesday 02 June 2010] [09:53:56] <sustrik>   so, there are endpoints on the network
| [Wednesday 02 June 2010] [09:53:56] <mato>  yes, but at the moment we talk about connecting to endpoints, which overloads the word connect
| [Wednesday 02 June 2010] [09:54:10] <sustrik>   they are pure virtual entities
| [Wednesday 02 June 2010] [09:54:17] <sustrik>   such as multicast group
| [Wednesday 02 June 2010] [09:54:34] <sustrik>   there's no real thing corresponding to multicast group, right?
| [Wednesday 02 June 2010] [09:54:45] <mato>  not really
| [Wednesday 02 June 2010] [09:54:48] <sustrik>   it's just a name
| [Wednesday 02 June 2010] [09:54:55] <sustrik>   ideal concept
| [Wednesday 02 June 2010] [09:55:07] <sustrik>   the 0MQ endpoint is the same kind of thing
| [Wednesday 02 June 2010] [09:55:25] <sustrik>   now, a socket can "implement" the endpoint
| [Wednesday 02 June 2010] [09:55:29] <sustrik>   by binding to it
| [Wednesday 02 June 2010] [09:56:10] <sustrik>   another socket may announce it's desire to speak to a particular endpoint
| [Wednesday 02 June 2010] [09:56:23] <sustrik>   (same thing as joining a multicast group)
| [Wednesday 02 June 2010] [09:56:29] <sustrik>   that's "connect"
| [Wednesday 02 June 2010] [09:57:18] <sustrik>   the whole point is that there may be no application associated with particular endpoint
| [Wednesday 02 June 2010] [09:57:30] <sustrik>   endpoint = name
| [Wednesday 02 June 2010] [09:58:16] <sustrik>   each socket is speaking to multiple peers
| [Wednesday 02 June 2010] [09:58:32] <sustrik>   it does so either by binding to an endpoint or connecting to an endpoint
| [Wednesday 02 June 2010] [09:58:34] <mato>  "speaking to" is not a technical term :-)
| [Wednesday 02 June 2010] [09:58:39] <sustrik>   communicating
| [Wednesday 02 June 2010] [10:00:00] <mato>  how does one refer to a peer a socket is communicating with?
| [Wednesday 02 June 2010] [10:00:18] <sustrik>   peer?
| [Wednesday 02 June 2010] [10:01:22] <sustrik>   anyway, the problem is that peers may not be alive, online and reading messages
| [Wednesday 02 June 2010] [10:01:59] <sustrik>   in such case we may limit number of messages in memory destined for a single peer by setting HWM
| [Wednesday 02 June 2010] [10:02:53] <sustrik>   i know, the whole explanation is creaky, but at least it gives some intuitive insight
| [Wednesday 02 June 2010] [10:03:52] <mato>  creaky, yes :-(
| [Wednesday 02 June 2010] [10:07:57] <mato>  sustrik: so you don't want to talk about message queues associated with sockets at all?
| [Wednesday 02 June 2010] [10:08:14] <sustrik>   do we need to?
| [Wednesday 02 June 2010] [10:08:25] <sustrik>   i am a fan of occam's razor
| [Wednesday 02 June 2010] [10:09:18] <mato>  ok, let me try and see if i can explain everything by removing all references to "message queue associated with socket ..." :-)
| [Wednesday 02 June 2010] [10:09:34] <sustrik>   ;)
| [Wednesday 02 June 2010] [10:29:51] <mato>  sustrik: ok, read this:
| [Wednesday 02 June 2010] [10:30:03] <mato>  The 'ZMQ_HWM' option shall set the high water mark for the specified 'socket'.
| [Wednesday 02 June 2010] [10:30:03] <mato>  The high water mark is a hard limit on the maximum number of outstanding
| [Wednesday 02 June 2010] [10:30:03] <mato>  messages 0MQ shall queue in memory for any single peer that the specified
| [Wednesday 02 June 2010] [10:30:03] <mato>  'socket' is communicating with.
| [Wednesday 02 June 2010] [10:30:03] <mato>  If this limit has been reached for all peers then the socket shall enter an
| [Wednesday 02 June 2010] [10:30:06] <mato>  exceptional state, and depending on the socket type 0MQ shall take appropriate
| [Wednesday 02 June 2010] [10:30:08] <mato>  action such as blocking or dropping newly sent messages; refer to
| [Wednesday 02 June 2010] [10:30:11] <mato>  linkzmq:zmq_socket[3] for details. The exceptional state shall persist until
| [Wednesday 02 June 2010] [10:30:13] <mato>  the number of outstanding messages for at least one peer falls below the low
| [Wednesday 02 June 2010] [10:30:16] <mato>  water mark; the low water mark shall be computed automatically by 0MQ.
| [Wednesday 02 June 2010] [10:30:29] <mato>  avoids using the term "connected to" anywhere
| [Wednesday 02 June 2010] [10:30:35] <mato>  or mentioning message queues
| [Wednesday 02 June 2010] [10:31:02] <mato>  i can even change "shall queue in memory" to "shall hold in memory" if queue is a no-no :-)
| [Wednesday 02 June 2010] [10:31:22] <sustrik>   doesn't matter
| [Wednesday 02 June 2010] [10:31:24] <mato>  sustrik: further, then related to this, the following paragraph for ZMQ_REQ:
| [Wednesday 02 June 2010] [10:31:30] <mato>  in zmq_socket(3)
| [Wednesday 02 June 2010] [10:31:31] <sustrik>   the problem is that it's not true
| [Wednesday 02 June 2010] [10:31:43] <mato>  what is not true?
| [Wednesday 02 June 2010] [10:32:10] <sustrik>   the part about the exceptional state
| [Wednesday 02 June 2010] [10:32:23] <sustrik>   what you've written applies to sat REQ/REP
| [Wednesday 02 June 2010] [10:32:28] <sustrik>   doesn't apply to PUB/SUB
| [Wednesday 02 June 2010] [10:32:37] <mato>  hmm, crap, ok
| [Wednesday 02 June 2010] [10:32:42] <sustrik>   :)
| [Wednesday 02 June 2010] [10:32:58] <sustrik>   try to express it in a simple manner
| [Wednesday 02 June 2010] [10:33:08] <mato>  so how about we keep the 1st paragraph only?
| [Wednesday 02 June 2010] [10:33:15] <mato>  and then refer to the individual socket types?
| [Wednesday 02 June 2010] [10:33:26] <sustrik>   yes
| [Wednesday 02 June 2010] [10:33:26] <mato>  1st paragraph being this bit:
| [Wednesday 02 June 2010] [10:33:30] <mato>  The 'ZMQ_HWM' option shall set the high water mark for the specified 'socket'.
| [Wednesday 02 June 2010] [10:33:30] <mato>  The high water mark is a hard limit on the maximum number of outstanding
| [Wednesday 02 June 2010] [10:33:30] <mato>  messages 0MQ shall queue in memory for any single peer that the specified
| [Wednesday 02 June 2010] [10:33:30] <mato>  'socket' is communicating with.
| [Wednesday 02 June 2010] [10:33:34] <sustrik>   yes
| [Wednesday 02 June 2010] [10:33:48] <mato>  ok, so then the relevant paragraph for REQ sockets:
| [Wednesday 02 June 2010] [10:33:54] <mato>  When a 'ZMQ_REQ' socket enters an exceptional state due to having reached the
| [Wednesday 02 June 2010] [10:33:54] <mato>  high water mark for all peers, or if there are no peers at all, then any
| [Wednesday 02 June 2010] [10:33:54] <mato>  _zmq_send()_ operations on the socket shall block until the exceptional state
| [Wednesday 02 June 2010] [10:33:54] <mato>  ends or at least one peer is connected; messages are not discarded.
| [Wednesday 02 June 2010] [10:33:58] <mato>  makes sense?
| [Wednesday 02 June 2010] [10:34:07] <mato>  i still have a problem there with "at least one peer is connected"
| [Wednesday 02 June 2010] [10:34:29] <mato>  note the careful absence of "connecting" anywhere else :-)
| [Wednesday 02 June 2010] [10:35:40] <sustrik>   "until at least one peer becomes available for sending"
| [Wednesday 02 June 2010] [10:36:04] <mato>  do i want to talk about when exactly the exceptional state ends?
| [Wednesday 02 June 2010] [10:36:15] <mato>  or just be vague and mysterious?
| [Wednesday 02 June 2010] [10:36:20] <sustrik>   be vague
| [Wednesday 02 June 2010] [10:36:24] <sustrik>   it depends on lwm
| [Wednesday 02 June 2010] [10:36:29] <sustrik>   which is invisible
| [Wednesday 02 June 2010] [10:36:33] <mato>  :-(
| [Wednesday 02 June 2010] [10:36:48] <sustrik>   what's wrong with that?
| [Wednesday 02 June 2010] [10:36:56] <sustrik>   you have the same thing with TCP
| [Wednesday 02 June 2010] [10:37:02] <mato>  ok
| [Wednesday 02 June 2010] [10:37:03] <sustrik>   and you even don't realise it
| [Wednesday 02 June 2010] [10:38:53] <mato>  sustrik: can i use the following summary table for sockets:
| [Wednesday 02 June 2010] [10:38:58] <mato>  .Summary of ZMQ_REQ characteristics
| [Wednesday 02 June 2010] [10:38:59] <mato>  Compatible peer sockets:: 'ZMQ_REP'
| [Wednesday 02 June 2010] [10:38:59] <mato>  Direction:: Bidirectional
| [Wednesday 02 June 2010] [10:38:59] <mato>  Send/receive pattern:: Send, Receive, Send, Receive, ...
| [Wednesday 02 June 2010] [10:38:59] <mato>  Queuing strategy:: Load-balanced
| [Wednesday 02 June 2010] [10:39:01] <mato>  Flow control:: Block
| [Wednesday 02 June 2010] [10:39:38] <mato>  maybe queueing strategy should be "Routing strategy" ?
| [Wednesday 02 June 2010] [10:40:15] <mato>  and Flow control should be called something else, "ZMQ_HWM behaviour" ?
| [Wednesday 02 June 2010] [10:41:25] <lvh>   Is it just me, or did 0MQ involve a broker some time ago?
| [Wednesday 02 June 2010] [10:41:44] <lvh>   I'm seeing all this brokerless stuff and I don't get it.
| [Wednesday 02 June 2010] [10:41:55] <mato>  lvh: no, it never did... there was a zmq_locator in 1.x but that did something else
| [Wednesday 02 June 2010] [10:42:09] <mato>  sustrik: halo?
| [Wednesday 02 June 2010] [10:42:28] <sustrik>   mato: here i am
| [Wednesday 02 June 2010] [10:42:40] <mato>  sustrik: see above
| [Wednesday 02 June 2010] [10:42:44] <sustrik>   yes
| [Wednesday 02 June 2010] [10:42:55] <sustrik>   send/receive patter is kind of funny
| [Wednesday 02 June 2010] [10:43:00] <sustrik>   but i don't care
| [Wednesday 02 June 2010] [10:43:01] <mato>  brian suggested that
| [Wednesday 02 June 2010] [10:43:06] <sustrik>   it's ok
| [Wednesday 02 June 2010] [10:43:27] <mato>  and the others?
| [Wednesday 02 June 2010] [10:43:41] <sustrik>   there are actually two strategies
| [Wednesday 02 June 2010] [10:43:53] <sustrik>   one for outgoing messages, one for incoming messages
| [Wednesday 02 June 2010] [10:44:24] <sustrik>   say REQ load balances outgoing messages
| [Wednesday 02 June 2010] [10:44:32] <mato>  yeah, that makes sense
| [Wednesday 02 June 2010] [10:44:46] <mato>  what it does with incoming messages you don't really care
| [Wednesday 02 June 2010] [10:44:47] <sustrik>   and receives only from the peer it sent the last request to
| [Wednesday 02 June 2010] [10:45:04] <mato>  hmm, how can I put that in one sentence...
| [Wednesday 02 June 2010] [10:45:09] <sustrik>   well, for say REP socket, the incoming stratege is fair queueing
| [Wednesday 02 June 2010] [10:45:17] <sustrik>   strategy*
| [Wednesday 02 June 2010] [10:46:06] <sustrik>   wouldn't it be better to explain what the socket does in one sentence
| [Wednesday 02 June 2010] [10:46:15] <mato>  I do that already
| [Wednesday 02 June 2010] [10:46:23] <mato>  but I wanted a summary table in there
| [Wednesday 02 June 2010] [10:46:26] <sustrik>   instead of splitting it into 4 different rows in a table
| [Wednesday 02 June 2010] [10:46:52] <mato>  sustrik: if you were here you would see what i have on my screen :-(
| [Wednesday 02 June 2010] [10:46:53] <sustrik>   ok, let's go through the table
| [Wednesday 02 June 2010] [10:47:07] <sustrik>   comaptible sockets is OK
| [Wednesday 02 June 2010] [10:47:07] <mato>  do we want a table or not?
| [Wednesday 02 June 2010] [10:47:26] <mato>  I thought it would be good to explain in prose first, and then have a table at the end
| [Wednesday 02 June 2010] [10:47:34] <lvh>   Okay. We have a bunch of entry points for mobile devices that speak JSON-over-HTTPS and Thrift-over-SSL. They send stuff to an AMQP broker (RabbitMQ): a queue for persisting, which roundrobins stuff to persisters that write to a database, and then a pubsub thing for a live web interface. I don't understand how you do the load balancing bit in ZMQ. How do persisters register? How do they know *where* to register if there is no central
| [Wednesday 02 June 2010] [10:47:35] <lvh>   broker?
| [Wednesday 02 June 2010] [10:48:42] <sustrik>   mato: i would omit the strategies from the table, they are explained in the text already
| [Wednesday 02 June 2010] [10:49:30] <mato>  sustrik: well, the table is nice for a quick look
| [Wednesday 02 June 2010] [10:49:39] <mato>  sustrik: if it can be done for all sockets correctly
| [Wednesday 02 June 2010] [10:49:40] <sustrik>   lvh: so devices are sending messages to a central node (broker) which then load-balances them among persisters, right?
| [Wednesday 02 June 2010] [10:49:49] <lvh>   sustrik: Yes, that's one part of the behavior
| [Wednesday 02 June 2010] [10:49:57] <lvh>   sustrik: Let's focus on that now :)
| [Wednesday 02 June 2010] [10:50:11] <lvh>   sustrik: That's a single AMQP queue.
| [Wednesday 02 June 2010] [10:50:25] <sustrik>   mato: you can try but strategies need textual description anyway
| [Wednesday 02 June 2010] [10:50:43] <sustrik>   lvh: is that req/rep scenario?
| [Wednesday 02 June 2010] [10:50:46] <lvh>   What does the failure mode look like? What happens to messages when a persister grabs a message and then blows up?
| [Wednesday 02 June 2010] [10:50:55] <sustrik>   are the persisters sending replies back to the devices?
| [Wednesday 02 June 2010] [10:51:10] <sustrik>   lvh: unreliable
| [Wednesday 02 June 2010] [10:51:16] <lvh>   sustrik: Ideally yes, to confirm "hey I wrote this thing and the db says its okay"
| [Wednesday 02 June 2010] [10:51:44] <sustrik>   you can run zmq_queue in the middle
| [Wednesday 02 June 2010] [10:51:53] <sustrik>   it's lika an AMQP queue
| [Wednesday 02 June 2010] [10:52:12] <sustrik>   then both devices and persisters can connect to it
| [Wednesday 02 June 2010] [10:52:17] <lvh>   Okay, cool :-) I'll read up on that one.
| [Wednesday 02 June 2010] [10:52:28] <lvh>   sustrik: How about the pubsubbing? Is that with zmq_queue too?
| [Wednesday 02 June 2010] [10:52:38] <sustrik>   no, that's zmq_forwarder
| [Wednesday 02 June 2010] [10:53:13] <lvh>   Aha! Okay, I'll read the docs for those two and try to figure it out. Thanks! :-)
| [Wednesday 02 June 2010] [10:54:58] <mato>  sustrik: so what's the incoming strategy for ZMQ_SUB?
| [Wednesday 02 June 2010] [10:56:45] <sustrik>   fair-queuing
| [Wednesday 02 June 2010] [10:59:58] <mato>  does this work:
| [Wednesday 02 June 2010] [11:00:04] <mato>  REQ:
| [Wednesday 02 June 2010] [11:00:11] <mato>  Compatible peer sockets:: 'ZMQ_REP'
| [Wednesday 02 June 2010] [11:00:11] <mato>  Direction:: Bidirectional
| [Wednesday 02 June 2010] [11:00:11] <mato>  Send/receive pattern:: Send, Receive, Send, Receive, ...
| [Wednesday 02 June 2010] [11:00:11] <mato>  Outgoing routing strategy:: Load-balanced
| [Wednesday 02 June 2010] [11:00:11] <mato>  Incoming routing strategy:: Last peer
| [Wednesday 02 June 2010] [11:00:13] <mato>  Flow control:: Block
| [Wednesday 02 June 2010] [11:00:15] <mato>  REP:
| [Wednesday 02 June 2010] [11:00:20] <mato>  Compatible peer sockets:: 'ZMQ_REQ'
| [Wednesday 02 June 2010] [11:00:20] <mato>  Direction:: Bidirectional
| [Wednesday 02 June 2010] [11:00:20] <mato>  Send/receive pattern:: Receive, Send, Receive, Send, ...
| [Wednesday 02 June 2010] [11:00:20] <mato>  Incoming routing strategy:: Fair-queued
| [Wednesday 02 June 2010] [11:00:20] <mato>  Outgoing routing stratagy:: Last peer
| [Wednesday 02 June 2010] [11:00:23] <mato>  Flow control:: Drop
| [Wednesday 02 June 2010] [11:02:54] <sustrik>   you have it mixed
| [Wednesday 02 June 2010] [11:02:59] <sustrik>   the upper is ZMQ_REQ
| [Wednesday 02 June 2010] [11:03:08] <sustrik>   the lower is ZMQ_REP
| [Wednesday 02 June 2010] [11:03:15] <mato>  that's what i wrote
| [Wednesday 02 June 2010] [11:03:56] <mato>  sustrik: what i'm asking is whether that kind of table makes sense
| [Wednesday 02 June 2010] [11:03:58] <sustrik>   oh, orry
| [Wednesday 02 June 2010] [11:04:00] <sustrik>   sorry
| [Wednesday 02 June 2010] [11:04:18] <sustrik>   yes, it makes sense
| [Wednesday 02 June 2010] [11:04:44] <mato>  the reason i want to put it in there beside the prose is brian wrote:
| [Wednesday 02 June 2010] [11:04:55] <mato>  In my understanding, 0MQ sockets
| [Wednesday 02 June 2010] [11:04:55] <mato>  can be described in a uniform manner by specifying things like:
| [Wednesday 02 June 2010] [11:04:55] <mato>  * Bidirectional or unidirectional
| [Wednesday 02 June 2010] [11:04:55] <mato>  * send/recv pattern (ssssss, rrrrrrr, srsrsrsr, etc.)
| [Wednesday 02 June 2010] [11:04:55] <mato>  * Outbound/inbound message queuing pattern (load balanced, fair queued)
| [Wednesday 02 June 2010] [11:04:58] <mato>  * Number of allowed clients.
| [Wednesday 02 June 2010] [11:05:00] <mato>  * How multiple clients are handled.
| [Wednesday 02 June 2010] [11:05:03] <mato>  * Number of allowed in flight messages (synch, async)
| [Wednesday 02 June 2010] [11:05:05] <mato>  * Algorithm used when the queue fills.
| [Wednesday 02 June 2010] [11:05:08] <mato>  * Allowed peer socket types.
| [Wednesday 02 June 2010] [11:05:10] <mato>  * I may be missing certain things.
| [Wednesday 02 June 2010] [11:05:13] <mato>  * How identities are used in message routing.
| [Wednesday 02 June 2010] [11:05:15] <mato>  The main problem that I see right now is that some of these things are
| [Wednesday 02 June 2010] [11:05:18] <mato>  not clearly documented.  Making a list of all these things and
| [Wednesday 02 June 2010] [11:05:20] <mato>  documenting them for each socket type would be immensely helpful and
| [Wednesday 02 June 2010] [11:05:23] <mato>  clarify the abstraction of a 0MQ socket.
| [Wednesday 02 June 2010] [11:05:25] <mato>  ...
| [Wednesday 02 June 2010] [11:05:28] <mato>  so it seems that a table would help
| [Wednesday 02 June 2010] [11:05:30] <sustrik>   yes, sure
| [Wednesday 02 June 2010] [11:05:30] <mato>  sustrik: agree?
| [Wednesday 02 June 2010] [11:05:36] <sustrik>   yes
| [Wednesday 02 June 2010] [11:05:45] <sustrik>   let's use your current table
| [Wednesday 02 June 2010] [11:05:55] <sustrik>   if there are more things to specify
| [Wednesday 02 June 2010] [11:05:59] <sustrik>   we can add it later
| [Wednesday 02 June 2010] [11:06:02] <mato>  ok, good
| [Wednesday 02 June 2010] [11:06:21] <mato>  it makes peer look scary:
| [Wednesday 02 June 2010] [11:06:25] <mato>  Compatible peer sockets:: 'ZMQ_PAIR'
| [Wednesday 02 June 2010] [11:06:26] <mato>  Direction:: Bidirectional
| [Wednesday 02 June 2010] [11:06:26] <mato>  Send/receive pattern:: Unrestricted
| [Wednesday 02 June 2010] [11:06:26] <mato>  Incoming routing strategy:: N/A
| [Wednesday 02 June 2010] [11:06:26] <mato>  Outgoing routing strategy:: N/A
| [Wednesday 02 June 2010] [11:06:28] <mato>  Flow control:: Block
| [Wednesday 02 June 2010] [11:06:30] <mato>  lots of N/A :)
| [Wednesday 02 June 2010] [11:07:03] <mato>  sustrik: one more thing needs  to go in that table
| [Wednesday 02 June 2010] [11:07:36] <sustrik>   :)
| [Wednesday 02 June 2010] [11:07:46] <mato>  sustrik: which is what brian calls "number of allowed clients", and what he means is whether a socket can be many-to-many/many-to-one/etc
| [Wednesday 02 June 2010] [11:07:53] <mato>  what is that "thing" called? :-)
| [Wednesday 02 June 2010] [11:08:03] <sustrik>   arity
| [Wednesday 02 June 2010] [11:08:12] <sustrik>   cardinality
| [Wednesday 02 June 2010] [11:08:15] <sustrik>   dunno
| [Wednesday 02 June 2010] [11:08:39] <mato>  hmm, neither of those really work
| [Wednesday 02 June 2010] [11:08:57] <sustrik>   any normal 0mq socket allows many peers
| [Wednesday 02 June 2010] [11:09:03] <sustrik>   pair is pathological case
| [Wednesday 02 June 2010] [11:09:12] <sustrik>   just note in the text
| [Wednesday 02 June 2010] [11:09:23] <mato>  already noted
| [Wednesday 02 June 2010] [11:09:24] <sustrik>   word 'pathological' should be definitely present :)
| [Wednesday 02 June 2010] [11:18:34] <lvh>   sustrik: So, in a typical setup, would these brokers and forwarders have dedicated machines? I'm assuming that you *DO* actually need to know where your forwarder/queue is.
| [Wednesday 02 June 2010] [11:18:56] <sustrik>   yes, you have to connect to it
| [Wednesday 02 June 2010] [11:19:13] <sustrik>   having a dedicated machine seems like an overkill
| [Wednesday 02 June 2010] [11:19:20] <sustrik>   depends on what are you doing
| [Wednesday 02 June 2010] [11:19:38] <sustrik>   if you are NASDAQ, you probably want a dedicated machine...
| [Wednesday 02 June 2010] [11:19:52] <lvh>   well, we're currently on EC2
| [Wednesday 02 June 2010] [11:20:09] <lvh>   I suppose we could move to RC and use a tiny 256M box, and even that's overkill.
| [Wednesday 02 June 2010] [11:20:43] <sustrik>   then use a single box :)
| [Wednesday 02 June 2010] [11:21:25] <mato>  %^#$^
| [Wednesday 02 June 2010] [11:22:31] <mato>  sustrik: so how do i translate this without mentioning message queues/pipes:
| [Wednesday 02 June 2010] [11:22:39] <mato>  REP:
| [Wednesday 02 June 2010] [11:22:39] <mato>  Ak je spojenie urcene na odoslanie odpovede preplnene, potom ZMQ
| [Wednesday 02 June 2010] [11:22:39] <mato>  spravu zahodi a send skonci uspesne.
| [Wednesday 02 June 2010] [11:23:37] <sustrik>   that's the flow control bit?
| [Wednesday 02 June 2010] [11:23:45] <mato>  yes
| [Wednesday 02 June 2010] [11:24:20] <sustrik>   if there's not enough space to store the message, it'll be dropped
| [Wednesday 02 June 2010] [11:25:23] <mato>  sustrik: it needs to be explained in the context of REP and HWM
| [Wednesday 02 June 2010] [11:25:56] <mato>  help me out here
| [Wednesday 02 June 2010] [11:26:43] <sustrik>   if requester is not receiving replies and the number of outstanding replies reaches HWM any further replies will be dropped
| [Wednesday 02 June 2010] [11:30:17] <mato>  sustrik: hw about this?
| [Wednesday 02 June 2010] [11:30:22] <mato>  When a 'ZMQ_REP' socket enters an exceptional state due to having reached the
| [Wednesday 02 June 2010] [11:30:23] <mato>  high water mark for a _client_, then any replies sent to the _client_ in
| [Wednesday 02 June 2010] [11:30:23] <mato>  question shall be dropped until the exceptional state ends.
| [Wednesday 02 June 2010] [11:30:48] <sustrik>   yes, why not
| [Wednesday 02 June 2010] [12:05:50] <mato>  sustrik: are you still there?
| [Wednesday 02 June 2010] [12:11:46] <sustrik>   mato: yes
| [Wednesday 02 June 2010] [12:12:00] <mato>  sustrik: in a moment i will commit my changes
| [Wednesday 02 June 2010] [12:12:15] <mato>  sustrik: i've also added some general text to zmq_socket in an attempt to explain the interesting bits
| [Wednesday 02 June 2010] [12:12:23] <mato>  sustrik: once i commit it can you review this please?
| [Wednesday 02 June 2010] [12:12:30] <sustrik>   sure, i will
| [Wednesday 02 June 2010] [12:12:40] <sustrik>   one more question, btw
| [Wednesday 02 June 2010] [12:12:53] <sustrik>   there's a "zmqd" thing in the trunk
| [Wednesday 02 June 2010] [12:13:11] <sustrik>   should we drop the devices in favour of zmqd
| [Wednesday 02 June 2010] [12:13:19] <sustrik>   or keep both for the time being
| [Wednesday 02 June 2010] [12:13:22] <sustrik>   ?
| [Wednesday 02 June 2010] [12:13:30] <mato>  sustrik: oh, btw, since we're removing app_threads, zmq_socket will no longer return EMTHREAD ever?
| [Wednesday 02 June 2010] [12:13:48] <mato>  sustrik: as for zmqd, i'm not sure, i've not had a chance to review it
| [Wednesday 02 June 2010] [12:13:48] <sustrik>   actually, it will
| [Wednesday 02 June 2010] [12:14:07] <sustrik>   when it reaches max socket count
| [Wednesday 02 June 2010] [12:14:12] <sustrik>   as with POSIX
| [Wednesday 02 June 2010] [12:14:24] <mato>  sustrik: for 2.0.7 i would ignore zmqd, and keep packaging the current devices
| [Wednesday 02 June 2010] [12:14:31] <sustrik>   ok
| [Wednesday 02 June 2010] [12:14:35] <mato>  sustrik: since the devices/zmqd really need a proper review
| [Wednesday 02 June 2010] [12:15:05] <sustrik>   fine
| [Wednesday 02 June 2010] [12:15:27] <sustrik>   what about renaming EMTHREAD to EMFILE?
| [Wednesday 02 June 2010] [12:15:40] <sustrik>   probably not
| [Wednesday 02 June 2010] [12:15:48] <sustrik>   just an idea
| [Wednesday 02 June 2010] [12:15:57] <mato>  what does this value have to do with it?
| [Wednesday 02 June 2010] [12:16:13] <mato>   Maximal number of OS threads that can own 0MQ sockets
| [Wednesday 02 June 2010] [12:16:13] <mato>          //  at the same time.
| [Wednesday 02 June 2010] [12:16:13] <mato>          max_app_threads = 512,
| [Wednesday 02 June 2010] [12:16:18] <mato>  from config.hpp
| [Wednesday 02 June 2010] [12:16:30] <sustrik>   yes, that's max thread count
| [Wednesday 02 June 2010] [12:16:42] <sustrik>   kind of like max socket count in POSIX OS
| [Wednesday 02 June 2010] [12:16:51] <sustrik>   max fd count i meant
| [Wednesday 02 June 2010] [12:17:22] <mato>  ok
| [Wednesday 02 June 2010] [12:17:59] <mato>  in that case I'll change the error explanation to just say:
| [Wednesday 02 June 2010] [12:18:03] <mato>  *EMTHREAD*::
| [Wednesday 02 June 2010] [12:18:03] <mato>  The number of application threads using sockets within this 'context' has been
| [Wednesday 02 June 2010] [12:18:04] <mato>  exceeded. 
| [Wednesday 02 June 2010] [12:18:08] <mato>  and nothing else
| [Wednesday 02 June 2010] [12:18:26] <sustrik>   there's no concept of application thread now
| [Wednesday 02 June 2010] [12:18:30] <sustrik>   i would just say
| [Wednesday 02 June 2010] [12:18:40] <sustrik>   "maximal number of sockets exceeded"
| [Wednesday 02 June 2010] [12:18:46] <sustrik>   it's not precise
| [Wednesday 02 June 2010] [12:18:47] <mato>  sorry, yeah
| [Wednesday 02 June 2010] [12:18:55] <mato>  Maximum btw
| [Wednesday 02 June 2010] [12:19:04] <mato>  I don't know where you keep getting maximal from :-)
| [Wednesday 02 June 2010] [12:19:06] <sustrik>   but nobody going to experience the error
| [Wednesday 02 June 2010] [12:19:15] <sustrik>   slovak language
| [Wednesday 02 June 2010] [12:19:23] <mato>  oh, you never know, there may be people using more than 512 threads
| [Wednesday 02 June 2010] [12:19:35] <sustrik>   those are doomed anyway
| [Wednesday 02 June 2010] [12:19:37] <sustrik>   :)
| [Wednesday 02 June 2010] [12:19:51] <mato>  not if you imagine that they're running on some freaky 48-core box :-)
| [Wednesday 02 June 2010] [12:20:07] <sustrik>   supercomputing use cases
| [Wednesday 02 June 2010] [12:20:27] <sustrik>   guys on blue gene should be smart enough to figure it out
| [Wednesday 02 June 2010] [12:20:59] <cremes>    mato: is zmq_init still taking a threads parameter? if so, does your latest doc update explain its meaning better?
| [Wednesday 02 June 2010] [12:21:15] <mato>  cremes: it is, but won't be for 2.0.7
| [Wednesday 02 June 2010] [12:21:29] <mato>  hence the doc update
| [Wednesday 02 June 2010] [12:21:49] <cremes>    so in 2.0.7 the call to zmq_init will no longer take any arguments?
| [Wednesday 02 June 2010] [12:21:54] <mato>  correct
| [Wednesday 02 June 2010] [12:22:01] <cremes>    good
| [Wednesday 02 June 2010] [12:22:06] <sustrik>   not corrext
| [Wednesday 02 June 2010] [12:22:14] <cremes>    oops
| [Wednesday 02 June 2010] [12:22:16] <sustrik>   there's still io_threads parameter
| [Wednesday 02 June 2010] [12:22:23] <mato>  yeah, that's right, sorry
| [Wednesday 02 June 2010] [12:22:23] <sustrik>   size of working thread pool
| [Wednesday 02 June 2010] [12:22:43] <sustrik>   app_threads and flags is dropped
| [Wednesday 02 June 2010] [12:22:49] <cremes>    ah, ok
| [Wednesday 02 June 2010] [12:23:15] <cremes>    i never understood what app threads were for... 
| [Wednesday 02 June 2010] [12:23:20] <cremes>    but now it doesn't matter
| [Wednesday 02 June 2010] [12:23:24] <mato>  :-)
| [Wednesday 02 June 2010] [12:23:36] <sustrik>   that's why we removed them
| [Wednesday 02 June 2010] [12:23:37] <mato>  cremes: anything else you don't know what its for?
| [Wednesday 02 June 2010] [12:23:43] <mato>  cremes: maybe we can remove that too :-)
| [Wednesday 02 June 2010] [12:23:53] <cremes>    ha!
| [Wednesday 02 June 2010] [12:24:36] <sustrik>   seriously
| [Wednesday 02 June 2010] [12:24:39] <cremes>    let me see... you may want to clarify that zmq_poll can return when *any* event occurs inside the library even if no sockets are readable/writable
| [Wednesday 02 June 2010] [12:25:08] <cremes>    and the usec delay value is the maximum it may block and will likely return earlier
| [Wednesday 02 June 2010] [12:25:15] <sustrik>   yeah, that's kind of confusing
| [Wednesday 02 June 2010] [12:25:42] <cremes>    i know :)
| [Wednesday 02 June 2010] [12:25:58] <sustrik>   i would like to block till timeout expires but people seem to be so much concerned about zmq_poll performance...
| [Wednesday 02 June 2010] [12:27:16] <cremes>    sustrik: that behavior as fine as long as it is documented
| [Wednesday 02 June 2010] [12:27:32] <cremes>    particularly the part that it's possible that no sockets are readable/writable
| [Wednesday 02 June 2010] [12:27:57] <sustrik>   mato: can you add one sentence explaining that?
| [Wednesday 02 June 2010] [12:28:01] <cremes>    i'd like to keep 0mq as fast as possible so that my choice of a slow language (ruby) doesn't hurt as much
| [Wednesday 02 June 2010] [12:28:19] <lvh>   you should probably measure your bottlenecks first
| [Wednesday 02 June 2010] [12:28:33] <lvh>   IO tends to be it but ZMQ is probably a tiny bit of that
| [Wednesday 02 June 2010] [12:28:35] <mato>  sustrik: working on it now
| [Wednesday 02 June 2010] [12:29:17] <sustrik>   lvh: that's true wrt latency
| [Wednesday 02 June 2010] [12:29:34] <sustrik>   as for throughput it should be as fast as possible
| [Wednesday 02 June 2010] [12:29:47] <sustrik>   because network stack is called only once in a while
| [Wednesday 02 June 2010] [12:30:03] <sustrik>   so it most cases 0mq overhead is the only overhead there is
| [Wednesday 02 June 2010] [12:30:37] <sustrik>   exact timeouts on zmq_poll require one call to gettimeofday per invocation
| [Wednesday 02 June 2010] [12:30:49] <sustrik>   that can slow the whole thing down
| [Wednesday 02 June 2010] [12:32:49] <mato>  sustrik: so poll returns any time, even if there are no events and timeout has not yet expired?
| [Wednesday 02 June 2010] [12:33:40] <sustrik>   yes
| [Wednesday 02 June 2010] [12:33:58] <sustrik>   the only guarantee is that it won't return _after_ the timeout expired
| [Wednesday 02 June 2010] [12:34:14] <mato>  IMPORTANT: The _zmq_poll()_ function may return *before* the 'timeout' period
| [Wednesday 02 June 2010] [12:34:15] <mato>  has expired even if no events have been signaled.
| [Wednesday 02 June 2010] [12:34:17] <mato>  this should do?
| [Wednesday 02 June 2010] [12:34:27] <mato>  right after the RETURN value section
| [Wednesday 02 June 2010] [12:34:28] <sustrik>   cremes?
| [Wednesday 02 June 2010] [12:35:55] <sustrik>   looks like he's away, i, for myself, am happy with the wording
| [Wednesday 02 June 2010] [12:35:59] <mato>  ok
| [Wednesday 02 June 2010] [12:36:24] <mato>  poll is a hack anyway and needs to be redone :)
| [Wednesday 02 June 2010] [12:36:47] <sustrik>   yeah, but the exact timeout would be a problem anyway :|
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: 03Martin Lucina 07master * r7c9b09b 10/ (7 files): 
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: Documentation: Flow control, zmq_socket(3)
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: Mostly Flow control and additions to zmq_socket(3)
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: Removed/changed lots of text regarding message queues
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: More fixes for 2.0.7 changes - http://bit.ly/d24DAg
| [Wednesday 02 June 2010] [12:38:36] <mato>  sustrik: ok, committed
| [Wednesday 02 June 2010] [12:38:56] <mato>  sustrik: please take a look at the beginning of zmq_socket(3) and tell me if the added text is correct and helpful or not
| [Wednesday 02 June 2010] [12:39:11] <sustrik>   lemme see
| [Wednesday 02 June 2010] [12:44:04] <sustrik>   very nice
| [Wednesday 02 June 2010] [12:44:10] <mato>  thanks
| [Wednesday 02 June 2010] [12:44:35] <mato>  i wanted to emphasize the many-to-many and multiple endpoints 
| [Wednesday 02 June 2010] [12:44:43] <sustrik>   yes, that's good
| [Wednesday 02 June 2010] [12:44:53] <sustrik>   it should be pointed out explicitly
| [Wednesday 02 June 2010] [12:45:15] <mato>  great, then this should help
| [Wednesday 02 June 2010] [12:45:22] <mato>  sustrik: beer & pizza?
| [Wednesday 02 June 2010] [12:45:38] <sustrik>   i've just ate
| [Wednesday 02 June 2010] [12:45:48] <sustrik>   beer?
| [Wednesday 02 June 2010] [12:46:03] <mato>  beer is good, but i need food too
| [Wednesday 02 June 2010] [12:46:17] <sustrik>   where do you want to go?
| [Wednesday 02 June 2010] [12:46:29] <mato>  somewhere outside
| [Wednesday 02 June 2010] [12:46:38] <sustrik>   it's *COLD*
| [Wednesday 02 June 2010] [12:46:53] <mato>  is it? i thought not really
| [Wednesday 02 June 2010] [12:47:01] <sustrik>   14 degrees or something
| [Wednesday 02 June 2010] [12:47:18] <mato>  sustrik: ok how about randal? that has been and pizza
| [Wednesday 02 June 2010] [12:47:29] <mato>  sustrik: and no concert tonight, i just checked
| [Wednesday 02 June 2010] [12:47:33] <sustrik>   is it open now?
| [Wednesday 02 June 2010] [12:47:39] <mato>  yes, every day
| [Wednesday 02 June 2010] [12:47:47] <sustrik>   ok then
| [Wednesday 02 June 2010] [12:47:59] <mato>  see you there at half past seven then?
| [Wednesday 02 June 2010] [12:48:11] <sustrik>   more or less
| [Wednesday 02 June 2010] [12:48:20] <sustrik>   i have few emails to answer still
| [Wednesday 02 June 2010] [12:48:28] <mato>  ok
| [Wednesday 02 June 2010] [12:55:22] <cremes>    mato, sustrik: the zmq_poll rewording is fine
| [Wednesday 02 June 2010] [12:55:38] <sustrik>   ack
| [Wednesday 02 June 2010] [15:03:33] <lvh>   What's the recommended thing for debian stable packages?
| 
| *** Logfile started
| *** on Thu Jun 3 02:17:03 2010
| 
| [Thursday 03 June 2010] [02:17:03] Topic    The channel topic is "Welcome!".
| [Thursday 03 June 2010] [02:17:03] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Thursday 03 June 2010] [02:17:09] Mode Channel modes: no messages from outside, topic protection
| [Thursday 03 June 2010] [02:17:09] Created  This channel was created on 2010-02-05 10:44.
| 
| *** Logfile started
| *** on Thu Jun 3 02:24:46 2010
| 
| [Thursday 03 June 2010] [02:24:46] Topic    The channel topic is "Welcome!".
| [Thursday 03 June 2010] [02:24:46] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Thursday 03 June 2010] [02:24:52] Mode Channel modes: no messages from outside, topic protection
| [Thursday 03 June 2010] [02:24:52] Created  This channel was created on 2010-02-05 10:44.
| [Thursday 03 June 2010] [03:24:05] <sbeaulois_> hello
| [Thursday 03 June 2010] [03:27:05] <versificateur>  hello everyone!
| [Thursday 03 June 2010] [03:28:00] <versificateur>  I have some difficulties to reach messges sent by zeromq
| [Thursday 03 June 2010] [03:28:52] <versificateur>  when I connect to hosts other than localhost
| [Thursday 03 June 2010] [03:29:55] <versificateur>  the connection is opened but i get no message from the server
| [Thursday 03 June 2010] [03:30:42] <versificateur>  however it's works fine in local
| [Thursday 03 June 2010] [03:30:42] <guido_g>    show source in paste-bin
| [Thursday 03 June 2010] [03:31:00] <guido_g>    all other things are guessing :)
| [Thursday 03 June 2010] [03:34:14] <versificateur>  http://pastebin.com/5pWd2mFc
| [Thursday 03 June 2010] [03:34:25] <versificateur>  this is the server
| [Thursday 03 June 2010] [03:36:06] <versificateur>  http://pastebin.com/NvCZ3157
| [Thursday 03 June 2010] [03:36:25] <versificateur>  and the test i wrote based on pyzmq example
| [Thursday 03 June 2010] [03:37:42] <guido_g>    ok
| [Thursday 03 June 2010] [03:38:08] <guido_g>    can you check if the server is listening on all ips of the server?
| [Thursday 03 June 2010] [03:38:25] <guido_g>    on linux netstat would do the job
| [Thursday 03 June 2010] [03:38:34] <guido_g>    netstat -tanp
| [Thursday 03 June 2010] [03:38:46] <versificateur>  yes it's listening
| [Thursday 03 June 2010] [03:38:55] <sustrik>    i think the problem is that you exit the sender before it's able to send the message
| [Thursday 03 June 2010] [03:39:16] <sustrik>    try sleeping for a while before you exit the sender
| [Thursday 03 June 2010] [03:41:23] <versificateur>  but the same code works well when zeromq subscriber and publisher are on the same machine
| [Thursday 03 June 2010] [03:41:50] <guido_g>    yes, because there is no network involved, completely different behaviour
| [Thursday 03 June 2010] [03:41:53] <sustrik>    i assume that's because loopback is faster than inter-machine communication
| [Thursday 03 June 2010] [03:42:20] <sustrik>    so it local case the message manages to get through before the application quits
| [Thursday 03 June 2010] [03:43:01] <versificateur>  okay i'll try sleeping
| [Thursday 03 June 2010] [03:43:17] <versificateur>  after sendin??
| [Thursday 03 June 2010] [03:43:50] <guido_g>    yes
| [Thursday 03 June 2010] [03:44:07] <guido_g>    just to make sure that mq has time to send
| [Thursday 03 June 2010] [03:44:40] <versificateur>  i'll start with huge value and decrease gradually
| [Thursday 03 June 2010] [03:45:04] <sustrik>    one second should do
| [Thursday 03 June 2010] [03:50:15] <versificateur>  i tried with 5 second but received nothing
| [Thursday 03 June 2010] [03:52:10] <sustrik>    another possibility:
| [Thursday 03 June 2010] [03:52:30] <sustrik>    do you start the subscriber fast enough?
| [Thursday 03 June 2010] [03:52:43] <sustrik>    i see there's a sleep in the code to allow subscriber to connect
| [Thursday 03 June 2010] [03:53:16] <sustrik>    do you start it within 1 second after starting the publisher?
| [Thursday 03 June 2010] [03:54:40] <sustrik>    versificateur: let me explain how pub/sub is supposed to work
| [Thursday 03 June 2010] [03:55:08] <sustrik>    the idea is that publisher is a long-lived application that broadcast continuous stream of messages
| [Thursday 03 June 2010] [03:55:28] <sustrik>    the subscribers connect to the publisher and start receiving the stream at some point
| [Thursday 03 June 2010] [03:56:43] <versificateur>  it's what publisher do
| [Thursday 03 June 2010] [03:56:55] <versificateur>  my publisher do
| [Thursday 03 June 2010] [03:57:09] <sustrik>    does it run in loop?
| [Thursday 03 June 2010] [03:57:30]   * sustrik doesn't speak python
| [Thursday 03 June 2010] [03:57:45] <sustrik>    my impression is that it publishes a message and quits
| [Thursday 03 June 2010] [03:58:07] <sustrik>    rather than transmitting a continuous stream
| [Thursday 03 June 2010] [03:58:33] <versificateur>  not really . it open a connection (bind) 
| [Thursday 03 June 2010] [03:58:50] <versificateur>  and send every message
| [Thursday 03 June 2010] [03:59:17] <versificateur>  he receive from an upstream application
| [Thursday 03 June 2010] [04:00:20]   * sustrik is lost in the python code :)
| [Thursday 03 June 2010] [04:00:27] <sustrik>    where should i look for the loop?
| [Thursday 03 June 2010] [04:01:49] <sustrik>    it's clear up to line 34
| [Thursday 03 June 2010] [04:01:56] <sustrik>    then i get lost
| [Thursday 03 June 2010] [04:02:22] <versificateur>  http://pastebin.com/pdNkax6c
| [Thursday 03 June 2010] [04:02:44] <versificateur>  okay i'll resume basically what the application do
| [Thursday 03 June 2010] [04:03:06]   * sustrik is listening
| [Thursday 03 June 2010] [04:03:42] <versificateur>  it receive a GET request through a WSGI python server
| [Thursday 03 June 2010] [04:03:43] <guido_g>    ahhh it's running in web-server
| [Thursday 03 June 2010] [04:04:23] <versificateur>  yes it's the last code i send
| [Thursday 03 June 2010] [04:05:42] <versificateur>  but before running the WSGI server it start the zeromq publisher
| [Thursday 03 June 2010] [04:06:27] <versificateur>  with import bmpMessageHandler on line 4
| [Thursday 03 June 2010] [04:07:55] <sustrik>    ok, so it  does publish a continuous stream of messages
| [Thursday 03 June 2010] [04:08:28] <versificateur>  and everytime a GET request is send it run the method that send message
| [Thursday 03 June 2010] [04:08:28] <sustrik>    can you check whether there's data over the wire (tcpdump/wireshark)
| [Thursday 03 June 2010] [04:08:31] <sustrik>    ?
| [Thursday 03 June 2010] [04:08:48] <versificateur>  i'll try
| [Thursday 03 June 2010] [04:09:12] <versificateur>  on the publisher or subscriber?
| [Thursday 03 June 2010] [04:09:29] <sustrik>    should be the same
| [Thursday 03 June 2010] [04:09:34] <sustrik>    it's up to you
| [Thursday 03 June 2010] [05:35:23] <mikko>  good morning
| [Thursday 03 June 2010] [05:35:37] <mikko>  man it's hard to get back to work after hols
| [Thursday 03 June 2010] [05:36:07] <mikko>  sustrik: are there any upcoming changes to the polling api?
| [Thursday 03 June 2010] [05:36:25] <sustrik>    hi
| [Thursday 03 June 2010] [05:36:35] <sustrik>    you mean the waitfd thing?
| [Thursday 03 June 2010] [05:36:46] <mikko>  i mean the pollset changes 
| [Thursday 03 June 2010] [05:36:57] <sustrik>    ah, no
| [Thursday 03 June 2010] [05:36:59] <mikko>  adding / removing items to/from pollset
| [Thursday 03 June 2010] [05:37:00] <mikko>  ok
| [Thursday 03 June 2010] [05:37:06] <sustrik>    it'll stay as is in 2.0.7
| [Thursday 03 June 2010] [05:37:14] <mikko>  so making a pollset myself is a sensible thing to do
| [Thursday 03 June 2010] [05:37:24] <sustrik>    yes
| [Thursday 03 June 2010] [05:37:38] <mikko>  cool, because i wrote one some time ago
| [Thursday 03 June 2010] [05:37:44] <mikko>  just need to polish it and push in
| [Thursday 03 June 2010] [05:37:51] <sustrik>    great
| [Thursday 03 June 2010] [05:37:56] <mikko>  thanks
| [Thursday 03 June 2010] [05:38:12] <mikko>  a lot of improvements in 2.0.7
| [Thursday 03 June 2010] [05:41:29] <versificateur>  i finally locate the bug
| [Thursday 03 June 2010] [05:42:21] <versificateur>  it's in the deamon i run to start the WSGI server
| [Thursday 03 June 2010] [05:42:33] <versificateur>  i'l try to fix it
| [Thursday 03 June 2010] [05:42:43] <versificateur>  thanks sustrik
| [Thursday 03 June 2010] [05:43:04] <sustrik>    you are welcome
| [Thursday 03 June 2010] [05:43:48] <sustrik>    versificateur: is it an open source project you are working on?
| [Thursday 03 June 2010] [05:46:14] <versificateur>  not yet but it could become
| [Thursday 03 June 2010] [05:47:29] <sustrik>    if so, it would make sense to link it from zeromq.org site
| [Thursday 03 June 2010] [05:48:02] <sustrik>    webserver<->application server communication is a thing many people would love to use
| [Thursday 03 June 2010] [05:54:12] <versificateur>  of course... and i think it has a lot of sens in a JSON-like oriented data consumption world
| [Thursday 03 June 2010] [06:05:31] <sustrik>    ack
| [Thursday 03 June 2010] [06:06:28] <sustrik>    so if you go open source just ping me and i'll link to your project
| [Thursday 03 June 2010] [07:31:52] <umesh>  I wan to send multicast messages using zeromq 
| [Thursday 03 June 2010] [07:32:06] <umesh>  I wrote the sample code for send and recv 
| [Thursday 03 June 2010] [07:32:18] <umesh>  namely mc_send and mc_recv
| [Thursday 03 June 2010] [07:32:33] <umesh>  first I run mc_recv and then mc_send ...
| [Thursday 03 June 2010] [07:32:57] <umesh>  but message is sent properly from mc_send ... but not received in mc_recv
| [Thursday 03 June 2010] [07:33:27] <umesh>  then I add the delay of 15 seconds in mc_send between zmq_connect and zmq_send api
| [Thursday 03 June 2010] [07:33:41] <umesh>  then mc_recv the message correctly ...
| [Thursday 03 June 2010] [07:34:01] <umesh>  can anyone tell me why this delay of x seconds is required 
| [Thursday 03 June 2010] [07:34:36] <guido_g>    the message is put into the mq io-thread, which runs asynchronoulsly to the main thread
| [Thursday 03 June 2010] [07:34:59] <sustrik>    yea, but the receiver is run first
| [Thursday 03 June 2010] [07:35:05] <guido_g>    so if the main thread exits, the io-thread is terminated and therefore nothing is sent
| [Thursday 03 June 2010] [07:35:12] <sustrik>    ah
| [Thursday 03 June 2010] [07:35:27]   * sustrik forgot :)
| [Thursday 03 June 2010] [07:35:52] <sustrik>    umesh: that may be the problem
| [Thursday 03 June 2010] [07:36:07] <umesh>  guido_g : ok got ...
| [Thursday 03 June 2010] [07:36:14] <sustrik>    the 15 sec slep before send may not be required
| [Thursday 03 June 2010] [07:36:16] <guido_g>    it's sort of *the* standard problem
| [Thursday 03 June 2010] [07:36:21] <sustrik>    try sleeping after the send
| [Thursday 03 June 2010] [07:36:34] <umesh>  then is there any way to avoid the sleep ...
| [Thursday 03 June 2010] [07:36:36] <sustrik>    is it in faq?
| [Thursday 03 June 2010] [07:36:49] <guido_g>    don't know
| [Thursday 03 June 2010] [07:36:53] <sustrik>    umesh: sending in loop
| [Thursday 03 June 2010] [07:37:03] <umesh>  means how i can do io-thread synchronously ...
| [Thursday 03 June 2010] [07:37:15] <sustrik>    0mq is async
| [Thursday 03 June 2010] [07:37:25] <sustrik>    you can try using openpgm directly
| [Thursday 03 June 2010] [07:37:48] <umesh>  i want to do it using zeromq ..
| [Thursday 03 June 2010] [07:38:56] <sustrik>    sorry, it's inherently async (that's what MQ means = message queueing)
| [Thursday 03 June 2010] [07:39:16] <guido_g>    sustrik: nope, it's not in the faq
| [Thursday 03 June 2010] [07:39:17] <sustrik>    guido_g: no mention of it in FAQ
| [Thursday 03 June 2010] [07:39:20] <sustrik>    :)
| [Thursday 03 June 2010] [07:39:21] <guido_g>    :)
| [Thursday 03 June 2010] [07:39:27] <umesh>  one more question : does zeromq send the more than one packter for multicast ?
| [Thursday 03 June 2010] [07:39:44] <sustrik>    packet?
| [Thursday 03 June 2010] [07:40:12] <sustrik>    guido_g: let's think of a faq question...
| [Thursday 03 June 2010] [07:40:15] <umesh>  I am asking this because : when I have no sleep and no messages received ... I still can see some multicast messages in wireshark ...
| [Thursday 03 June 2010] [07:40:39] <sustrik>    those are SPM's right?
| [Thursday 03 June 2010] [07:40:51] <sustrik>    (check the details in wireshark)
| [Thursday 03 June 2010] [07:41:44] <umesh>  SPM means  ?
| [Thursday 03 June 2010] [07:41:52] <sustrik>    type of PGM packet
| [Thursday 03 June 2010] [07:42:13] <guido_g>    the protocol used to control the message flow
| [Thursday 03 June 2010] [07:42:23] <guido_g>    like the special packtes used by tcp
| [Thursday 03 June 2010] [07:42:46] <sustrik>    yesh, there are packets like SPM/NACK/NCF/ODATA/RDATA...
| [Thursday 03 June 2010] [07:43:19] <umesh>  ok
| [Thursday 03 June 2010] [07:43:55] <umesh>  how we can decide these are SPM packtes ? because wireshark does not tell anything related to SPM ...
| [Thursday 03 June 2010] [07:44:02] <sustrik>    guido_g: what avout thisL
| [Thursday 03 June 2010] [07:44:03] <sustrik>    "I send a message to PUB socket, then I quit. The message does not appear at the connected SUB socket. What's wrong?"
| [Thursday 03 June 2010] [07:44:08] <umesh>  like it does for TCP ACK/FIN etc ...
| [Thursday 03 June 2010] [07:44:17] <sustrik>    it should
| [Thursday 03 June 2010] [07:44:29] <sustrik>    PGM dissector is part of wireshark out-of-the-box
| [Thursday 03 June 2010] [07:44:40] <sustrik>    what does it say?
| [Thursday 03 June 2010] [07:44:57] <guido_g>    sustrik: ok, maybe  adding "using pgm/epgm"
| [Thursday 03 June 2010] [07:45:00] <sustrik>    umesh: ah, you are using epgm?
| [Thursday 03 June 2010] [07:45:10] <umesh>  yup
| [Thursday 03 June 2010] [07:45:16] <sustrik>    guido_g: it can happen with tcp as well
| [Thursday 03 June 2010] [07:45:40] <sustrik>    umesh: ah, that's encapsulated PGM, wireshark can dissect that
| [Thursday 03 June 2010] [07:45:42] <sustrik>    try using pgm
| [Thursday 03 June 2010] [07:45:47] <guido_g>    oh well, yes
| [Thursday 03 June 2010] [07:45:55] <sustrik>    (you'll have to run your apps as root)
| [Thursday 03 June 2010] [07:46:02] <guido_g>    i constantly forget that pub/sun is possible via tcp as well :)
| [Thursday 03 June 2010] [07:46:02] <umesh>  ok
| [Thursday 03 June 2010] [07:46:18] <sustrik>    what should the answer be?
| [Thursday 03 June 2010] [07:46:23] <umesh>  but does pgm or epgm has anything to do to related to sleep issue ?
| [Thursday 03 June 2010] [07:46:33] <guido_g>    no
| [Thursday 03 June 2010] [07:46:35] <sustrik>    no, it's the same thing
| [Thursday 03 June 2010] [07:46:36] <umesh>  or it will behave same for both pgm and epgm ?
| [Thursday 03 June 2010] [07:46:38] <sustrik>    almost
| [Thursday 03 June 2010] [07:46:40] <umesh>  ok
| [Thursday 03 June 2010] [07:46:58] <guido_g>    sustrik: what are differences (for mq usage)?
| [Thursday 03 June 2010] [07:47:16] <sustrik>    epgm doesn't have to be run as root
| [Thursday 03 June 2010] [07:47:23] <sustrik>    it's not a standard though
| [Thursday 03 June 2010] [07:47:38] <sustrik>    pgm has to be run as root but it's a standard (RFC3208)
| [Thursday 03 June 2010] [07:48:20] <sustrik>    the consequence, for example, is that wireshark can parse pgm but not epgm
| [Thursday 03 June 2010] [07:48:26] <guido_g>    or with the capabilities set, if you're not root :)
| [Thursday 03 June 2010] [07:48:31] <sustrik>    right
| [Thursday 03 June 2010] [07:49:18] <umesh>  (process:27705): Pgm-WARNING **: PGM protocol requires CAP_NET_RAW capability, e.g. sudo execcap 'cap_net_raw=ep'
| [Thursday 03 June 2010] [07:49:33] <umesh>  this error i am getting when I use pgm instead of epm ...
| [Thursday 03 June 2010] [07:49:33] <sustrik>    "yes
| [Thursday 03 June 2010] [07:49:44] <sustrik>    are you running it as root?
| [Thursday 03 June 2010] [07:49:55] <umesh>  i are run as root ... then no error 
| [Thursday 03 June 2010] [07:50:21] <sustrik>    the whole point is that PGM is defined to be stacked on top of IP directly
| [Thursday 03 June 2010] [07:50:28] <sustrik>    same way as TCP or UDP is
| [Thursday 03 June 2010] [07:50:51] <sustrik>    so the user-space implementation has to use raw IP sockets to implement it
| [Thursday 03 June 2010] [07:51:01] <umesh>  ok .. now its showing spm in wire shark
| [Thursday 03 June 2010] [07:51:03] <sustrik>    but these can be used only be root
| [Thursday 03 June 2010] [07:51:08] <sustrik>    ok
| [Thursday 03 June 2010] [07:51:14] <sustrik>    spm is like a heartbeat
| [Thursday 03 June 2010] [07:51:17] <sustrik>    more or less
| [Thursday 03 June 2010] [07:51:27] <sustrik>    so what happens is that you start the publisher
| [Thursday 03 June 2010] [07:51:32] <sustrik>    and sleep for 15 secs
| [Thursday 03 June 2010] [07:51:53] <sustrik>    during those 15 secs, publisher is sending SPMs once in a while
| [Thursday 03 June 2010] [07:52:02] <sustrik>    everything works as expected
| [Thursday 03 June 2010] [07:52:07] <sustrik>    then you send a message
| [Thursday 03 June 2010] [07:52:25] <sustrik>    but before it gets to the wire you shut down the publisher
| [Thursday 03 June 2010] [07:52:43] <sustrik>    that's it
| [Thursday 03 June 2010] [07:54:01] <umesh>  also this 15s is not predictable time 
| [Thursday 03 June 2010] [07:54:15] <umesh>  some time it can be more or sometime it can be less ...
| [Thursday 03 June 2010] [07:54:26] <sustrik>    it's your code, no?
| [Thursday 03 June 2010] [07:54:30] <umesh>  so what can be the ideal solution to avoid 15 s or sleep 
| [Thursday 03 June 2010] [07:54:30] <sustrik>    sleep (15);
| [Thursday 03 June 2010] [07:54:49] <sustrik>    drop the 15 sec sleep, it's not needed
| [Thursday 03 June 2010] [07:55:03] <sustrik>    what you need to do is to sleep _after_ you send the message
| [Thursday 03 June 2010] [07:55:14] <sustrik>    so the publisher has some time to push the message to the wire
| [Thursday 03 June 2010] [07:55:20] <umesh>  for how much time ?
| [Thursday 03 June 2010] [07:55:22] <umesh>  ok 
| [Thursday 03 June 2010] [07:55:25] <sustrik>    1 ms
| [Thursday 03 June 2010] [07:55:30] <sustrik>    or something
| [Thursday 03 June 2010] [07:55:37] <umesh>  got so even 1 ms will also work ... right eor even less ...
| [Thursday 03 June 2010] [07:55:53] <umesh>  eor* = or 
| [Thursday 03 June 2010] [07:55:54] <umesh>  ok
| [Thursday 03 June 2010] [07:55:56] <umesh>  got
| [Thursday 03 June 2010] [07:55:57] <sustrik>    the latency is in orders of microseconds
| [Thursday 03 June 2010] [07:56:12] <sustrik>    so millisecond should be more than enough
| [Thursday 03 June 2010] [07:58:35] <umesh>  even i micro seconds is also working now ...
| [Thursday 03 June 2010] [07:59:26] <umesh>  also more question ... are REQ/REPLY type of sockets in 0mq syncronous ?
| [Thursday 03 June 2010] [07:59:47] <umesh>  because I haven't seen this issue of sleep for that ...
| [Thursday 03 June 2010] [08:00:21] <sustrik>    they are not, but you cannot experience the problem simply because you wait for reply
| [Thursday 03 June 2010] [08:00:29] <sustrik>    so you cannot quit before the request was sent
| [Thursday 03 June 2010] [08:10:15] <umesh>  ok
| [Thursday 03 June 2010] [08:23:50] <lvh>    What's the recommended thing for debian stable packages?
| [Thursday 03 June 2010] [08:27:06] <mato>   sustrik: ping
| [Thursday 03 June 2010] [08:27:16] <lvh>    I'll compile it if I have to
| [Thursday 03 June 2010] [08:27:17] <mato>   sustrik: will the following do for an update of zmq_tcp(7) for 2.0.7?
| [Thursday 03 June 2010] [08:27:24] <mato>   The flags field consists of a single octet containing various control flags:
| [Thursday 03 June 2010] [08:27:24] <mato>   Bit 0: To Be Continued (TBC). A TBC value of 0 indicates that there are no more message parts to follow; or that the message being sent is not a multi-part message. A TBC value of 1 indicates that the message being sent is a multi-part message and more message parts are to follow.
| [Thursday 03 June 2010] [08:27:30] <mato>   Bits 1-7: Reserved. Bits 1-7 are reserved for future expansion and MUST be set to zero.
| [Thursday 03 June 2010] [08:27:57] <mato>   or do you want to actually explain it in more detail?
| [Thursday 03 June 2010] [08:28:31] <mato>   oh, and of course we can call it MORE if that's the canonical name, I just liked "TBC"
| [Thursday 03 June 2010] [08:37:12] <mato>   sustrik: are you there?
| [Thursday 03 June 2010] [08:50:29] <versificateur>  hi i've a problem again 
| [Thursday 03 June 2010] [08:51:00] <versificateur>  http://pastebin.com/QZJ672jT
| [Thursday 03 June 2010] [08:53:35] <versificateur>  i've this error -> Assertion failed: !inpipe && !outpipe (pair.cpp:47)
| [Thursday 03 June 2010] [08:55:08] <versificateur>  following the muttithread server sustrik wrote i tried to pass a SUBCRIBER message to a thread of P2P
| [Thursday 03 June 2010] [08:55:27] <versificateur>  but it seems that inproc doesn't accept P2P
| [Thursday 03 June 2010] [08:55:53] <versificateur>  if anyone has an idea ...???
| [Thursday 03 June 2010] [11:23:21] <versificateur>  is there anyone tohelp me?
| [Thursday 03 June 2010] [11:42:04] <cremes> versificateur: i'm not as fluent in C as i used to be, so keep that in mind...
| [Thursday 03 June 2010] [11:42:13] <cremes> lines 71 and 77 look wrong to me
| [Thursday 03 June 2010] [11:42:24] <cremes> i don't think you can use P2P/PAIR sockets with the queue device
| [Thursday 03 June 2010] [11:42:45] <cremes> i think you need to make your clients use REQ and your workers use REP sockets
| [Thursday 03 June 2010] [15:22:43] <sustrik>    mato: the text is OK IMO
| [Thursday 03 June 2010] [15:23:06] <sustrik>    MORE is used now, TBC sounded too much like a contagious disease
| [Thursday 03 June 2010] [16:13:02] <sustrik>    mato: would it be possible to remove pgm examples from the build system?
| [Thursday 03 June 2010] [18:15:01] <CIA-17> rbzmq: 03Brian Buchanan 07master * r72d81eb 10/ rbzmq.cpp : add ZMQ.select() wrapper for zmq_poll() function (+6 more commits...) - http://bit.ly/chNoHH
| [Thursday 03 June 2010] [22:02:46] Nick ivan`` is now known as ivan.
| [Thursday 03 June 2010] [23:03:23] Part flaguy48 has left this channel.
| 
| *** Logfile started
| *** on Fri Jun 4 03:05:54 2010
| 
| [Friday 04 June 2010] [03:05:54] Topic  The channel topic is "Welcome!".
| [Friday 04 June 2010] [03:05:54] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Friday 04 June 2010] [03:06:00] Mode   Channel modes: no messages from outside, topic protection
| [Friday 04 June 2010] [03:06:00] Created    This channel was created on 2010-02-05 10:44.
| [Friday 04 June 2010] [03:38:54] <lvh>  Hey.
| [Friday 04 June 2010] [03:39:06] <lvh>  What's the reccomended way to get ZeroMQ running on Debian stable?
| [Friday 04 June 2010] [03:39:30] <lvh>  I've tried manually downloading the libzmq0/zeromq packages, but they require a version of libuuid1 much higher than that in Debian 5.0.
| [Friday 04 June 2010] [03:39:54] <lvh>  Upgrade to testing?
| [Friday 04 June 2010] [04:09:07] <pieterh>  @lvh: grab the git and build from source
| [Friday 04 June 2010] [04:18:21] <lvh>  git master, or some other branch?
| [Friday 04 June 2010] [04:23:32] <sustrik>  lvh: depends on what you want
| [Friday 04 June 2010] [04:23:44] <sustrik>  officially released version is on branch 2.06
| [Friday 04 June 2010] [04:24:01] <sustrik>  trunk is going to be released shortly as version 2.0.7
| [Friday 04 June 2010] [04:44:04] <lvh>  So, for production use, just use the latest release branch. Okay, thanks :-)
| [Friday 04 June 2010] [04:50:51] <sustrik>  you are welcome
| [Friday 04 June 2010] [05:27:52] Part   jugg_ has left this channel.
| [Friday 04 June 2010] [05:29:49] Nick   jugg_ is now known as jugg.
| [Friday 04 June 2010] [06:58:20] <mato> re
| [Friday 04 June 2010] [06:58:34] <mato> sustrik: ack, ok, so MORE instead of TBC, you're right
| [Friday 04 June 2010] [06:58:54] <mato> sustrik: and as for the pgm examples, i'll happily remove those
| [Friday 04 June 2010] [07:38:11] <jugg> does multiple duplicate ZMQ_SUBSCRIBE keep a reference count and require ZMQ_UNSUBSCRIBE for each duplicate subscription?
| [Friday 04 June 2010] [07:46:15] <mato> it's in the doc for ZMQ_UNSUBSCRIBE:
| [Friday 04 June 2010] [07:46:21] <mato> If the socket has several instances of the same filter attached the ZMQ_UNSUBSCRIBE option shall remove only one instance, leaving the rest in place and functional.
| [Friday 04 June 2010] [08:14:50] <jugg> mato: somehow I missed that (I have no idea how).  thanks.
| [Friday 04 June 2010] [08:41:50] <sustrik>  mato: re
| [Friday 04 June 2010] [08:42:21] <mato> sustrik: hi
| [Friday 04 June 2010] [08:42:27] <sustrik>  hi
| [Friday 04 June 2010] [08:42:43] <mato> i have a problem with the helpers in that they need uint64_t, or long long
| [Friday 04 June 2010] [08:43:00] <mato> if i use long long C++ complains that it's not part of the standard :-(
| [Friday 04 June 2010] [08:43:19] <sustrik>  yes, include stdint.hpp
| [Friday 04 June 2010] [08:43:29] <sustrik>  it's ugly but it should work
| [Friday 04 June 2010] [08:43:34] <sustrik>  both under gcc and nsvc
| [Friday 04 June 2010] [08:43:36] <sustrik>  msvc
| [Friday 04 June 2010] [08:50:32] <mato> sustrik: zmqd annoys me, i don't think it should be in the 2.0.7 release at all
| [Friday 04 June 2010] [08:51:05] <sustrik>  you would like to remove it from the trunk?
| [Friday 04 June 2010] [08:51:26] <sustrik>  isn't it sufficient to just left it undocumented?
| [Friday 04 June 2010] [08:51:40] <mato> people will see that this "zmqd" thing is being built
| [Friday 04 June 2010] [08:51:44] <mato> and will get the wrong idea
| [Friday 04 June 2010] [08:52:08] <sustrik>  it has to get in once anyway
| [Friday 04 June 2010] [08:52:19] <sustrik>  either now or later
| [Friday 04 June 2010] [08:52:19] <mato> sustrik: d'you think we could remove it, make the release and then put it back? :-)
| [Friday 04 June 2010] [08:52:51] <mato> sustrik: or at least move it under devices/ and call it zmq_device or something vague like that
| [Friday 04 June 2010] [08:52:53] <sustrik>  if you care so much as to do the work, i won't object
| [Friday 04 June 2010] [08:53:19] <mato> sustrik: i'll do it, but what about the above option?
| [Friday 04 June 2010] [08:53:35] <mato> what is better?
| [Friday 04 June 2010] [08:53:41] <sustrik>  what would be the point?
| [Friday 04 June 2010] [08:53:48] <sustrik>  either leave it or remove it
| [Friday 04 June 2010] [08:53:54] <sustrik>  shrug
| [Friday 04 June 2010] [08:54:48] <mato> well the point is it should replace the existing devices...
| [Friday 04 June 2010] [08:55:20] <mato> the current situation will just confuse people
| [Friday 04 June 2010] [08:55:25] <mato> so let's remove it now
| [Friday 04 June 2010] [08:55:29] <mato> and put it back later
| [Friday 04 June 2010] [08:55:30] <mato> sustrik: ack?
| [Friday 04 June 2010] [08:55:44] <sustrik>  ack
| [Friday 04 June 2010] [09:01:14] <CIA-17>   zeromq2: 03Martin Lucina 07master * rd844a90 10/ (Makefile.am configure.in zmqd/Makefile.am zmqd/zmqd.cpp): zmqd: Removing for now, not ready for 2.0.7 (+6 more commits...) - http://bit.ly/9iefIH
| [Friday 04 June 2010] [09:08:11] <mato> sustrik: ok, all done and committed
| [Friday 04 June 2010] [09:08:16] <mato> sustrik: time to start breaking stuff
| [Friday 04 June 2010] [09:08:34] <sustrik>  ok
| [Friday 04 June 2010] [09:08:46] <sustrik>  let me remove the args from zmq_init
| [Friday 04 June 2010] [09:09:11] <mato> you do that, and remove all the deprecated stuff from zmq.h
| [Friday 04 June 2010] [09:09:21] <mato> and don't forget to update the perf tests
| [Friday 04 June 2010] [09:09:29] <sustrik>  and devices
| [Friday 04 June 2010] [09:09:31] <sustrik>  yes
| [Friday 04 June 2010] [09:24:20] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r67ca7dc 10/ (10 files in 6 dirs): obsolete API elements removed - this commit breaks backward compatibility - http://bit.ly/cLVjTO
| [Friday 04 June 2010] [09:24:25] <sustrik>  mato: done
| [Friday 04 June 2010] [09:24:30] <sustrik>  going to check on win32
| [Friday 04 June 2010] [09:24:46] <mato> sustrik: yup, i will check here on Linux, Solaris, NetBSD
| [Friday 04 June 2010] [09:35:50] <CIA-17>   zeromq2: 03Martin Lucina 07master * r621d741 10/ src/atomic_ptr.hpp : Fix Solaris/NetBSD breakage in atomic_ptr.hpp - http://bit.ly/c24C6Q
| [Friday 04 June 2010] [09:47:43] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r9279938 10/ (6 files in 6 dirs): MSVC build fixed - http://bit.ly/aNzO1F
| [Friday 04 June 2010] [09:50:59] <sustrik>  mato: msvc build is fixed
| [Friday 04 June 2010] [09:51:04] <mato> sustrik: great
| [Friday 04 June 2010] [09:51:09] <sustrik>  however, i believe it braks mingw build
| [Friday 04 June 2010] [09:51:15] <mato> why?
| [Friday 04 June 2010] [09:51:32] <sustrik>  i would expect some include files will be missing
| [Friday 04 June 2010] [09:51:46] <mato> huh?
| [Friday 04 June 2010] [09:52:06] <sustrik>  msvc build uses it's own platform.hpp
| [Friday 04 June 2010] [09:52:16] <sustrik>  which includes win socket headers
| [Friday 04 June 2010] [09:52:32] <sustrik>  this collided with #include <windows.h> in helpers.cpp
| [Friday 04 June 2010] [09:52:34] <sustrik>  so i removed it
| [Friday 04 June 2010] [09:52:51] <sustrik>  however, afaiu mingw build uses standard platform.hpp
| [Friday 04 June 2010] [09:52:54] <mato> can windows.h not be included 2x?
| [Friday 04 June 2010] [09:53:25] <sustrik>  iirc the point in that winsock has to be included _before_ windows.h
| [Friday 04 June 2010] [09:54:00] <mato> i have no idea how a "plain" mingw build works
| [Friday 04 June 2010] [09:54:08] <sustrik>  neither do i
| [Friday 04 June 2010] [09:54:15] <mato> and i suspect that no one does that, or if they do, we've never supported it explicity
| [Friday 04 June 2010] [09:54:33] <sustrik>  what about your win build?
| [Friday 04 June 2010] [09:54:48] <mato> given that a cross-build using mingw does work, then i see no reason for a native one not to
| [Friday 04 June 2010] [09:55:05] <mato> but yes, i should re-check that the cross build still works
| [Friday 04 June 2010] [09:55:10] <sustrik>  please, do
| [Friday 04 June 2010] [09:55:17] <sustrik>  i've changed the source
| [Friday 04 June 2010] [09:55:47] <mato> sustrik: in fact, maybe helpers.h should just include platform.hpp from ../src
| [Friday 04 June 2010] [09:55:54] <mato> would that work for msvc?
| [Friday 04 June 2010] [09:56:01] <sustrik>  i suppose so
| [Friday 04 June 2010] [09:56:53] <sustrik>  ok, change it that way and I retest with MSVC
| [Friday 04 June 2010] [09:57:58] <mato> sustrik: why did you change the snprintf in xmlParser back to sprintf?
| [Friday 04 June 2010] [09:58:40] <mato> sustrik: hang on
| [Friday 04 June 2010] [09:58:54] <mato> sustrik: why do you care about whether or not helpers.hpp includes windows.h?
| [Friday 04 June 2010] [09:58:59] <sustrik>  no snprintf in msvc
| [Friday 04 June 2010] [09:59:19] <sustrik>  because it breaks the build
| [Friday 04 June 2010] [09:59:28] <mato> i don't understand why
| [Friday 04 June 2010] [09:59:35] <mato> the perf tests do not use winsock
| [Friday 04 June 2010] [09:59:55] <sustrik>  but you'll get conflicts
| [Friday 04 June 2010] [10:00:03] <sustrik>  redefinition of symbols
| [Friday 04 June 2010] [10:00:15] <lvh>  Hey! I wanted to get Twisted support for 0MQ a while ago but that kind of fizzled out due to a combination of health problems and technical issues nobody agreed on. I'm going to try again because I think 0MQ support in Twisted would be good for both 0MQ and Twisted (duh). What I think was the critical point of failure was that the interested ZMQ folks didn't really understand Twisted's gory guts and vice versa (Twisted people not
| [Friday 04 June 2010] [10:00:15] <lvh>  understanding what ZMQ really wanted to do). I'm going to reopen the discussion on the Twisted side, but step one is educating people on just how ZMQ (wants to) work. Is there someone who could do a quick (less than 5m) review of the email I'm going to send to the TWisted mailing list to figure out if there are any grave technical mistakes in my understanding of ZMQ?
| [Friday 04 June 2010] [10:00:23] <lvh>  Wow, that was longer than I thought it was.
| [Friday 04 June 2010] [10:00:35] <mato> lvh: maybe it belongs on the mailing list? :-)
| [Friday 04 June 2010] [10:01:01] <lvh>  Which one?
| [Friday 04 June 2010] [10:01:06] <sustrik>  zeromq-dev
| [Friday 04 June 2010] [10:01:10] <sustrik>  i'll review it
| [Friday 04 June 2010] [10:01:17] <mato> sustrik: ah, you get these because stdint.hpp includes platform.hpp, which includes windows.h
| [Friday 04 June 2010] [10:01:17] <sustrik>  others may comment as well
| [Friday 04 June 2010] [10:01:20] <mato> sustrik: right?
| [Friday 04 June 2010] [10:01:24] <sustrik>  mato: right
| [Friday 04 June 2010] [10:01:40] <lvh>  sustrik: Good idea. I'll polish it up some more and then mail zeromq-dev :-)
| [Friday 04 June 2010] [10:01:42] <sustrik>  but i am sure the ordering also matters
| [Friday 04 June 2010] [10:01:51] <sustrik>  lvh: goodo
| [Friday 04 June 2010] [10:02:40] <mato> grr
| [Friday 04 June 2010] [10:02:52] <sustrik>  something like:
| [Friday 04 June 2010] [10:02:59] <sustrik>  #include <windows.h>
| [Friday 04 June 2010] [10:03:05] <sustrik>  #include <winsock2.h>
| [Friday 04 June 2010] [10:03:07] <sustrik>  fail
| [Friday 04 June 2010] [10:03:12] <sustrik>  other way round it's ok
| [Friday 04 June 2010] [10:03:21] <sustrik>  i may be wrong though
| [Friday 04 June 2010] [10:03:36] <sustrik>  it's just a dim memory of this kind of problem
| [Friday 04 June 2010] [10:03:36] <mato> i think you're doing the wrong thing with the msvc platform.hpp
| [Friday 04 June 2010] [10:03:43] <sustrik>  ?
| [Friday 04 June 2010] [10:03:47] <mato> it should not be including windows.h IMO
| [Friday 04 June 2010] [10:04:05] <sustrik>  what would you propose?
| [Friday 04 June 2010] [10:04:45] <mato> i would propose that winsock2.h and windows.h are included inside ifdefs by those components that actually use them
| [Friday 04 June 2010] [10:04:54] <mato> since that is what you're doing with all other system headers
| [Friday 04 June 2010] [10:04:58] <sustrik>  hm, that's lot of files
| [Friday 04 June 2010] [10:05:09] <sustrik>  but yes, it can work that way
| [Friday 04 June 2010] [10:05:21] <mato> yes, but that is consistent with all other platforms
| [Friday 04 June 2010] [10:05:25] <sustrik>  right
| [Friday 04 June 2010] [10:05:27] <sustrik>  let me do it
| [Friday 04 June 2010] [10:05:35] <sustrik>  see you in 10 mins
| [Friday 04 June 2010] [10:05:43] <mato> just stick it inside #ifdef _WIN32
| [Friday 04 June 2010] [10:05:45]     * sustrik is moving to winworld
| [Friday 04 June 2010] [10:10:41] <guido_g>  poor boy :)
| [Friday 04 June 2010] [10:30:11] <CIA-17>   zeromq2: 03Martin Sustrik 07master * rcf048bb 10/ (8 files in 3 dirs): platform.hpp for MSVC contains only very basic stuff - http://bit.ly/aLcqx0
| [Friday 04 June 2010] [10:31:56] <sustrik>  mato: done, try now
| [Friday 04 June 2010] [10:33:48] <mato> sustrik: trying...
| [Friday 04 June 2010] [10:36:50] <mato> sustrik: well, at least you haven't broken it on linux :)
| [Friday 04 June 2010] [10:38:01] <sustrik>  :)
| [Friday 04 June 2010] [10:42:16] <mato> sustrik: i get a bunch of warnings from the cross build about NOMINMAX being redefined in windows.hpp, those weren't there before
| [Friday 04 June 2010] [10:43:16] <sustrik>  try to fix it :)
| [Friday 04 June 2010] [10:43:33] <mato> what is NOMINMAX?
| [Friday 04 June 2010] [10:43:47] <sustrik>  this is exactly why i haven't dared to mess with helper functions :)
| [Friday 04 June 2010] [10:43:58] <sustrik>  windows defines it's own min and max
| [Friday 04 June 2010] [10:44:00] <sustrik>  as macros
| [Friday 04 June 2010] [10:44:10] <sustrik>  those collide with std::min and std::max
| [Friday 04 June 2010] [10:44:22] <sustrik>  so what you do is you define NOMINMAX
| [Friday 04 June 2010] [10:44:28] <sustrik>  then include windows.h
| [Friday 04 June 2010] [10:44:32] <mato> maybe it just needs a #ifndef NOMINMAX, #define 
| [Friday 04 June 2010] [10:44:36] <mato> let me try that
| [Friday 04 June 2010] [10:44:45] <sustrik>  this prevents definition of windows' min & max
| [Friday 04 June 2010] [10:46:52] <jugg> I have a REQ socket connected to an endpoint.  I send a message, and then wait in recv().  However, if the REP socket bound to the endpoint receives the message but dies/disconnects before sending the response, the REQ socket sits forever in recv() and never returns creating a dead lock.  Because when the REP socket comes back online, it doesn't have an requests in its queue so never sends a reply.
| [Friday 04 June 2010] [10:47:26] <sustrik>  jugg: yes, that's a known problem
| [Friday 04 June 2010] [10:47:39] <sustrik>  we are going to fix that by resending the request
| [Friday 04 June 2010] [10:48:14] <sustrik>  at the moment the only thing you can do to avoid it is to poll for reply (zmq_poll + timeout)
| [Friday 04 June 2010] [10:48:38] <sustrik>  when reply doesn't arrive in time just consider it lost and resend
| [Friday 04 June 2010] [10:48:50] <sustrik>  however, all this should be done inside 0mq
| [Friday 04 June 2010] [10:49:09] <sustrik>  it will, but it'll take some more time to get there
| [Friday 04 June 2010] [10:49:45] <jugg> ok, so a near-term fix isn't to be expected?
| [Friday 04 June 2010] [10:50:31] <sustrik>  mato: i would say you are going to implement it, within the scope of your current project, no?
| [Friday 04 June 2010] [10:50:50] <mato> sustrik: guess so
| [Friday 04 June 2010] [10:51:09]     * mato is fighting with the cross-build which is all broken :(
| [Friday 04 June 2010] [10:52:11] <sustrik>  jugg: looks like fix is to expected in near term
| [Friday 04 June 2010] [10:52:23] <jugg> :)
| [Friday 04 June 2010] [10:55:33] <mato> ah, my bad for not using the correct magic incantation
| [Friday 04 June 2010] [11:02:57] <CIA-17>   zeromq2: 03Martin Lucina 07master * r94dfe13 10/ src/windows.hpp : 
| [Friday 04 June 2010] [11:02:57] <CIA-17>   zeromq2: Fix MINGW build
| [Friday 04 June 2010] [11:02:57] <CIA-17>   zeromq2: Mingw seems to define NOMINMAX, so don't redefine it if already defined - http://bit.ly/9k7J9l
| [Friday 04 June 2010] [11:03:31] <mato> sustrik: ok, the cross build almost works; requires hand-patching a pgm include file because steven messed up, but i guess we don't care about that right now
| [Friday 04 June 2010] [11:03:47] <mato> sustrik: and AFAIK steven doesn't care about v2 of openpgm anyway
| [Friday 04 June 2010] [11:04:09] <mato> i just looked and he seems to be developing a version 3 *and* a version 5 :-)
| [Friday 04 June 2010] [11:04:36] <sustrik>  yes, ok
| [Friday 04 June 2010] [11:04:46] <sustrik>  what next?
| [Friday 04 June 2010] [11:05:01] <mato> let me think
| [Friday 04 June 2010] [11:05:12] <mato> 1. write up a draft of the release announcement
| [Friday 04 June 2010] [11:05:34] <mato> 2. put that into NEWS in the distro, moving the non-changelog bits also out of ChangeLog and into NEWS
| [Friday 04 June 2010] [11:06:02] <mato> 3. check that the Debian packaging is sane and put myself in as maintainer
| [Friday 04 June 2010] [11:06:14] <mato> I think that's all; then we can release
| [Friday 04 June 2010] [11:07:24] <sustrik>  ok, i can do 1
| [Friday 04 June 2010] [11:07:29] <mato> yes please
| [Friday 04 June 2010] [11:07:33] <mato> I will do 2 in the mean time
| [Friday 04 June 2010] [11:07:50] <mato> when you have a draft of 1 stick it at the top of NEWS and I'll review it
| [Friday 04 June 2010] [11:07:54] <mato> ack?
| [Friday 04 June 2010] [11:08:48] <sustrik>  ack
| [Friday 04 June 2010] [11:13:14] <CIA-17>   zeromq2: 03Martin Lucina 07master * rbaf659f 10/ (ChangeLog NEWS): Move news from ChangeLog into NEWS - http://bit.ly/dDsRc0
| [Friday 04 June 2010] [11:13:27] <mato> sustrik: look at NEWS, model what you write on the same as is there for 2.0.6
| [Friday 04 June 2010] [11:13:34] <mato> leaving out the bits that don't apply
| [Friday 04 June 2010] [11:44:57] <mato> sustrik: how are you getting on?
| [Friday 04 June 2010] [11:45:25] <mato> sustrik: the debian packaging will have to follow next week, i have a bunch of questions i need to ask adrian
| [Friday 04 June 2010] [11:45:34] <mato> sustrik: since i'm not quite sure that i've got the workflow right
| [Friday 04 June 2010] [11:45:53] <mato> sustrik: so as soon as we have a release announcement we're good to go
| [Friday 04 June 2010] [11:50:55] <sustrik>  on phone
| [Friday 04 June 2010] [11:51:01] <sustrik>  wait a sec
| [Friday 04 June 2010] [11:51:07] <mato> no problem
| [Friday 04 June 2010] [11:59:55] <jugg> http://www.zeromq.org/bindings:c  "C++ binding is the native API of MQ project"  ?
| [Friday 04 June 2010] [12:00:24] <mato> ah, that should be changed
| [Friday 04 June 2010] [12:00:32] <mato> the C API is the "native" API
| [Friday 04 June 2010] [12:00:50] <mato> I think what sustrik meant is that the "C++ binding is included with the core 0MQ distribution"
| [Friday 04 June 2010] [12:01:49] <mato> oh, i see
| [Friday 04 June 2010] [12:01:52] <mato> i'll fix it
| [Friday 04 June 2010] [12:26:15] <sustrik>  mato: re
| [Friday 04 June 2010] [12:26:47] <mato> sustrik: i'm still here...
| [Friday 04 June 2010] [12:27:00] <sustrik>  ok, back to announcement :)
| [Friday 04 June 2010] [12:27:03] <mato> waiting for your draft of what goes in NEWS for 2.0.7
| [Friday 04 June 2010] [12:27:09] <mato> then i will review and add my stuff
| [Friday 04 June 2010] [12:27:13] <sustrik>  ack
| [Friday 04 June 2010] [12:27:44] <sustrik>  what NEWS are you speaking about?
| [Friday 04 June 2010] [12:27:51] <sustrik>  the file seems to be empty
| [Friday 04 June 2010] [12:27:55] <mato> pull git
| [Friday 04 June 2010] [12:28:14] <mato> sustrik: I moved the "interesting" text from ChangeLog into NEWS
| [Friday 04 June 2010] [12:28:26] <mato> leaving the ChangeLog with just... the changes :-)
| [Friday 04 June 2010] [12:28:36] <sustrik>  got it
| [Friday 04 June 2010] [12:31:23] <lvh>  I've sent that mail to zeromq-dev if anyone's interested
| [Friday 04 June 2010] [12:31:40] <lvh>  (but email is an asynchronous process, this is a notification not an interrupt ;-))
| [Friday 04 June 2010] [12:31:49] <sustrik>  mato: pt1
| [Friday 04 June 2010] [12:31:50] <sustrik>  * Multi-hop REQ/REP pattern is fully supprted. This feature allows to put
| [Friday 04 June 2010] [12:31:50] <sustrik>    a device(s) between REP and REP sockets thus allowing for scenarios like
| [Friday 04 June 2010] [12:31:50] <sustrik>    multi-threaded server, shared service queue etc. The whole infrastructure
| [Friday 04 June 2010] [12:31:50] <sustrik>    is transparent to the applications.
| [Friday 04 June 2010] [12:32:27] <lvh>  Huh, I'm not longer a member so I need moderator approval. Wonder how that happened.
| [Friday 04 June 2010] [12:32:37] <sustrik>  lvh: i've approved you
| [Friday 04 June 2010] [12:32:41] <sustrik>  your email
| [Friday 04 June 2010] [12:32:59] <sustrik>  maybe you are subscribed with a different email address?
| [Friday 04 June 2010] [12:33:36] <sustrik>  where's part 1 btw?
| [Friday 04 June 2010] [12:33:38] <lvh>  No, I just checked, for some reason I unsubscribed. No idea why, I don't remember doing that
| [Friday 04 June 2010] [12:33:52] <lvh>  sustrik: Well, that was a month or so back when we were talking about how to implement it
| [Friday 04 June 2010] [12:33:56] <lvh>  that fizzled out
| [Friday 04 June 2010] [12:33:59] <sustrik>  ah, i see
| [Friday 04 June 2010] [12:34:04] <mato> sustrik: write it all up, put it in git, i will review it there
| [Friday 04 June 2010] [12:34:04] <lvh>  so it should really be "try 2" not "part 2"
| [Friday 04 June 2010] [12:34:13] <mato> sustrik: pizza has just arrived, am going to eat, brb
| [Friday 04 June 2010] [12:34:13] <sustrik>  mato: ok
| [Friday 04 June 2010] [12:34:33] <lvh>  Whaaa? now mailman is telling me the confirmation string is bad
| [Friday 04 June 2010] [12:34:52] <lvh>  Oh, wiat, never mind, I'm just being an idiot.
| [Friday 04 June 2010] [12:35:01] <sustrik>  :)
| [Friday 04 June 2010] [12:35:55] <jugg> is there any benefits/tradeoffs documentation/discussion on io_threads?
| [Friday 04 June 2010] [12:36:37] <lvh>  I don't know ZMQ but I know the mechanics it uses
| [Friday 04 June 2010] [12:36:56] <lvh>  I really don't see why you would ever want 2 io_threads unless you can somehow shove long-term blocking disk io into the io thread
| [Friday 04 June 2010] [12:37:30] <lvh>  which afaik doesn't happen very often (does it?)
| [Friday 04 June 2010] [12:37:42] <sustrik>  lvh: two possibilities
| [Friday 04 June 2010] [12:37:54] <sustrik>  1. if your app is extremely network I/O intensive
| [Friday 04 June 2010] [12:38:07] <sustrik>  2. if you need extra low latency
| [Friday 04 June 2010] [12:38:15] <lvh>  I can sort-of understand 2
| [Friday 04 June 2010] [12:38:27] <lvh>  I don't understand why eg epoll would start behaving better for 1
| [Friday 04 June 2010] [12:38:36] <sustrik>  in latter case running i/o threads on two different cpu cores can prevent latency peaks
| [Friday 04 June 2010] [12:38:51] <lvh>  yep
| [Friday 04 June 2010] [12:38:57] <sustrik>  it's not about epoll
| [Friday 04 June 2010] [12:39:13] <lvh>  It's about 1 CPU moving stuff around vs 2 CPUs doing that?
| [Friday 04 June 2010] [12:39:19] <sustrik>  rather about the associated work (such as copying data from kernel to user space)
| [Friday 04 June 2010] [12:39:24] <lvh>  right
| [Friday 04 June 2010] [12:39:37] <lvh>  I guess, I haven't done the benchmarks and I'm assuming you have :)
| [Friday 04 June 2010] [12:39:44] <sustrik>  yes :)
| [Friday 04 June 2010] [12:40:05] <lvh>  is there a way to shove blocking disk IO into the io thread in zmq?
| [Friday 04 June 2010] [12:40:09] <lvh>  I mean a *sane* way.
| [Friday 04 June 2010] [12:41:46] <lvh>  Oh, by the way: how does "Is fully distributed: no central servers to crash, millions of WAN and LAN nodes." apply to things like zmq_forwarder/zmq_queue? AFAICT it doesn't, really?
| [Friday 04 June 2010] [12:42:03] <lvh>  My use case involves decoupling M producers from N consumers. That's what we use AMQP for now.
| [Friday 04 June 2010] [12:45:58] <lvh>  (The three things blocking us from moving to ZeroMQ at the moment are: it doesn't do Twisted yet, Thrift support uncertain for a lot of implementations (even though that's more of a Thrift problem than a ZeroMQ problem), and reliable delivery is a bit hazy)
| [Friday 04 June 2010] [12:50:07] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r9b8f902 10/ NEWS : initial version of 2.0.7 NEWS - http://bit.ly/a8mp7Z
| [Friday 04 June 2010] [12:50:23] <sustrik>  mato: committed "new features" and "interface"
| [Friday 04 June 2010] [12:50:35] <sustrik>  i'll leave "build" part to you
| [Friday 04 June 2010] [12:51:14] <sustrik>  lvh: yes, forwarder/queue is meant
| [Friday 04 June 2010] [12:51:30] <mato> sustrik: ok, going to look at it now
| [Friday 04 June 2010] [12:51:38] <sustrik>  these are not real "central servers"
| [Friday 04 June 2010] [12:51:42] <sustrik>  rather dumb routers
| [Friday 04 June 2010] [12:52:00] <sustrik>  what's thrift?
| [Friday 04 June 2010] [12:52:28] <lvh>  sustrik: Do you know Protocol Buffers?
| [Friday 04 June 2010] [12:52:38] <sustrik>  yes
| [Friday 04 June 2010] [12:52:42] <lvh>  sustrik: Basically, Thrift is something that you describe data structures and services to
| [Friday 04 June 2010] [12:52:44] <lvh>  sustrik: Oh, even better
| [Friday 04 June 2010] [12:52:49] <lvh>  sustrik: thrift = protobufs + rpc
| [Friday 04 June 2010] [12:52:54] <sustrik>  ok, got it
| [Friday 04 June 2010] [12:53:05] <lvh>  sustrik: you describe services and it generates code for a whole bunch of languages
| [Friday 04 June 2010] [12:53:09] <sustrik>  what does it have to do with 0mq?
| [Friday 04 June 2010] [12:53:25] <lvh>  sustrik: it's not 0mq's problem, but I want to put the binary format in zmq messages
| [Friday 04 June 2010] [12:53:31] <sustrik>  can the transport layer be migrated to whatever messaging implementation you like?
| [Friday 04 June 2010] [12:53:37] <lvh>  sustrik: a lot of thrift bindings dont give you the format directly
| [Friday 04 June 2010] [12:53:43] <lvh>  sustrik: yes unless those implementations suck
| [Friday 04 June 2010] [12:53:49] <lvh>  sustrik: like I said, that's not 0mq's problem
| [Friday 04 June 2010] [12:53:53] <sustrik>  ok, i see
| [Friday 04 June 2010] [12:54:01] <sustrik>  reliability: yes
| [Friday 04 June 2010] [12:54:04] <lvh>  sustrik: they just hook it directly into their service code
| [Friday 04 June 2010] [12:54:17] <sustrik>  it'll get better soon though
| [Friday 04 June 2010] [12:54:40] <lvh>  the python thrift code does the right thing, it essentially gives you objects that have serialization methods that return raw bytestrings
| [Friday 04 June 2010] [12:54:50] <lvh>  "raw" makes no sense there, you get the idea
| [Friday 04 June 2010] [12:55:05] <sustrik>  sure
| [Friday 04 June 2010] [12:55:09] <lvh>  sustrik: Cool :-) We can wait, AMQP works fine in production now anywya
| [Friday 04 June 2010] [12:57:24] <mato> sustrik: put devices between REP and REP sockets, you mean REQ and REP sockets?
| [Friday 04 June 2010] [13:01:11] <sustrik>  mato: yes
| [Friday 04 June 2010] [13:01:17] <sustrik>  typo
| [Friday 04 June 2010] [13:03:30] <sustrik>  mato: i have to leave now
| [Friday 04 June 2010] [13:03:39] <sustrik>  anything else i should do?
| [Friday 04 June 2010] [13:04:14] <mato> sustrik: well, if you're happy with me uploading everything and sending out the release announcement, then no
| [Friday 04 June 2010] [13:04:29] <sustrik>  great
| [Friday 04 June 2010] [13:04:40] <mato> ok then
| [Friday 04 June 2010] [13:04:51] <sustrik>  just a note
| [Friday 04 June 2010] [13:04:58] <sustrik>  when sending an announcement
| [Friday 04 June 2010] [13:05:00] <mato> yes?
| [Friday 04 June 2010] [13:05:23] <sustrik>  note that API/ABI have changed and that it may take few days for language bindings to catch up
| [Friday 04 June 2010] [13:05:38] <mato> yes, good point
| [Friday 04 June 2010] [13:06:03] <mato> i'm changing your text a bit, do you mind?
| [Friday 04 June 2010] [13:07:14] <sustrik>  sure, do so
| [Friday 04 June 2010] [13:07:15] <versificateur>    hello
| [Friday 04 June 2010] [13:07:19] <sustrik>  leaving now
| [Friday 04 June 2010] [13:07:22] <sustrik>  see you  later
| [Friday 04 June 2010] [13:07:24] <mato> see you
| [Friday 04 June 2010] [13:08:25] <versificateur>    does the java bindings (jzmq) support rcv multipart??
| [Friday 04 June 2010] [13:08:54] <versificateur>    mato:??
| [Friday 04 June 2010] [13:09:03] <versificateur>    sustrik:??
| [Friday 04 June 2010] [13:09:12] <mato> versificateur: i don't use jzmq, sorry
| [Friday 04 June 2010] [13:09:23] <mato> but there's no reason why it shouldn't
| [Friday 04 June 2010] [13:09:43] <versificateur>    :( thanks
| [Friday 04 June 2010] [13:10:06] <mato> versificateur: if it doesn't work then report a bug :)
| [Friday 04 June 2010] [13:10:48] <versificateur>    okay 
| [Friday 04 June 2010] [13:21:04] <CIA-17>   zeromq2: 03Martin Lucina 07master * re8a9614 10/ NEWS : Update NEWS for 2.0.7 release - http://bit.ly/9Hb3hZ
| [Friday 04 June 2010] [13:31:05] <CIA-17>   zeromq2: 03Martin Lucina 07master * r5c97ff9 10/ NEWS : More NEWS for 2.0.7 - http://bit.ly/cwE7pj
| [Friday 04 June 2010] [13:31:05] <CIA-17>   zeromq2: 03Martin Lucina 07master * r8f51a10 10/ ChangeLog : Update ChangeLog for v2.0.7 - http://bit.ly/cgL2VL
| [Friday 04 June 2010] [14:35:19] <versificateur>    please could you tell what this error refer to??
| [Friday 04 June 2010] [14:35:25] <versificateur>    Assertion failed: !inpipe && !outpipe (pair.cpp:47)
| [Friday 04 June 2010] [23:07:13] <jugg> I'm getting a Segmentation fault from within the first time I call zmq::poll, I haven't put it through a debugger yet...
| [Friday 04 June 2010] [23:08:56] <jugg> is pollitem_t[n].socket expecting a socket pointer?
| [Friday 04 June 2010] [23:09:45] <jugg> hmm, apparently not, nevermind.
| [Saturday 05 June 2010] [00:52:56] <CIA-17> rbzmq: 03Brian Buchanan 07master * ra5e4d99 10/ rbzmq.cpp : fix some type-checking bugs in ZMQ.select() - http://bit.ly/bQsfwP
| [Saturday 05 June 2010] [01:21:17] <CIA-17> rbzmq: 03Brian Buchanan 07master * rd11835f 10/ (rbzmq.cpp zmq.gemspec): Update for ZeroMQ 2.0.7 - http://bit.ly/bIgwVj
| [Saturday 05 June 2010] [01:22:58] <CIA-17> rbzmq: 03Brian Buchanan 07master * rcb96877 10/ (4 files): Update perf tests for 2.0.7 - http://bit.ly/bKk2zC
| [Saturday 05 June 2010] [04:08:50] Nick Nickname already in use. Trying palexander.
| [Saturday 05 June 2010] [04:08:52] Notice   -NickServ- palexander is not a registered nickname.
| [Saturday 05 June 2010] [04:08:52] CTCP Received Version request from frigg.
| [Saturday 05 June 2010] [04:08:53] Topic    The channel topic is "Welcome!".
| [Saturday 05 June 2010] [04:08:53] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Saturday 05 June 2010] [04:08:59] Mode Channel modes: no messages from outside, topic protection
| [Saturday 05 June 2010] [04:08:59] Created  This channel was created on 2010-02-05 10:44.
| [Saturday 05 June 2010] [04:09:02] Notice   -ChanServ- [#rekonq] welcome to rekonq, webkit KDE browser, channel
| [Saturday 05 June 2010] [06:03:23] <oleg_>  hello
| [Saturday 05 June 2010] [07:48:11] <zeromqer>   hey, i'm having some problems following first recipe on the cookbook
| [Saturday 05 June 2010] [07:48:32] <zeromqer>   http://dpaste.com/203476/
| [Saturday 05 June 2010] [07:49:35] <zeromqer>   compiles, and starts up and creates two threads, but doesn't seem to respond to anything
| [Saturday 05 June 2010] [07:50:03] <zeromqer>   also the first fprint doesn't print when i include zmq_recv later on
| [Saturday 05 June 2010] [08:06:27] <jugg>   zeromqer: what version of zeromq are you using?
| [Saturday 05 June 2010] [08:10:15] <zeromqer>   jugg: master from the git repo right now
| [Saturday 05 June 2010] [08:10:51] <zeromqer>   had to change the zmq_inits to use just a single parameter from the pastie
| [Saturday 05 June 2010] [08:12:38] <jugg>   can you paste the REQ handler code?
| [Saturday 05 June 2010] [08:18:53] <zeromqer>   jugg: here's the updated code for both: http://dpaste.com/203484/
| [Saturday 05 June 2010] [08:20:41] <jugg>   does this actually work: zmq_connect(s, "tcp://*:9555");
| [Saturday 05 June 2010] [08:21:06] <mikko>  zmq_connect(s, "tcp://*:9555");
| [Saturday 05 June 2010] [08:21:12] <mikko>  i dont think it does
| [Saturday 05 June 2010] [08:21:17] <mikko>  try specifying ip
| [Saturday 05 June 2010] [08:21:37] <mikko>  does *:9995 bind ok?
| [Saturday 05 June 2010] [08:21:44] <jugg>   there is an assert after binding
| [Saturday 05 June 2010] [08:21:45] <mikko>  i would imagine that it is 0.0.0.0:9995
| [Saturday 05 June 2010] [08:22:36] <zeromqer>   yeah, the assert gives no issues
| [Saturday 05 June 2010] [08:22:52] <zeromqer>   mikko: but i did just try specifying my ip and still no luck
| [Saturday 05 June 2010] [08:23:02] <jugg>   127.0.0.1 ?
| [Saturday 05 June 2010] [08:23:36] <zeromqer>   jugg: yeah, both that and my eth0 ip
| [Saturday 05 June 2010] [08:23:39] <mikko>  and no firewall in between?
| [Saturday 05 June 2010] [08:23:50] <zeromqer>   same computer :P
| [Saturday 05 June 2010] [08:23:59] <mikko>  eth0 might still be firewalled
| [Saturday 05 June 2010] [08:24:26] <jugg>   nothing else jumps out, try "inproc://test" instead.
| [Saturday 05 June 2010] [08:24:28] <zeromqer>   oh, good point. but yeah, no firewall on my machine
| [Saturday 05 June 2010] [08:24:39] <zeromqer>   ah, hm.. good idea
| [Saturday 05 June 2010] [08:26:35] <zeromqer>   jugg: assert fails on the client when i use "inproc://test", anything special i should be doing?
| [Saturday 05 June 2010] [08:27:37] <mikko>  try icp:///tmp/test.sock instead
| [Saturday 05 June 2010] [08:27:47] <mikko>  i had some problems with inproc some time ago as well
| [Saturday 05 June 2010] [08:28:13] <zeromqer>   opps, yeah, i was running them as separate processes anyway... switching to ipc
| [Saturday 05 June 2010] [08:30:42] <zeromqer>   mikko: and now the server bind assert fails... (using "icp:///tmp/test.sock")
| [Saturday 05 June 2010] [08:31:43] <zeromqer>   does zmq_bind set any error messages?
| [Saturday 05 June 2010] [08:33:18] <mikko>  use zmq_strerror
| [Saturday 05 June 2010] [08:35:45] <zeromqer>   ha, "Error occurred during zmq_init(): Protocol not supported"
| [Saturday 05 June 2010] [08:37:13] <zeromqer>   any chance i configured zmq wrong?
| [Saturday 05 June 2010] [08:40:47] <sustrik>    ipc
| [Saturday 05 June 2010] [08:40:49] <sustrik>    not icp
| [Saturday 05 June 2010] [08:44:09] <mikko>  sorry 
| [Saturday 05 June 2010] [08:44:11] <mikko>  my typo
| [Saturday 05 June 2010] [08:50:22] <zeromqer>   mikko: ha, well it survived past both of us! thanks sustrik
| [Saturday 05 June 2010] [08:50:35] <zeromqer>   anyway... server runs, client immediately segfaults
| [Saturday 05 June 2010] [08:51:17] <zeromqer>   here's a backtrace: http://dpaste.com/203497/
| [Saturday 05 June 2010] [08:51:56] <sustrik>    zeromqer: what are you doing?
| [Saturday 05 June 2010] [08:52:40] <sustrik>    looks like you are passing invalid message to recv function
| [Saturday 05 June 2010] [08:52:46] <zeromqer>   hm..
| [Saturday 05 June 2010] [08:54:02] <zeromqer>   sustrik: sweet, i commented out that section and got some communication between server and client
| [Saturday 05 June 2010] [08:57:19] <zeromqer>   does anything look really wrong in section? http://dpaste.com/203498/ (last two stanzas are what i commented out)
| [Saturday 05 June 2010] [09:00:25] <sustrik>    you don't initialise the message
| [Saturday 05 June 2010] [09:00:36] <sustrik>    zmq_msg_init (&response);
| [Saturday 05 June 2010] [09:06:47] <zeromqer>   sustrik: argh.. initialized now, and all working, thanks
| [Saturday 05 June 2010] [09:07:07] <zeromqer>   my only issue is that the now working code over ipc still does nothing over tcp
| [Saturday 05 June 2010] [09:07:49] <sustrik>    show us your test prog
| [Saturday 05 June 2010] [09:11:40] <CIA-17> jzmq: 03Martin Sustrik 07master * r1a16589 10/ (7 files in 3 dirs): updated to match 0MQ/2.0.7 - http://bit.ly/bWgan8
| [Saturday 05 June 2010] [09:11:48] <zeromqer>   sustrik: server.c http://dpaste.com/203503/ and client.c http://dpaste.com/203504/
| [Saturday 05 June 2010] [09:13:40] <zeromqer>   also, if i interrupt them both with gdb, i get an equivalent backtrace: http://dpaste.com/203505/
| [Saturday 05 June 2010] [09:13:52] <sustrik>    zeromqer: you are connecting both sides
| [Saturday 05 June 2010] [09:13:56] <sustrik>    server should bind
| [Saturday 05 June 2010] [09:14:29] <zeromqer>   what? srsly?
| [Saturday 05 June 2010] [09:14:34] <zeromqer>   typo, brb
| [Saturday 05 June 2010] [09:14:48] <sustrik>    jugg: are you still there?
| [Saturday 05 June 2010] [09:14:51] <sustrik>    what assert?
| [Saturday 05 June 2010] [09:15:16] <zeromqer>   works great now!
| [Saturday 05 June 2010] [09:15:20] <sustrik>    :)
| [Saturday 05 June 2010] [09:15:26] <zeromqer>   thanks so much guys
| [Saturday 05 June 2010] [09:15:45] <zeromqer>   sorry if i was a pain, i'm a bit in unfamiliar territory...
| [Saturday 05 June 2010] [09:16:05] <sustrik>    you are welcome
| [Saturday 05 June 2010] [09:16:33] <jugg>   sustrik: yes, the assert in the code example that was pasted.
| [Saturday 05 June 2010] [09:17:36] <sustrik>    i'm lost
| [Saturday 05 June 2010] [09:17:43] <sustrik>    are _you_ seeing the assert?
| [Saturday 05 June 2010] [09:17:56] <sustrik>    or is it zeromqer's assert?
| [Saturday 05 June 2010] [09:18:26] <sustrik>    <mikko> does *:9995 bind ok?
| [Saturday 05 June 2010] [09:18:26] <sustrik>    <jugg> there is an assert after binding
| [Saturday 05 June 2010] [09:18:26] <sustrik>    <mikko> i would imagine that it is 0.0.0.0:9995
| [Saturday 05 June 2010] [09:18:26] <sustrik>    <zeromqer> yeah, the assert gives no issues
| [Saturday 05 June 2010] [09:19:02] <sustrik>    is it the one we just solved or something unrelated
| [Saturday 05 June 2010] [09:19:03] <sustrik>    ?
| [Saturday 05 June 2010] [09:24:11] <jugg>   sustrik: I was simply stating that if the binding failed, zeromqer would see an assert.  I never ran that code.
| [Saturday 05 June 2010] [09:24:30] <sustrik>    ah, ok
| [Saturday 05 June 2010] [09:24:37] <sustrik>    sorry for confusion
| [Saturday 05 June 2010] [09:24:43] <jugg>   np
| [Saturday 05 June 2010] [09:25:56] <jugg>   nice work with the latest round of updates.  Things appear to be working well... the documentation updates are great.  I should have waited a couple of weeks to start learning. :P
| [Saturday 05 June 2010] [09:28:03] <zeromqer>   sustrik: jugg: *:9995 works as well btw, it was all my fault from the beginning :P
| [Saturday 05 June 2010] [09:31:20] <sustrik>    :)
| [Saturday 05 June 2010] [10:05:47] <CIA-17> clrzmq: 03Martin Sustrik 07master * rf8bfa69 10/ (5 files in 5 dirs): updated to match 0MQ/2.0.7 - http://bit.ly/dlnSkU
| 
| *** Logfile started
| *** on Sat Jun 5 12:56:55 2010
| 
| [Saturday 05 June 2010] [12:56:55] Topic    The channel topic is "Welcome!".
| [Saturday 05 June 2010] [12:56:55] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Saturday 05 June 2010] [12:57:01] Mode Channel modes: no messages from outside, topic protection
| [Saturday 05 June 2010] [12:57:01] Created  This channel was created on 2010-02-05 10:44.
| [Saturday 05 June 2010] [12:57:42] <versificateur>  I want to have a server that send message to a list of clients
| [Saturday 05 June 2010] [12:58:44] <versificateur>  but the problem is that client/ server should work without blocking
| [Saturday 05 June 2010] [12:59:09] <versificateur>  when a client send a REQ
| [Saturday 05 June 2010] [12:59:38] <versificateur>  it should be able to send another REQ without leavaing an exception
| [Saturday 05 June 2010] [13:00:22] <versificateur>  due to fact that server can take some times to reply the client
| [Saturday 05 June 2010] [13:00:41] <versificateur>  mikko: do you follow me??
| [Saturday 05 June 2010] [13:06:45] <mikko>  i do
| [Saturday 05 June 2010] [13:07:09] <mikko>  but as far as a i know req/rep pattern works in that kind of sequence
| [Saturday 05 June 2010] [13:07:18] <mikko>  request/reply/request/reply etc
| [Saturday 05 June 2010] [13:09:04] <versificateur>  so no possibility to request/request/send/send ...
| [Saturday 05 June 2010] [13:09:45] <mikko>  what kind of use case is this?
| [Saturday 05 June 2010] [13:09:52] <mikko>  does the server do a lot of processing with the data?
| [Saturday 05 June 2010] [13:11:54] <versificateur>  now if you do a request you have to wait for an reply before sending another request (in REP/REQ pattern)
| [Saturday 05 June 2010] [13:12:38] <mikko>  that's how i've understood req/rep pattern
| [Saturday 05 June 2010] [13:13:16] <versificateur>  but I need to send as much as request I want whitout blocking by waiting the reply
| [Saturday 05 June 2010] [13:13:17] <mikko>  i might be wrong in this as well
| [Saturday 05 June 2010] [13:13:37] <versificateur>  like the PAIR/PAIR pattern
| [Saturday 05 June 2010] [13:14:20] <versificateur>  but the PAIR/PAIR only accept to connections
| [Saturday 05 June 2010] [13:14:30] <versificateur>  two connections
| [Saturday 05 June 2010] [13:16:07] <mikko>  hmm
| [Saturday 05 June 2010] [13:16:19] <mikko>  the way i would probably do it is:
| [Saturday 05 June 2010] [13:16:39] <mikko>  server uses req/rep pattern and also publisher
| [Saturday 05 June 2010] [13:16:55] <mikko>  client sends request, server replies immediately with id-number or uuid 
| [Saturday 05 June 2010] [13:17:16] <mikko>  server processes the data in background and PUBLISHes the result in a topic
| [Saturday 05 June 2010] [13:17:28] <mikko>  the client is subscribed to the topic and receives the reply async
| [Saturday 05 June 2010] [13:17:37] <mikko>  when ever the server is ready to give it
| [Saturday 05 June 2010] [13:17:43] <mikko>  makes sense?
| [Saturday 05 June 2010] [13:19:25] <versificateur>  yes...
| [Saturday 05 June 2010] [13:19:55] <versificateur>  it's a way to resolve the problem
| [Saturday 05 June 2010] [13:20:21] <mikko>  i gotta go to the gym
| [Saturday 05 June 2010] [13:20:26] <mikko>  i'll be back in about 1.5 hours
| [Saturday 05 June 2010] [13:21:06] <versificateur>  thanks for your help and see you later...
| [Saturday 05 June 2010] [13:23:31] Mode ChanServ gives CIA-17 permission to talk.
| [Saturday 05 June 2010] [13:36:22] <CIA-17> rbzmq: 03Brian Buchanan 07master * r998a64a 10/ rbzmq.cpp : fix zmq_send() and zmq_recv() for Ruby 1.9 - http://bit.ly/bsSDT7
| [Saturday 05 June 2010] [13:49:34] <sustrik>    versificateur: is the server sending replies?
| [Saturday 05 June 2010] [13:49:57] <versificateur>  sustrik: yes
| [Saturday 05 June 2010] [13:50:00] <sustrik>    if so, you can use XREQ socket on the client side
| [Saturday 05 June 2010] [13:50:16] <versificateur>  but asynchrously
| [Saturday 05 June 2010] [13:50:18] <sustrik>    it's like REQ but does not force you to wait for answer
| [Saturday 05 June 2010] [13:50:56] <sustrik>    REP side is OK as is for you?
| [Saturday 05 June 2010] [13:52:56] <versificateur>  so XREP allow to send reply without wait for request?
| [Saturday 05 June 2010] [13:53:05] <sustrik>    yes
| [Saturday 05 June 2010] [13:53:54] <sustrik>    you should be aware that during the request transmission ID of the sender is sticked to the request
| [Saturday 05 June 2010] [13:54:09] <sustrik>    when using REQ/REP, 0MQ manages it for you transparently
| [Saturday 05 June 2010] [13:54:19] <sustrik>    with XREP/XREQ you have to manage it by hand
| [Saturday 05 June 2010] [13:54:38] <sustrik>    so when you send message X on the xreq side
| [Saturday 05 June 2010] [13:54:48] <sustrik>    you'll get a two-part message on the xrep side
| [Saturday 05 June 2010] [13:55:06] <sustrik>    first part is the ID of the client that send the request (opaque binary BLOB)
| [Saturday 05 June 2010] [13:55:11] <sustrik>    second part is X
| [Saturday 05 June 2010] [13:55:29] <sustrik>    when you want to send the reply
| [Saturday 05 June 2010] [13:55:47] <sustrik>    you have to stick the client ID in the front of your reply
| [Saturday 05 June 2010] [13:56:01] <sustrik>    so you send a two-part messahe, ID + reply itself
| [Saturday 05 June 2010] [13:56:11] <sustrik>    makes sense?
| [Saturday 05 June 2010] [13:56:55] <versificateur>  yes 
| [Saturday 05 June 2010] [13:57:31] <versificateur>  is there some code examples??
| [Saturday 05 June 2010] [13:57:58] <sustrik>    hm, not really
| [Saturday 05 June 2010] [13:58:20] <sustrik>    you may ask on the mailing list, presumably someone is already using it in that way
| [Saturday 05 June 2010] [13:58:29] <versificateur>  okay
| [Saturday 05 June 2010] [13:58:49] <versificateur>  does the jzmq support it? (in the 2.06 version)
| [Saturday 05 June 2010] [13:59:08] <sustrik>    i think getsockopt is still missing
| [Saturday 05 June 2010] [13:59:48] <sustrik>    it's needed to find out whether message consists of single or multiple parts
| [Saturday 05 June 2010] [14:00:00] <sustrik>    just implement it if needed, it should be easy
| [Saturday 05 June 2010] [14:01:39] <versificateur>  okay... it's the RECV_MORE method?
| [Saturday 05 June 2010] [14:02:27] <sustrik>    in C it's getsockopt (s, ZMQ_RCVMORE, &more, &more_size);
| [Saturday 05 June 2010] [14:02:52] <sustrik>    in java you can either implement generic getsockopt method
| [Saturday 05 June 2010] [14:03:08] <sustrik>    or special getRcvMore ()
| [Saturday 05 June 2010] [14:03:19] <versificateur>  okay
| 
| *** Logfile started
| *** on Sat Jun 5 15:54:00 2010
| 
| [Saturday 05 June 2010] [15:54:00] Topic    The channel topic is "Welcome!".
| [Saturday 05 June 2010] [15:54:00] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Saturday 05 June 2010] [15:54:06] Mode Channel modes: no messages from outside, topic protection
| [Saturday 05 June 2010] [15:54:06] Created  This channel was created on 2010-02-05 10:44.
| [Saturday 05 June 2010] [16:33:31] <versificateur>  mikko: sustrik give me all information
| [Saturday 05 June 2010] [16:33:48] <versificateur>  sustrik: are you there?
| [Saturday 05 June 2010] [16:34:18] <sustrik>    versificateur: yes
| [Saturday 05 June 2010] [16:34:21] <sustrik>    what's up?
| [Saturday 05 June 2010] [16:34:49] <versificateur>  i want to know if java binding support device ZMQ_QUEUE?
| [Saturday 05 June 2010] [16:35:22] <sustrik>    you mean an in-process device?
| [Saturday 05 June 2010] [16:35:37] <versificateur>  yes
| [Saturday 05 June 2010] [16:35:49] <versificateur>  like your multithreaded example
| [Saturday 05 June 2010] [16:36:17] <sustrik>    the zmq_device method is not exposed via java binding
| [Saturday 05 June 2010] [16:36:23] <sustrik>    you would have to add that as well
| [Saturday 05 June 2010] [16:38:02] <versificateur>  a look to jzmq could help?
| [Saturday 05 June 2010] [16:38:37] <sustrik>    i mean you would have to expose the zmq_device function via jzmq
| [Saturday 05 June 2010] [16:38:58] <sustrik>    it's few lines of code afaict
| [Saturday 05 June 2010] [16:39:54] <sustrik>    have a look at how other functions are wrapped and do it in similar manner
| [Saturday 05 June 2010] [16:41:29] <versificateur>  i'll try and send you back the result for approval
| [Saturday 05 June 2010] [16:42:06] <sustrik>    great, that'll make life easier for all the java users of 0mq :)
| [Saturday 05 June 2010] [23:09:11] <postmodern> im having trouble compiling zeromq 2.0.7 on Fedora13
| [Saturday 05 June 2010] [23:09:17] <postmodern> mainly it cannot find libuuid
| [Saturday 05 June 2010] [23:09:28] <postmodern> since fedora installs it to /lib/libuuid.so.1
| [Saturday 05 June 2010] [23:09:40] <postmodern> once i created a libuuid.so symlink to libuuid.so.1, it worked
| [Saturday 05 June 2010] [23:10:44] <postmodern> fedora13 is apparently using libuuid 2.17.2
| [Saturday 05 June 2010] [23:10:59] <postmodern> also there's no uuid/uuid.h only /usr/include/uuid.h
| [Sunday 06 June 2010] [02:53:01] <postmodern>   when did the prototype for zmq_init change
| [Sunday 06 June 2010] [02:53:07] <postmodern>   it used to take 3 arguments, now it only takes 1
| [Sunday 06 June 2010] [17:10:07] <zedas>    sustrik: hey, 2.0.7 had some sudden changes that has completely broken the python module
| [Sunday 06 June 2010] [17:10:34] <zedas>    sustrik: actually, probably all of them except C and C++.  did you talk with anyone before just rolling that out?
| [Sunday 06 June 2010] [17:17:29] <zedas>    sustrik: well i'm attempting to fix the python driver, but if you're going to make API changes at the last minute before releases then that's seriously uncool.
| [Sunday 06 June 2010] [17:17:58] <sustrik>  zedas:hi
| [Sunday 06 June 2010] [17:18:05] <sustrik>  any better idea?
| [Sunday 06 June 2010] [17:18:36] <zedas>    make the change and then wait until all the maintainers catch up
| [Sunday 06 June 2010] [17:19:20] <zedas>    i mean you must have made this change last week right before release because i was trakcing your git and the pyzmq git
| [Sunday 06 June 2010] [17:19:44] <sustrik>  yes, it was made immediately before release
| [Sunday 06 June 2010] [17:20:05] <zedas>    instead, 2.0.7 should have had the old api, and then 2.0.8 could have the new one.
| [Sunday 06 June 2010] [17:20:28] <sustrik>  the problem is with sync of 0mq core and bindings
| [Sunday 06 June 2010] [17:20:37] <sustrik>  bindings are independent projects
| [Sunday 06 June 2010] [17:21:10] <sustrik>  how would you sync in such an environment?
| [Sunday 06 June 2010] [17:21:26] <sustrik>  the real solution is to make bindings make numbered releases
| [Sunday 06 June 2010] [17:21:37] <zedas>    do you have a mailing list?
| [Sunday 06 June 2010] [17:21:51] <sustrik>  go on, propose a solution
| [Sunday 06 June 2010] [17:21:57] <zedas>    you definitely don't sync by just changing the base zmq_init api in a release.
| [Sunday 06 June 2010] [17:22:05] <sustrik>  so?
| [Sunday 06 June 2010] [17:22:26] <zedas>    well that breaks everything.  it's fundamental to many dependencies
| [Sunday 06 June 2010] [17:22:45] <sustrik>  i know, i have no solution though
| [Sunday 06 June 2010] [17:22:59] <zedas>    i suggest this: point releases never change base APIs.  people cna rely on 2.0.7 and 2.0.8 being compilation compatible.
| [Sunday 06 June 2010] [17:23:38] <zedas>    next, if you want to change the API, then you make the decision to boost the 2nd number and people know it.
| [Sunday 06 June 2010] [17:23:55] <zedas>    then, right before you make the API change, release a final point release with the old api, and start on the new one.
| [Sunday 06 June 2010] [17:24:18] <zedas>    that way, i can get the important bug fixes and changes just before the API change, and I can keep working while you can advance the API.
| [Sunday 06 June 2010] [17:24:23] <sustrik>  so you propose maintaining 2 codebases, old compatibility one and a development one?
| [Sunday 06 June 2010] [17:24:35] <zedas>    nope no need for that, since you got git.
| [Sunday 06 June 2010] [17:24:43] <zedas>    if i need 2.0.7 i grab that revision
| [Sunday 06 June 2010] [17:24:52] <sustrik>  backporting of bug fixes?
| [Sunday 06 June 2010] [17:25:06] <zedas>    i'm saying you have a release policy.  dont change the API without doing a point release and then bump the 2nd version number
| [Sunday 06 June 2010] [17:25:33] <zedas>    if someone needs to then they will, but with git backports are way easier
| [Sunday 06 June 2010] [17:25:56] <sustrik>  actually beckward incompatible change should bump the major revision
| [Sunday 06 June 2010] [17:26:03] <zedas>    it's really just a communication policy.  you're saying "you can base your software on point releases"
| [Sunday 06 June 2010] [17:26:29] <sustrik>  so far we've tried to avoid insane version like 27.0.0
| [Sunday 06 June 2010] [17:26:41] <sustrik>  so we've just tagged it as "beta"
| [Sunday 06 June 2010] [17:26:50] <sustrik>  but maybe it's time to freeze the api
| [Sunday 06 June 2010] [17:27:00] <zedas>    yeah but changing zmq_init jsut breaks everything
| [Sunday 06 June 2010] [17:27:20] <zedas>    so when people go to use it, or when i advocate it, people think it's unstable and get turned off
| [Sunday 06 June 2010] [17:27:35] <sustrik>  sure, i am aware of the problem
| [Sunday 06 June 2010] [17:27:44] <sustrik>  what's needed is stable distro
| [Sunday 06 June 2010] [17:27:58] <sustrik>  plus a dev branch
| [Sunday 06 June 2010] [17:28:05] <zedas>    well let me ask, what was the reasoning for changing init?
| [Sunday 06 June 2010] [17:28:25] <sustrik>  the args are no more needed, so it's API cleanup
| [Sunday 06 June 2010] [17:29:17] <sustrik>  basically, it's a tension between trying to keep API clean and a need to support existing users
| [Sunday 06 June 2010] [17:29:48] <zedas>    you can do both, plenty of projects do
| [Sunday 06 June 2010] [17:29:51] <versificateur>    sustrik: have you try to compile the java bindings (jzmq) with new 2.0.7 ??
| [Sunday 06 June 2010] [17:30:02] <sustrik>  versificateur: yes
| [Sunday 06 June 2010] [17:30:15] <sustrik>  it worked for me
| [Sunday 06 June 2010] [17:30:47] <versificateur>    sustrik: it seems that test classes (local_thr...) are broken.. 
| [Sunday 06 June 2010] [17:30:57] <sustrik>  what's the problem?
| [Sunday 06 June 2010] [17:31:32] <sustrik>  zedas: please, do start the discussion of the release policy on the mailing list
| [Sunday 06 June 2010] [17:33:00] <zedas>    hehe whew, hacking generated python C code sucks.
| [Sunday 06 June 2010] [17:33:24] <versificateur>    local_lat.java:36 context(init,int,int) in org.zeromq.ZMQ cannot be applied to (int)
| [Sunday 06 June 2010] [17:33:53] <sustrik>  verisificateur: do you have the latest version?
| [Sunday 06 June 2010] [17:33:59] <versificateur>    ZMQ.Context ctx = ZMQ.context(1);
| [Sunday 06 June 2010] [17:34:31] <sustrik>  hm, have you rebuilt and reinstalled it?
| [Sunday 06 June 2010] [17:34:41] <versificateur>    yes
| [Sunday 06 June 2010] [17:34:58] <zedas>    sustrik versificateur probably the same zmq_init change?
| [Sunday 06 June 2010] [17:35:03] <sustrik>  no stray old version of jzmq somewhere on your paths?
| [Sunday 06 June 2010] [17:35:08] <sustrik>  yes, it's the same thing
| [Sunday 06 June 2010] [17:35:16] <sustrik>  i've changed the jzmq though
| [Sunday 06 June 2010] [17:35:45] <versificateur>    i'll check my paths...
| [Sunday 06 June 2010] [17:36:12] <sustrik>  back to the release policy: i think there should simply be two codebases, the stable one and the experimental one
| [Sunday 06 June 2010] [17:38:00] <zedas>    well i'm screwed.
| [Sunday 06 June 2010] [17:38:14] <zedas>    i'll have to contact the pyzmq author and find out what version of pyrex he's using.
| [Sunday 06 June 2010] [17:38:21] <sustrik>  zedas: sorry about that
| [Sunday 06 June 2010] [17:38:25] <zedas>    hacking the output C code doesn't work at all.
| [Sunday 06 June 2010] [17:38:46] <sustrik>  please do complain about it
| [Sunday 06 June 2010] [17:38:53] <sustrik>  it should be solved in some way
| [Sunday 06 June 2010] [17:39:12] <zedas>    anyway, I *did* manage to merge 0mq into libtask: http://swtch.com/libtask/
| [Sunday 06 June 2010] [17:39:35] <zedas>    so you get coroutines that can process 0mq messages and file/socket I/O off an abstraction from zmq_poll
| [Sunday 06 June 2010] [17:40:09] <sustrik>  what's the project?
| [Sunday 06 June 2010] [17:40:26] <sustrik>  a portability lib?
| [Sunday 06 June 2010] [17:40:37]     * sustrik is checking it
| [Sunday 06 June 2010] [17:40:53] <zedas>    it's a portable abstraction on coroutines in C
| [Sunday 06 June 2010] [17:41:03] <zedas>    super duper fast, but it used plain old poll
| [Sunday 06 June 2010] [17:41:27] <zedas>    so with my little update it uses 0mq poll and then i can use the same abstraction for sockets, files, or 0mq
| [Sunday 06 June 2010] [17:41:41] <zedas>    and it took a tiny bit of changes to work.
| [Sunday 06 June 2010] [17:41:46] <sustrik>  ah, i see
| [Sunday 06 June 2010] [17:42:06] <zedas>    mostly just to see if it'd work :-)
| [Sunday 06 June 2010] [17:42:50] <sustrik>  well, my long term goal is to expose 0MQ via BSD socket API, that would achieve the same goal
| [Sunday 06 June 2010] [17:43:38] <sustrik>  but again, such a thing would break backward compatibility :(
| [Sunday 06 June 2010] [17:43:42] <versificateur>    I didn't found something noticeable in my paths..
| [Sunday 06 June 2010] [17:43:59] <versificateur>    so should i remove all 2.0.6 files
| [Sunday 06 June 2010] [17:44:07] <versificateur>    and reinstall??
| [Sunday 06 June 2010] [17:44:20] <sustrik>  versificateur: let me try myself
| [Sunday 06 June 2010] [17:47:50] <sustrik>  versificateur: hm, it builds ok for me
| [Sunday 06 June 2010] [17:47:59] <sustrik>  maybe you have old 0MQ core still
| [Sunday 06 June 2010] [17:48:11] <sustrik>  have you installed 0MQ/2.0.7?
| [Sunday 06 June 2010] [17:48:16] <versificateur>    yes probably
| [Sunday 06 June 2010] [17:49:17] <sustrik>  were does the context(init,int,int) come from?
| [Sunday 06 June 2010] [17:49:24] <sustrik>  can you check where is it defined?
| [Sunday 06 June 2010] [17:51:05] <versificateur>    yes i'll try
| [Sunday 06 June 2010] [17:51:49] <cremes>   zedas: the ruby ffi bindings are compatible with the 2.0.7 release if you want to dip your toe back into ruby waters... ;)
| [Sunday 06 June 2010] [17:52:15] <cremes>   (or will be when i push 0.5.0 in about 30 minutes)
| [Sunday 06 June 2010] [17:55:36] <sustrik>  let _me_ start the discussion of the stable versions on the mailing list :|
| [Sunday 06 June 2010] [17:59:29] <versificateur>    okay i fix it
| [Sunday 06 June 2010] [18:00:18] <sustrik>  versificatuer: no, do not fix it, just find where it's coming from
| [Sunday 06 June 2010] [18:00:47] <versificateur>    It was my ZMQ.java file
| [Sunday 06 June 2010] [18:01:03] <sustrik>  the one from github?
| [Sunday 06 June 2010] [18:01:05] <versificateur>    I've modifications on the 2.0.6 version
| [Sunday 06 June 2010] [18:01:19] <sustrik>  ah, ok, that explains it
| [Sunday 06 June 2010] [18:02:19] <versificateur>    but now with the 2.0.7 what does the ZMQ.Context(1) mean?
| [Sunday 06 June 2010] [18:02:40] <versificateur>    application? thread?...
| [Sunday 06 June 2010] [18:02:46] <cremes>   versificateur: io threads
| [Sunday 06 June 2010] [18:03:34] <versificateur>    so it's the first arg of the old implementation??
| [Sunday 06 June 2010] [18:04:00] <sustrik>  it's second arg of the old implementation
| [Sunday 06 June 2010] [18:04:22] <sustrik>  api_threads is not needed as you can use 0mq from as many threads as you want now
| [Sunday 06 June 2010] [18:06:04] <sustrik>  zedas: ok, done, i've started the discussion
| [Sunday 06 June 2010] [18:06:30] <sustrik>  let's see what happens
| [Sunday 06 June 2010] [18:06:58] <versificateur>    so taking the multithreaded example i'll have (1) instead of (11,1,0)
| [Sunday 06 June 2010] [18:07:09] <sustrik>  yes
| [Sunday 06 June 2010] [18:12:38] <versificateur>    I made the Device port to jzmq
| [Sunday 06 June 2010] [18:13:00] <sustrik>  great
| [Sunday 06 June 2010] [18:13:10] <versificateur>    i'll test it and ask you for a pull request
| [Sunday 06 June 2010] [18:13:26] <sustrik>  thanks!
| [Sunday 06 June 2010] [18:32:53] <zedas>    sweet, 0mq works great with libtask
| [Sunday 06 June 2010] [18:33:19] <zedas>    i'm able to slam the hell out of it with 0mq req/rep messages and also do full socket hits and serve files.
| [Sunday 06 June 2010] [18:38:41] <zedas>    http://dpaste.de/o5xx/ here's the end result
| [Sunday 06 June 2010] [18:38:48] <zedas>    very nice.
| [Sunday 06 June 2010] [18:48:40] <foysavas> zedas: coroutines? but event-driven is all the fad right now :P
| [Sunday 06 June 2010] [18:49:38] <foysavas> actually coroutines make a lot of sense for a web server, under what conditions would you have a task reschedule itself?
| [Sunday 06 June 2010] [18:50:22] <zedas>    foysavas: well it's event-driven, just done with coroutines :-)
| [Sunday 06 June 2010] [18:51:27] <foysavas> ah, true, you're just saw that you're using zmq_poll
| [Sunday 06 June 2010] [19:02:32] <foysavas> sustrik: btw, if you make two branches, one stable, one dev, make stable 'master'
| [Sunday 06 June 2010] [19:03:30] <foysavas> not sure why it's so popular to do otherwise
| [Sunday 06 June 2010] [19:20:05] <foysavas> sustrik: also, i just wrote up some D bindings for zmq. any chance of linking to them from the zeromq site, once i put them up on github?
| 
| *** Logfile started
| *** on Sun Jun 6 19:51:08 2010
| 
| [Sunday 06 June 2010] [19:51:08] Topic  The channel topic is "Welcome!".
| [Sunday 06 June 2010] [19:51:08] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Sunday 06 June 2010] [19:51:13] Mode   Channel modes: no messages from outside, topic protection
| [Sunday 06 June 2010] [19:51:13] Created    This channel was created on 2010-02-05 10:44.
| [Sunday 06 June 2010] [20:06:07] <mikko>    foysavas: try again tomorrow
| [Sunday 06 June 2010] [20:06:13] <mikko>    foysavas: sustrik can help you on that
| [Sunday 06 June 2010] [22:12:56] <silassewell>  I understand that its not a priority right now (or possibly at all), but I was wondering if anyone was aware of any type of security mechanism successfully being layered on top of zeromq (something like tls as opposed to ipsec)?
| [Sunday 06 June 2010] [22:32:25] <mikko>    its a complicated issue
| [Sunday 06 June 2010] [22:32:52] <mikko>    the topic has come up more than once
| [Sunday 06 June 2010] [22:33:19] <mikko>    the problematic thing is different needs people have and especially when you have more complex messaging topologies
| [Sunday 06 June 2010] [22:33:28] <mikko>    such as forwarding devices that are not trusted etc
| [Sunday 06 June 2010] [22:37:01] <silassewell>  yeah, I'm not looking for a builtin / standard solution, I was just wondering if anyone had heard of someone successfully deploying zeromq in an untrusted environment
| [Sunday 06 June 2010] [22:38:12] <mikko>    i would imagine something like pub/priv key signing would work
| [Sunday 06 June 2010] [22:38:18] <mikko>    adds some overhead to the messages
| [Sunday 06 June 2010] [22:38:45] <mikko>    or just encryption
| [Sunday 06 June 2010] [22:38:56] <mikko>    are you looking to hide the messages or guarantee integrity?
| [Sunday 06 June 2010] [22:40:39] <silassewell>  hide the message and authenticate the sender
| [Sunday 06 June 2010] [22:41:04] <mikko>    i guess you could follow similar pattern to email?
| [Sunday 06 June 2010] [22:42:09] <silassewell>  yeah, I'll start experimenting with it, I just wanted to see if anyone had done it before I began
| [Sunday 06 June 2010] [23:50:13] <jugg> http://api.zeromq.org/zmq_cpp.html doesn't document the overloaded poll() interface, ie, that poll() can be called with or without a timeout value; if without, defaults to -1, eg. no timeout.
| [Monday 07 June 2010] [01:02:05] <jugg> hmm, is it not possible to unbind/disconnect a socket from an endpoint?  It seems I have to close the socket, in which case all connections and bindings for that socket are lost.
| [Monday 07 June 2010] [01:10:26] Notice -NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Monday 07 June 2010] [01:10:26] Notice -NickServ- You are now identified for travlr.
| [Monday 07 June 2010] [01:10:26] CTCP   Received Version request from frigg.
| [Monday 07 June 2010] [01:10:28] Topic  The channel topic is "Welcome!".
| [Monday 07 June 2010] [01:10:28] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Monday 07 June 2010] [01:10:28] Notice -ChanServ- [#rekonq] welcome to rekonq, webkit KDE browser, channel
| [Monday 07 June 2010] [01:10:34] Mode   Channel modes: no messages from outside, topic protection
| [Monday 07 June 2010] [01:10:34] Created    This channel was created on 2010-02-05 10:44.
| [Monday 07 June 2010] [02:02:31] Notice -NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Monday 07 June 2010] [02:02:31] Notice -NickServ- You are now identified for travlr.
| [Monday 07 June 2010] [02:02:31] CTCP   Received Version request from frigg.
| [Monday 07 June 2010] [02:02:33] Topic  The channel topic is "Welcome!".
| [Monday 07 June 2010] [02:02:33] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Monday 07 June 2010] [02:02:33] Notice -ChanServ- [#rekonq] welcome to rekonq, webkit KDE browser, channel
| [Monday 07 June 2010] [02:02:39] Mode   Channel modes: no messages from outside, topic protection
| [Monday 07 June 2010] [02:02:39] Created    This channel was created on 2010-02-05 10:44.
| [Monday 07 June 2010] [02:37:57] <sustrik>  zedas: nice, is the libtask project repo available online?
| [Monday 07 June 2010] [02:38:14] <sustrik>  it may make sense to link to it from zeromq.org website
| [Monday 07 June 2010] [02:38:48] <sustrik>  foysavas: yes, please do put the D binding to the github
| [Monday 07 June 2010] [02:39:05] <sustrik>  then let me know and I link it from zeromq.org
| [Monday 07 June 2010] [02:39:08] <zedas>    sustrik: "repo" is a bit of a stretch http://swtch.com/libtask/
| [Monday 07 June 2010] [02:39:13] <zedas>    but i'll have something up
| [Monday 07 June 2010] [02:39:22] <sustrik>  thanks, let me know then
| [Monday 07 June 2010] [02:39:35] <sustrik>  this stuff looks really useful
| [Monday 07 June 2010] [02:39:42] <sustrik>  it would be shame to let it die
| [Monday 07 June 2010] [02:43:34] <sustrik>  jugg: good catch about the zmq_poll in C++
| [Monday 07 June 2010] [02:43:53] <sustrik>  jugg: no it's not possible, you have to close the socket
| [Monday 07 June 2010] [02:44:02] <sustrik>  (following bsd sockets API here)
| [Monday 07 June 2010] [02:47:24] <Olivier_c>    hi all.
| [Monday 07 June 2010] [02:49:41] <sustrik>  hi
| [Monday 07 June 2010] [02:53:52] <Olivier_c>    sustrik, why have you removed zmq_stopwatch_start/stop in 2.07 ? i don't see anything about it in the changelog.   
| [Monday 07 June 2010] [02:54:27] <sustrik>  it was an undocumented feature intended only for internal use
| [Monday 07 June 2010] [02:54:48] <sustrik>  0mq is not intended to be a portability library
| [Monday 07 June 2010] [02:55:00] <sustrik>  the functions were used only by perf tests
| [Monday 07 June 2010] [02:55:28] <sustrik>  now they are in perf/helpers.cpp
| [Monday 07 June 2010] [02:56:07] <Olivier_c>    ok, thanks for the informations :) i should clean my code then .
| [Monday 07 June 2010] [02:56:33] <sustrik>  sorry for inconvenience, we are trying to keep the API as clean as possible
| [Monday 07 June 2010] [02:57:14] <sustrik>  pain now = less trouble afterwards :)
| [Monday 07 June 2010] [02:59:30] <Olivier_c>    no problem. i'm gonna change this, and probably come back with (still) troubles with openpgm :)
| [Monday 07 June 2010] [03:04:16] <CIA-17>   zeromq2: 03Martin Sustrik 07master * rce53d02 10/ doc/zmq_cpp.txt : C++ docs for zmq::poll function improved - http://bit.ly/9IX99E
| [Monday 07 June 2010] [03:04:17] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r784e73a 10/ (ChangeLog NEWS): Merge branch 'master' of git@github.com:sustrik/zeromq2 - http://bit.ly/aAMj5O
| [Monday 07 June 2010] [05:21:35] <jugg> what is a sensible way to recover from a REQ/REP deadlock?  How does both sides of the endpoint re-synchronize when things get out of sync?  How does either side ever know things are out of sync?
| [Monday 07 June 2010] [05:22:08] <mikko>    how do they get out of sync?
| [Monday 07 June 2010] [05:24:10] <jugg> a REQ is sent, the REP never replies (it goes away).  When it comes back, REQ never recovers.  (I mentioned this yesterday)
| [Monday 07 June 2010] [05:24:41] <jugg> The mention suggest of using Poll, has this issue:
| [Monday 07 June 2010] [05:25:48] <jugg> the REQ socket state is out of order, so REQ send fails.  ANd because of my above question, that it isn't possible to close a connection, the problem increases, because closing the socket is a problem.
| [Monday 07 June 2010] [05:26:17] <jugg> ie. everytime poll times out, I have to close the socket.
| [Monday 07 June 2010] [05:26:29] <jugg> this interrupts a bunch of other things, so it isn't an acceptable solution.
| [Monday 07 June 2010] [05:26:41] <sustrik>  jugg: yes, that's the current state of affairs
| [Monday 07 June 2010] [05:26:57] <sustrik>  this should be done inside of 0MQ
| [Monday 07 June 2010] [05:27:01] <sustrik>  bit it's not yet
| [Monday 07 June 2010] [05:27:20] <jugg> yes, I"m trying to find a sensible work around.  I htink the only option is closing the socket?
| [Monday 07 June 2010] [05:27:26] <sustrik>  yes
| [Monday 07 June 2010] [05:27:29] <jugg> :( ok
| [Monday 07 June 2010] [05:27:34] <sustrik>  i know :(
| [Monday 07 June 2010] [05:52:23] <mato> re
| [Monday 07 June 2010] [05:52:31] <mato> sustrik: what is this business of moving repositories?
| [Monday 07 June 2010] [05:52:45] <sustrik>  imatix is going to maintain stable version
| [Monday 07 June 2010] [05:53:08] <sustrik>  sustrik/zeromq2 is my playground from now on :)
| [Monday 07 June 2010] [05:53:38] <mato> so it's a fork?
| [Monday 07 June 2010] [05:54:02] <sustrik>  yes, it's a different repo
| [Monday 07 June 2010] [05:54:36] <sustrik>  those who want stable API should use imatix/zeromq
| [Monday 07 June 2010] [05:54:53] <mato> then imatix should prominently announce this somehow
| [Monday 07 June 2010] [05:55:00] <mato> but i guess i'll leave that to imatix
| [Monday 07 June 2010] [05:55:04] <sustrik>  :)
| [Monday 07 June 2010] [05:55:09] <mato> you know
| [Monday 07 June 2010] [05:55:11] <mato> with a roadmap
| [Monday 07 June 2010] [05:55:13] <mato> issue tracker
| [Monday 07 June 2010] [05:55:16] <mato> maintenance plan
| [Monday 07 June 2010] [05:55:19] <sustrik>  yup
| [Monday 07 June 2010] [05:55:19] <mato> and so on :-)
| [Monday 07 June 2010] [05:56:35] <mato> sustrik: so practically, i can keep committing to your repository if i want to make changes?
| [Monday 07 June 2010] [05:57:13] <sustrik>  i am going to play with berkeley sockets api there
| [Monday 07 June 2010] [05:57:45] <sustrik>  so it depends on what you want to commit
| [Monday 07 June 2010] [05:58:05] <sustrik>  if it's say a bugfix that should get to stable version asap, go for imatix/zeromq
| [Monday 07 June 2010] [05:58:43] <mato> sustrik: and you will not be fixing bugs in the stable version? or will you?
| [Monday 07 June 2010] [05:58:48]     * mato is confused
| [Monday 07 June 2010] [05:58:58] <sustrik>  the idea afaiu
| [Monday 07 June 2010] [05:59:13] <sustrik>  is that zeromq/imatix now moves quickly towards the stable version
| [Monday 07 June 2010] [05:59:15] <sustrik>  alpha
| [Monday 07 June 2010] [05:59:16] <sustrik>  rc
| [Monday 07 June 2010] [05:59:17] <sustrik>  etc.
| [Monday 07 June 2010] [05:59:34] <sustrik>  sustrik/zeromq2 is my sandbox
| [Monday 07 June 2010] [06:00:19] <sustrik>  as for the bugs, i'll fix them in both
| [Monday 07 June 2010] [06:00:44] <sustrik>  but imatix/zeromq is more important
| [Monday 07 June 2010] [06:00:49] <sustrik>  as it's meant to be stable
| [Monday 07 June 2010] [06:01:26] <mato> right, but the stability of this fork is decided by imatix presumably
| [Monday 07 June 2010] [06:01:31] <sustrik>  yes
| [Monday 07 June 2010] [06:01:32] <mato> they have a plan
| [Monday 07 June 2010] [06:01:50] <sustrik>  i believe so
| [Monday 07 June 2010] [06:02:42]     * mato is still confused
| [Monday 07 June 2010] [06:02:51] <mato> should i ask imatix about these plans on the mailing list?
| [Monday 07 June 2010] [06:03:15] <sustrik>  up to you
| [Monday 07 June 2010] [06:03:50] <mato> i'm just somewhat upset that the decision appears to have been made without seeking *any* input from the community or contributors
| [Monday 07 June 2010] [06:04:01] <mato> without proposing any roadmap what stable means
| [Monday 07 June 2010] [06:08:05] <sustrik>  the point is people are compaining about unstable APIs
| [Monday 07 June 2010] [06:08:10] <sustrik>  fair enough
| [Monday 07 June 2010] [06:08:12] <mato> people always complain
| [Monday 07 June 2010] [06:08:40] <sustrik>  i think 0mq have reached the point where it's used enough to deserve a stable branch
| [Monday 07 June 2010] [06:08:58] <sustrik>  no point in people using my sandbox for production use :|
| [Monday 07 June 2010] [06:09:02] <mato> my point is that you wrote an email asking for comments on the way forward, and PH just wrote back 12hrs later with an executive decision
| [Monday 07 June 2010] [06:09:12] <sustrik>  i asked him to do so
| [Monday 07 June 2010] [06:10:07] <sustrik>  maintaining a stable branch _is_ an executive decision
| [Monday 07 June 2010] [06:13:13] <mato> sustrik: i find it interesting that my input as the contributor who has been preparing the last few stable releases *for free* is not wanted
| [Monday 07 June 2010] [06:13:55] <sustrik>  sustrik/zeromq2 is *my* repo
| [Monday 07 June 2010] [06:14:27] <sustrik>  i just don't want people to come in and complain about the release policy
| [Monday 07 June 2010] [06:14:31] <sustrik>  it's a sandbox
| [Monday 07 June 2010] [06:14:44] <mato> sustrik: that's what branches are for, damnit
| [Monday 07 June 2010] [06:15:23] <mato> sustrik: you have, let me see, 129 people watching your repository
| [Monday 07 June 2010] [06:15:41] <mato> sustrik: so let's face it, that repository should be the canonical source for 0MQ
| [Monday 07 June 2010] [06:16:04] <mato> or, if not, it should be prominently announced, all over the place, not in an email hidden under "Stable release" on the mailing list
| [Monday 07 June 2010] [06:16:21] <sustrik>  sure, it should
| [Monday 07 June 2010] [06:16:57] <mato> anyway, i will reply on the mailing list
| [Monday 07 June 2010] [06:17:00] <sustrik>  ok
| [Monday 07 June 2010] [07:49:01] <jugg> sustrik: will you be pushing changes to the imatix repo as you work?
| [Monday 07 June 2010] [07:49:13] <sustrik>  jugg: yes
| [Monday 07 June 2010] [07:49:19] <sustrik>  the only point is about the API
| [Monday 07 June 2010] [07:49:39] <sustrik>  people using 0mq in production don't want APIs to be changed
| [Monday 07 June 2010] [07:49:51] <sustrik>  thus we need a "stable" repo
| [Monday 07 June 2010] [07:49:58] <sustrik>  ->imatix/zeromq
| [Monday 07 June 2010] [07:50:20] <sustrik>  my own sustrik/zeromq2 i'll use for experimenting with API
| [Monday 07 June 2010] [07:50:40] <sustrik>  so it's worth of following only is you are interested in reseach-related stuff
| [Monday 07 June 2010] [07:50:53] <sustrik>  research*
| [Monday 07 June 2010] [07:51:50] <sustrik>  does that make sense?
| [Monday 07 June 2010] [07:56:43] <jugg> yes/no.  Even if another repository is made to be the "official" one, I'd still expect the branches shared between the two repositories to remain synched, and any experimental work to be done on branches existing only in your repository.
| [Monday 07 June 2010] [07:58:05] <jugg> I expect the "master" branch to be one of those shared branches that remain sync'd
| [Monday 07 June 2010] [07:59:14] <sustrik>  i just don't want to have the whole project under sustrik account
| [Monday 07 June 2010] [07:59:24] <sustrik>  it's not a one-man show any longer
| [Monday 07 June 2010] [08:00:41] <jugg> makes sense
| [Monday 07 June 2010] [11:24:46] <jugg> while building from source, `./configure --prefix=/some/path`  is this used only for `make install`?  ie, if I re-run ./configure with a different prefix, do I have to rebuild?
| [Monday 07 June 2010] [11:26:47] <sustrik>  jugg: no idea
| [Monday 07 June 2010] [11:27:18] <sustrik>  you should be able to find the answer somewhere in the autools documentation
| [Monday 07 June 2010] [11:27:25] <sustrik>  autotools*
| [Monday 07 June 2010] [11:29:39] <jugg> when doing a full make after changing the prefix, these files differ:
| [Monday 07 June 2010] [11:29:55] <jugg> ./lib/libzmq.a
| [Monday 07 June 2010] [11:29:55] <jugg> ./lib/libzmq.la
| [Monday 07 June 2010] [11:29:55] <jugg> ./lib/pkgconfig/libzmq.pc
| [Monday 07 June 2010] [11:30:18] <jugg> when not doing an make, only the .a and .pc differ.  The .la still points to the old directory.
| [Monday 07 June 2010] [11:31:56] <jugg> but all of the files themselves were placed in the correct (updated) locations.
| [Monday 07 June 2010] [11:33:22] <jugg> wierd that the static lib changes without actually doing a rebuild. ?
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: 03Brian Granger 07master * rafabbb5 10/ (18 files in 7 dirs): 
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: Updating to new 2.0.7 API changes.
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: * Context only takes the number of io threads.
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: * P2P -> PAIR.
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: * No stopwatch.
| [Monday 07 June 2010] [11:56:13] <CIA-17>   pyzmq: * No LWM socket option. - http://bit.ly/9vHx2a
| [Monday 07 June 2010] [11:57:37] <guido_g>  ahhh... time to pull :)
| [Monday 07 June 2010] [14:24:14] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r240fc33 10/ src/tcp_connecter.cpp : minor comment clarification - http://bit.ly/9qdEMQ
| [Monday 07 June 2010] [20:59:24] <jugg> I got this assert in my app when rebooting a peer computer: tcp_connector.cpp:296:    zmq_assert (err == ECONNREFUSED || err == ETIMEDOUT);   Is there a reason that zmq dies if the remote port is unavailable?
| [Monday 07 June 2010] [23:30:22] <jugg> sustrik: github is showing that you committed a comment change on that very assert 9 hours ago... ???  that is very wierd.
| [Tuesday 08 June 2010] [00:58:14] <umesh>   I am wondering if ZeroMQ supports a many to many delivery model.
| [Tuesday 08 June 2010] [00:58:35] <umesh>   The documentation for publish and subscribe mention that it is used to implement a one to many model:
| [Tuesday 08 June 2010] [00:58:35] <umesh>   "The publish-subscribe pattern is used for one-to-many distribution of data from a single publisher to multiple subscribers in a fanout fashion."
| [Tuesday 08 June 2010] [00:58:48] <umesh>   Can multiple entities publish on the same channel and thus make it a many to many model ?
| [Tuesday 08 June 2010] [01:01:59] <sustrik> jugg: the assert tries to capture possible netwrok-related error codes
| [Tuesday 08 June 2010] [01:02:15] <sustrik> can you have a look which error are you exactly experiencing?
| [Tuesday 08 June 2010] [01:02:33] <sustrik> as for the commit it just fixed the comment there, it haven't changed the actual code
| [Tuesday 08 June 2010] [01:03:03] <sustrik> umesh: you have to have zmq_forwarder device in the middle
| [Tuesday 08 June 2010] [01:09:26] <alefka>  hi
| [Tuesday 08 June 2010] [01:10:18] <sustrik> hi
| [Tuesday 08 June 2010] [01:11:03] <umesh>   ok
| [Tuesday 08 June 2010] [01:11:14] <alefka>  I have some questions about 0mq. Could u help me?
| [Tuesday 08 June 2010] [01:11:29] <umesh>   Sustrik: can you explain with very simple example ...
| [Tuesday 08 June 2010] [01:12:02] <sustrik> umesh: have a look here: http://github.com/sustrik/zeromq-chat
| [Tuesday 08 June 2010] [01:12:09] <sustrik> aalefka: yes
| [Tuesday 08 June 2010] [01:12:16] <umesh>   is there are sample code given in the cookbook or anywahere where we have zmq_forwarder in between 
| [Tuesday 08 June 2010] [01:12:20] <umesh>   ok
| [Tuesday 08 June 2010] [01:13:39] <alefka>  I created publisher socket (ZMQ_PUB) and bind it. Can I wait a connection from client on this socket?
| [Tuesday 08 June 2010] [01:14:07] <sustrik> yes
| [Tuesday 08 June 2010] [01:14:18] <sustrik> well, you mean get notified?
| [Tuesday 08 June 2010] [01:14:25] <sustrik> then no
| [Tuesday 08 June 2010] [01:17:35] <alefka>  sustrik: How I can wait? After binding I begin send messages, but because there is no connected subscribers I send this messages in the nowhere
| [Tuesday 08 June 2010] [01:17:58] <sustrik> that's the nature of the thing
| [Tuesday 08 June 2010] [01:18:08] <sustrik> PUB is like a radio transmission
| [Tuesday 08 June 2010] [01:18:20] <sustrik> if noone is listening, the data go to nowhere
| [Tuesday 08 June 2010] [01:18:49] <sustrik> what are you trying to do?
| [Tuesday 08 June 2010] [01:23:49] <alefka>  I need some client/server app which can dispatch about million messages per sec. In my REQ/REP socket tests there is not enough throughput, therefore I trying implement this logic on the PUB/SUB sockets.
| [Tuesday 08 June 2010] [01:27:23] <sustrik> sure
| [Tuesday 08 June 2010] [01:27:40] <sustrik> but why do you need not to drop messages when there's no client?
| [Tuesday 08 June 2010] [01:28:03] <sustrik> how many listerenrs there are in your scenario?
| [Tuesday 08 June 2010] [01:28:07] <sustrik> just a single one?
| [Tuesday 08 June 2010] [01:29:48] <alefka>  sustrik: >> sure. I executed latency tests on a 100 000 messages (16 bytes) and it spend about 5 secs
| [Tuesday 08 June 2010] [01:30:03] <alefka>  sustrik: >> just a single one? : yes
| [Tuesday 08 June 2010] [01:30:43] <sustrik> so all you need is one-to-one communication?
| [Tuesday 08 June 2010] [01:30:55] <sustrik> why aren't you using standard sockets then?
| [Tuesday 08 June 2010] [01:31:59] <sustrik> (there's a PAIR socket for this use case, but it's still experimental and misses features such as reconnection)
| [Tuesday 08 June 2010] [01:35:20] <alefka>  yes. by command of my boss "just test it" :)
| [Tuesday 08 June 2010] [01:36:35] <alefka>  >> (there's a PAIR socket... I will try this feature
| [Tuesday 08 June 2010] [01:38:52] <sustrik> alefka: actually, it won't work
| [Tuesday 08 June 2010] [01:39:09] <sustrik> the problem you are trying to solve is still unresolved in PAIR
| [Tuesday 08 June 2010] [01:39:38] <sustrik> anyway, what's the scenario 0mq is intended to be used in?
| [Tuesday 08 June 2010] [01:39:48] <sustrik> one-to-many data distribution?
| [Tuesday 08 June 2010] [01:40:11] <alefka>  one-to-one
| [Tuesday 08 June 2010] [01:40:54] <sustrik> ok, there's one option
| [Tuesday 08 June 2010] [01:41:11] <sustrik> there are DOWNSTREAM and UPSTREAM sockets
| [Tuesday 08 June 2010] [01:41:20] <sustrik> these are meant for pipelining
| [Tuesday 08 June 2010] [01:41:35] <sustrik> but let's say your one-to-one scenario is a simple pipeline
| [Tuesday 08 June 2010] [01:41:48] <sustrik> use DOWNSTREAM on the publisher side
| [Tuesday 08 June 2010] [01:41:58] <sustrik> and UPSTREAM on the receiver side
| [Tuesday 08 June 2010] [01:42:04] <umesh>   http://www.zeromq.org/code:examples-chat
| [Tuesday 08 June 2010] [01:42:06] <sustrik> the messages should not be dropped
| [Tuesday 08 June 2010] [01:42:09] <umesh>   where can i get this ?
| [Tuesday 08 June 2010] [01:42:18] <sustrik> ?
| [Tuesday 08 June 2010] [01:42:26] <umesh>   its not wirh zeromq sources which I dodnloaded ...
| [Tuesday 08 June 2010] [01:42:29] <umesh>   with*
| [Tuesday 08 June 2010] [01:42:48] <umesh>   the example mentioned in this is not with zeromq sources ..
| [Tuesday 08 June 2010] [01:42:49] <sustrik> it's old outdated tutorial
| [Tuesday 08 June 2010] [01:42:56] <umesh>   ok
| [Tuesday 08 June 2010] [01:43:04] <sustrik> use the github project i've pointed you to
| [Tuesday 08 June 2010] [01:43:08] <umesh>   ok
| [Tuesday 08 June 2010] [01:43:24] <sustrik> see the README file
| [Tuesday 08 June 2010] [01:43:25] <alefka>  How I understand they are contains some buffer inside which stores output/input messages
| [Tuesday 08 June 2010] [01:43:33] <alefka>  is it so?
| [Tuesday 08 June 2010] [01:43:37] <umesh>   I thought this is the more sopisticated example of the link you provided ... therefore just wanted to have a look at it ...
| [Tuesday 08 June 2010] [01:44:02] <sustrik> alefka: yes there are buffers inside sockets
| [Tuesday 08 June 2010] [01:44:15] <sustrik> umesh: it was the old version of the same thing
| [Tuesday 08 June 2010] [01:44:22] <sustrik> some 2 years old :)
| [Tuesday 08 June 2010] [01:45:12] <umesh>   ok
| [Tuesday 08 June 2010] [01:45:33] <umesh>   sustrik: one question ..
| [Tuesday 08 June 2010] [01:45:38] <sustrik> go on
| [Tuesday 08 June 2010] [01:45:42] <alefka>  sustrik: ok
| [Tuesday 08 June 2010] [01:45:50] <umesh>   zmq does not support many to many directly ... right ...
| [Tuesday 08 June 2010] [01:46:25] <sustrik> you mean without device in a middle?
| [Tuesday 08 June 2010] [01:46:26] <umesh>   but this way of doing broker achitecture or many to many will add more latency/delay ... 
| [Tuesday 08 June 2010] [01:46:34] <sustrik> you can do that but it's annoying
| [Tuesday 08 June 2010] [01:46:55] <umesh>   yup ... without device in the middle ...
| [Tuesday 08 June 2010] [01:46:57] <sustrik> you have to bind each publsiher
| [Tuesday 08 June 2010] [01:47:10] <sustrik> and connect to each publisher from each subscriber
| [Tuesday 08 June 2010] [01:47:32] <sustrik> that means subscriber should be aware of all publishers
| [Tuesday 08 June 2010] [01:47:34] <umesh>   which will be better performance wise ...
| [Tuesday 08 June 2010] [01:47:42] <sustrik> yes, it'll be better
| [Tuesday 08 June 2010] [01:47:50] <sustrik> but it's management nightmare :)
| [Tuesday 08 June 2010] [01:47:56] <sustrik> it's up to you
| [Tuesday 08 June 2010] [01:48:13] <umesh>   and when you say annoying ... what is annoying nature in it ...
| [Tuesday 08 June 2010] [01:48:31] <umesh>   ok
| [Tuesday 08 June 2010] [01:48:38] <sustrik> you have to maintail list of publishers at each subscriber
| [Tuesday 08 June 2010] [01:48:48] <umesh>   annoying is subsriber should know publishers ...
| [Tuesday 08 June 2010] [01:48:57] <sustrik> yes
| [Tuesday 08 June 2010] [01:49:14] <umesh>   ok
| [Tuesday 08 June 2010] [01:49:42] <umesh>   thanx ...
| [Tuesday 08 June 2010] [01:49:44] <sustrik> np
| [Tuesday 08 June 2010] [01:50:10] <umesh>   also adding more publishers will be diffcult in that case ...
| [Tuesday 08 June 2010] [01:51:55] <sustrik> yes
| [Tuesday 08 June 2010] [01:52:14] <sustrik> it can be done in opposite way also: publishers have to know subscribers
| [Tuesday 08 June 2010] [01:52:19] <sustrik> but that's even worse
| [Tuesday 08 June 2010] [01:52:40] <umesh>   hmmm ...
| [Tuesday 08 June 2010] [01:52:49] <sustrik> you can still use multicast
| [Tuesday 08 June 2010] [01:53:10] <sustrik> all the publishers publish to the same multicast group
| [Tuesday 08 June 2010] [01:53:25] <sustrik> all the subscribers subscribe to the multicast group
| [Tuesday 08 June 2010] [01:53:33] <sustrik> but it works on LAN only
| [Tuesday 08 June 2010] [01:54:00] <umesh>   yup
| [Tuesday 08 June 2010] [01:54:26] <umesh>   everything has some procs and cons ... better to me looks like is device in the middle ...
| [Tuesday 08 June 2010] [01:54:58] <sustrik> ack
| [Tuesday 08 June 2010] [01:55:08] <umesh>   ack ?
| [Tuesday 08 June 2010] [01:55:32] <sustrik> yes (acknowledged) :)
| [Tuesday 08 June 2010] [01:55:38] <umesh>   ok
| [Tuesday 08 June 2010] [01:55:53] <umesh>   you believe the same ... :)
| [Tuesday 08 June 2010] [01:57:02] <umesh>   one more question : not related to this discussio...
| [Tuesday 08 June 2010] [01:57:16] <umesh>   zmq does not have zmq_select ... why ?
| [Tuesday 08 June 2010] [01:57:30] <umesh>   it does have zmq_poll  ... but not zmq_select ?
| [Tuesday 08 June 2010] [01:58:51] <sustrik> pollsets used in select are in fact bitmaps
| [Tuesday 08 June 2010] [01:59:07] <sustrik> you can use that approach when you fds are integers
| [Tuesday 08 June 2010] [01:59:20] <sustrik> sockets in 0mq are void*
| [Tuesday 08 June 2010] [01:59:27] <sustrik> that doesn't fit to a bitmap
| [Tuesday 08 June 2010] [01:59:48] <umesh>   ok
| [Tuesday 08 June 2010] [02:00:16] <umesh>   is there any way of using standard select with zmq_sockets ...
| [Tuesday 08 June 2010] [02:00:17] <umesh>   ?
| [Tuesday 08 June 2010] [02:01:31] <umesh>   i think no ...
| [Tuesday 08 June 2010] [02:01:42] <umesh>   but still thought asking you ...
| [Tuesday 08 June 2010] [02:09:08] <sustrik> umesh: no way at the moment
| [Tuesday 08 June 2010] [02:09:18] <sustrik> zmq socket is not a file descriptor
| [Tuesday 08 June 2010] [02:09:36] <sustrik> so you cannot use it for polling via *any* standard mechanism
| [Tuesday 08 June 2010] [02:10:02] <sustrik> we'll be moving that way in the future though
| [Tuesday 08 June 2010] [02:12:29] <umesh>   ok
| [Tuesday 08 June 2010] [02:24:32] <umesh>   where is the source code for zmq_server ?
| [Tuesday 08 June 2010] [02:24:38] <umesh>   I did not find any ...
| [Tuesday 08 June 2010] [02:24:43] <sustrik> there's no zmq_server
| [Tuesday 08 June 2010] [02:24:47] <sustrik> where are you looking at?
| [Tuesday 08 June 2010] [02:25:53] <umesh>   http://www.zeromq.org/code:examples-exchange ..
| [Tuesday 08 June 2010] [02:26:03] <umesh>   I also looked at teh sources 
| [Tuesday 08 June 2010] [02:26:07] <umesh>   the*
| [Tuesday 08 June 2010] [02:26:26] <sustrik> it's outdated
| [Tuesday 08 June 2010] [02:26:28] <umesh>   it mentions about zmq_server ...
| [Tuesday 08 June 2010] [02:26:34] <sustrik> i should delete these two papers
| [Tuesday 08 June 2010] [02:26:43] <umesh>   http://www.zeromq.org/code:examples-camera
| [Tuesday 08 June 2010] [02:26:48] <umesh>   even this as well 
| [Tuesday 08 June 2010] [02:26:51] <umesh>   why ?
| [Tuesday 08 June 2010] [02:27:00] <sustrik> it's old documentation
| [Tuesday 08 June 2010] [02:27:05] <umesh>   ok
| [Tuesday 08 June 2010] [02:27:10] <sustrik> it should have been deleted long ago
| [Tuesday 08 June 2010] [02:27:21] <umesh>   is there any new example of this ...
| [Tuesday 08 June 2010] [02:27:32] <sustrik> the one i pointed you to
| [Tuesday 08 June 2010] [02:27:39] <sustrik> is there any problem with it?
| [Tuesday 08 June 2010] [02:28:44] <umesh>   nope ...
| [Tuesday 08 June 2010] [02:29:00] <umesh>   i was just looking at the different code examples ...
| [Tuesday 08 June 2010] [02:29:13] <umesh>   to understand zmq in much better way ...
| [Tuesday 08 June 2010] [02:30:08] <sustrik> dunno, have a look at the blogs
| [Tuesday 08 June 2010] [02:30:24] <sustrik> there's "multithreaded server in 10mins." might be helpful
| [Tuesday 08 June 2010] [02:30:42] <umesh>   also in that chat example you pointed out me ... is there any way to listen to specific events only ...
| [Tuesday 08 June 2010] [02:30:57] <umesh>   we ca do this by selective subscribe ... right ?
| [Tuesday 08 June 2010] [02:31:01] <umesh>   can*
| [Tuesday 08 June 2010] [02:31:05] <sustrik> yes
| [Tuesday 08 June 2010] [02:31:13] <umesh>   instead of subscribing to all messages ...
| [Tuesday 08 June 2010] [02:31:15] <umesh>   ok
| [Tuesday 08 June 2010] [04:28:26] <alefka>  anybody here?
| [Tuesday 08 June 2010] [04:29:28] <guido_g> sure
| [Tuesday 08 June 2010] [04:33:02] <alefka>  guido_g: it seems I found some bug or I'm mistaken. 
| [Tuesday 08 June 2010] [04:36:09] <alefka>  guido_g: why some packets not received when I send them from publisher socket (server side, socket listening) to the client (whos connecting)
| [Tuesday 08 June 2010] [04:38:26] <alefka>  anybody...
| [Tuesday 08 June 2010] [04:49:33] <alefka>  :(
| [Tuesday 08 June 2010] [04:52:22] <sustrik> alfka: i'm here now :)
| [Tuesday 08 June 2010] [04:53:05] <alefka>  sustrik: Hi :)
| [Tuesday 08 June 2010] [04:53:18] <alefka>  it seems I found some bug or I'm mistaken.
| [Tuesday 08 June 2010] [04:53:25] <alefka>  why some packets not received when I send them from publisher socket (server side, socket listening) to the client (whos connecting)
| [Tuesday 08 June 2010] [04:53:48] <sustrik> while the client is _connecting_ and not yet _connected_ the messages are dropped
| [Tuesday 08 June 2010] [04:54:04] <sustrik> as i said, it's like radio transmission
| [Tuesday 08 June 2010] [04:54:06] <alefka>  but waiting a client connection
| [Tuesday 08 June 2010] [04:54:24] <sustrik> ?
| [Tuesday 08 June 2010] [04:54:26] <alefka>  just reading from keyboard char
| [Tuesday 08 June 2010] [04:54:39] <alefka>  but I'm waiting a client connection
| [Tuesday 08 June 2010] [04:54:55] <sustrik> but it's not yet connected, right?
| [Tuesday 08 June 2010] [04:55:20] <sustrik> it's PUB/SUB?
| [Tuesday 08 June 2010] [04:55:45] <sustrik> can you show your test program?
| [Tuesday 08 June 2010] [04:55:53] <alefka>  yes
| [Tuesday 08 June 2010] [04:56:00] <alefka>  how I can send you it?
| [Tuesday 08 June 2010] [04:57:41] <sustrik> it doesn't seem to get through
| [Tuesday 08 June 2010] [04:57:50] <sustrik> paste is to some public board
| [Tuesday 08 June 2010] [04:58:21] <sustrik> or send it be email
| [Tuesday 08 June 2010] [04:59:04] <alefka>  what is your email?
| [Tuesday 08 June 2010] [04:59:22] <sustrik> send it to the mailing list
| [Tuesday 08 June 2010] [04:59:28] <sustrik> or is it private?
| [Tuesday 08 June 2010] [04:59:53] <sustrik> confidential i mean?
| [Tuesday 08 June 2010] [05:00:37] <alefka>  I don't see.
| [Tuesday 08 June 2010] [05:01:15] <alefka>  sustrik@chello089173040080.chello.sk ????
| [Tuesday 08 June 2010] [05:02:07] <sustrik> see here: http://www.zeromq.org/mailing-lists
| [Tuesday 08 June 2010] [05:11:11] <alefka>  files attach to the message or insert into the body?
| [Tuesday 08 June 2010] [05:11:34] <alefka>  *as text
| [Tuesday 08 June 2010] [05:12:59] <sustrik> doesn't matter
| [Tuesday 08 June 2010] [05:20:21] <alefka>  sended
| [Tuesday 08 June 2010] [06:31:20] <versificateur>   hello
| [Tuesday 08 June 2010] [06:32:48] <versificateur>   could someone good in JNI have a look at this?
| [Tuesday 08 June 2010] [06:33:14] <versificateur>   http://pastebin.com/D7bA0ENV
| [Tuesday 08 June 2010] [06:34:04] <versificateur>   I tried to run a java code on it but it crash
| [Tuesday 08 June 2010] [06:34:57] <versificateur>   sustrik: your help is welcome
| [Tuesday 08 June 2010] [06:36:13] <sustrik> versificateur: you have to convrt jobject representing the 0MQ socket to handle to the socket
| [Tuesday 08 June 2010] [06:36:51] <sustrik> iirc the jobject contains the void* stored as jint 
| [Tuesday 08 June 2010] [06:36:58] <sustrik> or something like that
| [Tuesday 08 June 2010] [07:02:23] <versificateur>   i correct it
| [Tuesday 08 June 2010] [07:02:25] <versificateur>   thanks
| [Tuesday 08 June 2010] [07:02:39] <versificateur>   it's seems that it works
| [Tuesday 08 June 2010] [07:03:16] <versificateur>   i'll test with some REQ/REP code
| [Tuesday 08 June 2010] [07:06:40] <umesh>   subscribe to specific topic not working ...
| [Tuesday 08 June 2010] [07:06:56] <umesh>   I am using the simple chat program using forwarder ...
| [Tuesday 08 June 2010] [07:07:08] <umesh>   I want to display the specic messages ...
| [Tuesday 08 June 2010] [07:07:53] <umesh>   so what I did was I subscribed to the specific messages ... using s.setsockopt (ZMQ_SUBSCRIBE, "umesh\x00", 0);
| [Tuesday 08 June 2010] [07:08:06] <umesh>   and i haven't change the code for prompt ...
| [Tuesday 08 June 2010] [07:08:11] <sustrik> the third argument is the size
| [Tuesday 08 June 2010] [07:08:24] <umesh>   ohhh ... i missed it ...
| [Tuesday 08 June 2010] [07:08:27] <umesh>   sorry ...
| [Tuesday 08 June 2010] [07:08:30] <sustrik> :)
| [Tuesday 08 June 2010] [07:08:35] <umesh>   I knew it but ... i forgot ...
| [Tuesday 08 June 2010] [07:10:48] <CIA-17>  zeromq-examples: 03Martin Lucina 07master * r8cee253 10/ zmq-camera.c : Update to 0MQ 2.0.7 API - http://bit.ly/9qJTRz
| [Tuesday 08 June 2010] [07:12:55] <versificateur>   sustrik: if i bind a socket will it be opened or only when i started send/recv data?? 
| [Tuesday 08 June 2010] [07:14:07] <versificateur>   because i bind a PUB socket on a TCP port but executing a netstat command do show it
| [Tuesday 08 June 2010] [07:14:53] <sustrik> bind translates to standard TCP bind
| [Tuesday 08 June 2010] [07:15:03] <sustrik> connect translates to TCP connect
| [Tuesday 08 June 2010] [07:26:20] <CIA-17>  zeromq-examples: 03Martin Lucina 07turbo * r267de4a 10/ zmq-camera.c : Update to 0MQ 2.0.7 API - http://bit.ly/a3fCGF
| [Tuesday 08 June 2010] [07:33:13] <umesh>   in setsocket_opt like s.setsockopt (ZMQ_SUBSCRIBE, "xy.z\x00", 5);
| [Tuesday 08 June 2010] [07:33:23] <umesh>   why it is required to give \x00 ...
| [Tuesday 08 June 2010] [07:33:46] <umesh>   if i just give "xy.z" will also be null terminated ...
| [Tuesday 08 June 2010] [07:33:52] <umesh>   ?
| [Tuesday 08 June 2010] [07:34:39] <guido_g> the \000 is part of the subscription
| [Tuesday 08 June 2010] [07:35:00] <sustrik> it's used as delimiter in the example
| [Tuesday 08 June 2010] [07:35:12] <sustrik> if it's confusing use some other character instead
| [Tuesday 08 June 2010] [07:35:14] <sustrik> like |
| [Tuesday 08 June 2010] [07:35:18] <sustrik> or something
| [Tuesday 08 June 2010] [07:36:48] <umesh>   ok
| [Tuesday 08 June 2010] [07:36:51]    * sustrik thinks the \x00 should be replaced by something more sane in the cookbook...
| [Tuesday 08 June 2010] [07:37:06] <umesh>   its really very confusing ...
| [Tuesday 08 June 2010] [07:37:24] <sustrik> let me see...
| [Tuesday 08 June 2010] [07:37:30] <umesh>   i think in cookbook you can update this ...
| [Tuesday 08 June 2010] [07:37:56] <umesh>   also strlen gives difficulty if we use delimiter as \x00 ..
| [Tuesday 08 June 2010] [07:38:51] <sustrik> umesh: want to do that?
| [Tuesday 08 June 2010] [07:40:50] <umesh>   yup I can also do that ...
| [Tuesday 08 June 2010] [07:40:57] <sustrik> great, thanks!
| [Tuesday 08 June 2010] [07:41:08] <umesh>   but do I have rights to change cookbook text ...
| [Tuesday 08 June 2010] [07:41:16] <sustrik> you have to join the wiki to be able to edit
| [Tuesday 08 June 2010] [07:41:22] <sustrik> see left below
| [Tuesday 08 June 2010] [07:41:22] <umesh>   ok
| [Tuesday 08 June 2010] [07:41:33] <umesh>   I have already joined it ...
| [Tuesday 08 June 2010] [07:41:43] <sustrik> ah, then just edit it
| [Tuesday 08 June 2010] [07:46:21] <umesh>   does password update takes time ...
| [Tuesday 08 June 2010] [07:46:40] <umesh>   i am not able to login ... it says login and password does not match
| [Tuesday 08 June 2010] [07:46:47] <sustrik> :)
| [Tuesday 08 June 2010] [07:46:54] <sustrik> dunno
| [Tuesday 08 June 2010] [07:47:09] <sustrik> maybe you've made type when entering it?
| [Tuesday 08 June 2010] [07:47:13] <sustrik> typo
| [Tuesday 08 June 2010] [07:47:46] <umesh>   confirmed 2 times ...
| [Tuesday 08 June 2010] [07:48:16] <sustrik> ignore it and create a new account
| [Tuesday 08 June 2010] [07:55:54] <umesh>   done 
| [Tuesday 08 June 2010] [07:56:00] <umesh>   check the page once ...
| [Tuesday 08 June 2010] [07:56:12] <umesh>   http://www.zeromq.org/docs:cookbook
| [Tuesday 08 June 2010] [07:56:35] <umesh>   one more question : When I susbscribe to a topic ...
| [Tuesday 08 June 2010] [07:56:52] <umesh>   I get complete message with topic prefix ...
| [Tuesday 08 June 2010] [07:56:59] <umesh>   is it correct behaviour  ?
| [Tuesday 08 June 2010] [07:57:33] <umesh>   because I have assumed that it will only give me the message without topic ...
| [Tuesday 08 June 2010] [08:01:23] <guido_g> where does this assumption come from?
| [Tuesday 08 June 2010] [08:01:33] <guido_g> the topic is part of the (multipart-)message
| [Tuesday 08 June 2010] [08:13:26] <umesh>   it was just my thinking that topic will be removed before giving it to user ... not from any reading ...
| [Tuesday 08 June 2010] [08:16:48] <versificateur>   how can i read ONLY a part of a multipart message with java binding
| [Tuesday 08 June 2010] [08:17:05] <versificateur>   for example with a socket like this
| [Tuesday 08 June 2010] [08:17:16] <versificateur>   jsonSubscriber.setsockopt(ZMQ.SUBSCRIBE, "servers.smpp");
| [Tuesday 08 June 2010] [08:17:32] <sustrik> umesh: look good
| [Tuesday 08 June 2010] [08:17:41] <sustrik> but you forgot this piece: "Messages that receivers are going to subscribe to have to start with a NULL-terminated string (the topic)"
| [Tuesday 08 June 2010] [08:17:53] <sustrik> it's |-terminated now
| [Tuesday 08 June 2010] [08:18:19] <versificateur>   actually i got two messages 
| [Tuesday 08 June 2010] [08:18:49] <sustrik> if you send two messages
| [Tuesday 08 June 2010] [08:18:56] <sustrik> you receive two messages
| [Tuesday 08 June 2010] [08:19:09] <sustrik> there's nothing to do about that
| [Tuesday 08 June 2010] [08:20:01] <umesh>   yup
| [Tuesday 08 June 2010] [08:20:12] <umesh>   I will change that ...
| [Tuesday 08 June 2010] [08:22:06] <umesh>   done the change ...
| [Tuesday 08 June 2010] [08:24:50] <versificateur>   i thought that if subscribe with the channel name i'll only receive one message
| [Tuesday 08 June 2010] [08:25:57] <versificateur>   the message alone, not with the channel name as another message
| [Tuesday 08 June 2010] [08:27:33] <sustrik> it's fifo
| [Tuesday 08 June 2010] [08:27:41] <sustrik> what goes in, get out
| [Tuesday 08 June 2010] [08:28:15] <sustrik> umesh: thx
| [Tuesday 08 June 2010] [08:31:39] <versificateur>   yes I knew... but when i use the python bindings i only receive the message itself not the channel  
| [Tuesday 08 June 2010] [08:33:11] <versificateur>   so what <socket>.setsockopt(ZMQ.SUBSCRIBE, <some channel>); does in java bindings?
| [Tuesday 08 June 2010] [08:35:20] <sustrik> see zmq_setsockopt(3) man page
| [Tuesday 08 June 2010] [08:39:26] <umesh>   in zmq how we can do content based publish/subscrive instead of topic based ...
| [Tuesday 08 June 2010] [08:40:56] <sustrik> you want to add your own matching algorithm?
| [Tuesday 08 June 2010] [08:42:48] <umesh>   yup ...
| [Tuesday 08 June 2010] [08:43:02] <umesh>   how can i do that if I need to do ...
| [Tuesday 08 June 2010] [08:43:23] <umesh>   it not decided yet ... but I am trying to evalute that option as well ... 
| [Tuesday 08 June 2010] [08:54:25] <versificateur>   sustrik: so SUBSCRIBE setsockopt is only a filter ? i'll receive the channel submessage as well as the data submessage?
| [Tuesday 08 June 2010] [08:57:08] <versificateur>   like i started with the python bindings which has recv_multipart that handle each part sent I thought it was like that in java also
| [Tuesday 08 June 2010] [08:57:55] <versificateur>   but i'll have to do my recv multipart myself
| [Tuesday 08 June 2010] [08:58:52] <versificateur>   sustrik: I need more information on device behavior like it's not documented
| [Tuesday 08 June 2010] [09:00:06] <versificateur>   it's seems that it run an infinite loop in background
| [Tuesday 08 June 2010] [09:01:06] <versificateur>   because code after it don't run
| [Tuesday 08 June 2010] [09:03:24] <sustrik> umesh: you have to plug in your own algorithm
| [Tuesday 08 June 2010] [09:03:47] <sustrik> the current algorithm is placed in src/prefix_tree.hpp and .cpp
| [Tuesday 08 June 2010] [09:04:22] <sustrik> versificatuer: there's no such thing as channel and data submessages
| [Tuesday 08 June 2010] [09:04:29] <sustrik> there are just messages
| [Tuesday 08 June 2010] [09:04:34] <sustrik> some of them are single-part
| [Tuesday 08 June 2010] [09:04:40] <sustrik> some of them are multipart
| [Tuesday 08 June 2010] [09:05:08] <sustrik> subscription means 0MQ looks at the message and checks whether it's beginning matches the subscription
| [Tuesday 08 June 2010] [09:05:14] <sustrik> if not so it drops it
| [Tuesday 08 June 2010] [09:05:16] <sustrik> that's it
| [Tuesday 08 June 2010] [09:05:25] <versificateur>   well
| [Tuesday 08 June 2010] [09:05:38] <versificateur>   i understand
| [Tuesday 08 June 2010] [09:05:59] <versificateur>   it's a filter
| [Tuesday 08 June 2010] [09:06:00] <sustrik> versificateur: wrt device, yes it uses your thread to loop
| [Tuesday 08 June 2010] [09:07:23] <versificateur>   ok it's why you put it at the end of your multithreaded example
| [Tuesday 08 June 2010] [09:08:06] <sustrik> yes
| [Tuesday 08 June 2010] [09:08:35] <versificateur>   thanks!
| [Tuesday 08 June 2010] [09:08:37] <sustrik> np
| [Tuesday 08 June 2010] [09:09:20] <versificateur>   i finished test of Device implemetation in java
| [Tuesday 08 June 2010] [09:09:40] <versificateur>   i'll put it on giithub and ask you for a pull equest
| [Tuesday 08 June 2010] [09:14:15] <sustrik> grat, thanks!
| [Tuesday 08 June 2010] [09:21:45] <versificateur>   is  SNDMORE in java bindings implemented to send mutipart message?
| [Tuesday 08 June 2010] [09:24:45] <sustrik> not sure
| [Tuesday 08 June 2010] [09:24:47] <sustrik> let me see
| [Tuesday 08 June 2010] [09:25:46] <sustrik> a-ha it misses
| [Tuesday 08 June 2010] [09:26:44] <sustrik> should go to ZMQ.java
| [Tuesday 08 June 2010] [09:26:46] <sustrik> like this:
| [Tuesday 08 June 2010] [09:26:48] <sustrik> public static final int NOBLOCK = 1;
| [Tuesday 08 June 2010] [09:26:54] <sustrik> public static final int SNDMORE = 2;
| [Tuesday 08 June 2010] [09:27:13] <sustrik> will you add that to your fix?
| [Tuesday 08 June 2010] [09:27:28] <versificateur>   yes
| [Tuesday 08 June 2010] [09:37:59] Nick  impl_ is now known as impl.
| [Tuesday 08 June 2010] [11:36:06] <sustrik> versificateur: there's a question for you on the mailing list
| [Tuesday 08 June 2010] [11:36:39] <versificateur>   susrik: okay 
| [Tuesday 08 June 2010] [11:37:16] <versificateur>   i send the pull request to you only?? or to mato too?
| [Tuesday 08 June 2010] [11:39:58] <versificateur>   sustrik:???
| [Tuesday 08 June 2010] [11:40:40] <sustrik> send it to me
| [Tuesday 08 June 2010] [11:41:28] <sustrik> thx!
| [Tuesday 08 June 2010] [11:42:05] <versificateur>   :)
| [Tuesday 08 June 2010] [11:42:44] <versificateur>   the link to check the mailing list question
| [Tuesday 08 June 2010] [11:42:59] <versificateur>   i don't find it
| [Tuesday 08 June 2010] [12:51:09] <mikko>   sustrik: http://pastebin.com/8c824QBZ
| [Tuesday 08 June 2010] [12:52:13] <mikko>   happens when you dont send/recv/bind/connect
| [Tuesday 08 June 2010] [12:52:17] <mikko>   just create context and socket
| [Tuesday 08 June 2010] [15:32:59] <sustrik> mikko: i think it's OK
| [Tuesday 08 June 2010] [15:33:25] <sustrik> command_t structure that is being sent
| [Tuesday 08 June 2010] [15:33:30] <sustrik> is actually a union
| [Tuesday 08 June 2010] [15:33:56] <sustrik> for this particular command type there is less actual data than sizeof (command_t)
| [Tuesday 08 June 2010] [15:34:09] <sustrik> that's why valgring complains
| [Tuesday 08 June 2010] [16:28:39] <dermoth> Hey there... It's been a while I wantes to ask this; I'm curious about the high water mark
| [Tuesday 08 June 2010] [16:28:51] <dermoth>  /swap options, specifically how they work and where the data is stored...
| [Tuesday 08 June 2010] [16:29:21] <sustrik> dermoth: hi
| [Tuesday 08 June 2010] [16:29:26] <dermoth> hy sustrik 
| [Tuesday 08 June 2010] [16:29:47] <dermoth> hi
| [Tuesday 08 June 2010] [16:29:50] <sustrik> hwm limits number of messages in the memory
| [Tuesday 08 June 2010] [16:29:58] <dermoth> I understand the concept
| [Tuesday 08 June 2010] [16:30:04] <sustrik> swap is not ported from 1.0 yet
| [Tuesday 08 June 2010] [16:30:13] <sustrik> but should arrive soon
| [Tuesday 08 June 2010] [16:30:18] <dermoth> oh so it's just a no-op right now?
| [Tuesday 08 June 2010] [16:30:24] <sustrik> yes
| [Tuesday 08 June 2010] [16:30:54] <sustrik> it should simply offload the data on the HD when memory limits are hit
| [Tuesday 08 June 2010] [16:33:42] <dermoth> Ok, assuming it was working as expected, lets say I have web server workers that connects using an upstream/downstream scheme... could I just set HWM to zero (or nearly zero) to swap everything to disk when my forwarder device goes down? If the server crash and gets back up, will zeromq try to resume the transferts as soon as it is initialized? connected to the same device again?
| [Tuesday 08 June 2010] [16:34:37] <sustrik> no, it's not a persistence device
| [Tuesday 08 June 2010] [16:34:38] <dermoth> obviously with ZMQ_SWAP too ;)
| [Tuesday 08 June 2010] [16:34:44] <sustrik> it's swap
| [Tuesday 08 June 2010] [16:35:04] <dermoth> ok, so it's just to avoid using up all memory
| [Tuesday 08 June 2010] [16:35:05] <sustrik> used just to handle the situation when the data don't fit into memory
| [Tuesday 08 June 2010] [16:35:14] <sustrik> exactly
| [Tuesday 08 June 2010] [16:35:14] <dermoth> I see
| [Tuesday 08 June 2010] [16:43:12] <travisbrady> Where can I find the stock exchange example?  ./configure --with-exchange isn't recognized anymore.
| [Tuesday 08 June 2010] [16:52:57] <sustrik> it haven't been ported to 0MQ/2.0 yet
| [Tuesday 08 June 2010] [16:53:19] <sustrik> you can give it a try
| [Tuesday 08 June 2010] [16:56:31] <travisbrady> Ahh, ok, I'll take a look in the old repo on github
| [Tuesday 08 June 2010] [18:45:08] <jugg>    ZMQ_PAIR - for inproc:// endpoints, is the implementation usable?  The docs say its still experiemental (missing auto-reconnection), but I think that may not be so applicable to inproc?
| [Tuesday 08 June 2010] [18:47:28] <dermoth> jugg, I guess inproc reconnection migth be needed if you have threads that may restart and re-bind... I have no idea how stable it is though :)
| [Tuesday 08 June 2010] [18:51:05] <jugg>    For this implementation, that situation won't(!) occur.
| [Tuesday 08 June 2010] [18:53:27] <jugg>    hmm, "auto-reconnection" I hope has different meaning than one side of the endpoint closing the socket and re-opening though.
| [Tuesday 08 June 2010] [18:55:27] <jugg>    sockets are per thread, so it would be necessary to close the socket on thread exit, and create the socket on thread start.  I'd expect that use case *not* to fall under the missing "auto-reconnection" feature.
| [Tuesday 08 June 2010] [18:56:11] <jugg>    But my expectations don't always line up with reality :)
| [Tuesday 08 June 2010] [19:05:26] <dermoth> jugg, I could be wrong, but my understanding is that auto-reconnection means if the side that bind shuts down and restart, the socket will re-connect.
| [Tuesday 08 June 2010] [19:06:26] <dermoth> jugg, this is how it works with TCP...
| [Tuesday 08 June 2010] [19:08:29] <dermoth> note that unless you use req/rep sockets there is no guarantee the data will be delivered - however as long as your socket stays alive it will keep trying to deliver the data (that is with TCP)
| [Tuesday 08 June 2010] [19:14:10] <jugg>    Yah, if the bind socket goes away, I could see that "auto-reconnect" could be applicable to connected sockets.  thanks.
| [Wednesday 09 June 2010] [02:41:12] <jugg>  grrr. inproc requires the bind to occur before connect?  :(
| [Wednesday 09 June 2010] [02:42:12] <sustrik>   jugg: yes
| [Wednesday 09 June 2010] [02:42:18] <sustrik>   fixing it is on todo list
| [Wednesday 09 June 2010] [02:43:09] <jugg>  ok... back to managing thread startup synchronization :(
| [Wednesday 09 June 2010] [02:48:38] <sustrik>   jugg: don't you rather want to fix it in 0mq? it would be probably less hassle.
| [Wednesday 09 June 2010] [02:48:47] <sustrik>   i can give you pointers as where to look
| [Wednesday 09 June 2010] [02:49:11] <jugg>  please do
| [Wednesday 09 June 2010] [02:49:18] <sustrik>   ok, wait a sec
| [Wednesday 09 June 2010] [02:50:22] <sustrik>   have a look here:
| [Wednesday 09 June 2010] [02:50:23] <sustrik>   http://github.com/sustrik/zeromq2/blob/master/src/ctx.hpp#L144
| [Wednesday 09 June 2010] [02:50:42] <sustrik>   it's a map of inproc endpoints created by binds
| [Wednesday 09 June 2010] [02:51:24] <sustrik>   when a socket connects to an inproc endpoint it checks this map and finds the socket that created it
| [Wednesday 09 June 2010] [02:51:54] <sustrik>   what's missing is a similar map of endpoint people wish to connect to, but which don't exist at the moment
| [Wednesday 09 June 2010] [02:53:55] <sustrik>   then have a look here:
| [Wednesday 09 June 2010] [02:53:56] <sustrik>   http://github.com/sustrik/zeromq2/blob/master/src/ctx.hpp#L144
| [Wednesday 09 June 2010] [02:54:06] <sustrik>   sorry
| [Wednesday 09 June 2010] [02:54:07] <sustrik>   here:
| [Wednesday 09 June 2010] [02:54:08] <sustrik>   http://github.com/sustrik/zeromq2/blob/master/src/ctx.cpp#L260
| [Wednesday 09 June 2010] [02:54:26] <sustrik>   register_endpoint is a function that's called when inproc bind is done
| [Wednesday 09 June 2010] [02:54:36] <sustrik>   aside of storing the name in the map
| [Wednesday 09 June 2010] [02:54:57] <sustrik>   it should check whether there are any sockets waiting to connect to the newly created endpoint
| [Wednesday 09 June 2010] [02:55:04] <sustrik>   and if so, connect them
| [Wednesday 09 June 2010] [02:56:07] <jugg>  ok, thanks.  I'll look through it.
| [Wednesday 09 June 2010] [02:56:18] <sustrik>   the inproc connecting code is here: http://github.com/sustrik/zeromq2/blob/master/src/socket_base.cpp#L181
| [Wednesday 09 June 2010] [02:56:52] <sustrik>   in overall, the whole thing has some 100-200 lines, so it should not be too complex to fix
| [Wednesday 09 June 2010] [06:25:35] <mikko> ZMQ_SNDMORE is a flag to send rather than setsockopt, right?
| [Wednesday 09 June 2010] [06:29:58] <sustrik>   yes
| [Wednesday 09 June 2010] [06:30:18] <sustrik>   mikko: ZMQ_RCVMORE on the other hand is a socketopt
| [Wednesday 09 June 2010] [06:30:42] <sustrik>   it's kind of asymetric, but the API looks the least complex this way
| [Wednesday 09 June 2010] [06:42:17] <mikko> rcvmore is uint64_t 
| [Wednesday 09 June 2010] [06:42:17] <mikko> ?
| [Wednesday 09 June 2010] [06:44:55] <mikko> int64t
| [Wednesday 09 June 2010] [06:46:14] <sustrik>   int64_t
| 
| *** Logfile started
| *** on Wed Jun 9 11:14:03 2010
| 
| [Wednesday 09 June 2010] [11:14:03] Topic   The channel topic is "Welcome!".
| [Wednesday 09 June 2010] [11:14:03] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 09 June 2010] [11:14:09] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 09 June 2010] [11:14:09] Created This channel was created on 2010-02-05 10:44.
| [Wednesday 09 June 2010] [11:49:44] <CIA-17>    zeromq2: 03Martin Sustrik 07master * r604f747 10/ src/poll.cpp : issue 32 - poll_t poller broken - http://bit.ly/aucae6
| 
| *** Logfile started
| *** on Wed Jun 9 19:09:19 2010
| 
| [Wednesday 09 June 2010] [19:09:19] Topic   The channel topic is "Welcome!".
| [Wednesday 09 June 2010] [19:09:19] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 09 June 2010] [19:09:25] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 09 June 2010] [19:09:25] Created This channel was created on 2010-02-05 10:44.
| [Wednesday 09 June 2010] [19:43:45] <travisbrady>   sustrik: they are in the same os thread yes
| [Thursday 10 June 2010] [00:43:24] <sustrik>    travisbrady: ok
| [Thursday 10 June 2010] [00:43:40] <sustrik>    can you get a backtrace from the bus error?
| [Thursday 10 June 2010] [00:54:43] <travisbrady>    sustrik: I actually worked through the earlier issue, I'm now working on zmq_msg_data
| [Thursday 10 June 2010] [01:02:37] <sustrik>    ok, so everthing works ok as for now?
| [Thursday 10 June 2010] [01:02:56] <travisbrady>    well, now I'm getting "Assertion failed: !inpipe && !outpipe (pair.cpp:47)"
| [Thursday 10 June 2010] [01:03:04] <travisbrady>    Looking at pair.cpp now
| [Thursday 10 June 2010] [01:03:42] <sustrik>    travisbrady: pair is unfinished
| [Thursday 10 June 2010] [01:04:13] <sustrik>    docs say:
| [Thursday 10 June 2010] [01:04:14] <sustrik>    Note
| [Thursday 10 June 2010] [01:04:14] <sustrik>                   ZMQ_PAIR sockets are experimental, and are currently missing several features such as auto-reconnection.
| [Thursday 10 June 2010] [01:04:40] <sustrik>    so rather try using different socket type
| [Thursday 10 June 2010] [01:05:06] <travisbrady>    Hmm, I was using type 4
| [Thursday 10 June 2010] [01:05:38] <sustrik>    REP?
| [Thursday 10 June 2010] [01:05:42] <sustrik>    that one is OK
| [Thursday 10 June 2010] [01:07:23] <travisbrady>    sustrik: Yeah, I'm basically trying to implement the simple client server app from http://www.zeromq.org/docs:cookbook in ocaml as a test
| [Thursday 10 June 2010] [01:08:04] <sustrik>    sure, that should work
| [Thursday 10 June 2010] [01:08:25] <sustrik>    just avoid PAIR sockets
| [Thursday 10 June 2010] [01:11:56] <travisbrady>    Hmm, yeah I'm not touching them at all, I have no idea how I'm reaching that assertion in pair.cpp
| [Thursday 10 June 2010] [01:13:52] <sustrik>    uninitialised socket type used (0 = pair)?
| [Thursday 10 June 2010] [01:15:41] <travisbrady>    Ahh, yep, you're right.  There was a problem in my wrap_zmq_socket function
| [Thursday 10 June 2010] [01:21:53] <CIA-17> zeromq2: 03Martin Sustrik 07master * rd329c55 10/ src/tcp_connecter.cpp : issue 31 - Assertion failed: err == ECONNREFUSED || err == ETIMEDOUT (tcp_connecter.cpp:296) - http://bit.ly/aOnmHR
| [Thursday 10 June 2010] [01:21:54] <CIA-17> zeromq2: 03Martin Sustrik 07master * r76e0153 10/ (4 files): issue 33 - missing virtual destructors - http://bit.ly/9Xaca8
| [Thursday 10 June 2010] [01:34:53] <CIA-17> zeromq2: 03Piotr Trojanek 07master * r8782b4d 10/ configure.in : -lcrypto added to linking flags for QNX - http://bit.ly/b35ZMj
| 
| *** Logfile started
| *** on Thu Jun 10 05:49:53 2010
| 
| [Thursday 10 June 2010] [05:49:53] Topic    The channel topic is "Welcome!".
| [Thursday 10 June 2010] [05:49:53] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Thursday 10 June 2010] [05:49:59] Mode Channel modes: no messages from outside, topic protection
| [Thursday 10 June 2010] [05:49:59] Created  This channel was created on 2010-02-05 10:44.
| [Thursday 10 June 2010] [06:37:09] <CIA-17> zeromq2: 03Martin Sustrik 07master * r74a3907 10/ (src/encoder.hpp src/uuid.cpp): couple of ICC warnings fixed - http://bit.ly/9CRrH6
| [Thursday 10 June 2010] [06:56:44] <alefka> hi
| [Thursday 10 June 2010] [06:58:23] <CIA-17> zeromq2: 03Piotr Trojanek 07master * rc818b14 10/ src/ctx.cpp : clearing thread info structure - http://bit.ly/bjl1Cr
| [Thursday 10 June 2010] [06:58:31] <alefka> Has any possibility to point length of data to send?
| [Thursday 10 June 2010] [06:59:29] <sustrik>    alefka: you don't know how much data you want to send?
| [Thursday 10 June 2010] [07:00:14]   * sustrik is puzzled
| [Thursday 10 June 2010] [07:00:56] <alefka> know. I have large buffer (64 K), but I want to send for example the first 20 bytes... Can I do it without recreation of array?
| [Thursday 10 June 2010] [07:01:44] <alefka> just point to send function a length parameter for example or something else
| [Thursday 10 June 2010] [07:02:31] <alefka> In the regular zeromq lib I have no found the one
| [Thursday 10 June 2010] [07:02:44] <sustrik>    zmq::message_t msg  (20);
| [Thursday 10 June 2010] [07:02:54] <sustrik>    memcpy (msg.data (), buffer, 20);
| [Thursday 10 June 2010] [07:02:58] <sustrik>    s.send (msg);
| [Thursday 10 June 2010] [07:07:56] <alefka> aha... I use Java
| [Thursday 10 June 2010] [07:08:02] <alefka> :)
| [Thursday 10 June 2010] [07:23:54] <umesh>  I am getting error while compiling python bindings of zeromq
| [Thursday 10 June 2010] [07:24:20] <umesh>  zmq/_zmq.c: In function init_zmq:
| [Thursday 10 June 2010] [07:24:21] <umesh>  zmq/_zmq.c:9723: error: ZMQ_PAIR undeclared (first use in this function)
| [Thursday 10 June 2010] [07:24:21] <umesh>  zmq/_zmq.c:9723: error: (Each undeclared identifier is reported only once
| [Thursday 10 June 2010] [07:24:21] <umesh>  zmq/_zmq.c:9723: error: for each function it appears in.)
| [Thursday 10 June 2010] [07:24:32] <umesh>  these are the errors i get 
| [Thursday 10 June 2010] [07:26:18] <sustrik>    umesh: do you have latest pyzmq?
| [Thursday 10 June 2010] [07:26:48] <umesh>  i version before latest ...
| [Thursday 10 June 2010] [07:26:54] <umesh>  as i am using 2.0.6 
| [Thursday 10 June 2010] [07:27:05] <umesh>  1 version before latest ...
| [Thursday 10 June 2010] [07:27:39] <sustrik>    the latest version updates to 2.0.7 API:
| [Thursday 10 June 2010] [07:27:40] <sustrik>    Updating to new 2.0.7 API changes.
| [Thursday 10 June 2010] [07:27:40] <sustrik>    * Context only takes the number of io threads.
| [Thursday 10 June 2010] [07:27:40] <sustrik>    * P2P -> PAIR.
| [Thursday 10 June 2010] [07:27:40] <sustrik>    * No stopwatch.
| [Thursday 10 June 2010] [07:27:40] <sustrik>    * No LWM socket option.
| [Thursday 10 June 2010] [07:29:23] <umesh>  thats the reason i am not using latest ... because i am using zmq c version  2.0.6
| [Thursday 10 June 2010] [07:34:27] <sustrik>    then use P2P
| [Thursday 10 June 2010] [07:34:34] <sustrik>    it was renamed to PAIR in 2.0.7
| [Thursday 10 June 2010] [07:36:54] <alefka> sustrik: \I suppose java lib has no such oportunity... is it so?
| [Thursday 10 June 2010] [07:37:18] <sustrik>    java lib works with java byte arrays
| [Thursday 10 June 2010] [07:37:37] <alefka> ok
| [Thursday 10 June 2010] [07:37:42] <sustrik>    is it a problem to take first 20 characters from a byte array?
| [Thursday 10 June 2010] [07:37:54] <sustrik>    arr [0..19]
| [Thursday 10 June 2010] [07:37:56] <sustrik>    or something
| [Thursday 10 June 2010] [07:38:03]   * sustrik doesn't speak java
| [Thursday 10 June 2010] [08:44:18] <umesh>  can i ask some git questions here .
| [Thursday 10 June 2010] [08:44:46] <umesh>  basically how to go to i version back for a specific file in git respository if you are at head 
| [Thursday 10 June 2010] [09:19:12] Part addicted has left this channel ("Konversation terminated!").
| [Thursday 10 June 2010] [11:33:43] <CIA-17> rbzmq: 03Brian Buchanan 07master * r12c3a9f 10/ rbzmq.cpp : whitespace cleanup for consistent coding style - http://bit.ly/9CGo7J
| [Thursday 10 June 2010] [11:33:43] <CIA-17> rbzmq: 03Brian Buchanan 07master * r1f7c517 10/ rbzmq.cpp : fix crash on access of socket that has been closed - http://bit.ly/dfwZoH
| [Thursday 10 June 2010] [12:16:20] <sbeaulois>  hi 
| [Thursday 10 June 2010] [12:19:51] <sbeaulois>  I tried to bind pyzmq on  rhel 5 but i got some error m=when finish binding 
| [Thursday 10 June 2010] [12:20:38] <sbeaulois>  i cannot import zmq module from comand 
| [Thursday 10 June 2010] [12:21:05] <guido_g>    paste the error message to a paste-bin
| [Thursday 10 June 2010] [12:21:22] <guido_g>    w/o the messages we can't help
| [Thursday 10 June 2010] [12:21:24] <sbeaulois>  cannot import name _zmq
| [Thursday 10 June 2010] [12:21:35] <guido_g>    -> <sbeaulois> I tried to bind pyzmq on  rhel 5 but i got some error m=when finish binding
| [Thursday 10 June 2010] [12:22:15] <guido_g>    what shall this line say?
| [Thursday 10 June 2010] [12:22:29] <sbeaulois>  my english is not good 
| [Thursday 10 June 2010] [12:22:30] <sbeaulois>  ok 
| [Thursday 10 June 2010] [12:22:42] <sbeaulois>  i will like bind pyzmq 
| [Thursday 10 June 2010] [12:23:00] <sbeaulois>  on RedHat Entriprise Linux 5
| [Thursday 10 June 2010] [12:24:50] <guido_g>    what do you mean with "bind"?
| [Thursday 10 June 2010] [12:25:10] <sbeaulois>  install
| [Thursday 10 June 2010] [12:25:20] <guido_g>    ahhh
| [Thursday 10 June 2010] [12:25:25] <sbeaulois>  i will compiled pyzmq
| [Thursday 10 June 2010] [12:25:33] <guido_g>    ok
| [Thursday 10 June 2010] [12:25:38] <guido_g>    any errors there?
| [Thursday 10 June 2010] [12:25:53] <sbeaulois>  i compiled pyzmq fine
| [Thursday 10 June 2010] [12:26:09] <guido_g>    ok
| [Thursday 10 June 2010] [12:26:16] <guido_g>    how did you do that?
| [Thursday 10 June 2010] [12:26:21] <sbeaulois>  but when i tried to import zmq from python command line i got somes errors 
| [Thursday 10 June 2010] [12:26:31] <sbeaulois>   cannot import name _zmq
| [Thursday 10 June 2010] [12:26:55] <guido_g>    how did you compile and install pyzmq?
| [Thursday 10 June 2010] [12:27:02] <versificateur>  look at here http://blog.boxedice.com/2010/05/23/building-zeromq-and-pyzmq-on-red-hat/
| [Thursday 10 June 2010] [12:27:43] <guido_g>    ok
| [Thursday 10 June 2010] [12:27:53] <guido_g>    did you follow all the mentioned steps?
| [Thursday 10 June 2010] [12:28:11] <sbeaulois>  verficateur => ok 
| [Thursday 10 June 2010] [12:28:44] <guido_g>    versificateur: ahhh, /me is silent then :)
| [Thursday 10 June 2010] [12:29:54] <versificateur>  :) what means /me ?
| [Thursday 10 June 2010] [12:30:02] <sbeaulois>  i'am going to trie it
| [Thursday 10 June 2010] [12:30:22] <guido_g>    versificateur: myself, I, the one writing
| [Thursday 10 June 2010] [12:30:44] <versificateur>  sustrik: are you here??
| [Thursday 10 June 2010] [12:30:45] <guido_g>    versificateur: most clients expand that to your nick, when given as first word
| [Thursday 10 June 2010] [12:30:49] <guido_g>    like:
| [Thursday 10 June 2010] [12:30:55] <versificateur>  ah okay
| [Thursday 10 June 2010] [12:30:55]   * guido_g is silent now
| [Thursday 10 June 2010] [15:38:42] <sustrik>    i am here
| [Thursday 10 June 2010] [15:38:52] <sustrik>    but i have no experience with pyzmq
| [Thursday 10 June 2010] [15:38:59] <sustrik>    brian should know
| [Thursday 10 June 2010] [15:39:05] <sustrik>    try asking on the mailing list
| [Thursday 10 June 2010] [16:26:19] Notice   -Martinp23- [Global Notice] Our webchat is experiencing big changes! Channel ops: you may need to fix some of your bans or quiets as a result. All the details can be found at http://bit.ly/ckfqLh and you can get help at any time in #freenode. Thanks for using freenode and have a great day!
| [Thursday 10 June 2010] [16:48:14] <travlr> Is kde-4.5 called kde-4.4.85, and if so Is kde-4.4.9999 the latest for kde-4.4 ???
| [Thursday 10 June 2010] [16:49:42] <travlr> sorry wrong channel :P
| [Thursday 10 June 2010] [19:47:59] Mode ChanServ gives CIA-17 permission to talk.
| [Thursday 10 June 2010] [21:15:29] Nick kcollins is now known as temme.
| [Friday 11 June 2010] [00:56:18] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r27877d7 10/ src/tcp_connecter.cpp : EHOSTUNREACH is acceptable outcome from connect - http://bit.ly/dzcG79
| [Friday 11 June 2010] [01:03:20] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r5ee355d 10/ src/tcp_connecter.cpp : if connect asserts, exact error is reported - http://bit.ly/b0P5Qg
| [Friday 11 June 2010] [01:56:07] <umesh>    can I use XREP and REQ socket pairs ...
| [Friday 11 June 2010] [01:56:26] <umesh>    means in server I will use XREP and client will use REQ socket ...
| [Friday 11 June 2010] [01:56:59] <umesh>    I want to do this because I want to send multiple responses to a single request ...  
| [Friday 11 June 2010] [01:57:40] <sustrik>  umesh that won't work
| [Friday 11 June 2010] [01:57:51] <sustrik>  use XREQ/XREP
| [Friday 11 June 2010] [01:57:57] <umesh>    ok
| [Friday 11 June 2010] [01:58:19] <sustrik>  be aware that you have to copy routeback info from request to reply
| [Friday 11 June 2010] [01:58:25] <sustrik>  by hand
| [Friday 11 June 2010] [01:58:37] <umesh>    will I be able to send multiple responses to the single request ...
| [Friday 11 June 2010] [01:58:39] <umesh>    ?
| [Friday 11 June 2010] [01:59:09] <sustrik>  when you get the request on the XREP side
| [Friday 11 June 2010] [01:59:21] <sustrik>  it'll be composed of routeback info and your message
| [Friday 11 June 2010] [01:59:38] <sustrik>  routeback info says how to route the reply back to the requester
| [Friday 11 June 2010] [01:59:47] <sustrik>  you have to copy it to the reply
| [Friday 11 June 2010] [01:59:56] <sustrik>  so that 0MQ knows where to send the message
| [Friday 11 June 2010] [02:00:15] <sustrik>  REQ/REP does this for you; with XREQ/XREP you have to handle it by hand
| [Friday 11 June 2010] [02:00:37] <sustrik>  btw, sending a multi-part reply won't do?
| [Friday 11 June 2010] [02:04:23] <CIA-17>   zeromq2: 03Brian Buchanan 07master * rac90b7e 10/ (AUTHORS src/socket_base.cpp): issue 35 - ZMQ_RCVMORE sometimes erroneously returns false - http://bit.ly/dvw31S
| [Friday 11 June 2010] [02:05:36] <umesh>    sustrik: I want to avoid parsing in client ...
| [Friday 11 June 2010] [02:05:46] <umesh>    of multipart reply ...
| [Friday 11 June 2010] [02:05:50] <sustrik>  then use multi-part reply
| [Friday 11 June 2010] [02:05:54] <sustrik>  ?
| [Friday 11 June 2010] [02:05:57] <sustrik>  what parsing
| [Friday 11 June 2010] [02:06:30] <sustrik>  in any case the point is that multi-part message is guaranteed to be atomic
| [Friday 11 June 2010] [02:06:37] <sustrik>  you either get all parts or none
| [Friday 11 June 2010] [02:06:56] <umesh>    if I send multipart reply then in the client when I recv ... I will get one message and then need to parse that multipart message 
| [Friday 11 June 2010] [02:07:07] <umesh>    ok
| [Friday 11 June 2010] [02:07:17] <umesh>    means I will get multple recv ...
| [Friday 11 June 2010] [02:07:21] <sustrik>  yes
| [Friday 11 June 2010] [02:07:24] <umesh>    ok
| [Friday 11 June 2010] [02:07:59] <sustrik>  see ZMQ_SNDMORE and ZMQ_RCVMORE
| [Friday 11 June 2010] [02:09:25] <umesh>    no documention of this in zmq_setsocketopt manaul 
| [Friday 11 June 2010] [02:09:48] <umesh>    therefore I was not aware of this multipart reply ...
| [Friday 11 June 2010] [02:11:43] <umesh>    not even in send and recv api
| 
| *** Logfile started
| *** on Fri Jun 11 08:31:34 2010
| 
| [Friday 11 June 2010] [08:31:34] Topic  The channel topic is "Welcome!".
| [Friday 11 June 2010] [08:31:34] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Friday 11 June 2010] [08:31:40] Mode   Channel modes: no messages from outside, topic protection
| [Friday 11 June 2010] [08:31:40] Created    This channel was created on 2010-02-05 10:44.
| [Friday 11 June 2010] [08:31:41] <sustrik>  why ephemeral ports then?
| [Friday 11 June 2010] [08:31:46] <brickhazel>   yes the nameservice locations are fixed, everything else is random
| [Friday 11 June 2010] [08:33:12] <brickhazel>   we have a resource manager that is capable of dynamically starting a service anywhere in the network depending on loading
| [Friday 11 June 2010] [08:33:26] <brickhazel>   we then want to be able to discover the service
| [Friday 11 June 2010] [08:33:26] <sustrik>  if it's accessible :)
| [Friday 11 June 2010] [08:33:56] <sustrik>  well, this may work in corporate environment, but won't work in Internet scenarios
| [Friday 11 June 2010] [08:33:57] <brickhazel>   if what is accessible?  
| [Friday 11 June 2010] [08:34:07] <brickhazel>   true.. this is a closed system
| [Friday 11 June 2010] [08:34:15] <sustrik>  the location where you want to start the service
| [Friday 11 June 2010] [08:34:32] <sustrik>  yes, but 0mq is meant also for Internet environments
| [Friday 11 June 2010] [08:34:39] <sustrik>  and thus ephemeral ports are not an option
| [Friday 11 June 2010] [08:34:51] <sustrik>  you can fork the project and add the code if needed...
| [Friday 11 June 2010] [08:35:59] <brickhazel>   hmm... not a big fan of forking
| [Friday 11 June 2010] [08:38:19] <brickhazel>   ok, thanks for your help.. i need to think about this some more
| [Friday 11 June 2010] [08:45:48] <sustrik>  brickhazel: think of services, http is on port 80, ssh is on port 22, why should your service be different
| [Friday 11 June 2010] [08:46:58] <brickhazel>   sustrik: these are more like micro-services sprinkled throughout our closed network
| [Friday 11 June 2010] [08:47:21] <brickhazel>   failover is a common occurrence
| [Friday 11 June 2010] [08:47:53] <brickhazel>   it is a very dynamic system and service discovery is how we have been connecting things so far
| [Friday 11 June 2010] [08:48:04] <sustrik>  sure, it's up to you
| [Friday 11 June 2010] [08:48:22] <brickhazel>   i think there are too many endpoints to try to manage by hand (aka assigning fixed ports to services)
| [Friday 11 June 2010] [08:48:34] <sustrik>  too many service types?
| [Friday 11 June 2010] [08:48:39] <brickhazel>   yes
| [Friday 11 June 2010] [08:48:57] <sustrik>  the person who implements the service should choose a port number for it
| [Friday 11 June 2010] [08:49:06] <sustrik>  it's not that much work
| [Friday 11 June 2010] [08:50:19] <brickhazel>   true... but this is a system of subsystems
| [Friday 11 June 2010] [08:50:31] <brickhazel>   someone has to manage a master list of all ports
| [Friday 11 June 2010] [08:50:40] <brickhazel>   across many different projects
| [Friday 11 June 2010] [08:51:00] <sustrik>  IANA? :)
| [Friday 11 June 2010] [08:51:28] <brickhazel>   :) yes but this is not internet scale
| [Friday 11 June 2010] [08:51:51] <sustrik>  having a port number registered at IANA is good for your ego :)
| [Friday 11 June 2010] [08:51:54] <brickhazel>   more like a distributed/parallel processing system
| [Friday 11 June 2010] [08:52:13] <brickhazel>   :) i bet
| [Friday 11 June 2010] [08:52:26] <sustrik>  i understand
| [Friday 11 June 2010] [08:52:46] <sustrik>  the whole point of 0mq, however, is to make app you write infinitely scalable
| [Friday 11 June 2010] [08:53:10] <sustrik>  unfortunately, local hacks like ephemeral port numbers interfere with that
| [Friday 11 June 2010] [08:54:17] <sustrik>  that's why i don't want it in the trunk
| [Friday 11 June 2010] [08:54:30] <brickhazel>   i understand
| [Friday 11 June 2010] [08:59:31] <umesh>    I am getting the extra appended string on the server in REQ/REP sockets 
| [Friday 11 June 2010] [08:59:44] <sustrik>  ?
| [Friday 11 June 2010] [08:59:50] <umesh>    I send string "ns_set app app1" from client 
| [Friday 11 June 2010] [09:00:11] <umesh>    and I recieved "ns_set app app1fifo_fast" on server
| [Friday 11 June 2010] [09:00:39] <umesh>    I checked pcap capture ... it shows correctly "ns_set app app1"
| [Friday 11 June 2010] [09:00:40] <sustrik>  i assume there's no terminating zero in the string
| [Friday 11 June 2010] [09:01:06] <sustrik>  thus printf prints also the bogus memory after the end of the string
| [Friday 11 June 2010] [09:02:33] <umesh>    but original string does have ...
| [Friday 11 June 2010] [09:03:24] <sustrik>  i assume you don't send it in the message
| [Friday 11 June 2010] [09:18:56] <umesh>    now working ...
| [Friday 11 June 2010] [09:19:16] <umesh>    it was the issue of null char ... i saw pcap as well ... end 0 was not there 
| [Friday 11 June 2010] [09:19:34] <umesh>    one more point ... how is multipart messages are implemented ...
| [Friday 11 June 2010] [09:19:57] <umesh>    means only one message is send or multiple messges clubbed together ...
| [Friday 11 June 2010] [09:20:05] <umesh>    and then send ...
| [Friday 11 June 2010] [09:20:09] <umesh>    i assume later 
| [Friday 11 June 2010] [09:21:21] <sustrik>  the latter
| [Friday 11 June 2010] [09:23:49] <umesh>    ok
| [Friday 11 June 2010] [12:37:19] Nick   test is now known as Guest80153.
| [Friday 11 June 2010] [14:22:36] <cremes>   is the "request identity" prepended to messages sent on XREQ sockets guaranteed to remain the same for the life of the socket?
| [Friday 11 June 2010] [14:24:43] <sustrik>  cremes: yes
| [Friday 11 June 2010] [14:24:58] <sustrik>  hm, well, unless reconnection happens
| [Friday 11 June 2010] [14:25:18] <sustrik>  if you set the identity by hand it'll never change
| [Friday 11 June 2010] [14:25:48] <sustrik>  if you don't set it, it is generated by the peer each time TCP connection is established
| [Friday 11 June 2010] [14:26:02] <cremes>   oh, i see
| [Friday 11 June 2010] [14:26:06] <cremes>   i'll set it myself then
| [Friday 11 June 2010] [14:26:16] <cremes>   i don't want it to ever change
| [Friday 11 June 2010] [14:27:04] <sustrik>  this is to be done in the binding or in your app?
| [Friday 11 June 2010] [14:27:09] <cremes>   in my app
| [Friday 11 June 2010] [14:27:13] <sustrik>  ok
| [Friday 11 June 2010] [14:27:16] <sustrik>  makes semse
| [Friday 11 June 2010] [14:27:19] <sustrik>  sense
| [Friday 11 June 2010] [14:27:27] <cremes>   i'm leaving the binding as "vanilla" as possible so it matches the C api closely
| [Friday 11 June 2010] [14:27:50] <sustrik>  yes, that's good
| [Friday 11 June 2010] [14:28:06] <cremes>   sustrik: on a related note, i'd like to confirm that it doesn't make any sense to set an identity on a SUB socket since it can't transmit
| [Friday 11 June 2010] [14:28:35] <sustrik>  it does
| [Friday 11 June 2010] [14:28:40] <sustrik>  the point with identities
| [Friday 11 June 2010] [14:28:51] <cremes>   rephrase please
| [Friday 11 June 2010] [14:29:00] <sustrik>  is that they allow to track resources assigned to particular connection
| [Friday 11 June 2010] [14:29:12] <sustrik>  example:
| [Friday 11 June 2010] [14:29:27] <sustrik>  when SUB socket connect to PUB socket
| [Friday 11 June 2010] [14:29:36] <versificateur>    hello
| [Friday 11 June 2010] [14:29:38] <sustrik>  PUB socket creates a message queue
| [Friday 11 June 2010] [14:29:45] <sustrik>  for that particular connection
| [Friday 11 June 2010] [14:30:01] <sustrik>  if the connection breaks and gets reestablished
| [Friday 11 June 2010] [14:30:34] <sustrik>  SUB's identity allows the PUB to pair the new connection with the old queue
| [Friday 11 June 2010] [14:30:46] <cremes>   ah, it maps the queue by identity? i think i get it now.
| [Friday 11 June 2010] [14:30:51] <sustrik>  yes
| [Friday 11 June 2010] [14:30:55] <versificateur>    sustrik: did you had a look to my jzmq modifications?
| [Friday 11 June 2010] [14:31:02] <cremes>   thank you for the clarification
| [Friday 11 June 2010] [14:31:10] <sustrik>  np
| [Friday 11 June 2010] [14:31:13] <sustrik>  versificateur: yes i did
| [Friday 11 June 2010] [14:31:18] <sustrik>  i replied on github
| [Friday 11 June 2010] [14:31:23] <sustrik>  you've probably missed the message
| [Friday 11 June 2010] [14:31:44] <sustrik>  anyway the problem is that every single line of zmq is touched in the patch
| [Friday 11 June 2010] [14:31:54] <sustrik>  it's impossible to review it
| [Friday 11 June 2010] [14:32:03] <sustrik>  maybe the line endings are different?
| [Friday 11 June 2010] [14:34:02] <versificateur>    hum...
| [Friday 11 June 2010] [14:34:27] <versificateur>    i can tell you files I added
| [Friday 11 June 2010] [14:34:38] <sustrik>  you have written it on windows?
| [Friday 11 June 2010] [14:34:44] <versificateur>    and files i modified...
| [Friday 11 June 2010] [14:35:01] <versificateur>    no no not on windows
| [Friday 11 June 2010] [14:35:27] <versificateur>    i currently work on Fedora 12 and Ubuntu 10.04
| [Friday 11 June 2010] [14:35:33] <sustrik>  i recall there were changes to MSVC project
| [Friday 11 June 2010] [14:35:39] <sustrik>  let me see...
| [Friday 11 June 2010] [14:36:21] <versificateur>    i made them manually
| [Friday 11 June 2010] [14:36:31] <versificateur>    then tested them on windows
| [Friday 11 June 2010] [14:36:36] <sustrik>  ah
| [Friday 11 June 2010] [14:37:45] <sustrik>  have a look here:
| [Friday 11 June 2010] [14:37:47] <sustrik>  http://github.com/bluig/jzmq/commit/20c2ead95d48039950d52c929daf3de2b8d05e4f
| [Friday 11 June 2010] [14:38:28] <sustrik>  how come everything is marked as changed?
| [Friday 11 June 2010] [14:39:31] <versificateur>    probably because I'm not good with git
| [Friday 11 June 2010] [14:39:45] <sustrik>  neither am i
| [Friday 11 June 2010] [14:39:58] <sustrik>  hallo! any git experts around???
| [Friday 11 June 2010] [14:41:21] <sustrik>  hm, maybe the diff itself failed in some strange way
| [Friday 11 June 2010] [14:41:30] <versificateur>    perhaps i should remove the repository and restart from scratch???
| [Friday 11 June 2010] [14:41:34] <sustrik>  there are 2 unmodified lines there...
| [Friday 11 June 2010] [14:42:12] <sustrik>  well, you are testing it on linux and windows, right?
| [Friday 11 June 2010] [14:42:37] <versificateur>    yeah
| [Friday 11 June 2010] [14:42:47] <sustrik>  that's the same i would do
| [Friday 11 June 2010] [14:42:51] <sustrik>  so let's do it this way
| [Friday 11 June 2010] [14:43:01] <sustrik>  i'll add you as contributor to the project
| [Friday 11 June 2010] [14:43:12] <versificateur>    :)
| [Friday 11 June 2010] [14:43:15] <sustrik>  that'll allow you to commit yourself
| [Friday 11 June 2010] [14:43:28] <versificateur>    thanks
| [Friday 11 June 2010] [14:43:28] <sustrik>  you make sure that it builds/works on the two platforms
| [Friday 11 June 2010] [14:43:32] <sustrik>  wait a sec
| [Friday 11 June 2010] [14:45:07] <sustrik>  versificateur: done
| [Friday 11 June 2010] [14:45:47] <versificateur>    :)
| [Friday 11 June 2010] [14:55:45] <travisbrady>  versificateur: which language are you writing a binding for?
| [Friday 11 June 2010] [15:00:20] <versificateur>    java
| [Friday 11 June 2010] [16:20:41] <sg>   anybody on?
| [Friday 11 June 2010] [17:06:45] <soren>    I'm hoping someone can help me explain this: http://pastebin.com/qsWYHhdK
| [Friday 11 June 2010] [17:07:34] <soren>    When I run those two, the consumer only sees every 256th message.
| [Friday 11 June 2010] [17:08:04] <soren>    I thought the producer might be going to fast, so I added the sleep statement.. Didn't help at all.
| [Friday 11 June 2010] [17:08:20] <soren>    I'm sure I'm doing something silly, but I can't see what it is.
| [Friday 11 June 2010] [17:11:37] <soren>    err... but now it works.
| [Friday 11 June 2010] [17:12:33] <soren>    I can't imagine what I changed..
| [Friday 11 June 2010] [17:12:47] <sustrik>  soren: hi
| [Friday 11 June 2010] [17:13:10] <sustrik>  you are subsribed only for messages that start with zero byte :)
| [Friday 11 June 2010] [17:13:18] <sustrik>  zmq_setsockopt (socket, ZMQ_SUBSCRIBE, "", 1);
| [Friday 11 June 2010] [17:13:49] <soren>    Yeah, I fixed that.
| [Friday 11 June 2010] [17:14:00] <soren>    ...and I wasn't half an hour ago when it was acting strangely.
| [Friday 11 June 2010] [17:14:21] <soren>    So, I read in the docs that zmq_send returning doesn't mean it's been sent.
| [Friday 11 June 2010] [17:14:35] <sustrik>  nope, it's async
| [Friday 11 June 2010] [17:15:22] <soren>    What I swear I was experiencing was that the consumer would only see anything happen once for every 256 messages sent by the producer, and it would only receive one message.
| [Friday 11 June 2010] [17:15:25] <soren>    It was very odd.
| [Friday 11 June 2010] [17:15:50] <sustrik>  it looks exactly as if the subscription for zero byte was in place
| [Friday 11 June 2010] [17:16:00] <soren>    Why would anything go through that way?
| [Friday 11 June 2010] [17:16:18] <soren>    I mean... Why would I see every 256th message?
| [Friday 11 June 2010] [17:16:19] <sustrik>  you are putting sequence of integers into the message
| [Friday 11 June 2010] [17:16:29] <soren>    Oh.
| [Friday 11 June 2010] [17:16:32] <sustrik>  so the messages look like this
| [Friday 11 June 2010] [17:16:33] <soren>    Oh!
| [Friday 11 June 2010] [17:16:34] <sustrik>  00000000
| [Friday 11 June 2010] [17:16:37] <soren>    Right, right.
| [Friday 11 June 2010] [17:16:37] <sustrik>  01000000
| [Friday 11 June 2010] [17:16:39] <soren>     I see where you're going.
| [Friday 11 June 2010] [17:16:51] <soren>    That answers my next question.
| [Friday 11 June 2010] [17:17:33] <soren>    ...which was going to be "how does the sender set the "topic" of the message (i.e. what the consumer subscribes to)", but I get that now.
| [Friday 11 June 2010] [17:17:42] <soren>    ...but you're probably quite right.
| [Friday 11 June 2010] [17:17:52] <soren>    zeromq was just too clever for me. :)
| [Friday 11 June 2010] [17:17:58] <sustrik>  :)
| [Friday 11 June 2010] [17:18:46] <soren>    Ok, another question...
| [Friday 11 June 2010] [17:19:30] <soren>    I currently have an app that uses amqp to send messages around using a topic exchange. All nodes connect to the same broker and pass msgs around.
| [Friday 11 June 2010] [17:20:04] <soren>    To achieve something similar with zeromq, I should use multicast, right?
| [Friday 11 June 2010] [17:20:30] <sustrik>  multicast is quite hard to configure
| [Friday 11 June 2010] [17:20:49] <soren>    Yeah, that's the impression I get.
| [Friday 11 June 2010] [17:20:51] <sustrik>  if you don't care about having a single process in the middle
| [Friday 11 June 2010] [17:20:56] <sustrik>  use zmq_forwarder
| [Friday 11 June 2010] [17:21:03] <sustrik>  see example here: http://github.com/sustrik/zeromq-chat
| [Friday 11 June 2010] [17:21:04] <soren>    Well, I do that now, but I'd like to not have to have that.
| [Friday 11 June 2010] [17:21:40] <sustrik>  other option is to connect each subscriber to every publisher
| [Friday 11 June 2010] [17:22:02] <soren>    Yeah, that would suck.
| [Friday 11 June 2010] [17:22:10] <sustrik>  then multicast
| [Friday 11 June 2010] [17:22:15] <soren>    I'd like to be able to add and remove both publishers and subscribers on the fly.
| [Friday 11 June 2010] [17:22:33] <soren>    I've never wrapped my head around multicast addressing.
| [Friday 11 June 2010] [17:22:45] <sustrik>  the point is that for all-to-all communication you need a central node
| [Friday 11 June 2010] [17:22:52] <sustrik>  it can be either zmq_forwarder
| [Friday 11 June 2010] [17:23:02] <sustrik>  of your network switch (in case of multicast)
| [Friday 11 June 2010] [17:23:29] <sustrik>  so these are the only options:
| [Friday 11 June 2010] [17:23:36] <sustrik>  1. connect each-to-each by hand
| [Friday 11 June 2010] [17:23:46] <sustrik>  2. have zmq_forwarder in the middle
| [Friday 11 June 2010] [17:23:50] <sustrik>  3. use multicast
| [Friday 11 June 2010] [17:24:21] <soren>    Ok. I'm trying the multicast example from the cookbook..
| [Friday 11 June 2010] [17:24:42] <soren>    I've replaced my zmq_bind and zmq_connects from the example in the pastebin with:
| [Friday 11 June 2010] [17:24:57] <soren>    zmq_connect(socket, "epgm://eth0;239.192.1.1:5555");
| [Friday 11 June 2010] [17:25:20] <soren>    and nothing is getting through. Does this not work locally?
| [Friday 11 June 2010] [17:25:26] <soren>    On the same box, I mean.
| [Friday 11 June 2010] [17:31:45] <sustrik>  it should
| [Friday 11 June 2010] [17:32:00] <sustrik>  multicast loopback is set to on by default
| [Friday 11 June 2010] [17:32:43] <sustrik>  not sure about eth0 though
| [Friday 11 June 2010] [17:32:46] <sustrik>  try lo instead
| [Friday 11 June 2010] [17:33:31] <soren>    eth0 has the MULTICAST flag set.
| [Friday 11 June 2010] [17:34:29] <sustrik>  i mean, i am not sure that you can loopback via eth0
| [Friday 11 June 2010] [17:34:35] <sustrik>  thy lo (127.0.0.1)
| [Friday 11 June 2010] [17:34:38] <sustrik>  try*
| [Friday 11 June 2010] [17:34:42] <soren>    Yeah, lo works.
| [Friday 11 June 2010] [17:34:47]     * soren ponders
| [Friday 11 June 2010] [17:35:11] <soren>    The multicast addresss... Is that just something everyone needs to agree on?
| [Friday 11 June 2010] [17:35:40] <sustrik>  there's specific interval of addresses assigned to multicast
| [Friday 11 June 2010] [17:35:58] <sustrik>  within that interval your apps must agree on specific address
| [Friday 11 June 2010] [17:36:02] <soren>    Right, right, sure.
| [Friday 11 June 2010] [17:36:16] <soren>    Right, it was just that last bit I wasn't sure about.
| [Friday 11 June 2010] [17:36:38] <soren>    How far does multicast reach? Broadcast domain?
| [Friday 11 June 2010] [17:36:56] <soren>    Or can it go further somehow?
| [Friday 11 June 2010] [17:37:05] <sustrik>  depends on how your routers are set
| [Friday 11 June 2010] [17:37:10] <soren>    Ok.
| [Friday 11 June 2010] [17:37:18] <sustrik>  but normally multicast is disabled on routers
| [Friday 11 June 2010] [17:38:10] <soren>    Gotcha.
| [Friday 11 June 2010] [17:38:29] <soren>    Ok, so not only must the interface used be UP and have MULTICAST set, it must also have an address.
| [Friday 11 June 2010] [17:38:42] <soren>    eth0 only passed two of those requirements :)
| [Friday 11 June 2010] [17:40:12] <soren>    sustrik: Thanks a lot! This has been very enlightening.
| [Friday 11 June 2010] [17:40:21] <sustrik>  you are welcome
| [Friday 11 June 2010] [21:42:02] Nick   Jeff_ is now known as Guest15169.
| 
| *** Logfile started
| *** on Sat Jun 12 08:51:31 2010
| 
| [Saturday 12 June 2010] [08:51:31] Topic    The channel topic is "Welcome!".
| [Saturday 12 June 2010] [08:51:31] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Saturday 12 June 2010] [08:51:37] Mode Channel modes: no messages from outside, topic protection
| [Saturday 12 June 2010] [08:51:37] Created  This channel was created on 2010-02-05 10:44.
| [Sunday 13 June 2010] [04:34:58] <rgl>  hello
| [Sunday 13 June 2010] [04:35:20] <rgl>  known any zeromq binding to nodejs?
| [Sunday 13 June 2010] [04:40:11] <guido_g>  not out of my head
| [Sunday 13 June 2010] [04:40:58] <sustrik>  what's nodejs?
| [Sunday 13 June 2010] [04:42:31] <guido_g>  http://nodejs.org/
| [Sunday 13 June 2010] [04:42:58] <guido_g>  sort of http server in java-script
| [Sunday 13 June 2010] [04:43:03] <sustrik>  a-ha
| [Sunday 13 June 2010] [04:43:11] <guido_g>  toy of the month :)
| [Sunday 13 June 2010] [04:43:39] <sustrik>  funny thing is that lot of people are basically doing http<->0mq bridges
| [Sunday 13 June 2010] [04:44:00] <guido_g>  http is *the* thing
| [Sunday 13 June 2010] [04:44:05] <sustrik>  :)
| [Sunday 13 June 2010] [04:44:12] <guido_g>  even for things it's suitable for
| [Sunday 13 June 2010] [04:44:36] <guido_g>  but what do i know, i'm only a technician
| [Sunday 13 June 2010] [04:44:56] <sustrik>  no idea here either
| [Sunday 13 June 2010] [04:45:17] <sustrik>  i'm a C person
| [Sunday 13 June 2010] [04:45:27] <sustrik>  huh, what's http?- style
| [Sunday 13 June 2010] [05:32:54] <Steffen___>   FYI, I wrote a Perl binding for 0MQ2 yesterday. http://github.com/tsee/ZeroMQ-Perl
| [Sunday 13 June 2010] [05:33:03] <Steffen___>   It's based on the C++ interface.
| [Sunday 13 June 2010] [05:33:24] <Steffen___>   Seems to be working fine. Adds 8us latency, according to my tests on a laptop.
| [Sunday 13 June 2010] [05:33:41] <Steffen___>   Some of the get/setsockopt calls are still untested/flaky.
| [Sunday 13 June 2010] [05:34:50] <Steffen___>   License is currently dual Artistic License/GPL just like Perl itself. No documentation (I wrote it in the afternoon). I'll be on a business trip for three weeks starting today, so no support either. I do intend to release it to CPAN and maintain it down the road.
| [Sunday 13 June 2010] [05:36:19] <Steffen___>   I'm reporting it here since I'm on the run and couldn't be bothered to subscribe to the mailing list just for that. Might do that when I get back. Feel free to contact me at smueller@cpan.org.
| [Sunday 13 June 2010] [05:37:09] <Steffen___>   PS: For non-Perl folks: Building it is as easy as "perl Makefile.PL && make && make test && sudo make install"
| [Sunday 13 June 2010] [05:38:37] <Steffen___>   Strange talking to myself ;)
| [Sunday 13 June 2010] [05:38:43] <Steffen___>   Have a nice week-end.
| [Sunday 13 June 2010] [07:48:14] Nick   y is now known as Guest66958.
| [Sunday 13 June 2010] [10:57:55] <mikko>    good morning
| [Sunday 13 June 2010] [10:58:00] <mikko>    or more like afternoon now
| [Sunday 13 June 2010] [13:02:30] Nick   y is now known as Guest98295.
| [Sunday 13 June 2010] [13:25:12] Nick   Guest98295 is now known as rgl.
| [Monday 14 June 2010] [00:16:57] <Gambit->  evenin' chaps
| [Monday 14 June 2010] [00:17:20] <Gambit->  I'm trying to make the architectural decision between zeromq and rabbitmq.  Anyone care to discuss, or have references to cite?
| [Monday 14 June 2010] [00:18:07] <sustrik>  hi
| [Monday 14 June 2010] [00:18:15] <sustrik>  depends on your scenario
| [Monday 14 June 2010] [00:18:19] <Gambit->  evenin' sustrik
| [Monday 14 June 2010] [00:18:22] <Gambit->  indeed it does
| [Monday 14 June 2010] [00:18:28] <sustrik>  what's your use case?
| [Monday 14 June 2010] [00:18:30] <Gambit->  Would you like a description?
| [Monday 14 June 2010] [00:18:34] <sustrik>  in broad terms?
| [Monday 14 June 2010] [00:18:36]     * Gambit- nods, "One moment while I type."
| [Monday 14 June 2010] [00:21:06] <Gambit->  Topology: a cluster of widely distributed devices with no mutual connectivity contracts.  Each device has several different active entities that may need to communiciate with a varying subset of other device in the cluster.
| [Monday 14 June 2010] [00:21:51] <sustrik>  SOA-style?
| [Monday 14 June 2010] [00:22:04] <Gambit->  You'll have to explain what you mean by that.
| [Monday 14 June 2010] [00:22:39] <sustrik>  ok, other way round: what industry?
| [Monday 14 June 2010] [00:22:54] <sustrik>  financials/embedded/supercomputing etc.
| [Monday 14 June 2010] [00:23:49] <Gambit->  technically speaking, we're a major traffic manipulation company and we're supporting clusters of our devices spread across customer installations communicating and coordinating with eachother in heirarchies of active-active groups.
| [Monday 14 June 2010] [00:24:55] <Gambit->  I can totally be more specific, but I'm still learning how to phrase the question, if you understand :)
| [Monday 14 June 2010] [00:25:03] <sustrik>  yep
| [Monday 14 June 2010] [00:25:32] <sustrik>  so the whole system is out of scope of a single entrerprise
| [Monday 14 June 2010] [00:25:44] <Gambit->  it may all be owned by one enterprise.
| [Monday 14 June 2010] [00:25:51] <Gambit->  but it might be spread across many divisions
| [Monday 14 June 2010] [00:26:11] <sustrik>  can there be a singe central point?
| [Monday 14 June 2010] [00:26:16] <Gambit->  our customers tend to do crazy things we don't expect, so any combination around there is likely.
| [Monday 14 June 2010] [00:26:20] <sustrik>  messaging "broker"?
| [Monday 14 June 2010] [00:26:34] <sustrik>  single*
| [Monday 14 June 2010] [00:26:46] <Gambit->  It's possible - though more likely there will be an active-active type point where there are multiple boxes that all act as failover points for eachother.
| [Monday 14 June 2010] [00:27:08] <sustrik>  but in overall, all is centralised
| [Monday 14 June 2010] [00:27:28] <sustrik>  all the failover boxes are at the same place, doing same thing
| [Monday 14 June 2010] [00:27:34] <Gambit->  in that case, yes.
| [Monday 14 June 2010] [00:27:57] <sustrik>  well, in such case i would prefer rabbitmq
| [Monday 14 June 2010] [00:28:00] <Gambit->  in other cases, there may be, say, 5 boxes in an active-active-active-active-active configuration without any particular head end.
| [Monday 14 June 2010] [00:29:23] <Gambit->  What is your logic?  Also, what is your experience? :)
| [Monday 14 June 2010] [00:29:27] <sustrik>  as far as I understand your scenario is a typical corporate scenario with centralised control and no need for strange topologies
| [Monday 14 June 2010] [00:29:37] <sustrik>  ah, one more thing:
| [Monday 14 June 2010] [00:29:45] <sustrik>  expected performance?
| [Monday 14 June 2010] [00:29:49] <Gambit->  well we may have boxes taht will have no connectivity for long periods of time, and then connect in.
| [Monday 14 June 2010] [00:30:03] <Gambit->  also, strange topologies will be mitigated most likely by having an overlay network.
| [Monday 14 June 2010] [00:30:18] <Gambit->  Performance is something of a elephant in the room at the moment.
| [Monday 14 June 2010] [00:30:32] <sustrik>  any estimates?
| [Monday 14 June 2010] [00:30:40] <Gambit->  Can you provide some buckets?
| [Monday 14 June 2010] [00:30:41] <sustrik>  in orders of magnitude?
| [Monday 14 June 2010] [00:30:54] <sustrik>  10 msgs./sec?
| [Monday 14 June 2010] [00:31:01] <sustrik>  1000000 msgs./sec?
| [Monday 14 June 2010] [00:31:04] <Gambit->  :)
| [Monday 14 June 2010] [00:31:34] <sustrik>  sub millisecond latency?
| [Monday 14 June 2010] [00:31:36] <Gambit->  I'm going to SWAG and say in the 100-1000/s range.
| [Monday 14 June 2010] [00:31:37] <sustrik>  etc.
| [Monday 14 June 2010] [00:31:53] <Gambit->  but that's probably awefully high.
| [Monday 14 June 2010] [00:32:16] <Gambit->  I don't think there's any expectation for latency less than 100ms.
| [Monday 14 June 2010] [00:32:27] <sustrik>  ok, rabbitmq looks to fit your case
| [Monday 14 June 2010] [00:32:35] <Gambit->  though our usecases are so fuzzy that it's hard to say for certain.
| [Monday 14 June 2010] [00:32:48] <Gambit->  we know we need some infrastructure, but we only know todays requirements.
| [Monday 14 June 2010] [00:32:56] <sustrik>  the rationale is that rabbitmq is a typical corporate middleware
| [Monday 14 June 2010] [00:33:10] <sustrik>  you'll have central server to control
| [Monday 14 June 2010] [00:33:15] <sustrik>  management tools
| [Monday 14 June 2010] [00:33:30] <sustrik>  decent performance etc.
| [Monday 14 June 2010] [00:33:40] <Gambit->  Well there may be no central server, there may just be 5-10 boxes, all peers.  But they could all be 'central' servers, I would expect.
| [Monday 14 June 2010] [00:33:43] <sustrik>  0mq is more adequate for extreme use cases
| [Monday 14 June 2010] [00:34:12] <Gambit->  can you establish your credentials and authority, for a moment?
| [Monday 14 June 2010] [00:34:26] <sustrik>  i'm 0mq's author :)
| [Monday 14 June 2010] [00:34:44] <Gambit->  god I love irc :D
| [Monday 14 June 2010] [00:35:03] <sustrik>  the point is that the two products are quite different in what they offer
| [Monday 14 June 2010] [00:35:11] <sustrik>  0mq:
| [Monday 14 June 2010] [00:35:15] <sustrik>  - it's a library
| [Monday 14 June 2010] [00:35:25] <sustrik>  - fully automatic, no management, like TCP
| [Monday 14 June 2010] [00:35:36] <sustrik>  - very fast
| [Monday 14 June 2010] [00:35:44] <sustrik>  - less feature complete
| [Monday 14 June 2010] [00:35:51] <sustrik>  rabbitmq:
| [Monday 14 June 2010] [00:35:54] <sustrik>  - it's a server
| [Monday 14 June 2010] [00:36:13] <sustrik>  - you manage it as any other server
| [Monday 14 June 2010] [00:36:28] <sustrik>  - performance is lower but pretty decent
| [Monday 14 June 2010] [00:36:38] <sustrik>  - more feature complete
| [Monday 14 June 2010] [00:37:39] <Gambit->  Whereabouts would you draw the performance line?
| [Monday 14 June 2010] [00:37:54] <sustrik>  50000 msgs/sec
| [Monday 14 June 2010] [00:38:43] <sustrik>  ah, it also depends on the size of messages
| [Monday 14 June 2010] [00:38:52] <sustrik>  1kb vs. 100GB
| [Monday 14 June 2010] [00:39:03] <sustrik>  for later i would go with 0mq
| [Monday 14 June 2010] [00:39:27] <Gambit->  I'm going to say we're in the 5-50k range
| [Monday 14 June 2010] [00:39:42] <sustrik>  yes, so you have no performance problem
| [Monday 14 June 2010] [00:39:48] <sustrik>  both solutions would be OK
| [Monday 14 June 2010] [00:39:55] <sustrik>  in performance terms
| [Monday 14 June 2010] [00:40:30]     * Gambit- nods
| [Monday 14 June 2010] [00:40:51] <Gambit->  Does 0mq support actual multicast?
| [Monday 14 June 2010] [00:40:55] <sustrik>  yes
| [Monday 14 June 2010] [00:41:03] <sustrik>  PGM in particular
| [Monday 14 June 2010] [00:42:13] <Gambit->  That's something we'd have to cobble together with rabbitmq, I believe.  I don't see any evidence of it being directly supported, though there are several plugins that could be used to bootstrap it.
| [Monday 14 June 2010] [00:42:35] <sustrik>  no, rabbitmq doesn't support it
| [Monday 14 June 2010] [00:42:50] <sustrik>  why do you need it?
| [Monday 14 June 2010] [00:42:58] <Gambit->  there's some things like 'shovels', which apparently lets you move messages from one queue to another, that could be used to fake it.
| [Monday 14 June 2010] [00:43:04] <Gambit->  Some nodes may be at the end of long thin mostly broken straws.
| [Monday 14 June 2010] [00:43:21] <Gambit->  if they have to do a broadcast, it's infeasible to expect them to send messages to everyone else.
| [Monday 14 June 2010] [00:43:44] <sustrik>  that's solved by having broker in the middle, no?
| [Monday 14 June 2010] [00:43:55] <sustrik>  send to broker, broker resends to everyone else
| [Monday 14 June 2010] [00:44:13] <Gambit->  The way I'd been thinking about it, though, is that you'd need to have a broker on each device.
| [Monday 14 June 2010] [00:44:20] <Gambit->  That may, obviously, be wrong.
| [Monday 14 June 2010] [00:44:45] <Gambit->  there are multiple agents on each device that would need to communicate to some subset of the rest of the cluster, after all.
| [Monday 14 June 2010] [00:45:13] <Gambit->  some orthogonal subset, that is.
| [Monday 14 June 2010] [00:45:13] <sustrik>  device = hw device?
| [Monday 14 June 2010] [00:45:27] <Gambit->  A device is a linux box, for the sake of this conversation.
| [Monday 14 June 2010] [00:45:36] <Gambit->  s/sake/intent/
| [Monday 14 June 2010] [00:45:46] <sustrik>  ok
| [Monday 14 June 2010] [00:46:11] <sustrik>  well, you can even use both products if needed
| [Monday 14 June 2010] [00:46:20] <sustrik>  there's nothing to stop you
| [Monday 14 June 2010] [00:46:39] <sustrik>  in your case i would try to play with both for a while to get some feeling
| [Monday 14 June 2010] [00:47:23] <Gambit->  How's the intercompatability?
| [Monday 14 June 2010] [00:47:42] <sustrik>  none at the moment
| [Monday 14 June 2010] [00:48:15] <Gambit->  So given what I'd describe, wouldn't I need to run a broker on each device?  Especially since they may not have connectivity to any other device?
| [Monday 14 June 2010] [00:48:43] <sustrik>  there are several services on a device, right?
| [Monday 14 June 2010] [00:48:49] <Gambit->  Correct.
| [Monday 14 June 2010] [00:48:55] <sustrik>  those are running 24/7?
| [Monday 14 June 2010] [00:48:59] <Gambit->  Yup.
| [Monday 14 June 2010] [00:49:23] <sustrik>  are the messages expected to survive service failure?
| [Monday 14 June 2010] [00:50:12]     * Gambit- wiggles his hand a bit, "Let's say no, because that will make it easier."
| [Monday 14 June 2010] [00:50:15] <sustrik>  or device failure (like power outage)
| [Monday 14 June 2010] [00:50:33] <sustrik>  it's pretty important question
| [Monday 14 June 2010] [00:50:45] <Gambit->  It's a massively important question.
| [Monday 14 June 2010] [00:50:45] <sustrik>  if you need it, you need a broker on each device
| [Monday 14 June 2010] [00:51:07] <Gambit->  We already have, essentially, a process that manages all of our configuration and related things.
| [Monday 14 June 2010] [00:51:33] <Gambit->  Currently we aren't designing for any additional repositories.
| [Monday 14 June 2010] [00:51:42] <Gambit->  which means we're not expecting anything to survive device failure.
| [Monday 14 June 2010] [00:52:06] <Gambit->  however, if two agents require a broker to communicate between themselves, then it's absolutely necessary to run a broker on each device, since each device may be running in a standalone configuration.
| [Monday 14 June 2010] [00:53:05] <sustrik>  if you need a brokerless design you have to use 0mq
| [Monday 14 June 2010] [00:53:31] <sustrik>  you have to have some hands-on experience to do a correct decision
| [Monday 14 June 2010] [00:53:36]     * Gambit- nods
| [Monday 14 June 2010] [00:53:45] <Gambit->  That said, there's no reason we can't run a broker on each box.
| [Monday 14 June 2010] [00:53:48] <sustrik>  but think of 0mq as something like TCP
| [Monday 14 June 2010] [00:53:59] <sustrik>  and rabbitmq of something like SQL server
| [Monday 14 June 2010] [00:54:15] <Gambit->  That crosses my eyes a bit :)
| [Monday 14 June 2010] [00:54:30] <Gambit->  but I think I catch your intent.
| [Monday 14 June 2010] [00:54:39] <sustrik>  :)
| [Monday 14 June 2010] [00:55:10] <Gambit->  How does 0mq handle membership?
| [Monday 14 June 2010] [00:55:21] <sustrik>  membership in what?
| [Monday 14 June 2010] [00:55:36] <Gambit->  For the use case where, all the way across the cluster, a new device comes up and requests to receive messages of a certain topic.
| [Monday 14 June 2010] [00:55:44] <sustrik>  ah
| [Monday 14 June 2010] [00:55:50] <Gambit->  Apologies, as always, for incorrect terminology usage.
| [Monday 14 June 2010] [00:56:02] <sustrik>  pseudocode:
| [Monday 14 June 2010] [00:56:23] <sustrik>  s = zmq_socket (SUBSCRIBER);
| [Monday 14 June 2010] [00:56:38] <sustrik>  s.connect ("tcp://myserver:5555");
| [Monday 14 June 2010] [00:56:56] <sustrik>  s.setsockopt (SUBSCRIBE, "ab.cd.");
| [Monday 14 June 2010] [00:57:01] <sustrik>  that's it
| [Monday 14 June 2010] [00:57:07] <Gambit->  who is 'myserver'?
| [Monday 14 June 2010] [00:57:19] <sustrik>  the peer you want to get messages from
| [Monday 14 June 2010] [00:57:22] <Gambit->  ah
| [Monday 14 June 2010] [00:57:37] <Gambit->  so I would have to connect to each peer I wanted to get messages from, and request the subscription?
| [Monday 14 June 2010] [00:57:46] <sustrik>  yes
| [Monday 14 June 2010] [00:57:52] <Gambit->  How does the multicast fit into that?
| [Monday 14 June 2010] [00:58:12] <sustrik>  s.connect ("pgm://eth0;224.0.0.1:5555");
| [Monday 14 June 2010] [00:58:27] <Gambit->  ah
| [Monday 14 June 2010] [00:58:30] <Gambit->  interesting.
| [Monday 14 June 2010] [00:59:04] <Gambit->  so you can use the multicast to get away from having to know specifically who is managing what.
| [Monday 14 June 2010] [00:59:26] <sustrik>  yes
| [Monday 14 June 2010] [00:59:52] <sustrik>  you have to have a node in the middle if you want to do everyone-to-everyone messaging
| [Monday 14 June 2010] [01:00:03] <sustrik>  with IP multicast it's your network switch
| [Monday 14 June 2010] [01:00:10] <Gambit->  yeah
| [Monday 14 June 2010] [01:00:14] <sustrik>  with tcp, you need the broker
| [Monday 14 June 2010] [01:00:17] <Gambit->  that ip switch is usually me.
| [Monday 14 June 2010] [01:00:26] <Gambit->  so we'd have to support that.
| [Monday 14 June 2010] [01:00:30]     * Gambit- contemplates.
| [Monday 14 June 2010] [01:00:56] <sustrik>  it's all on the local box?
| [Monday 14 June 2010] [01:01:06] <sustrik>  then definitely use TCP
| [Monday 14 June 2010] [01:01:08] <Gambit->  No, sorry, that was poorly said.
| [Monday 14 June 2010] [01:01:25] <Gambit->  Our product is often used as a load balancer.
| [Monday 14 June 2010] [01:01:41] <Gambit->  how similar is the wire protocol between 0mq and rabbitmq, btw?
| [Monday 14 June 2010] [01:01:46] <Gambit->  are you guys expecting to converge at somepoint?
| [Monday 14 June 2010] [01:02:39] <sustrik>  well, rabitmq is a multiprotocol server
| [Monday 14 June 2010] [01:02:58] <sustrik>  so it's shouldn't be hard to plug 0mq into it as an underlying transport
| [Monday 14 June 2010] [01:03:22] <sustrik>  especially that there's an Erlang binding for 0mq recently
| [Monday 14 June 2010] [01:03:28] <Gambit->  Again with the TCP/SQL Server comparisons :)
| [Monday 14 June 2010] [01:04:02] <Gambit->  I think I've been thinking of 0mq as another implementation of AMQP, when it's really not.
| [Monday 14 June 2010] [01:04:10] <sustrik>  no, it's not
| [Monday 14 June 2010] [01:04:43] <sustrik>  it's a layer in networking stack that allows you to speak with serveral peers at the same time
| [Monday 14 June 2010] [01:04:49] <sustrik>  that's more or less it
| [Monday 14 June 2010] [01:04:59] <Gambit->  So... A better PGM?
| [Monday 14 June 2010] [01:05:21] <sustrik>  PGM is only about data distribution
| [Monday 14 June 2010] [01:05:30] <Gambit->  Not about messages, eh?
| [Monday 14 June 2010] [01:05:44] <sustrik>  it's more about scenarios:
| [Monday 14 June 2010] [01:05:53] <sustrik>  PGM: send this message/data to everyone
| [Monday 14 June 2010] [01:06:03] <sustrik>  0MQ: 1. dtto
| [Monday 14 June 2010] [01:06:07] <sustrik>  2. request/reply
| [Monday 14 June 2010] [01:06:10] <sustrik>  3. load balancing
| [Monday 14 June 2010] [01:06:12] <sustrik>  etc.
| [Monday 14 June 2010] [01:06:43] <Gambit->  Right.
| [Monday 14 June 2010] [01:06:59] <Gambit->  Okay, many many thanks for your time.  Any other words of wisdom here?
| [Monday 14 June 2010] [01:07:27] <sustrik>  try it yourself, then decide :)
| [Monday 14 June 2010] [01:07:36]     * Gambit- grins and nods
| [Monday 14 June 2010] [01:07:52] <Gambit->  Right then, thanks :)
| [Monday 14 June 2010] [01:16:16] <Gambit->  Well, practically speaking I'm likely to delegate a large chunk of this.
| [Monday 14 June 2010] [01:16:18] <Gambit->  but yeah.
| [Monday 14 June 2010] [01:16:29] <Gambit->  okay, that's that report put together and sent off.
| [Monday 14 June 2010] [01:16:52] <Gambit->  Thanks again sustrik, strongly appreciate the dialog.  Next time you're in the Seattle area, give me a shout :)
| [Monday 14 June 2010] [01:17:17] <sustrik>  never been there, but i'll should once i get there :)
| [Monday 14 June 2010] [01:17:45] <Gambit->  it's a nice town :)
| [Monday 14 June 2010] [01:17:57] <Gambit->  righto, then, ciao!
| [Monday 14 June 2010] [01:17:59] Part   Gambit- has left this channel.
| [Monday 14 June 2010] [01:20:28] <umesh>    is there any way by which server notifies client while going down in zmq ... 
| [Monday 14 June 2010] [01:20:31] <umesh>    ?
| [Monday 14 June 2010] [01:24:00] <umesh>    there is no such way of sending the notification ?
| [Monday 14 June 2010] [01:34:07] <sustrik>  no, there's not, you would need a sync API for that
| [Monday 14 June 2010] [01:34:24] <sustrik>  you can of course send messages by hand over TCP if needed
| [Monday 14 June 2010] [01:45:13] <umesh>    ok
| [Monday 14 June 2010] [01:45:23] <umesh>    so not possible in zermq 
| [Monday 14 June 2010] [01:46:08] <umesh>    hand over tcp means ... while going down ...i can send message to peer notifying of it 
| [Monday 14 June 2010] [01:47:09] <umesh>    right ?
| [Monday 14 June 2010] [02:42:03] <umesh>    is it safe if I create a seperate thread for recv call ... in server ...
| [Monday 14 June 2010] [02:42:35] <umesh>    means instead of waiting for the recv in hte main process ... I will create thread and wait there ... 
| [Monday 14 June 2010] [02:45:47] <sustrik>  hand over tcp = open raw BSD socket, push the data through it
| [Monday 14 June 2010] [02:46:04] <sustrik>  yes, you can recv in a worker thread
| [Monday 14 June 2010] [02:46:30] <sustrik>  the only requirement is that each 0MQ socket is used from exactly one OS thread
| [Monday 14 June 2010] [02:47:17] <umesh>    ok
| [Monday 14 June 2010] [03:36:20] <mikko>    good morning
| [Monday 14 June 2010] [03:36:34] <sustrik>  morning
| [Monday 14 June 2010] [05:03:59] <mikko>    i wrote a http publisher for 0MQ last night
| [Monday 14 June 2010] [05:04:17] <mikko>    but if anyone happens to have need for such a thing it's here http://valokuva.org/~mikko/code/httpublish/
| [Monday 14 June 2010] [05:04:39] <mikko>    it takes a http post and publishes it over 0MQ
| [Monday 14 June 2010] [05:07:29] <sustrik>  mikko: i think we should somehow centralise links for useful stuff of this kind
| [Monday 14 June 2010] [05:08:00] <sustrik>  tools section on the website?
| [Monday 14 June 2010] [05:08:32] <sustrik>  at least mention it on the mailing list so that link won't get lost
| [Monday 14 June 2010] [05:31:53] <mikko>    sustrik: "Misc" maybe
| [Monday 14 June 2010] [05:32:06] <mikko>    i'll push it to github later so it won't get lost
| [Monday 14 June 2010] [05:32:12] <sustrik>  great
| [Monday 14 June 2010] [05:32:16] <mikko>    seems like i can push 6k messages a second with that
| [Monday 14 June 2010] [05:32:28] <mikko>    (testing with ab)
| [Monday 14 June 2010] [05:33:09] <sustrik>  is that good or bad result?
| [Monday 14 June 2010] [05:33:18]     * sustrik has little experience with http
| [Monday 14 June 2010] [05:34:10] <mikko>    it's fairly good 
| [Monday 14 June 2010] [05:34:22] <mikko>    doing the same thing over php i might get 800 - 1.2k
| [Monday 14 June 2010] [05:34:30] <sustrik>  ok, i see
| [Monday 14 June 2010] [05:34:33] <mikko>    i don't really know what to compare to
| [Monday 14 June 2010] [05:34:39] <sustrik>  ack
| [Monday 14 June 2010] [05:34:57] <mikko>    maybe even http device for 0MQ might make sense
| [Monday 14 June 2010] [05:34:58] <sustrik>  ok, when you have the gihub repo we'll find some place for the link
| [Monday 14 June 2010] [05:35:08] <mikko>    would allow pretty integration
| [Monday 14 June 2010] [05:35:18] <sustrik>  mikko: i thought about that actually
| [Monday 14 June 2010] [05:35:38] <sustrik>  but i am too lazy to write it :)
| [Monday 14 June 2010] [05:36:09] <sustrik>  wouldn't it make sense to turn your code into a device?
| [Monday 14 June 2010] [05:36:12] <mikko>    i remember seeing a tiny http parsing library somewhere
| [Monday 14 June 2010] [05:36:26] <mikko>    yes, the code currently uses libevent http abstraction
| [Monday 14 June 2010] [05:36:35] <mikko>    moving over to a device would mean leaving that abstraction
| [Monday 14 June 2010] [05:36:39] <mikko>    and parsing the http
| [Monday 14 June 2010] [05:36:55] <sustrik>  so now it sends the http message over 0mq?
| [Monday 14 June 2010] [05:37:11] <mikko>    yep
| [Monday 14 June 2010] [05:37:23] <mikko>    but all http protocol parsing is done by libevent
| [Monday 14 June 2010] [05:37:52] <mikko>    i remember the node.js had a tiny C library for parsing http in async fashion
| [Monday 14 June 2010] [05:37:59] <sustrik>  so the http header is stripped and only payload is passed over 0mq?
| [Monday 14 June 2010] [05:38:07] <mikko>    yes
| [Monday 14 June 2010] [05:38:12] <sustrik>  ok, got it
| [Monday 14 June 2010] [05:38:16] <mikko>    it responds to /publish 
| [Monday 14 June 2010] [05:38:24] <mikko>    POST /publish HTTP/1.0
| [Monday 14 June 2010] [05:38:29] <mikko>    Content-Length: 5
| [Monday 14 June 2010] [05:38:32] <mikko>     
| [Monday 14 June 2010] [05:38:34] <mikko>    aaaaa
| [Monday 14 June 2010] [05:38:44] <mikko>    would send aaaaa over to 0mq
| [Monday 14 June 2010] [05:39:16] <sustrik>  can you have a look at the node.js library?
| [Monday 14 June 2010] [05:39:30] <mikko>    yeah, trying to find
| [Monday 14 June 2010] [05:41:40] <mikko>    http://github.com/ry/http-parser
| [Monday 14 June 2010] [05:41:43] <mikko>    i think it's that one
| [Monday 14 June 2010] [05:41:59] <mikko>    the readme looks promising
| [Monday 14 June 2010] [05:42:14]     * sustrik is checking it
| [Monday 14 June 2010] [05:44:15] <sustrik>  it looks viable
| [Monday 14 June 2010] [05:45:27] <mikko>    i could take a poke to it
| [Monday 14 June 2010] [05:45:30] <mikko>    later today
| [Monday 14 June 2010] [05:45:44] <mikko>    good introduction to devices if nothing else :)
| [Monday 14 June 2010] [05:46:18] <sustrik>  devices are dead simple
| [Monday 14 June 2010] [06:30:40] <rgl>  mikko, have you seen zed mongrel2.org ?
| [Monday 14 June 2010] [06:33:09] <mikko>    rgl: yeah, i saw the posting on mailing-lists
| [Monday 14 June 2010] [06:33:20] <mikko>    mongrel however reminds me of Ruby for some reason
| [Monday 14 June 2010] [06:36:43] <rgl>  yes. it's an http server for ruby.
| [Monday 14 June 2010] [06:36:55] <rgl>  thou... mongrel2 is no longer that.
| [Monday 14 June 2010] [06:37:12] <rgl>  mainly mongrel has a nice http parser. which is used in mongrel2.
| [Monday 14 June 2010] [06:41:51] <mikko>    mongrel2 is C ?
| [Monday 14 June 2010] [06:43:07] <mikko>    "Since Mongrel2 will be written in C it should do files pretty well too, but easy application architectures and operations support will come first. "
| [Monday 14 June 2010] [07:07:36] <rgl>  yup.
| [Monday 14 June 2010] [08:10:09] <mikko>    sustrik: forwarder.cpp
| [Monday 14 June 2010] [08:10:17] <sustrik>  yes?
| [Monday 14 June 2010] [08:10:18] <mikko>    sustrik: should that contain zmq_msg_close for the message?
| [Monday 14 June 2010] [08:10:26] <sustrik>  let me see
| [Monday 14 June 2010] [08:11:27] <sustrik>  there's no zmq_msg_close afaics
| [Monday 14 June 2010] [08:11:45] <mikko>    i mean should there be?
| [Monday 14 June 2010] [08:11:54] <sustrik>  it's an infinite loop
| [Monday 14 June 2010] [08:12:09] <mikko>    ah ok
| [Monday 14 June 2010] [08:12:18] <mikko>    btw
| [Monday 14 June 2010] [08:12:36] <mikko>    how do you normally handle errors in constructing the objects inside zeromq2?
| [Monday 14 June 2010] [08:12:41] <mikko>    throw an exception?
| [Monday 14 June 2010] [08:12:50] <sustrik>  out of memory you mean?
| [Monday 14 June 2010] [08:12:52] <sustrik>  assert
| [Monday 14 June 2010] [08:13:13] <mikko>    ok
| [Monday 14 June 2010] [08:13:30] <sustrik>  as for the infinite loop, it should be fixed
| [Monday 14 June 2010] [08:13:34] <sustrik>  i forgot about it
| [Monday 14 June 2010] [08:13:55] <sustrik>  now with 2.0.7 the loop can be exited by terminating the associated context
| [Monday 14 June 2010] [08:14:34]     * sustrik makes a mental note
| [Monday 14 June 2010] [09:11:26] <willvarfar>   so does zeromq handle persistance of messages, mailbox-like?
| [Monday 14 June 2010] [09:29:47] <sustrik>  willvarfar: no, it does not
| [Monday 14 June 2010] [09:37:37] <willvarfar>   what message queue system would you recommend if I needed offline delivery?
| [Monday 14 June 2010] [09:53:48] <sustrik>  rabbitmq
| [Monday 14 June 2010] [11:08:49] <rgl>  sustrik, even the queue device? I mean, doesn't it queue messages until someone can pick them up?
| [Monday 14 June 2010] [11:17:10] <sustrik>  rgl: it does
| [Monday 14 June 2010] [11:17:17] <sustrik>  but it does so in memory
| [Monday 14 June 2010] [11:17:31] <sustrik>  so in case of power failure the messages are loast
| [Monday 14 June 2010] [11:17:35] <sustrik>  lost*
| [Monday 14 June 2010] [11:18:04] <rgl>  ah, non persistence there?  ok.
| [Monday 14 June 2010] [11:20:49] <mikko>    sustrik: are there any plans for persistence?
| [Monday 14 June 2010] [11:23:22] <sustrik>  mikko: not near-term plans
| [Monday 14 June 2010] [11:24:02] <sustrik>  on-disk offload (swap) should be added shortly, but no real persistence
| [Monday 14 June 2010] [11:24:09] <mikko>    the queue device looks pretty simple
| [Monday 14 June 2010] [11:24:27] <sustrik>  it is
| [Monday 14 June 2010] [11:24:54] <mikko>    the http device looks like to be more complicated
| [Monday 14 June 2010] [11:25:16] <sustrik>  the http part maybe
| [Monday 14 June 2010] [11:25:41] <sustrik>  the 0mq part would be the same as in queue device afaiu
| [Monday 14 June 2010] [11:26:04] <mikko>    should i inherit http_socket from socket_base?
| [Monday 14 June 2010] [11:26:33] <mikko>    im still not got quite into the code
| [Monday 14 June 2010] [11:26:34] <sustrik>  well, there are two options
| [Monday 14 June 2010] [11:26:48] <sustrik>  either you add http as a new transport mechanism
| [Monday 14 June 2010] [11:26:55] <sustrik>  aside of tcp, inproc et al.
| [Monday 14 June 2010] [11:27:13] <sustrik>  that's pretty complex to implement, but most generic solution
| [Monday 14 June 2010] [11:27:33] <sustrik>  the other option is create a device that would be http<->0mq bridge
| [Monday 14 June 2010] [11:28:00] <sustrik>  http connections are on one side, 0mq connections on the other
| [Monday 14 June 2010] [11:28:14] <mikko>    i was thinking about starting with porting the publisher over to 0mq device
| [Monday 14 June 2010] [11:28:31] <sustrik>  sorry, what publisher?
| [Monday 14 June 2010] [11:28:38] <mikko>    httpublish.c i pasted earlier
| [Monday 14 June 2010] [11:29:03] <mikko>    and then maybe extend to have a req/rep support as well
| [Monday 14 June 2010] [11:29:26] <mikko>    so you could do a http call -> 0mq req -> 0mq rep -> http rep
| [Monday 14 June 2010] [11:30:45] <sustrik>  right, it's a standalone application
| [Monday 14 June 2010] [11:30:55] <sustrik>  so it's the latter solution (the bridge)
| [Monday 14 June 2010] [11:49:29] <zedas>    mikko, rgl: yep, mongrel2 is C.
| [Monday 14 June 2010] [11:54:04] <CIA-17>   rbzmq: 03Brian Buchanan 07master * r3d19085 10/ rbzmq.cpp : remove support for libzmq < 2.0.7 - http://bit.ly/d26OdF
| [Monday 14 June 2010] [11:54:05] <CIA-17>   rbzmq: 03Brian Buchanan 07master * r92d3af8 10/ (.gitignore zmq.gemspec rbzmq.c rbzmq.cpp): add rdoc documentation - http://bit.ly/cZzye1
| [Monday 14 June 2010] [11:54:31] <rgl>  zedas, is there a reason to call it mongrel2? I mean, why use the mongrel moniker?
| [Monday 14 June 2010] [12:03:13] <zedas>    rgl: 1. at the core is the mongrel http parser, which is the main thing.  2. i've wanted to reprise the mongrel server for a long time. 3. the current maintainers of mongrel let it die, which sucks. 4. the name still means "good web server" to a lot of people. 5. i don't believe everything in the universe should fit neatly into a single moniker like a library catalog.
| [Monday 14 June 2010] [12:06:57] <rgl>  zedas, I see. that perfectly acceptable :D
| [Monday 14 June 2010] [12:22:58] <mikko>    zedas: it is plain C?
| [Monday 14 June 2010] [12:24:15] <mikko>    good
| [Monday 14 June 2010] [12:24:20] <mikko>    i'll keep my eye on that
| [Monday 14 June 2010] [12:26:46] <zedas>    mikko: so far.
| [Monday 14 June 2010] [15:24:41] Notice -NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Monday 14 June 2010] [15:24:41] Notice -NickServ- You are now identified for travlr.
| [Monday 14 June 2010] [15:24:41] CTCP   Received Version request from frigg.
| [Monday 14 June 2010] [15:24:43] Topic  The channel topic is "Welcome!".
| [Monday 14 June 2010] [15:24:43] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Monday 14 June 2010] [15:24:43] Notice -ChanServ- [#rekonq] welcome to rekonq, webkit KDE browser, channel
| [Monday 14 June 2010] [15:24:49] Mode   Channel modes: no messages from outside, topic protection
| [Monday 14 June 2010] [15:24:49] Created    This channel was created on 2010-02-05 10:44.
| [Monday 14 June 2010] [18:33:40] Nick   iFire` is now known as iFire.
| [Monday 14 June 2010] [20:41:43] <travisbrady>  sustrik: is the example at the bottom of this page out of date? http://api.zeromq.org/zmq_getsockopt.html the simple program I wrote to emulate it is crashing http://pastie.org/1004700 on Mac OS X
| [Monday 14 June 2010] [21:36:15] <foysavas> zedas: mikko: mongrel may have a good name to it, but sequels tend to suck. besides what ever happened to naming it gaegogi?
| [Monday 14 June 2010] [22:10:35] <zedas>    foysavas: too offensive
| [Tuesday 15 June 2010] [01:39:04] Part  abadr has left this channel.
| [Tuesday 15 June 2010] [01:48:59] Mode  ChanServ gives CIA-17 permission to talk.
| [Tuesday 15 June 2010] [01:55:09] <sustrik> travisbrady: yes, the example is broken
| [Tuesday 15 June 2010] [01:55:51] <sustrik> the last parameter should be pointer to size not the size itself
| [Tuesday 15 June 2010] [01:55:55] <sustrik> thanks for spotting this
| [Tuesday 15 June 2010] [01:58:50] <travisbrady> sustrik: sure, glad to help.  I'm working on a client lib and polling and getsockopt are all I've got left
| [Tuesday 15 June 2010] [01:59:36] <sustrik> great!
| [Tuesday 15 June 2010] [02:00:14] <travisbrady> I've got the simple server and the chat examples working nicely.  need to do the perf stuff next
| [Tuesday 15 June 2010] [02:01:13] <sustrik> yes, that's always interesting
| [Tuesday 15 June 2010] [02:01:33] <sustrik> seeing how much your language runtime adds to latency
| [Tuesday 15 June 2010] [02:02:41] <travisbrady> Any idea which languages (outside of c/c++) are fastest currently?
| [Tuesday 15 June 2010] [02:02:56] <CIA-17>  zeromq2: 03Martin Sustrik 07master * r9858447 10/ doc/zmq_getsockopt.txt : getsockopt documentation fixed - http://bit.ly/aeBuDC
| [Tuesday 15 June 2010] [02:03:08] <sustrik> C is the native API
| [Tuesday 15 June 2010] [02:03:15] <sustrik> so it's definitely the fastest
| [Tuesday 15 June 2010] [02:03:25] <sustrik> however, C++ is just a thin wrapper
| [Tuesday 15 June 2010] [02:03:37] <sustrik> that gets optimised away anyway
| [Tuesday 15 June 2010] [02:03:46] <sustrik> so it should be as fast as C
| [Tuesday 15 June 2010] [02:05:16] <travisbrady> But apart from those is java introduce the least latency?  Haskell? 
| [Tuesday 15 June 2010] [02:05:41] <travisbrady> pardon me, I mean to say "DOES java" not "is Java", must be time for bed
| [Tuesday 15 June 2010] [02:09:33] <sustrik> depends on message size
| [Tuesday 15 June 2010] [02:09:57] <sustrik> brian grager done a lot of work on using zero-copy in python binding
| [Tuesday 15 June 2010] [02:10:09] <sustrik> so the performance for large messages is equivalent to C
| [Tuesday 15 June 2010] [02:12:14] <sustrik> compiled languages on the other hand may have the least performance impact on small messages (List, .NET)
| [Tuesday 15 June 2010] [02:12:18] <sustrik> Lisp*
| [Tuesday 15 June 2010] [02:12:28] <sustrik> Java
| [Tuesday 15 June 2010] [02:29:26] <umesh>   I have a client server code using req-rep sockets ...
| [Tuesday 15 June 2010] [02:29:47] <umesh>   I start a client first ... 
| [Tuesday 15 June 2010] [02:30:47] <umesh>   if I don't start the server it wiats indefinitely ... is there any way to detect error like server is not up or connection reset ... if server goes down before client send etc ...
| [Tuesday 15 June 2010] [02:30:58] <umesh>   waits*
| [Tuesday 15 June 2010] [02:36:27] <sustrik> no
| [Tuesday 15 June 2010] [02:39:11] <umesh>   no way through zmq_poll as well ?
| [Tuesday 15 June 2010] [02:44:04] <sustrik> no, 0MQ is async library
| [Tuesday 15 June 2010] [02:44:16] <sustrik> the message gets sends once it's possible
| [Tuesday 15 June 2010] [02:44:26] <sustrik> at the time you call zmq_send it's just queued
| [Tuesday 15 June 2010] [02:44:43] <sustrik> if you want to use your 0mq server with sync client
| [Tuesday 15 June 2010] [02:45:00] <sustrik> i would suggest simply using raw TCP connection on the clients side
| [Tuesday 15 June 2010] [02:45:28] <sustrik> there was a discussion about writing a sync 0mq client couple of times
| [Tuesday 15 June 2010] [02:45:33] <sustrik> but nodody really did it
| [Tuesday 15 June 2010] [02:49:03] <umesh>   ok ... thanks
| [Tuesday 15 June 2010] [08:02:57] <CIA-17>  zeromq2: 03Martin Sustrik 07master * r341e8a2 10/ AUTHORS : test commit - http://bit.ly/d13f9p
| [Tuesday 15 June 2010] [11:37:34] <CIA-17>  rbzmq: 03Brian Buchanan 07master * rdb6d541 10/ .gitignore : ignore *.tmproj - http://bit.ly/c0AocM
| [Tuesday 15 June 2010] [18:18:44] <rgl> zedas, I'm almost convinced to start using fossil. the last sentence on your post was brutal heheh
| [Tuesday 15 June 2010] [18:54:37] <zedas>   rgl: hehe, i calls it like i see it. :-)
| 
| *** Logfile started
| *** on Wed Jun 16 00:55:18 2010
| 
| [Wednesday 16 June 2010] [00:55:18] Topic   The channel topic is "Welcome!".
| [Wednesday 16 June 2010] [00:55:18] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 16 June 2010] [00:55:24] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 16 June 2010] [00:55:24] Created This channel was created on 2010-02-05 10:44.
| [Wednesday 16 June 2010] [01:05:09] Part    abadr has left this channel.
| [Wednesday 16 June 2010] [01:18:11] <sustrik>   aunc: hi
| [Wednesday 16 June 2010] [01:19:18] <guido_g>   long gone he is :)
| [Wednesday 16 June 2010] [01:19:34] <guido_g>   good morning, btw
| [Wednesday 16 June 2010] [01:19:38] <sustrik>   morning
| [Wednesday 16 June 2010] [01:19:48] <sustrik>   missed that
| [Wednesday 16 June 2010] [01:20:24] <guido_g>   easy, it's early
| [Wednesday 16 June 2010] [01:20:54] <sustrik>   you are in CET as well?
| [Wednesday 16 June 2010] [01:21:05] <guido_g>   yes
| [Wednesday 16 June 2010] [01:22:24] <guido_g>   just fell out of bed :)
| [Wednesday 16 June 2010] [01:31:25] <sustrik>   yes made my tea
| [Wednesday 16 June 2010] [01:32:00] <guido_g>   2nd coffee here
| [Wednesday 16 June 2010] [01:32:36] <guido_g>   the news say the world is still crazy, so everthing is as usual
| [Wednesday 16 June 2010] [01:35:08] <sustrik>   :)
| [Wednesday 16 June 2010] [03:32:14] <guido_g>   re
| [Wednesday 16 June 2010] [05:50:29] <Efhache>   Hi everybody... I need some help about ZMQ... I've found a tutorial about instant messaging on the zmq website 
| [Wednesday 16 June 2010] [05:51:32] <Efhache>   with referece to a "chat example" in the zmq package....  Where can I find it?  I've seen into the coockbook a link to a chat example but the link is broked
| [Wednesday 16 June 2010] [05:51:40] <Efhache>   Some one have the source code?
| [Wednesday 16 June 2010] [05:59:50] <guido_g>   it might be the links need an update because the repos have been renamed
| [Wednesday 16 June 2010] [06:00:05] <guido_g>   have a look at the mailing list for the new repository names
| [Wednesday 16 June 2010] [06:26:00] <sustrik>   Efhache: Ok, the links are fixed now
| [Wednesday 16 June 2010] [07:04:42] <Efhache>   with a lot of delay....  thank you sustrik for your help :-)
| [Wednesday 16 June 2010] [07:05:00] <sustrik>   you are welcome!
| [Wednesday 16 June 2010] [07:19:06] <Efhache>   just one more question : this is code is in link with the "Intant Messaging (tutorial) " on the zmq website?
| [Wednesday 16 June 2010] [07:19:27] <Efhache>   I do not find a "chatroom" process in the code. Is it right?
| [Wednesday 16 June 2010] [07:22:31] <umesh_>    I am using the xreq/xrep sockets ...
| [Wednesday 16 June 2010] [07:23:06] <umesh_>    I have send the single req from client to server ... but i am getting two messages in the server ...
| [Wednesday 16 June 2010] [07:23:21] <umesh_>    also I am not getting the response back in the client ...
| [Wednesday 16 June 2010] [07:35:04] <guido_g>   *sigh*
| [Wednesday 16 June 2010] [07:35:23] <guido_g>   first part of the message received is the id, second part the data
| [Wednesday 16 June 2010] [07:35:44] <guido_g>   you have to prepend the id to the result returned
| [Wednesday 16 June 2010] [07:40:26] <umesh_>    ok ...
| [Wednesday 16 June 2010] [07:41:11] <umesh_>    if I am sending multiple responses ... then all the responses should have id ...
| [Wednesday 16 June 2010] [07:59:20] <guido_g>   multiple responses to one are done with multiple message parts
| [Wednesday 16 June 2010] [07:59:27] <guido_g>   *to one request
| [Wednesday 16 June 2010] [08:01:14] <sustrik>   Efhache: the tutorial is outdated
| [Wednesday 16 June 2010] [08:01:24] <sustrik>   have a look at README file in the project
| [Wednesday 16 June 2010] [08:08:46] <umesh_>    I do not want to use that ... one of the reason being it will only send data once on the wire ...
| [Wednesday 16 June 2010] [08:09:07] <umesh_>    I have application line which sends status information on wire ...
| [Wednesday 16 June 2010] [08:09:36] <umesh_>    e.g. I am installing applicatiob remotely and that send the status in % of application installed ...
| [Wednesday 16 June 2010] [08:14:06] <guido_g>   (x)req/(x)rep is built to supoort the one request and one response pattern
| [Wednesday 16 June 2010] [08:14:28] <guido_g>   if you want to have something different, use a different socket type
| [Wednesday 16 June 2010] [08:18:12] <umesh_>    but sending the single response is not even working ...
| [Wednesday 16 June 2010] [08:18:30] <guido_g>   w/o the code we can only guess
| [Wednesday 16 June 2010] [08:18:37] <umesh_>    Assertion failed: msg_->flags & ZMQ_MSG_MORE (xrep.cpp:146)
| [Wednesday 16 June 2010] [08:19:05] <umesh_>    and if I provide SNDMORE flag in send ... it does not crash but does not recv anything ...
| [Wednesday 16 June 2010] [08:19:23] <guido_g>   umesh_: show the code
| [Wednesday 16 June 2010] [08:19:52] <sustrik>   umesh_: if you are sending responses via XREP socket
| [Wednesday 16 June 2010] [08:19:53] <guido_g>   and I mean the code that _actually_ has been run
| [Wednesday 16 June 2010] [08:20:08] <sustrik>   you have to prefix the response by the requester ID
| [Wednesday 16 June 2010] [08:20:23] <sustrik>   the same you've get with the request
| [Wednesday 16 June 2010] [08:20:41] <guido_g>   that's what i told him above
| [Wednesday 16 June 2010] [08:21:13] <sustrik>   the assert just checks that there are at least two parts to the message: ID and body
| [Wednesday 16 June 2010] [08:21:23] <sustrik>   xrep.cpp:146 i mean
| [Wednesday 16 June 2010] [08:22:26] <umesh_>    http://pastebin.com/nQigmsKx
| [Wednesday 16 June 2010] [08:22:35] <umesh_>    check here at pastebin
| [Wednesday 16 June 2010] [08:22:51] <umesh_>    this is just the server part ...
| [Wednesday 16 June 2010] [08:23:24] <umesh_>    i think I got a error ...
| [Wednesday 16 June 2010] [08:23:35] <umesh_>    i need to send 2 responses ... 
| [Wednesday 16 June 2010] [08:23:56] <umesh_>    in first id and second actaul resposne
| [Wednesday 16 June 2010] [08:24:29] <umesh_>    but what i did was i just sent one response in which id is prepended to response 
| [Wednesday 16 June 2010] [08:24:50] <guido_g>   you need to send a 2 part message
| [Wednesday 16 June 2010] [08:25:39] <guido_g>   the first part (with the id) is sent with the ZMQ_MSG_MORE flag set
| [Wednesday 16 June 2010] [08:25:53] <guido_g>   the 2nd part is your response, w/o the flag set
| [Wednesday 16 June 2010] [08:28:36] <umesh_>    its working now 
| [Wednesday 16 June 2010] [08:29:07] <umesh_>    is there no way to send multiple responses to the single request ... without multipart messages ...
| [Wednesday 16 June 2010] [08:29:08] <umesh_>    ?
| [Wednesday 16 June 2010] [08:29:20] <guido_g>   no
| [Wednesday 16 June 2010] [08:32:52] <umesh_>    ok
| [Wednesday 16 June 2010] [12:04:52] Nick    mw_ is now known as mw.
| [Wednesday 16 June 2010] [20:35:14] <rgl>   zedas, go mongrel go! :-)
| [Wednesday 16 June 2010] [21:19:18] Topic   The channel topic is "Welcome!".
| [Wednesday 16 June 2010] [21:19:18] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 16 June 2010] [21:19:24] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 16 June 2010] [21:19:24] Created This channel was created on 2010-02-05 10:44.
| 
| *** Logfile started
| *** on Wed Jun 16 23:49:26 2010
| 
| [Wednesday 16 June 2010] [23:49:26] Topic   The channel topic is "Welcome!".
| [Wednesday 16 June 2010] [23:49:26] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 16 June 2010] [23:49:32] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 16 June 2010] [23:49:32] Created This channel was created on 2010-02-05 10:44.
| [Thursday 17 June 2010] [00:07:15] <nak>    hi
| [Thursday 17 June 2010] [00:59:05] <sustrik>    nak: hi
| [Thursday 17 June 2010] [01:05:15] <guido_g>    good morning all
| [Thursday 17 June 2010] [01:08:57] <nak>    sustrik: trying to code an irc bot using zeromq
| [Thursday 17 June 2010] [01:08:59] <nak>    in c
| [Thursday 17 June 2010] [01:09:05] <nak>    could you give me any tips on how to set this up
| [Thursday 17 June 2010] [01:09:10] <nak>    so far i've gotten to the zmq_connect part
| [Thursday 17 June 2010] [01:10:37] <sustrik>    there's an example that works that way
| [Thursday 17 June 2010] [01:11:11] <sustrik>    http://github.com/zeromq/zeromq-chat
| [Thursday 17 June 2010] [01:12:49] <nak>    thanks
| [Thursday 17 June 2010] [01:16:14] <nak>    sustrik: the s.connect there isn't the same as the one in c
| [Thursday 17 June 2010] [01:16:23] <nak>    in c you have to send a tcp://address:port
| [Thursday 17 June 2010] [01:16:28] <nak>    there you just connect?
| [Thursday 17 June 2010] [01:17:03] <sustrik>    sorry, what are you speaking about?
| [Thursday 17 June 2010] [01:19:08] <nak>    int zmq_connect (void *socket, const char *address);
| [Thursday 17 June 2010] [01:19:23] <nak>    where the format has to be rc = zmq_connect (socket, "tcp://server001:5555");
| [Thursday 17 June 2010] [01:19:28] <sustrik>    yes
| [Thursday 17 June 2010] [01:19:44] <nak>    ok
| [Thursday 17 June 2010] [01:27:46] <nak>            zmq::message_t msg (strlen (textbuf) + 1);
| [Thursday 17 June 2010] [01:27:46] <nak>            memcpy (msg.data (), textbuf, msg.size ());
| [Thursday 17 June 2010] [01:27:49] <nak>    hnn
| [Thursday 17 June 2010] [01:28:03] <nak>    so in c this would be zmq_msg_t msg = strlen (textbuf) + 1;
| [Thursday 17 June 2010] [01:28:17] <nak>    and the memcpy?
| [Thursday 17 June 2010] [01:40:18] <sustrik>    zmq_msg_t msg;
| [Thursday 17 June 2010] [01:40:35] <sustrik>    zmq_msg_init_size (&msg, strlen (textbuf) + 1);
| [Thursday 17 June 2010] [01:40:42] <sustrik>    memcpy (...)
| [Thursday 17 June 2010] [01:51:27] <nak>    sustrik: http://codepad.org/XGEpa7gw
| [Thursday 17 June 2010] [01:51:34] <nak>    i don't know the zeromq types, etc
| [Thursday 17 June 2010] [01:51:37] <nak>    foreign to me.
| [Thursday 17 June 2010] [01:51:51] <nak>    what should i pass to memcpy
| [Thursday 17 June 2010] [01:51:54] <nak>    msg.data?
| [Thursday 17 June 2010] [01:53:39] <guido_g>    http://api.zeromq.org/zmq_msg_init_size.html <- docs
| [Thursday 17 June 2010] [01:53:55] <guido_g>    http://api.zeromq.org/zmq.html <- even more docs
| [Thursday 17 June 2010] [01:59:43] <nak>    :)
| [Thursday 17 June 2010] [01:59:57] Part nak has left this channel.
| 
| *** Logfile started
| *** on Thu Jun 17 02:39:46 2010
| 
| [Thursday 17 June 2010] [02:39:46] Topic    The channel topic is "Welcome!".
| [Thursday 17 June 2010] [02:39:46] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Thursday 17 June 2010] [02:39:52] Mode Channel modes: no messages from outside, topic protection
| [Thursday 17 June 2010] [02:39:52] Created  This channel was created on 2010-02-05 10:44.
| [Thursday 17 June 2010] [02:42:48] <umesh>  how can i build pyzmq with static zmq libraries ...
| [Thursday 17 June 2010] [02:54:02] <sustrik>    question for brian
| [Thursday 17 June 2010] [02:54:14] <sustrik>    try asking on mailing list
| [Thursday 17 June 2010] [02:54:34] <umesh>  ok
| [Thursday 17 June 2010] [04:58:04] <middayc>    I would like to make a Rebol binding to 0mq .. are there any zmqlib.so / dll available maybe that one could download without recompiling?
| [Thursday 17 June 2010] [05:02:45] <CIA-17> zeromq2: 03Martin Sustrik 07master * r9151de3 10/ src/socket_base.cpp : generate identity for transient inproc connections - http://bit.ly/bsKHxn
| [Thursday 17 June 2010] [05:03:13] <sustrik>    middayc: not that I am aware of
| [Thursday 17 June 2010] [05:03:22] <sustrik>    however, recompiling takes few seconds
| [Thursday 17 June 2010] [05:03:50] <sustrik>    well, there are some linux packages out there
| [Thursday 17 June 2010] [05:04:26] <middayc>    I am on windows now and I don't have VS2008, just VS6 and probably to crappy computer to make VS2008 run well anyway
| [Thursday 17 June 2010] [05:06:09] <sustrik>    you don't need it to run well
| [Thursday 17 June 2010] [05:06:16] <sustrik>    it's a very small project
| [Thursday 17 June 2010] [05:06:28] <sustrik>    so it'll compile even on crappy computer
| [Thursday 17 June 2010] [05:07:27] <middayc>    last time I tried VS2008 it was horrible.. I will try it again .. ok thanks :) .. just wanted to make sure I am not wasting time downloading and installing visual studio if there is some dll somewhere to try
| [Thursday 17 June 2010] [05:09:19] <sustrik>    middayc: optionally, it should be compilable under mingw if you have that installed
| [Thursday 17 June 2010] [05:10:31] <middayc>    I think I have.. I am not too good lower level programmer .. I will try the default way now. if mongrel2 plans work 0mq will get quite some attention :)
| [Thursday 17 June 2010] [05:11:30] <sustrik>    ok
| [Thursday 17 June 2010] [05:24:39] <middayc>    ha, I have the dll, I already had vs2008 installed, just didn't have it registered .. I will tell you if I make the rebol binding. Thanks
| [Thursday 17 June 2010] [05:26:21] <middayc>    I see you also have interprocess communication? so this could be a good option to make for example rebol apps multicore?
| [Thursday 17 June 2010] [05:42:03] <sustrik>    ipc doesn't work on win32 sadly
| [Thursday 17 June 2010] [05:42:13] <sustrik>    but using TCP loopback works well
| [Thursday 17 June 2010] [05:42:44] <sustrik>    e.g: zmq_bind ("tcp://127.0.0.1:5555"); 
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: 03Martin Hurton 07master * r4777fe4 10/ src/pipe.cpp : 
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: pipe: fix bug in rollback() method
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: The msgs_written variable keeps track how many complete
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: messages have been written so far. The rollback operation drops all
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: fragments of the last incomplete message so it shouldn't
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: change this variable at all. - http://bit.ly/9SRCM8
| [Thursday 17 June 2010] [08:53:29] <middayc>    what would a errno 19 or 22 mean with bind (in .h file when I see errors (if I see correctly) thy should all be above 156384712
| [Thursday 17 June 2010] [09:10:41] <middayc>    ah, I found strerror
| [Thursday 17 June 2010] [09:11:40] <sustrik>    middayc: yeah, strerror should help
| [Thursday 17 June 2010] [09:11:56] <sustrik>    the error you are seeing is probably defined in a system header somewhere
| [Thursday 17 June 2010] [09:18:47] <middayc>    19 means "no such device" I get -1 and "no such device on zmq-bind sock "tcp://localhost:5555"  but 0 and still 19 on zmq-bind sock "tcp://127.0.0.1:5555" ... later with recv I get "Operation cannot be accomplished in current state" but I am not sure if I handle &msg there properly yet (in binding)
| [Thursday 17 June 2010] [09:36:03] <sustrik>    what's happens when you do zmq_bind ("tcp://127.0.0.1:5555") ?
| [Thursday 17 June 2010] [09:38:50] <middayc>    I get 0 (but if I call errno anyway it returns "no such device" if it matters)
| [Thursday 17 June 2010] [09:39:41] <sustrik>    if you get 0 it's OK
| [Thursday 17 June 2010] [09:40:21] <sustrik>    note that on win32 there are no interface names
| [Thursday 17 June 2010] [09:40:33] <sustrik>    so you have to bind using an IP address of the interface
| [Thursday 17 June 2010] [09:43:57] <middayc>    aha, I saw that localhost didn't work.. no problem . I think I am having problem creating and passing that zmq_msg_t struct to init and then recv .. this is completely on my end (rebol's) so I shouldn't bother you about it
| [Thursday 17 June 2010] [09:51:20] <sustrik>    ok
| [Thursday 17 June 2010] [10:21:59] <middayc>    I wrote this in rebol chat (it's not so big community) so I guess I will bother you a little more :) .. http://www.qwikitxt.com/use.rsp?key=17-Jun-2010-t2ebk9a6r8ld1c1o4q3z in case you have time you can look at it and if my assumptions are stupidly wrong you can tell me :)
| [Thursday 17 June 2010] [10:37:47] <sustrik>    middayc: it depends on how rebol handles C objects
| [Thursday 17 June 2010] [10:38:09] <sustrik>    as a void*?
| [Thursday 17 June 2010] [10:38:56] <sustrik>    ok, even more essential question:
| [Thursday 17 June 2010] [10:39:10] <sustrik>    how does rebol wrap C libraries?
| [Thursday 17 June 2010] [10:39:23] <sustrik>    usign a bridge C library a la JNI
| [Thursday 17 June 2010] [10:39:51] <sustrik>    or by calling C functions directly from rebol (like .net)?
| [Thursday 17 June 2010] [10:46:14] <middayc>    http://paste.factorcode.org/paste?id=1734 it's very simple on rebol side, but it has it's limitations.. this is how I specify binding for simpler func ... I talked to some rebol guys and I will write some c code, similarly as lua handles this for example.
| [Thursday 17 June 2010] [10:50:05] <sustrik>    middayc: yes, the lua way helps as it doesn't require rebol to deal with messy C details (such as sizeof zmq_msg_t)
| [Thursday 17 June 2010] [10:50:19] <sustrik>    say for implementing send
| [Thursday 17 June 2010] [10:50:32] <sustrik>    you pass it rebol string (or bytearray or whatevet)
| [Thursday 17 June 2010] [10:50:47] <sustrik>    the underlying wrapper function (in C) will create zmq_msg_t
| [Thursday 17 June 2010] [10:50:59] <sustrik>    initialise it and copy the data into it
| [Thursday 17 June 2010] [10:51:04] <sustrik>    easy
| [Thursday 17 June 2010] [10:53:25] <CIA-17> zeromq2: 03Martin Sustrik 07master * r7f01e99 10/ (11 files in 3 dirs): stopwatch returned to libzmq - http://bit.ly/bFfVsS
| [Thursday 17 June 2010] [11:10:10] <CIA-17> zeromq2: 03Martin Sustrik 07master * rcff7ba2 10/ (6 files in 6 dirs): Windows build fixed - http://bit.ly/dx2FhU
| [Thursday 17 June 2010] [11:24:19] <middayc>    thanks for your oppinion.. I will do it that way then. And of course thanks for making 0mq .. what I like the most so far is that it has a minimal simple api
| [Thursday 17 June 2010] [11:31:04] <sustrik>    middayc: thanks
| [Thursday 17 June 2010] [11:34:45] <middayc>    (and power with ipc/speed/flexibility/.. I believe powerful things don't have to be bloated and 0mq is that way)
| [Thursday 17 June 2010] [11:36:04] <sustrik>    actually, bloat is mostly followed by performance degradation
| [Thursday 17 June 2010] [11:40:26] <middayc>    yes, I think exactly the same way :)
| [Thursday 17 June 2010] [14:41:37] <CIA-17> rbzmq: 03Brian Buchanan 07master * r048a024 10/ (zmq2.gemspec zmq.gemspec): rename gem to zmq2 - http://bit.ly/aq9jRH
| [Thursday 17 June 2010] [19:03:51] Nick y is now known as Guest27156.
| [Thursday 17 June 2010] [20:54:12] <achew22>    can anyone point me to a good introduction to zeromq that focuses on python?
| [Thursday 17 June 2010] [22:04:33] Part achew22 has left this channel.
| [Friday 18 June 2010] [02:55:24] <umesh>    I read some code in zeromq ...
| [Friday 18 June 2010] [02:55:41] <umesh>    i have some queries related to it 
| [Friday 18 June 2010] [02:56:29] <umesh>    I have observed that in zmq for req/rep ... it uses normal tcp/ip apis internally ...
| [Friday 18 June 2010] [02:56:48] <umesh>    like listen, bind, connect, accecp, recv and send etc ...
| [Friday 18 June 2010] [02:57:38] <umesh>    but when we close the server generall read or recv returns 0 when server is shutdown using cntrl-c or exit or abort ... 
| [Friday 18 June 2010] [02:58:32] <umesh>    but in case of zmq recv does not return 0 when server is closed using exit or abort 
| [Friday 18 June 2010] [02:58:34] <umesh>    why ?
| [Friday 18 June 2010] [03:34:14] Nick   y is now known as Guest13742.
| [Friday 18 June 2010] [03:55:54] <sustrik>  becore there are N connections
| [Friday 18 June 2010] [03:55:59] <sustrik>  because*
| [Friday 18 June 2010] [03:56:15] <sustrik>  one failing doesn't make other unusable
| [Friday 18 June 2010] [04:17:27] <umesh>    sustrik: I did not understood your answer very clearly 
| [Friday 18 June 2010] [04:18:00] <sustrik>  0mq sockets can have arbitrary number of BSD sockets under the hood
| [Friday 18 June 2010] [04:18:21] <sustrik>  if one of the BSD sockets fail
| [Friday 18 June 2010] [04:18:31] <sustrik>  the others are still up and kicking
| [Friday 18 June 2010] [04:20:16] <mikko>    is there any way to know that send to one endpoint failed?
| [Friday 18 June 2010] [04:20:29] <mikko>    is there a need to know ever?
| [Friday 18 June 2010] [04:20:43] <sustrik>  there's no such thing as "send to one endpoint"
| [Friday 18 June 2010] [04:20:55] <sustrik>  if you want that kind of stuff, use BSD sockets directly
| [Friday 18 June 2010] [04:21:14] <mikko>    maybe i misphrased
| [Friday 18 June 2010] [04:21:40] <mikko>    i mean if i connect 0mq socket to three endpoints and one of them is unreachable. as a developer do i need/want to know about that?
| [Friday 18 June 2010] [04:22:28] <sustrik>  the design of 0mq is such that you don't know
| [Friday 18 June 2010] [04:22:35] <sustrik>  it's like speaking to a cloud
| [Friday 18 June 2010] [04:22:55] <sustrik>  if you want to manage connections on one-by-one basis, that's what BSD sockets are for
| [Friday 18 June 2010] [04:23:55] <mikko>    fire and forget
| [Friday 18 June 2010] [04:24:29] <sustrik>  yes
| [Friday 18 June 2010] [04:25:26] <mikko>    i started working on http device but got stuck on figuring out SLAs for different things at work
| [Friday 18 June 2010] [04:26:15] <sustrik>  no haste :)
| [Friday 18 June 2010] [04:29:40] <mikko>    the thing i like about imatix page is that it lists prices for professional services
| [Friday 18 June 2010] [04:29:47] <mikko>    that is nice and transparent
| [Friday 18 June 2010] [04:30:02] <mikko>    most of the companies have phone number and you need to go through hoops to get prices
| [Friday 18 June 2010] [04:30:39] <sustrik>  yes, experienced that myself
| [Friday 18 June 2010] [04:32:17] <sustrik>  presumably, the price is not the same for everyone
| [Friday 18 June 2010] [04:32:35] <mikko>    yeah, that's what i assume
| [Friday 18 June 2010] [04:32:43] <mikko>    the bigger company calling the bigger the price is
| [Friday 18 June 2010] [04:33:00] <mikko>    makes it very hard to calculate costs for a project especially under very strict NDA
| [Friday 18 June 2010] [04:39:32] <sustrik>  true
| [Friday 18 June 2010] [06:44:11] <umesh>    sustrik: you remember on that day we discussed about the  writing a sync 0mq client
| [Friday 18 June 2010] [06:44:40] <umesh>    and you told discussion happended couple of times but no one really did it ...
| [Friday 18 June 2010] [06:44:47] <umesh>    I can do it ...
| [Friday 18 June 2010] [06:44:55] <umesh>    can you give me some pointers ...
| [Friday 18 June 2010] [06:45:01] <umesh>    on this ...
| [Friday 18 June 2010] [06:45:08] <umesh>    how can we do it etc ...
| [Friday 18 June 2010] [06:45:38] <sustrik>  umesh: it's easy
| [Friday 18 June 2010] [06:45:46] <sustrik>  have a look at zmq_tcp(7)
| [Friday 18 June 2010] [06:45:54] <sustrik>  the wire format section
| [Friday 18 June 2010] [06:46:03] <sustrik>  that's how 0mq messages look like on the wire
| [Friday 18 June 2010] [06:46:19] <sustrik>  so the only thing you have to do is to open a TCP socket
| [Friday 18 June 2010] [06:46:26] <sustrik>  and read/write such messages
| [Friday 18 June 2010] [06:46:30] <sustrik>  and report errors :)
| [Friday 18 June 2010] [06:49:05] <umesh>    ok
| [Friday 18 June 2010] [11:13:58] <cremes>   going async to sync... i just don't see the point to doing that; async is perfect already
| [Friday 18 June 2010] [11:19:41] <sustrik>  error handling i suppose
| [Friday 18 June 2010] [11:32:39] <cremes>   pffftt; that's what error callbacks are for.
| [Saturday 19 June 2010] [03:43:20] Nick y is now known as Guest93184.
| [Saturday 19 June 2010] [07:45:16] Nick Guest93184 is now known as rgl.
| 
| *** Logfile started
| *** on Sat Jun 19 10:52:12 2010
| 
| [Saturday 19 June 2010] [10:52:12] Topic    The channel topic is "Welcome!".
| [Saturday 19 June 2010] [10:52:12] Topic    The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Saturday 19 June 2010] [10:52:18] Mode Channel modes: no messages from outside, topic protection
| [Saturday 19 June 2010] [10:52:18] Created  This channel was created on 2010-02-05 10:44.
| [Saturday 19 June 2010] [10:54:57] Mode ChanServ gives CIA-19 permission to talk.
| [Saturday 19 June 2010] [14:09:10] <CIA-19> zeromq2: 03Martin Hurton 07master * r2c3913b 10/ src/pair.cpp : fix double free error in PAIR socket - http://bit.ly/dawP59
| [Saturday 19 June 2010] [14:42:38] Nick y is now known as Guest66642.
| [Saturday 19 June 2010] [14:49:47] <CIA-19> zeromq2: 03Martin Hurton 07master * r10c28c1 10/ src/pipe.cpp : Revive reader on pipe termination -
| 
| *** Logfile started
| *** on Sun Jun 20 14:17:29 2010
| 
| [Sunday 20 June 2010] [14:17:29] Topic  The channel topic is "Welcome!".
| [Sunday 20 June 2010] [14:17:29] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Sunday 20 June 2010] [14:17:35] Mode   Channel modes: no messages from outside, topic protection
| [Sunday 20 June 2010] [14:17:36] Created    This channel was created on 2010-02-05 10:44.
| [Sunday 20 June 2010] [20:26:15] <Jad>  hey I'm looking for recommendations on SSL libraries (C preferably) for building some degree of security into a high volume socket server
| [Sunday 20 June 2010] [20:29:07] <Jad>  OpenSSL seems like the obvious choice
| [Sunday 20 June 2010] [21:34:50] <Jad>  does anyone have any experience with setting up the PHP extension on windoze?
| [Sunday 20 June 2010] [22:36:08] <impl> mikko would probably, since he wrote it (or maybe at least wrote one of them, I don't know if there are multiple)
| [Sunday 20 June 2010] [22:52:42] <Jad>  ok
| [Sunday 20 June 2010] [22:53:14] <Jad>  thnx
| [Monday 21 June 2010] [00:46:35] <Jad>  got it working
| [Monday 21 June 2010] [04:51:10] <mikko>    Jad: i got old windows builds somewhere
| [Monday 21 June 2010] [04:51:20] <mikko>    would need to update at some point
| [Monday 21 June 2010] [05:05:05] Part   xiaohao has left this channel.
| [Monday 21 June 2010] [05:24:06] <mikko>    hmm
| [Monday 21 June 2010] [05:24:11] <mikko>    windows builds fail atm
| [Monday 21 June 2010] [05:24:14] <mikko>    with github trunk
| [Monday 21 June 2010] [05:32:43] <sustrik>  mikko: let me try
| [Monday 21 June 2010] [05:33:15] <sustrik>  mikko: you meant zeromq2 of php bindign?
| [Monday 21 June 2010] [05:34:22] <mikko>    sustrik: zeromq2
| [Monday 21 June 2010] [05:34:35] <sustrik>  ok
| [Monday 21 June 2010] [05:34:36] <mikko>    visual studio templates refer to app_threads.cpp
| [Monday 21 June 2010] [05:34:52] <mikko>    and there is a missing return in zmq.cpp
| [Monday 21 June 2010] [05:34:56] <mikko>    let me get the line
| [Monday 21 June 2010] [05:35:04] <sustrik>  wait a se
| [Monday 21 June 2010] [05:35:05] <sustrik>  sec
| [Monday 21 June 2010] [05:35:16] <mikko>    642
| [Monday 21 June 2010] [05:35:18] <sustrik>  where did you get your source code from?
| [Monday 21 June 2010] [05:35:22] <mikko>    github 
| [Monday 21 June 2010] [05:35:25] <sustrik>  sustrik/zeromq2
| [Monday 21 June 2010] [05:35:26] <sustrik>  ?
| [Monday 21 June 2010] [05:35:27] <mikko>    yep
| [Monday 21 June 2010] [05:35:37] <mikko>    just did svn update
| [Monday 21 June 2010] [05:35:53] <sustrik>  last week the official version ws renamed to zeromq/zeromq2
| [Monday 21 June 2010] [05:35:59] <mikko>    ok
| [Monday 21 June 2010] [05:36:07] <mikko>    my build scripts just do svn up on everything
| [Monday 21 June 2010] [05:36:08] <sustrik>  sustrik/zeromq2 is my private sandbox now :)
| [Monday 21 June 2010] [05:36:11] <mikko>    and then build
| [Monday 21 June 2010] [05:36:26] <sustrik>  sorry for confusion
| [Monday 21 June 2010] [05:37:04] <mikko>    it's nice that i can use tortoisesvn to communicate with github on my win build machine
| [Monday 21 June 2010] [05:55:14] <sustrik>  mikko: btw, speaking of windows, do you have 2 win boxes by chance?
| [Monday 21 June 2010] [05:57:35] <mikko>    sustrik: i use VMs
| [Monday 21 June 2010] [05:57:46] <sustrik>  ah, ok then
| [Monday 21 June 2010] [05:57:48] <mikko>    so in theory i can have two windows boxes
| [Monday 21 June 2010] [05:57:51] <mikko>    :)
| [Monday 21 June 2010] [05:58:11] <sustrik>  i was interested in whether anyone can reproduce the opedds's latency test
| [Monday 21 June 2010] [05:58:18] <sustrik>  they are claming 0mq latency of 170us
| [Monday 21 June 2010] [05:58:23] <sustrik>  between 2 win boxes
| [Monday 21 June 2010] [05:58:28] <mikko>    i dont think vm is that usable
| [Monday 21 June 2010] [05:58:35] <mikko>    as there is going to be latency 
| [Monday 21 June 2010] [05:58:46] <sustrik>  nope, it would have impact on the test
| [Monday 21 June 2010] [05:59:07] <sustrik>  never mind, i'll ask on the mailing list
| [Monday 21 June 2010] [05:59:08] <mikko>    regarding zeromq support
| [Monday 21 June 2010] [05:59:11] <sustrik>  yes?
| [Monday 21 June 2010] [05:59:14] <mikko>    is it going to be yourself who is supporting it?
| [Monday 21 June 2010] [05:59:32] <sustrik>  there are several people involved
| [Monday 21 June 2010] [05:59:40] <mikko>    ok, good
| [Monday 21 June 2010] [05:59:40] <sustrik>  i am mainly doing development
| [Monday 21 June 2010] [05:59:58] <mikko>    so that if you get hit by a bus there is still someone supporting it
| [Monday 21 June 2010] [06:00:06] <sustrik>  yes, sure :)
| [Monday 21 June 2010] [06:00:20] <mikko>    good, good
| [Monday 21 June 2010] [06:00:36] <sustrik>  i am the visible figure here, others are doing paid work that's not visible
| [Monday 21 June 2010] [07:54:36] <sjampoo>  Is there anything more to the pipeline pattern? Or is basically just a req/rep pattern without the rep part? As the req/rep part also balances over its peers.
| [Monday 21 June 2010] [07:57:15] <sustrik>  sjampoo: it's similar
| [Monday 21 June 2010] [07:57:38] <sustrik>  the crucial difference is that replies are not routed back
| [Monday 21 June 2010] [07:57:45] <sustrik>  instead they are routed forward
| [Monday 21 June 2010] [07:58:14] <sjampoo>  ok!
| [Monday 21 June 2010] [15:19:12] <Jad>  yeah I updated everything to vc9, didn't even realize about this issue on windows boxes
| [Monday 21 June 2010] [15:19:28] <Jad>  works great now
| [Monday 21 June 2010] [19:31:20] Notice -NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Monday 21 June 2010] [19:31:20] Notice -NickServ- You are now identified for travlr.
| [Monday 21 June 2010] [19:31:22] Topic  The channel topic is "Welcome!".
| [Monday 21 June 2010] [19:31:22] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Monday 21 June 2010] [19:31:28] Mode   Channel modes: no messages from outside, topic protection
| [Monday 21 June 2010] [19:31:28] Created    This channel was created on 2010-02-05 10:44.
| [Monday 21 June 2010] [22:04:53] <stuarthalloway>   if I run either the latency/throughput tests from Java, but increase the roundtrip count by a factor of 10, I get an exception:
| [Monday 21 June 2010] [22:05:09] <stuarthalloway>   "Context was terminated" at org.zeromq.ZMQ$Socket.recv
| [Monday 21 June 2010] [22:05:28] <stuarthalloway>   running with verbose:gc suggests that this happens immediately after the first garbage collection
| [Monday 21 June 2010] [22:06:16] <stuarthalloway>   ...which suggests a resource management issue, or maybe I have a bad build
| [Monday 21 June 2010] [22:06:42] <stuarthalloway>   I am using 2.0.7 plus the latest jzmq from git
| [Tuesday 22 June 2010] [05:41:16] Mode  ChanServ gives CIA-17 permission to talk.
| [Tuesday 22 June 2010] [06:52:36] <travlr>  sustrik: Hi Martin.. are you available?
| [Tuesday 22 June 2010] [06:55:32] <sustrik> hi
| [Tuesday 22 June 2010] [06:55:38] <sustrik> yeah, i'm here
| [Tuesday 22 June 2010] [06:58:40] <travlr>  Hi. I first want to appologize for the the email I (peter alexander) posted to the list last night. I was half asleep when I wrote it and didn't mean to suggest that I could know more about things than you do. I most certainly do not and I think thats the way my email may have come across.
| [Tuesday 22 June 2010] [07:09:07] <sustrik> travlr: you very well may know more
| [Tuesday 22 June 2010] [07:09:16] <sustrik> it's the pipelining
| [Tuesday 22 June 2010] [07:09:26] <sustrik> i haven't been involved with that much
| [Tuesday 22 June 2010] [07:09:50] <sustrik> the existing behaviour is based on few cases we've seen
| [Tuesday 22 June 2010] [07:09:56] <sustrik> no theoretical beckground there
| [Tuesday 22 June 2010] [07:10:55] <travlr>  ok, very well. but I am self taught and no where near your caliber of expertise. enough said.
| [Tuesday 22 June 2010] [07:11:30] <travlr>  would you like to have a doxygen api representation for the zmq sources?
| [Tuesday 22 June 2010] [07:12:48] <sustrik> what would that require?
| [Tuesday 22 June 2010] [07:12:58] <sustrik> adding formatted comments to the source?
| [Tuesday 22 June 2010] [07:13:56] <travlr>  changing the comments from /* .. */ to /** .. */ and // to /// and then deciding on a suitable style sheet.
| [Tuesday 22 June 2010] [07:15:13] <travlr>  i could do a patch set or clone on github for you to decide.
| [Tuesday 22 June 2010] [07:16:16] <sustrik> that would be great
| [Tuesday 22 June 2010] [07:18:49] <travlr>  ok I'll start with that today and while doing so I'll familiarize myself with the sources so I can hopefully help the community to formulate more flexible/powerful load balancing/distribution and possibly resource management aspects of zmq. 
| [Tuesday 22 June 2010] [07:23:19] <sustrik> great
| [Tuesday 22 June 2010] [07:23:22] <sustrik> good luck :)
| [Tuesday 22 June 2010] [07:24:05] <travlr>  k. thanks.
| [Tuesday 22 June 2010] [07:41:36] <sjampoo> I've written an introduction to ZeroMQ for my blog
| [Tuesday 22 June 2010] [07:41:42] <sjampoo> It is currently in draft mode here: http://nichol.as/?p=606&shareadraft=baba606_4c20a0df10298
| [Tuesday 22 June 2010] [07:41:58] <sjampoo> I'd appreciate any feedback, especially if i am telling bullshit ;) 
| [Tuesday 22 June 2010] [07:43:15] <sjampoo> i'll be off for now, but would really like to hear if you think stuff is missing or wrong by email (to nicholas@nichol.as)
| [Tuesday 22 June 2010] [07:46:37] <sustrik> sjampoo: let me see
| [Tuesday 22 June 2010] [07:47:05] <sustrik> the graphic design is awesome!
| [Tuesday 22 June 2010] [07:52:11] <sustrik> sjampoo: what tool do you use for drawing diagrams?
| [Tuesday 22 June 2010] [07:52:15] <sustrik> they are really neat
| [Tuesday 22 June 2010] [07:57:46] <sjampoo> Thanks, its OmniGaffle for OSX, really one of my favorite tools
| [Tuesday 22 June 2010] [07:57:51] <sjampoo> Have to catch a train now!
| [Tuesday 22 June 2010] [07:58:57] <travlr>  they are sweet. anything similar to omnigraffe on linux i wonder.
| [Tuesday 22 June 2010] [08:00:45] <sustrik> doesn't look like :(
| [Tuesday 22 June 2010] [08:02:23] <travlr>  yeah not as sweet from what i have found but here' s a nice site for alternatives anyway. http://alternativeto.net/desktop/omnigraffle/?platform=linux
| [Tuesday 22 June 2010] [08:06:07]    * sustrik is using Dia
| [Tuesday 22 June 2010] [08:06:28] <sustrik> I would switch for OmniGaffe if I had a Mac box
| [Tuesday 22 June 2010] [08:06:48] <sustrik> but looks like I'll stay with Dia for now
| [Tuesday 22 June 2010] [08:07:22] Part  sustrik has left this channel ("Leaving").
| [Tuesday 22 June 2010] [08:07:59] <travlr>  Dia is nice, i haven't used it in quite a while though. Aris Express looks like it might be cool. http://alternativeto.net/desktop/aris-express/about
| [Tuesday 22 June 2010] [08:08:46] <travlr>  but its trial ware :(
| [Tuesday 22 June 2010] [08:09:49] <travlr>  oh my mistake.. its not trial ware.
| [Tuesday 22 June 2010] [08:18:37] <sustrik> maybe worth of trying - but it seems to be tied to a particular design methodology rather than being a generic drawing tool
| [Tuesday 22 June 2010] [08:24:34] <travlr>  yup. i almost jumped on the koffice team a year ago to modernize kivio, but as usual time is always a problem
| [Tuesday 22 June 2010] [08:32:01] <travlr>  sustrik: would you consider including an alternative cmake build system in zmq master if i told you i would be around to help maintain it? 
| [Tuesday 22 June 2010] [08:41:29] <sustrik> travlr: there's already a cmake build system here: git://github.com/PatrickCheng/zeromq2.git
| [Tuesday 22 June 2010] [08:41:53] <sustrik> if you want to help with it try speaking to the guy maintaining it
| [Tuesday 22 June 2010] [08:44:50] <travlr>  yes, i was aware of his fork. not a problem but merely a question. i'm not big on autotools so i thought i'd simply ask you.
| [Tuesday 22 June 2010] [08:46:11] <sustrik> well, the state of affairs is that the autotools build works on all supported platforms
| [Tuesday 22 June 2010] [08:46:25] <sustrik> if cmake build wants to become an alternative
| [Tuesday 22 June 2010] [08:46:40] <sustrik> there's a lot of testing to do on different platforms
| [Tuesday 22 June 2010] [08:47:46] <travlr>  i see. cmake is portable to all platforms though i believe. right?
| [Tuesday 22 June 2010] [08:49:27] <sustrik> i think so, but you have to deal with petty details by hand
| [Tuesday 22 June 2010] [08:50:14] <sustrik> have a look here: http://github.com/zeromq/zeromq2/blob/master/configure.in
| [Tuesday 22 June 2010] [08:50:32] <sustrik> different things done on different platforms...
| [Tuesday 22 June 2010] [08:50:36] <travlr>  yes. no prob. something for me to think about in the future maybe. i'm not yet schooled on all platform intricacies so i'll just use it privately for now.
| [Tuesday 22 June 2010] [11:40:29] <bapt>    Hi alk
| [Tuesday 22 June 2010] [11:41:52] <bapt>    is it possible with using pubsub that only one client (randomly) get the published messages
| [Tuesday 22 June 2010] [11:41:55] <bapt>    ?
| [Tuesday 22 June 2010] [11:42:43] <bapt>    I mean the publisher send a message N clients subscribed to it but I want only one client to really do the treatment
| [Tuesday 22 June 2010] [11:56:43] <cremes>  bapt: so you want all clients to receive the message but only 1 client to actually process the data?
| [Tuesday 22 June 2010] [11:57:45] <bapt>    yes
| [Tuesday 22 June 2010] [11:58:35] <cremes>  i would recommend looking at the butterfly example; it doesn't use pub/sub
| [Tuesday 22 June 2010] [11:58:38] <bapt>    in fact what I want is butterfly (I'm looking at the tutorail right now)
| [Tuesday 22 June 2010] [11:58:42] <bapt>     :)
| [Tuesday 22 June 2010] [11:58:45] <cremes>  it uses downstream/upstream sockets
| [Tuesday 22 June 2010] [11:58:55] <cremes>  oh, then you are on the right track!
| [Tuesday 22 June 2010] [11:59:10] <cremes>  do you have a specific question on that example?
| [Tuesday 22 June 2010] [11:59:22] <bapt>    not currently
| [Tuesday 22 June 2010] [11:59:45] <bapt>    thanks
| [Tuesday 22 June 2010] [12:00:21] <cremes>  ok
| [Tuesday 22 June 2010] [12:11:40] <bapt>    it's incredibly easy and powerfull
| [Tuesday 22 June 2010] [12:12:07] <bapt>    thanks a lot for 0mq, you saved a lot of my coding time :)
| [Tuesday 22 June 2010] [15:23:56] <jldupont>    hi - is there an official apt repository? i.e. apt-get 
| [Tuesday 22 June 2010] [15:25:17] <jldupont>    anyone??
| [Tuesday 22 June 2010] [15:28:44] <mivert>  jldupont: 2.0.6 is in sid and maverick http://packages.debian.org/source/sid/zeromq https://launchpad.net/ubuntu/maverick/+source/zeromq iMatix does not produce debs though
| [Tuesday 22 June 2010] [15:29:09] <jldupont>    mivert: thanks.
| [Tuesday 22 June 2010] [15:34:10] <sustrik> jldupont: there are deb packaging scripts in debian subdirectory, so in theory you can build the package yourself
| [Tuesday 22 June 2010] [15:34:47] <jldupont>    sustrik: thanks.  Is there a problem if I package and publish on Launchpad?
| [Tuesday 22 June 2010] [15:35:01] <sustrik> no, no problem at all
| [Tuesday 22 June 2010] [15:35:46] <jldupont>    just one doubt:  can the Python bindings do non-blocking?
| [Tuesday 22 June 2010] [15:36:44] <sustrik> you mean async, right?
| [Tuesday 22 June 2010] [15:37:03] <sustrik> the messages being sent on the background
| [Tuesday 22 June 2010] [15:37:12] <jldupont>    I guess.  I want to "recv" with timeout.
| [Tuesday 22 June 2010] [15:37:35] <sustrik> ah, there's no timeout in recv
| [Tuesday 22 June 2010] [15:37:35] <jldupont>    i.e. no blocking in receive loop
| [Tuesday 22 June 2010] [15:37:39] <sustrik> so you have to poll
| [Tuesday 22 June 2010] [15:37:45] <sustrik> (that one has timeout)
| [Tuesday 22 June 2010] [15:37:49] <sustrik> and then recv
| [Tuesday 22 June 2010] [15:37:58] <sustrik> either blocking or non-blocking
| [Tuesday 22 June 2010] [15:38:12] <sustrik> all these features should be available in pyzmq
| [Tuesday 22 June 2010] [15:38:19] <jldupont>    great.
| [Tuesday 22 June 2010] [15:38:56] <jldupont>    so, if I want a "message fabric", I have to build one myself i.e. there isn't a "broker/switch" in the system as in AMQP. Right?
| [Tuesday 22 June 2010] [15:39:51] <sustrik> there are so called "devices"
| [Tuesday 22 June 2010] [15:40:04] <sustrik> they are like micro-brokers
| [Tuesday 22 June 2010] [15:40:22] <sustrik> say an executable that is in fact a queue
| [Tuesday 22 June 2010] [15:40:27] <sustrik> single one
| [Tuesday 22 June 2010] [15:40:34] <sustrik> (zmq_queue)
| [Tuesday 22 June 2010] [15:40:54] <sustrik> but you can build the fabric by hand if you wish so
| [Tuesday 22 June 2010] [15:41:15] <jldupont>    hmmm... http://api.zeromq.org/zmq_forwarder.html ... sort of empty...
| [Tuesday 22 June 2010] [15:42:02] <sustrik> have a look here http://github.com/zeromq/zeromq-chat/blob/master/README
| [Tuesday 22 June 2010] [15:43:16] <jldupont>    ok thanks. I'll check it out later. Ciao.
| [Tuesday 22 June 2010] [15:43:30] <sustrik> cyl
| [Tuesday 22 June 2010] [15:49:38] <soren>   I'm wondering about a few things wrt to pub/sub using multicast.
| [Tuesday 22 June 2010] [15:50:04] <soren>   I haven't completely wrapped my head around multicast yet, so please bear with me.
| [Tuesday 22 June 2010] [15:50:08] <soren>   :)
| [Tuesday 22 June 2010] [15:51:15] <soren>   Ok, so say I have a bunch of publishers (let's say 100-ish) and a /lot/ of subscribers (let's say 100000-ish).
| [Tuesday 22 June 2010] [15:51:44] <soren>   They all "connect" (is that even the correct term for multicast) to some multicast IP and port.
| [Tuesday 22 June 2010] [15:51:59] <soren>   The publishers have no idea how many subscribers there are, right?
| [Tuesday 22 June 2010] [15:52:16] <soren>   The distribution is handled by... what? The networking infrastructure?
| [Tuesday 22 June 2010] [15:52:31] <soren>   Like routers/switches or whatnot, I mean?
| [Tuesday 22 June 2010] [15:54:24] <soren>   Furthermore, if the subscribers only set a message filter using ZMQ_SUBSRIBE, they still receive all the messages, they're just filtered by zmq and never reach my application, correct?
| [Tuesday 22 June 2010] [15:57:06] <soren>   sustrik: Can I pick your brain on this ^^ for a few minutes? :)
| [Tuesday 22 June 2010] [15:58:35] <sustrik> the right term is "to join a multicast group"
| [Tuesday 22 June 2010] [15:58:56] <sustrik> publishers have no idea of subscribers and vice versa
| [Tuesday 22 June 2010] [15:59:13] <sustrik> data are distributed by your network switch
| [Tuesday 22 June 2010] [15:59:40] <sustrik> in theory multicast traffic can pass via router to another subnet but don't try that at home
| [Tuesday 22 June 2010] [15:59:47] <soren>   Right.
| [Tuesday 22 June 2010] [15:59:55] <soren>   Ok, so it requires a reasonably capable switch.
| [Tuesday 22 June 2010] [16:00:10] <sustrik> look for switches with "IGMP snooping"
| [Tuesday 22 June 2010] [16:00:11] <soren>   I mean... a $20 gigabit switch probably won't give me much multicast love.
| [Tuesday 22 June 2010] [16:00:29] <sustrik> have a look at the specs
| [Tuesday 22 June 2010] [16:00:50] <soren>   Sure. Ok.
| [Tuesday 22 June 2010] [16:01:12] <sustrik> for high-perf scenarios you should always keep in mind that the actual throughput is limited by switches backplane throughput
| [Tuesday 22 June 2010] [16:01:22] <soren>   Sure.
| [Tuesday 22 June 2010] [16:01:33] <sustrik> ~100Gb/sec for real switches
| [Tuesday 22 June 2010] [16:01:43] <sustrik> (not toy switches)
| [Tuesday 22 June 2010] [16:01:53] <soren>   :)
| [Tuesday 22 June 2010] [16:02:41] <soren>   I assume a multicast group is defined by the IP alone?
| [Tuesday 22 June 2010] [16:03:03] <sustrik> yes
| [Tuesday 22 June 2010] [16:03:09] <soren>   Ok.
| [Tuesday 22 June 2010] [16:03:15] <sustrik> it's a range of IP addresses you can choose from
| [Tuesday 22 June 2010] [16:03:45] <soren>   Sure, sure, I'm just thinkgin..
| [Tuesday 22 June 2010] [16:04:43] <soren>   my connection string also includes a port number, but if the multicast group is defined by IP (and not the port), I want to make sure not to just use one IP with multiple ports.
| [Tuesday 22 June 2010] [16:05:10] <soren>   ...Since I might as well let the switch help me filter messages.
| [Tuesday 22 June 2010] [16:06:29] <soren>   Am I making sense? :)
| [Tuesday 22 June 2010] [16:09:49] <soren>   brb
| 
| *** Logfile started
| *** on Tue Jun 22 17:14:55 2010
| 
| [Tuesday 22 June 2010] [17:14:55] Topic The channel topic is "Welcome!".
| [Tuesday 22 June 2010] [17:14:55] Topic The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Tuesday 22 June 2010] [17:15:01] Mode  Channel modes: no messages from outside, topic protection
| [Tuesday 22 June 2010] [17:15:01] Created   This channel was created on 2010-02-05 10:44.
| [Tuesday 22 June 2010] [18:50:51] <jldupont>    is there more information on how to configure the "zmq_forwarder" application?
| [Tuesday 22 June 2010] [18:58:27] <jldupont>    or there isn't much to configure else than what's up on http://www.zeromq.org/docs:cookbook#toc8 ?  I.e. can the forwarder discriminate against the "message type" and forward only to subscribers interested by a given "message type"?
| 
| *** Logfile started
| *** on Wed Jun 23 01:57:00 2010
| 
| [Wednesday 23 June 2010] [01:57:00] Topic   The channel topic is "Welcome!".
| [Wednesday 23 June 2010] [01:57:00] Topic   The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Wednesday 23 June 2010] [01:57:06] Mode    Channel modes: no messages from outside, topic protection
| [Wednesday 23 June 2010] [01:57:06] Created This channel was created on 2010-02-05 10:44.
| [Wednesday 23 June 2010] [05:17:09] Part    tmp123456 has left this channel.
| [Wednesday 23 June 2010] [08:27:29] <Umesh> is the man page of zmq_outdated ...
| [Wednesday 23 June 2010] [08:27:50] <Umesh> is the man page of zmq_tcp (7) outdated 
| [Wednesday 23 June 2010] [08:28:28] <Umesh> because on tcp socket i am not geeting the messages compatible with the messages mentioned on this page ...
| [Wednesday 23 June 2010] [08:31:32] <sustrik>   Umesh: what are you getting exactly?
| [Wednesday 23 June 2010] [08:32:34] <Umesh> i first get 2 bytes 1 1 
| [Wednesday 23 June 2010] [08:32:55] <Umesh> sorry ... forget first part now typed ...
| [Wednesday 23 June 2010] [08:33:10] <sustrik>   that's an empty message
| [Wednesday 23 June 2010] [08:33:24] <sustrik>   you are right, it's not documented
| [Wednesday 23 June 2010] [08:33:29] <Umesh> i get 2 reads ...
| [Wednesday 23 June 2010] [08:33:46] <sustrik>   but peers use it to identify themselves when a connection is established
| [Wednesday 23 June 2010] [08:33:47] <Umesh> 1st read 1 0 ... means empty message ...
| [Wednesday 23 June 2010] [08:34:16] <sustrik>   so when connection is established
| [Wednesday 23 June 2010] [08:34:24] <sustrik>   peer A says "i'm A"
| [Wednesday 23 June 2010] [08:34:30] <sustrik>   and peer B says "i'm B"
| [Wednesday 23 June 2010] [08:34:31] <Umesh> and then 2nd read 1 1  + frame described in man zmq_tcp(7)
| [Wednesday 23 June 2010] [08:35:02] <sustrik>   what's your topology?
| [Wednesday 23 June 2010] [08:35:12] <sustrik>   req/rep with queue in the middle?
| [Wednesday 23 June 2010] [08:35:14] <Umesh> req/res socket ...
| [Wednesday 23 June 2010] [08:35:23] <Umesh> nope ... no que in the middle
| [Wednesday 23 June 2010] [08:35:24] <sustrik>   ah, right
| [Wednesday 23 June 2010] [08:35:45] <sustrik>   so the first (empty) message is an identification
| [Wednesday 23 June 2010] [08:35:51] <sustrik>   that's say for all socket types
| [Wednesday 23 June 2010] [08:36:09] <sustrik>   now, req/rep has more complex protocol
| [Wednesday 23 June 2010] [08:36:33] <Umesh> actually i wanted to use the sync client with zmq server ...
| [Wednesday 23 June 2010] [08:36:48] <sustrik>   what it has to do is to attach a way back to the requester to each request
| [Wednesday 23 June 2010] [08:36:49] <Umesh> therefore i am trying to send /recv message mentioned in the format ...
| [Wednesday 23 June 2010] [08:36:56] <Umesh> of man 7 zmq_tcp
| [Wednesday 23 June 2010] [08:37:27] <sustrik>   so that reply can be sent back to the right requester
| [Wednesday 23 June 2010] [08:37:30] <Umesh> using the normal tcp/ip socket apis
| [Wednesday 23 June 2010] [08:37:36] <sustrik>   Umesh: yes
| [Wednesday 23 June 2010] [08:37:42] <sustrik>   the format described is OK
| [Wednesday 23 June 2010] [08:37:53] <sustrik>   however, sockets add one layer on top of it
| [Wednesday 23 June 2010] [08:38:11] <Umesh> ok
| [Wednesday 23 June 2010] [08:38:16] <sustrik>   so some of the messages (message parts) are used by 0MQ infrastrucuture
| [Wednesday 23 June 2010] [08:38:29] <sustrik>   namely: first message on TCP connection is peer's identity
| [Wednesday 23 June 2010] [08:38:39] <sustrik>   then
| [Wednesday 23 June 2010] [08:39:13] <sustrik>   each REQ/REP message carries a stack of identities that identify the way back to the requester
| [Wednesday 23 June 2010] [08:39:28] <sustrik>   so for example
| [Wednesday 23 June 2010] [08:39:37] <sustrik>   requester A says "ABC"
| [Wednesday 23 June 2010] [08:40:05] <sustrik>   what you see on the wire is that message part ABC is preceded by an empty message part ||ABC|
| [Wednesday 23 June 2010] [08:40:29] <sustrik>   the empty message part serves to delimit the actual message from the routing info
| [Wednesday 23 June 2010] [08:41:04] <Umesh> ok
| [Wednesday 23 June 2010] [08:41:07] <sustrik>   when the message is received the identity of the sending peer is attached to it
| [Wednesday 23 June 2010] [08:41:11] <sustrik>   |A||ABC|
| [Wednesday 23 June 2010] [08:41:51] <sustrik>   if it's sent further (as when there's a zmq_queue in the middle)
| [Wednesday 23 June 2010] [08:42:01] <sustrik>   there's another identity added to the request
| [Wednesday 23 June 2010] [08:42:08] <sustrik>   |my_queue|A||ABC|
| [Wednesday 23 June 2010] [08:42:19] <sustrik>   there can be multiple hops
| [Wednesday 23 June 2010] [08:42:28] <Umesh> ok
| [Wednesday 23 June 2010] [08:42:36] <sustrik>   and thus multiple identities in the traceroute stack
| [Wednesday 23 June 2010] [08:42:43] <sustrik>   what REP socket does
| [Wednesday 23 June 2010] [08:42:46] <Umesh> is there not any way to not to have these identities ?
| [Wednesday 23 June 2010] [08:43:00] <Umesh> for normal working with bsd tcp/ip sockets 
| [Wednesday 23 June 2010] [08:43:25] <sustrik>   you would need 0MQ equivalent of DNS then
| [Wednesday 23 June 2010] [08:43:40] <sustrik>   still you would need a single identity in the request
| [Wednesday 23 June 2010] [08:43:51] <sustrik>   so that REP would know where to send the reply
| [Wednesday 23 June 2010] [08:44:09] <Umesh> one identity is fine ... that i can decode easily ...
| [Wednesday 23 June 2010] [08:44:24] <sustrik>   you can easily decode mulitple identities as well
| [Wednesday 23 June 2010] [08:44:33] <Umesh> one way can be never use hops/queue in between 
| [Wednesday 23 June 2010] [08:44:38] <sustrik>   the point is that the stack is terminated by empty message part
| [Wednesday 23 June 2010] [08:45:03] <sustrik>   no need for such drastic measures
| [Wednesday 23 June 2010] [08:45:08] <sustrik>   what you need to do  is:
| [Wednesday 23 June 2010] [08:45:13] <sustrik>   on the REQ side
| [Wednesday 23 June 2010] [08:45:32] <sustrik>   1. when sending message prepend it by empty message part (1 1)
| [Wednesday 23 June 2010] [08:45:48] <sustrik>   2. when receiving the message chop off the empty message part (1 1)
| [Wednesday 23 June 2010] [08:45:53] <sustrik>   on the REP side
| [Wednesday 23 June 2010] [08:46:27] <sustrik>   1. when receiving a message store all the identities in the stack until you encounter empty message part (stack delimiter)
| [Wednesday 23 June 2010] [08:46:45] <sustrik>   2. when sending a reply prepend all the stored identities to the reply
| [Wednesday 23 June 2010] [08:46:48] <sustrik>   that's it
| [Wednesday 23 June 2010] [08:46:55] <Umesh> ok
| [Wednesday 23 June 2010] [08:47:23] <Umesh> does i nned to send 1 0 first message always ?
| [Wednesday 23 June 2010] [08:47:28] <Umesh> need*
| [Wednesday 23 June 2010] [08:48:17] <sustrik>   that's only when you open the connection
| [Wednesday 23 June 2010] [08:48:27] <sustrik>   1. create TCP connection
| [Wednesday 23 June 2010] [08:48:30] <sustrik>   2. send 1 0
| [Wednesday 23 June 2010] [08:48:39] <sustrik>   3. receive one message (peer's identity)
| [Wednesday 23 June 2010] [08:50:02] <Umesh> ok ...
| [Wednesday 23 June 2010] [09:37:15] <Umesh> sustrik: one more doubt ... this multihop support is added in the release 2.0.7 ... right ?
| [Wednesday 23 June 2010] [09:37:27] <sustrik>   yes
| [Wednesday 23 June 2010] [10:01:06] <Umesh> ok
| [Wednesday 23 June 2010] [10:46:03] Part    sadfasdf has left this channel.
| [Wednesday 23 June 2010] [11:34:49] <jldupont>  FYI: http://nichol.as/zeromq-an-introduction
| [Wednesday 23 June 2010] [11:35:35] <sustrik>   jldupont: yes, it's already linked from zeromq.org (see blogs section)
| [Wednesday 23 June 2010] [11:35:48] <jldupont>  ok
| [Wednesday 23 June 2010] [11:36:26] <jldupont>  so, if I got this right, the first string sent on a pub/sub constitutes the "message type", right?
| [Wednesday 23 June 2010] [11:37:17] <sustrik>   it's a bit different
| [Wednesday 23 June 2010] [11:37:34] <jldupont>  i.e. ?
| [Wednesday 23 June 2010] [11:37:39] <sustrik>   any message beginning with particular sequence of bytes matches the subscription
| [Wednesday 23 June 2010] [11:37:45] <jldupont>  ok
| [Wednesday 23 June 2010] [11:38:31] <jldupont>  btw, I never was able to build the Python documentation on my system... 
| [Wednesday 23 June 2010] [11:38:47] <jldupont>  problem with matplotlib-sphinx-ext
| [Wednesday 23 June 2010] [11:38:55] <jldupont>  linux karmic
| [Wednesday 23 June 2010] [11:39:15] <sustrik>   dunno, i have nothing to do with python binding... try complaining on the mailing list
| [Wednesday 23 June 2010] [11:39:21] <jldupont>  ;-)
| [Wednesday 23 June 2010] [11:40:03] <sustrik>   or there's an issue tracker on pyzmq github project
| [Wednesday 23 June 2010] [11:41:00] <jldupont>  from what I can tell, the "wire" format might be brittle to "out-of-sync" cases... the delineation mechanisms appears weak... but of course, I might not have seen all documentation ;-)
| [Wednesday 23 June 2010] [11:43:25] <jldupont>  anyhow, 0mq is definitely more friendly to work with than rabbitmq.
| [Wednesday 23 June 2010] [11:44:40] <sustrik>   jldupont: can you elaborate on the delineation?
| [Wednesday 23 June 2010] [11:50:16] <jldupont>  I mean there must be "symbols" reserved for the framing and "symbols" valid for the data.
| [Wednesday 23 June 2010] [11:50:46] <jldupont>  I only see "payload length" which can cause problems when it comes to "out-of-sync" conditions i.e. where is the next boundary?
| [Wednesday 23 June 2010] [11:51:12] <sustrik>   it can't go out-of-sync as it's layered on top of TCP
| [Wednesday 23 June 2010] [11:51:47] <sustrik>   i would like to have first two bytes in each TCP packet reserved fro "offset of the first 0mq message in the packet"
| [Wednesday 23 June 2010] [11:51:50] <sustrik>   but
| [Wednesday 23 June 2010] [11:52:30] <sustrik>   1. BSD sockets have no API for sending data delineated with TCP packets
| [Wednesday 23 June 2010] [11:52:59] <sustrik>   2. networking hardware does all kind of black magic with TCP packets (packet coallescing etc.)
| [Wednesday 23 June 2010] [11:53:55] <jldupont>  I just mean that if something goes wrong on the software stack side, recovering the connection might not be possible... only tear-down, bring up will do.
| [Wednesday 23 June 2010] [11:54:06] <jldupont>  but that might be a good compromise.
| [Wednesday 23 June 2010] [11:54:13] <jldupont>  I mean, it's good enough.
| [Wednesday 23 June 2010] [11:54:24] <jldupont>  since that sort of condition is rare-ish.
| [Wednesday 23 June 2010] [11:56:14] <jldupont>  the trouble is detecting this situation....
| [Wednesday 23 June 2010] [11:56:55] <jldupont>  interesting failure mode... can be mitigated with appropriate timeouts, drop/bring up
| [Wednesday 23 June 2010] [12:02:01] <sustrik>   jldupont: reusing the failed connection?
| [Wednesday 23 June 2010] [12:02:11] <sustrik>   that would be pretty dangerous imo
| [Wednesday 23 June 2010] [12:02:27] <jldupont>  no. drop & reconnect
| [Wednesday 23 June 2010] [12:02:34] <sustrik>   ah
| [Wednesday 23 June 2010] [12:02:52] <jldupont>  ( aka tear-down/bring-up )
| [Wednesday 23 June 2010] [12:02:59] <sustrik>   that has no implication on wire protocol imo
| [Wednesday 23 June 2010] [12:03:05] <sustrik>   as you start anew each time
| [Wednesday 23 June 2010] [12:03:17] <sztanpet>  doesnt 0mq automatically reconnect you btw?
| [Wednesday 23 June 2010] [12:03:21] <sustrik>   yes
| [Wednesday 23 June 2010] [12:03:24] <jldupont>  ... but the trouble is mid-flight
| [Wednesday 23 June 2010] [12:03:41] <sztanpet>  what of it
| [Wednesday 23 June 2010] [12:03:53] <sztanpet>  its the same with tcp, i cant quite see your problem
| [Wednesday 23 June 2010] [12:05:11] <jldupont>  like I said, if a problem occurs mid-flight, then the connection can be detected faulty and tear/down/bring-up would occur.
| [Wednesday 23 June 2010] [12:05:35] <jldupont>  if that failure mode is taken care of in 0mq, then let's finish this discussion.
| [Wednesday 23 June 2010] [12:12:46] <sustrik>   yes, it is
| [Wednesday 23 June 2010] [12:12:56] <jldupont>  ok
| [Wednesday 23 June 2010] [14:41:56] <chris2>    hi. i'm trying to use the zmq2 gem for pub/sub
| [Wednesday 23 June 2010] [14:42:10] <chris2>    and i can pub, but nothing appears at sub
| [Wednesday 23 June 2010] [14:43:23] <cremes>    chris2: when you say "gem" i assume you are using ruby; is that correct?
| [Wednesday 23 June 2010] [14:43:30] <chris2>    erm, yes
| [Wednesday 23 June 2010] [14:43:32] <chris2>    right
| [Wednesday 23 June 2010] [14:43:37] <chris2>    i can paste my code too
| [Wednesday 23 June 2010] [14:43:47] <cremes>    please do (use pastie or a gist)
| [Wednesday 23 June 2010] [14:44:40] <chris2>    http://pastie.org/1016242
| [Wednesday 23 June 2010] [14:45:16] <chris2>    i ported that from the py at http://nichol.as/zeromq-an-introduction
| [Wednesday 23 June 2010] [14:45:50] <cremes>    ok; is the pub loop printing out each message that it sends?
| [Wednesday 23 June 2010] [14:45:58] <chris2>    the pub sends nicely
| [Wednesday 23 June 2010] [14:46:06] <chris2>    the sub doesnt show anything
| [Wednesday 23 June 2010] [14:46:20] <cremes>    let me try and run it myself... give me a couple...
| [Wednesday 23 June 2010] [14:46:58] <chris2>    i ran strace on the sub, and it shows
| [Wednesday 23 June 2010] [14:46:59] <chris2>    recvfrom(8, 0x7fff8c0810f0, 48, 64, 0, 0) = -1 EAGAIN (Resource temporarily unavailable)
| [Wednesday 23 June 2010] [14:47:08] <chris2>    roughly pulsed like the pub
| [Wednesday 23 June 2010] [14:47:16] <chris2>    so i guess there is some kind of transmission
| [Wednesday 23 June 2010] [14:51:28] <chris2>    hah, fixed it
| [Wednesday 23 June 2010] [14:51:31] <cremes>    chris2: i'm having some trouble installing the zmq2 gem; it installed fine but now complains about a missing file (zmq_native)
| [Wednesday 23 June 2010] [14:51:34] <cremes>    what was it?
| [Wednesday 23 June 2010] [14:51:39] <chris2>    s.setsockopt(ZMQ::SUBSCRIBE, "")
| [Wednesday 23 June 2010] [14:51:44] <chris2>    i need to subscribe to everything
| [Wednesday 23 June 2010] [14:51:45] <cremes>    ah!
| [Wednesday 23 June 2010] [14:51:53] <chris2>    the py api seems to do that by default
| [Wednesday 23 June 2010] [14:52:00] <cremes>    good catch
| [Wednesday 23 June 2010] [14:52:10] <chris2>    py api seems a bit nicer in general
| [Wednesday 23 June 2010] [14:52:17] <chris2>    but im not sure if zmq2 is even official
| [Wednesday 23 June 2010] [14:52:31] <cremes>    what does official mean anyway? use what works best.
| [Wednesday 23 June 2010] [14:53:01] <chris2>    sure
| [Wednesday 23 June 2010] [14:53:10] <chris2>    but then the api should be similar i think
| [Wednesday 23 June 2010] [14:53:25] <chris2>    ok, multiple sub works too
| [Wednesday 23 June 2010] [14:53:29] <cremes>    the zeromq guys don't anything about ruby (or python or php or lua) so they are hoping community folks take over the bindings
| [Wednesday 23 June 2010] [14:54:10] <chris2>    http://www.zeromq.org/bindings:ruby ?
| [Wednesday 23 June 2010] [14:54:42] <cremes>    yes; also http://www.zeromq.org/bindings:ruby-ffi for jruby, rubinius and others
| [Wednesday 23 June 2010] [14:54:48] <cremes>    (i wrote those)
| [Wednesday 23 June 2010] [14:55:00] <cremes>    er, i wrote the ffi bindings for ruby
| [Wednesday 23 June 2010] [14:55:19] <chris2>    ok
| [Wednesday 23 June 2010] [14:58:19] <chris2>    also, is there a thing i can place inbetween to add persistence of the messages?
| [Wednesday 23 June 2010] [15:00:01] <cremes>    chris2: there isn't anything in the 0mq library that provides persistence; you would need to create that yourself
| [Wednesday 23 June 2010] [15:00:19] <chris2>    just figured someone already wrote a daemon or something to do that in general
| [Wednesday 23 June 2010] [15:00:34] <cremes>    not yet; you could be the first
| [Wednesday 23 June 2010] [15:00:51] <chris2>    its probably not entirely trivial then :)
| [Wednesday 23 June 2010] [15:01:31] <cremes>    nope, not trivial; messages can be in the 0mq queue, a system buffer, a driver buffer, on the wire, or in those same buffers on the receiving end
| [Wednesday 23 June 2010] [15:01:42] <chris2>    yeah
| [Wednesday 23 June 2010] [15:01:57] <cremes>    you would need an explicit ack that a message was persisted
| [Wednesday 23 June 2010] [15:02:08] <cremes>    it's a thorny issue
| [Wednesday 23 June 2010] [15:02:15] <chris2>    true that
| [Wednesday 23 June 2010] [15:26:10] <CIA-17>    rbzmq: 03Brian Buchanan 07master * r5be8033 10/ rbzmq.c : Make the flags argument to ZMQ::Socket.send() and ZMQ::Socket.recv() optional. Resolves issue #1. - http://bit.ly/aeY6wZ
| [Wednesday 23 June 2010] [15:26:21] <chris2>    awesome quick :D
| [Wednesday 23 June 2010] [15:28:09] <chris2>    is pub/sub filtering really implemented on the pub side?
| [Wednesday 23 June 2010] [15:28:16] <chris2>    or does sub get everything and then filters
| [Wednesday 23 June 2010] [15:29:04] <CIA-17>    rbzmq: 03Brian Buchanan 07master * r7043d45 10/ rbzmq.c : Update method signatures for socket.send and socket.recv in the documentation. - http://bit.ly/aG9JWs
| [Wednesday 23 June 2010] [15:33:07] <sustrik>   chris2: unfortunately, yes
| [Wednesday 23 June 2010] [15:33:16] <chris2>    kinda lame?
| [Wednesday 23 June 2010] [15:33:25] <sustrik>   passing the subscriptions upstream is on the roadmap for a long time
| [Wednesday 23 June 2010] [15:33:50] <sustrik>   but it's not trivial and so far there was noone to sponsor the development
| [Wednesday 23 June 2010] [15:34:07] <chris2>    okay
| [Wednesday 23 June 2010] [15:34:13] <chris2>    zmq is still cool
| [Wednesday 23 June 2010] [15:34:24] <sustrik>   :)
| [Wednesday 23 June 2010] [15:34:24] <chris2>    i guess i have some use for it
| [Wednesday 23 June 2010] [16:12:29] <mml>   is there a way to buffer unconsumed messages in a pub/sub config?
| [Wednesday 23 June 2010] [16:12:41] <mml>   i.e. all consumers are down, but i'm using a forwarder process..
| [Wednesday 23 June 2010] [16:12:56] <mml>   i want the forwarder to que msgs until the consumers return
| [Wednesday 23 June 2010] [16:13:07] <mml>   like ::SWAP et. al.
| [Wednesday 23 June 2010] [16:13:29] <mml>   or is that to 'brokery'
| [Wednesday 23 June 2010] [16:13:32] <mml>   s/to/too
| [Wednesday 23 June 2010] [16:17:41] <mml>   and, is the zmq forwarder config syntax documented somewhere?
| [Wednesday 23 June 2010] [16:20:07] <cremes>    mml: the forwarder "device" included with 0mq doesn't do any buffering
| [Wednesday 23 June 2010] [16:20:30] <cremes>    the forwarder also has no idea if anyone is connected to it; it would need to "heartbeat" or otherwise communicate with downstream clients
| [Wednesday 23 June 2010] [16:20:40] <cremes>    all of this is possible, but you would need to write the logic yourself
| [Wednesday 23 June 2010] [16:21:05] <cremes>    an no, the configuration for forwarder isn't documented anywhere; the code is short enough to figure it out though
| [Wednesday 23 June 2010] [16:21:57] <mml>   cremes: tx
| [Wednesday 23 June 2010] [16:22:09] <cremes>    you're welcome
| [Wednesday 23 June 2010] [16:31:37]      * mml is sad that zmq is inappropriate for what he needs
| [Wednesday 23 June 2010] [16:31:51] <mml>   the ruby bindings worked great fwiw
| [Wednesday 23 June 2010] [16:32:28] <bj_990>    are you guys as slick as ice http://www.zeroc.com/ ? 
| [Wednesday 23 June 2010] [16:53:23] <mivert>    bj_990: yes? pretty different though.  Ice does RPC and serialization, MQ does messaging.
| [Wednesday 23 June 2010] [16:54:18] <bj_990>    i just saw that
| [Wednesday 23 June 2010] [16:54:18] <bj_990>    :D
| [Wednesday 23 June 2010] [16:54:37] <bj_990>    thanks mivert 
| [Wednesday 23 June 2010] [16:54:44] <mivert>    np
| [Wednesday 23 June 2010] [17:22:33] <bj_990>    this looks great
| [Wednesday 23 June 2010] [17:30:39] <bj_990>    be back in the near future... 
| [Wednesday 23 June 2010] [23:37:03] <alisdair>  is zeromq a protocol at all, or is it mostly an alternate interface to sockets?
| [Thursday 24 June 2010] [01:46:43] Part __20h__ has left this channel.
| [Thursday 24 June 2010] [02:07:42] <travlr> alisdair: zmq transports a "blob" of data so the descriptor of the blob is provided by the app programmer. 
| [Thursday 24 June 2010] [02:08:33] <alisdair>   travlr: i get that, but does it wrap that at all? can i use zeromq at only one end of a connection, or does it need to be used at both?
| [Thursday 24 June 2010] [02:09:28] <travlr> alisdair: "only one end" ... do you mean using standard-sockets in the system... if so see zmq_poll() doc
| [Thursday 24 June 2010] [02:09:37] <alisdair>   well
| [Thursday 24 June 2010] [02:09:42] <alisdair>   if i write a client using zeromq
| [Thursday 24 June 2010] [02:09:48] <alisdair>   does the server need to be aware of that?
| [Thursday 24 June 2010] [02:10:21] <travlr> is the server using a standard-socket?
| [Thursday 24 June 2010] [02:10:36] <travlr> bsd socket?
| [Thursday 24 June 2010] [02:11:32] <travlr> look at the zmq_poll() doc I think that will help answer your question.
| [Thursday 24 June 2010] [02:13:08] <alisdair>   standard sockets
| [Thursday 24 June 2010] [02:13:49] <travlr> also, see the mato's zmq-camera example of integrating other system aspects: http://github.com/mato/zeromq-examples
| [Thursday 24 June 2010] [02:14:21] <alisdair>   i just want to know, does zeromq add any wrapping to a packet? if i send a packet from a client written using zeromq, does the receiving system need to know anything about it to process it? is it just a regular udp/tcp packet?
| [Thursday 24 June 2010] [02:16:26] <travlr> zmq_recv() just recieves the "blob". no un-wrapping is necessary. it does wrap the blob with possible addressing and delineation protocol aspects. 
| [Thursday 24 June 2010] [02:17:06] <travlr> see: zmq_tcp(7), zmq_pgm(7), zmq_ipc(7), and zmq_inproc(7) for details.
| [Thursday 24 June 2010] [02:17:48] <travlr> http://api.zeromq.org/zmq.html
| [Thursday 24 June 2010] [02:33:13] <Umesh>  http://www.zeromq.org/whitepapers:design-v06#toc0
| [Thursday 24 June 2010] [02:33:21] <Umesh>  is this white paper outdated ?
| [Thursday 24 June 2010] [02:36:09] <travlr> Umesh: In a sense yes, but not totally. zmq2 is a departure from zmq1 in that is entirely brokerless and there is no message protocol. I don't know yet myself where all the similarities and differences lie.
| [Thursday 24 June 2010] [02:39:16] <sustrik>    Umesh: in general, yes. what exactly are you interested in?
| [Thursday 24 June 2010] [02:41:12] <Umesh>  I am intrested in load balancing for client server 
| [Thursday 24 June 2010] [02:41:56] <Umesh>  there it was how we can do load balancing in the zmq is described in that white paper 
| [Thursday 24 June 2010] [02:42:13] <Umesh>  while reading that paper i felt it is outdated ...
| [Thursday 24 June 2010] [02:42:38] <Umesh>  so we can't do load balancing inbuilt in the zmq ... right ?
| [Thursday 24 June 2010] [02:42:50] <Umesh>  for REQ/REP socket
| [Thursday 24 June 2010] [02:45:11] <sustrik>    yes, there's load balancing in-built
| [Thursday 24 June 2010] [02:45:22] <sustrik>    when there are several peers to REQ socket
| [Thursday 24 June 2010] [02:45:31] <sustrik>    the requests are load-balanced among them
| [Thursday 24 June 2010] [02:45:46] <Umesh>  ok
| [Thursday 24 June 2010] [02:46:03] <Umesh>  then how we can choose the endpoint for that peer ...
| [Thursday 24 June 2010] [02:46:13] <sustrik>    ?
| [Thursday 24 June 2010] [02:46:15] <Umesh>  I haven't seen any such apis 
| [Thursday 24 June 2010] [02:46:32] <sustrik>    there's no need for specific apis
| [Thursday 24 June 2010] [02:46:37] <Umesh>  means say i have a name server on m1, m2 and m3 ...
| [Thursday 24 June 2010] [02:47:07] <sustrik>    s =socket (REQ);
| [Thursday 24 June 2010] [02:47:13] <sustrik>    s.connect (m1);
| [Thursday 24 June 2010] [02:47:15] <sustrik>    s.connect (m2);
| [Thursday 24 June 2010] [02:47:17] <sustrik>    s.connect (m3);
| [Thursday 24 June 2010] [02:47:24] <sustrik>    that's what you meant?
| [Thursday 24 June 2010] [02:47:58] <Umesh>  then I create a REQ socket and then connect ...
| [Thursday 24 June 2010] [02:48:03] <Umesh>  then send data ...
| [Thursday 24 June 2010] [02:48:10] <sustrik>    yes
| [Thursday 24 June 2010] [02:48:16] <Umesh>  so data will go to machine where i connect ...
| [Thursday 24 June 2010] [02:48:18] <Umesh>  right ...
| [Thursday 24 June 2010] [02:48:30] <sustrik>    or you can bind and let name servers connect to your app
| [Thursday 24 June 2010] [02:48:38] <Umesh>  ok so you mean i should connect to all name server ... right ?
| [Thursday 24 June 2010] [02:48:39] <sustrik>    depends on what you are doing
| [Thursday 24 June 2010] [02:48:45] <sustrik>    right
| [Thursday 24 June 2010] [02:48:53] <Umesh>  to enable laod balancing ...
| [Thursday 24 June 2010] [02:49:36] <Umesh>  is there any way to know all machines on the port using the zmq ... something like getaddribfo
| [Thursday 24 June 2010] [02:50:27] <Umesh>  just a summary of our discussion : To enable load balansing in the zmq ... REQ socket should connect to all REP sockets it know ... right ?
| [Thursday 24 June 2010] [02:50:52] <sustrik>    REQ sockets should have multiple peers
| [Thursday 24 June 2010] [02:51:03] <Umesh>  yup ...
| [Thursday 24 June 2010] [02:51:05] <sustrik>    whether they are connected to are they connect themselves
| [Thursday 24 June 2010] [02:51:33] <sustrik>    as for locating the machines... it's pretty hard when you think of Intetnet
| [Thursday 24 June 2010] [02:51:50] <sustrik>    there may be a machine running somewhere in Ougadougou
| [Thursday 24 June 2010] [02:52:02] <sustrik>    no, no way to locate all the instances
| [Thursday 24 June 2010] [02:52:07] <Umesh>  ok
| [Thursday 24 June 2010] [02:52:14] <sustrik>    what you may want is a shared queue
| [Thursday 24 June 2010] [02:52:27] <sustrik>    i.e. all clients connect to the shared queue
| [Thursday 24 June 2010] [02:52:38] <Umesh>  but for lan ... I can still use the getaddrinfo call ... to find all the machines to connect to ...
| [Thursday 24 June 2010] [02:52:38] <sustrik>    all servers connect to the shared queue
| [Thursday 24 June 2010] [02:53:08] <sustrik>    the share queue load balances the requests among the servers
| [Thursday 24 June 2010] [02:53:11] <Umesh>  means use a queue device in between ... create one hop ..
| [Thursday 24 June 2010] [02:53:15] <sustrik>    yes
| [Thursday 24 June 2010] [02:53:40] <sustrik>    ad getaddrinfo: i am afraid it doesn't work that way
| [Thursday 24 June 2010] [02:53:50]   * sustrik is not a DNS expert though
| [Thursday 24 June 2010] [02:53:58] <Umesh>  but for lan ... I can still use the getaddrinfo call ... to find all the machines to connect to ...
| [Thursday 24 June 2010] [02:54:38] <sustrik>    how would you do that?
| [Thursday 24 June 2010] [02:54:42] <Umesh>  i will just not specify node in that call ... only specify port ... get all the machines listening on that port ...
| [Thursday 24 June 2010] [02:55:05] <sustrik>    i doubt getaddrinfo works that way
| [Thursday 24 June 2010] [02:55:37] <Umesh>  getaddrinfo(NULL, PORT, &hints, &servinfo))
| [Thursday 24 June 2010] [02:55:47] <sustrik>    does it work?
| [Thursday 24 June 2010] [02:55:55] <Umesh>  here PORT will be the port of the name server ...
| [Thursday 24 June 2010] [02:56:03] <Umesh>  it works for normal tcp ip ...
| [Thursday 24 June 2010] [02:56:09] <sustrik>    wow
| [Thursday 24 June 2010] [02:56:24] <Umesh>  so i think it will work for zmq ...
| [Thursday 24 June 2010] [02:56:33] <Umesh>  isn't it ...
| [Thursday 24 June 2010] [02:56:35] <Umesh>  ?
| [Thursday 24 June 2010] [02:56:52] <sustrik>    if it works then it would surely work
| [Thursday 24 June 2010] [02:56:56] <sustrik>    even for 0mq
| [Thursday 24 June 2010] [02:56:58]   * sustrik wonders how that works under the covers
| [Thursday 24 June 2010] [02:57:00] <Umesh>  ok
| [Thursday 24 June 2010] [02:57:19] <Umesh>  i will give the try ... 
| [Thursday 24 June 2010] [02:58:43] <Umesh>  one more doubt ... which load balancing we does ?
| [Thursday 24 June 2010] [02:58:54] <Umesh>  means round robin ... etc ?
| [Thursday 24 June 2010] [03:15:05] <sustrik>    round robin
| [Thursday 24 June 2010] [03:16:39] <Umesh>  ok
| [Thursday 24 June 2010] [03:27:17] <Umesh>  hi sustrik ... 
| [Thursday 24 June 2010] [03:27:29] <Umesh>  i think i was wrong for getaddrinfo ...
| [Thursday 24 June 2010] [03:27:55] <Umesh>  it will not work for normal tcp/ip as well
| [Thursday 24 June 2010] [03:39:35] <sustrik>    :)
| [Thursday 24 June 2010] [03:55:27] <Efhache>    Hi everybody
| [Thursday 24 June 2010] [03:56:15] <Efhache>    I come back to you because I need some help...  I'm learning how to use zmq... In this goal I test some example application.
| [Thursday 24 June 2010] [03:56:35] <Efhache>    Right now I test the tcp client/server application example
| [Thursday 24 June 2010] [03:57:50] <Efhache>    but I've a little problem... when I try to send my message I've an "unknown error" (returned by strerror) and the client of course segfault when I try to receive
| [Thursday 24 June 2010] [03:58:20] <Efhache>    The error is "ERREUR -1 send: Unknown error 156384763 "  
| [Thursday 24 June 2010] [03:58:27] <Efhache>    Could you help me ???
| [Thursday 24 June 2010] [03:58:58] <Efhache>    here is the line code used to send my message : rc = zmq_send (s, &query, 0);
| [Thursday 24 June 2010] [04:03:00] <travlr> If you post the code piece somewhere, I'll try to help.
| [Thursday 24 June 2010] [04:08:26] <Efhache>    Can I post it here?
| [Thursday 24 June 2010] [04:08:32] <Efhache>    (piece by piece) ?
| [Thursday 24 June 2010] [04:09:47] <travlr> use dpaste or gist or some similar web service so I may be able to see what might be incorrect
| [Thursday 24 June 2010] [04:12:23] <travlr> http://dpaste.com/ or http://gist.github.com/ or some other
| [Thursday 24 June 2010] [04:12:47] <Efhache>    http://dpaste.com/hold/210910/
| [Thursday 24 June 2010] [04:14:20] <sustrik>    Efhache: 0mq defines few additional errors
| [Thursday 24 June 2010] [04:14:31] <sustrik>    use zmq_strerror instead of strerror to decode them
| [Thursday 24 June 2010] [04:14:38] <Efhache>    ok
| [Thursday 24 June 2010] [04:17:39] <Efhache>    ERREUR -1 send: Operation cannot be accomplished in current state
| [Thursday 24 June 2010] [04:17:47] <Efhache>    no more information for me...
| [Thursday 24 June 2010] [04:17:49] <Efhache>    :-/
| [Thursday 24 June 2010] [04:21:06] <travlr> has the server been executed before the client?
| [Thursday 24 June 2010] [04:22:20] <Efhache>    yes of course
| [Thursday 24 June 2010] [04:22:35] <Efhache>    and the server is running 
| [Thursday 24 June 2010] [04:22:43] <sustrik>    REQ/REP sockets reuquire alternate sequence of sends & recvs
| [Thursday 24 June 2010] [04:22:58] <sustrik>    so with REQ send a request, the receveive a reply
| [Thursday 24 June 2010] [04:23:10] <sustrik>    with REP receiver a request, then send the reply
| [Thursday 24 June 2010] [04:23:23] <sustrik>    if you fail to do so you'll get the above error
| [Thursday 24 June 2010] [04:24:26] <travlr> yeah i see it now too. you need to use ZMQ_REQ in your client.
| [Thursday 24 June 2010] [04:24:36] <Efhache>    ok
| [Thursday 24 June 2010] [04:26:16] <Efhache>    I replace REP by REQ... now I've not error on the send() function. But a segfault on the recv.  I must rechange the context before received???
| [Thursday 24 June 2010] [04:26:40] <travlr> no but did you use ZMQ_REP in the server?
| [Thursday 24 June 2010] [04:27:53] <Efhache>    Yes
| [Thursday 24 June 2010] [04:28:15] <Efhache>    This code comes from the cookbook examples
| [Thursday 24 June 2010] [04:28:54] <travlr> yeah, it should work out of the box. do you want to post the server code to dpaste
| [Thursday 24 June 2010] [04:29:04] <Efhache>    ok
| [Thursday 24 June 2010] [04:29:38] <Efhache>    http://dpaste.com/hold/210915/
| [Thursday 24 June 2010] [04:30:40] <Efhache>    May be I'll study the code from the latency example
| [Thursday 24 June 2010] [04:32:15] <travlr> i don't know because it looks ok, but i may be over looking something
| [Thursday 24 June 2010] [04:33:19] <Efhache>    It's ok now
| [Thursday 24 June 2010] [04:33:27] <travlr> what was it?
| [Thursday 24 June 2010] [04:33:38] <Efhache>    I've foget the zmq_msg_init of my resultset variable
| [Thursday 24 June 2010] [04:34:13] <travlr> yes i see.. ok cool
| [Thursday 24 June 2010] [04:34:56] <Efhache>    thank's a lot for your help ;-)
| [Thursday 24 June 2010] [04:35:07] <travlr> sure
| [Thursday 24 June 2010] [04:35:26] <Efhache>    Just to be sure... with this example, I've just a P2P  connection between processes ?
| [Thursday 24 June 2010] [04:35:56] <Efhache>    If I'd like to make a communication between a process and two (or more) others
| [Thursday 24 June 2010] [04:36:07] <Efhache>    I need to create each time a endpoint ?
| [Thursday 24 June 2010] [04:36:15] <travlr> REQ/REP you can use multiple peers.
| [Thursday 24 June 2010] [04:37:08] <Efhache>    ok
| [Thursday 24 June 2010] [04:37:09] <travlr> just use connect to the socket multiple times for each client.. etc.
| [Thursday 24 June 2010] [04:37:45] <travlr> then it will load-balance in a round robin fashion.. i don't know if that's what you want
| [Thursday 24 June 2010] [04:38:10] <travlr> you may want PUB/SUB maybe..
| [Thursday 24 June 2010] [04:38:31] <travlr> or other
| [Thursday 24 June 2010] [04:43:17] <Efhache>    I've make a rapid test with two client and it seems that it works... but I'd be sure... how can I make in the server to have a specific message for each client
| [Thursday 24 June 2010] [04:43:49] <Efhache>    I can find in the server an id of the sender ?
| [Thursday 24 June 2010] [04:44:35] <travlr> i don't think so. try returning a specific message for each client.
| [Thursday 24 June 2010] [04:44:50] <travlr> for testing
| [Thursday 24 June 2010] [04:45:09] <Efhache>    ok
| [Thursday 24 June 2010] [04:48:23] <Efhache>    thank you  for your help
| [Thursday 24 June 2010] [04:48:29] <travlr> k
| [Thursday 24 June 2010] [04:53:33] <Efhache>    no chance... the server do not make automatically a difference between the senders... clients received all replies...
| [Thursday 24 June 2010] [05:00:28] <travlr> Efhache: From the zmq_socket doc: "Each request sent is load-balanced among all services, and each reply received is matched with the last issued request."
| [Thursday 24 June 2010] [05:52:16] <sustrik>    Efhache: what do you want to do?
| [Thursday 24 June 2010] [05:52:37] <sustrik>    if you want to reply to the requester use REQ/REP
| [Thursday 24 June 2010] [05:52:45] <sustrik>    if you want to send to all client use PUB/SUB
| [Thursday 24 June 2010] [07:00:38] <bavluo> While compiling/install the PyZMQ extension I am getting "zmq/_zmq.c: In function init_zmq: EMTHREAD undeclared (first use in this function)". I have cloned the latest ZMQ and PyZMQ for github
| [Thursday 24 June 2010] [08:02:37] <Umesh>  Is there a way to write distributed REP server in zeromq ...
| [Thursday 24 June 2010] [08:12:16] <sustrik>    yes, place a queue device in the middle
| [Thursday 24 June 2010] [08:26:48] <Umesh>  ok
| [Thursday 24 June 2010] [08:27:20] <Umesh>  but it will send a request to all the servers ... write ?
| [Thursday 24 June 2010] [08:27:35] <Umesh>  right ?
| [Thursday 24 June 2010] [08:28:17] <Umesh>  or it will load balance the traffic ?
| [Thursday 24 June 2010] [08:29:33] <sustrik>    load balance
| [Thursday 24 June 2010] [08:29:52] <sustrik>    REQ/REP always load balances
| [Thursday 24 June 2010] [08:30:03] <sustrik>    PUB/SUB always distributes the messages to everyone
| [Thursday 24 June 2010] [08:31:04] <Umesh>  just one question : I don't see any lb object in req.hpp 
| [Thursday 24 June 2010] [08:31:20] <Umesh>  its there in xreq.hpp
| [Thursday 24 June 2010] [08:31:57] <Umesh>  so it is like xreq only have laod balancing ...
| [Thursday 24 June 2010] [08:34:37] <Efhache>    travlr : I see only now your response... sorry... what happens if multi client send request, each of the clients received all the replies? right?
| [Thursday 24 June 2010] [08:35:38] <Efhache>    sustrik :  I'just want to make a lighted broker : when it received a message from one process it re-sent this message to all connected processes.
| [Thursday 24 June 2010] [08:36:16] <sustrik>    Umesh: it's there but it's written by hand
| [Thursday 24 June 2010] [08:36:35] <sustrik>    the code should be polished a bit so that REQ uses lb_t as well...
| [Thursday 24 June 2010] [08:37:23] <sustrik>    Efhache: such a thing already exists
| [Thursday 24 June 2010] [08:37:30] <sustrik>    use zmq_forwarder to do this
| [Thursday 24 June 2010] [08:38:07] <sustrik>    have a look at an example here: http://github.com/zeromq/zeromq-chat/blob/master/README
| [Thursday 24 June 2010] [08:38:08] <Efhache>    but the example code that I've used  seems to do it...
| [Thursday 24 June 2010] [08:38:47] <sustrik>    sure, if you want to implement it yourself, why not
| [Thursday 24 June 2010] [08:40:02] <Efhache>    witouht implemented it myself... the code from 2 hours ago seems do it... I've tested the "server" with two clients and the both have received the reply from servers
| [Thursday 24 June 2010] [08:40:19] <Efhache>    may be a "bug" of my code   or is it normal?
| [Thursday 24 June 2010] [08:40:45] <sustrik>    what code? sorry, i missed it
| [Thursday 24 June 2010] [08:41:06] <Umesh>  sustrik : code present in the devices/zmq_queue/zmq_queue.cpp ... can be straight away used as a queue in the middle right ?
| [Thursday 24 June 2010] [08:41:19] <sustrik>    Umesh: yes
| [Thursday 24 June 2010] [08:41:23] <Umesh>  ok
| [Thursday 24 June 2010] [08:41:39] <sustrik>    there's an executable generated for convenience sake: devices/zmq_queue
| [Thursday 24 June 2010] [08:42:13] <Umesh>  but it uses XREQ/XREP sockets  .... and my client server uses REQ/REP ...
| [Thursday 24 June 2010] [08:42:23] <Umesh>  then will it work with them ?
| [Thursday 24 June 2010] [08:42:27] <sustrik>    yes
| [Thursday 24 June 2010] [08:42:31] <Umesh>  ok
| [Thursday 24 June 2010] [08:54:18] <Efhache>    sustrik : it was a problem in my code... with a remanence in a string used for reply...
| [Thursday 24 June 2010] [08:54:43] <Efhache>    sustrik : have you an exemple of "broadcasting" ?
| [Thursday 24 June 2010] [08:56:12] <sustrik>    what about this one: http://github.com/zeromq/zeromq-chat
| [Thursday 24 June 2010] [08:56:56] <sustrik>    or this one: http://lwn.net/Articles/370307/ (Java vs. Python)
| [Thursday 24 June 2010] [08:57:37] <sustrik>    or this one: http://nichol.as/zeromq-an-introduction (Python)
| [Thursday 24 June 2010] [09:11:38] <Efhache>    sustrik : thank you... if I goof understand to make a sort of lighted broker. I will must creating two context. One for receiving and one tu publish (server part)   and for the clients one for sending and one for subscribing
| [Thursday 24 June 2010] [09:11:42] <Efhache>    is it right?
| [Thursday 24 June 2010] [09:12:33] <sustrik>    what are you trying to do, i still don't get it
| [Thursday 24 June 2010] [09:12:43] <sustrik>    can you describe the scenario?
| [Thursday 24 June 2010] [09:14:18] <Efhache>    OK...  one process who received messagre from two (or more) other process   and re-sent the receive message to all connected processes
| [Thursday 24 June 2010] [09:36:49] <Efhache>    in C language
| [Thursday 24 June 2010] [09:54:46] <sustrik>    what you need is a single context
| [Thursday 24 June 2010] [09:54:51] <sustrik>    one sub socket
| [Thursday 24 June 2010] [09:54:56] <sustrik>    and one pub
| [Thursday 24 June 2010] [09:54:58] <sustrik>    socket
| [Thursday 24 June 2010] [09:55:08] <sustrik>    get messages from sub socket
| [Thursday 24 June 2010] [09:55:16] <sustrik>    and send them to the pub socket
| [Thursday 24 June 2010] [09:55:26] <sustrik>    that's exactly what zmq_forwarder does
| [Thursday 24 June 2010] [10:01:20] <Efhache>    ok
| [Thursday 24 June 2010] [10:02:50] <Efhache>    sorry but it's a new concept for me...
| [Thursday 24 June 2010] [10:03:43] <Efhache>    have you an example in C ?
| [Thursday 24 June 2010] [10:05:23] <Efhache>    I can not find information about zmq_forwarder in the doc (man page)   just "comming soon"
| [Thursday 24 June 2010] [10:10:39] <Efhache>    But if I read the chat example (http://github.com/zeromq/zeromq-chat/blob/master/prompt.cpp) message do not come from the client... is it true? And the client can only receive from prompt...
| [Thursday 24 June 2010] [10:10:39] <sustrik>    http://github.com/zeromq/zeromq-chat
| [Thursday 24 June 2010] [10:11:30] <Efhache>    so I need to context no? one for sending message (from a client to prompt)  and an other for SUB
| [Thursday 24 June 2010] [10:11:31] <sustrik>    you can merge display and prompt into a single application if you want
| [Thursday 24 June 2010] [10:11:34] <Efhache>    no ?
| [Thursday 24 June 2010] [10:11:53] <sustrik>    nope you can open both sockets from the same context
| [Thursday 24 June 2010] [10:12:07] <sustrik>    forget about multiple context, you're never going to need it
| [Thursday 24 June 2010] [10:12:17] <sustrik>    unless you are doing very advanced stuff
| [Thursday 24 June 2010] [10:13:31] <Efhache>    I think so I do not understand the concept of "context"...  I'll read more documentation... sorry
| [Thursday 24 June 2010] [10:14:20] <sustrik>    context is a global state of the library
| [Thursday 24 June 2010] [10:14:27] <sustrik>    you need only one context
| [Thursday 24 June 2010] [10:15:30] <Efhache>    ok
| [Thursday 24 June 2010] [10:16:07] <Efhache>    absolute not link with a protocol or a specific socket
| [Thursday 24 June 2010] [12:50:16] Nick sztanphet is now known as sztanpet.
| [Thursday 24 June 2010] [13:54:07] Part kleppari has left this channel.
| [Thursday 24 June 2010] [20:32:58] Part jldupont has left this channel.
| [Thursday 24 June 2010] [20:52:03] Mode gibson.freenode.net gives CIA-17 permission to talk.
| 
| *** Logfile started
| *** on Fri Jun 25 00:49:18 2010
| 
| [Friday 25 June 2010] [00:49:18] Topic  The channel topic is "Welcome!".
| [Friday 25 June 2010] [00:49:18] Topic  The topic was set by dermoth!~dermoth@205.151.111.9 on 2010-02-05 16:34.
| [Friday 25 June 2010] [00:49:24] Mode   Channel modes: no messages from outside, topic protection
| [Friday 25 June 2010] [00:49:24] Created    This channel was created on 2010-02-05 10:44.
| [Friday 25 June 2010] [04:01:14] Nick   sztanphet is now known as sztanpet.
| [Friday 25 June 2010] [06:38:24] <vtl>  sustrik: hi!
| [Friday 25 June 2010] [06:38:54] <sustrik>  hi
| [Friday 25 June 2010] [06:39:24] <vtl>  sustrik: question: http://paste.lisp.org/display/111844
| [Friday 25 June 2010] [06:40:00] <sustrik>  errno is thread-local
| [Friday 25 June 2010] [06:40:18] <sustrik>  so you get err1
| [Friday 25 June 2010] [06:41:10] <vtl>  sustrik: cool, 10x! as i thought... we have different opinion with a guy who forked cl-zmq :)
| [Friday 25 June 2010] [06:41:37] <sustrik>  :)
| [Friday 25 June 2010] [06:41:43] <sustrik>  it's POSIX behaviour
| [Friday 25 June 2010] [06:41:46] <vtl>  yes
| [Friday 25 June 2010] [06:41:47] <sustrik>  let me find the doc
| [Friday 25 June 2010] [06:42:08] <vtl>  man errno, i think
| [Friday 25 June 2010] [06:43:11] <sustrik>  right
| [Friday 25 June 2010] [06:43:39] <sustrik>  it's ISO C
| [Friday 25 June 2010] [06:59:41] <vtl>  I think I understood... In managed environments (like lisp, python, java, .net) thread may be interrupted by runtime for garbage collecting. if GC calls libraries functions or syscalls, it may clobber this thread's errno. When such event happens in between zmq_foo() and zmq_errno(), then zmq_errno() will return wrong errno.
| [Friday 25 June 2010] [07:04:39] <sustrik>  right, that may happen
| [Friday 25 June 2010] [07:19:51] <sustrik>  vtl: thinking about it
| [Friday 25 June 2010] [07:20:13] <sustrik>  in theory, it would be possible to solve the problem in 0mq itself
| [Friday 25 June 2010] [07:20:25] <sustrik>  solve the errno into 0mq-own thread-local variable
| [Friday 25 June 2010] [07:20:33] <sustrik>  and return that one from zmq_errno
| [Friday 25 June 2010] [07:20:49] <vtl>  I think this in not worth trying
| [Friday 25 June 2010] [07:21:00] <vtl>  because other foreign libraries will fail in the same way :)
| [Friday 25 June 2010] [07:21:01] <sustrik>  do you have a better solution?
| [Friday 25 June 2010] [07:21:15] <sustrik>  yes, definitely
| [Friday 25 June 2010] [07:21:24] <sustrik>  how is this solved in cl?
| [Friday 25 June 2010] [07:21:58] <vtl>  this is generally not solved in cl. but one paricular commercial version of CL (this is Allegro) has workaround for it
| [Friday 25 June 2010] [07:22:18] <sustrik>  ok, isee
| [Friday 25 June 2010] [07:22:31] <vtl>  I think, it is possible to hack CFFI library to solve such kind of problems
| [Friday 25 June 2010] [07:22:48] <vtl>  of course, other languages still problematic in this place
| [Friday 25 June 2010] [07:34:10] <cremes>   sustrik: why not make errno a member/property of the context class?
| [Friday 25 June 2010] [07:34:29] <cremes>   the system errno could be copied into that member after each 0mq call
| [Friday 25 June 2010] [07:43:52] <sustrik>  cremes: a socket option
| [Friday 25 June 2010] [07:44:03] <sustrik>  same as with Berkeley sockets (SO_ERROR)
| [Friday 25 June 2010] [07:44:34] <sustrik>  yes, this sounds more sane than zmq_errno
| [Friday 25 June 2010] [07:44:40] <CIA-17>   zeromq2: 03Martin Hurton 07master * rfca2e8e 10/ (7 files): Add SWAP support - http://bit.ly/bRzKds
| [Friday 25 June 2010] [07:47:01] <cremes>   right, move it to the socket class (why would i suggest context? d'oh!)
| [Friday 25 June 2010] [07:50:54] <cremes>   though that's another api change/break
| [Friday 25 June 2010] [07:56:40] <sustrik>  cremes: right
| [Friday 25 June 2010] [07:56:54] <sustrik>  in theory it may be done in 2 steps
| [Friday 25 June 2010] [07:57:03] <sustrik>  1. add the error socket option
| [Friday 25 June 2010] [07:57:07] <sustrik>  2. remove zmq_errno
| [Friday 25 June 2010] [07:57:25] <sustrik>  the latter can be done when major version number is bumped
| [Friday 25 June 2010] [08:30:27] <jugg> sustrik: recent commit "devices exit in case of context termination" 11891d : src/forwarder.cpp lines 33 and 40, I believe are missing the necessary "rc = " assignment?
| [Friday 25 June 2010] [08:31:32] <jugg> hmm, same thing in src/streamer.cpp
| [Friday 25 June 2010] [08:32:07] <sustrik>  let me see
| [Friday 25 June 2010] [08:34:44] <sustrik>  oops
| [Friday 25 June 2010] [08:34:50] <sustrik>  let me correct it!
| [Friday 25 June 2010] [08:41:33] <jugg> Using C++ bindings, it seems that the only time one needs to do a msg.rebuild is before a send.   But between a send and a recv or between a recv and another recv this is not necessary, as it would appear the zmq_recv internals close a message then re-initializes it as needed.  Is this correct?
| [Friday 25 June 2010] [08:43:52] <jugg> (the same could be stated/asked for the C api, restating with message close/init pairing instead of the C++ message rebuild)
| [Friday 25 June 2010] [08:44:00] <sustrik>  ok, fixed
| [Friday 25 June 2010] [08:44:32] <sustrik>  jugg: yes
| [Friday 25 June 2010] [08:44:52] <sustrik>  the only use for rebuild is when you have a message as a member variable of a class
| [Friday 25 June 2010] [08:45:03] <sustrik>  then you want to say resize it
| [Friday 25 June 2010] [08:45:15] <sustrik>  you would have to destroy it and reinistantiate it
| [Friday 25 June 2010] [08:45:32] <sustrik>  but that's not possible becasue it's a member variable!
| [Friday 25 June 2010] [08:45:49] <sustrik>  so you would have to allocate it dynamically or something...
| [Friday 25 June 2010] [08:45:57] <sustrik>  instead, you can simply call rebuild
| [Friday 25 June 2010] [08:48:42] <jugg> ok, but whether you destroy or rebuild, this is only necessary if you want to send a message of a different size.  Anytime you want to recv a message, there is no reason to free the associated memory from previous use of the message... eg, the zmq internals aren't going to leak memory previously allocated for a message.
| [Friday 25 June 2010] [08:50:08] <jugg> I'm talking about the zmq_msg_t memory not an instantiated C++ message class.
| [Friday 25 June 2010] [08:55:26] <sustrik>  jugg: yes
| [Friday 25 June 2010] [08:55:31] <sustrik>  i think it's mentioned in the docs
| [Friday 25 June 2010] [08:55:34] <sustrik>  let me see...
| [Friday 25 June 2010] [08:55:54] <sustrik>  zmq_recv(3):
| [Friday 25 June 2010] [08:55:55] <sustrik>  Any content previously stored in msg
| [Friday 25 June 2010] [08:55:55] <sustrik>         shall be properly deallocated.
| [Friday 25 June 2010] [09:03:24] <jugg> *sigh* I get caught up reading/ walking through the code and forget about the documentation.  appologies.
| [Friday 25 June 2010] [09:04:29] <sustrik>  :)
| [Friday 25 June 2010] [09:28:45] <jugg> I have a setup where a SUB socket binds a TCP port on two different interfaces.  There are two PUB sockets that connect, one to each interface of the SUB socket.  I experienced an instance with this setup that messages quit flowing from one of the publishers to the subscriber while messages continued to flow from the other publisher.
| [Friday 25 June 2010] [09:28:48] <jugg> However there were no errors, or anything to indicate anything was wrong besides the fact the messages weren't flowing.  At the OS level, the TCP port for the "dead" connection was still active, with one in LISTEN state, and the other in ESTABLISHED for the SUB and PUB socket respectively.
| [Friday 25 June 2010] [09:29:04] <jugg> Restarting the publisher application restored communications.
| [Friday 25 June 2010] [09:30:37] <jugg> If this happens in the future, any suggestions on how to inspect what is going on?
| [Friday 25 June 2010] [09:33:18] <sustrik>  jugg: my guess would be that there's a loophole in fair queueing algorithm somewhere
| [Friday 25 June 2010] [09:33:55] <sustrik>  if there are messages available from both publshers SUB socket round robins between them
| [Friday 25 June 2010] [09:34:43] <sustrik>  what you describe looks like SUB erroneously believes one of the pipes has no messages
| [Friday 25 June 2010] [09:34:52] <sustrik>  (although it does)
| [Friday 25 June 2010] [09:35:03] <sustrik>  and doesn't include it into the round robit
| [Friday 25 June 2010] [09:35:06] <sustrik>  robin
| [Friday 25 June 2010] [09:35:35] <jugg> where should I be looking in the zmq code?
| [Friday 25 June 2010] [09:36:18] <sustrik>  ljugg: are use using zmq_poll or just zmq_recv?
| [Friday 25 June 2010] [09:37:17] <jugg> just zmq_recv
| [Friday 25 June 2010] [09:37:38] <sustrik>  then it's fq_t::recv
| [Friday 25 June 2010] [09:38:00] <sustrik>  fq.cpp:81
| [Friday 25 June 2010] [09:54:25] <jugg> change to topic for a moment, working through that code is going to take a bit...  on multi-part messages, are the parts stacked up on the sending side or the receiving side?
| [Friday 25 June 2010] [10:00:43] <sustrik>  jugg: both sides
| [Friday 25 June 2010] [10:00:58] <sustrik>  the rule is that they are stacked on the write side of the pipe
| [Friday 25 June 2010] [10:01:14] <sustrik>  one pipe being between sender thread and sender's I/O thread
| [Friday 25 June 2010] [10:01:32] <sustrik>  other one being between receiver's I/O thread and receiver thread itself
| [Friday 25 June 2010] [10:27:35] <jugg> ok, so before they reach the receivers I/O thread, they've been stacked up in the sender's I/O thread.  Then they are all sent to the receiver, and the receiver I/O thread stacks them up until they are all received before passing them off to the receiver thread, yes?
| [Friday 25 June 2010] [10:30:22] <sustrik>  yes
| [Friday 25 June 2010] [10:38:49] <jugg> ok, so why expose the multipart concept to the receiving side at all then?  Why not assemble it all into a single message for final delivery?  The above structure provides no benefit for reducing total transfer time, nor allowing the receiving end to work on parts of the messages as they come in, thus reducing total processing time.
| [Friday 25 June 2010] [10:39:06] <jugg> It seems to me that either the receiving side should just get a single message delivered to the receiver thread, or that it shouldn't be atomic.
| [Friday 25 June 2010] [10:41:42] <sustrik>  jugg: the goal here is to allow for some basic structure in the message content
| [Friday 25 June 2010] [10:42:11] <sustrik>  so if sender has say 3 big matrices in different places in memory
| [Friday 25 June 2010] [10:42:41] <sustrik>  he'll use multi-part message as a means to achieve zero-copy
| [Friday 25 June 2010] [10:43:07] <sustrik>  however, he still wants to tell the boundaries between matrices on the receiving side
| [Friday 25 June 2010] [10:43:40] <sustrik>  that's why boundaries between message parts are honoured
| [Friday 25 June 2010] [10:44:20] <sustrik>  0mq uses this mechanism under the cover btw to distinguish 0mq-specific data on the wire from the user data
| [Friday 25 June 2010] [10:48:34] <jugg> ok, that makes sense.  So, perhaps two alternate multi-part implementations feature requests then:  1. allow the sending side to send each part immediately, and only stack them on the receiving side I/O thread.  2. allow non atomic multi-part messaging.
| [Friday 25 June 2010] [10:49:59] <sustrik>  1. makes sense
| [Friday 25 June 2010] [10:50:12] <sustrik>  2. what would that be good for?
| [Friday 25 June 2010] [10:51:44] <jugg> 2. A REQ is made (ie SQL query) and the REP has multiple rows, if it was non atomic, then each row could be sent back and be operated on without waiting for the entire set to arrive.
| [Friday 25 June 2010] [10:52:02] <travlr>   my guess might be in a stream processing sense of individual message parts.
| [Friday 25 June 2010] [10:52:19] <travlr>   yeah, what he said :)
| [Friday 25 June 2010] [10:53:02] <jugg> Another use is a REQ is made, and something more intensive like, a file set - a bunch of images - is returned.  These images need to be resized.  There is no reason to wait for the entire set to arrive.
| [Friday 25 June 2010] [10:58:08] <sustrik>  jugg: i would say each image (or row) is a separate message in these scenarios
| [Friday 25 June 2010] [10:58:29] <sustrik>  the rationale is that all the elements in the set are of the same type
| [Friday 25 June 2010] [10:58:46] <sustrik>  and thus eligible for parallelised processing or similar
| [Friday 25 June 2010] [10:59:10] <sustrik>  message parts make sense where there are different elements concatenated into a single message
| [Friday 25 June 2010] [10:59:20] <sustrik>  for example 0mq-routing-data + user-data
| [Friday 25 June 2010] [10:59:43] <travlr>   or a topic + user-data
| [Friday 25 June 2010] [10:59:46] <sustrik>  yes
| [Friday 25 June 2010] [11:00:01] <sustrik>  different semantics is the key here
| [Friday 25 June 2010] [11:00:26] <sustrik>  from this point of view atomicity makes perfect sense
| [Friday 25 June 2010] [11:00:42] <sustrik>  it doesn't make sense to deliver just the routing data
| [Friday 25 June 2010] [11:00:48] <sustrik>  or a topic
| [Friday 25 June 2010] [11:01:04] <sustrik>  and say load-balance the user-content somewhere else
| [Friday 25 June 2010] [11:02:17] <travlr>   seeing the big picture along with the  nuances is important for the various concepts in 0mq, huh.
| [Friday 25 June 2010] [11:02:43] <sustrik>  yes, this kind of thing is missing from docs :(
| [Friday 25 June 2010] [11:02:53] <sustrik>  but anyway, i have no idea where it shouldb e put
| [Friday 25 June 2010] [11:03:10] <travlr>   i want to help with docs in the near future
| [Friday 25 June 2010] [11:03:30] <travlr>   i'm still studying it all though for now
| [Friday 25 June 2010] [11:03:30] <sustrik>  do you have idea what exactly would you like to do?
| [Friday 25 June 2010] [11:03:51] <travlr>   docs?
| [Friday 25 June 2010] [11:04:00] <sustrik>  yes
| [Friday 25 June 2010] [11:04:07] <sustrik>  I liked Nicholas' blog yesterday
| [Friday 25 June 2010] [11:04:12] <travlr>   yes
| [Friday 25 June 2010] [11:04:15] <sustrik>  it seems this kind of stuff is highly needed
| [Friday 25 June 2010] [11:04:17] <travlr>   very much
| [Friday 25 June 2010] [11:04:35] <travlr>   along the same vain martin
| [Friday 25 June 2010] [11:04:42] <travlr>   s/vain/vane
| [Friday 25 June 2010] [11:05:42] <travlr>   first i want to understand 0mq inside out, which is what i'm working on atm
| [Friday 25 June 2010] [11:05:50] <jugg> sustrik: I understand that, however, I think the SQL example (whether the results are images or something else) has its use case as well.  The client knows that it wants an entire set of data, it doesn't know what comprises that set of data, and so it can't ask for each part individually.
| [Friday 25 June 2010] [11:06:00] <jugg> But it makes sense from an efficiency stand point to break the set of data into individual parts for transmission and processing.  Certainly the smarts could be layered ontop of 0MQ for getting each part individually, but greatly simplifies things by having 0MQ support this natively.
| [Friday 25 June 2010] [11:06:53] <sustrik>  jugg: understood
| [Friday 25 June 2010] [11:07:03] <sustrik>  what you have in mind is some kind of "terminator" message
| [Friday 25 June 2010] [11:07:20] <sustrik>  a message that says "this is the end of a message group"
| [Friday 25 June 2010] [11:08:10] <sustrik>  however, my feeling is that this kind of feature should be layered on top of 0MQ
| [Friday 25 June 2010] [11:08:14] <jugg> Well, what I want is a single REQ message to be able to receive multiple REP messages - whatever that looks like.
| [Friday 25 June 2010] [11:08:54] <jugg> the way multipart messaging works at the API level works for this very well.  It is just the implementation that does not.
| [Friday 25 June 2010] [11:09:29] <sustrik>  ok, i see
| [Friday 25 June 2010] [11:10:07] <sustrik>  the scenario makes sense
| [Friday 25 June 2010] [11:10:17] <sustrik>  the implications are non trivial
| [Friday 25 June 2010] [11:10:41] <sustrik>  if server X1 sends a first row, then halts for an hour
| [Friday 25 June 2010] [11:10:48] <sustrik>  the client would read the first low
| [Friday 25 June 2010] [11:10:56] <sustrik>  then halt waiting for and hour
| [Friday 25 June 2010] [11:11:12] <sustrik>  although there may be other resultssets available from server X2
| [Friday 25 June 2010] [11:11:26] <sustrik>  this cannot happen with simple REQ socket
| [Friday 25 June 2010] [11:11:32] <sustrik>  but it can happen with XREQ
| [Friday 25 June 2010] [11:11:43] <sustrik>  it's complex stuff, lot of space to experiment
| [Friday 25 June 2010] [11:12:36] <jugg> I'm not sure what you meant be other result sets...  subsequent REQ can't be made until the REP is satisfied... this is no different than the current REQ/REP behavior... if I send a REQ, it waits an indefinite time for a REP.
| [Friday 25 June 2010] [11:12:56] <sustrik>  the problem is that there may be a queue in the middle
| [Friday 25 June 2010] [11:13:12] <sustrik>  the queue has to be able to process multiple requsts at the same time
| [Friday 25 June 2010] [11:13:22] <sustrik>  otherwise it would work in lock-step fashion
| [Friday 25 June 2010] [11:13:28] <sustrik>  and the scalability would go soutg
| [Friday 25 June 2010] [11:13:31] <sustrik>  south
| [Friday 25 June 2010] [11:14:13] <sustrik>  so the queue (composed on XREQ and XREP socket) would have to work on message-part-scale
| [Friday 25 June 2010] [11:14:28] <sustrik>  which is doable, but not the state of affairs right now
| [Friday 25 June 2010] [11:14:41] <sustrik>  if you are interested in the topic feel free to propose a solution
| [Friday 25 June 2010] [11:15:51] <jugg> I guess from my no-understanding of the internals, looking at it from the point of view that multi-part messaging exists and works, then only (and maybe this is the sticking point) is to make the multi-parts non stacking on either end.
| [Friday 25 June 2010] [11:16:19] <jugg> "then only" => "the only change"
| [Friday 25 June 2010] [11:17:10] <sustrik>  the main problem is in the middle
| [Friday 25 June 2010] [11:17:49] <sustrik>  how would you achieve that queue isn't stuck when there's a half-sent mutli-part message being processed
| [Friday 25 June 2010] [11:17:57] <sustrik>  and the sender dies without terminating it?
| [Friday 25 June 2010] [11:18:31] <sustrik>  also, you need fairness guarantees, so the queue cannot process very long recordset in a single go
| [Friday 25 June 2010] [11:18:42] <jugg> You've mentioned this "middle queues" before, I'm still at a loss on them and what they are... :/
| [Friday 25 June 2010] [11:18:58] <sustrik>  instead it has to assign it a timeslice, process part of it, then move to another clients etc.
| [Friday 25 June 2010] [11:19:11] <sustrik>  "queue device"
| [Friday 25 June 2010] [11:19:41] <sustrik>  it's a component both requesters and repliers can connect to
| [Friday 25 June 2010] [11:19:54] <sustrik>  it then load balances the requests and routes the replies back
| [Friday 25 June 2010] [11:20:11] <sustrik>  see queue.cpp
| [Friday 25 June 2010] [11:36:21] <travlr>   sustrik: stuff like your previous conversation need to go in faq or clarified elsewhere etc. 
| [Friday 25 June 2010] [11:36:39] <travlr>   i'll be scrubbing the irc and mail list eventually
| [Friday 25 June 2010] [11:36:52] <sustrik>  you mean the message part stuff?
| [Friday 25 June 2010] [11:37:04] <travlr>   well anything with nuance
| [Friday 25 June 2010] [11:37:31] <sustrik>  the question is what should go to FAQ, what should go to docs and what should go elsewhere
| [Friday 25 June 2010] [11:38:03] <sustrik>  stacking the technical info into FAQ is probably not the best solution possible
| [Friday 25 June 2010] [11:38:26] <travlr>   i'm just saying that i'll keep in mind these issues as i go and will help any way i can with stuff like docs
| [Friday 25 June 2010] [11:38:52] <sustrik>  yes, i'm just thinking out aloud
| [Friday 25 June 2010] [11:39:43] <sustrik>  maybe there's some kind of "ideology" document missing
| [Friday 25 June 2010] [11:39:56] <travlr>   thats true for all of foss
| [Friday 25 June 2010] [11:40:01] <sustrik>  i.e. not the strict technical reference
| [Friday 25 June 2010] [11:40:19] <sustrik>  but some talk about what are individual features intended for
| [Friday 25 June 2010] [11:40:25] <jugg> sustrik: what happens with the current multipart if the sender dies while the I/O thread is sending out the messages?  Same problem, no?
| [Friday 25 June 2010] [11:40:29] <sustrik>  and why they are designed in the way they are etc.
| [Friday 25 June 2010] [11:40:38] <travlr>   sustrik: we'll have a conversation about this soon
| [Friday 25 June 2010] [11:40:49] <travlr>   and i'll go to town
| [Friday 25 June 2010] [11:41:18] <sustrik>  jugg: no, the incomplete messages are rolled back in that case
| [Friday 25 June 2010] [11:41:37] <sustrik>  trvlr: ok
| [Friday 25 June 2010] [11:48:10] <jugg> sustrik: Could the internals track whether the final message in a non atomic multipart message has been received, and if it has not, then the recv function return an error if the internals detect a disconnect of the sender?  Failing such a possibility, I'd say if the only thing hindering this capability are intermediate queues, then document the risk and recommend not using them for this particular usage.
| [Friday 25 June 2010] [11:50:11] <jugg> I haven't really understood why these "devices" are part of the core implementation anyway, they do not require access (afaict) to the internals of 0MQ, and could be implemented as stand alone applications/libraries, or even just example code.
| [Friday 25 June 2010] [11:53:41] <sustrik>  jugg: yes, right now the implementation of devices is pretty trivial
| [Friday 25 June 2010] [11:53:59] <sustrik>  in the future it's going to be more tightly integrated with the core
| [Friday 25 June 2010] [11:54:59] <sustrik>  as for the usage of deivces have a look here: http://www.zeromq.org/blog:multithreaded-server
| [Friday 25 June 2010] [11:55:19] <sustrik>  that's pretty straightforward usage of queue device
| [Friday 25 June 2010] [11:56:06] <sustrik>  with that in mind, try to put down your non-atomic multi-part messages idea into email and send it to the mailing list
| [Friday 25 June 2010] [11:56:31] <sustrik>  it would be good to see some discussion on the topic
| [Friday 25 June 2010] [11:59:05] <sustrik>  btw, i would suggest to name these "stream messages"; it's shorter that "non-atomic multi-part messages"
| [Friday 25 June 2010] [12:07:36] <jugg> sustrik: will do
| [Friday 25 June 2010] [12:08:58] <jugg> thanks for working through all of that.  I need to go back and dig into that possible fair queue issue now.
| [Friday 25 June 2010] [12:09:58] <sustrik>  you are welcome
| [Friday 25 June 2010] [12:35:50] <CIA-17>   zeromq2: 03Pieter Hintjens 07master * r1dda8a2 10/ src/msg_store.cpp : Used more expressive variable names - http://bit.ly/aynV9A
| [Friday 25 June 2010] [21:24:07] <zedas>    sustrik: question about zmq_poll:  it uses epoll if available right?  is there more you need to do?
| [Friday 25 June 2010] [21:29:45] <zedas>    sustrik: ahhh, zmq_poll system checks the rlimit and restricts available open fds to that.  i'll look at doing the same.
| [Saturday 26 June 2010] [02:23:32] <sustrik>    zedas: hi
| [Saturday 26 June 2010] [02:23:39] <sustrik>    what code are you looking at?
| [Saturday 26 June 2010] [02:23:50] <sustrik>    at the moment zmq_poll translates to standard poll
| [Saturday 26 June 2010] [02:24:20] <sustrik>    calling epoll makes not sense unless 0mq's zmq_poll API changes in the corresponding way
| [Saturday 26 June 2010] [02:25:05] <sustrik>    (registering fds separated from polling etc.)
| [Saturday 26 June 2010] [02:35:06] <zedas>  sustrik: i was looking at the poll.cpp and others.
| [Saturday 26 June 2010] [02:35:20] <zedas>  so i was under the impression that zmq_poll abstracts poll/epoll/kqueue.
| [Saturday 26 June 2010] [02:35:25] <zedas>  at least that's how the docs read.
| [Saturday 26 June 2010] [02:35:28] <zedas>  that not true?
| [Saturday 26 June 2010] [02:35:41] <sustrik>    the polling is done at 2 places
| [Saturday 26 June 2010] [02:35:56] <sustrik>    I/O threads from the thread pool are polling using epoll/whatever
| [Saturday 26 June 2010] [02:36:14] <sustrik>    meaning that if one 0MQ socket manages 100,000 TCP connections
| [Saturday 26 June 2010] [02:36:30] <sustrik>    these are looked for by epoll-based mechanism (on Linux at least)
| [Saturday 26 June 2010] [02:36:41] <sustrik>    then there's user polling (zmq_poll)
| [Saturday 26 June 2010] [02:36:56] <sustrik>    this at the moment translates to POSIX poll
| [Saturday 26 June 2010] [02:37:13] <sustrik>    however, i wouldn't expect anyone to use large amount of 0mq sockets
| [Saturday 26 June 2010] [02:37:46] <sustrik>    the only problem is if user wants to poll on couple of 0mq sockets + large amount of system sockets
| [Saturday 26 June 2010] [02:37:51] <sustrik>    is that your case?
| [Saturday 26 June 2010] [02:39:42] <zedas>  probably.  it's in mongrel2
| [Saturday 26 June 2010] [02:39:59] <zedas>  it craps out at 1024 sockets, which i haven't investigated yet, but even poll should handle that
| [Saturday 26 June 2010] [02:40:27] <zedas>  so, if you have these abstractions on epoll, kqueue, devpoll, and poll, why not have zmq_poll use them?
| [Saturday 26 June 2010] [02:40:46] <sustrik>    epoll reuires different API
| [Saturday 26 June 2010] [02:40:51] <sustrik>    otherwise it's of no use
| [Saturday 26 June 2010] [02:41:21] <sustrik>    the performance boost is related to registering the fds separately from polling as such
| [Saturday 26 June 2010] [02:42:15] <sustrik>    current zmq_poll is only a dumb copy of POSIX poll
| [Saturday 26 June 2010] [02:42:47] <sustrik>    there have been some discussion on alternate API but it never got into implementation phase
| [Saturday 26 June 2010] [02:43:52] <zedas>  well, plenty of libraries have given a consistent api to all the different event mechanisms
| [Saturday 26 June 2010] [02:44:03] <zedas>  it's not like this is anything new, even if they have different apis.
| [Saturday 26 June 2010] [02:44:27] <zedas>  looking at the code, it looks like you have the basis for the abstraction, probably just needs to be pulled into zmq_poll and used
| [Saturday 26 June 2010] [02:44:33] <zedas>  i may look at doing that in the near future.
| [Saturday 26 June 2010] [02:44:50] <sustrik>    that would be nice
| [Saturday 26 June 2010] [02:44:58] <zedas>  that and get rid of this #ifdef, the loop that seems to no be needed, etc.
| [Saturday 26 June 2010] [02:45:15] <sustrik>    what loop?
| [Saturday 26 June 2010] [02:46:11] <zedas>  the double nested while(true)
| [Saturday 26 June 2010] [02:46:26] <zedas>  haven't seen a poll loop implemented that way, so i'm assuming there's something odd there
| [Saturday 26 June 2010] [02:47:41] <zedas>  yeah i think i could clean this up and make it use the abstractions you've got
| [Saturday 26 June 2010] [02:47:57] <zedas>  or at least make it use epoll if that's available.
| [Saturday 26 June 2010] [02:48:25] <zedas>  hehe hell i could just write a zmq_epoll and zmq_kqueue and leave it to the developer :-)
| [Saturday 26 June 2010] [02:48:38] <zedas>  but that'd be me, so i want zmq_poll to do whatever works best
| [Saturday 26 June 2010] [02:48:40] <sustrik>    yes, that's the option
| [Saturday 26 June 2010] [02:48:59] <sustrik>    the obvious problem is that there's no POSIX standard fro epoll-style polling
| [Saturday 26 June 2010] [02:49:24] <sustrik>    kqueue seems to be most neat, but still it's hard to decide on actual API
| [Saturday 26 June 2010] [02:49:41] <sustrik>    try posting your new API to the mailing list first to see what others have to say about it
| [Saturday 26 June 2010] [02:51:48] <zedas>  i'll give it a shot when i get to that part.  right after i find out why it craps out at 1024 fds
| [Saturday 26 June 2010] [02:52:04] <sustrik>    ack
| [Saturday 26 June 2010] [02:52:11] <zedas>  with poll it shouldn't do that but it does.  which means people will perf test it and then bitch that i'm using select
| [Saturday 26 June 2010] [02:52:54] <zedas>  well not an issue now, just gonna drive me crazy later :-)
| [Saturday 26 June 2010] [02:53:10] <sustrik>    ok, good luck for now
| [Saturday 26 June 2010] [02:55:20] <zedas>  yeah so far it's working great.
| [Saturday 26 June 2010] [02:55:43] <zedas>  i've got the tasks working flawlessly with sockets or 0mq
| [Saturday 26 June 2010] [02:58:06] <sustrik>    glad to hear that!
| 
| *** Logfile started
| *** on Mon Jul 12 14:57:25 2010
| 
| [Tuesday 01 June 2010] [00:51:40] <jugg>    whereas s.connect("tcp://localhost:15555"); and s.connect("tcp://127.0.0.1:15555"); both work fine, but s.connect("tcp://lo:15555"); fails with "Invalid argument".
| [Tuesday 01 June 2010] [00:53:34] <jugg>    any combination of the successful bind/connect allow messages to flow just fine. (eg. bind - lo, connect - localhost)
| [Tuesday 01 June 2010] [00:54:41] <jugg>    any idea why binding 'localhost' fails, and connecting 'lo' fails?
| [Tuesday 01 June 2010] [03:38:33] <sustrik> jugg: you can bind only to local NIC
| [Tuesday 01 June 2010] [03:38:47] <sustrik> "localhost" is a hostname not NIC name
| [Tuesday 01 June 2010] [03:38:50] <sustrik> use "lo"
| [Tuesday 01 June 2010] [03:38:56] <sustrik> "eth0" and alike
| [Tuesday 01 June 2010] [03:39:22] <sustrik> (on linux)
| [Tuesday 01 June 2010] [03:53:00] <jugg>    sustrik: it must also accept local ip addresses.  And since the zmq layer already can resolve hostnames, it would be a convience to have it do so here as well.
| [Tuesday 01 June 2010] [03:55:01] <sustrik> the problem is that there's no hint to distinguish between nic names and hostnames
| [Tuesday 01 June 2010] [03:57:19] <jugg>    a simple if fail then try scheme could be used
| [Tuesday 01 June 2010] [03:58:12] <sustrik> yup, we've thought of that
| [Tuesday 01 June 2010] [03:58:39] <sustrik> presumably, resolve nic name first, hostname if it fails
| [Tuesday 01 June 2010] [03:59:06] <sustrik> obviously, it would mean that nic name can then overshadow a remote host
| [Tuesday 01 June 2010] [03:59:26] <jugg>    yes, although I might think to have a hardcoded check for 'localhost' first.
| [Tuesday 01 June 2010] [04:00:10] <sustrik> it's up to OS to resolve names, 0mq should not mess with that imho
| [Tuesday 01 June 2010] [04:02:07] <jugg>    certainly.  I was saying that if the device is 'localhost' then just skip nic name lookup (being that localhost is quite the common case).
| [Tuesday 01 June 2010] [04:03:18] <sustrik> my point was that "localhost" is just a name a should thus be resolved by OS
| [Tuesday 01 June 2010] [04:08:26] <jugg>    anyway, I assume that trying to connect to a nic name is nonsensical, which is why s.connect("tcp://lo:15555") fails?  It certainly is an odd error message however "invalid arguement", now that I've played with it "invalid argument" is the error message for any bogus hostname.  Not very helpful.
| [Tuesday 01 June 2010] [04:18:52] <jugg>    all of this mucking around is because I got off track while trying to debug odd observed behavior with zmq resulting from the socket type and transport combination.  eg pub/sub works fine with tcp:, but often fails with ipc:
| [Tuesday 01 June 2010] [04:19:51] <jugg>    I haven't isolated it yet, so I can't give a useful bug report (if any).
| [Tuesday 01 June 2010] [04:27:15] <sustrik> interesting
| [Tuesday 01 June 2010] [04:27:26] <sustrik> the code is same for tcp and ipc
| [Tuesday 01 June 2010] [04:27:39] <sustrik> can you at least say what kind of error are you seeing?
| [Tuesday 01 June 2010] [04:38:40] <jugg>    well, it could still yet be very much user error, but it appeared that subscriptions were not taking affect, and in several instances, I would get an error about the ipc: address having some problem (the exact error messages are out of my scrollback).  Yet, those error message seemed to go away if I changed the socket type.  And when using tcp: I've never seen either of those issues.
| [Tuesday 01 June 2010] [04:49:00] <sustrik> ok, i see
| [Tuesday 01 June 2010] [04:49:10] <sustrik> if it ever happens again please do report the problem
| [Tuesday 01 June 2010] [05:39:19] <jugg>    hmm, I thought publications got into the bit bucket if the endpont doesn't exist.  This is the case if the publisher is the one that binds the socket, but if it is the subscriber that binds the socket, then the publisher queues up all of its messages.  Is this expected?  And if so, why the change in behavior depending on which socket type binds/connects?
| [Tuesday 01 June 2010] [05:53:32] <sustrik> PUB/SUB messaging pattern is like a radio tranmission; if you are not listining to the broadcast you won't be able to catch up later on
| [Tuesday 01 June 2010] [07:39:38] <jugg>    yes, so why is the publisher queuing up the messages?
| [Tuesday 01 June 2010] [07:46:04] <sustrik> jugg: the queueing is built in so that messages are not dropped all the time because of random traffic peaks
| [Tuesday 01 June 2010] [07:46:20] <sustrik> if you set HWM socket option on your publisher
| [Tuesday 01 June 2010] [07:46:26] <sustrik> you'll limit the size of the queue
| [Tuesday 01 June 2010] [07:46:50] <sustrik> once the max number of messages in the queue is reached, publisher will start dropping them
| [Tuesday 01 June 2010] [07:47:25] <jugg>    yes, so why does this queuing only occur if the publisher connects?  It doesn't occur if the publisher binds.
| [Tuesday 01 June 2010] [07:48:16] <sustrik> when you bind, there's no queue created at that moment
| [Tuesday 01 June 2010] [07:48:30] <sustrik> you don't know how many peers will connect in the future
| [Tuesday 01 June 2010] [07:48:44] <sustrik> and thus you cannot create appropriate number of queues
| [Tuesday 01 June 2010] [07:49:07] <sustrik> when you connect you need only one queue, so it's created immediately
| [Tuesday 01 June 2010] [07:49:44] <sustrik> the code can be changed so that 'connect' queue is created only when connecting to the peer succeeds
| [Tuesday 01 June 2010] [07:50:03] <sustrik> but i am not sure what advantage we would get from that
| [Tuesday 01 June 2010] [07:50:10] <jugg>    consistency?
| [Tuesday 01 June 2010] [07:50:18] <sustrik> sure
| [Tuesday 01 June 2010] [07:50:24] <jugg>    otherwise this needs documented.
| [Tuesday 01 June 2010] [07:50:42] <sustrik> well, the documentation is "messages can be dropped"
| [Tuesday 01 June 2010] [07:50:59] <sustrik> when exactly they are dropped is implemetation detail
| [Tuesday 01 June 2010] [07:51:09] <jugg>    eh
| [Tuesday 01 June 2010] [09:41:10] <jugg>    in a pub/sub configuration, it would appear that the only way to have multiple subscribers is if the pub socket is the one that binds the endpoint.  In the case where a subscriber binds the endpoint, and the publisher connects, then other subscribers that connect do not receive publications.  I'd expect that either all connecting subscribers receive the publications, or that it is not possible for other subscribers to successfully connect.
| [Tuesday 01 June 2010] [09:43:45] <sustrik> jugg: sorry, i've missed the point
| [Tuesday 01 June 2010] [09:43:55] <sustrik> can you say it in more simple way
| [Tuesday 01 June 2010] [09:43:57] <sustrik> ?
| [Tuesday 01 June 2010] [09:44:24] <jugg>    a subscriber binds an endpoint
| [Tuesday 01 June 2010] [09:44:29] <jugg>    a publisher connects to the endpoint
| [Tuesday 01 June 2010] [09:44:32] <jugg>    everything is happy
| [Tuesday 01 June 2010] [09:44:38] <jugg>    more subscribers connect to the endpoint
| [Tuesday 01 June 2010] [09:44:48] <jugg>    these subscribers do not receive publications
| [Tuesday 01 June 2010] [09:45:10] <sustrik> subscribers connect to the subscriber endpoint?
| [Tuesday 01 June 2010] [09:45:17] <jugg>    yes
| [Tuesday 01 June 2010] [09:45:34] <sustrik> SUB socket is not compatible with another SUB socket
| [Tuesday 01 June 2010] [09:45:41] <sustrik> see zmq_socket(3)
| [Tuesday 01 June 2010] [09:45:54] <sustrik> SUB must speak to PUB and vice versa
| [Tuesday 01 June 2010] [09:46:19] <sustrik> what are you trying to do?
| [Tuesday 01 June 2010] [09:46:57] <jugg>    which is why I'd expect the subsequent connects to fail.
| [Tuesday 01 June 2010] [09:47:12] <sustrik> yes, they should
| [Tuesday 01 June 2010] [09:47:19] <sustrik> but the connect is async
| [Tuesday 01 June 2010] [09:47:28] <sustrik> so the error should be delivered asynchronously
| [Tuesday 01 June 2010] [09:47:36] <sustrik> we need an error queue for that
| [Tuesday 01 June 2010] [09:47:44] <sustrik> TODO
| [Tuesday 01 June 2010] [09:47:54] <jugg>    I see
| [Tuesday 01 June 2010] [09:55:19] <jugg>    So if the subscriber binds the endpoint, it is essentially stating that this is a private subscription, multiple publishers can publish to this private subscription.  Multiple subscribe message filters may be used by the subscriber if desired.
| [Tuesday 01 June 2010] [09:56:03] <jugg>    If a publisher binds an endpoint, then many subscribers may connect to this endpoint.  But a subscriber can only receive messages from a single publisher in this case.
| [Tuesday 01 June 2010] [09:56:22] <sustrik> i would say it's symmetric
| [Tuesday 01 June 2010] [09:56:35] <sustrik> consider you can connect the same socket multiple times
| [Tuesday 01 June 2010] [09:56:43] <sustrik> so, for example:
| [Tuesday 01 June 2010] [09:56:59] <sustrik> pub.bind (A)
| [Tuesday 01 June 2010] [09:57:08] <sustrik> sub1.connect (A)
| [Tuesday 01 June 2010] [09:57:15] <sustrik> sub2.connect (A)
| [Tuesday 01 June 2010] [09:57:20] <sustrik> is equivalent to:
| [Tuesday 01 June 2010] [09:57:26] <sustrik> sub1.bind (A)
| [Tuesday 01 June 2010] [09:57:30] <sustrik> sub2.bind (B)
| [Tuesday 01 June 2010] [09:57:33] <sustrik> pub.connect (A)
| [Tuesday 01 June 2010] [09:57:38] <sustrik> pub.connect (B)
| [Tuesday 01 June 2010] [09:58:10] <sustrik> resulting connection diagram looks the same in both cases
| [Tuesday 01 June 2010] [10:00:40] <jugg>    clear enough, thanks.
| [Tuesday 01 June 2010] [10:02:49] <sustrik> you are welcome
| [Tuesday 01 June 2010] [11:56:25] <jugg>    quoting http://www.zeromq.org/blog:road "we designed a minimalist wire protocol which can be described in a couple of paragraphs"  Are those paragraphs available?
| [Tuesday 01 June 2010] [14:58:27] <cremes>  is it expected behavior that zmq_term() has an assertion failure unless all sockets in the context are closed first?
| [Tuesday 01 June 2010] [14:59:24] <cremes>  this is against 2.0.6 release
| [Tuesday 01 June 2010] [15:44:00] <mato>    cremes: no, that would be a bug
| [Tuesday 01 June 2010] [15:44:27] <mato>    cremes: however, that code has changed on master, so i suggest you re-test there
| [Tuesday 01 June 2010] [15:44:36] <cremes>  all right... i'll test on master in a bit
| [Tuesday 01 June 2010] [15:50:00] <CIA-17>  zeromq2: 03Martin Lucina 07master * r74a03df 10/ (AUTHORS foreign/xmlParser/xmlParser.cpp): Merge branch 'master' of github.com:sustrik/zeromq2 - http://bit.ly/9cipXX
| [Tuesday 01 June 2010] [16:20:08] <mato>    cremes: since you asked about zmq_term()... I'm updating the docs for 2.0.7.
| [Tuesday 01 June 2010] [16:20:21] <mato>    cremes: could you comment if the following is clear: ?
| [Tuesday 01 June 2010] [16:20:28] <mato>           The zmq_term() function terminates the 0MQ context context.
| [Tuesday 01 June 2010] [16:20:28] <mato>           If there are no longer any sockets open within context at the time zmq_term() is
| [Tuesday 01 June 2010] [16:20:31] <mato>           called then context shall be shut down and all associated resources shall be
| [Tuesday 01 June 2010] [16:20:33] <cremes>  ok; i'm compiling master now so i can see if i am still getting on behavior
| [Tuesday 01 June 2010] [16:20:34] <mato>           released immediately.
| [Tuesday 01 June 2010] [16:20:37] <mato>           Otherwise, the following applies:
| [Tuesday 01 June 2010] [16:20:39] <mato>              The zmq_term() function shall return immediately.
| [Tuesday 01 June 2010] [16:20:42] <mato>              Any blocking operations currently in progress on sockets open within context
| [Tuesday 01 June 2010] [16:20:45] <mato>               shall return immediately with an error code of ETERM.
| [Tuesday 01 June 2010] [16:20:47] <mato>              With the exception of zmq_close(), any further operations on sockets open
| [Tuesday 01 June 2010] [16:20:50] <mato>               within context shall fail with an error code of ETERM.
| [Tuesday 01 June 2010] [16:20:53] <mato>              The actual shutdown of context, and release of any associated resources,
| [Tuesday 01 June 2010] [16:20:56] <mato>               shall be delayed until the last socket within it is closed with zmq_close().
| [Tuesday 01 June 2010] [16:21:11] <mato>    cremes: thx, but read the above, since that's the behaviour on master
| [Tuesday 01 June 2010] [16:21:30] <mato>    cremes: is my description clear enough?
| [Tuesday 01 June 2010] [16:21:38] <cremes>  it makes perfect sense; it is very clear
| [Tuesday 01 June 2010] [16:21:42] <mato>    great, thanks
| [Tuesday 01 June 2010] [16:23:15] <CIA-17>  zeromq2: 03Martin Lucina 07master * r8ba1d3c 10/ (6 files): Documentation: zmq_term() and ETERM for 2.0.7 - http://bit.ly/cd4hIx
| [Tuesday 01 June 2010] [16:23:16] <CIA-17>  zeromq2: 03Martin Lucina 07master * r9d00d30 10/ doc/zmq_init.txt : Documentation: zmq_init() API changes for 2.0.7 - http://bit.ly/bhbjsl
| [Tuesday 01 June 2010] [16:28:09] <versificateur>   hello everyone!
| [Tuesday 01 June 2010] [16:28:54] <versificateur>   i'm back to ask for some help aagin.. :)
| [Tuesday 01 June 2010] [16:30:21] <versificateur>   i've some difficulties to run (compile) the c++ server code i wrote based on zmq blog examples
| [Tuesday 01 June 2010] [16:31:24] <versificateur>   I got the following error: Package libzmq was not found in the pkg-config search path.
| [Tuesday 01 June 2010] [16:32:28] <cremes>  versificateur: please pastie the whole error including the command you used
| [Tuesday 01 June 2010] [16:34:55] <versificateur>   g++ `pkg-config --libs --cflags libzmq` -o server server.cpp Package libzmq was not found in the pkg-config search path. Perhaps you should add the directory containing `libzmq.pc' to the PKG_CONFIG_PATH environment variable 
| [Tuesday 01 June 2010] [16:35:00] <versificateur>   oops
| [Tuesday 01 June 2010] [16:35:18] <versificateur>    g++ `pkg-config --libs --cflags libzmq` -o server server.cpp
| [Tuesday 01 June 2010] [16:35:29] <versificateur>   Package libzmq was not found in the pkg-config search path.
| [Tuesday 01 June 2010] [16:35:38] <versificateur>   Perhaps you should add the directory containing `libzmq.pc'
| [Tuesday 01 June 2010] [16:35:48] <versificateur>   to the PKG_CONFIG_PATH environment variable
| [Tuesday 01 June 2010] [16:37:06] <versificateur>   but I try locate and found the required at pkg-config
| [Tuesday 01 June 2010] [16:37:12] <versificateur>   locate libzmq.pc
| [Tuesday 01 June 2010] [16:41:19] <sbeaulois>   hi 
| [Tuesday 01 June 2010] [16:42:06] <sbeaulois>   i tried to compile zmq on RHEL but  i have some errors when i tried ./configure  configure: error: cannot link with -luuid, install uuid-dev
| [Tuesday 01 June 2010] [16:42:25] <sbeaulois>   i cann't fin uuid-dev for RHEL
| [Tuesday 01 June 2010] [16:43:00] <mato>    sbeaulois: I think it's called uuid-devel on RH
| [Tuesday 01 June 2010] [16:43:23] <sbeaulois>   i have install uuid-devel but i have the same error 
| [Tuesday 01 June 2010] [16:46:49] <mato>    sbeaulois: which version of RHEL?
| [Tuesday 01 June 2010] [16:47:58] <sbeaulois>   i use RHEL 5 
| [Tuesday 01 June 2010] [16:48:50] <mato>    don't know, sorry, I don't have that here... you need to install whichever package provides libuuid.a
| [Tuesday 01 June 2010] [16:49:12] <sbeaulois>   fine 
| [Tuesday 01 June 2010] [16:49:14] <versificateur>   i resolve my problem by exporting the PKG_CONFIG_PATH
| [Tuesday 01 June 2010] [16:49:47] <versificateur>   it compile fine
| [Tuesday 01 June 2010] [16:50:26] <versificateur>   but when i run the binarie i have this error
| [Tuesday 01 June 2010] [16:50:33] <versificateur>   ./server: error while loading shared libraries: libzmq.so.0: cannot open shared object file: No such file or directory
| [Tuesday 01 June 2010] [16:51:31] <versificateur>   it's similar to what an old issue i met with python bindings installation
| [Tuesday 01 June 2010] [16:51:49] <versificateur>   is anyone experienced this before??
| [Tuesday 01 June 2010] [16:52:17] <mato>    versificateur: you need to run ldconfig as root
| [Tuesday 01 June 2010] [16:52:18] <cremes>  versificateur: your compile line is wrong; don't use "libzmq" just use "zmq"
| [Tuesday 01 June 2010] [16:52:36] <cremes>  or what mato said :)
| [Tuesday 01 June 2010] [16:53:43] <versificateur>   mato: before or after compile??
| [Tuesday 01 June 2010] [16:54:12] <mato>    versificateur: only once, after doing make install for zmq
| [Tuesday 01 June 2010] [16:54:49] <versificateur>   okay i'm trying
| [Tuesday 01 June 2010] [16:56:27] <versificateur>   cremes: i don't think the zmq.cp exist
| [Tuesday 01 June 2010] [16:56:41] <mato>    versificateur: no, it's libzmq.pc
| [Tuesday 01 June 2010] [16:57:16] <versificateur>   so my compile line was right??
| [Tuesday 01 June 2010] [17:00:24] <mato>    yes
| [Tuesday 01 June 2010] [17:02:49] <versificateur>   i retried after ldconfig but still have the same issue
| [Tuesday 01 June 2010] [17:03:18] <mato>    you did do a make install after building zeromq, yes?
| [Tuesday 01 June 2010] [17:04:19] <versificateur>   after running ./configure make make install?
| [Tuesday 01 June 2010] [17:04:23] <versificateur>   yes
| [Tuesday 01 June 2010] [17:04:48] <mato>    don't know, then your system doesn't have /usr/local/lib in it's /etc/ld.so.conf or equivalent
| [Tuesday 01 June 2010] [17:06:20] <versificateur>   yes i think so
| [Tuesday 01 June 2010] [17:10:00] <versificateur>   i'll try by adding a zmq-64.conf with /usr/local/lib 
| [Tuesday 01 June 2010] [17:10:19] <versificateur>   to /etc/ld.so.conf.d
| [Tuesday 01 June 2010] [17:10:25] <versificateur>   directory
| [Tuesday 01 June 2010] [17:10:51] <mato>    yup, don't forget to rerun ldconfig when you make any changes
| [Tuesday 01 June 2010] [17:17:31] <versificateur>   mato: thanks!!! it works
| [Tuesday 01 June 2010] [17:18:11] <versificateur>   running netstat -l shoow me the zeromq port listening
| [Tuesday 01 June 2010] [17:18:30] <versificateur>   now i can test my code...
| [Tuesday 01 June 2010] [17:18:48] <versificateur>   thanks again :)
| [Tuesday 01 June 2010] [17:22:07] <mato>    np
| [Tuesday 01 June 2010] [17:25:22] <sbeaulois>   hi 
| [Tuesday 01 June 2010] [17:25:42] <sbeaulois>   i found solution of my problem 
| [Tuesday 01 June 2010] [17:26:45] <sbeaulois>   libuuid-devel is within of e2fsprogs package
| [Tuesday 01 June 2010] [18:04:25] <sbeaulois>   ne help 
| [Tuesday 01 June 2010] [18:04:30] <sbeaulois>   need help 
| [Tuesday 01 June 2010] [18:04:52] <sbeaulois>   try to compil my java script but   i have some error 
| [Tuesday 01 June 2010] [18:04:56] <sbeaulois>   java.lang.UnsatisfiedLinkError: /usr/local/lib/libjzmq.so.0.0.0: libzmq.so.0
| [Tuesday 01 June 2010] [18:05:02] <sbeaulois>   not found
| [Tuesday 01 June 2010] [18:05:40] <sbeaulois>   java.lang.UnsatisfiedLinkError: /usr/local/lib/libjzmq.so.0.0.0: libzmq.so.0: cannot open shared object file: No such file or directory
| 
| *** Logfile started
| *** on Tue Jun 1 20:38:41 2010
| 
| [Wednesday 02 June 2010] [04:00:18] <sjampoo>   morning, is the pollset and waitfd as discussed on the mailing list going to be part of 2.0.7 or is this something which will be implemented somewhere in the future? I would love to have an estimate on that, ie a month / a year. 
| [Wednesday 02 June 2010] [04:15:10] <sustrik>   jugg: yes, see zmq_tcp(7)
| [Wednesday 02 June 2010] [04:21:07] <jugg>  thanks
| [Wednesday 02 June 2010] [04:22:39] <sustrik>   sjampoo: i'll add it after 2.0.7 release
| [Wednesday 02 June 2010] [04:22:54] <sustrik>   however, the API would still be unstable
| [Wednesday 02 June 2010] [04:23:13] <sustrik>   presumably, it can be done in better way
| [Wednesday 02 June 2010] [04:23:27] <sustrik>   everything depends on performance impact
| [Wednesday 02 June 2010] [04:31:30]      * sjampoo nods
| [Wednesday 02 June 2010] [07:43:41] <mato>  sustrik: are you there?
| [Wednesday 02 June 2010] [08:03:18] <sustrik>   mato: hi
| [Wednesday 02 June 2010] [08:03:38] <mato>  sustrik: you wrote that ZMQ_HWM is per-peer, what happens where there are no peers?
| [Wednesday 02 June 2010] [08:04:06] <sustrik>   exceptional behaviour is triggered
| [Wednesday 02 June 2010] [08:04:14] <sustrik>   drop/block
| [Wednesday 02 June 2010] [08:04:37] <mato>  yes, but when?
| [Wednesday 02 June 2010] [08:04:43] <sustrik>   on send
| [Wednesday 02 June 2010] [08:05:21] <mato>  ok, but immediately, right?
| [Wednesday 02 June 2010] [08:05:44] <sustrik>   right
| [Wednesday 02 June 2010] [08:53:48] <mato>  sustrik: the problem i'm having is that it's impossible to explain flow control accurately without dealing with the *actual* peers connected on a socket
| [Wednesday 02 June 2010] [08:54:06] <mato>  sustrik: this is further complicated by the fact that the term "connect" is overloaded
| [Wednesday 02 June 2010] [08:55:41] <mato>  sustrik: for example, it's really hard to explain coherently the state when a socket "has no peers"
| [Wednesday 02 June 2010] [08:56:06] <mato>  sustrik: which means that it has been connected with zmq_connect(), but no peers exist
| [Wednesday 02 June 2010] [09:05:12] <sustrik>   mato: don't even try to explain that
| [Wednesday 02 June 2010] [09:05:21] <sustrik>   what has to be documented is
| [Wednesday 02 June 2010] [09:05:37] <sustrik>   1. dealing with overloads (drop vs. block)
| [Wednesday 02 June 2010] [09:06:06] <sustrik>   2. HWM socket option - this is used to prevent out-of-memory rather than for flow control
| [Wednesday 02 June 2010] [09:07:20] <mato>  sustrik: it's impossible to explain accurately what HWM *means* without dealing with the existence of the individual message queues associated with a socket!
| [Wednesday 02 June 2010] [09:07:37] <mato>  same for drop/blocking behaviour
| [Wednesday 02 June 2010] [09:08:01] <sustrik>   mato: yes
| [Wednesday 02 June 2010] [09:08:16] <mato>  yes?
| [Wednesday 02 June 2010] [09:08:53] <sustrik>   HWM is maximal number of messages destined for one peer that the socket may hold 
| [Wednesday 02 June 2010] [09:09:07] <sustrik>   the connection doesn't have to exist
| [Wednesday 02 June 2010] [09:09:16] <sustrik>   even the peer may not be running at the moment
| [Wednesday 02 June 2010] [09:10:11] <mato>  the problem is "the connection" != "the socket connection"
| [Wednesday 02 June 2010] [09:10:39] <sustrik>   i prefer to say "there's no concept of connections in 0mq"
| [Wednesday 02 June 2010] [09:11:02] <mato>  then we need to rename the concept of connections to something else :-)
| [Wednesday 02 June 2010] [09:11:16] <sustrik>   what do you mean by connection?
| [Wednesday 02 June 2010] [09:11:54] <mato>  sctp got around this by using the term "association" IIRC
| [Wednesday 02 June 2010] [09:12:40] <mato>  sustrik: what i mean by connection is the "something" created by zmq_connect() or zmq_bind() :-)
| [Wednesday 02 June 2010] [09:13:05] <sustrik>   bind creates nothing, just an endpoint
| [Wednesday 02 June 2010] [09:13:07] <sustrik>   a name
| [Wednesday 02 June 2010] [09:13:20] <sustrik>   do you mean message pipe/queue?
| [Wednesday 02 June 2010] [09:13:22] <mato>  and connect? does what? :-)
| [Wednesday 02 June 2010] [09:13:44] <sustrik>   attaches to endpoint + creates a queue
| [Wednesday 02 June 2010] [09:14:13] <sustrik>   bind just creates the endpoint, creation of associated queue is async
| [Wednesday 02 June 2010] [09:14:18] <sustrik>   queues*
| [Wednesday 02 June 2010] [09:14:41] <sustrik>   but that's invisible to user
| [Wednesday 02 June 2010] [09:14:51] <sustrik>   and - imo - should not be mentioned in documentation
| [Wednesday 02 June 2010] [09:14:58] <sustrik>   what user needs to know is:
| [Wednesday 02 June 2010] [09:15:11] <sustrik>   1. socket may spak to multiple peers
| [Wednesday 02 June 2010] [09:15:28] <sustrik>   2. socket has a routing algorithm
| [Wednesday 02 June 2010] [09:15:41] <sustrik>   (which decides which peer gets which message)
| [Wednesday 02 June 2010] [09:15:56] <sustrik>   3. HWM limits number of messages routed to particular peer
| [Wednesday 02 June 2010] [09:16:08] <sustrik>   messages in memory*
| [Wednesday 02 June 2010] [09:22:40] <mato>  see, with 1. the terminology problem kicks in again:
| [Wednesday 02 June 2010] [09:22:47] <mato>  current doc:
| [Wednesday 02 June 2010] [09:22:52] <mato>  A
| [Wednesday 02 June 2010] [09:22:52] <mato>  'ZMQ_REQ' socket may be connected to multiple peers; each request sent is
| [Wednesday 02 June 2010] [09:22:52] <mato>  load-balanced among all connected peers.
| [Wednesday 02 June 2010] [09:24:41] <sustrik>   well, what's the problem with that?
| [Wednesday 02 June 2010] [09:24:53] <sustrik>   "connected" word?
| [Wednesday 02 June 2010] [09:24:59] <mato>  i think so
| [Wednesday 02 June 2010] [09:25:00] <sustrik>   just drop it
| [Wednesday 02 June 2010] [09:25:17] <sustrik>   "load-balanced among all peers."
| [Wednesday 02 June 2010] [09:25:26] <sustrik>   that's more precise actually
| [Wednesday 02 June 2010] [09:37:10] <mato>  crap, i still don't know how to explain the relationship between socket <-> endpoints <-> queues <-> peers
| [Wednesday 02 June 2010] [09:40:21] <sustrik>   :)
| [Wednesday 02 June 2010] [09:40:26] <mato>  sustrik: let me try and put my problem another way
| [Wednesday 02 June 2010] [09:40:42] <mato>  you keep saying that "there are no connections", and that we should not talk about them in the documentation
| [Wednesday 02 June 2010] [09:41:05] <mato>  but the explanation of ZMQ_HWM is directly dependent on the individual connections to peers
| [Wednesday 02 June 2010] [09:41:18] <mato>  or at least the queues created by those connections
| [Wednesday 02 June 2010] [09:42:32] <sustrik>   there's a peer
| [Wednesday 02 June 2010] [09:42:44] <sustrik>   there's a queue associated with the peer
| [Wednesday 02 June 2010] [09:43:01] <sustrik>   actual connection to the peer is invisible to the user
| [Wednesday 02 June 2010] [09:43:36] <mato>  so i do need to talk about the queues associated with a socket's peers
| [Wednesday 02 June 2010] [09:43:51] <sustrik>   what's wrong with the explanaition above:
| [Wednesday 02 June 2010] [09:43:57] <sustrik>   sustrik> 1. socket may spak to multiple peers
| [Wednesday 02 June 2010] [09:43:57] <sustrik>   <sustrik> 2. socket has a routing algorithm
| [Wednesday 02 June 2010] [09:43:57] <sustrik>   <sustrik> (which decides which peer gets which message)
| [Wednesday 02 June 2010] [09:43:57] <sustrik>   <sustrik> 3. HWM limits number of messages routed to particular peer
| [Wednesday 02 June 2010] [09:44:10] <mato>  it's not an explanation
| [Wednesday 02 June 2010] [09:44:14] <sustrik>   ?
| [Wednesday 02 June 2010] [09:45:24] <mato>  it needs to be uncompressed :-)
| [Wednesday 02 June 2010] [09:47:06] <sustrik>   ah, ok
| [Wednesday 02 June 2010] [09:47:22] <mato>  anyway, i'm trying
| [Wednesday 02 June 2010] [09:47:50] <mato>  maybe it'd help if you were sitting next to me ...
| [Wednesday 02 June 2010] [09:51:39] <sustrik>   hm
| [Wednesday 02 June 2010] [09:51:46] <sustrik>   let's give it one more try
| [Wednesday 02 June 2010] [09:52:22] <sustrik>   socket may speak to multiple peers
| [Wednesday 02 June 2010] [09:52:23] <mato>  if we get it right you won't have to answer nearly as many emails :-)
| [Wednesday 02 June 2010] [09:52:36] <sustrik>   yes, i know
| [Wednesday 02 June 2010] [09:52:47] <sustrik>   actually, it's not even peers
| [Wednesday 02 June 2010] [09:53:12] <sustrik>   because the peer may not even be running at the moment
| [Wednesday 02 June 2010] [09:53:18] <mato>  see, there is a concept missing
| [Wednesday 02 June 2010] [09:53:28] <sustrik>   what about endpoint
| [Wednesday 02 June 2010] [09:53:34] <sustrik>   we use that. no?
| [Wednesday 02 June 2010] [09:53:56] <sustrik>   so, there are endpoints on the network
| [Wednesday 02 June 2010] [09:53:56] <mato>  yes, but at the moment we talk about connecting to endpoints, which overloads the word connect
| [Wednesday 02 June 2010] [09:54:10] <sustrik>   they are pure virtual entities
| [Wednesday 02 June 2010] [09:54:17] <sustrik>   such as multicast group
| [Wednesday 02 June 2010] [09:54:34] <sustrik>   there's no real thing corresponding to multicast group, right?
| [Wednesday 02 June 2010] [09:54:45] <mato>  not really
| [Wednesday 02 June 2010] [09:54:48] <sustrik>   it's just a name
| [Wednesday 02 June 2010] [09:54:55] <sustrik>   ideal concept
| [Wednesday 02 June 2010] [09:55:07] <sustrik>   the 0MQ endpoint is the same kind of thing
| [Wednesday 02 June 2010] [09:55:25] <sustrik>   now, a socket can "implement" the endpoint
| [Wednesday 02 June 2010] [09:55:29] <sustrik>   by binding to it
| [Wednesday 02 June 2010] [09:56:10] <sustrik>   another socket may announce it's desire to speak to a particular endpoint
| [Wednesday 02 June 2010] [09:56:23] <sustrik>   (same thing as joining a multicast group)
| [Wednesday 02 June 2010] [09:56:29] <sustrik>   that's "connect"
| [Wednesday 02 June 2010] [09:57:18] <sustrik>   the whole point is that there may be no application associated with particular endpoint
| [Wednesday 02 June 2010] [09:57:30] <sustrik>   endpoint = name
| [Wednesday 02 June 2010] [09:58:16] <sustrik>   each socket is speaking to multiple peers
| [Wednesday 02 June 2010] [09:58:32] <sustrik>   it does so either by binding to an endpoint or connecting to an endpoint
| [Wednesday 02 June 2010] [09:58:34] <mato>  "speaking to" is not a technical term :-)
| [Wednesday 02 June 2010] [09:58:39] <sustrik>   communicating
| [Wednesday 02 June 2010] [10:00:00] <mato>  how does one refer to a peer a socket is communicating with?
| [Wednesday 02 June 2010] [10:00:18] <sustrik>   peer?
| [Wednesday 02 June 2010] [10:01:22] <sustrik>   anyway, the problem is that peers may not be alive, online and reading messages
| [Wednesday 02 June 2010] [10:01:59] <sustrik>   in such case we may limit number of messages in memory destined for a single peer by setting HWM
| [Wednesday 02 June 2010] [10:02:53] <sustrik>   i know, the whole explanation is creaky, but at least it gives some intuitive insight
| [Wednesday 02 June 2010] [10:03:52] <mato>  creaky, yes :-(
| [Wednesday 02 June 2010] [10:07:57] <mato>  sustrik: so you don't want to talk about message queues associated with sockets at all?
| [Wednesday 02 June 2010] [10:08:14] <sustrik>   do we need to?
| [Wednesday 02 June 2010] [10:08:25] <sustrik>   i am a fan of occam's razor
| [Wednesday 02 June 2010] [10:09:18] <mato>  ok, let me try and see if i can explain everything by removing all references to "message queue associated with socket ..." :-)
| [Wednesday 02 June 2010] [10:09:34] <sustrik>   ;)
| [Wednesday 02 June 2010] [10:29:51] <mato>  sustrik: ok, read this:
| [Wednesday 02 June 2010] [10:30:03] <mato>  The 'ZMQ_HWM' option shall set the high water mark for the specified 'socket'.
| [Wednesday 02 June 2010] [10:30:03] <mato>  The high water mark is a hard limit on the maximum number of outstanding
| [Wednesday 02 June 2010] [10:30:03] <mato>  messages 0MQ shall queue in memory for any single peer that the specified
| [Wednesday 02 June 2010] [10:30:03] <mato>  'socket' is communicating with.
| [Wednesday 02 June 2010] [10:30:03] <mato>  If this limit has been reached for all peers then the socket shall enter an
| [Wednesday 02 June 2010] [10:30:06] <mato>  exceptional state, and depending on the socket type 0MQ shall take appropriate
| [Wednesday 02 June 2010] [10:30:08] <mato>  action such as blocking or dropping newly sent messages; refer to
| [Wednesday 02 June 2010] [10:30:11] <mato>  linkzmq:zmq_socket[3] for details. The exceptional state shall persist until
| [Wednesday 02 June 2010] [10:30:13] <mato>  the number of outstanding messages for at least one peer falls below the low
| [Wednesday 02 June 2010] [10:30:16] <mato>  water mark; the low water mark shall be computed automatically by 0MQ.
| [Wednesday 02 June 2010] [10:30:29] <mato>  avoids using the term "connected to" anywhere
| [Wednesday 02 June 2010] [10:30:35] <mato>  or mentioning message queues
| [Wednesday 02 June 2010] [10:31:02] <mato>  i can even change "shall queue in memory" to "shall hold in memory" if queue is a no-no :-)
| [Wednesday 02 June 2010] [10:31:22] <sustrik>   doesn't matter
| [Wednesday 02 June 2010] [10:31:24] <mato>  sustrik: further, then related to this, the following paragraph for ZMQ_REQ:
| [Wednesday 02 June 2010] [10:31:30] <mato>  in zmq_socket(3)
| [Wednesday 02 June 2010] [10:31:31] <sustrik>   the problem is that it's not true
| [Wednesday 02 June 2010] [10:31:43] <mato>  what is not true?
| [Wednesday 02 June 2010] [10:32:10] <sustrik>   the part about the exceptional state
| [Wednesday 02 June 2010] [10:32:23] <sustrik>   what you've written applies to sat REQ/REP
| [Wednesday 02 June 2010] [10:32:28] <sustrik>   doesn't apply to PUB/SUB
| [Wednesday 02 June 2010] [10:32:37] <mato>  hmm, crap, ok
| [Wednesday 02 June 2010] [10:32:42] <sustrik>   :)
| [Wednesday 02 June 2010] [10:32:58] <sustrik>   try to express it in a simple manner
| [Wednesday 02 June 2010] [10:33:08] <mato>  so how about we keep the 1st paragraph only?
| [Wednesday 02 June 2010] [10:33:15] <mato>  and then refer to the individual socket types?
| [Wednesday 02 June 2010] [10:33:26] <sustrik>   yes
| [Wednesday 02 June 2010] [10:33:26] <mato>  1st paragraph being this bit:
| [Wednesday 02 June 2010] [10:33:30] <mato>  The 'ZMQ_HWM' option shall set the high water mark for the specified 'socket'.
| [Wednesday 02 June 2010] [10:33:30] <mato>  The high water mark is a hard limit on the maximum number of outstanding
| [Wednesday 02 June 2010] [10:33:30] <mato>  messages 0MQ shall queue in memory for any single peer that the specified
| [Wednesday 02 June 2010] [10:33:30] <mato>  'socket' is communicating with.
| [Wednesday 02 June 2010] [10:33:34] <sustrik>   yes
| [Wednesday 02 June 2010] [10:33:48] <mato>  ok, so then the relevant paragraph for REQ sockets:
| [Wednesday 02 June 2010] [10:33:54] <mato>  When a 'ZMQ_REQ' socket enters an exceptional state due to having reached the
| [Wednesday 02 June 2010] [10:33:54] <mato>  high water mark for all peers, or if there are no peers at all, then any
| [Wednesday 02 June 2010] [10:33:54] <mato>  _zmq_send()_ operations on the socket shall block until the exceptional state
| [Wednesday 02 June 2010] [10:33:54] <mato>  ends or at least one peer is connected; messages are not discarded.
| [Wednesday 02 June 2010] [10:33:58] <mato>  makes sense?
| [Wednesday 02 June 2010] [10:34:07] <mato>  i still have a problem there with "at least one peer is connected"
| [Wednesday 02 June 2010] [10:34:29] <mato>  note the careful absence of "connecting" anywhere else :-)
| [Wednesday 02 June 2010] [10:35:40] <sustrik>   "until at least one peer becomes available for sending"
| [Wednesday 02 June 2010] [10:36:04] <mato>  do i want to talk about when exactly the exceptional state ends?
| [Wednesday 02 June 2010] [10:36:15] <mato>  or just be vague and mysterious?
| [Wednesday 02 June 2010] [10:36:20] <sustrik>   be vague
| [Wednesday 02 June 2010] [10:36:24] <sustrik>   it depends on lwm
| [Wednesday 02 June 2010] [10:36:29] <sustrik>   which is invisible
| [Wednesday 02 June 2010] [10:36:33] <mato>  :-(
| [Wednesday 02 June 2010] [10:36:48] <sustrik>   what's wrong with that?
| [Wednesday 02 June 2010] [10:36:56] <sustrik>   you have the same thing with TCP
| [Wednesday 02 June 2010] [10:37:02] <mato>  ok
| [Wednesday 02 June 2010] [10:37:03] <sustrik>   and you even don't realise it
| [Wednesday 02 June 2010] [10:38:53] <mato>  sustrik: can i use the following summary table for sockets:
| [Wednesday 02 June 2010] [10:38:58] <mato>  .Summary of ZMQ_REQ characteristics
| [Wednesday 02 June 2010] [10:38:59] <mato>  Compatible peer sockets:: 'ZMQ_REP'
| [Wednesday 02 June 2010] [10:38:59] <mato>  Direction:: Bidirectional
| [Wednesday 02 June 2010] [10:38:59] <mato>  Send/receive pattern:: Send, Receive, Send, Receive, ...
| [Wednesday 02 June 2010] [10:38:59] <mato>  Queuing strategy:: Load-balanced
| [Wednesday 02 June 2010] [10:39:01] <mato>  Flow control:: Block
| [Wednesday 02 June 2010] [10:39:38] <mato>  maybe queueing strategy should be "Routing strategy" ?
| [Wednesday 02 June 2010] [10:40:15] <mato>  and Flow control should be called something else, "ZMQ_HWM behaviour" ?
| [Wednesday 02 June 2010] [10:41:25] <lvh>   Is it just me, or did 0MQ involve a broker some time ago?
| [Wednesday 02 June 2010] [10:41:44] <lvh>   I'm seeing all this brokerless stuff and I don't get it.
| [Wednesday 02 June 2010] [10:41:55] <mato>  lvh: no, it never did... there was a zmq_locator in 1.x but that did something else
| [Wednesday 02 June 2010] [10:42:09] <mato>  sustrik: halo?
| [Wednesday 02 June 2010] [10:42:28] <sustrik>   mato: here i am
| [Wednesday 02 June 2010] [10:42:40] <mato>  sustrik: see above
| [Wednesday 02 June 2010] [10:42:44] <sustrik>   yes
| [Wednesday 02 June 2010] [10:42:55] <sustrik>   send/receive patter is kind of funny
| [Wednesday 02 June 2010] [10:43:00] <sustrik>   but i don't care
| [Wednesday 02 June 2010] [10:43:01] <mato>  brian suggested that
| [Wednesday 02 June 2010] [10:43:06] <sustrik>   it's ok
| [Wednesday 02 June 2010] [10:43:27] <mato>  and the others?
| [Wednesday 02 June 2010] [10:43:41] <sustrik>   there are actually two strategies
| [Wednesday 02 June 2010] [10:43:53] <sustrik>   one for outgoing messages, one for incoming messages
| [Wednesday 02 June 2010] [10:44:24] <sustrik>   say REQ load balances outgoing messages
| [Wednesday 02 June 2010] [10:44:32] <mato>  yeah, that makes sense
| [Wednesday 02 June 2010] [10:44:46] <mato>  what it does with incoming messages you don't really care
| [Wednesday 02 June 2010] [10:44:47] <sustrik>   and receives only from the peer it sent the last request to
| [Wednesday 02 June 2010] [10:45:04] <mato>  hmm, how can I put that in one sentence...
| [Wednesday 02 June 2010] [10:45:09] <sustrik>   well, for say REP socket, the incoming stratege is fair queueing
| [Wednesday 02 June 2010] [10:45:17] <sustrik>   strategy*
| [Wednesday 02 June 2010] [10:46:06] <sustrik>   wouldn't it be better to explain what the socket does in one sentence
| [Wednesday 02 June 2010] [10:46:15] <mato>  I do that already
| [Wednesday 02 June 2010] [10:46:23] <mato>  but I wanted a summary table in there
| [Wednesday 02 June 2010] [10:46:26] <sustrik>   instead of splitting it into 4 different rows in a table
| [Wednesday 02 June 2010] [10:46:52] <mato>  sustrik: if you were here you would see what i have on my screen :-(
| [Wednesday 02 June 2010] [10:46:53] <sustrik>   ok, let's go through the table
| [Wednesday 02 June 2010] [10:47:07] <sustrik>   comaptible sockets is OK
| [Wednesday 02 June 2010] [10:47:07] <mato>  do we want a table or not?
| [Wednesday 02 June 2010] [10:47:26] <mato>  I thought it would be good to explain in prose first, and then have a table at the end
| [Wednesday 02 June 2010] [10:47:34] <lvh>   Okay. We have a bunch of entry points for mobile devices that speak JSON-over-HTTPS and Thrift-over-SSL. They send stuff to an AMQP broker (RabbitMQ): a queue for persisting, which roundrobins stuff to persisters that write to a database, and then a pubsub thing for a live web interface. I don't understand how you do the load balancing bit in ZMQ. How do persisters register? How do they know *where* to register if there is no central
| [Wednesday 02 June 2010] [10:47:35] <lvh>   broker?
| [Wednesday 02 June 2010] [10:48:42] <sustrik>   mato: i would omit the strategies from the table, they are explained in the text already
| [Wednesday 02 June 2010] [10:49:30] <mato>  sustrik: well, the table is nice for a quick look
| [Wednesday 02 June 2010] [10:49:39] <mato>  sustrik: if it can be done for all sockets correctly
| [Wednesday 02 June 2010] [10:49:40] <sustrik>   lvh: so devices are sending messages to a central node (broker) which then load-balances them among persisters, right?
| [Wednesday 02 June 2010] [10:49:49] <lvh>   sustrik: Yes, that's one part of the behavior
| [Wednesday 02 June 2010] [10:49:57] <lvh>   sustrik: Let's focus on that now :)
| [Wednesday 02 June 2010] [10:50:11] <lvh>   sustrik: That's a single AMQP queue.
| [Wednesday 02 June 2010] [10:50:25] <sustrik>   mato: you can try but strategies need textual description anyway
| [Wednesday 02 June 2010] [10:50:43] <sustrik>   lvh: is that req/rep scenario?
| [Wednesday 02 June 2010] [10:50:46] <lvh>   What does the failure mode look like? What happens to messages when a persister grabs a message and then blows up?
| [Wednesday 02 June 2010] [10:50:55] <sustrik>   are the persisters sending replies back to the devices?
| [Wednesday 02 June 2010] [10:51:10] <sustrik>   lvh: unreliable
| [Wednesday 02 June 2010] [10:51:16] <lvh>   sustrik: Ideally yes, to confirm "hey I wrote this thing and the db says its okay"
| [Wednesday 02 June 2010] [10:51:44] <sustrik>   you can run zmq_queue in the middle
| [Wednesday 02 June 2010] [10:51:53] <sustrik>   it's lika an AMQP queue
| [Wednesday 02 June 2010] [10:52:12] <sustrik>   then both devices and persisters can connect to it
| [Wednesday 02 June 2010] [10:52:17] <lvh>   Okay, cool :-) I'll read up on that one.
| [Wednesday 02 June 2010] [10:52:28] <lvh>   sustrik: How about the pubsubbing? Is that with zmq_queue too?
| [Wednesday 02 June 2010] [10:52:38] <sustrik>   no, that's zmq_forwarder
| [Wednesday 02 June 2010] [10:53:13] <lvh>   Aha! Okay, I'll read the docs for those two and try to figure it out. Thanks! :-)
| [Wednesday 02 June 2010] [10:54:58] <mato>  sustrik: so what's the incoming strategy for ZMQ_SUB?
| [Wednesday 02 June 2010] [10:56:45] <sustrik>   fair-queuing
| [Wednesday 02 June 2010] [10:59:58] <mato>  does this work:
| [Wednesday 02 June 2010] [11:00:04] <mato>  REQ:
| [Wednesday 02 June 2010] [11:00:11] <mato>  Compatible peer sockets:: 'ZMQ_REP'
| [Wednesday 02 June 2010] [11:00:11] <mato>  Direction:: Bidirectional
| [Wednesday 02 June 2010] [11:00:11] <mato>  Send/receive pattern:: Send, Receive, Send, Receive, ...
| [Wednesday 02 June 2010] [11:00:11] <mato>  Outgoing routing strategy:: Load-balanced
| [Wednesday 02 June 2010] [11:00:11] <mato>  Incoming routing strategy:: Last peer
| [Wednesday 02 June 2010] [11:00:13] <mato>  Flow control:: Block
| [Wednesday 02 June 2010] [11:00:15] <mato>  REP:
| [Wednesday 02 June 2010] [11:00:20] <mato>  Compatible peer sockets:: 'ZMQ_REQ'
| [Wednesday 02 June 2010] [11:00:20] <mato>  Direction:: Bidirectional
| [Wednesday 02 June 2010] [11:00:20] <mato>  Send/receive pattern:: Receive, Send, Receive, Send, ...
| [Wednesday 02 June 2010] [11:00:20] <mato>  Incoming routing strategy:: Fair-queued
| [Wednesday 02 June 2010] [11:00:20] <mato>  Outgoing routing stratagy:: Last peer
| [Wednesday 02 June 2010] [11:00:23] <mato>  Flow control:: Drop
| [Wednesday 02 June 2010] [11:02:54] <sustrik>   you have it mixed
| [Wednesday 02 June 2010] [11:02:59] <sustrik>   the upper is ZMQ_REQ
| [Wednesday 02 June 2010] [11:03:08] <sustrik>   the lower is ZMQ_REP
| [Wednesday 02 June 2010] [11:03:15] <mato>  that's what i wrote
| [Wednesday 02 June 2010] [11:03:56] <mato>  sustrik: what i'm asking is whether that kind of table makes sense
| [Wednesday 02 June 2010] [11:03:58] <sustrik>   oh, orry
| [Wednesday 02 June 2010] [11:04:00] <sustrik>   sorry
| [Wednesday 02 June 2010] [11:04:18] <sustrik>   yes, it makes sense
| [Wednesday 02 June 2010] [11:04:44] <mato>  the reason i want to put it in there beside the prose is brian wrote:
| [Wednesday 02 June 2010] [11:04:55] <mato>  In my understanding, 0MQ sockets
| [Wednesday 02 June 2010] [11:04:55] <mato>  can be described in a uniform manner by specifying things like:
| [Wednesday 02 June 2010] [11:04:55] <mato>  * Bidirectional or unidirectional
| [Wednesday 02 June 2010] [11:04:55] <mato>  * send/recv pattern (ssssss, rrrrrrr, srsrsrsr, etc.)
| [Wednesday 02 June 2010] [11:04:55] <mato>  * Outbound/inbound message queuing pattern (load balanced, fair queued)
| [Wednesday 02 June 2010] [11:04:58] <mato>  * Number of allowed clients.
| [Wednesday 02 June 2010] [11:05:00] <mato>  * How multiple clients are handled.
| [Wednesday 02 June 2010] [11:05:03] <mato>  * Number of allowed in flight messages (synch, async)
| [Wednesday 02 June 2010] [11:05:05] <mato>  * Algorithm used when the queue fills.
| [Wednesday 02 June 2010] [11:05:08] <mato>  * Allowed peer socket types.
| [Wednesday 02 June 2010] [11:05:10] <mato>  * I may be missing certain things.
| [Wednesday 02 June 2010] [11:05:13] <mato>  * How identities are used in message routing.
| [Wednesday 02 June 2010] [11:05:15] <mato>  The main problem that I see right now is that some of these things are
| [Wednesday 02 June 2010] [11:05:18] <mato>  not clearly documented.  Making a list of all these things and
| [Wednesday 02 June 2010] [11:05:20] <mato>  documenting them for each socket type would be immensely helpful and
| [Wednesday 02 June 2010] [11:05:23] <mato>  clarify the abstraction of a 0MQ socket.
| [Wednesday 02 June 2010] [11:05:25] <mato>  ...
| [Wednesday 02 June 2010] [11:05:28] <mato>  so it seems that a table would help
| [Wednesday 02 June 2010] [11:05:30] <sustrik>   yes, sure
| [Wednesday 02 June 2010] [11:05:30] <mato>  sustrik: agree?
| [Wednesday 02 June 2010] [11:05:36] <sustrik>   yes
| [Wednesday 02 June 2010] [11:05:45] <sustrik>   let's use your current table
| [Wednesday 02 June 2010] [11:05:55] <sustrik>   if there are more things to specify
| [Wednesday 02 June 2010] [11:05:59] <sustrik>   we can add it later
| [Wednesday 02 June 2010] [11:06:02] <mato>  ok, good
| [Wednesday 02 June 2010] [11:06:21] <mato>  it makes peer look scary:
| [Wednesday 02 June 2010] [11:06:25] <mato>  Compatible peer sockets:: 'ZMQ_PAIR'
| [Wednesday 02 June 2010] [11:06:26] <mato>  Direction:: Bidirectional
| [Wednesday 02 June 2010] [11:06:26] <mato>  Send/receive pattern:: Unrestricted
| [Wednesday 02 June 2010] [11:06:26] <mato>  Incoming routing strategy:: N/A
| [Wednesday 02 June 2010] [11:06:26] <mato>  Outgoing routing strategy:: N/A
| [Wednesday 02 June 2010] [11:06:28] <mato>  Flow control:: Block
| [Wednesday 02 June 2010] [11:06:30] <mato>  lots of N/A :)
| [Wednesday 02 June 2010] [11:07:03] <mato>  sustrik: one more thing needs  to go in that table
| [Wednesday 02 June 2010] [11:07:36] <sustrik>   :)
| [Wednesday 02 June 2010] [11:07:46] <mato>  sustrik: which is what brian calls "number of allowed clients", and what he means is whether a socket can be many-to-many/many-to-one/etc
| [Wednesday 02 June 2010] [11:07:53] <mato>  what is that "thing" called? :-)
| [Wednesday 02 June 2010] [11:08:03] <sustrik>   arity
| [Wednesday 02 June 2010] [11:08:12] <sustrik>   cardinality
| [Wednesday 02 June 2010] [11:08:15] <sustrik>   dunno
| [Wednesday 02 June 2010] [11:08:39] <mato>  hmm, neither of those really work
| [Wednesday 02 June 2010] [11:08:57] <sustrik>   any normal 0mq socket allows many peers
| [Wednesday 02 June 2010] [11:09:03] <sustrik>   pair is pathological case
| [Wednesday 02 June 2010] [11:09:12] <sustrik>   just note in the text
| [Wednesday 02 June 2010] [11:09:23] <mato>  already noted
| [Wednesday 02 June 2010] [11:09:24] <sustrik>   word 'pathological' should be definitely present :)
| [Wednesday 02 June 2010] [11:18:34] <lvh>   sustrik: So, in a typical setup, would these brokers and forwarders have dedicated machines? I'm assuming that you *DO* actually need to know where your forwarder/queue is.
| [Wednesday 02 June 2010] [11:18:56] <sustrik>   yes, you have to connect to it
| [Wednesday 02 June 2010] [11:19:13] <sustrik>   having a dedicated machine seems like an overkill
| [Wednesday 02 June 2010] [11:19:20] <sustrik>   depends on what are you doing
| [Wednesday 02 June 2010] [11:19:38] <sustrik>   if you are NASDAQ, you probably want a dedicated machine...
| [Wednesday 02 June 2010] [11:19:52] <lvh>   well, we're currently on EC2
| [Wednesday 02 June 2010] [11:20:09] <lvh>   I suppose we could move to RC and use a tiny 256M box, and even that's overkill.
| [Wednesday 02 June 2010] [11:20:43] <sustrik>   then use a single box :)
| [Wednesday 02 June 2010] [11:21:25] <mato>  %^#$^
| [Wednesday 02 June 2010] [11:22:31] <mato>  sustrik: so how do i translate this without mentioning message queues/pipes:
| [Wednesday 02 June 2010] [11:22:39] <mato>  REP:
| [Wednesday 02 June 2010] [11:22:39] <mato>  Ak je spojenie urcene na odoslanie odpovede preplnene, potom ZMQ
| [Wednesday 02 June 2010] [11:22:39] <mato>  spravu zahodi a send skonci uspesne.
| [Wednesday 02 June 2010] [11:23:37] <sustrik>   that's the flow control bit?
| [Wednesday 02 June 2010] [11:23:45] <mato>  yes
| [Wednesday 02 June 2010] [11:24:20] <sustrik>   if there's not enough space to store the message, it'll be dropped
| [Wednesday 02 June 2010] [11:25:23] <mato>  sustrik: it needs to be explained in the context of REP and HWM
| [Wednesday 02 June 2010] [11:25:56] <mato>  help me out here
| [Wednesday 02 June 2010] [11:26:43] <sustrik>   if requester is not receiving replies and the number of outstanding replies reaches HWM any further replies will be dropped
| [Wednesday 02 June 2010] [11:30:17] <mato>  sustrik: hw about this?
| [Wednesday 02 June 2010] [11:30:22] <mato>  When a 'ZMQ_REP' socket enters an exceptional state due to having reached the
| [Wednesday 02 June 2010] [11:30:23] <mato>  high water mark for a _client_, then any replies sent to the _client_ in
| [Wednesday 02 June 2010] [11:30:23] <mato>  question shall be dropped until the exceptional state ends.
| [Wednesday 02 June 2010] [11:30:48] <sustrik>   yes, why not
| [Wednesday 02 June 2010] [12:05:50] <mato>  sustrik: are you still there?
| [Wednesday 02 June 2010] [12:11:46] <sustrik>   mato: yes
| [Wednesday 02 June 2010] [12:12:00] <mato>  sustrik: in a moment i will commit my changes
| [Wednesday 02 June 2010] [12:12:15] <mato>  sustrik: i've also added some general text to zmq_socket in an attempt to explain the interesting bits
| [Wednesday 02 June 2010] [12:12:23] <mato>  sustrik: once i commit it can you review this please?
| [Wednesday 02 June 2010] [12:12:30] <sustrik>   sure, i will
| [Wednesday 02 June 2010] [12:12:40] <sustrik>   one more question, btw
| [Wednesday 02 June 2010] [12:12:53] <sustrik>   there's a "zmqd" thing in the trunk
| [Wednesday 02 June 2010] [12:13:11] <sustrik>   should we drop the devices in favour of zmqd
| [Wednesday 02 June 2010] [12:13:19] <sustrik>   or keep both for the time being
| [Wednesday 02 June 2010] [12:13:22] <sustrik>   ?
| [Wednesday 02 June 2010] [12:13:30] <mato>  sustrik: oh, btw, since we're removing app_threads, zmq_socket will no longer return EMTHREAD ever?
| [Wednesday 02 June 2010] [12:13:48] <mato>  sustrik: as for zmqd, i'm not sure, i've not had a chance to review it
| [Wednesday 02 June 2010] [12:13:48] <sustrik>   actually, it will
| [Wednesday 02 June 2010] [12:14:07] <sustrik>   when it reaches max socket count
| [Wednesday 02 June 2010] [12:14:12] <sustrik>   as with POSIX
| [Wednesday 02 June 2010] [12:14:24] <mato>  sustrik: for 2.0.7 i would ignore zmqd, and keep packaging the current devices
| [Wednesday 02 June 2010] [12:14:31] <sustrik>   ok
| [Wednesday 02 June 2010] [12:14:35] <mato>  sustrik: since the devices/zmqd really need a proper review
| [Wednesday 02 June 2010] [12:15:05] <sustrik>   fine
| [Wednesday 02 June 2010] [12:15:27] <sustrik>   what about renaming EMTHREAD to EMFILE?
| [Wednesday 02 June 2010] [12:15:40] <sustrik>   probably not
| [Wednesday 02 June 2010] [12:15:48] <sustrik>   just an idea
| [Wednesday 02 June 2010] [12:15:57] <mato>  what does this value have to do with it?
| [Wednesday 02 June 2010] [12:16:13] <mato>   Maximal number of OS threads that can own 0MQ sockets
| [Wednesday 02 June 2010] [12:16:13] <mato>          //  at the same time.
| [Wednesday 02 June 2010] [12:16:13] <mato>          max_app_threads = 512,
| [Wednesday 02 June 2010] [12:16:18] <mato>  from config.hpp
| [Wednesday 02 June 2010] [12:16:30] <sustrik>   yes, that's max thread count
| [Wednesday 02 June 2010] [12:16:42] <sustrik>   kind of like max socket count in POSIX OS
| [Wednesday 02 June 2010] [12:16:51] <sustrik>   max fd count i meant
| [Wednesday 02 June 2010] [12:17:22] <mato>  ok
| [Wednesday 02 June 2010] [12:17:59] <mato>  in that case I'll change the error explanation to just say:
| [Wednesday 02 June 2010] [12:18:03] <mato>  *EMTHREAD*::
| [Wednesday 02 June 2010] [12:18:03] <mato>  The number of application threads using sockets within this 'context' has been
| [Wednesday 02 June 2010] [12:18:04] <mato>  exceeded. 
| [Wednesday 02 June 2010] [12:18:08] <mato>  and nothing else
| [Wednesday 02 June 2010] [12:18:26] <sustrik>   there's no concept of application thread now
| [Wednesday 02 June 2010] [12:18:30] <sustrik>   i would just say
| [Wednesday 02 June 2010] [12:18:40] <sustrik>   "maximal number of sockets exceeded"
| [Wednesday 02 June 2010] [12:18:46] <sustrik>   it's not precise
| [Wednesday 02 June 2010] [12:18:47] <mato>  sorry, yeah
| [Wednesday 02 June 2010] [12:18:55] <mato>  Maximum btw
| [Wednesday 02 June 2010] [12:19:04] <mato>  I don't know where you keep getting maximal from :-)
| [Wednesday 02 June 2010] [12:19:06] <sustrik>   but nobody going to experience the error
| [Wednesday 02 June 2010] [12:19:15] <sustrik>   slovak language
| [Wednesday 02 June 2010] [12:19:23] <mato>  oh, you never know, there may be people using more than 512 threads
| [Wednesday 02 June 2010] [12:19:35] <sustrik>   those are doomed anyway
| [Wednesday 02 June 2010] [12:19:37] <sustrik>   :)
| [Wednesday 02 June 2010] [12:19:51] <mato>  not if you imagine that they're running on some freaky 48-core box :-)
| [Wednesday 02 June 2010] [12:20:07] <sustrik>   supercomputing use cases
| [Wednesday 02 June 2010] [12:20:27] <sustrik>   guys on blue gene should be smart enough to figure it out
| [Wednesday 02 June 2010] [12:20:59] <cremes>    mato: is zmq_init still taking a threads parameter? if so, does your latest doc update explain its meaning better?
| [Wednesday 02 June 2010] [12:21:15] <mato>  cremes: it is, but won't be for 2.0.7
| [Wednesday 02 June 2010] [12:21:29] <mato>  hence the doc update
| [Wednesday 02 June 2010] [12:21:49] <cremes>    so in 2.0.7 the call to zmq_init will no longer take any arguments?
| [Wednesday 02 June 2010] [12:21:54] <mato>  correct
| [Wednesday 02 June 2010] [12:22:01] <cremes>    good
| [Wednesday 02 June 2010] [12:22:06] <sustrik>   not corrext
| [Wednesday 02 June 2010] [12:22:14] <cremes>    oops
| [Wednesday 02 June 2010] [12:22:16] <sustrik>   there's still io_threads parameter
| [Wednesday 02 June 2010] [12:22:23] <mato>  yeah, that's right, sorry
| [Wednesday 02 June 2010] [12:22:23] <sustrik>   size of working thread pool
| [Wednesday 02 June 2010] [12:22:43] <sustrik>   app_threads and flags is dropped
| [Wednesday 02 June 2010] [12:22:49] <cremes>    ah, ok
| [Wednesday 02 June 2010] [12:23:15] <cremes>    i never understood what app threads were for... 
| [Wednesday 02 June 2010] [12:23:20] <cremes>    but now it doesn't matter
| [Wednesday 02 June 2010] [12:23:24] <mato>  :-)
| [Wednesday 02 June 2010] [12:23:36] <sustrik>   that's why we removed them
| [Wednesday 02 June 2010] [12:23:37] <mato>  cremes: anything else you don't know what its for?
| [Wednesday 02 June 2010] [12:23:43] <mato>  cremes: maybe we can remove that too :-)
| [Wednesday 02 June 2010] [12:23:53] <cremes>    ha!
| [Wednesday 02 June 2010] [12:24:36] <sustrik>   seriously
| [Wednesday 02 June 2010] [12:24:39] <cremes>    let me see... you may want to clarify that zmq_poll can return when *any* event occurs inside the library even if no sockets are readable/writable
| [Wednesday 02 June 2010] [12:25:08] <cremes>    and the usec delay value is the maximum it may block and will likely return earlier
| [Wednesday 02 June 2010] [12:25:15] <sustrik>   yeah, that's kind of confusing
| [Wednesday 02 June 2010] [12:25:42] <cremes>    i know :)
| [Wednesday 02 June 2010] [12:25:58] <sustrik>   i would like to block till timeout expires but people seem to be so much concerned about zmq_poll performance...
| [Wednesday 02 June 2010] [12:27:16] <cremes>    sustrik: that behavior as fine as long as it is documented
| [Wednesday 02 June 2010] [12:27:32] <cremes>    particularly the part that it's possible that no sockets are readable/writable
| [Wednesday 02 June 2010] [12:27:57] <sustrik>   mato: can you add one sentence explaining that?
| [Wednesday 02 June 2010] [12:28:01] <cremes>    i'd like to keep 0mq as fast as possible so that my choice of a slow language (ruby) doesn't hurt as much
| [Wednesday 02 June 2010] [12:28:19] <lvh>   you should probably measure your bottlenecks first
| [Wednesday 02 June 2010] [12:28:33] <lvh>   IO tends to be it but ZMQ is probably a tiny bit of that
| [Wednesday 02 June 2010] [12:28:35] <mato>  sustrik: working on it now
| [Wednesday 02 June 2010] [12:29:17] <sustrik>   lvh: that's true wrt latency
| [Wednesday 02 June 2010] [12:29:34] <sustrik>   as for throughput it should be as fast as possible
| [Wednesday 02 June 2010] [12:29:47] <sustrik>   because network stack is called only once in a while
| [Wednesday 02 June 2010] [12:30:03] <sustrik>   so it most cases 0mq overhead is the only overhead there is
| [Wednesday 02 June 2010] [12:30:37] <sustrik>   exact timeouts on zmq_poll require one call to gettimeofday per invocation
| [Wednesday 02 June 2010] [12:30:49] <sustrik>   that can slow the whole thing down
| [Wednesday 02 June 2010] [12:32:49] <mato>  sustrik: so poll returns any time, even if there are no events and timeout has not yet expired?
| [Wednesday 02 June 2010] [12:33:40] <sustrik>   yes
| [Wednesday 02 June 2010] [12:33:58] <sustrik>   the only guarantee is that it won't return _after_ the timeout expired
| [Wednesday 02 June 2010] [12:34:14] <mato>  IMPORTANT: The _zmq_poll()_ function may return *before* the 'timeout' period
| [Wednesday 02 June 2010] [12:34:15] <mato>  has expired even if no events have been signaled.
| [Wednesday 02 June 2010] [12:34:17] <mato>  this should do?
| [Wednesday 02 June 2010] [12:34:27] <mato>  right after the RETURN value section
| [Wednesday 02 June 2010] [12:34:28] <sustrik>   cremes?
| [Wednesday 02 June 2010] [12:35:55] <sustrik>   looks like he's away, i, for myself, am happy with the wording
| [Wednesday 02 June 2010] [12:35:59] <mato>  ok
| [Wednesday 02 June 2010] [12:36:24] <mato>  poll is a hack anyway and needs to be redone :)
| [Wednesday 02 June 2010] [12:36:47] <sustrik>   yeah, but the exact timeout would be a problem anyway :|
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: 03Martin Lucina 07master * r7c9b09b 10/ (7 files): 
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: Documentation: Flow control, zmq_socket(3)
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: Mostly Flow control and additions to zmq_socket(3)
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: Removed/changed lots of text regarding message queues
| [Wednesday 02 June 2010] [12:38:29] <CIA-17>    zeromq2: More fixes for 2.0.7 changes - http://bit.ly/d24DAg
| [Wednesday 02 June 2010] [12:38:36] <mato>  sustrik: ok, committed
| [Wednesday 02 June 2010] [12:38:56] <mato>  sustrik: please take a look at the beginning of zmq_socket(3) and tell me if the added text is correct and helpful or not
| [Wednesday 02 June 2010] [12:39:11] <sustrik>   lemme see
| [Wednesday 02 June 2010] [12:44:04] <sustrik>   very nice
| [Wednesday 02 June 2010] [12:44:10] <mato>  thanks
| [Wednesday 02 June 2010] [12:44:35] <mato>  i wanted to emphasize the many-to-many and multiple endpoints 
| [Wednesday 02 June 2010] [12:44:43] <sustrik>   yes, that's good
| [Wednesday 02 June 2010] [12:44:53] <sustrik>   it should be pointed out explicitly
| [Wednesday 02 June 2010] [12:45:15] <mato>  great, then this should help
| [Wednesday 02 June 2010] [12:45:22] <mato>  sustrik: beer & pizza?
| [Wednesday 02 June 2010] [12:45:38] <sustrik>   i've just ate
| [Wednesday 02 June 2010] [12:45:48] <sustrik>   beer?
| [Wednesday 02 June 2010] [12:46:03] <mato>  beer is good, but i need food too
| [Wednesday 02 June 2010] [12:46:17] <sustrik>   where do you want to go?
| [Wednesday 02 June 2010] [12:46:29] <mato>  somewhere outside
| [Wednesday 02 June 2010] [12:46:38] <sustrik>   it's *COLD*
| [Wednesday 02 June 2010] [12:46:53] <mato>  is it? i thought not really
| [Wednesday 02 June 2010] [12:47:01] <sustrik>   14 degrees or something
| [Wednesday 02 June 2010] [12:47:18] <mato>  sustrik: ok how about randal? that has been and pizza
| [Wednesday 02 June 2010] [12:47:29] <mato>  sustrik: and no concert tonight, i just checked
| [Wednesday 02 June 2010] [12:47:33] <sustrik>   is it open now?
| [Wednesday 02 June 2010] [12:47:39] <mato>  yes, every day
| [Wednesday 02 June 2010] [12:47:47] <sustrik>   ok then
| [Wednesday 02 June 2010] [12:47:59] <mato>  see you there at half past seven then?
| [Wednesday 02 June 2010] [12:48:11] <sustrik>   more or less
| [Wednesday 02 June 2010] [12:48:20] <sustrik>   i have few emails to answer still
| [Wednesday 02 June 2010] [12:48:28] <mato>  ok
| [Wednesday 02 June 2010] [12:55:22] <cremes>    mato, sustrik: the zmq_poll rewording is fine
| [Wednesday 02 June 2010] [12:55:38] <sustrik>   ack
| [Wednesday 02 June 2010] [15:03:33] <lvh>   What's the recommended thing for debian stable packages?
| 
| *** Logfile started
| *** on Thu Jun 3 02:17:03 2010
| 
| 
| *** Logfile started
| *** on Thu Jun 3 02:24:46 2010
| 
| [Thursday 03 June 2010] [03:24:05] <sbeaulois_> hello
| [Thursday 03 June 2010] [03:27:05] <versificateur>  hello everyone!
| [Thursday 03 June 2010] [03:28:00] <versificateur>  I have some difficulties to reach messges sent by zeromq
| [Thursday 03 June 2010] [03:28:52] <versificateur>  when I connect to hosts other than localhost
| [Thursday 03 June 2010] [03:29:55] <versificateur>  the connection is opened but i get no message from the server
| [Thursday 03 June 2010] [03:30:42] <versificateur>  however it's works fine in local
| [Thursday 03 June 2010] [03:30:42] <guido_g>    show source in paste-bin
| [Thursday 03 June 2010] [03:31:00] <guido_g>    all other things are guessing :)
| [Thursday 03 June 2010] [03:34:14] <versificateur>  http://pastebin.com/5pWd2mFc
| [Thursday 03 June 2010] [03:34:25] <versificateur>  this is the server
| [Thursday 03 June 2010] [03:36:06] <versificateur>  http://pastebin.com/NvCZ3157
| [Thursday 03 June 2010] [03:36:25] <versificateur>  and the test i wrote based on pyzmq example
| [Thursday 03 June 2010] [03:37:42] <guido_g>    ok
| [Thursday 03 June 2010] [03:38:08] <guido_g>    can you check if the server is listening on all ips of the server?
| [Thursday 03 June 2010] [03:38:25] <guido_g>    on linux netstat would do the job
| [Thursday 03 June 2010] [03:38:34] <guido_g>    netstat -tanp
| [Thursday 03 June 2010] [03:38:46] <versificateur>  yes it's listening
| [Thursday 03 June 2010] [03:38:55] <sustrik>    i think the problem is that you exit the sender before it's able to send the message
| [Thursday 03 June 2010] [03:39:16] <sustrik>    try sleeping for a while before you exit the sender
| [Thursday 03 June 2010] [03:41:23] <versificateur>  but the same code works well when zeromq subscriber and publisher are on the same machine
| [Thursday 03 June 2010] [03:41:50] <guido_g>    yes, because there is no network involved, completely different behaviour
| [Thursday 03 June 2010] [03:41:53] <sustrik>    i assume that's because loopback is faster than inter-machine communication
| [Thursday 03 June 2010] [03:42:20] <sustrik>    so it local case the message manages to get through before the application quits
| [Thursday 03 June 2010] [03:43:01] <versificateur>  okay i'll try sleeping
| [Thursday 03 June 2010] [03:43:17] <versificateur>  after sendin??
| [Thursday 03 June 2010] [03:43:50] <guido_g>    yes
| [Thursday 03 June 2010] [03:44:07] <guido_g>    just to make sure that mq has time to send
| [Thursday 03 June 2010] [03:44:40] <versificateur>  i'll start with huge value and decrease gradually
| [Thursday 03 June 2010] [03:45:04] <sustrik>    one second should do
| [Thursday 03 June 2010] [03:50:15] <versificateur>  i tried with 5 second but received nothing
| [Thursday 03 June 2010] [03:52:10] <sustrik>    another possibility:
| [Thursday 03 June 2010] [03:52:30] <sustrik>    do you start the subscriber fast enough?
| [Thursday 03 June 2010] [03:52:43] <sustrik>    i see there's a sleep in the code to allow subscriber to connect
| [Thursday 03 June 2010] [03:53:16] <sustrik>    do you start it within 1 second after starting the publisher?
| [Thursday 03 June 2010] [03:54:40] <sustrik>    versificateur: let me explain how pub/sub is supposed to work
| [Thursday 03 June 2010] [03:55:08] <sustrik>    the idea is that publisher is a long-lived application that broadcast continuous stream of messages
| [Thursday 03 June 2010] [03:55:28] <sustrik>    the subscribers connect to the publisher and start receiving the stream at some point
| [Thursday 03 June 2010] [03:56:43] <versificateur>  it's what publisher do
| [Thursday 03 June 2010] [03:56:55] <versificateur>  my publisher do
| [Thursday 03 June 2010] [03:57:09] <sustrik>    does it run in loop?
| [Thursday 03 June 2010] [03:57:30]   * sustrik doesn't speak python
| [Thursday 03 June 2010] [03:57:45] <sustrik>    my impression is that it publishes a message and quits
| [Thursday 03 June 2010] [03:58:07] <sustrik>    rather than transmitting a continuous stream
| [Thursday 03 June 2010] [03:58:33] <versificateur>  not really . it open a connection (bind) 
| [Thursday 03 June 2010] [03:58:50] <versificateur>  and send every message
| [Thursday 03 June 2010] [03:59:17] <versificateur>  he receive from an upstream application
| [Thursday 03 June 2010] [04:00:20]   * sustrik is lost in the python code :)
| [Thursday 03 June 2010] [04:00:27] <sustrik>    where should i look for the loop?
| [Thursday 03 June 2010] [04:01:49] <sustrik>    it's clear up to line 34
| [Thursday 03 June 2010] [04:01:56] <sustrik>    then i get lost
| [Thursday 03 June 2010] [04:02:22] <versificateur>  http://pastebin.com/pdNkax6c
| [Thursday 03 June 2010] [04:02:44] <versificateur>  okay i'll resume basically what the application do
| [Thursday 03 June 2010] [04:03:06]   * sustrik is listening
| [Thursday 03 June 2010] [04:03:42] <versificateur>  it receive a GET request through a WSGI python server
| [Thursday 03 June 2010] [04:03:43] <guido_g>    ahhh it's running in web-server
| [Thursday 03 June 2010] [04:04:23] <versificateur>  yes it's the last code i send
| [Thursday 03 June 2010] [04:05:42] <versificateur>  but before running the WSGI server it start the zeromq publisher
| [Thursday 03 June 2010] [04:06:27] <versificateur>  with import bmpMessageHandler on line 4
| [Thursday 03 June 2010] [04:07:55] <sustrik>    ok, so it  does publish a continuous stream of messages
| [Thursday 03 June 2010] [04:08:28] <versificateur>  and everytime a GET request is send it run the method that send message
| [Thursday 03 June 2010] [04:08:28] <sustrik>    can you check whether there's data over the wire (tcpdump/wireshark)
| [Thursday 03 June 2010] [04:08:31] <sustrik>    ?
| [Thursday 03 June 2010] [04:08:48] <versificateur>  i'll try
| [Thursday 03 June 2010] [04:09:12] <versificateur>  on the publisher or subscriber?
| [Thursday 03 June 2010] [04:09:29] <sustrik>    should be the same
| [Thursday 03 June 2010] [04:09:34] <sustrik>    it's up to you
| [Thursday 03 June 2010] [05:35:23] <mikko>  good morning
| [Thursday 03 June 2010] [05:35:37] <mikko>  man it's hard to get back to work after hols
| [Thursday 03 June 2010] [05:36:07] <mikko>  sustrik: are there any upcoming changes to the polling api?
| [Thursday 03 June 2010] [05:36:25] <sustrik>    hi
| [Thursday 03 June 2010] [05:36:35] <sustrik>    you mean the waitfd thing?
| [Thursday 03 June 2010] [05:36:46] <mikko>  i mean the pollset changes 
| [Thursday 03 June 2010] [05:36:57] <sustrik>    ah, no
| [Thursday 03 June 2010] [05:36:59] <mikko>  adding / removing items to/from pollset
| [Thursday 03 June 2010] [05:37:00] <mikko>  ok
| [Thursday 03 June 2010] [05:37:06] <sustrik>    it'll stay as is in 2.0.7
| [Thursday 03 June 2010] [05:37:14] <mikko>  so making a pollset myself is a sensible thing to do
| [Thursday 03 June 2010] [05:37:24] <sustrik>    yes
| [Thursday 03 June 2010] [05:37:38] <mikko>  cool, because i wrote one some time ago
| [Thursday 03 June 2010] [05:37:44] <mikko>  just need to polish it and push in
| [Thursday 03 June 2010] [05:37:51] <sustrik>    great
| [Thursday 03 June 2010] [05:37:56] <mikko>  thanks
| [Thursday 03 June 2010] [05:38:12] <mikko>  a lot of improvements in 2.0.7
| [Thursday 03 June 2010] [05:41:29] <versificateur>  i finally locate the bug
| [Thursday 03 June 2010] [05:42:21] <versificateur>  it's in the deamon i run to start the WSGI server
| [Thursday 03 June 2010] [05:42:33] <versificateur>  i'l try to fix it
| [Thursday 03 June 2010] [05:42:43] <versificateur>  thanks sustrik
| [Thursday 03 June 2010] [05:43:04] <sustrik>    you are welcome
| [Thursday 03 June 2010] [05:43:48] <sustrik>    versificateur: is it an open source project you are working on?
| [Thursday 03 June 2010] [05:46:14] <versificateur>  not yet but it could become
| [Thursday 03 June 2010] [05:47:29] <sustrik>    if so, it would make sense to link it from zeromq.org site
| [Thursday 03 June 2010] [05:48:02] <sustrik>    webserver<->application server communication is a thing many people would love to use
| [Thursday 03 June 2010] [05:54:12] <versificateur>  of course... and i think it has a lot of sens in a JSON-like oriented data consumption world
| [Thursday 03 June 2010] [06:05:31] <sustrik>    ack
| [Thursday 03 June 2010] [06:06:28] <sustrik>    so if you go open source just ping me and i'll link to your project
| [Thursday 03 June 2010] [07:31:52] <umesh>  I wan to send multicast messages using zeromq 
| [Thursday 03 June 2010] [07:32:06] <umesh>  I wrote the sample code for send and recv 
| [Thursday 03 June 2010] [07:32:18] <umesh>  namely mc_send and mc_recv
| [Thursday 03 June 2010] [07:32:33] <umesh>  first I run mc_recv and then mc_send ...
| [Thursday 03 June 2010] [07:32:57] <umesh>  but message is sent properly from mc_send ... but not received in mc_recv
| [Thursday 03 June 2010] [07:33:27] <umesh>  then I add the delay of 15 seconds in mc_send between zmq_connect and zmq_send api
| [Thursday 03 June 2010] [07:33:41] <umesh>  then mc_recv the message correctly ...
| [Thursday 03 June 2010] [07:34:01] <umesh>  can anyone tell me why this delay of x seconds is required 
| [Thursday 03 June 2010] [07:34:36] <guido_g>    the message is put into the mq io-thread, which runs asynchronoulsly to the main thread
| [Thursday 03 June 2010] [07:34:59] <sustrik>    yea, but the receiver is run first
| [Thursday 03 June 2010] [07:35:05] <guido_g>    so if the main thread exits, the io-thread is terminated and therefore nothing is sent
| [Thursday 03 June 2010] [07:35:12] <sustrik>    ah
| [Thursday 03 June 2010] [07:35:27]   * sustrik forgot :)
| [Thursday 03 June 2010] [07:35:52] <sustrik>    umesh: that may be the problem
| [Thursday 03 June 2010] [07:36:07] <umesh>  guido_g : ok got ...
| [Thursday 03 June 2010] [07:36:14] <sustrik>    the 15 sec slep before send may not be required
| [Thursday 03 June 2010] [07:36:16] <guido_g>    it's sort of *the* standard problem
| [Thursday 03 June 2010] [07:36:21] <sustrik>    try sleeping after the send
| [Thursday 03 June 2010] [07:36:34] <umesh>  then is there any way to avoid the sleep ...
| [Thursday 03 June 2010] [07:36:36] <sustrik>    is it in faq?
| [Thursday 03 June 2010] [07:36:49] <guido_g>    don't know
| [Thursday 03 June 2010] [07:36:53] <sustrik>    umesh: sending in loop
| [Thursday 03 June 2010] [07:37:03] <umesh>  means how i can do io-thread synchronously ...
| [Thursday 03 June 2010] [07:37:15] <sustrik>    0mq is async
| [Thursday 03 June 2010] [07:37:25] <sustrik>    you can try using openpgm directly
| [Thursday 03 June 2010] [07:37:48] <umesh>  i want to do it using zeromq ..
| [Thursday 03 June 2010] [07:38:56] <sustrik>    sorry, it's inherently async (that's what MQ means = message queueing)
| [Thursday 03 June 2010] [07:39:16] <guido_g>    sustrik: nope, it's not in the faq
| [Thursday 03 June 2010] [07:39:17] <sustrik>    guido_g: no mention of it in FAQ
| [Thursday 03 June 2010] [07:39:20] <sustrik>    :)
| [Thursday 03 June 2010] [07:39:21] <guido_g>    :)
| [Thursday 03 June 2010] [07:39:27] <umesh>  one more question : does zeromq send the more than one packter for multicast ?
| [Thursday 03 June 2010] [07:39:44] <sustrik>    packet?
| [Thursday 03 June 2010] [07:40:12] <sustrik>    guido_g: let's think of a faq question...
| [Thursday 03 June 2010] [07:40:15] <umesh>  I am asking this because : when I have no sleep and no messages received ... I still can see some multicast messages in wireshark ...
| [Thursday 03 June 2010] [07:40:39] <sustrik>    those are SPM's right?
| [Thursday 03 June 2010] [07:40:51] <sustrik>    (check the details in wireshark)
| [Thursday 03 June 2010] [07:41:44] <umesh>  SPM means  ?
| [Thursday 03 June 2010] [07:41:52] <sustrik>    type of PGM packet
| [Thursday 03 June 2010] [07:42:13] <guido_g>    the protocol used to control the message flow
| [Thursday 03 June 2010] [07:42:23] <guido_g>    like the special packtes used by tcp
| [Thursday 03 June 2010] [07:42:46] <sustrik>    yesh, there are packets like SPM/NACK/NCF/ODATA/RDATA...
| [Thursday 03 June 2010] [07:43:19] <umesh>  ok
| [Thursday 03 June 2010] [07:43:55] <umesh>  how we can decide these are SPM packtes ? because wireshark does not tell anything related to SPM ...
| [Thursday 03 June 2010] [07:44:02] <sustrik>    guido_g: what avout thisL
| [Thursday 03 June 2010] [07:44:03] <sustrik>    "I send a message to PUB socket, then I quit. The message does not appear at the connected SUB socket. What's wrong?"
| [Thursday 03 June 2010] [07:44:08] <umesh>  like it does for TCP ACK/FIN etc ...
| [Thursday 03 June 2010] [07:44:17] <sustrik>    it should
| [Thursday 03 June 2010] [07:44:29] <sustrik>    PGM dissector is part of wireshark out-of-the-box
| [Thursday 03 June 2010] [07:44:40] <sustrik>    what does it say?
| [Thursday 03 June 2010] [07:44:57] <guido_g>    sustrik: ok, maybe  adding "using pgm/epgm"
| [Thursday 03 June 2010] [07:45:00] <sustrik>    umesh: ah, you are using epgm?
| [Thursday 03 June 2010] [07:45:10] <umesh>  yup
| [Thursday 03 June 2010] [07:45:16] <sustrik>    guido_g: it can happen with tcp as well
| [Thursday 03 June 2010] [07:45:40] <sustrik>    umesh: ah, that's encapsulated PGM, wireshark can dissect that
| [Thursday 03 June 2010] [07:45:42] <sustrik>    try using pgm
| [Thursday 03 June 2010] [07:45:47] <guido_g>    oh well, yes
| [Thursday 03 June 2010] [07:45:55] <sustrik>    (you'll have to run your apps as root)
| [Thursday 03 June 2010] [07:46:02] <guido_g>    i constantly forget that pub/sun is possible via tcp as well :)
| [Thursday 03 June 2010] [07:46:02] <umesh>  ok
| [Thursday 03 June 2010] [07:46:18] <sustrik>    what should the answer be?
| [Thursday 03 June 2010] [07:46:23] <umesh>  but does pgm or epgm has anything to do to related to sleep issue ?
| [Thursday 03 June 2010] [07:46:33] <guido_g>    no
| [Thursday 03 June 2010] [07:46:35] <sustrik>    no, it's the same thing
| [Thursday 03 June 2010] [07:46:36] <umesh>  or it will behave same for both pgm and epgm ?
| [Thursday 03 June 2010] [07:46:38] <sustrik>    almost
| [Thursday 03 June 2010] [07:46:40] <umesh>  ok
| [Thursday 03 June 2010] [07:46:58] <guido_g>    sustrik: what are differences (for mq usage)?
| [Thursday 03 June 2010] [07:47:16] <sustrik>    epgm doesn't have to be run as root
| [Thursday 03 June 2010] [07:47:23] <sustrik>    it's not a standard though
| [Thursday 03 June 2010] [07:47:38] <sustrik>    pgm has to be run as root but it's a standard (RFC3208)
| [Thursday 03 June 2010] [07:48:20] <sustrik>    the consequence, for example, is that wireshark can parse pgm but not epgm
| [Thursday 03 June 2010] [07:48:26] <guido_g>    or with the capabilities set, if you're not root :)
| [Thursday 03 June 2010] [07:48:31] <sustrik>    right
| [Thursday 03 June 2010] [07:49:18] <umesh>  (process:27705): Pgm-WARNING **: PGM protocol requires CAP_NET_RAW capability, e.g. sudo execcap 'cap_net_raw=ep'
| [Thursday 03 June 2010] [07:49:33] <umesh>  this error i am getting when I use pgm instead of epm ...
| [Thursday 03 June 2010] [07:49:33] <sustrik>    "yes
| [Thursday 03 June 2010] [07:49:44] <sustrik>    are you running it as root?
| [Thursday 03 June 2010] [07:49:55] <umesh>  i are run as root ... then no error 
| [Thursday 03 June 2010] [07:50:21] <sustrik>    the whole point is that PGM is defined to be stacked on top of IP directly
| [Thursday 03 June 2010] [07:50:28] <sustrik>    same way as TCP or UDP is
| [Thursday 03 June 2010] [07:50:51] <sustrik>    so the user-space implementation has to use raw IP sockets to implement it
| [Thursday 03 June 2010] [07:51:01] <umesh>  ok .. now its showing spm in wire shark
| [Thursday 03 June 2010] [07:51:03] <sustrik>    but these can be used only be root
| [Thursday 03 June 2010] [07:51:08] <sustrik>    ok
| [Thursday 03 June 2010] [07:51:14] <sustrik>    spm is like a heartbeat
| [Thursday 03 June 2010] [07:51:17] <sustrik>    more or less
| [Thursday 03 June 2010] [07:51:27] <sustrik>    so what happens is that you start the publisher
| [Thursday 03 June 2010] [07:51:32] <sustrik>    and sleep for 15 secs
| [Thursday 03 June 2010] [07:51:53] <sustrik>    during those 15 secs, publisher is sending SPMs once in a while
| [Thursday 03 June 2010] [07:52:02] <sustrik>    everything works as expected
| [Thursday 03 June 2010] [07:52:07] <sustrik>    then you send a message
| [Thursday 03 June 2010] [07:52:25] <sustrik>    but before it gets to the wire you shut down the publisher
| [Thursday 03 June 2010] [07:52:43] <sustrik>    that's it
| [Thursday 03 June 2010] [07:54:01] <umesh>  also this 15s is not predictable time 
| [Thursday 03 June 2010] [07:54:15] <umesh>  some time it can be more or sometime it can be less ...
| [Thursday 03 June 2010] [07:54:26] <sustrik>    it's your code, no?
| [Thursday 03 June 2010] [07:54:30] <umesh>  so what can be the ideal solution to avoid 15 s or sleep 
| [Thursday 03 June 2010] [07:54:30] <sustrik>    sleep (15);
| [Thursday 03 June 2010] [07:54:49] <sustrik>    drop the 15 sec sleep, it's not needed
| [Thursday 03 June 2010] [07:55:03] <sustrik>    what you need to do is to sleep _after_ you send the message
| [Thursday 03 June 2010] [07:55:14] <sustrik>    so the publisher has some time to push the message to the wire
| [Thursday 03 June 2010] [07:55:20] <umesh>  for how much time ?
| [Thursday 03 June 2010] [07:55:22] <umesh>  ok 
| [Thursday 03 June 2010] [07:55:25] <sustrik>    1 ms
| [Thursday 03 June 2010] [07:55:30] <sustrik>    or something
| [Thursday 03 June 2010] [07:55:37] <umesh>  got so even 1 ms will also work ... right eor even less ...
| [Thursday 03 June 2010] [07:55:53] <umesh>  eor* = or 
| [Thursday 03 June 2010] [07:55:54] <umesh>  ok
| [Thursday 03 June 2010] [07:55:56] <umesh>  got
| [Thursday 03 June 2010] [07:55:57] <sustrik>    the latency is in orders of microseconds
| [Thursday 03 June 2010] [07:56:12] <sustrik>    so millisecond should be more than enough
| [Thursday 03 June 2010] [07:58:35] <umesh>  even i micro seconds is also working now ...
| [Thursday 03 June 2010] [07:59:26] <umesh>  also more question ... are REQ/REPLY type of sockets in 0mq syncronous ?
| [Thursday 03 June 2010] [07:59:47] <umesh>  because I haven't seen this issue of sleep for that ...
| [Thursday 03 June 2010] [08:00:21] <sustrik>    they are not, but you cannot experience the problem simply because you wait for reply
| [Thursday 03 June 2010] [08:00:29] <sustrik>    so you cannot quit before the request was sent
| [Thursday 03 June 2010] [08:10:15] <umesh>  ok
| [Thursday 03 June 2010] [08:23:50] <lvh>    What's the recommended thing for debian stable packages?
| [Thursday 03 June 2010] [08:27:06] <mato>   sustrik: ping
| [Thursday 03 June 2010] [08:27:16] <lvh>    I'll compile it if I have to
| [Thursday 03 June 2010] [08:27:17] <mato>   sustrik: will the following do for an update of zmq_tcp(7) for 2.0.7?
| [Thursday 03 June 2010] [08:27:24] <mato>   The flags field consists of a single octet containing various control flags:
| [Thursday 03 June 2010] [08:27:24] <mato>   Bit 0: To Be Continued (TBC). A TBC value of 0 indicates that there are no more message parts to follow; or that the message being sent is not a multi-part message. A TBC value of 1 indicates that the message being sent is a multi-part message and more message parts are to follow.
| [Thursday 03 June 2010] [08:27:30] <mato>   Bits 1-7: Reserved. Bits 1-7 are reserved for future expansion and MUST be set to zero.
| [Thursday 03 June 2010] [08:27:57] <mato>   or do you want to actually explain it in more detail?
| [Thursday 03 June 2010] [08:28:31] <mato>   oh, and of course we can call it MORE if that's the canonical name, I just liked "TBC"
| [Thursday 03 June 2010] [08:37:12] <mato>   sustrik: are you there?
| [Thursday 03 June 2010] [08:50:29] <versificateur>  hi i've a problem again 
| [Thursday 03 June 2010] [08:51:00] <versificateur>  http://pastebin.com/QZJ672jT
| [Thursday 03 June 2010] [08:53:35] <versificateur>  i've this error -> Assertion failed: !inpipe && !outpipe (pair.cpp:47)
| [Thursday 03 June 2010] [08:55:08] <versificateur>  following the muttithread server sustrik wrote i tried to pass a SUBCRIBER message to a thread of P2P
| [Thursday 03 June 2010] [08:55:27] <versificateur>  but it seems that inproc doesn't accept P2P
| [Thursday 03 June 2010] [08:55:53] <versificateur>  if anyone has an idea ...???
| [Thursday 03 June 2010] [11:23:21] <versificateur>  is there anyone tohelp me?
| [Thursday 03 June 2010] [11:42:04] <cremes> versificateur: i'm not as fluent in C as i used to be, so keep that in mind...
| [Thursday 03 June 2010] [11:42:13] <cremes> lines 71 and 77 look wrong to me
| [Thursday 03 June 2010] [11:42:24] <cremes> i don't think you can use P2P/PAIR sockets with the queue device
| [Thursday 03 June 2010] [11:42:45] <cremes> i think you need to make your clients use REQ and your workers use REP sockets
| [Thursday 03 June 2010] [15:22:43] <sustrik>    mato: the text is OK IMO
| [Thursday 03 June 2010] [15:23:06] <sustrik>    MORE is used now, TBC sounded too much like a contagious disease
| [Thursday 03 June 2010] [16:13:02] <sustrik>    mato: would it be possible to remove pgm examples from the build system?
| [Thursday 03 June 2010] [18:15:01] <CIA-17> rbzmq: 03Brian Buchanan 07master * r72d81eb 10/ rbzmq.cpp : add ZMQ.select() wrapper for zmq_poll() function (+6 more commits...) - http://bit.ly/chNoHH
| 
| *** Logfile started
| *** on Fri Jun 4 03:05:54 2010
| 
| [Friday 04 June 2010] [03:38:54] <lvh>  Hey.
| [Friday 04 June 2010] [03:39:06] <lvh>  What's the reccomended way to get ZeroMQ running on Debian stable?
| [Friday 04 June 2010] [03:39:30] <lvh>  I've tried manually downloading the libzmq0/zeromq packages, but they require a version of libuuid1 much higher than that in Debian 5.0.
| [Friday 04 June 2010] [03:39:54] <lvh>  Upgrade to testing?
| [Friday 04 June 2010] [04:09:07] <pieterh>  @lvh: grab the git and build from source
| [Friday 04 June 2010] [04:18:21] <lvh>  git master, or some other branch?
| [Friday 04 June 2010] [04:23:32] <sustrik>  lvh: depends on what you want
| [Friday 04 June 2010] [04:23:44] <sustrik>  officially released version is on branch 2.06
| [Friday 04 June 2010] [04:24:01] <sustrik>  trunk is going to be released shortly as version 2.0.7
| [Friday 04 June 2010] [04:44:04] <lvh>  So, for production use, just use the latest release branch. Okay, thanks :-)
| [Friday 04 June 2010] [04:50:51] <sustrik>  you are welcome
| [Friday 04 June 2010] [06:58:20] <mato> re
| [Friday 04 June 2010] [06:58:34] <mato> sustrik: ack, ok, so MORE instead of TBC, you're right
| [Friday 04 June 2010] [06:58:54] <mato> sustrik: and as for the pgm examples, i'll happily remove those
| [Friday 04 June 2010] [07:38:11] <jugg> does multiple duplicate ZMQ_SUBSCRIBE keep a reference count and require ZMQ_UNSUBSCRIBE for each duplicate subscription?
| [Friday 04 June 2010] [07:46:15] <mato> it's in the doc for ZMQ_UNSUBSCRIBE:
| [Friday 04 June 2010] [07:46:21] <mato> If the socket has several instances of the same filter attached the ZMQ_UNSUBSCRIBE option shall remove only one instance, leaving the rest in place and functional.
| [Friday 04 June 2010] [08:14:50] <jugg> mato: somehow I missed that (I have no idea how).  thanks.
| [Friday 04 June 2010] [08:41:50] <sustrik>  mato: re
| [Friday 04 June 2010] [08:42:21] <mato> sustrik: hi
| [Friday 04 June 2010] [08:42:27] <sustrik>  hi
| [Friday 04 June 2010] [08:42:43] <mato> i have a problem with the helpers in that they need uint64_t, or long long
| [Friday 04 June 2010] [08:43:00] <mato> if i use long long C++ complains that it's not part of the standard :-(
| [Friday 04 June 2010] [08:43:19] <sustrik>  yes, include stdint.hpp
| [Friday 04 June 2010] [08:43:29] <sustrik>  it's ugly but it should work
| [Friday 04 June 2010] [08:43:34] <sustrik>  both under gcc and nsvc
| [Friday 04 June 2010] [08:43:36] <sustrik>  msvc
| [Friday 04 June 2010] [08:50:32] <mato> sustrik: zmqd annoys me, i don't think it should be in the 2.0.7 release at all
| [Friday 04 June 2010] [08:51:05] <sustrik>  you would like to remove it from the trunk?
| [Friday 04 June 2010] [08:51:26] <sustrik>  isn't it sufficient to just left it undocumented?
| [Friday 04 June 2010] [08:51:40] <mato> people will see that this "zmqd" thing is being built
| [Friday 04 June 2010] [08:51:44] <mato> and will get the wrong idea
| [Friday 04 June 2010] [08:52:08] <sustrik>  it has to get in once anyway
| [Friday 04 June 2010] [08:52:19] <sustrik>  either now or later
| [Friday 04 June 2010] [08:52:19] <mato> sustrik: d'you think we could remove it, make the release and then put it back? :-)
| [Friday 04 June 2010] [08:52:51] <mato> sustrik: or at least move it under devices/ and call it zmq_device or something vague like that
| [Friday 04 June 2010] [08:52:53] <sustrik>  if you care so much as to do the work, i won't object
| [Friday 04 June 2010] [08:53:19] <mato> sustrik: i'll do it, but what about the above option?
| [Friday 04 June 2010] [08:53:35] <mato> what is better?
| [Friday 04 June 2010] [08:53:41] <sustrik>  what would be the point?
| [Friday 04 June 2010] [08:53:48] <sustrik>  either leave it or remove it
| [Friday 04 June 2010] [08:53:54] <sustrik>  shrug
| [Friday 04 June 2010] [08:54:48] <mato> well the point is it should replace the existing devices...
| [Friday 04 June 2010] [08:55:20] <mato> the current situation will just confuse people
| [Friday 04 June 2010] [08:55:25] <mato> so let's remove it now
| [Friday 04 June 2010] [08:55:29] <mato> and put it back later
| [Friday 04 June 2010] [08:55:30] <mato> sustrik: ack?
| [Friday 04 June 2010] [08:55:44] <sustrik>  ack
| [Friday 04 June 2010] [09:01:14] <CIA-17>   zeromq2: 03Martin Lucina 07master * rd844a90 10/ (Makefile.am configure.in zmqd/Makefile.am zmqd/zmqd.cpp): zmqd: Removing for now, not ready for 2.0.7 (+6 more commits...) - http://bit.ly/9iefIH
| [Friday 04 June 2010] [09:08:11] <mato> sustrik: ok, all done and committed
| [Friday 04 June 2010] [09:08:16] <mato> sustrik: time to start breaking stuff
| [Friday 04 June 2010] [09:08:34] <sustrik>  ok
| [Friday 04 June 2010] [09:08:46] <sustrik>  let me remove the args from zmq_init
| [Friday 04 June 2010] [09:09:11] <mato> you do that, and remove all the deprecated stuff from zmq.h
| [Friday 04 June 2010] [09:09:21] <mato> and don't forget to update the perf tests
| [Friday 04 June 2010] [09:09:29] <sustrik>  and devices
| [Friday 04 June 2010] [09:09:31] <sustrik>  yes
| [Friday 04 June 2010] [09:24:20] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r67ca7dc 10/ (10 files in 6 dirs): obsolete API elements removed - this commit breaks backward compatibility - http://bit.ly/cLVjTO
| [Friday 04 June 2010] [09:24:25] <sustrik>  mato: done
| [Friday 04 June 2010] [09:24:30] <sustrik>  going to check on win32
| [Friday 04 June 2010] [09:24:46] <mato> sustrik: yup, i will check here on Linux, Solaris, NetBSD
| [Friday 04 June 2010] [09:35:50] <CIA-17>   zeromq2: 03Martin Lucina 07master * r621d741 10/ src/atomic_ptr.hpp : Fix Solaris/NetBSD breakage in atomic_ptr.hpp - http://bit.ly/c24C6Q
| [Friday 04 June 2010] [09:47:43] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r9279938 10/ (6 files in 6 dirs): MSVC build fixed - http://bit.ly/aNzO1F
| [Friday 04 June 2010] [09:50:59] <sustrik>  mato: msvc build is fixed
| [Friday 04 June 2010] [09:51:04] <mato> sustrik: great
| [Friday 04 June 2010] [09:51:09] <sustrik>  however, i believe it braks mingw build
| [Friday 04 June 2010] [09:51:15] <mato> why?
| [Friday 04 June 2010] [09:51:32] <sustrik>  i would expect some include files will be missing
| [Friday 04 June 2010] [09:51:46] <mato> huh?
| [Friday 04 June 2010] [09:52:06] <sustrik>  msvc build uses it's own platform.hpp
| [Friday 04 June 2010] [09:52:16] <sustrik>  which includes win socket headers
| [Friday 04 June 2010] [09:52:32] <sustrik>  this collided with #include <windows.h> in helpers.cpp
| [Friday 04 June 2010] [09:52:34] <sustrik>  so i removed it
| [Friday 04 June 2010] [09:52:51] <sustrik>  however, afaiu mingw build uses standard platform.hpp
| [Friday 04 June 2010] [09:52:54] <mato> can windows.h not be included 2x?
| [Friday 04 June 2010] [09:53:25] <sustrik>  iirc the point in that winsock has to be included _before_ windows.h
| [Friday 04 June 2010] [09:54:00] <mato> i have no idea how a "plain" mingw build works
| [Friday 04 June 2010] [09:54:08] <sustrik>  neither do i
| [Friday 04 June 2010] [09:54:15] <mato> and i suspect that no one does that, or if they do, we've never supported it explicity
| [Friday 04 June 2010] [09:54:33] <sustrik>  what about your win build?
| [Friday 04 June 2010] [09:54:48] <mato> given that a cross-build using mingw does work, then i see no reason for a native one not to
| [Friday 04 June 2010] [09:55:05] <mato> but yes, i should re-check that the cross build still works
| [Friday 04 June 2010] [09:55:10] <sustrik>  please, do
| [Friday 04 June 2010] [09:55:17] <sustrik>  i've changed the source
| [Friday 04 June 2010] [09:55:47] <mato> sustrik: in fact, maybe helpers.h should just include platform.hpp from ../src
| [Friday 04 June 2010] [09:55:54] <mato> would that work for msvc?
| [Friday 04 June 2010] [09:56:01] <sustrik>  i suppose so
| [Friday 04 June 2010] [09:56:53] <sustrik>  ok, change it that way and I retest with MSVC
| [Friday 04 June 2010] [09:57:58] <mato> sustrik: why did you change the snprintf in xmlParser back to sprintf?
| [Friday 04 June 2010] [09:58:40] <mato> sustrik: hang on
| [Friday 04 June 2010] [09:58:54] <mato> sustrik: why do you care about whether or not helpers.hpp includes windows.h?
| [Friday 04 June 2010] [09:58:59] <sustrik>  no snprintf in msvc
| [Friday 04 June 2010] [09:59:19] <sustrik>  because it breaks the build
| [Friday 04 June 2010] [09:59:28] <mato> i don't understand why
| [Friday 04 June 2010] [09:59:35] <mato> the perf tests do not use winsock
| [Friday 04 June 2010] [09:59:55] <sustrik>  but you'll get conflicts
| [Friday 04 June 2010] [10:00:03] <sustrik>  redefinition of symbols
| [Friday 04 June 2010] [10:00:15] <lvh>  Hey! I wanted to get Twisted support for 0MQ a while ago but that kind of fizzled out due to a combination of health problems and technical issues nobody agreed on. I'm going to try again because I think 0MQ support in Twisted would be good for both 0MQ and Twisted (duh). What I think was the critical point of failure was that the interested ZMQ folks didn't really understand Twisted's gory guts and vice versa (Twisted people not
| [Friday 04 June 2010] [10:00:15] <lvh>  understanding what ZMQ really wanted to do). I'm going to reopen the discussion on the Twisted side, but step one is educating people on just how ZMQ (wants to) work. Is there someone who could do a quick (less than 5m) review of the email I'm going to send to the TWisted mailing list to figure out if there are any grave technical mistakes in my understanding of ZMQ?
| [Friday 04 June 2010] [10:00:23] <lvh>  Wow, that was longer than I thought it was.
| [Friday 04 June 2010] [10:00:35] <mato> lvh: maybe it belongs on the mailing list? :-)
| [Friday 04 June 2010] [10:01:01] <lvh>  Which one?
| [Friday 04 June 2010] [10:01:06] <sustrik>  zeromq-dev
| [Friday 04 June 2010] [10:01:10] <sustrik>  i'll review it
| [Friday 04 June 2010] [10:01:17] <mato> sustrik: ah, you get these because stdint.hpp includes platform.hpp, which includes windows.h
| [Friday 04 June 2010] [10:01:17] <sustrik>  others may comment as well
| [Friday 04 June 2010] [10:01:20] <mato> sustrik: right?
| [Friday 04 June 2010] [10:01:24] <sustrik>  mato: right
| [Friday 04 June 2010] [10:01:40] <lvh>  sustrik: Good idea. I'll polish it up some more and then mail zeromq-dev :-)
| [Friday 04 June 2010] [10:01:42] <sustrik>  but i am sure the ordering also matters
| [Friday 04 June 2010] [10:01:51] <sustrik>  lvh: goodo
| [Friday 04 June 2010] [10:02:40] <mato> grr
| [Friday 04 June 2010] [10:02:52] <sustrik>  something like:
| [Friday 04 June 2010] [10:02:59] <sustrik>  #include <windows.h>
| [Friday 04 June 2010] [10:03:05] <sustrik>  #include <winsock2.h>
| [Friday 04 June 2010] [10:03:07] <sustrik>  fail
| [Friday 04 June 2010] [10:03:12] <sustrik>  other way round it's ok
| [Friday 04 June 2010] [10:03:21] <sustrik>  i may be wrong though
| [Friday 04 June 2010] [10:03:36] <sustrik>  it's just a dim memory of this kind of problem
| [Friday 04 June 2010] [10:03:36] <mato> i think you're doing the wrong thing with the msvc platform.hpp
| [Friday 04 June 2010] [10:03:43] <sustrik>  ?
| [Friday 04 June 2010] [10:03:47] <mato> it should not be including windows.h IMO
| [Friday 04 June 2010] [10:04:05] <sustrik>  what would you propose?
| [Friday 04 June 2010] [10:04:45] <mato> i would propose that winsock2.h and windows.h are included inside ifdefs by those components that actually use them
| [Friday 04 June 2010] [10:04:54] <mato> since that is what you're doing with all other system headers
| [Friday 04 June 2010] [10:04:58] <sustrik>  hm, that's lot of files
| [Friday 04 June 2010] [10:05:09] <sustrik>  but yes, it can work that way
| [Friday 04 June 2010] [10:05:21] <mato> yes, but that is consistent with all other platforms
| [Friday 04 June 2010] [10:05:25] <sustrik>  right
| [Friday 04 June 2010] [10:05:27] <sustrik>  let me do it
| [Friday 04 June 2010] [10:05:35] <sustrik>  see you in 10 mins
| [Friday 04 June 2010] [10:05:43] <mato> just stick it inside #ifdef _WIN32
| [Friday 04 June 2010] [10:05:45]     * sustrik is moving to winworld
| [Friday 04 June 2010] [10:10:41] <guido_g>  poor boy :)
| [Friday 04 June 2010] [10:30:11] <CIA-17>   zeromq2: 03Martin Sustrik 07master * rcf048bb 10/ (8 files in 3 dirs): platform.hpp for MSVC contains only very basic stuff - http://bit.ly/aLcqx0
| [Friday 04 June 2010] [10:31:56] <sustrik>  mato: done, try now
| [Friday 04 June 2010] [10:33:48] <mato> sustrik: trying...
| [Friday 04 June 2010] [10:36:50] <mato> sustrik: well, at least you haven't broken it on linux :)
| [Friday 04 June 2010] [10:38:01] <sustrik>  :)
| [Friday 04 June 2010] [10:42:16] <mato> sustrik: i get a bunch of warnings from the cross build about NOMINMAX being redefined in windows.hpp, those weren't there before
| [Friday 04 June 2010] [10:43:16] <sustrik>  try to fix it :)
| [Friday 04 June 2010] [10:43:33] <mato> what is NOMINMAX?
| [Friday 04 June 2010] [10:43:47] <sustrik>  this is exactly why i haven't dared to mess with helper functions :)
| [Friday 04 June 2010] [10:43:58] <sustrik>  windows defines it's own min and max
| [Friday 04 June 2010] [10:44:00] <sustrik>  as macros
| [Friday 04 June 2010] [10:44:10] <sustrik>  those collide with std::min and std::max
| [Friday 04 June 2010] [10:44:22] <sustrik>  so what you do is you define NOMINMAX
| [Friday 04 June 2010] [10:44:28] <sustrik>  then include windows.h
| [Friday 04 June 2010] [10:44:32] <mato> maybe it just needs a #ifndef NOMINMAX, #define 
| [Friday 04 June 2010] [10:44:36] <mato> let me try that
| [Friday 04 June 2010] [10:44:45] <sustrik>  this prevents definition of windows' min & max
| [Friday 04 June 2010] [10:46:52] <jugg> I have a REQ socket connected to an endpoint.  I send a message, and then wait in recv().  However, if the REP socket bound to the endpoint receives the message but dies/disconnects before sending the response, the REQ socket sits forever in recv() and never returns creating a dead lock.  Because when the REP socket comes back online, it doesn't have an requests in its queue so never sends a reply.
| [Friday 04 June 2010] [10:47:26] <sustrik>  jugg: yes, that's a known problem
| [Friday 04 June 2010] [10:47:39] <sustrik>  we are going to fix that by resending the request
| [Friday 04 June 2010] [10:48:14] <sustrik>  at the moment the only thing you can do to avoid it is to poll for reply (zmq_poll + timeout)
| [Friday 04 June 2010] [10:48:38] <sustrik>  when reply doesn't arrive in time just consider it lost and resend
| [Friday 04 June 2010] [10:48:50] <sustrik>  however, all this should be done inside 0mq
| [Friday 04 June 2010] [10:49:09] <sustrik>  it will, but it'll take some more time to get there
| [Friday 04 June 2010] [10:49:45] <jugg> ok, so a near-term fix isn't to be expected?
| [Friday 04 June 2010] [10:50:31] <sustrik>  mato: i would say you are going to implement it, within the scope of your current project, no?
| [Friday 04 June 2010] [10:50:50] <mato> sustrik: guess so
| [Friday 04 June 2010] [10:51:09]     * mato is fighting with the cross-build which is all broken :(
| [Friday 04 June 2010] [10:52:11] <sustrik>  jugg: looks like fix is to expected in near term
| [Friday 04 June 2010] [10:52:23] <jugg> :)
| [Friday 04 June 2010] [10:55:33] <mato> ah, my bad for not using the correct magic incantation
| [Friday 04 June 2010] [11:02:57] <CIA-17>   zeromq2: 03Martin Lucina 07master * r94dfe13 10/ src/windows.hpp : 
| [Friday 04 June 2010] [11:02:57] <CIA-17>   zeromq2: Fix MINGW build
| [Friday 04 June 2010] [11:02:57] <CIA-17>   zeromq2: Mingw seems to define NOMINMAX, so don't redefine it if already defined - http://bit.ly/9k7J9l
| [Friday 04 June 2010] [11:03:31] <mato> sustrik: ok, the cross build almost works; requires hand-patching a pgm include file because steven messed up, but i guess we don't care about that right now
| [Friday 04 June 2010] [11:03:47] <mato> sustrik: and AFAIK steven doesn't care about v2 of openpgm anyway
| [Friday 04 June 2010] [11:04:09] <mato> i just looked and he seems to be developing a version 3 *and* a version 5 :-)
| [Friday 04 June 2010] [11:04:36] <sustrik>  yes, ok
| [Friday 04 June 2010] [11:04:46] <sustrik>  what next?
| [Friday 04 June 2010] [11:05:01] <mato> let me think
| [Friday 04 June 2010] [11:05:12] <mato> 1. write up a draft of the release announcement
| [Friday 04 June 2010] [11:05:34] <mato> 2. put that into NEWS in the distro, moving the non-changelog bits also out of ChangeLog and into NEWS
| [Friday 04 June 2010] [11:06:02] <mato> 3. check that the Debian packaging is sane and put myself in as maintainer
| [Friday 04 June 2010] [11:06:14] <mato> I think that's all; then we can release
| [Friday 04 June 2010] [11:07:24] <sustrik>  ok, i can do 1
| [Friday 04 June 2010] [11:07:29] <mato> yes please
| [Friday 04 June 2010] [11:07:33] <mato> I will do 2 in the mean time
| [Friday 04 June 2010] [11:07:50] <mato> when you have a draft of 1 stick it at the top of NEWS and I'll review it
| [Friday 04 June 2010] [11:07:54] <mato> ack?
| [Friday 04 June 2010] [11:08:48] <sustrik>  ack
| [Friday 04 June 2010] [11:13:14] <CIA-17>   zeromq2: 03Martin Lucina 07master * rbaf659f 10/ (ChangeLog NEWS): Move news from ChangeLog into NEWS - http://bit.ly/dDsRc0
| [Friday 04 June 2010] [11:13:27] <mato> sustrik: look at NEWS, model what you write on the same as is there for 2.0.6
| [Friday 04 June 2010] [11:13:34] <mato> leaving out the bits that don't apply
| [Friday 04 June 2010] [11:44:57] <mato> sustrik: how are you getting on?
| [Friday 04 June 2010] [11:45:25] <mato> sustrik: the debian packaging will have to follow next week, i have a bunch of questions i need to ask adrian
| [Friday 04 June 2010] [11:45:34] <mato> sustrik: since i'm not quite sure that i've got the workflow right
| [Friday 04 June 2010] [11:45:53] <mato> sustrik: so as soon as we have a release announcement we're good to go
| [Friday 04 June 2010] [11:50:55] <sustrik>  on phone
| [Friday 04 June 2010] [11:51:01] <sustrik>  wait a sec
| [Friday 04 June 2010] [11:51:07] <mato> no problem
| [Friday 04 June 2010] [11:59:55] <jugg> http://www.zeromq.org/bindings:c  "C++ binding is the native API of MQ project"  ?
| [Friday 04 June 2010] [12:00:24] <mato> ah, that should be changed
| [Friday 04 June 2010] [12:00:32] <mato> the C API is the "native" API
| [Friday 04 June 2010] [12:00:50] <mato> I think what sustrik meant is that the "C++ binding is included with the core 0MQ distribution"
| [Friday 04 June 2010] [12:01:49] <mato> oh, i see
| [Friday 04 June 2010] [12:01:52] <mato> i'll fix it
| [Friday 04 June 2010] [12:26:15] <sustrik>  mato: re
| [Friday 04 June 2010] [12:26:47] <mato> sustrik: i'm still here...
| [Friday 04 June 2010] [12:27:00] <sustrik>  ok, back to announcement :)
| [Friday 04 June 2010] [12:27:03] <mato> waiting for your draft of what goes in NEWS for 2.0.7
| [Friday 04 June 2010] [12:27:09] <mato> then i will review and add my stuff
| [Friday 04 June 2010] [12:27:13] <sustrik>  ack
| [Friday 04 June 2010] [12:27:44] <sustrik>  what NEWS are you speaking about?
| [Friday 04 June 2010] [12:27:51] <sustrik>  the file seems to be empty
| [Friday 04 June 2010] [12:27:55] <mato> pull git
| [Friday 04 June 2010] [12:28:14] <mato> sustrik: I moved the "interesting" text from ChangeLog into NEWS
| [Friday 04 June 2010] [12:28:26] <mato> leaving the ChangeLog with just... the changes :-)
| [Friday 04 June 2010] [12:28:36] <sustrik>  got it
| [Friday 04 June 2010] [12:31:23] <lvh>  I've sent that mail to zeromq-dev if anyone's interested
| [Friday 04 June 2010] [12:31:40] <lvh>  (but email is an asynchronous process, this is a notification not an interrupt ;-))
| [Friday 04 June 2010] [12:31:49] <sustrik>  mato: pt1
| [Friday 04 June 2010] [12:31:50] <sustrik>  * Multi-hop REQ/REP pattern is fully supprted. This feature allows to put
| [Friday 04 June 2010] [12:31:50] <sustrik>    a device(s) between REP and REP sockets thus allowing for scenarios like
| [Friday 04 June 2010] [12:31:50] <sustrik>    multi-threaded server, shared service queue etc. The whole infrastructure
| [Friday 04 June 2010] [12:31:50] <sustrik>    is transparent to the applications.
| [Friday 04 June 2010] [12:32:27] <lvh>  Huh, I'm not longer a member so I need moderator approval. Wonder how that happened.
| [Friday 04 June 2010] [12:32:37] <sustrik>  lvh: i've approved you
| [Friday 04 June 2010] [12:32:41] <sustrik>  your email
| [Friday 04 June 2010] [12:32:59] <sustrik>  maybe you are subscribed with a different email address?
| [Friday 04 June 2010] [12:33:36] <sustrik>  where's part 1 btw?
| [Friday 04 June 2010] [12:33:38] <lvh>  No, I just checked, for some reason I unsubscribed. No idea why, I don't remember doing that
| [Friday 04 June 2010] [12:33:52] <lvh>  sustrik: Well, that was a month or so back when we were talking about how to implement it
| [Friday 04 June 2010] [12:33:56] <lvh>  that fizzled out
| [Friday 04 June 2010] [12:33:59] <sustrik>  ah, i see
| [Friday 04 June 2010] [12:34:04] <mato> sustrik: write it all up, put it in git, i will review it there
| [Friday 04 June 2010] [12:34:04] <lvh>  so it should really be "try 2" not "part 2"
| [Friday 04 June 2010] [12:34:13] <mato> sustrik: pizza has just arrived, am going to eat, brb
| [Friday 04 June 2010] [12:34:13] <sustrik>  mato: ok
| [Friday 04 June 2010] [12:34:33] <lvh>  Whaaa? now mailman is telling me the confirmation string is bad
| [Friday 04 June 2010] [12:34:52] <lvh>  Oh, wiat, never mind, I'm just being an idiot.
| [Friday 04 June 2010] [12:35:01] <sustrik>  :)
| [Friday 04 June 2010] [12:35:55] <jugg> is there any benefits/tradeoffs documentation/discussion on io_threads?
| [Friday 04 June 2010] [12:36:37] <lvh>  I don't know ZMQ but I know the mechanics it uses
| [Friday 04 June 2010] [12:36:56] <lvh>  I really don't see why you would ever want 2 io_threads unless you can somehow shove long-term blocking disk io into the io thread
| [Friday 04 June 2010] [12:37:30] <lvh>  which afaik doesn't happen very often (does it?)
| [Friday 04 June 2010] [12:37:42] <sustrik>  lvh: two possibilities
| [Friday 04 June 2010] [12:37:54] <sustrik>  1. if your app is extremely network I/O intensive
| [Friday 04 June 2010] [12:38:07] <sustrik>  2. if you need extra low latency
| [Friday 04 June 2010] [12:38:15] <lvh>  I can sort-of understand 2
| [Friday 04 June 2010] [12:38:27] <lvh>  I don't understand why eg epoll would start behaving better for 1
| [Friday 04 June 2010] [12:38:36] <sustrik>  in latter case running i/o threads on two different cpu cores can prevent latency peaks
| [Friday 04 June 2010] [12:38:51] <lvh>  yep
| [Friday 04 June 2010] [12:38:57] <sustrik>  it's not about epoll
| [Friday 04 June 2010] [12:39:13] <lvh>  It's about 1 CPU moving stuff around vs 2 CPUs doing that?
| [Friday 04 June 2010] [12:39:19] <sustrik>  rather about the associated work (such as copying data from kernel to user space)
| [Friday 04 June 2010] [12:39:24] <lvh>  right
| [Friday 04 June 2010] [12:39:37] <lvh>  I guess, I haven't done the benchmarks and I'm assuming you have :)
| [Friday 04 June 2010] [12:39:44] <sustrik>  yes :)
| [Friday 04 June 2010] [12:40:05] <lvh>  is there a way to shove blocking disk IO into the io thread in zmq?
| [Friday 04 June 2010] [12:40:09] <lvh>  I mean a *sane* way.
| [Friday 04 June 2010] [12:41:46] <lvh>  Oh, by the way: how does "Is fully distributed: no central servers to crash, millions of WAN and LAN nodes." apply to things like zmq_forwarder/zmq_queue? AFAICT it doesn't, really?
| [Friday 04 June 2010] [12:42:03] <lvh>  My use case involves decoupling M producers from N consumers. That's what we use AMQP for now.
| [Friday 04 June 2010] [12:45:58] <lvh>  (The three things blocking us from moving to ZeroMQ at the moment are: it doesn't do Twisted yet, Thrift support uncertain for a lot of implementations (even though that's more of a Thrift problem than a ZeroMQ problem), and reliable delivery is a bit hazy)
| [Friday 04 June 2010] [12:50:07] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r9b8f902 10/ NEWS : initial version of 2.0.7 NEWS - http://bit.ly/a8mp7Z
| [Friday 04 June 2010] [12:50:23] <sustrik>  mato: committed "new features" and "interface"
| [Friday 04 June 2010] [12:50:35] <sustrik>  i'll leave "build" part to you
| [Friday 04 June 2010] [12:51:14] <sustrik>  lvh: yes, forwarder/queue is meant
| [Friday 04 June 2010] [12:51:30] <mato> sustrik: ok, going to look at it now
| [Friday 04 June 2010] [12:51:38] <sustrik>  these are not real "central servers"
| [Friday 04 June 2010] [12:51:42] <sustrik>  rather dumb routers
| [Friday 04 June 2010] [12:52:00] <sustrik>  what's thrift?
| [Friday 04 June 2010] [12:52:28] <lvh>  sustrik: Do you know Protocol Buffers?
| [Friday 04 June 2010] [12:52:38] <sustrik>  yes
| [Friday 04 June 2010] [12:52:42] <lvh>  sustrik: Basically, Thrift is something that you describe data structures and services to
| [Friday 04 June 2010] [12:52:44] <lvh>  sustrik: Oh, even better
| [Friday 04 June 2010] [12:52:49] <lvh>  sustrik: thrift = protobufs + rpc
| [Friday 04 June 2010] [12:52:54] <sustrik>  ok, got it
| [Friday 04 June 2010] [12:53:05] <lvh>  sustrik: you describe services and it generates code for a whole bunch of languages
| [Friday 04 June 2010] [12:53:09] <sustrik>  what does it have to do with 0mq?
| [Friday 04 June 2010] [12:53:25] <lvh>  sustrik: it's not 0mq's problem, but I want to put the binary format in zmq messages
| [Friday 04 June 2010] [12:53:31] <sustrik>  can the transport layer be migrated to whatever messaging implementation you like?
| [Friday 04 June 2010] [12:53:37] <lvh>  sustrik: a lot of thrift bindings dont give you the format directly
| [Friday 04 June 2010] [12:53:43] <lvh>  sustrik: yes unless those implementations suck
| [Friday 04 June 2010] [12:53:49] <lvh>  sustrik: like I said, that's not 0mq's problem
| [Friday 04 June 2010] [12:53:53] <sustrik>  ok, i see
| [Friday 04 June 2010] [12:54:01] <sustrik>  reliability: yes
| [Friday 04 June 2010] [12:54:04] <lvh>  sustrik: they just hook it directly into their service code
| [Friday 04 June 2010] [12:54:17] <sustrik>  it'll get better soon though
| [Friday 04 June 2010] [12:54:40] <lvh>  the python thrift code does the right thing, it essentially gives you objects that have serialization methods that return raw bytestrings
| [Friday 04 June 2010] [12:54:50] <lvh>  "raw" makes no sense there, you get the idea
| [Friday 04 June 2010] [12:55:05] <sustrik>  sure
| [Friday 04 June 2010] [12:55:09] <lvh>  sustrik: Cool :-) We can wait, AMQP works fine in production now anywya
| [Friday 04 June 2010] [12:57:24] <mato> sustrik: put devices between REP and REP sockets, you mean REQ and REP sockets?
| [Friday 04 June 2010] [13:01:11] <sustrik>  mato: yes
| [Friday 04 June 2010] [13:01:17] <sustrik>  typo
| [Friday 04 June 2010] [13:03:30] <sustrik>  mato: i have to leave now
| [Friday 04 June 2010] [13:03:39] <sustrik>  anything else i should do?
| [Friday 04 June 2010] [13:04:14] <mato> sustrik: well, if you're happy with me uploading everything and sending out the release announcement, then no
| [Friday 04 June 2010] [13:04:29] <sustrik>  great
| [Friday 04 June 2010] [13:04:40] <mato> ok then
| [Friday 04 June 2010] [13:04:51] <sustrik>  just a note
| [Friday 04 June 2010] [13:04:58] <sustrik>  when sending an announcement
| [Friday 04 June 2010] [13:05:00] <mato> yes?
| [Friday 04 June 2010] [13:05:23] <sustrik>  note that API/ABI have changed and that it may take few days for language bindings to catch up
| [Friday 04 June 2010] [13:05:38] <mato> yes, good point
| [Friday 04 June 2010] [13:06:03] <mato> i'm changing your text a bit, do you mind?
| [Friday 04 June 2010] [13:07:14] <sustrik>  sure, do so
| [Friday 04 June 2010] [13:07:15] <versificateur>    hello
| [Friday 04 June 2010] [13:07:19] <sustrik>  leaving now
| [Friday 04 June 2010] [13:07:22] <sustrik>  see you  later
| [Friday 04 June 2010] [13:07:24] <mato> see you
| [Friday 04 June 2010] [13:08:25] <versificateur>    does the java bindings (jzmq) support rcv multipart??
| [Friday 04 June 2010] [13:08:54] <versificateur>    mato:??
| [Friday 04 June 2010] [13:09:03] <versificateur>    sustrik:??
| [Friday 04 June 2010] [13:09:12] <mato> versificateur: i don't use jzmq, sorry
| [Friday 04 June 2010] [13:09:23] <mato> but there's no reason why it shouldn't
| [Friday 04 June 2010] [13:09:43] <versificateur>    :( thanks
| [Friday 04 June 2010] [13:10:06] <mato> versificateur: if it doesn't work then report a bug :)
| [Friday 04 June 2010] [13:10:48] <versificateur>    okay 
| [Friday 04 June 2010] [13:21:04] <CIA-17>   zeromq2: 03Martin Lucina 07master * re8a9614 10/ NEWS : Update NEWS for 2.0.7 release - http://bit.ly/9Hb3hZ
| [Friday 04 June 2010] [13:31:05] <CIA-17>   zeromq2: 03Martin Lucina 07master * r5c97ff9 10/ NEWS : More NEWS for 2.0.7 - http://bit.ly/cwE7pj
| [Friday 04 June 2010] [13:31:05] <CIA-17>   zeromq2: 03Martin Lucina 07master * r8f51a10 10/ ChangeLog : Update ChangeLog for v2.0.7 - http://bit.ly/cgL2VL
| [Friday 04 June 2010] [14:35:19] <versificateur>    please could you tell what this error refer to??
| [Friday 04 June 2010] [14:35:25] <versificateur>    Assertion failed: !inpipe && !outpipe (pair.cpp:47)
| [Friday 04 June 2010] [23:07:13] <jugg> I'm getting a Segmentation fault from within the first time I call zmq::poll, I haven't put it through a debugger yet...
| [Friday 04 June 2010] [23:08:56] <jugg> is pollitem_t[n].socket expecting a socket pointer?
| [Friday 04 June 2010] [23:09:45] <jugg> hmm, apparently not, nevermind.
| [Saturday 05 June 2010] [00:52:56] <CIA-17> rbzmq: 03Brian Buchanan 07master * ra5e4d99 10/ rbzmq.cpp : fix some type-checking bugs in ZMQ.select() - http://bit.ly/bQsfwP
| [Saturday 05 June 2010] [01:21:17] <CIA-17> rbzmq: 03Brian Buchanan 07master * rd11835f 10/ (rbzmq.cpp zmq.gemspec): Update for ZeroMQ 2.0.7 - http://bit.ly/bIgwVj
| [Saturday 05 June 2010] [01:22:58] <CIA-17> rbzmq: 03Brian Buchanan 07master * rcb96877 10/ (4 files): Update perf tests for 2.0.7 - http://bit.ly/bKk2zC
| [Saturday 05 June 2010] [04:08:52] Notice   -NickServ- palexander is not a registered nickname.
| [Saturday 05 June 2010] [04:08:52] CTCP Received Version request from frigg.
| [Saturday 05 June 2010] [04:09:02] Notice   -ChanServ- [#rekonq] welcome to rekonq, webkit KDE browser, channel
| [Saturday 05 June 2010] [06:03:23] <oleg_>  hello
| [Saturday 05 June 2010] [07:48:11] <zeromqer>   hey, i'm having some problems following first recipe on the cookbook
| [Saturday 05 June 2010] [07:48:32] <zeromqer>   http://dpaste.com/203476/
| [Saturday 05 June 2010] [07:49:35] <zeromqer>   compiles, and starts up and creates two threads, but doesn't seem to respond to anything
| [Saturday 05 June 2010] [07:50:03] <zeromqer>   also the first fprint doesn't print when i include zmq_recv later on
| [Saturday 05 June 2010] [08:06:27] <jugg>   zeromqer: what version of zeromq are you using?
| [Saturday 05 June 2010] [08:10:15] <zeromqer>   jugg: master from the git repo right now
| [Saturday 05 June 2010] [08:10:51] <zeromqer>   had to change the zmq_inits to use just a single parameter from the pastie
| [Saturday 05 June 2010] [08:12:38] <jugg>   can you paste the REQ handler code?
| [Saturday 05 June 2010] [08:18:53] <zeromqer>   jugg: here's the updated code for both: http://dpaste.com/203484/
| [Saturday 05 June 2010] [08:20:41] <jugg>   does this actually work: zmq_connect(s, "tcp://*:9555");
| [Saturday 05 June 2010] [08:21:06] <mikko>  zmq_connect(s, "tcp://*:9555");
| [Saturday 05 June 2010] [08:21:12] <mikko>  i dont think it does
| [Saturday 05 June 2010] [08:21:17] <mikko>  try specifying ip
| [Saturday 05 June 2010] [08:21:37] <mikko>  does *:9995 bind ok?
| [Saturday 05 June 2010] [08:21:44] <jugg>   there is an assert after binding
| [Saturday 05 June 2010] [08:21:45] <mikko>  i would imagine that it is 0.0.0.0:9995
| [Saturday 05 June 2010] [08:22:36] <zeromqer>   yeah, the assert gives no issues
| [Saturday 05 June 2010] [08:22:52] <zeromqer>   mikko: but i did just try specifying my ip and still no luck
| [Saturday 05 June 2010] [08:23:02] <jugg>   127.0.0.1 ?
| [Saturday 05 June 2010] [08:23:36] <zeromqer>   jugg: yeah, both that and my eth0 ip
| [Saturday 05 June 2010] [08:23:39] <mikko>  and no firewall in between?
| [Saturday 05 June 2010] [08:23:50] <zeromqer>   same computer :P
| [Saturday 05 June 2010] [08:23:59] <mikko>  eth0 might still be firewalled
| [Saturday 05 June 2010] [08:24:26] <jugg>   nothing else jumps out, try "inproc://test" instead.
| [Saturday 05 June 2010] [08:24:28] <zeromqer>   oh, good point. but yeah, no firewall on my machine
| [Saturday 05 June 2010] [08:24:39] <zeromqer>   ah, hm.. good idea
| [Saturday 05 June 2010] [08:26:35] <zeromqer>   jugg: assert fails on the client when i use "inproc://test", anything special i should be doing?
| [Saturday 05 June 2010] [08:27:37] <mikko>  try icp:///tmp/test.sock instead
| [Saturday 05 June 2010] [08:27:47] <mikko>  i had some problems with inproc some time ago as well
| [Saturday 05 June 2010] [08:28:13] <zeromqer>   opps, yeah, i was running them as separate processes anyway... switching to ipc
| [Saturday 05 June 2010] [08:30:42] <zeromqer>   mikko: and now the server bind assert fails... (using "icp:///tmp/test.sock")
| [Saturday 05 June 2010] [08:31:43] <zeromqer>   does zmq_bind set any error messages?
| [Saturday 05 June 2010] [08:33:18] <mikko>  use zmq_strerror
| [Saturday 05 June 2010] [08:35:45] <zeromqer>   ha, "Error occurred during zmq_init(): Protocol not supported"
| [Saturday 05 June 2010] [08:37:13] <zeromqer>   any chance i configured zmq wrong?
| [Saturday 05 June 2010] [08:40:47] <sustrik>    ipc
| [Saturday 05 June 2010] [08:40:49] <sustrik>    not icp
| [Saturday 05 June 2010] [08:44:09] <mikko>  sorry 
| [Saturday 05 June 2010] [08:44:11] <mikko>  my typo
| [Saturday 05 June 2010] [08:50:22] <zeromqer>   mikko: ha, well it survived past both of us! thanks sustrik
| [Saturday 05 June 2010] [08:50:35] <zeromqer>   anyway... server runs, client immediately segfaults
| [Saturday 05 June 2010] [08:51:17] <zeromqer>   here's a backtrace: http://dpaste.com/203497/
| [Saturday 05 June 2010] [08:51:56] <sustrik>    zeromqer: what are you doing?
| [Saturday 05 June 2010] [08:52:40] <sustrik>    looks like you are passing invalid message to recv function
| [Saturday 05 June 2010] [08:52:46] <zeromqer>   hm..
| [Saturday 05 June 2010] [08:54:02] <zeromqer>   sustrik: sweet, i commented out that section and got some communication between server and client
| [Saturday 05 June 2010] [08:57:19] <zeromqer>   does anything look really wrong in section? http://dpaste.com/203498/ (last two stanzas are what i commented out)
| [Saturday 05 June 2010] [09:00:25] <sustrik>    you don't initialise the message
| [Saturday 05 June 2010] [09:00:36] <sustrik>    zmq_msg_init (&response);
| [Saturday 05 June 2010] [09:06:47] <zeromqer>   sustrik: argh.. initialized now, and all working, thanks
| [Saturday 05 June 2010] [09:07:07] <zeromqer>   my only issue is that the now working code over ipc still does nothing over tcp
| [Saturday 05 June 2010] [09:07:49] <sustrik>    show us your test prog
| [Saturday 05 June 2010] [09:11:40] <CIA-17> jzmq: 03Martin Sustrik 07master * r1a16589 10/ (7 files in 3 dirs): updated to match 0MQ/2.0.7 - http://bit.ly/bWgan8
| [Saturday 05 June 2010] [09:11:48] <zeromqer>   sustrik: server.c http://dpaste.com/203503/ and client.c http://dpaste.com/203504/
| [Saturday 05 June 2010] [09:13:40] <zeromqer>   also, if i interrupt them both with gdb, i get an equivalent backtrace: http://dpaste.com/203505/
| [Saturday 05 June 2010] [09:13:52] <sustrik>    zeromqer: you are connecting both sides
| [Saturday 05 June 2010] [09:13:56] <sustrik>    server should bind
| [Saturday 05 June 2010] [09:14:29] <zeromqer>   what? srsly?
| [Saturday 05 June 2010] [09:14:34] <zeromqer>   typo, brb
| [Saturday 05 June 2010] [09:14:48] <sustrik>    jugg: are you still there?
| [Saturday 05 June 2010] [09:14:51] <sustrik>    what assert?
| [Saturday 05 June 2010] [09:15:16] <zeromqer>   works great now!
| [Saturday 05 June 2010] [09:15:20] <sustrik>    :)
| [Saturday 05 June 2010] [09:15:26] <zeromqer>   thanks so much guys
| [Saturday 05 June 2010] [09:15:45] <zeromqer>   sorry if i was a pain, i'm a bit in unfamiliar territory...
| [Saturday 05 June 2010] [09:16:05] <sustrik>    you are welcome
| [Saturday 05 June 2010] [09:16:33] <jugg>   sustrik: yes, the assert in the code example that was pasted.
| [Saturday 05 June 2010] [09:17:36] <sustrik>    i'm lost
| [Saturday 05 June 2010] [09:17:43] <sustrik>    are _you_ seeing the assert?
| [Saturday 05 June 2010] [09:17:56] <sustrik>    or is it zeromqer's assert?
| [Saturday 05 June 2010] [09:18:26] <sustrik>    <mikko> does *:9995 bind ok?
| [Saturday 05 June 2010] [09:18:26] <sustrik>    <jugg> there is an assert after binding
| [Saturday 05 June 2010] [09:18:26] <sustrik>    <mikko> i would imagine that it is 0.0.0.0:9995
| [Saturday 05 June 2010] [09:18:26] <sustrik>    <zeromqer> yeah, the assert gives no issues
| [Saturday 05 June 2010] [09:19:02] <sustrik>    is it the one we just solved or something unrelated
| [Saturday 05 June 2010] [09:19:03] <sustrik>    ?
| [Saturday 05 June 2010] [09:24:11] <jugg>   sustrik: I was simply stating that if the binding failed, zeromqer would see an assert.  I never ran that code.
| [Saturday 05 June 2010] [09:24:30] <sustrik>    ah, ok
| [Saturday 05 June 2010] [09:24:37] <sustrik>    sorry for confusion
| [Saturday 05 June 2010] [09:24:43] <jugg>   np
| [Saturday 05 June 2010] [09:25:56] <jugg>   nice work with the latest round of updates.  Things appear to be working well... the documentation updates are great.  I should have waited a couple of weeks to start learning. :P
| [Saturday 05 June 2010] [09:28:03] <zeromqer>   sustrik: jugg: *:9995 works as well btw, it was all my fault from the beginning :P
| [Saturday 05 June 2010] [09:31:20] <sustrik>    :)
| [Saturday 05 June 2010] [10:05:47] <CIA-17> clrzmq: 03Martin Sustrik 07master * rf8bfa69 10/ (5 files in 5 dirs): updated to match 0MQ/2.0.7 - http://bit.ly/dlnSkU
| 
| *** Logfile started
| *** on Sat Jun 5 12:56:55 2010
| 
| [Saturday 05 June 2010] [12:57:42] <versificateur>  I want to have a server that send message to a list of clients
| [Saturday 05 June 2010] [12:58:44] <versificateur>  but the problem is that client/ server should work without blocking
| [Saturday 05 June 2010] [12:59:09] <versificateur>  when a client send a REQ
| [Saturday 05 June 2010] [12:59:38] <versificateur>  it should be able to send another REQ without leavaing an exception
| [Saturday 05 June 2010] [13:00:22] <versificateur>  due to fact that server can take some times to reply the client
| [Saturday 05 June 2010] [13:00:41] <versificateur>  mikko: do you follow me??
| [Saturday 05 June 2010] [13:06:45] <mikko>  i do
| [Saturday 05 June 2010] [13:07:09] <mikko>  but as far as a i know req/rep pattern works in that kind of sequence
| [Saturday 05 June 2010] [13:07:18] <mikko>  request/reply/request/reply etc
| [Saturday 05 June 2010] [13:09:04] <versificateur>  so no possibility to request/request/send/send ...
| [Saturday 05 June 2010] [13:09:45] <mikko>  what kind of use case is this?
| [Saturday 05 June 2010] [13:09:52] <mikko>  does the server do a lot of processing with the data?
| [Saturday 05 June 2010] [13:11:54] <versificateur>  now if you do a request you have to wait for an reply before sending another request (in REP/REQ pattern)
| [Saturday 05 June 2010] [13:12:38] <mikko>  that's how i've understood req/rep pattern
| [Saturday 05 June 2010] [13:13:16] <versificateur>  but I need to send as much as request I want whitout blocking by waiting the reply
| [Saturday 05 June 2010] [13:13:17] <mikko>  i might be wrong in this as well
| [Saturday 05 June 2010] [13:13:37] <versificateur>  like the PAIR/PAIR pattern
| [Saturday 05 June 2010] [13:14:20] <versificateur>  but the PAIR/PAIR only accept to connections
| [Saturday 05 June 2010] [13:14:30] <versificateur>  two connections
| [Saturday 05 June 2010] [13:16:07] <mikko>  hmm
| [Saturday 05 June 2010] [13:16:19] <mikko>  the way i would probably do it is:
| [Saturday 05 June 2010] [13:16:39] <mikko>  server uses req/rep pattern and also publisher
| [Saturday 05 June 2010] [13:16:55] <mikko>  client sends request, server replies immediately with id-number or uuid 
| [Saturday 05 June 2010] [13:17:16] <mikko>  server processes the data in background and PUBLISHes the result in a topic
| [Saturday 05 June 2010] [13:17:28] <mikko>  the client is subscribed to the topic and receives the reply async
| [Saturday 05 June 2010] [13:17:37] <mikko>  when ever the server is ready to give it
| [Saturday 05 June 2010] [13:17:43] <mikko>  makes sense?
| [Saturday 05 June 2010] [13:19:25] <versificateur>  yes...
| [Saturday 05 June 2010] [13:19:55] <versificateur>  it's a way to resolve the problem
| [Saturday 05 June 2010] [13:20:21] <mikko>  i gotta go to the gym
| [Saturday 05 June 2010] [13:20:26] <mikko>  i'll be back in about 1.5 hours
| [Saturday 05 June 2010] [13:21:06] <versificateur>  thanks for your help and see you later...
| [Saturday 05 June 2010] [13:36:22] <CIA-17> rbzmq: 03Brian Buchanan 07master * r998a64a 10/ rbzmq.cpp : fix zmq_send() and zmq_recv() for Ruby 1.9 - http://bit.ly/bsSDT7
| [Saturday 05 June 2010] [13:49:34] <sustrik>    versificateur: is the server sending replies?
| [Saturday 05 June 2010] [13:49:57] <versificateur>  sustrik: yes
| [Saturday 05 June 2010] [13:50:00] <sustrik>    if so, you can use XREQ socket on the client side
| [Saturday 05 June 2010] [13:50:16] <versificateur>  but asynchrously
| [Saturday 05 June 2010] [13:50:18] <sustrik>    it's like REQ but does not force you to wait for answer
| [Saturday 05 June 2010] [13:50:56] <sustrik>    REP side is OK as is for you?
| [Saturday 05 June 2010] [13:52:56] <versificateur>  so XREP allow to send reply without wait for request?
| [Saturday 05 June 2010] [13:53:05] <sustrik>    yes
| [Saturday 05 June 2010] [13:53:54] <sustrik>    you should be aware that during the request transmission ID of the sender is sticked to the request
| [Saturday 05 June 2010] [13:54:09] <sustrik>    when using REQ/REP, 0MQ manages it for you transparently
| [Saturday 05 June 2010] [13:54:19] <sustrik>    with XREP/XREQ you have to manage it by hand
| [Saturday 05 June 2010] [13:54:38] <sustrik>    so when you send message X on the xreq side
| [Saturday 05 June 2010] [13:54:48] <sustrik>    you'll get a two-part message on the xrep side
| [Saturday 05 June 2010] [13:55:06] <sustrik>    first part is the ID of the client that send the request (opaque binary BLOB)
| [Saturday 05 June 2010] [13:55:11] <sustrik>    second part is X
| [Saturday 05 June 2010] [13:55:29] <sustrik>    when you want to send the reply
| [Saturday 05 June 2010] [13:55:47] <sustrik>    you have to stick the client ID in the front of your reply
| [Saturday 05 June 2010] [13:56:01] <sustrik>    so you send a two-part messahe, ID + reply itself
| [Saturday 05 June 2010] [13:56:11] <sustrik>    makes sense?
| [Saturday 05 June 2010] [13:56:55] <versificateur>  yes 
| [Saturday 05 June 2010] [13:57:31] <versificateur>  is there some code examples??
| [Saturday 05 June 2010] [13:57:58] <sustrik>    hm, not really
| [Saturday 05 June 2010] [13:58:20] <sustrik>    you may ask on the mailing list, presumably someone is already using it in that way
| [Saturday 05 June 2010] [13:58:29] <versificateur>  okay
| [Saturday 05 June 2010] [13:58:49] <versificateur>  does the jzmq support it? (in the 2.06 version)
| [Saturday 05 June 2010] [13:59:08] <sustrik>    i think getsockopt is still missing
| [Saturday 05 June 2010] [13:59:48] <sustrik>    it's needed to find out whether message consists of single or multiple parts
| [Saturday 05 June 2010] [14:00:00] <sustrik>    just implement it if needed, it should be easy
| [Saturday 05 June 2010] [14:01:39] <versificateur>  okay... it's the RECV_MORE method?
| [Saturday 05 June 2010] [14:02:27] <sustrik>    in C it's getsockopt (s, ZMQ_RCVMORE, &more, &more_size);
| [Saturday 05 June 2010] [14:02:52] <sustrik>    in java you can either implement generic getsockopt method
| [Saturday 05 June 2010] [14:03:08] <sustrik>    or special getRcvMore ()
| [Saturday 05 June 2010] [14:03:19] <versificateur>  okay
| 
| *** Logfile started
| *** on Sat Jun 5 15:54:00 2010
| 
| [Saturday 05 June 2010] [16:33:31] <versificateur>  mikko: sustrik give me all information
| [Saturday 05 June 2010] [16:33:48] <versificateur>  sustrik: are you there?
| [Saturday 05 June 2010] [16:34:18] <sustrik>    versificateur: yes
| [Saturday 05 June 2010] [16:34:21] <sustrik>    what's up?
| [Saturday 05 June 2010] [16:34:49] <versificateur>  i want to know if java binding support device ZMQ_QUEUE?
| [Saturday 05 June 2010] [16:35:22] <sustrik>    you mean an in-process device?
| [Saturday 05 June 2010] [16:35:37] <versificateur>  yes
| [Saturday 05 June 2010] [16:35:49] <versificateur>  like your multithreaded example
| [Saturday 05 June 2010] [16:36:17] <sustrik>    the zmq_device method is not exposed via java binding
| [Saturday 05 June 2010] [16:36:23] <sustrik>    you would have to add that as well
| [Saturday 05 June 2010] [16:38:02] <versificateur>  a look to jzmq could help?
| [Saturday 05 June 2010] [16:38:37] <sustrik>    i mean you would have to expose the zmq_device function via jzmq
| [Saturday 05 June 2010] [16:38:58] <sustrik>    it's few lines of code afaict
| [Saturday 05 June 2010] [16:39:54] <sustrik>    have a look at how other functions are wrapped and do it in similar manner
| [Saturday 05 June 2010] [16:41:29] <versificateur>  i'll try and send you back the result for approval
| [Saturday 05 June 2010] [16:42:06] <sustrik>    great, that'll make life easier for all the java users of 0mq :)
| [Saturday 05 June 2010] [23:09:11] <postmodern> im having trouble compiling zeromq 2.0.7 on Fedora13
| [Saturday 05 June 2010] [23:09:17] <postmodern> mainly it cannot find libuuid
| [Saturday 05 June 2010] [23:09:28] <postmodern> since fedora installs it to /lib/libuuid.so.1
| [Saturday 05 June 2010] [23:09:40] <postmodern> once i created a libuuid.so symlink to libuuid.so.1, it worked
| [Saturday 05 June 2010] [23:10:44] <postmodern> fedora13 is apparently using libuuid 2.17.2
| [Saturday 05 June 2010] [23:10:59] <postmodern> also there's no uuid/uuid.h only /usr/include/uuid.h
| [Sunday 06 June 2010] [02:53:01] <postmodern>   when did the prototype for zmq_init change
| [Sunday 06 June 2010] [02:53:07] <postmodern>   it used to take 3 arguments, now it only takes 1
| [Sunday 06 June 2010] [17:10:07] <zedas>    sustrik: hey, 2.0.7 had some sudden changes that has completely broken the python module
| [Sunday 06 June 2010] [17:10:34] <zedas>    sustrik: actually, probably all of them except C and C++.  did you talk with anyone before just rolling that out?
| [Sunday 06 June 2010] [17:17:29] <zedas>    sustrik: well i'm attempting to fix the python driver, but if you're going to make API changes at the last minute before releases then that's seriously uncool.
| [Sunday 06 June 2010] [17:17:58] <sustrik>  zedas:hi
| [Sunday 06 June 2010] [17:18:05] <sustrik>  any better idea?
| [Sunday 06 June 2010] [17:18:36] <zedas>    make the change and then wait until all the maintainers catch up
| [Sunday 06 June 2010] [17:19:20] <zedas>    i mean you must have made this change last week right before release because i was trakcing your git and the pyzmq git
| [Sunday 06 June 2010] [17:19:44] <sustrik>  yes, it was made immediately before release
| [Sunday 06 June 2010] [17:20:05] <zedas>    instead, 2.0.7 should have had the old api, and then 2.0.8 could have the new one.
| [Sunday 06 June 2010] [17:20:28] <sustrik>  the problem is with sync of 0mq core and bindings
| [Sunday 06 June 2010] [17:20:37] <sustrik>  bindings are independent projects
| [Sunday 06 June 2010] [17:21:10] <sustrik>  how would you sync in such an environment?
| [Sunday 06 June 2010] [17:21:26] <sustrik>  the real solution is to make bindings make numbered releases
| [Sunday 06 June 2010] [17:21:37] <zedas>    do you have a mailing list?
| [Sunday 06 June 2010] [17:21:51] <sustrik>  go on, propose a solution
| [Sunday 06 June 2010] [17:21:57] <zedas>    you definitely don't sync by just changing the base zmq_init api in a release.
| [Sunday 06 June 2010] [17:22:05] <sustrik>  so?
| [Sunday 06 June 2010] [17:22:26] <zedas>    well that breaks everything.  it's fundamental to many dependencies
| [Sunday 06 June 2010] [17:22:45] <sustrik>  i know, i have no solution though
| [Sunday 06 June 2010] [17:22:59] <zedas>    i suggest this: point releases never change base APIs.  people cna rely on 2.0.7 and 2.0.8 being compilation compatible.
| [Sunday 06 June 2010] [17:23:38] <zedas>    next, if you want to change the API, then you make the decision to boost the 2nd number and people know it.
| [Sunday 06 June 2010] [17:23:55] <zedas>    then, right before you make the API change, release a final point release with the old api, and start on the new one.
| [Sunday 06 June 2010] [17:24:18] <zedas>    that way, i can get the important bug fixes and changes just before the API change, and I can keep working while you can advance the API.
| [Sunday 06 June 2010] [17:24:23] <sustrik>  so you propose maintaining 2 codebases, old compatibility one and a development one?
| [Sunday 06 June 2010] [17:24:35] <zedas>    nope no need for that, since you got git.
| [Sunday 06 June 2010] [17:24:43] <zedas>    if i need 2.0.7 i grab that revision
| [Sunday 06 June 2010] [17:24:52] <sustrik>  backporting of bug fixes?
| [Sunday 06 June 2010] [17:25:06] <zedas>    i'm saying you have a release policy.  dont change the API without doing a point release and then bump the 2nd version number
| [Sunday 06 June 2010] [17:25:33] <zedas>    if someone needs to then they will, but with git backports are way easier
| [Sunday 06 June 2010] [17:25:56] <sustrik>  actually beckward incompatible change should bump the major revision
| [Sunday 06 June 2010] [17:26:03] <zedas>    it's really just a communication policy.  you're saying "you can base your software on point releases"
| [Sunday 06 June 2010] [17:26:29] <sustrik>  so far we've tried to avoid insane version like 27.0.0
| [Sunday 06 June 2010] [17:26:41] <sustrik>  so we've just tagged it as "beta"
| [Sunday 06 June 2010] [17:26:50] <sustrik>  but maybe it's time to freeze the api
| [Sunday 06 June 2010] [17:27:00] <zedas>    yeah but changing zmq_init jsut breaks everything
| [Sunday 06 June 2010] [17:27:20] <zedas>    so when people go to use it, or when i advocate it, people think it's unstable and get turned off
| [Sunday 06 June 2010] [17:27:35] <sustrik>  sure, i am aware of the problem
| [Sunday 06 June 2010] [17:27:44] <sustrik>  what's needed is stable distro
| [Sunday 06 June 2010] [17:27:58] <sustrik>  plus a dev branch
| [Sunday 06 June 2010] [17:28:05] <zedas>    well let me ask, what was the reasoning for changing init?
| [Sunday 06 June 2010] [17:28:25] <sustrik>  the args are no more needed, so it's API cleanup
| [Sunday 06 June 2010] [17:29:17] <sustrik>  basically, it's a tension between trying to keep API clean and a need to support existing users
| [Sunday 06 June 2010] [17:29:48] <zedas>    you can do both, plenty of projects do
| [Sunday 06 June 2010] [17:29:51] <versificateur>    sustrik: have you try to compile the java bindings (jzmq) with new 2.0.7 ??
| [Sunday 06 June 2010] [17:30:02] <sustrik>  versificateur: yes
| [Sunday 06 June 2010] [17:30:15] <sustrik>  it worked for me
| [Sunday 06 June 2010] [17:30:47] <versificateur>    sustrik: it seems that test classes (local_thr...) are broken.. 
| [Sunday 06 June 2010] [17:30:57] <sustrik>  what's the problem?
| [Sunday 06 June 2010] [17:31:32] <sustrik>  zedas: please, do start the discussion of the release policy on the mailing list
| [Sunday 06 June 2010] [17:33:00] <zedas>    hehe whew, hacking generated python C code sucks.
| [Sunday 06 June 2010] [17:33:24] <versificateur>    local_lat.java:36 context(init,int,int) in org.zeromq.ZMQ cannot be applied to (int)
| [Sunday 06 June 2010] [17:33:53] <sustrik>  verisificateur: do you have the latest version?
| [Sunday 06 June 2010] [17:33:59] <versificateur>    ZMQ.Context ctx = ZMQ.context(1);
| [Sunday 06 June 2010] [17:34:31] <sustrik>  hm, have you rebuilt and reinstalled it?
| [Sunday 06 June 2010] [17:34:41] <versificateur>    yes
| [Sunday 06 June 2010] [17:34:58] <zedas>    sustrik versificateur probably the same zmq_init change?
| [Sunday 06 June 2010] [17:35:03] <sustrik>  no stray old version of jzmq somewhere on your paths?
| [Sunday 06 June 2010] [17:35:08] <sustrik>  yes, it's the same thing
| [Sunday 06 June 2010] [17:35:16] <sustrik>  i've changed the jzmq though
| [Sunday 06 June 2010] [17:35:45] <versificateur>    i'll check my paths...
| [Sunday 06 June 2010] [17:36:12] <sustrik>  back to the release policy: i think there should simply be two codebases, the stable one and the experimental one
| [Sunday 06 June 2010] [17:38:00] <zedas>    well i'm screwed.
| [Sunday 06 June 2010] [17:38:14] <zedas>    i'll have to contact the pyzmq author and find out what version of pyrex he's using.
| [Sunday 06 June 2010] [17:38:21] <sustrik>  zedas: sorry about that
| [Sunday 06 June 2010] [17:38:25] <zedas>    hacking the output C code doesn't work at all.
| [Sunday 06 June 2010] [17:38:46] <sustrik>  please do complain about it
| [Sunday 06 June 2010] [17:38:53] <sustrik>  it should be solved in some way
| [Sunday 06 June 2010] [17:39:12] <zedas>    anyway, I *did* manage to merge 0mq into libtask: http://swtch.com/libtask/
| [Sunday 06 June 2010] [17:39:35] <zedas>    so you get coroutines that can process 0mq messages and file/socket I/O off an abstraction from zmq_poll
| [Sunday 06 June 2010] [17:40:09] <sustrik>  what's the project?
| [Sunday 06 June 2010] [17:40:26] <sustrik>  a portability lib?
| [Sunday 06 June 2010] [17:40:37]     * sustrik is checking it
| [Sunday 06 June 2010] [17:40:53] <zedas>    it's a portable abstraction on coroutines in C
| [Sunday 06 June 2010] [17:41:03] <zedas>    super duper fast, but it used plain old poll
| [Sunday 06 June 2010] [17:41:27] <zedas>    so with my little update it uses 0mq poll and then i can use the same abstraction for sockets, files, or 0mq
| [Sunday 06 June 2010] [17:41:41] <zedas>    and it took a tiny bit of changes to work.
| [Sunday 06 June 2010] [17:41:46] <sustrik>  ah, i see
| [Sunday 06 June 2010] [17:42:06] <zedas>    mostly just to see if it'd work :-)
| [Sunday 06 June 2010] [17:42:50] <sustrik>  well, my long term goal is to expose 0MQ via BSD socket API, that would achieve the same goal
| [Sunday 06 June 2010] [17:43:38] <sustrik>  but again, such a thing would break backward compatibility :(
| [Sunday 06 June 2010] [17:43:42] <versificateur>    I didn't found something noticeable in my paths..
| [Sunday 06 June 2010] [17:43:59] <versificateur>    so should i remove all 2.0.6 files
| [Sunday 06 June 2010] [17:44:07] <versificateur>    and reinstall??
| [Sunday 06 June 2010] [17:44:20] <sustrik>  versificateur: let me try myself
| [Sunday 06 June 2010] [17:47:50] <sustrik>  versificateur: hm, it builds ok for me
| [Sunday 06 June 2010] [17:47:59] <sustrik>  maybe you have old 0MQ core still
| [Sunday 06 June 2010] [17:48:11] <sustrik>  have you installed 0MQ/2.0.7?
| [Sunday 06 June 2010] [17:48:16] <versificateur>    yes probably
| [Sunday 06 June 2010] [17:49:17] <sustrik>  were does the context(init,int,int) come from?
| [Sunday 06 June 2010] [17:49:24] <sustrik>  can you check where is it defined?
| [Sunday 06 June 2010] [17:51:05] <versificateur>    yes i'll try
| [Sunday 06 June 2010] [17:51:49] <cremes>   zedas: the ruby ffi bindings are compatible with the 2.0.7 release if you want to dip your toe back into ruby waters... ;)
| [Sunday 06 June 2010] [17:52:15] <cremes>   (or will be when i push 0.5.0 in about 30 minutes)
| [Sunday 06 June 2010] [17:55:36] <sustrik>  let _me_ start the discussion of the stable versions on the mailing list :|
| [Sunday 06 June 2010] [17:59:29] <versificateur>    okay i fix it
| [Sunday 06 June 2010] [18:00:18] <sustrik>  versificatuer: no, do not fix it, just find where it's coming from
| [Sunday 06 June 2010] [18:00:47] <versificateur>    It was my ZMQ.java file
| [Sunday 06 June 2010] [18:01:03] <sustrik>  the one from github?
| [Sunday 06 June 2010] [18:01:05] <versificateur>    I've modifications on the 2.0.6 version
| [Sunday 06 June 2010] [18:01:19] <sustrik>  ah, ok, that explains it
| [Sunday 06 June 2010] [18:02:19] <versificateur>    but now with the 2.0.7 what does the ZMQ.Context(1) mean?
| [Sunday 06 June 2010] [18:02:40] <versificateur>    application? thread?...
| [Sunday 06 June 2010] [18:02:46] <cremes>   versificateur: io threads
| [Sunday 06 June 2010] [18:03:34] <versificateur>    so it's the first arg of the old implementation??
| [Sunday 06 June 2010] [18:04:00] <sustrik>  it's second arg of the old implementation
| [Sunday 06 June 2010] [18:04:22] <sustrik>  api_threads is not needed as you can use 0mq from as many threads as you want now
| [Sunday 06 June 2010] [18:06:04] <sustrik>  zedas: ok, done, i've started the discussion
| [Sunday 06 June 2010] [18:06:30] <sustrik>  let's see what happens
| [Sunday 06 June 2010] [18:06:58] <versificateur>    so taking the multithreaded example i'll have (1) instead of (11,1,0)
| [Sunday 06 June 2010] [18:07:09] <sustrik>  yes
| [Sunday 06 June 2010] [18:12:38] <versificateur>    I made the Device port to jzmq
| [Sunday 06 June 2010] [18:13:00] <sustrik>  great
| [Sunday 06 June 2010] [18:13:10] <versificateur>    i'll test it and ask you for a pull request
| [Sunday 06 June 2010] [18:13:26] <sustrik>  thanks!
| [Sunday 06 June 2010] [18:32:53] <zedas>    sweet, 0mq works great with libtask
| [Sunday 06 June 2010] [18:33:19] <zedas>    i'm able to slam the hell out of it with 0mq req/rep messages and also do full socket hits and serve files.
| [Sunday 06 June 2010] [18:38:41] <zedas>    http://dpaste.de/o5xx/ here's the end result
| [Sunday 06 June 2010] [18:38:48] <zedas>    very nice.
| [Sunday 06 June 2010] [18:48:40] <foysavas> zedas: coroutines? but event-driven is all the fad right now :P
| [Sunday 06 June 2010] [18:49:38] <foysavas> actually coroutines make a lot of sense for a web server, under what conditions would you have a task reschedule itself?
| [Sunday 06 June 2010] [18:50:22] <zedas>    foysavas: well it's event-driven, just done with coroutines :-)
| [Sunday 06 June 2010] [18:51:27] <foysavas> ah, true, you're just saw that you're using zmq_poll
| [Sunday 06 June 2010] [19:02:32] <foysavas> sustrik: btw, if you make two branches, one stable, one dev, make stable 'master'
| [Sunday 06 June 2010] [19:03:30] <foysavas> not sure why it's so popular to do otherwise
| [Sunday 06 June 2010] [19:20:05] <foysavas> sustrik: also, i just wrote up some D bindings for zmq. any chance of linking to them from the zeromq site, once i put them up on github?
| 
| *** Logfile started
| *** on Sun Jun 6 19:51:08 2010
| 
| [Sunday 06 June 2010] [20:06:07] <mikko>    foysavas: try again tomorrow
| [Sunday 06 June 2010] [20:06:13] <mikko>    foysavas: sustrik can help you on that
| [Sunday 06 June 2010] [22:12:56] <silassewell>  I understand that its not a priority right now (or possibly at all), but I was wondering if anyone was aware of any type of security mechanism successfully being layered on top of zeromq (something like tls as opposed to ipsec)?
| [Sunday 06 June 2010] [22:32:25] <mikko>    its a complicated issue
| [Sunday 06 June 2010] [22:32:52] <mikko>    the topic has come up more than once
| [Sunday 06 June 2010] [22:33:19] <mikko>    the problematic thing is different needs people have and especially when you have more complex messaging topologies
| [Sunday 06 June 2010] [22:33:28] <mikko>    such as forwarding devices that are not trusted etc
| [Sunday 06 June 2010] [22:37:01] <silassewell>  yeah, I'm not looking for a builtin / standard solution, I was just wondering if anyone had heard of someone successfully deploying zeromq in an untrusted environment
| [Sunday 06 June 2010] [22:38:12] <mikko>    i would imagine something like pub/priv key signing would work
| [Sunday 06 June 2010] [22:38:18] <mikko>    adds some overhead to the messages
| [Sunday 06 June 2010] [22:38:45] <mikko>    or just encryption
| [Sunday 06 June 2010] [22:38:56] <mikko>    are you looking to hide the messages or guarantee integrity?
| [Sunday 06 June 2010] [22:40:39] <silassewell>  hide the message and authenticate the sender
| [Sunday 06 June 2010] [22:41:04] <mikko>    i guess you could follow similar pattern to email?
| [Sunday 06 June 2010] [22:42:09] <silassewell>  yeah, I'll start experimenting with it, I just wanted to see if anyone had done it before I began
| [Sunday 06 June 2010] [23:50:13] <jugg> http://api.zeromq.org/zmq_cpp.html doesn't document the overloaded poll() interface, ie, that poll() can be called with or without a timeout value; if without, defaults to -1, eg. no timeout.
| [Monday 07 June 2010] [01:02:05] <jugg> hmm, is it not possible to unbind/disconnect a socket from an endpoint?  It seems I have to close the socket, in which case all connections and bindings for that socket are lost.
| [Monday 07 June 2010] [01:10:26] Notice -NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Monday 07 June 2010] [01:10:26] Notice -NickServ- You are now identified for travlr.
| [Monday 07 June 2010] [01:10:26] CTCP   Received Version request from frigg.
| [Monday 07 June 2010] [01:10:28] Notice -ChanServ- [#rekonq] welcome to rekonq, webkit KDE browser, channel
| [Monday 07 June 2010] [02:02:31] Notice -NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Monday 07 June 2010] [02:02:31] Notice -NickServ- You are now identified for travlr.
| [Monday 07 June 2010] [02:02:31] CTCP   Received Version request from frigg.
| [Monday 07 June 2010] [02:02:33] Notice -ChanServ- [#rekonq] welcome to rekonq, webkit KDE browser, channel
| [Monday 07 June 2010] [02:37:57] <sustrik>  zedas: nice, is the libtask project repo available online?
| [Monday 07 June 2010] [02:38:14] <sustrik>  it may make sense to link to it from zeromq.org website
| [Monday 07 June 2010] [02:38:48] <sustrik>  foysavas: yes, please do put the D binding to the github
| [Monday 07 June 2010] [02:39:05] <sustrik>  then let me know and I link it from zeromq.org
| [Monday 07 June 2010] [02:39:08] <zedas>    sustrik: "repo" is a bit of a stretch http://swtch.com/libtask/
| [Monday 07 June 2010] [02:39:13] <zedas>    but i'll have something up
| [Monday 07 June 2010] [02:39:22] <sustrik>  thanks, let me know then
| [Monday 07 June 2010] [02:39:35] <sustrik>  this stuff looks really useful
| [Monday 07 June 2010] [02:39:42] <sustrik>  it would be shame to let it die
| [Monday 07 June 2010] [02:43:34] <sustrik>  jugg: good catch about the zmq_poll in C++
| [Monday 07 June 2010] [02:43:53] <sustrik>  jugg: no it's not possible, you have to close the socket
| [Monday 07 June 2010] [02:44:02] <sustrik>  (following bsd sockets API here)
| [Monday 07 June 2010] [02:47:24] <Olivier_c>    hi all.
| [Monday 07 June 2010] [02:49:41] <sustrik>  hi
| [Monday 07 June 2010] [02:53:52] <Olivier_c>    sustrik, why have you removed zmq_stopwatch_start/stop in 2.07 ? i don't see anything about it in the changelog.   
| [Monday 07 June 2010] [02:54:27] <sustrik>  it was an undocumented feature intended only for internal use
| [Monday 07 June 2010] [02:54:48] <sustrik>  0mq is not intended to be a portability library
| [Monday 07 June 2010] [02:55:00] <sustrik>  the functions were used only by perf tests
| [Monday 07 June 2010] [02:55:28] <sustrik>  now they are in perf/helpers.cpp
| [Monday 07 June 2010] [02:56:07] <Olivier_c>    ok, thanks for the informations :) i should clean my code then .
| [Monday 07 June 2010] [02:56:33] <sustrik>  sorry for inconvenience, we are trying to keep the API as clean as possible
| [Monday 07 June 2010] [02:57:14] <sustrik>  pain now = less trouble afterwards :)
| [Monday 07 June 2010] [02:59:30] <Olivier_c>    no problem. i'm gonna change this, and probably come back with (still) troubles with openpgm :)
| [Monday 07 June 2010] [03:04:16] <CIA-17>   zeromq2: 03Martin Sustrik 07master * rce53d02 10/ doc/zmq_cpp.txt : C++ docs for zmq::poll function improved - http://bit.ly/9IX99E
| [Monday 07 June 2010] [03:04:17] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r784e73a 10/ (ChangeLog NEWS): Merge branch 'master' of git@github.com:sustrik/zeromq2 - http://bit.ly/aAMj5O
| [Monday 07 June 2010] [05:21:35] <jugg> what is a sensible way to recover from a REQ/REP deadlock?  How does both sides of the endpoint re-synchronize when things get out of sync?  How does either side ever know things are out of sync?
| [Monday 07 June 2010] [05:22:08] <mikko>    how do they get out of sync?
| [Monday 07 June 2010] [05:24:10] <jugg> a REQ is sent, the REP never replies (it goes away).  When it comes back, REQ never recovers.  (I mentioned this yesterday)
| [Monday 07 June 2010] [05:24:41] <jugg> The mention suggest of using Poll, has this issue:
| [Monday 07 June 2010] [05:25:48] <jugg> the REQ socket state is out of order, so REQ send fails.  ANd because of my above question, that it isn't possible to close a connection, the problem increases, because closing the socket is a problem.
| [Monday 07 June 2010] [05:26:17] <jugg> ie. everytime poll times out, I have to close the socket.
| [Monday 07 June 2010] [05:26:29] <jugg> this interrupts a bunch of other things, so it isn't an acceptable solution.
| [Monday 07 June 2010] [05:26:41] <sustrik>  jugg: yes, that's the current state of affairs
| [Monday 07 June 2010] [05:26:57] <sustrik>  this should be done inside of 0MQ
| [Monday 07 June 2010] [05:27:01] <sustrik>  bit it's not yet
| [Monday 07 June 2010] [05:27:20] <jugg> yes, I"m trying to find a sensible work around.  I htink the only option is closing the socket?
| [Monday 07 June 2010] [05:27:26] <sustrik>  yes
| [Monday 07 June 2010] [05:27:29] <jugg> :( ok
| [Monday 07 June 2010] [05:27:34] <sustrik>  i know :(
| [Monday 07 June 2010] [05:52:23] <mato> re
| [Monday 07 June 2010] [05:52:31] <mato> sustrik: what is this business of moving repositories?
| [Monday 07 June 2010] [05:52:45] <sustrik>  imatix is going to maintain stable version
| [Monday 07 June 2010] [05:53:08] <sustrik>  sustrik/zeromq2 is my playground from now on :)
| [Monday 07 June 2010] [05:53:38] <mato> so it's a fork?
| [Monday 07 June 2010] [05:54:02] <sustrik>  yes, it's a different repo
| [Monday 07 June 2010] [05:54:36] <sustrik>  those who want stable API should use imatix/zeromq
| [Monday 07 June 2010] [05:54:53] <mato> then imatix should prominently announce this somehow
| [Monday 07 June 2010] [05:55:00] <mato> but i guess i'll leave that to imatix
| [Monday 07 June 2010] [05:55:04] <sustrik>  :)
| [Monday 07 June 2010] [05:55:09] <mato> you know
| [Monday 07 June 2010] [05:55:11] <mato> with a roadmap
| [Monday 07 June 2010] [05:55:13] <mato> issue tracker
| [Monday 07 June 2010] [05:55:16] <mato> maintenance plan
| [Monday 07 June 2010] [05:55:19] <sustrik>  yup
| [Monday 07 June 2010] [05:55:19] <mato> and so on :-)
| [Monday 07 June 2010] [05:56:35] <mato> sustrik: so practically, i can keep committing to your repository if i want to make changes?
| [Monday 07 June 2010] [05:57:13] <sustrik>  i am going to play with berkeley sockets api there
| [Monday 07 June 2010] [05:57:45] <sustrik>  so it depends on what you want to commit
| [Monday 07 June 2010] [05:58:05] <sustrik>  if it's say a bugfix that should get to stable version asap, go for imatix/zeromq
| [Monday 07 June 2010] [05:58:43] <mato> sustrik: and you will not be fixing bugs in the stable version? or will you?
| [Monday 07 June 2010] [05:58:48]     * mato is confused
| [Monday 07 June 2010] [05:58:58] <sustrik>  the idea afaiu
| [Monday 07 June 2010] [05:59:13] <sustrik>  is that zeromq/imatix now moves quickly towards the stable version
| [Monday 07 June 2010] [05:59:15] <sustrik>  alpha
| [Monday 07 June 2010] [05:59:16] <sustrik>  rc
| [Monday 07 June 2010] [05:59:17] <sustrik>  etc.
| [Monday 07 June 2010] [05:59:34] <sustrik>  sustrik/zeromq2 is my sandbox
| [Monday 07 June 2010] [06:00:19] <sustrik>  as for the bugs, i'll fix them in both
| [Monday 07 June 2010] [06:00:44] <sustrik>  but imatix/zeromq is more important
| [Monday 07 June 2010] [06:00:49] <sustrik>  as it's meant to be stable
| [Monday 07 June 2010] [06:01:26] <mato> right, but the stability of this fork is decided by imatix presumably
| [Monday 07 June 2010] [06:01:31] <sustrik>  yes
| [Monday 07 June 2010] [06:01:32] <mato> they have a plan
| [Monday 07 June 2010] [06:01:50] <sustrik>  i believe so
| [Monday 07 June 2010] [06:02:42]     * mato is still confused
| [Monday 07 June 2010] [06:02:51] <mato> should i ask imatix about these plans on the mailing list?
| [Monday 07 June 2010] [06:03:15] <sustrik>  up to you
| [Monday 07 June 2010] [06:03:50] <mato> i'm just somewhat upset that the decision appears to have been made without seeking *any* input from the community or contributors
| [Monday 07 June 2010] [06:04:01] <mato> without proposing any roadmap what stable means
| [Monday 07 June 2010] [06:08:05] <sustrik>  the point is people are compaining about unstable APIs
| [Monday 07 June 2010] [06:08:10] <sustrik>  fair enough
| [Monday 07 June 2010] [06:08:12] <mato> people always complain
| [Monday 07 June 2010] [06:08:40] <sustrik>  i think 0mq have reached the point where it's used enough to deserve a stable branch
| [Monday 07 June 2010] [06:08:58] <sustrik>  no point in people using my sandbox for production use :|
| [Monday 07 June 2010] [06:09:02] <mato> my point is that you wrote an email asking for comments on the way forward, and PH just wrote back 12hrs later with an executive decision
| [Monday 07 June 2010] [06:09:12] <sustrik>  i asked him to do so
| [Monday 07 June 2010] [06:10:07] <sustrik>  maintaining a stable branch _is_ an executive decision
| [Monday 07 June 2010] [06:13:13] <mato> sustrik: i find it interesting that my input as the contributor who has been preparing the last few stable releases *for free* is not wanted
| [Monday 07 June 2010] [06:13:55] <sustrik>  sustrik/zeromq2 is *my* repo
| [Monday 07 June 2010] [06:14:27] <sustrik>  i just don't want people to come in and complain about the release policy
| [Monday 07 June 2010] [06:14:31] <sustrik>  it's a sandbox
| [Monday 07 June 2010] [06:14:44] <mato> sustrik: that's what branches are for, damnit
| [Monday 07 June 2010] [06:15:23] <mato> sustrik: you have, let me see, 129 people watching your repository
| [Monday 07 June 2010] [06:15:41] <mato> sustrik: so let's face it, that repository should be the canonical source for 0MQ
| [Monday 07 June 2010] [06:16:04] <mato> or, if not, it should be prominently announced, all over the place, not in an email hidden under "Stable release" on the mailing list
| [Monday 07 June 2010] [06:16:21] <sustrik>  sure, it should
| [Monday 07 June 2010] [06:16:57] <mato> anyway, i will reply on the mailing list
| [Monday 07 June 2010] [06:17:00] <sustrik>  ok
| [Monday 07 June 2010] [07:49:01] <jugg> sustrik: will you be pushing changes to the imatix repo as you work?
| [Monday 07 June 2010] [07:49:13] <sustrik>  jugg: yes
| [Monday 07 June 2010] [07:49:19] <sustrik>  the only point is about the API
| [Monday 07 June 2010] [07:49:39] <sustrik>  people using 0mq in production don't want APIs to be changed
| [Monday 07 June 2010] [07:49:51] <sustrik>  thus we need a "stable" repo
| [Monday 07 June 2010] [07:49:58] <sustrik>  ->imatix/zeromq
| [Monday 07 June 2010] [07:50:20] <sustrik>  my own sustrik/zeromq2 i'll use for experimenting with API
| [Monday 07 June 2010] [07:50:40] <sustrik>  so it's worth of following only is you are interested in reseach-related stuff
| [Monday 07 June 2010] [07:50:53] <sustrik>  research*
| [Monday 07 June 2010] [07:51:50] <sustrik>  does that make sense?
| [Monday 07 June 2010] [07:56:43] <jugg> yes/no.  Even if another repository is made to be the "official" one, I'd still expect the branches shared between the two repositories to remain synched, and any experimental work to be done on branches existing only in your repository.
| [Monday 07 June 2010] [07:58:05] <jugg> I expect the "master" branch to be one of those shared branches that remain sync'd
| [Monday 07 June 2010] [07:59:14] <sustrik>  i just don't want to have the whole project under sustrik account
| [Monday 07 June 2010] [07:59:24] <sustrik>  it's not a one-man show any longer
| [Monday 07 June 2010] [08:00:41] <jugg> makes sense
| [Monday 07 June 2010] [11:24:46] <jugg> while building from source, `./configure --prefix=/some/path`  is this used only for `make install`?  ie, if I re-run ./configure with a different prefix, do I have to rebuild?
| [Monday 07 June 2010] [11:26:47] <sustrik>  jugg: no idea
| [Monday 07 June 2010] [11:27:18] <sustrik>  you should be able to find the answer somewhere in the autools documentation
| [Monday 07 June 2010] [11:27:25] <sustrik>  autotools*
| [Monday 07 June 2010] [11:29:39] <jugg> when doing a full make after changing the prefix, these files differ:
| [Monday 07 June 2010] [11:29:55] <jugg> ./lib/libzmq.a
| [Monday 07 June 2010] [11:29:55] <jugg> ./lib/libzmq.la
| [Monday 07 June 2010] [11:29:55] <jugg> ./lib/pkgconfig/libzmq.pc
| [Monday 07 June 2010] [11:30:18] <jugg> when not doing an make, only the .a and .pc differ.  The .la still points to the old directory.
| [Monday 07 June 2010] [11:31:56] <jugg> but all of the files themselves were placed in the correct (updated) locations.
| [Monday 07 June 2010] [11:33:22] <jugg> wierd that the static lib changes without actually doing a rebuild. ?
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: 03Brian Granger 07master * rafabbb5 10/ (18 files in 7 dirs): 
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: Updating to new 2.0.7 API changes.
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: * Context only takes the number of io threads.
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: * P2P -> PAIR.
| [Monday 07 June 2010] [11:56:12] <CIA-17>   pyzmq: * No stopwatch.
| [Monday 07 June 2010] [11:56:13] <CIA-17>   pyzmq: * No LWM socket option. - http://bit.ly/9vHx2a
| [Monday 07 June 2010] [11:57:37] <guido_g>  ahhh... time to pull :)
| [Monday 07 June 2010] [14:24:14] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r240fc33 10/ src/tcp_connecter.cpp : minor comment clarification - http://bit.ly/9qdEMQ
| [Monday 07 June 2010] [20:59:24] <jugg> I got this assert in my app when rebooting a peer computer: tcp_connector.cpp:296:    zmq_assert (err == ECONNREFUSED || err == ETIMEDOUT);   Is there a reason that zmq dies if the remote port is unavailable?
| [Monday 07 June 2010] [23:30:22] <jugg> sustrik: github is showing that you committed a comment change on that very assert 9 hours ago... ???  that is very wierd.
| [Tuesday 08 June 2010] [00:58:14] <umesh>   I am wondering if ZeroMQ supports a many to many delivery model.
| [Tuesday 08 June 2010] [00:58:35] <umesh>   The documentation for publish and subscribe mention that it is used to implement a one to many model:
| [Tuesday 08 June 2010] [00:58:35] <umesh>   "The publish-subscribe pattern is used for one-to-many distribution of data from a single publisher to multiple subscribers in a fanout fashion."
| [Tuesday 08 June 2010] [00:58:48] <umesh>   Can multiple entities publish on the same channel and thus make it a many to many model ?
| [Tuesday 08 June 2010] [01:01:59] <sustrik> jugg: the assert tries to capture possible netwrok-related error codes
| [Tuesday 08 June 2010] [01:02:15] <sustrik> can you have a look which error are you exactly experiencing?
| [Tuesday 08 June 2010] [01:02:33] <sustrik> as for the commit it just fixed the comment there, it haven't changed the actual code
| [Tuesday 08 June 2010] [01:03:03] <sustrik> umesh: you have to have zmq_forwarder device in the middle
| [Tuesday 08 June 2010] [01:09:26] <alefka>  hi
| [Tuesday 08 June 2010] [01:10:18] <sustrik> hi
| [Tuesday 08 June 2010] [01:11:03] <umesh>   ok
| [Tuesday 08 June 2010] [01:11:14] <alefka>  I have some questions about 0mq. Could u help me?
| [Tuesday 08 June 2010] [01:11:29] <umesh>   Sustrik: can you explain with very simple example ...
| [Tuesday 08 June 2010] [01:12:02] <sustrik> umesh: have a look here: http://github.com/sustrik/zeromq-chat
| [Tuesday 08 June 2010] [01:12:09] <sustrik> aalefka: yes
| [Tuesday 08 June 2010] [01:12:16] <umesh>   is there are sample code given in the cookbook or anywahere where we have zmq_forwarder in between 
| [Tuesday 08 June 2010] [01:12:20] <umesh>   ok
| [Tuesday 08 June 2010] [01:13:39] <alefka>  I created publisher socket (ZMQ_PUB) and bind it. Can I wait a connection from client on this socket?
| [Tuesday 08 June 2010] [01:14:07] <sustrik> yes
| [Tuesday 08 June 2010] [01:14:18] <sustrik> well, you mean get notified?
| [Tuesday 08 June 2010] [01:14:25] <sustrik> then no
| [Tuesday 08 June 2010] [01:17:35] <alefka>  sustrik: How I can wait? After binding I begin send messages, but because there is no connected subscribers I send this messages in the nowhere
| [Tuesday 08 June 2010] [01:17:58] <sustrik> that's the nature of the thing
| [Tuesday 08 June 2010] [01:18:08] <sustrik> PUB is like a radio transmission
| [Tuesday 08 June 2010] [01:18:20] <sustrik> if noone is listening, the data go to nowhere
| [Tuesday 08 June 2010] [01:18:49] <sustrik> what are you trying to do?
| [Tuesday 08 June 2010] [01:23:49] <alefka>  I need some client/server app which can dispatch about million messages per sec. In my REQ/REP socket tests there is not enough throughput, therefore I trying implement this logic on the PUB/SUB sockets.
| [Tuesday 08 June 2010] [01:27:23] <sustrik> sure
| [Tuesday 08 June 2010] [01:27:40] <sustrik> but why do you need not to drop messages when there's no client?
| [Tuesday 08 June 2010] [01:28:03] <sustrik> how many listerenrs there are in your scenario?
| [Tuesday 08 June 2010] [01:28:07] <sustrik> just a single one?
| [Tuesday 08 June 2010] [01:29:48] <alefka>  sustrik: >> sure. I executed latency tests on a 100 000 messages (16 bytes) and it spend about 5 secs
| [Tuesday 08 June 2010] [01:30:03] <alefka>  sustrik: >> just a single one? : yes
| [Tuesday 08 June 2010] [01:30:43] <sustrik> so all you need is one-to-one communication?
| [Tuesday 08 June 2010] [01:30:55] <sustrik> why aren't you using standard sockets then?
| [Tuesday 08 June 2010] [01:31:59] <sustrik> (there's a PAIR socket for this use case, but it's still experimental and misses features such as reconnection)
| [Tuesday 08 June 2010] [01:35:20] <alefka>  yes. by command of my boss "just test it" :)
| [Tuesday 08 June 2010] [01:36:35] <alefka>  >> (there's a PAIR socket... I will try this feature
| [Tuesday 08 June 2010] [01:38:52] <sustrik> alefka: actually, it won't work
| [Tuesday 08 June 2010] [01:39:09] <sustrik> the problem you are trying to solve is still unresolved in PAIR
| [Tuesday 08 June 2010] [01:39:38] <sustrik> anyway, what's the scenario 0mq is intended to be used in?
| [Tuesday 08 June 2010] [01:39:48] <sustrik> one-to-many data distribution?
| [Tuesday 08 June 2010] [01:40:11] <alefka>  one-to-one
| [Tuesday 08 June 2010] [01:40:54] <sustrik> ok, there's one option
| [Tuesday 08 June 2010] [01:41:11] <sustrik> there are DOWNSTREAM and UPSTREAM sockets
| [Tuesday 08 June 2010] [01:41:20] <sustrik> these are meant for pipelining
| [Tuesday 08 June 2010] [01:41:35] <sustrik> but let's say your one-to-one scenario is a simple pipeline
| [Tuesday 08 June 2010] [01:41:48] <sustrik> use DOWNSTREAM on the publisher side
| [Tuesday 08 June 2010] [01:41:58] <sustrik> and UPSTREAM on the receiver side
| [Tuesday 08 June 2010] [01:42:04] <umesh>   http://www.zeromq.org/code:examples-chat
| [Tuesday 08 June 2010] [01:42:06] <sustrik> the messages should not be dropped
| [Tuesday 08 June 2010] [01:42:09] <umesh>   where can i get this ?
| [Tuesday 08 June 2010] [01:42:18] <sustrik> ?
| [Tuesday 08 June 2010] [01:42:26] <umesh>   its not wirh zeromq sources which I dodnloaded ...
| [Tuesday 08 June 2010] [01:42:29] <umesh>   with*
| [Tuesday 08 June 2010] [01:42:48] <umesh>   the example mentioned in this is not with zeromq sources ..
| [Tuesday 08 June 2010] [01:42:49] <sustrik> it's old outdated tutorial
| [Tuesday 08 June 2010] [01:42:56] <umesh>   ok
| [Tuesday 08 June 2010] [01:43:04] <sustrik> use the github project i've pointed you to
| [Tuesday 08 June 2010] [01:43:08] <umesh>   ok
| [Tuesday 08 June 2010] [01:43:24] <sustrik> see the README file
| [Tuesday 08 June 2010] [01:43:25] <alefka>  How I understand they are contains some buffer inside which stores output/input messages
| [Tuesday 08 June 2010] [01:43:33] <alefka>  is it so?
| [Tuesday 08 June 2010] [01:43:37] <umesh>   I thought this is the more sopisticated example of the link you provided ... therefore just wanted to have a look at it ...
| [Tuesday 08 June 2010] [01:44:02] <sustrik> alefka: yes there are buffers inside sockets
| [Tuesday 08 June 2010] [01:44:15] <sustrik> umesh: it was the old version of the same thing
| [Tuesday 08 June 2010] [01:44:22] <sustrik> some 2 years old :)
| [Tuesday 08 June 2010] [01:45:12] <umesh>   ok
| [Tuesday 08 June 2010] [01:45:33] <umesh>   sustrik: one question ..
| [Tuesday 08 June 2010] [01:45:38] <sustrik> go on
| [Tuesday 08 June 2010] [01:45:42] <alefka>  sustrik: ok
| [Tuesday 08 June 2010] [01:45:50] <umesh>   zmq does not support many to many directly ... right ...
| [Tuesday 08 June 2010] [01:46:25] <sustrik> you mean without device in a middle?
| [Tuesday 08 June 2010] [01:46:26] <umesh>   but this way of doing broker achitecture or many to many will add more latency/delay ... 
| [Tuesday 08 June 2010] [01:46:34] <sustrik> you can do that but it's annoying
| [Tuesday 08 June 2010] [01:46:55] <umesh>   yup ... without device in the middle ...
| [Tuesday 08 June 2010] [01:46:57] <sustrik> you have to bind each publsiher
| [Tuesday 08 June 2010] [01:47:10] <sustrik> and connect to each publisher from each subscriber
| [Tuesday 08 June 2010] [01:47:32] <sustrik> that means subscriber should be aware of all publishers
| [Tuesday 08 June 2010] [01:47:34] <umesh>   which will be better performance wise ...
| [Tuesday 08 June 2010] [01:47:42] <sustrik> yes, it'll be better
| [Tuesday 08 June 2010] [01:47:50] <sustrik> but it's management nightmare :)
| [Tuesday 08 June 2010] [01:47:56] <sustrik> it's up to you
| [Tuesday 08 June 2010] [01:48:13] <umesh>   and when you say annoying ... what is annoying nature in it ...
| [Tuesday 08 June 2010] [01:48:31] <umesh>   ok
| [Tuesday 08 June 2010] [01:48:38] <sustrik> you have to maintail list of publishers at each subscriber
| [Tuesday 08 June 2010] [01:48:48] <umesh>   annoying is subsriber should know publishers ...
| [Tuesday 08 June 2010] [01:48:57] <sustrik> yes
| [Tuesday 08 June 2010] [01:49:14] <umesh>   ok
| [Tuesday 08 June 2010] [01:49:42] <umesh>   thanx ...
| [Tuesday 08 June 2010] [01:49:44] <sustrik> np
| [Tuesday 08 June 2010] [01:50:10] <umesh>   also adding more publishers will be diffcult in that case ...
| [Tuesday 08 June 2010] [01:51:55] <sustrik> yes
| [Tuesday 08 June 2010] [01:52:14] <sustrik> it can be done in opposite way also: publishers have to know subscribers
| [Tuesday 08 June 2010] [01:52:19] <sustrik> but that's even worse
| [Tuesday 08 June 2010] [01:52:40] <umesh>   hmmm ...
| [Tuesday 08 June 2010] [01:52:49] <sustrik> you can still use multicast
| [Tuesday 08 June 2010] [01:53:10] <sustrik> all the publishers publish to the same multicast group
| [Tuesday 08 June 2010] [01:53:25] <sustrik> all the subscribers subscribe to the multicast group
| [Tuesday 08 June 2010] [01:53:33] <sustrik> but it works on LAN only
| [Tuesday 08 June 2010] [01:54:00] <umesh>   yup
| [Tuesday 08 June 2010] [01:54:26] <umesh>   everything has some procs and cons ... better to me looks like is device in the middle ...
| [Tuesday 08 June 2010] [01:54:58] <sustrik> ack
| [Tuesday 08 June 2010] [01:55:08] <umesh>   ack ?
| [Tuesday 08 June 2010] [01:55:32] <sustrik> yes (acknowledged) :)
| [Tuesday 08 June 2010] [01:55:38] <umesh>   ok
| [Tuesday 08 June 2010] [01:55:53] <umesh>   you believe the same ... :)
| [Tuesday 08 June 2010] [01:57:02] <umesh>   one more question : not related to this discussio...
| [Tuesday 08 June 2010] [01:57:16] <umesh>   zmq does not have zmq_select ... why ?
| [Tuesday 08 June 2010] [01:57:30] <umesh>   it does have zmq_poll  ... but not zmq_select ?
| [Tuesday 08 June 2010] [01:58:51] <sustrik> pollsets used in select are in fact bitmaps
| [Tuesday 08 June 2010] [01:59:07] <sustrik> you can use that approach when you fds are integers
| [Tuesday 08 June 2010] [01:59:20] <sustrik> sockets in 0mq are void*
| [Tuesday 08 June 2010] [01:59:27] <sustrik> that doesn't fit to a bitmap
| [Tuesday 08 June 2010] [01:59:48] <umesh>   ok
| [Tuesday 08 June 2010] [02:00:16] <umesh>   is there any way of using standard select with zmq_sockets ...
| [Tuesday 08 June 2010] [02:00:17] <umesh>   ?
| [Tuesday 08 June 2010] [02:01:31] <umesh>   i think no ...
| [Tuesday 08 June 2010] [02:01:42] <umesh>   but still thought asking you ...
| [Tuesday 08 June 2010] [02:09:08] <sustrik> umesh: no way at the moment
| [Tuesday 08 June 2010] [02:09:18] <sustrik> zmq socket is not a file descriptor
| [Tuesday 08 June 2010] [02:09:36] <sustrik> so you cannot use it for polling via *any* standard mechanism
| [Tuesday 08 June 2010] [02:10:02] <sustrik> we'll be moving that way in the future though
| [Tuesday 08 June 2010] [02:12:29] <umesh>   ok
| [Tuesday 08 June 2010] [02:24:32] <umesh>   where is the source code for zmq_server ?
| [Tuesday 08 June 2010] [02:24:38] <umesh>   I did not find any ...
| [Tuesday 08 June 2010] [02:24:43] <sustrik> there's no zmq_server
| [Tuesday 08 June 2010] [02:24:47] <sustrik> where are you looking at?
| [Tuesday 08 June 2010] [02:25:53] <umesh>   http://www.zeromq.org/code:examples-exchange ..
| [Tuesday 08 June 2010] [02:26:03] <umesh>   I also looked at teh sources 
| [Tuesday 08 June 2010] [02:26:07] <umesh>   the*
| [Tuesday 08 June 2010] [02:26:26] <sustrik> it's outdated
| [Tuesday 08 June 2010] [02:26:28] <umesh>   it mentions about zmq_server ...
| [Tuesday 08 June 2010] [02:26:34] <sustrik> i should delete these two papers
| [Tuesday 08 June 2010] [02:26:43] <umesh>   http://www.zeromq.org/code:examples-camera
| [Tuesday 08 June 2010] [02:26:48] <umesh>   even this as well 
| [Tuesday 08 June 2010] [02:26:51] <umesh>   why ?
| [Tuesday 08 June 2010] [02:27:00] <sustrik> it's old documentation
| [Tuesday 08 June 2010] [02:27:05] <umesh>   ok
| [Tuesday 08 June 2010] [02:27:10] <sustrik> it should have been deleted long ago
| [Tuesday 08 June 2010] [02:27:21] <umesh>   is there any new example of this ...
| [Tuesday 08 June 2010] [02:27:32] <sustrik> the one i pointed you to
| [Tuesday 08 June 2010] [02:27:39] <sustrik> is there any problem with it?
| [Tuesday 08 June 2010] [02:28:44] <umesh>   nope ...
| [Tuesday 08 June 2010] [02:29:00] <umesh>   i was just looking at the different code examples ...
| [Tuesday 08 June 2010] [02:29:13] <umesh>   to understand zmq in much better way ...
| [Tuesday 08 June 2010] [02:30:08] <sustrik> dunno, have a look at the blogs
| [Tuesday 08 June 2010] [02:30:24] <sustrik> there's "multithreaded server in 10mins." might be helpful
| [Tuesday 08 June 2010] [02:30:42] <umesh>   also in that chat example you pointed out me ... is there any way to listen to specific events only ...
| [Tuesday 08 June 2010] [02:30:57] <umesh>   we ca do this by selective subscribe ... right ?
| [Tuesday 08 June 2010] [02:31:01] <umesh>   can*
| [Tuesday 08 June 2010] [02:31:05] <sustrik> yes
| [Tuesday 08 June 2010] [02:31:13] <umesh>   instead of subscribing to all messages ...
| [Tuesday 08 June 2010] [02:31:15] <umesh>   ok
| [Tuesday 08 June 2010] [04:28:26] <alefka>  anybody here?
| [Tuesday 08 June 2010] [04:29:28] <guido_g> sure
| [Tuesday 08 June 2010] [04:33:02] <alefka>  guido_g: it seems I found some bug or I'm mistaken. 
| [Tuesday 08 June 2010] [04:36:09] <alefka>  guido_g: why some packets not received when I send them from publisher socket (server side, socket listening) to the client (whos connecting)
| [Tuesday 08 June 2010] [04:38:26] <alefka>  anybody...
| [Tuesday 08 June 2010] [04:49:33] <alefka>  :(
| [Tuesday 08 June 2010] [04:52:22] <sustrik> alfka: i'm here now :)
| [Tuesday 08 June 2010] [04:53:05] <alefka>  sustrik: Hi :)
| [Tuesday 08 June 2010] [04:53:18] <alefka>  it seems I found some bug or I'm mistaken.
| [Tuesday 08 June 2010] [04:53:25] <alefka>  why some packets not received when I send them from publisher socket (server side, socket listening) to the client (whos connecting)
| [Tuesday 08 June 2010] [04:53:48] <sustrik> while the client is _connecting_ and not yet _connected_ the messages are dropped
| [Tuesday 08 June 2010] [04:54:04] <sustrik> as i said, it's like radio transmission
| [Tuesday 08 June 2010] [04:54:06] <alefka>  but waiting a client connection
| [Tuesday 08 June 2010] [04:54:24] <sustrik> ?
| [Tuesday 08 June 2010] [04:54:26] <alefka>  just reading from keyboard char
| [Tuesday 08 June 2010] [04:54:39] <alefka>  but I'm waiting a client connection
| [Tuesday 08 June 2010] [04:54:55] <sustrik> but it's not yet connected, right?
| [Tuesday 08 June 2010] [04:55:20] <sustrik> it's PUB/SUB?
| [Tuesday 08 June 2010] [04:55:45] <sustrik> can you show your test program?
| [Tuesday 08 June 2010] [04:55:53] <alefka>  yes
| [Tuesday 08 June 2010] [04:56:00] <alefka>  how I can send you it?
| [Tuesday 08 June 2010] [04:57:41] <sustrik> it doesn't seem to get through
| [Tuesday 08 June 2010] [04:57:50] <sustrik> paste is to some public board
| [Tuesday 08 June 2010] [04:58:21] <sustrik> or send it be email
| [Tuesday 08 June 2010] [04:59:04] <alefka>  what is your email?
| [Tuesday 08 June 2010] [04:59:22] <sustrik> send it to the mailing list
| [Tuesday 08 June 2010] [04:59:28] <sustrik> or is it private?
| [Tuesday 08 June 2010] [04:59:53] <sustrik> confidential i mean?
| [Tuesday 08 June 2010] [05:00:37] <alefka>  I don't see.
| [Tuesday 08 June 2010] [05:01:15] <alefka>  sustrik@chello089173040080.chello.sk ????
| [Tuesday 08 June 2010] [05:02:07] <sustrik> see here: http://www.zeromq.org/mailing-lists
| [Tuesday 08 June 2010] [05:11:11] <alefka>  files attach to the message or insert into the body?
| [Tuesday 08 June 2010] [05:11:34] <alefka>  *as text
| [Tuesday 08 June 2010] [05:12:59] <sustrik> doesn't matter
| [Tuesday 08 June 2010] [05:20:21] <alefka>  sended
| [Tuesday 08 June 2010] [06:31:20] <versificateur>   hello
| [Tuesday 08 June 2010] [06:32:48] <versificateur>   could someone good in JNI have a look at this?
| [Tuesday 08 June 2010] [06:33:14] <versificateur>   http://pastebin.com/D7bA0ENV
| [Tuesday 08 June 2010] [06:34:04] <versificateur>   I tried to run a java code on it but it crash
| [Tuesday 08 June 2010] [06:34:57] <versificateur>   sustrik: your help is welcome
| [Tuesday 08 June 2010] [06:36:13] <sustrik> versificateur: you have to convrt jobject representing the 0MQ socket to handle to the socket
| [Tuesday 08 June 2010] [06:36:51] <sustrik> iirc the jobject contains the void* stored as jint 
| [Tuesday 08 June 2010] [06:36:58] <sustrik> or something like that
| [Tuesday 08 June 2010] [07:02:23] <versificateur>   i correct it
| [Tuesday 08 June 2010] [07:02:25] <versificateur>   thanks
| [Tuesday 08 June 2010] [07:02:39] <versificateur>   it's seems that it works
| [Tuesday 08 June 2010] [07:03:16] <versificateur>   i'll test with some REQ/REP code
| [Tuesday 08 June 2010] [07:06:40] <umesh>   subscribe to specific topic not working ...
| [Tuesday 08 June 2010] [07:06:56] <umesh>   I am using the simple chat program using forwarder ...
| [Tuesday 08 June 2010] [07:07:08] <umesh>   I want to display the specic messages ...
| [Tuesday 08 June 2010] [07:07:53] <umesh>   so what I did was I subscribed to the specific messages ... using s.setsockopt (ZMQ_SUBSCRIBE, "umesh\x00", 0);
| [Tuesday 08 June 2010] [07:08:06] <umesh>   and i haven't change the code for prompt ...
| [Tuesday 08 June 2010] [07:08:11] <sustrik> the third argument is the size
| [Tuesday 08 June 2010] [07:08:24] <umesh>   ohhh ... i missed it ...
| [Tuesday 08 June 2010] [07:08:27] <umesh>   sorry ...
| [Tuesday 08 June 2010] [07:08:30] <sustrik> :)
| [Tuesday 08 June 2010] [07:08:35] <umesh>   I knew it but ... i forgot ...
| [Tuesday 08 June 2010] [07:10:48] <CIA-17>  zeromq-examples: 03Martin Lucina 07master * r8cee253 10/ zmq-camera.c : Update to 0MQ 2.0.7 API - http://bit.ly/9qJTRz
| [Tuesday 08 June 2010] [07:12:55] <versificateur>   sustrik: if i bind a socket will it be opened or only when i started send/recv data?? 
| [Tuesday 08 June 2010] [07:14:07] <versificateur>   because i bind a PUB socket on a TCP port but executing a netstat command do show it
| [Tuesday 08 June 2010] [07:14:53] <sustrik> bind translates to standard TCP bind
| [Tuesday 08 June 2010] [07:15:03] <sustrik> connect translates to TCP connect
| [Tuesday 08 June 2010] [07:26:20] <CIA-17>  zeromq-examples: 03Martin Lucina 07turbo * r267de4a 10/ zmq-camera.c : Update to 0MQ 2.0.7 API - http://bit.ly/a3fCGF
| [Tuesday 08 June 2010] [07:33:13] <umesh>   in setsocket_opt like s.setsockopt (ZMQ_SUBSCRIBE, "xy.z\x00", 5);
| [Tuesday 08 June 2010] [07:33:23] <umesh>   why it is required to give \x00 ...
| [Tuesday 08 June 2010] [07:33:46] <umesh>   if i just give "xy.z" will also be null terminated ...
| [Tuesday 08 June 2010] [07:33:52] <umesh>   ?
| [Tuesday 08 June 2010] [07:34:39] <guido_g> the \000 is part of the subscription
| [Tuesday 08 June 2010] [07:35:00] <sustrik> it's used as delimiter in the example
| [Tuesday 08 June 2010] [07:35:12] <sustrik> if it's confusing use some other character instead
| [Tuesday 08 June 2010] [07:35:14] <sustrik> like |
| [Tuesday 08 June 2010] [07:35:18] <sustrik> or something
| [Tuesday 08 June 2010] [07:36:48] <umesh>   ok
| [Tuesday 08 June 2010] [07:36:51]    * sustrik thinks the \x00 should be replaced by something more sane in the cookbook...
| [Tuesday 08 June 2010] [07:37:06] <umesh>   its really very confusing ...
| [Tuesday 08 June 2010] [07:37:24] <sustrik> let me see...
| [Tuesday 08 June 2010] [07:37:30] <umesh>   i think in cookbook you can update this ...
| [Tuesday 08 June 2010] [07:37:56] <umesh>   also strlen gives difficulty if we use delimiter as \x00 ..
| [Tuesday 08 June 2010] [07:38:51] <sustrik> umesh: want to do that?
| [Tuesday 08 June 2010] [07:40:50] <umesh>   yup I can also do that ...
| [Tuesday 08 June 2010] [07:40:57] <sustrik> great, thanks!
| [Tuesday 08 June 2010] [07:41:08] <umesh>   but do I have rights to change cookbook text ...
| [Tuesday 08 June 2010] [07:41:16] <sustrik> you have to join the wiki to be able to edit
| [Tuesday 08 June 2010] [07:41:22] <sustrik> see left below
| [Tuesday 08 June 2010] [07:41:22] <umesh>   ok
| [Tuesday 08 June 2010] [07:41:33] <umesh>   I have already joined it ...
| [Tuesday 08 June 2010] [07:41:43] <sustrik> ah, then just edit it
| [Tuesday 08 June 2010] [07:46:21] <umesh>   does password update takes time ...
| [Tuesday 08 June 2010] [07:46:40] <umesh>   i am not able to login ... it says login and password does not match
| [Tuesday 08 June 2010] [07:46:47] <sustrik> :)
| [Tuesday 08 June 2010] [07:46:54] <sustrik> dunno
| [Tuesday 08 June 2010] [07:47:09] <sustrik> maybe you've made type when entering it?
| [Tuesday 08 June 2010] [07:47:13] <sustrik> typo
| [Tuesday 08 June 2010] [07:47:46] <umesh>   confirmed 2 times ...
| [Tuesday 08 June 2010] [07:48:16] <sustrik> ignore it and create a new account
| [Tuesday 08 June 2010] [07:55:54] <umesh>   done 
| [Tuesday 08 June 2010] [07:56:00] <umesh>   check the page once ...
| [Tuesday 08 June 2010] [07:56:12] <umesh>   http://www.zeromq.org/docs:cookbook
| [Tuesday 08 June 2010] [07:56:35] <umesh>   one more question : When I susbscribe to a topic ...
| [Tuesday 08 June 2010] [07:56:52] <umesh>   I get complete message with topic prefix ...
| [Tuesday 08 June 2010] [07:56:59] <umesh>   is it correct behaviour  ?
| [Tuesday 08 June 2010] [07:57:33] <umesh>   because I have assumed that it will only give me the message without topic ...
| [Tuesday 08 June 2010] [08:01:23] <guido_g> where does this assumption come from?
| [Tuesday 08 June 2010] [08:01:33] <guido_g> the topic is part of the (multipart-)message
| [Tuesday 08 June 2010] [08:13:26] <umesh>   it was just my thinking that topic will be removed before giving it to user ... not from any reading ...
| [Tuesday 08 June 2010] [08:16:48] <versificateur>   how can i read ONLY a part of a multipart message with java binding
| [Tuesday 08 June 2010] [08:17:05] <versificateur>   for example with a socket like this
| [Tuesday 08 June 2010] [08:17:16] <versificateur>   jsonSubscriber.setsockopt(ZMQ.SUBSCRIBE, "servers.smpp");
| [Tuesday 08 June 2010] [08:17:32] <sustrik> umesh: look good
| [Tuesday 08 June 2010] [08:17:41] <sustrik> but you forgot this piece: "Messages that receivers are going to subscribe to have to start with a NULL-terminated string (the topic)"
| [Tuesday 08 June 2010] [08:17:53] <sustrik> it's |-terminated now
| [Tuesday 08 June 2010] [08:18:19] <versificateur>   actually i got two messages 
| [Tuesday 08 June 2010] [08:18:49] <sustrik> if you send two messages
| [Tuesday 08 June 2010] [08:18:56] <sustrik> you receive two messages
| [Tuesday 08 June 2010] [08:19:09] <sustrik> there's nothing to do about that
| [Tuesday 08 June 2010] [08:20:01] <umesh>   yup
| [Tuesday 08 June 2010] [08:20:12] <umesh>   I will change that ...
| [Tuesday 08 June 2010] [08:22:06] <umesh>   done the change ...
| [Tuesday 08 June 2010] [08:24:50] <versificateur>   i thought that if subscribe with the channel name i'll only receive one message
| [Tuesday 08 June 2010] [08:25:57] <versificateur>   the message alone, not with the channel name as another message
| [Tuesday 08 June 2010] [08:27:33] <sustrik> it's fifo
| [Tuesday 08 June 2010] [08:27:41] <sustrik> what goes in, get out
| [Tuesday 08 June 2010] [08:28:15] <sustrik> umesh: thx
| [Tuesday 08 June 2010] [08:31:39] <versificateur>   yes I knew... but when i use the python bindings i only receive the message itself not the channel  
| [Tuesday 08 June 2010] [08:33:11] <versificateur>   so what <socket>.setsockopt(ZMQ.SUBSCRIBE, <some channel>); does in java bindings?
| [Tuesday 08 June 2010] [08:35:20] <sustrik> see zmq_setsockopt(3) man page
| [Tuesday 08 June 2010] [08:39:26] <umesh>   in zmq how we can do content based publish/subscrive instead of topic based ...
| [Tuesday 08 June 2010] [08:40:56] <sustrik> you want to add your own matching algorithm?
| [Tuesday 08 June 2010] [08:42:48] <umesh>   yup ...
| [Tuesday 08 June 2010] [08:43:02] <umesh>   how can i do that if I need to do ...
| [Tuesday 08 June 2010] [08:43:23] <umesh>   it not decided yet ... but I am trying to evalute that option as well ... 
| [Tuesday 08 June 2010] [08:54:25] <versificateur>   sustrik: so SUBSCRIBE setsockopt is only a filter ? i'll receive the channel submessage as well as the data submessage?
| [Tuesday 08 June 2010] [08:57:08] <versificateur>   like i started with the python bindings which has recv_multipart that handle each part sent I thought it was like that in java also
| [Tuesday 08 June 2010] [08:57:55] <versificateur>   but i'll have to do my recv multipart myself
| [Tuesday 08 June 2010] [08:58:52] <versificateur>   sustrik: I need more information on device behavior like it's not documented
| [Tuesday 08 June 2010] [09:00:06] <versificateur>   it's seems that it run an infinite loop in background
| [Tuesday 08 June 2010] [09:01:06] <versificateur>   because code after it don't run
| [Tuesday 08 June 2010] [09:03:24] <sustrik> umesh: you have to plug in your own algorithm
| [Tuesday 08 June 2010] [09:03:47] <sustrik> the current algorithm is placed in src/prefix_tree.hpp and .cpp
| [Tuesday 08 June 2010] [09:04:22] <sustrik> versificatuer: there's no such thing as channel and data submessages
| [Tuesday 08 June 2010] [09:04:29] <sustrik> there are just messages
| [Tuesday 08 June 2010] [09:04:34] <sustrik> some of them are single-part
| [Tuesday 08 June 2010] [09:04:40] <sustrik> some of them are multipart
| [Tuesday 08 June 2010] [09:05:08] <sustrik> subscription means 0MQ looks at the message and checks whether it's beginning matches the subscription
| [Tuesday 08 June 2010] [09:05:14] <sustrik> if not so it drops it
| [Tuesday 08 June 2010] [09:05:16] <sustrik> that's it
| [Tuesday 08 June 2010] [09:05:25] <versificateur>   well
| [Tuesday 08 June 2010] [09:05:38] <versificateur>   i understand
| [Tuesday 08 June 2010] [09:05:59] <versificateur>   it's a filter
| [Tuesday 08 June 2010] [09:06:00] <sustrik> versificateur: wrt device, yes it uses your thread to loop
| [Tuesday 08 June 2010] [09:07:23] <versificateur>   ok it's why you put it at the end of your multithreaded example
| [Tuesday 08 June 2010] [09:08:06] <sustrik> yes
| [Tuesday 08 June 2010] [09:08:35] <versificateur>   thanks!
| [Tuesday 08 June 2010] [09:08:37] <sustrik> np
| [Tuesday 08 June 2010] [09:09:20] <versificateur>   i finished test of Device implemetation in java
| [Tuesday 08 June 2010] [09:09:40] <versificateur>   i'll put it on giithub and ask you for a pull equest
| [Tuesday 08 June 2010] [09:14:15] <sustrik> grat, thanks!
| [Tuesday 08 June 2010] [09:21:45] <versificateur>   is  SNDMORE in java bindings implemented to send mutipart message?
| [Tuesday 08 June 2010] [09:24:45] <sustrik> not sure
| [Tuesday 08 June 2010] [09:24:47] <sustrik> let me see
| [Tuesday 08 June 2010] [09:25:46] <sustrik> a-ha it misses
| [Tuesday 08 June 2010] [09:26:44] <sustrik> should go to ZMQ.java
| [Tuesday 08 June 2010] [09:26:46] <sustrik> like this:
| [Tuesday 08 June 2010] [09:26:48] <sustrik> public static final int NOBLOCK = 1;
| [Tuesday 08 June 2010] [09:26:54] <sustrik> public static final int SNDMORE = 2;
| [Tuesday 08 June 2010] [09:27:13] <sustrik> will you add that to your fix?
| [Tuesday 08 June 2010] [09:27:28] <versificateur>   yes
| [Tuesday 08 June 2010] [11:36:06] <sustrik> versificateur: there's a question for you on the mailing list
| [Tuesday 08 June 2010] [11:36:39] <versificateur>   susrik: okay 
| [Tuesday 08 June 2010] [11:37:16] <versificateur>   i send the pull request to you only?? or to mato too?
| [Tuesday 08 June 2010] [11:39:58] <versificateur>   sustrik:???
| [Tuesday 08 June 2010] [11:40:40] <sustrik> send it to me
| [Tuesday 08 June 2010] [11:41:28] <sustrik> thx!
| [Tuesday 08 June 2010] [11:42:05] <versificateur>   :)
| [Tuesday 08 June 2010] [11:42:44] <versificateur>   the link to check the mailing list question
| [Tuesday 08 June 2010] [11:42:59] <versificateur>   i don't find it
| [Tuesday 08 June 2010] [12:51:09] <mikko>   sustrik: http://pastebin.com/8c824QBZ
| [Tuesday 08 June 2010] [12:52:13] <mikko>   happens when you dont send/recv/bind/connect
| [Tuesday 08 June 2010] [12:52:17] <mikko>   just create context and socket
| [Tuesday 08 June 2010] [15:32:59] <sustrik> mikko: i think it's OK
| [Tuesday 08 June 2010] [15:33:25] <sustrik> command_t structure that is being sent
| [Tuesday 08 June 2010] [15:33:30] <sustrik> is actually a union
| [Tuesday 08 June 2010] [15:33:56] <sustrik> for this particular command type there is less actual data than sizeof (command_t)
| [Tuesday 08 June 2010] [15:34:09] <sustrik> that's why valgring complains
| [Tuesday 08 June 2010] [16:28:39] <dermoth> Hey there... It's been a while I wantes to ask this; I'm curious about the high water mark
| [Tuesday 08 June 2010] [16:28:51] <dermoth>  /swap options, specifically how they work and where the data is stored...
| [Tuesday 08 June 2010] [16:29:21] <sustrik> dermoth: hi
| [Tuesday 08 June 2010] [16:29:26] <dermoth> hy sustrik 
| [Tuesday 08 June 2010] [16:29:47] <dermoth> hi
| [Tuesday 08 June 2010] [16:29:50] <sustrik> hwm limits number of messages in the memory
| [Tuesday 08 June 2010] [16:29:58] <dermoth> I understand the concept
| [Tuesday 08 June 2010] [16:30:04] <sustrik> swap is not ported from 1.0 yet
| [Tuesday 08 June 2010] [16:30:13] <sustrik> but should arrive soon
| [Tuesday 08 June 2010] [16:30:18] <dermoth> oh so it's just a no-op right now?
| [Tuesday 08 June 2010] [16:30:24] <sustrik> yes
| [Tuesday 08 June 2010] [16:30:54] <sustrik> it should simply offload the data on the HD when memory limits are hit
| [Tuesday 08 June 2010] [16:33:42] <dermoth> Ok, assuming it was working as expected, lets say I have web server workers that connects using an upstream/downstream scheme... could I just set HWM to zero (or nearly zero) to swap everything to disk when my forwarder device goes down? If the server crash and gets back up, will zeromq try to resume the transferts as soon as it is initialized? connected to the same device again?
| [Tuesday 08 June 2010] [16:34:37] <sustrik> no, it's not a persistence device
| [Tuesday 08 June 2010] [16:34:38] <dermoth> obviously with ZMQ_SWAP too ;)
| [Tuesday 08 June 2010] [16:34:44] <sustrik> it's swap
| [Tuesday 08 June 2010] [16:35:04] <dermoth> ok, so it's just to avoid using up all memory
| [Tuesday 08 June 2010] [16:35:05] <sustrik> used just to handle the situation when the data don't fit into memory
| [Tuesday 08 June 2010] [16:35:14] <sustrik> exactly
| [Tuesday 08 June 2010] [16:35:14] <dermoth> I see
| [Tuesday 08 June 2010] [16:43:12] <travisbrady> Where can I find the stock exchange example?  ./configure --with-exchange isn't recognized anymore.
| [Tuesday 08 June 2010] [16:52:57] <sustrik> it haven't been ported to 0MQ/2.0 yet
| [Tuesday 08 June 2010] [16:53:19] <sustrik> you can give it a try
| [Tuesday 08 June 2010] [16:56:31] <travisbrady> Ahh, ok, I'll take a look in the old repo on github
| [Tuesday 08 June 2010] [18:45:08] <jugg>    ZMQ_PAIR - for inproc:// endpoints, is the implementation usable?  The docs say its still experiemental (missing auto-reconnection), but I think that may not be so applicable to inproc?
| [Tuesday 08 June 2010] [18:47:28] <dermoth> jugg, I guess inproc reconnection migth be needed if you have threads that may restart and re-bind... I have no idea how stable it is though :)
| [Tuesday 08 June 2010] [18:51:05] <jugg>    For this implementation, that situation won't(!) occur.
| [Tuesday 08 June 2010] [18:53:27] <jugg>    hmm, "auto-reconnection" I hope has different meaning than one side of the endpoint closing the socket and re-opening though.
| [Tuesday 08 June 2010] [18:55:27] <jugg>    sockets are per thread, so it would be necessary to close the socket on thread exit, and create the socket on thread start.  I'd expect that use case *not* to fall under the missing "auto-reconnection" feature.
| [Tuesday 08 June 2010] [18:56:11] <jugg>    But my expectations don't always line up with reality :)
| [Tuesday 08 June 2010] [19:05:26] <dermoth> jugg, I could be wrong, but my understanding is that auto-reconnection means if the side that bind shuts down and restart, the socket will re-connect.
| [Tuesday 08 June 2010] [19:06:26] <dermoth> jugg, this is how it works with TCP...
| [Tuesday 08 June 2010] [19:08:29] <dermoth> note that unless you use req/rep sockets there is no guarantee the data will be delivered - however as long as your socket stays alive it will keep trying to deliver the data (that is with TCP)
| [Tuesday 08 June 2010] [19:14:10] <jugg>    Yah, if the bind socket goes away, I could see that "auto-reconnect" could be applicable to connected sockets.  thanks.
| [Wednesday 09 June 2010] [02:41:12] <jugg>  grrr. inproc requires the bind to occur before connect?  :(
| [Wednesday 09 June 2010] [02:42:12] <sustrik>   jugg: yes
| [Wednesday 09 June 2010] [02:42:18] <sustrik>   fixing it is on todo list
| [Wednesday 09 June 2010] [02:43:09] <jugg>  ok... back to managing thread startup synchronization :(
| [Wednesday 09 June 2010] [02:48:38] <sustrik>   jugg: don't you rather want to fix it in 0mq? it would be probably less hassle.
| [Wednesday 09 June 2010] [02:48:47] <sustrik>   i can give you pointers as where to look
| [Wednesday 09 June 2010] [02:49:11] <jugg>  please do
| [Wednesday 09 June 2010] [02:49:18] <sustrik>   ok, wait a sec
| [Wednesday 09 June 2010] [02:50:22] <sustrik>   have a look here:
| [Wednesday 09 June 2010] [02:50:23] <sustrik>   http://github.com/sustrik/zeromq2/blob/master/src/ctx.hpp#L144
| [Wednesday 09 June 2010] [02:50:42] <sustrik>   it's a map of inproc endpoints created by binds
| [Wednesday 09 June 2010] [02:51:24] <sustrik>   when a socket connects to an inproc endpoint it checks this map and finds the socket that created it
| [Wednesday 09 June 2010] [02:51:54] <sustrik>   what's missing is a similar map of endpoint people wish to connect to, but which don't exist at the moment
| [Wednesday 09 June 2010] [02:53:55] <sustrik>   then have a look here:
| [Wednesday 09 June 2010] [02:53:56] <sustrik>   http://github.com/sustrik/zeromq2/blob/master/src/ctx.hpp#L144
| [Wednesday 09 June 2010] [02:54:06] <sustrik>   sorry
| [Wednesday 09 June 2010] [02:54:07] <sustrik>   here:
| [Wednesday 09 June 2010] [02:54:08] <sustrik>   http://github.com/sustrik/zeromq2/blob/master/src/ctx.cpp#L260
| [Wednesday 09 June 2010] [02:54:26] <sustrik>   register_endpoint is a function that's called when inproc bind is done
| [Wednesday 09 June 2010] [02:54:36] <sustrik>   aside of storing the name in the map
| [Wednesday 09 June 2010] [02:54:57] <sustrik>   it should check whether there are any sockets waiting to connect to the newly created endpoint
| [Wednesday 09 June 2010] [02:55:04] <sustrik>   and if so, connect them
| [Wednesday 09 June 2010] [02:56:07] <jugg>  ok, thanks.  I'll look through it.
| [Wednesday 09 June 2010] [02:56:18] <sustrik>   the inproc connecting code is here: http://github.com/sustrik/zeromq2/blob/master/src/socket_base.cpp#L181
| [Wednesday 09 June 2010] [02:56:52] <sustrik>   in overall, the whole thing has some 100-200 lines, so it should not be too complex to fix
| [Wednesday 09 June 2010] [06:25:35] <mikko> ZMQ_SNDMORE is a flag to send rather than setsockopt, right?
| [Wednesday 09 June 2010] [06:29:58] <sustrik>   yes
| [Wednesday 09 June 2010] [06:30:18] <sustrik>   mikko: ZMQ_RCVMORE on the other hand is a socketopt
| [Wednesday 09 June 2010] [06:30:42] <sustrik>   it's kind of asymetric, but the API looks the least complex this way
| [Wednesday 09 June 2010] [06:42:17] <mikko> rcvmore is uint64_t 
| [Wednesday 09 June 2010] [06:42:17] <mikko> ?
| [Wednesday 09 June 2010] [06:44:55] <mikko> int64t
| [Wednesday 09 June 2010] [06:46:14] <sustrik>   int64_t
| 
| *** Logfile started
| *** on Wed Jun 9 11:14:03 2010
| 
| [Wednesday 09 June 2010] [11:49:44] <CIA-17>    zeromq2: 03Martin Sustrik 07master * r604f747 10/ src/poll.cpp : issue 32 - poll_t poller broken - http://bit.ly/aucae6
| 
| *** Logfile started
| *** on Wed Jun 9 19:09:19 2010
| 
| [Wednesday 09 June 2010] [19:43:45] <travisbrady>   sustrik: they are in the same os thread yes
| [Thursday 10 June 2010] [00:43:24] <sustrik>    travisbrady: ok
| [Thursday 10 June 2010] [00:43:40] <sustrik>    can you get a backtrace from the bus error?
| [Thursday 10 June 2010] [00:54:43] <travisbrady>    sustrik: I actually worked through the earlier issue, I'm now working on zmq_msg_data
| [Thursday 10 June 2010] [01:02:37] <sustrik>    ok, so everthing works ok as for now?
| [Thursday 10 June 2010] [01:02:56] <travisbrady>    well, now I'm getting "Assertion failed: !inpipe && !outpipe (pair.cpp:47)"
| [Thursday 10 June 2010] [01:03:04] <travisbrady>    Looking at pair.cpp now
| [Thursday 10 June 2010] [01:03:42] <sustrik>    travisbrady: pair is unfinished
| [Thursday 10 June 2010] [01:04:13] <sustrik>    docs say:
| [Thursday 10 June 2010] [01:04:14] <sustrik>    Note
| [Thursday 10 June 2010] [01:04:14] <sustrik>                   ZMQ_PAIR sockets are experimental, and are currently missing several features such as auto-reconnection.
| [Thursday 10 June 2010] [01:04:40] <sustrik>    so rather try using different socket type
| [Thursday 10 June 2010] [01:05:06] <travisbrady>    Hmm, I was using type 4
| [Thursday 10 June 2010] [01:05:38] <sustrik>    REP?
| [Thursday 10 June 2010] [01:05:42] <sustrik>    that one is OK
| [Thursday 10 June 2010] [01:07:23] <travisbrady>    sustrik: Yeah, I'm basically trying to implement the simple client server app from http://www.zeromq.org/docs:cookbook in ocaml as a test
| [Thursday 10 June 2010] [01:08:04] <sustrik>    sure, that should work
| [Thursday 10 June 2010] [01:08:25] <sustrik>    just avoid PAIR sockets
| [Thursday 10 June 2010] [01:11:56] <travisbrady>    Hmm, yeah I'm not touching them at all, I have no idea how I'm reaching that assertion in pair.cpp
| [Thursday 10 June 2010] [01:13:52] <sustrik>    uninitialised socket type used (0 = pair)?
| [Thursday 10 June 2010] [01:15:41] <travisbrady>    Ahh, yep, you're right.  There was a problem in my wrap_zmq_socket function
| [Thursday 10 June 2010] [01:21:53] <CIA-17> zeromq2: 03Martin Sustrik 07master * rd329c55 10/ src/tcp_connecter.cpp : issue 31 - Assertion failed: err == ECONNREFUSED || err == ETIMEDOUT (tcp_connecter.cpp:296) - http://bit.ly/aOnmHR
| [Thursday 10 June 2010] [01:21:54] <CIA-17> zeromq2: 03Martin Sustrik 07master * r76e0153 10/ (4 files): issue 33 - missing virtual destructors - http://bit.ly/9Xaca8
| [Thursday 10 June 2010] [01:34:53] <CIA-17> zeromq2: 03Piotr Trojanek 07master * r8782b4d 10/ configure.in : -lcrypto added to linking flags for QNX - http://bit.ly/b35ZMj
| 
| *** Logfile started
| *** on Thu Jun 10 05:49:53 2010
| 
| [Thursday 10 June 2010] [06:37:09] <CIA-17> zeromq2: 03Martin Sustrik 07master * r74a3907 10/ (src/encoder.hpp src/uuid.cpp): couple of ICC warnings fixed - http://bit.ly/9CRrH6
| [Thursday 10 June 2010] [06:56:44] <alefka> hi
| [Thursday 10 June 2010] [06:58:23] <CIA-17> zeromq2: 03Piotr Trojanek 07master * rc818b14 10/ src/ctx.cpp : clearing thread info structure - http://bit.ly/bjl1Cr
| [Thursday 10 June 2010] [06:58:31] <alefka> Has any possibility to point length of data to send?
| [Thursday 10 June 2010] [06:59:29] <sustrik>    alefka: you don't know how much data you want to send?
| [Thursday 10 June 2010] [07:00:14]   * sustrik is puzzled
| [Thursday 10 June 2010] [07:00:56] <alefka> know. I have large buffer (64 K), but I want to send for example the first 20 bytes... Can I do it without recreation of array?
| [Thursday 10 June 2010] [07:01:44] <alefka> just point to send function a length parameter for example or something else
| [Thursday 10 June 2010] [07:02:31] <alefka> In the regular zeromq lib I have no found the one
| [Thursday 10 June 2010] [07:02:44] <sustrik>    zmq::message_t msg  (20);
| [Thursday 10 June 2010] [07:02:54] <sustrik>    memcpy (msg.data (), buffer, 20);
| [Thursday 10 June 2010] [07:02:58] <sustrik>    s.send (msg);
| [Thursday 10 June 2010] [07:07:56] <alefka> aha... I use Java
| [Thursday 10 June 2010] [07:08:02] <alefka> :)
| [Thursday 10 June 2010] [07:23:54] <umesh>  I am getting error while compiling python bindings of zeromq
| [Thursday 10 June 2010] [07:24:20] <umesh>  zmq/_zmq.c: In function init_zmq:
| [Thursday 10 June 2010] [07:24:21] <umesh>  zmq/_zmq.c:9723: error: ZMQ_PAIR undeclared (first use in this function)
| [Thursday 10 June 2010] [07:24:21] <umesh>  zmq/_zmq.c:9723: error: (Each undeclared identifier is reported only once
| [Thursday 10 June 2010] [07:24:21] <umesh>  zmq/_zmq.c:9723: error: for each function it appears in.)
| [Thursday 10 June 2010] [07:24:32] <umesh>  these are the errors i get 
| [Thursday 10 June 2010] [07:26:18] <sustrik>    umesh: do you have latest pyzmq?
| [Thursday 10 June 2010] [07:26:48] <umesh>  i version before latest ...
| [Thursday 10 June 2010] [07:26:54] <umesh>  as i am using 2.0.6 
| [Thursday 10 June 2010] [07:27:05] <umesh>  1 version before latest ...
| [Thursday 10 June 2010] [07:27:39] <sustrik>    the latest version updates to 2.0.7 API:
| [Thursday 10 June 2010] [07:27:40] <sustrik>    Updating to new 2.0.7 API changes.
| [Thursday 10 June 2010] [07:27:40] <sustrik>    * Context only takes the number of io threads.
| [Thursday 10 June 2010] [07:27:40] <sustrik>    * P2P -> PAIR.
| [Thursday 10 June 2010] [07:27:40] <sustrik>    * No stopwatch.
| [Thursday 10 June 2010] [07:27:40] <sustrik>    * No LWM socket option.
| [Thursday 10 June 2010] [07:29:23] <umesh>  thats the reason i am not using latest ... because i am using zmq c version  2.0.6
| [Thursday 10 June 2010] [07:34:27] <sustrik>    then use P2P
| [Thursday 10 June 2010] [07:34:34] <sustrik>    it was renamed to PAIR in 2.0.7
| [Thursday 10 June 2010] [07:36:54] <alefka> sustrik: \I suppose java lib has no such oportunity... is it so?
| [Thursday 10 June 2010] [07:37:18] <sustrik>    java lib works with java byte arrays
| [Thursday 10 June 2010] [07:37:37] <alefka> ok
| [Thursday 10 June 2010] [07:37:42] <sustrik>    is it a problem to take first 20 characters from a byte array?
| [Thursday 10 June 2010] [07:37:54] <sustrik>    arr [0..19]
| [Thursday 10 June 2010] [07:37:56] <sustrik>    or something
| [Thursday 10 June 2010] [07:38:03]   * sustrik doesn't speak java
| [Thursday 10 June 2010] [08:44:18] <umesh>  can i ask some git questions here .
| [Thursday 10 June 2010] [08:44:46] <umesh>  basically how to go to i version back for a specific file in git respository if you are at head 
| [Thursday 10 June 2010] [11:33:43] <CIA-17> rbzmq: 03Brian Buchanan 07master * r12c3a9f 10/ rbzmq.cpp : whitespace cleanup for consistent coding style - http://bit.ly/9CGo7J
| [Thursday 10 June 2010] [11:33:43] <CIA-17> rbzmq: 03Brian Buchanan 07master * r1f7c517 10/ rbzmq.cpp : fix crash on access of socket that has been closed - http://bit.ly/dfwZoH
| [Thursday 10 June 2010] [12:16:20] <sbeaulois>  hi 
| [Thursday 10 June 2010] [12:19:51] <sbeaulois>  I tried to bind pyzmq on  rhel 5 but i got some error m=when finish binding 
| [Thursday 10 June 2010] [12:20:38] <sbeaulois>  i cannot import zmq module from comand 
| [Thursday 10 June 2010] [12:21:05] <guido_g>    paste the error message to a paste-bin
| [Thursday 10 June 2010] [12:21:22] <guido_g>    w/o the messages we can't help
| [Thursday 10 June 2010] [12:21:24] <sbeaulois>  cannot import name _zmq
| [Thursday 10 June 2010] [12:21:35] <guido_g>    -> <sbeaulois> I tried to bind pyzmq on  rhel 5 but i got some error m=when finish binding
| [Thursday 10 June 2010] [12:22:15] <guido_g>    what shall this line say?
| [Thursday 10 June 2010] [12:22:29] <sbeaulois>  my english is not good 
| [Thursday 10 June 2010] [12:22:30] <sbeaulois>  ok 
| [Thursday 10 June 2010] [12:22:42] <sbeaulois>  i will like bind pyzmq 
| [Thursday 10 June 2010] [12:23:00] <sbeaulois>  on RedHat Entriprise Linux 5
| [Thursday 10 June 2010] [12:24:50] <guido_g>    what do you mean with "bind"?
| [Thursday 10 June 2010] [12:25:10] <sbeaulois>  install
| [Thursday 10 June 2010] [12:25:20] <guido_g>    ahhh
| [Thursday 10 June 2010] [12:25:25] <sbeaulois>  i will compiled pyzmq
| [Thursday 10 June 2010] [12:25:33] <guido_g>    ok
| [Thursday 10 June 2010] [12:25:38] <guido_g>    any errors there?
| [Thursday 10 June 2010] [12:25:53] <sbeaulois>  i compiled pyzmq fine
| [Thursday 10 June 2010] [12:26:09] <guido_g>    ok
| [Thursday 10 June 2010] [12:26:16] <guido_g>    how did you do that?
| [Thursday 10 June 2010] [12:26:21] <sbeaulois>  but when i tried to import zmq from python command line i got somes errors 
| [Thursday 10 June 2010] [12:26:31] <sbeaulois>   cannot import name _zmq
| [Thursday 10 June 2010] [12:26:55] <guido_g>    how did you compile and install pyzmq?
| [Thursday 10 June 2010] [12:27:02] <versificateur>  look at here http://blog.boxedice.com/2010/05/23/building-zeromq-and-pyzmq-on-red-hat/
| [Thursday 10 June 2010] [12:27:43] <guido_g>    ok
| [Thursday 10 June 2010] [12:27:53] <guido_g>    did you follow all the mentioned steps?
| [Thursday 10 June 2010] [12:28:11] <sbeaulois>  verficateur => ok 
| [Thursday 10 June 2010] [12:28:44] <guido_g>    versificateur: ahhh, /me is silent then :)
| [Thursday 10 June 2010] [12:29:54] <versificateur>  :) what means /me ?
| [Thursday 10 June 2010] [12:30:02] <sbeaulois>  i'am going to trie it
| [Thursday 10 June 2010] [12:30:22] <guido_g>    versificateur: myself, I, the one writing
| [Thursday 10 June 2010] [12:30:44] <versificateur>  sustrik: are you here??
| [Thursday 10 June 2010] [12:30:45] <guido_g>    versificateur: most clients expand that to your nick, when given as first word
| [Thursday 10 June 2010] [12:30:49] <guido_g>    like:
| [Thursday 10 June 2010] [12:30:55] <versificateur>  ah okay
| [Thursday 10 June 2010] [12:30:55]   * guido_g is silent now
| [Thursday 10 June 2010] [15:38:42] <sustrik>    i am here
| [Thursday 10 June 2010] [15:38:52] <sustrik>    but i have no experience with pyzmq
| [Thursday 10 June 2010] [15:38:59] <sustrik>    brian should know
| [Thursday 10 June 2010] [15:39:05] <sustrik>    try asking on the mailing list
| [Thursday 10 June 2010] [16:26:19] Notice   -Martinp23- [Global Notice] Our webchat is experiencing big changes! Channel ops: you may need to fix some of your bans or quiets as a result. All the details can be found at http://bit.ly/ckfqLh and you can get help at any time in #freenode. Thanks for using freenode and have a great day!
| [Thursday 10 June 2010] [16:48:14] <travlr> Is kde-4.5 called kde-4.4.85, and if so Is kde-4.4.9999 the latest for kde-4.4 ???
| [Thursday 10 June 2010] [16:49:42] <travlr> sorry wrong channel :P
| [Friday 11 June 2010] [00:56:18] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r27877d7 10/ src/tcp_connecter.cpp : EHOSTUNREACH is acceptable outcome from connect - http://bit.ly/dzcG79
| [Friday 11 June 2010] [01:03:20] <CIA-17>   zeromq2: 03Martin Sustrik 07master * r5ee355d 10/ src/tcp_connecter.cpp : if connect asserts, exact error is reported - http://bit.ly/b0P5Qg
| [Friday 11 June 2010] [01:56:07] <umesh>    can I use XREP and REQ socket pairs ...
| [Friday 11 June 2010] [01:56:26] <umesh>    means in server I will use XREP and client will use REQ socket ...
| [Friday 11 June 2010] [01:56:59] <umesh>    I want to do this because I want to send multiple responses to a single request ...  
| [Friday 11 June 2010] [01:57:40] <sustrik>  umesh that won't work
| [Friday 11 June 2010] [01:57:51] <sustrik>  use XREQ/XREP
| [Friday 11 June 2010] [01:57:57] <umesh>    ok
| [Friday 11 June 2010] [01:58:19] <sustrik>  be aware that you have to copy routeback info from request to reply
| [Friday 11 June 2010] [01:58:25] <sustrik>  by hand
| [Friday 11 June 2010] [01:58:37] <umesh>    will I be able to send multiple responses to the single request ...
| [Friday 11 June 2010] [01:58:39] <umesh>    ?
| [Friday 11 June 2010] [01:59:09] <sustrik>  when you get the request on the XREP side
| [Friday 11 June 2010] [01:59:21] <sustrik>  it'll be composed of routeback info and your message
| [Friday 11 June 2010] [01:59:38] <sustrik>  routeback info says how to route the reply back to the requester
| [Friday 11 June 2010] [01:59:47] <sustrik>  you have to copy it to the reply
| [Friday 11 June 2010] [01:59:56] <sustrik>  so that 0MQ knows where to send the message
| [Friday 11 June 2010] [02:00:15] <sustrik>  REQ/REP does this for you; with XREQ/XREP you have to handle it by hand
| [Friday 11 June 2010] [02:00:37] <sustrik>  btw, sending a multi-part reply won't do?
| [Friday 11 June 2010] [02:04:23] <CIA-17>   zeromq2: 03Brian Buchanan 07master * rac90b7e 10/ (AUTHORS src/socket_base.cpp): issue 35 - ZMQ_RCVMORE sometimes erroneously returns false - http://bit.ly/dvw31S
| [Friday 11 June 2010] [02:05:36] <umesh>    sustrik: I want to avoid parsing in client ...
| [Friday 11 June 2010] [02:05:46] <umesh>    of multipart reply ...
| [Friday 11 June 2010] [02:05:50] <sustrik>  then use multi-part reply
| [Friday 11 June 2010] [02:05:54] <sustrik>  ?
| [Friday 11 June 2010] [02:05:57] <sustrik>  what parsing
| [Friday 11 June 2010] [02:06:30] <sustrik>  in any case the point is that multi-part message is guaranteed to be atomic
| [Friday 11 June 2010] [02:06:37] <sustrik>  you either get all parts or none
| [Friday 11 June 2010] [02:06:56] <umesh>    if I send multipart reply then in the client when I recv ... I will get one message and then need to parse that multipart message 
| [Friday 11 June 2010] [02:07:07] <umesh>    ok
| [Friday 11 June 2010] [02:07:17] <umesh>    means I will get multple recv ...
| [Friday 11 June 2010] [02:07:21] <sustrik>  yes
| [Friday 11 June 2010] [02:07:24] <umesh>    ok
| [Friday 11 June 2010] [02:07:59] <sustrik>  see ZMQ_SNDMORE and ZMQ_RCVMORE
| [Friday 11 June 2010] [02:09:25] <umesh>    no documention of this in zmq_setsocketopt manaul 
| [Friday 11 June 2010] [02:09:48] <umesh>    therefore I was not aware of this multipart reply ...
| [Friday 11 June 2010] [02:11:43] <umesh>    not even in send and recv api
| 
| *** Logfile started
| *** on Fri Jun 11 08:31:34 2010
| 
| [Friday 11 June 2010] [08:31:41] <sustrik>  why ephemeral ports then?
| [Friday 11 June 2010] [08:31:46] <brickhazel>   yes the nameservice locations are fixed, everything else is random
| [Friday 11 June 2010] [08:33:12] <brickhazel>   we have a resource manager that is capable of dynamically starting a service anywhere in the network depending on loading
| [Friday 11 June 2010] [08:33:26] <brickhazel>   we then want to be able to discover the service
| [Friday 11 June 2010] [08:33:26] <sustrik>  if it's accessible :)
| [Friday 11 June 2010] [08:33:56] <sustrik>  well, this may work in corporate environment, but won't work in Internet scenarios
| [Friday 11 June 2010] [08:33:57] <brickhazel>   if what is accessible?  
| [Friday 11 June 2010] [08:34:07] <brickhazel>   true.. this is a closed system
| [Friday 11 June 2010] [08:34:15] <sustrik>  the location where you want to start the service
| [Friday 11 June 2010] [08:34:32] <sustrik>  yes, but 0mq is meant also for Internet environments
| [Friday 11 June 2010] [08:34:39] <sustrik>  and thus ephemeral ports are not an option
| [Friday 11 June 2010] [08:34:51] <sustrik>  you can fork the project and add the code if needed...
| [Friday 11 June 2010] [08:35:59] <brickhazel>   hmm... not a big fan of forking
| [Friday 11 June 2010] [08:38:19] <brickhazel>   ok, thanks for your help.. i need to think about this some more
| [Friday 11 June 2010] [08:45:48] <sustrik>  brickhazel: think of services, http is on port 80, ssh is on port 22, why should your service be different
| [Friday 11 June 2010] [08:46:58] <brickhazel>   sustrik: these are more like micro-services sprinkled throughout our closed network
| [Friday 11 June 2010] [08:47:21] <brickhazel>   failover is a common occurrence
| [Friday 11 June 2010] [08:47:53] <brickhazel>   it is a very dynamic system and service discovery is how we have been connecting things so far
| [Friday 11 June 2010] [08:48:04] <sustrik>  sure, it's up to you
| [Friday 11 June 2010] [08:48:22] <brickhazel>   i think there are too many endpoints to try to manage by hand (aka assigning fixed ports to services)
| [Friday 11 June 2010] [08:48:34] <sustrik>  too many service types?
| [Friday 11 June 2010] [08:48:39] <brickhazel>   yes
| [Friday 11 June 2010] [08:48:57] <sustrik>  the person who implements the service should choose a port number for it
| [Friday 11 June 2010] [08:49:06] <sustrik>  it's not that much work
| [Friday 11 June 2010] [08:50:19] <brickhazel>   true... but this is a system of subsystems
| [Friday 11 June 2010] [08:50:31] <brickhazel>   someone has to manage a master list of all ports
| [Friday 11 June 2010] [08:50:40] <brickhazel>   across many different projects
| [Friday 11 June 2010] [08:51:00] <sustrik>  IANA? :)
| [Friday 11 June 2010] [08:51:28] <brickhazel>   :) yes but this is not internet scale
| [Friday 11 June 2010] [08:51:51] <sustrik>  having a port number registered at IANA is good for your ego :)
| [Friday 11 June 2010] [08:51:54] <brickhazel>   more like a distributed/parallel processing system
| [Friday 11 June 2010] [08:52:13] <brickhazel>   :) i bet
| [Friday 11 June 2010] [08:52:26] <sustrik>  i understand
| [Friday 11 June 2010] [08:52:46] <sustrik>  the whole point of 0mq, however, is to make app you write infinitely scalable
| [Friday 11 June 2010] [08:53:10] <sustrik>  unfortunately, local hacks like ephemeral port numbers interfere with that
| [Friday 11 June 2010] [08:54:17] <sustrik>  that's why i don't want it in the trunk
| [Friday 11 June 2010] [08:54:30] <brickhazel>   i understand
| [Friday 11 June 2010] [08:59:31] <umesh>    I am getting the extra appended string on the server in REQ/REP sockets 
| [Friday 11 June 2010] [08:59:44] <sustrik>  ?
| [Friday 11 June 2010] [08:59:50] <umesh>    I send string "ns_set app app1" from client 
| [Friday 11 June 2010] [09:00:11] <umesh>    and I recieved "ns_set app app1fifo_fast" on server
| [Friday 11 June 2010] [09:00:39] <umesh>    I checked pcap capture ... it shows correctly "ns_set app app1"
| [Friday 11 June 2010] [09:00:40] <sustrik>  i assume there's no terminating zero in the string
| [Friday 11 June 2010] [09:01:06] <sustrik>  thus printf prints also the bogus memory after the end of the string
| [Friday 11 June 2010] [09:02:33] <umesh>    but original string does have ...
| [Friday 11 June 2010] [09:03:24] <sustrik>  i assume you don't send it in the message
| [Friday 11 June 2010] [09:18:56] <umesh>    now working ...
| [Friday 11 June 2010] [09:19:16] <umesh>    it was the issue of null char ... i saw pcap as well ... end 0 was not there 
| [Friday 11 June 2010] [09:19:34] <umesh>    one more point ... how is multipart messages are implemented ...
| [Friday 11 June 2010] [09:19:57] <umesh>    means only one message is send or multiple messges clubbed together ...
| [Friday 11 June 2010] [09:20:05] <umesh>    and then send ...
| [Friday 11 June 2010] [09:20:09] <umesh>    i assume later 
| [Friday 11 June 2010] [09:21:21] <sustrik>  the latter
| [Friday 11 June 2010] [09:23:49] <umesh>    ok
| [Friday 11 June 2010] [14:22:36] <cremes>   is the "request identity" prepended to messages sent on XREQ sockets guaranteed to remain the same for the life of the socket?
| [Friday 11 June 2010] [14:24:43] <sustrik>  cremes: yes
| [Friday 11 June 2010] [14:24:58] <sustrik>  hm, well, unless reconnection happens
| [Friday 11 June 2010] [14:25:18] <sustrik>  if you set the identity by hand it'll never change
| [Friday 11 June 2010] [14:25:48] <sustrik>  if you don't set it, it is generated by the peer each time TCP connection is established
| [Friday 11 June 2010] [14:26:02] <cremes>   oh, i see
| [Friday 11 June 2010] [14:26:06] <cremes>   i'll set it myself then
| [Friday 11 June 2010] [14:26:16] <cremes>   i don't want it to ever change
| [Friday 11 June 2010] [14:27:04] <sustrik>  this is to be done in the binding or in your app?
| [Friday 11 June 2010] [14:27:09] <cremes>   in my app
| [Friday 11 June 2010] [14:27:13] <sustrik>  ok
| [Friday 11 June 2010] [14:27:16] <sustrik>  makes semse
| [Friday 11 June 2010] [14:27:19] <sustrik>  sense
| [Friday 11 June 2010] [14:27:27] <cremes>   i'm leaving the binding as "vanilla" as possible so it matches the C api closely
| [Friday 11 June 2010] [14:27:50] <sustrik>  yes, that's good
| [Friday 11 June 2010] [14:28:06] <cremes>   sustrik: on a related note, i'd like to confirm that it doesn't make any sense to set an identity on a SUB socket since it can't transmit
| [Friday 11 June 2010] [14:28:35] <sustrik>  it does
| [Friday 11 June 2010] [14:28:40] <sustrik>  the point with identities
| [Friday 11 June 2010] [14:28:51] <cremes>   rephrase please
| [Friday 11 June 2010] [14:29:00] <sustrik>  is that they allow to track resources assigned to particular connection
| [Friday 11 June 2010] [14:29:12] <sustrik>  example:
| [Friday 11 June 2010] [14:29:27] <sustrik>  when SUB socket connect to PUB socket
| [Friday 11 June 2010] [14:29:36] <versificateur>    hello
| [Friday 11 June 2010] [14:29:38] <sustrik>  PUB socket creates a message queue
| [Friday 11 June 2010] [14:29:45] <sustrik>  for that particular connection
| [Friday 11 June 2010] [14:30:01] <sustrik>  if the connection breaks and gets reestablished
| [Friday 11 June 2010] [14:30:34] <sustrik>  SUB's identity allows the PUB to pair the new connection with the old queue
| [Friday 11 June 2010] [14:30:46] <cremes>   ah, it maps the queue by identity? i think i get it now.
| [Friday 11 June 2010] [14:30:51] <sustrik>  yes
| [Friday 11 June 2010] [14:30:55] <versificateur>    sustrik: did you had a look to my jzmq modifications?
| [Friday 11 June 2010] [14:31:02] <cremes>   thank you for the clarification
| [Friday 11 June 2010] [14:31:10] <sustrik>  np
| [Friday 11 June 2010] [14:31:13] <sustrik>  versificateur: yes i did
| [Friday 11 June 2010] [14:31:18] <sustrik>  i replied on github
| [Friday 11 June 2010] [14:31:23] <sustrik>  you've probably missed the message
| [Friday 11 June 2010] [14:31:44] <sustrik>  anyway the problem is that every single line of zmq is touched in the patch
| [Friday 11 June 2010] [14:31:54] <sustrik>  it's impossible to review it
| [Friday 11 June 2010] [14:32:03] <sustrik>  maybe the line endings are different?
| [Friday 11 June 2010] [14:34:02] <versificateur>    hum...
| [Friday 11 June 2010] [14:34:27] <versificateur>    i can tell you files I added
| [Friday 11 June 2010] [14:34:38] <sustrik>  you have written it on windows?
| [Friday 11 June 2010] [14:34:44] <versificateur>    and files i modified...
| [Friday 11 June 2010] [14:35:01] <versificateur>    no no not on windows
| [Friday 11 June 2010] [14:35:27] <versificateur>    i currently work on Fedora 12 and Ubuntu 10.04
| [Friday 11 June 2010] [14:35:33] <sustrik>  i recall there were changes to MSVC project
| [Friday 11 June 2010] [14:35:39] <sustrik>  let me see...
| [Friday 11 June 2010] [14:36:21] <versificateur>    i made them manually
| [Friday 11 June 2010] [14:36:31] <versificateur>    then tested them on windows
| [Friday 11 June 2010] [14:36:36] <sustrik>  ah
| [Friday 11 June 2010] [14:37:45] <sustrik>  have a look here:
| [Friday 11 June 2010] [14:37:47] <sustrik>  http://github.com/bluig/jzmq/commit/20c2ead95d48039950d52c929daf3de2b8d05e4f
| [Friday 11 June 2010] [14:38:28] <sustrik>  how come everything is marked as changed?
| [Friday 11 June 2010] [14:39:31] <versificateur>    probably because I'm not good with git
| [Friday 11 June 2010] [14:39:45] <sustrik>  neither am i
| [Friday 11 June 2010] [14:39:58] <sustrik>  hallo! any git experts around???
| [Friday 11 June 2010] [14:41:21] <sustrik>  hm, maybe the diff itself failed in some strange way
| [Friday 11 June 2010] [14:41:30] <versificateur>    perhaps i should remove the repository and restart from scratch???
| [Friday 11 June 2010] [14:41:34] <sustrik>  there are 2 unmodified lines there...
| [Friday 11 June 2010] [14:42:12] <sustrik>  well, you are testing it on linux and windows, right?
| [Friday 11 June 2010] [14:42:37] <versificateur>    yeah
| [Friday 11 June 2010] [14:42:47] <sustrik>  that's the same i would do
| [Friday 11 June 2010] [14:42:51] <sustrik>  so let's do it this way
| [Friday 11 June 2010] [14:43:01] <sustrik>  i'll add you as contributor to the project
| [Friday 11 June 2010] [14:43:12] <versificateur>    :)
| [Friday 11 June 2010] [14:43:15] <sustrik>  that'll allow you to commit yourself
| [Friday 11 June 2010] [14:43:28] <versificateur>    thanks
| [Friday 11 June 2010] [14:43:28] <sustrik>  you make sure that it builds/works on the two platforms
| [Friday 11 June 2010] [14:43:32] <sustrik>  wait a sec
| [Friday 11 June 2010] [14:45:07] <sustrik>  versificateur: done
| [Friday 11 June 2010] [14:45:47] <versificateur>    :)
| [Friday 11 June 2010] [14:55:45] <travisbrady>  versificateur: which language are you writing a binding for?
| [Friday 11 June 2010] [15:00:20] <versificateur>    java
| [Friday 11 June 2010] [16:20:41] <sg>   anybody on?
| [Friday 11 June 2010] [17:06:45] <soren>    I'm hoping someone can help me explain this: http://pastebin.com/qsWYHhdK
| [Friday 11 June 2010] [17:07:34] <soren>    When I run those two, the consumer only sees every 256th message.
| [Friday 11 June 2010] [17:08:04] <soren>    I thought the producer might be going to fast, so I added the sleep statement.. Didn't help at all.
| [Friday 11 June 2010] [17:08:20] <soren>    I'm sure I'm doing something silly, but I can't see what it is.
| [Friday 11 June 2010] [17:11:37] <soren>    err... but now it works.
| [Friday 11 June 2010] [17:12:33] <soren>    I can't imagine what I changed..
| [Friday 11 June 2010] [17:12:47] <sustrik>  soren: hi
| [Friday 11 June 2010] [17:13:10] <sustrik>  you are subsribed only for messages that start with zero byte :)
| [Friday 11 June 2010] [17:13:18] <sustrik>  zmq_setsockopt (socket, ZMQ_SUBSCRIBE, "", 1);
| [Friday 11 June 2010] [17:13:49] <soren>    Yeah, I fixed that.
| [Friday 11 June 2010] [17:14:00] <soren>    ...and I wasn't half an hour ago when it was acting strangely.
| [Friday 11 June 2010] [17:14:21] <soren>    So, I read in the docs that zmq_send returning doesn't mean it's been sent.
| [Friday 11 June 2010] [17:14:35] <sustrik>  nope, it's async
| [Friday 11 June 2010] [17:15:22] <soren>    What I swear I was experiencing was that the consumer would only see anything happen once for every 256 messages sent by the producer, and it would only receive one message.
| [Friday 11 June 2010] [17:15:25] <soren>    It was very odd.
| [Friday 11 June 2010] [17:15:50] <sustrik>  it looks exactly as if the subscription for zero byte was in place
| [Friday 11 June 2010] [17:16:00] <soren>    Why would anything go through that way?
| [Friday 11 June 2010] [17:16:18] <soren>    I mean... Why would I see every 256th message?
| [Friday 11 June 2010] [17:16:19] <sustrik>  you are putting sequence of integers into the message
| [Friday 11 June 2010] [17:16:29] <soren>    Oh.
| [Friday 11 June 2010] [17:16:32] <sustrik>  so the messages look like this
| [Friday 11 June 2010] [17:16:33] <soren>    Oh!
| [Friday 11 June 2010] [17:16:34] <sustrik>  00000000
| [Friday 11 June 2010] [17:16:37] <soren>    Right, right.
| [Friday 11 June 2010] [17:16:37] <sustrik>  01000000
| [Friday 11 June 2010] [17:16:39] <soren>     I see where you're going.
| [Friday 11 June 2010] [17:16:51] <soren>    That answers my next question.
| [Friday 11 June 2010] [17:17:33] <soren>    ...which was going to be "how does the sender set the "topic" of the message (i.e. what the consumer subscribes to)", but I get that now.
| [Friday 11 June 2010] [17:17:42] <soren>    ...but you're probably quite right.
| [Friday 11 June 2010] [17:17:52] <soren>    zeromq was just too clever for me. :)
| [Friday 11 June 2010] [17:17:58] <sustrik>  :)
| [Friday 11 June 2010] [17:18:46] <soren>    Ok, another question...
| [Friday 11 June 2010] [17:19:30] <soren>    I currently have an app that uses amqp to send messages around using a topic exchange. All nodes connect to the same broker and pass msgs around.
| [Friday 11 June 2010] [17:20:04] <soren>    To achieve something similar with zeromq, I should use multicast, right?
| [Friday 11 June 2010] [17:20:30] <sustrik>  multicast is quite hard to configure
| [Friday 11 June 2010] [17:20:49] <soren>    Yeah, that's the impression I get.
| [Friday 11 June 2010] [17:20:51] <sustrik>  if you don't care about having a single process in the middle
| [Friday 11 June 2010] [17:20:56] <sustrik>  use zmq_forwarder
| [Friday 11 June 2010] [17:21:03] <sustrik>  see example here: http://github.com/sustrik/zeromq-chat
| [Friday 11 June 2010] [17:21:04] <soren>    Well, I do that now, but I'd like to not have to have that.
| [Friday 11 June 2010] [17:21:40] <sustrik>  other option is to connect each subscriber to every publisher
| [Friday 11 June 2010] [17:22:02] <soren>    Yeah, that would suck.
| [Friday 11 June 2010] [17:22:10] <sustrik>  then multicast
| [Friday 11 June 2010] [17:22:15] <soren>    I'd like to be able to add and remove both publishers and subscribers on the fly.
| [Friday 11 June 2010] [17:22:33] <soren>    I've never wrapped my head around multicast addressing.
| [Friday 11 June 2010] [17:22:45] <sustrik>  the point is that for all-to-all communication you need a central node
| [Friday 11 June 2010] [17:22:52] <sustrik>  it can be either zmq_forwarder
| [Friday 11 June 2010] [17:23:02] <sustrik>  of your network switch (in case of multicast)
| [Friday 11 June 2010] [17:23:29] <sustrik>  so these are the only options:
| [Friday 11 June 2010] [17:23:36] <sustrik>  1. connect each-to-each by hand
| [Friday 11 June 2010] [17:23:46] <sustrik>  2. have zmq_forwarder in the middle
| [Friday 11 June 2010] [17:23:50] <sustrik>  3. use multicast
| [Friday 11 June 2010] [17:24:21] <soren>    Ok. I'm trying the multicast example from the cookbook..
| [Friday 11 June 2010] [17:24:42] <soren>    I've replaced my zmq_bind and zmq_connects from the example in the pastebin with:
| [Friday 11 June 2010] [17:24:57] <soren>    zmq_connect(socket, "epgm://eth0;239.192.1.1:5555");
| [Friday 11 June 2010] [17:25:20] <soren>    and nothing is getting through. Does this not work locally?
| [Friday 11 June 2010] [17:25:26] <soren>    On the same box, I mean.
| [Friday 11 June 2010] [17:31:45] <sustrik>  it should
| [Friday 11 June 2010] [17:32:00] <sustrik>  multicast loopback is set to on by default
| [Friday 11 June 2010] [17:32:43] <sustrik>  not sure about eth0 though
| [Friday 11 June 2010] [17:32:46] <sustrik>  try lo instead
| [Friday 11 June 2010] [17:33:31] <soren>    eth0 has the MULTICAST flag set.
| [Friday 11 June 2010] [17:34:29] <sustrik>  i mean, i am not sure that you can loopback via eth0
| [Friday 11 June 2010] [17:34:35] <sustrik>  thy lo (127.0.0.1)
| [Friday 11 June 2010] [17:34:38] <sustrik>  try*
| [Friday 11 June 2010] [17:34:42] <soren>    Yeah, lo works.
| [Friday 11 June 2010] [17:34:47]     * soren ponders
| [Friday 11 June 2010] [17:35:11] <soren>    The multicast addresss... Is that just something everyone needs to agree on?
| [Friday 11 June 2010] [17:35:40] <sustrik>  there's specific interval of addresses assigned to multicast
| [Friday 11 June 2010] [17:35:58] <sustrik>  within that interval your apps must agree on specific address
| [Friday 11 June 2010] [17:36:02] <soren>    Right, right, sure.
| [Friday 11 June 2010] [17:36:16] <soren>    Right, it was just that last bit I wasn't sure about.
| [Friday 11 June 2010] [17:36:38] <soren>    How far does multicast reach? Broadcast domain?
| [Friday 11 June 2010] [17:36:56] <soren>    Or can it go further somehow?
| [Friday 11 June 2010] [17:37:05] <sustrik>  depends on how your routers are set
| [Friday 11 June 2010] [17:37:10] <soren>    Ok.
| [Friday 11 June 2010] [17:37:18] <sustrik>  but normally multicast is disabled on routers
| [Friday 11 June 2010] [17:38:10] <soren>    Gotcha.
| [Friday 11 June 2010] [17:38:29] <soren>    Ok, so not only must the interface used be UP and have MULTICAST set, it must also have an address.
| [Friday 11 June 2010] [17:38:42] <soren>    eth0 only passed two of those requirements :)
| [Friday 11 June 2010] [17:40:12] <soren>    sustrik: Thanks a lot! This has been very enlightening.
| [Friday 11 June 2010] [17:40:21] <sustrik>  you are welcome
| 
| *** Logfile started
| *** on Sat Jun 12 08:51:31 2010
| 
| [Sunday 13 June 2010] [04:34:58] <rgl>  hello
| [Sunday 13 June 2010] [04:35:20] <rgl>  known any zeromq binding to nodejs?
| [Sunday 13 June 2010] [04:40:11] <guido_g>  not out of my head
| [Sunday 13 June 2010] [04:40:58] <sustrik>  what's nodejs?
| [Sunday 13 June 2010] [04:42:31] <guido_g>  http://nodejs.org/
| [Sunday 13 June 2010] [04:42:58] <guido_g>  sort of http server in java-script
| [Sunday 13 June 2010] [04:43:03] <sustrik>  a-ha
| [Sunday 13 June 2010] [04:43:11] <guido_g>  toy of the month :)
| [Sunday 13 June 2010] [04:43:39] <sustrik>  funny thing is that lot of people are basically doing http<->0mq bridges
| [Sunday 13 June 2010] [04:44:00] <guido_g>  http is *the* thing
| [Sunday 13 June 2010] [04:44:05] <sustrik>  :)
| [Sunday 13 June 2010] [04:44:12] <guido_g>  even for things it's suitable for
| [Sunday 13 June 2010] [04:44:36] <guido_g>  but what do i know, i'm only a technician
| [Sunday 13 June 2010] [04:44:56] <sustrik>  no idea here either
| [Sunday 13 June 2010] [04:45:17] <sustrik>  i'm a C person
| [Sunday 13 June 2010] [04:45:27] <sustrik>  huh, what's http?- style
| [Sunday 13 June 2010] [05:32:54] <Steffen___>   FYI, I wrote a Perl binding for 0MQ2 yesterday. http://github.com/tsee/ZeroMQ-Perl
| [Sunday 13 June 2010] [05:33:03] <Steffen___>   It's based on the C++ interface.
| [Sunday 13 June 2010] [05:33:24] <Steffen___>   Seems to be working fine. Adds 8us latency, according to my tests on a laptop.
| [Sunday 13 June 2010] [05:33:41] <Steffen___>   Some of the get/setsockopt calls are still untested/flaky.
| [Sunday 13 June 2010] [05:34:50] <Steffen___>   License is currently dual Artistic License/GPL just like Perl itself. No documentation (I wrote it in the afternoon). I'll be on a business trip for three weeks starting today, so no support either. I do intend to release it to CPAN and maintain it down the road.
| [Sunday 13 June 2010] [05:36:19] <Steffen___>   I'm reporting it here since I'm on the run and couldn't be bothered to subscribe to the mailing list just for that. Might do that when I get back. Feel free to contact me at smueller@cpan.org.
| [Sunday 13 June 2010] [05:37:09] <Steffen___>   PS: For non-Perl folks: Building it is as easy as "perl Makefile.PL && make && make test && sudo make install"
| [Sunday 13 June 2010] [05:38:37] <Steffen___>   Strange talking to myself ;)
| [Sunday 13 June 2010] [05:38:43] <Steffen___>   Have a nice week-end.
| [Sunday 13 June 2010] [10:57:55] <mikko>    good morning
| [Sunday 13 June 2010] [10:58:00] <mikko>    or more like afternoon now
| [Monday 14 June 2010] [00:16:57] <Gambit->  evenin' chaps
| [Monday 14 June 2010] [00:17:20] <Gambit->  I'm trying to make the architectural decision between zeromq and rabbitmq.  Anyone care to discuss, or have references to cite?
| [Monday 14 June 2010] [00:18:07] <sustrik>  hi
| [Monday 14 June 2010] [00:18:15] <sustrik>  depends on your scenario
| [Monday 14 June 2010] [00:18:19] <Gambit->  evenin' sustrik
| [Monday 14 June 2010] [00:18:22] <Gambit->  indeed it does
| [Monday 14 June 2010] [00:18:28] <sustrik>  what's your use case?
| [Monday 14 June 2010] [00:18:30] <Gambit->  Would you like a description?
| [Monday 14 June 2010] [00:18:34] <sustrik>  in broad terms?
| [Monday 14 June 2010] [00:18:36]     * Gambit- nods, "One moment while I type."
| [Monday 14 June 2010] [00:21:06] <Gambit->  Topology: a cluster of widely distributed devices with no mutual connectivity contracts.  Each device has several different active entities that may need to communiciate with a varying subset of other device in the cluster.
| [Monday 14 June 2010] [00:21:51] <sustrik>  SOA-style?
| [Monday 14 June 2010] [00:22:04] <Gambit->  You'll have to explain what you mean by that.
| [Monday 14 June 2010] [00:22:39] <sustrik>  ok, other way round: what industry?
| [Monday 14 June 2010] [00:22:54] <sustrik>  financials/embedded/supercomputing etc.
| [Monday 14 June 2010] [00:23:49] <Gambit->  technically speaking, we're a major traffic manipulation company and we're supporting clusters of our devices spread across customer installations communicating and coordinating with eachother in heirarchies of active-active groups.
| [Monday 14 June 2010] [00:24:55] <Gambit->  I can totally be more specific, but I'm still learning how to phrase the question, if you understand :)
| [Monday 14 June 2010] [00:25:03] <sustrik>  yep
| [Monday 14 June 2010] [00:25:32] <sustrik>  so the whole system is out of scope of a single entrerprise
| [Monday 14 June 2010] [00:25:44] <Gambit->  it may all be owned by one enterprise.
| [Monday 14 June 2010] [00:25:51] <Gambit->  but it might be spread across many divisions
| [Monday 14 June 2010] [00:26:11] <sustrik>  can there be a singe central point?
| [Monday 14 June 2010] [00:26:16] <Gambit->  our customers tend to do crazy things we don't expect, so any combination around there is likely.
| [Monday 14 June 2010] [00:26:20] <sustrik>  messaging "broker"?
| [Monday 14 June 2010] [00:26:34] <sustrik>  single*
| [Monday 14 June 2010] [00:26:46] <Gambit->  It's possible - though more likely there will be an active-active type point where there are multiple boxes that all act as failover points for eachother.
| [Monday 14 June 2010] [00:27:08] <sustrik>  but in overall, all is centralised
| [Monday 14 June 2010] [00:27:28] <sustrik>  all the failover boxes are at the same place, doing same thing
| [Monday 14 June 2010] [00:27:34] <Gambit->  in that case, yes.
| [Monday 14 June 2010] [00:27:57] <sustrik>  well, in such case i would prefer rabbitmq
| [Monday 14 June 2010] [00:28:00] <Gambit->  in other cases, there may be, say, 5 boxes in an active-active-active-active-active configuration without any particular head end.
| [Monday 14 June 2010] [00:29:23] <Gambit->  What is your logic?  Also, what is your experience? :)
| [Monday 14 June 2010] [00:29:27] <sustrik>  as far as I understand your scenario is a typical corporate scenario with centralised control and no need for strange topologies
| [Monday 14 June 2010] [00:29:37] <sustrik>  ah, one more thing:
| [Monday 14 June 2010] [00:29:45] <sustrik>  expected performance?
| [Monday 14 June 2010] [00:29:49] <Gambit->  well we may have boxes taht will have no connectivity for long periods of time, and then connect in.
| [Monday 14 June 2010] [00:30:03] <Gambit->  also, strange topologies will be mitigated most likely by having an overlay network.
| [Monday 14 June 2010] [00:30:18] <Gambit->  Performance is something of a elephant in the room at the moment.
| [Monday 14 June 2010] [00:30:32] <sustrik>  any estimates?
| [Monday 14 June 2010] [00:30:40] <Gambit->  Can you provide some buckets?
| [Monday 14 June 2010] [00:30:41] <sustrik>  in orders of magnitude?
| [Monday 14 June 2010] [00:30:54] <sustrik>  10 msgs./sec?
| [Monday 14 June 2010] [00:31:01] <sustrik>  1000000 msgs./sec?
| [Monday 14 June 2010] [00:31:04] <Gambit->  :)
| [Monday 14 June 2010] [00:31:34] <sustrik>  sub millisecond latency?
| [Monday 14 June 2010] [00:31:36] <Gambit->  I'm going to SWAG and say in the 100-1000/s range.
| [Monday 14 June 2010] [00:31:37] <sustrik>  etc.
| [Monday 14 June 2010] [00:31:53] <Gambit->  but that's probably awefully high.
| [Monday 14 June 2010] [00:32:16] <Gambit->  I don't think there's any expectation for latency less than 100ms.
| [Monday 14 June 2010] [00:32:27] <sustrik>  ok, rabbitmq looks to fit your case
| [Monday 14 June 2010] [00:32:35] <Gambit->  though our usecases are so fuzzy that it's hard to say for certain.
| [Monday 14 June 2010] [00:32:48] <Gambit->  we know we need some infrastructure, but we only know todays requirements.
| [Monday 14 June 2010] [00:32:56] <sustrik>  the rationale is that rabbitmq is a typical corporate middleware
| [Monday 14 June 2010] [00:33:10] <sustrik>  you'll have central server to control
| [Monday 14 June 2010] [00:33:15] <sustrik>  management tools
| [Monday 14 June 2010] [00:33:30] <sustrik>  decent performance etc.
| [Monday 14 June 2010] [00:33:40] <Gambit->  Well there may be no central server, there may just be 5-10 boxes, all peers.  But they could all be 'central' servers, I would expect.
| [Monday 14 June 2010] [00:33:43] <sustrik>  0mq is more adequate for extreme use cases
| [Monday 14 June 2010] [00:34:12] <Gambit->  can you establish your credentials and authority, for a moment?
| [Monday 14 June 2010] [00:34:26] <sustrik>  i'm 0mq's author :)
| [Monday 14 June 2010] [00:34:44] <Gambit->  god I love irc :D
| [Monday 14 June 2010] [00:35:03] <sustrik>  the point is that the two products are quite different in what they offer
| [Monday 14 June 2010] [00:35:11] <sustrik>  0mq:
| [Monday 14 June 2010] [00:35:15] <sustrik>  - it's a library
| [Monday 14 June 2010] [00:35:25] <sustrik>  - fully automatic, no management, like TCP
| [Monday 14 June 2010] [00:35:36] <sustrik>  - very fast
| [Monday 14 June 2010] [00:35:44] <sustrik>  - less feature complete
| [Monday 14 June 2010] [00:35:51] <sustrik>  rabbitmq:
| [Monday 14 June 2010] [00:35:54] <sustrik>  - it's a server
| [Monday 14 June 2010] [00:36:13] <sustrik>  - you manage it as any other server
| [Monday 14 June 2010] [00:36:28] <sustrik>  - performance is lower but pretty decent
| [Monday 14 June 2010] [00:36:38] <sustrik>  - more feature complete
| [Monday 14 June 2010] [00:37:39] <Gambit->  Whereabouts would you draw the performance line?
| [Monday 14 June 2010] [00:37:54] <sustrik>  50000 msgs/sec
| [Monday 14 June 2010] [00:38:43] <sustrik>  ah, it also depends on the size of messages
| [Monday 14 June 2010] [00:38:52] <sustrik>  1kb vs. 100GB
| [Monday 14 June 2010] [00:39:03] <sustrik>  for later i would go with 0mq
| [Monday 14 June 2010] [00:39:27] <Gambit->  I'm going to say we're in the 5-50k range
| [Monday 14 June 2010] [00:39:42] <sustrik>  yes, so you have no performance problem
| [Monday 14 June 2010] [00:39:48] <sustrik>  both solutions would be OK
| [Monday 14 June 2010] [00:39:55] <sustrik>  in performance terms
| [Monday 14 June 2010] [00:40:30]     * Gambit- nods
| [Monday 14 June 2010] [00:40:51] <Gambit->  Does 0mq support actual multicast?
| [Monday 14 June 2010] [00:40:55] <sustrik>  yes
| [Monday 14 June 2010] [00:41:03] <sustrik>  PGM in particular
| [Monday 14 June 2010] [00:42:13] <Gambit->  That's something we'd have to cobble together with rabbitmq, I believe.  I don't see any evidence of it being directly supported, though there are several plugins that could be used to bootstrap it.
| [Monday 14 June 2010] [00:42:35] <sustrik>  no, rabbitmq doesn't support it
| [Monday 14 June 2010] [00:42:50] <sustrik>  why do you need it?
| [Monday 14 June 2010] [00:42:58] <Gambit->  there's some things like 'shovels', which apparently lets you move messages from one queue to another, that could be used to fake it.
| [Monday 14 June 2010] [00:43:04] <Gambit->  Some nodes may be at the end of long thin mostly broken straws.
| [Monday 14 June 2010] [00:43:21] <Gambit->  if they have to do a broadcast, it's infeasible to expect them to send messages to everyone else.
| [Monday 14 June 2010] [00:43:44] <sustrik>  that's solved by having broker in the middle, no?
| [Monday 14 June 2010] [00:43:55] <sustrik>  send to broker, broker resends to everyone else
| [Monday 14 June 2010] [00:44:13] <Gambit->  The way I'd been thinking about it, though, is that you'd need to have a broker on each device.
| [Monday 14 June 2010] [00:44:20] <Gambit->  That may, obviously, be wrong.
| [Monday 14 June 2010] [00:44:45] <Gambit->  there are multiple agents on each device that would need to communicate to some subset of the rest of the cluster, after all.
| [Monday 14 June 2010] [00:45:13] <Gambit->  some orthogonal subset, that is.
| [Monday 14 June 2010] [00:45:13] <sustrik>  device = hw device?
| [Monday 14 June 2010] [00:45:27] <Gambit->  A device is a linux box, for the sake of this conversation.
| [Monday 14 June 2010] [00:45:36] <Gambit->  s/sake/intent/
| [Monday 14 June 2010] [00:45:46] <sustrik>  ok
| [Monday 14 June 2010] [00:46:11] <sustrik>  well, you can even use both products if needed
| [Monday 14 June 2010] [00:46:20] <sustrik>  there's nothing to stop you
| [Monday 14 June 2010] [00:46:39] <sustrik>  in your case i would try to play with both for a while to get some feeling
| [Monday 14 June 2010] [00:47:23] <Gambit->  How's the intercompatability?
| [Monday 14 June 2010] [00:47:42] <sustrik>  none at the moment
| [Monday 14 June 2010] [00:48:15] <Gambit->  So given what I'd describe, wouldn't I need to run a broker on each device?  Especially since they may not have connectivity to any other device?
| [Monday 14 June 2010] [00:48:43] <sustrik>  there are several services on a device, right?
| [Monday 14 June 2010] [00:48:49] <Gambit->  Correct.
| [Monday 14 June 2010] [00:48:55] <sustrik>  those are running 24/7?
| [Monday 14 June 2010] [00:48:59] <Gambit->  Yup.
| [Monday 14 June 2010] [00:49:23] <sustrik>  are the messages expected to survive service failure?
| [Monday 14 June 2010] [00:50:12]     * Gambit- wiggles his hand a bit, "Let's say no, because that will make it easier."
| [Monday 14 June 2010] [00:50:15] <sustrik>  or device failure (like power outage)
| [Monday 14 June 2010] [00:50:33] <sustrik>  it's pretty important question
| [Monday 14 June 2010] [00:50:45] <Gambit->  It's a massively important question.
| [Monday 14 June 2010] [00:50:45] <sustrik>  if you need it, you need a broker on each device
| [Monday 14 June 2010] [00:51:07] <Gambit->  We already have, essentially, a process that manages all of our configuration and related things.
| [Monday 14 June 2010] [00:51:33] <Gambit->  Currently we aren't designing for any additional repositories.
| [Monday 14 June 2010] [00:51:42] <Gambit->  which means we're not expecting anything to survive device failure.
| [Monday 14 June 2010] [00:52:06] <Gambit->  however, if two agents require a broker to communicate between themselves, then it's absolutely necessary to run a broker on each device, since each device may be running in a standalone configuration.
| [Monday 14 June 2010] [00:53:05] <sustrik>  if you need a brokerless design you have to use 0mq
| [Monday 14 June 2010] [00:53:31] <sustrik>  you have to have some hands-on experience to do a correct decision
| [Monday 14 June 2010] [00:53:36]     * Gambit- nods
| [Monday 14 June 2010] [00:53:45] <Gambit->  That said, there's no reason we can't run a broker on each box.
| [Monday 14 June 2010] [00:53:48] <sustrik>  but think of 0mq as something like TCP
| [Monday 14 June 2010] [00:53:59] <sustrik>  and rabbitmq of something like SQL server
| [Monday 14 June 2010] [00:54:15] <Gambit->  That crosses my eyes a bit :)
| [Monday 14 June 2010] [00:54:30] <Gambit->  but I think I catch your intent.
| [Monday 14 June 2010] [00:54:39] <sustrik>  :)
| [Monday 14 June 2010] [00:55:10] <Gambit->  How does 0mq handle membership?
| [Monday 14 June 2010] [00:55:21] <sustrik>  membership in what?
| [Monday 14 June 2010] [00:55:36] <Gambit->  For the use case where, all the way across the cluster, a new device comes up and requests to receive messages of a certain topic.
| [Monday 14 June 2010] [00:55:44] <sustrik>  ah
| [Monday 14 June 2010] [00:55:50] <Gambit->  Apologies, as always, for incorrect terminology usage.
| [Monday 14 June 2010] [00:56:02] <sustrik>  pseudocode:
| [Monday 14 June 2010] [00:56:23] <sustrik>  s = zmq_socket (SUBSCRIBER);
| [Monday 14 June 2010] [00:56:38] <sustrik>  s.connect ("tcp://myserver:5555");
| [Monday 14 June 2010] [00:56:56] <sustrik>  s.setsockopt (SUBSCRIBE, "ab.cd.");
| [Monday 14 June 2010] [00:57:01] <sustrik>  that's it
| [Monday 14 June 2010] [00:57:07] <Gambit->  who is 'myserver'?
| [Monday 14 June 2010] [00:57:19] <sustrik>  the peer you want to get messages from
| [Monday 14 June 2010] [00:57:22] <Gambit->  ah
| [Monday 14 June 2010] [00:57:37] <Gambit->  so I would have to connect to each peer I wanted to get messages from, and request the subscription?
| [Monday 14 June 2010] [00:57:46] <sustrik>  yes
| [Monday 14 June 2010] [00:57:52] <Gambit->  How does the multicast fit into that?
| [Monday 14 June 2010] [00:58:12] <sustrik>  s.connect ("pgm://eth0;224.0.0.1:5555");
| [Monday 14 June 2010] [00:58:27] <Gambit->  ah
| [Monday 14 June 2010] [00:58:30] <Gambit->  interesting.
| [Monday 14 June 2010] [00:59:04] <Gambit->  so you can use the multicast to get away from having to know specifically who is managing what.
| [Monday 14 June 2010] [00:59:26] <sustrik>  yes
| [Monday 14 June 2010] [00:59:52] <sustrik>  you have to have a node in the middle if you want to do everyone-to-everyone messaging
| [Monday 14 June 2010] [01:00:03] <sustrik>  with IP multicast it's your network switch
| [Monday 14 June 2010] [01:00:10] <Gambit->  yeah
| [Monday 14 June 2010] [01:00:14] <sustrik>  with tcp, you need the broker
| [Monday 14 June 2010] [01:00:17] <Gambit->  that ip switch is usually me.
| [Monday 14 June 2010] [01:00:26] <Gambit->  so we'd have to support that.
| [Monday 14 June 2010] [01:00:30]     * Gambit- contemplates.
| [Monday 14 June 2010] [01:00:56] <sustrik>  it's all on the local box?
| [Monday 14 June 2010] [01:01:06] <sustrik>  then definitely use TCP
| [Monday 14 June 2010] [01:01:08] <Gambit->  No, sorry, that was poorly said.
| [Monday 14 June 2010] [01:01:25] <Gambit->  Our product is often used as a load balancer.
| [Monday 14 June 2010] [01:01:41] <Gambit->  how similar is the wire protocol between 0mq and rabbitmq, btw?
| [Monday 14 June 2010] [01:01:46] <Gambit->  are you guys expecting to converge at somepoint?
| [Monday 14 June 2010] [01:02:39] <sustrik>  well, rabitmq is a multiprotocol server
| [Monday 14 June 2010] [01:02:58] <sustrik>  so it's shouldn't be hard to plug 0mq into it as an underlying transport
| [Monday 14 June 2010] [01:03:22] <sustrik>  especially that there's an Erlang binding for 0mq recently
| [Monday 14 June 2010] [01:03:28] <Gambit->  Again with the TCP/SQL Server comparisons :)
| [Monday 14 June 2010] [01:04:02] <Gambit->  I think I've been thinking of 0mq as another implementation of AMQP, when it's really not.
| [Monday 14 June 2010] [01:04:10] <sustrik>  no, it's not
| [Monday 14 June 2010] [01:04:43] <sustrik>  it's a layer in networking stack that allows you to speak with serveral peers at the same time
| [Monday 14 June 2010] [01:04:49] <sustrik>  that's more or less it
| [Monday 14 June 2010] [01:04:59] <Gambit->  So... A better PGM?
| [Monday 14 June 2010] [01:05:21] <sustrik>  PGM is only about data distribution
| [Monday 14 June 2010] [01:05:30] <Gambit->  Not about messages, eh?
| [Monday 14 June 2010] [01:05:44] <sustrik>  it's more about scenarios:
| [Monday 14 June 2010] [01:05:53] <sustrik>  PGM: send this message/data to everyone
| [Monday 14 June 2010] [01:06:03] <sustrik>  0MQ: 1. dtto
| [Monday 14 June 2010] [01:06:07] <sustrik>  2. request/reply
| [Monday 14 June 2010] [01:06:10] <sustrik>  3. load balancing
| [Monday 14 June 2010] [01:06:12] <sustrik>  etc.
| [Monday 14 June 2010] [01:06:43] <Gambit->  Right.
| [Monday 14 June 2010] [01:06:59] <Gambit->  Okay, many many thanks for your time.  Any other words of wisdom here?
| [Monday 14 June 2010] [01:07:27] <sustrik>  try it yourself, then decide :)
| [Monday 14 June 2010] [01:07:36]     * Gambit- grins and nods
| [Monday 14 June 2010] [01:07:52] <Gambit->  Right then, thanks :)
| [Monday 14 June 2010] [01:16:16] <Gambit->  Well, practically speaking I'm likely to delegate a large chunk of this.
| [Monday 14 June 2010] [01:16:18] <Gambit->  but yeah.
| [Monday 14 June 2010] [01:16:29] <Gambit->  okay, that's that report put together and sent off.
| [Monday 14 June 2010] [01:16:52] <Gambit->  Thanks again sustrik, strongly appreciate the dialog.  Next time you're in the Seattle area, give me a shout :)
| [Monday 14 June 2010] [01:17:17] <sustrik>  never been there, but i'll should once i get there :)
| [Monday 14 June 2010] [01:17:45] <Gambit->  it's a nice town :)
| [Monday 14 June 2010] [01:17:57] <Gambit->  righto, then, ciao!
| [Monday 14 June 2010] [01:20:28] <umesh>    is there any way by which server notifies client while going down in zmq ... 
| [Monday 14 June 2010] [01:20:31] <umesh>    ?
| [Monday 14 June 2010] [01:24:00] <umesh>    there is no such way of sending the notification ?
| [Monday 14 June 2010] [01:34:07] <sustrik>  no, there's not, you would need a sync API for that
| [Monday 14 June 2010] [01:34:24] <sustrik>  you can of course send messages by hand over TCP if needed
| [Monday 14 June 2010] [01:45:13] <umesh>    ok
| [Monday 14 June 2010] [01:45:23] <umesh>    so not possible in zermq 
| [Monday 14 June 2010] [01:46:08] <umesh>    hand over tcp means ... while going down ...i can send message to peer notifying of it 
| [Monday 14 June 2010] [01:47:09] <umesh>    right ?
| [Monday 14 June 2010] [02:42:03] <umesh>    is it safe if I create a seperate thread for recv call ... in server ...
| [Monday 14 June 2010] [02:42:35] <umesh>    means instead of waiting for the recv in hte main process ... I will create thread and wait there ... 
| [Monday 14 June 2010] [02:45:47] <sustrik>  hand over tcp = open raw BSD socket, push the data through it
| [Monday 14 June 2010] [02:46:04] <sustrik>  yes, you can recv in a worker thread
| [Monday 14 June 2010] [02:46:30] <sustrik>  the only requirement is that each 0MQ socket is used from exactly one OS thread
| [Monday 14 June 2010] [02:47:17] <umesh>    ok
| [Monday 14 June 2010] [03:36:20] <mikko>    good morning
| [Monday 14 June 2010] [03:36:34] <sustrik>  morning
| [Monday 14 June 2010] [05:03:59] <mikko>    i wrote a http publisher for 0MQ last night
| [Monday 14 June 2010] [05:04:17] <mikko>    but if anyone happens to have need for such a thing it's here http://valokuva.org/~mikko/code/httpublish/
| [Monday 14 June 2010] [05:04:39] <mikko>    it takes a http post and publishes it over 0MQ
| [Monday 14 June 2010] [05:07:29] <sustrik>  mikko: i think we should somehow centralise links for useful stuff of this kind
| [Monday 14 June 2010] [05:08:00] <sustrik>  tools section on the website?
| [Monday 14 June 2010] [05:08:32] <sustrik>  at least mention it on the mailing list so that link won't get lost
| [Monday 14 June 2010] [05:31:53] <mikko>    sustrik: "Misc" maybe
| [Monday 14 June 2010] [05:32:06] <mikko>    i'll push it to github later so it won't get lost
| [Monday 14 June 2010] [05:32:12] <sustrik>  great
| [Monday 14 June 2010] [05:32:16] <mikko>    seems like i can push 6k messages a second with that
| [Monday 14 June 2010] [05:32:28] <mikko>    (testing with ab)
| [Monday 14 June 2010] [05:33:09] <sustrik>  is that good or bad result?
| [Monday 14 June 2010] [05:33:18]     * sustrik has little experience with http
| [Monday 14 June 2010] [05:34:10] <mikko>    it's fairly good 
| [Monday 14 June 2010] [05:34:22] <mikko>    doing the same thing over php i might get 800 - 1.2k
| [Monday 14 June 2010] [05:34:30] <sustrik>  ok, i see
| [Monday 14 June 2010] [05:34:33] <mikko>    i don't really know what to compare to
| [Monday 14 June 2010] [05:34:39] <sustrik>  ack
| [Monday 14 June 2010] [05:34:57] <mikko>    maybe even http device for 0MQ might make sense
| [Monday 14 June 2010] [05:34:58] <sustrik>  ok, when you have the gihub repo we'll find some place for the link
| [Monday 14 June 2010] [05:35:08] <mikko>    would allow pretty integration
| [Monday 14 June 2010] [05:35:18] <sustrik>  mikko: i thought about that actually
| [Monday 14 June 2010] [05:35:38] <sustrik>  but i am too lazy to write it :)
| [Monday 14 June 2010] [05:36:09] <sustrik>  wouldn't it make sense to turn your code into a device?
| [Monday 14 June 2010] [05:36:12] <mikko>    i remember seeing a tiny http parsing library somewhere
| [Monday 14 June 2010] [05:36:26] <mikko>    yes, the code currently uses libevent http abstraction
| [Monday 14 June 2010] [05:36:35] <mikko>    moving over to a device would mean leaving that abstraction
| [Monday 14 June 2010] [05:36:39] <mikko>    and parsing the http
| [Monday 14 June 2010] [05:36:55] <sustrik>  so now it sends the http message over 0mq?
| [Monday 14 June 2010] [05:37:11] <mikko>    yep
| [Monday 14 June 2010] [05:37:23] <mikko>    but all http protocol parsing is done by libevent
| [Monday 14 June 2010] [05:37:52] <mikko>    i remember the node.js had a tiny C library for parsing http in async fashion
| [Monday 14 June 2010] [05:37:59] <sustrik>  so the http header is stripped and only payload is passed over 0mq?
| [Monday 14 June 2010] [05:38:07] <mikko>    yes
| [Monday 14 June 2010] [05:38:12] <sustrik>  ok, got it
| [Monday 14 June 2010] [05:38:16] <mikko>    it responds to /publish 
| [Monday 14 June 2010] [05:38:24] <mikko>    POST /publish HTTP/1.0
| [Monday 14 June 2010] [05:38:29] <mikko>    Content-Length: 5
| [Monday 14 June 2010] [05:38:32] <mikko>     
| [Monday 14 June 2010] [05:38:34] <mikko>    aaaaa
| [Monday 14 June 2010] [05:38:44] <mikko>    would send aaaaa over to 0mq
| [Monday 14 June 2010] [05:39:16] <sustrik>  can you have a look at the node.js library?
| [Monday 14 June 2010] [05:39:30] <mikko>    yeah, trying to find
| [Monday 14 June 2010] [05:41:40] <mikko>    http://github.com/ry/http-parser
| [Monday 14 June 2010] [05:41:43] <mikko>    i think it's that one
| [Monday 14 June 2010] [05:41:59] <mikko>    the readme looks promising
| [Monday 14 June 2010] [05:42:14]     * sustrik is checking it
| [Monday 14 June 2010] [05:44:15] <sustrik>  it looks viable
| [Monday 14 June 2010] [05:45:27] <mikko>    i could take a poke to it
| [Monday 14 June 2010] [05:45:30] <mikko>    later today
| [Monday 14 June 2010] [05:45:44] <mikko>    good introduction to devices if nothing else :)
| [Monday 14 June 2010] [05:46:18] <sustrik>  devices are dead simple
| [Monday 14 June 2010] [06:30:40] <rgl>  mikko, have you seen zed mongrel2.org ?
| [Monday 14 June 2010] [06:33:09] <mikko>    rgl: yeah, i saw the posting on mailing-lists
| [Monday 14 June 2010] [06:33:20] <mikko>    mongrel however reminds me of Ruby for some reason
| [Monday 14 June 2010] [06:36:43] <rgl>  yes. it's an http server for ruby.
| [Monday 14 June 2010] [06:36:55] <rgl>  thou... mongrel2 is no longer that.
| [Monday 14 June 2010] [06:37:12] <rgl>  mainly mongrel has a nice http parser. which is used in mongrel2.
| [Monday 14 June 2010] [06:41:51] <mikko>    mongrel2 is C ?
| [Monday 14 June 2010] [06:43:07] <mikko>    "Since Mongrel2 will be written in C it should do files pretty well too, but easy application architectures and operations support will come first. "
| [Monday 14 June 2010] [07:07:36] <rgl>  yup.
| [Monday 14 June 2010] [08:10:09] <mikko>    sustrik: forwarder.cpp
| [Monday 14 June 2010] [08:10:17] <sustrik>  yes?
| [Monday 14 June 2010] [08:10:18] <mikko>    sustrik: should that contain zmq_msg_close for the message?
| [Monday 14 June 2010] [08:10:26] <sustrik>  let me see
| [Monday 14 June 2010] [08:11:27] <sustrik>  there's no zmq_msg_close afaics
| [Monday 14 June 2010] [08:11:45] <mikko>    i mean should there be?
| [Monday 14 June 2010] [08:11:54] <sustrik>  it's an infinite loop
| [Monday 14 June 2010] [08:12:09] <mikko>    ah ok
| [Monday 14 June 2010] [08:12:18] <mikko>    btw
| [Monday 14 June 2010] [08:12:36] <mikko>    how do you normally handle errors in constructing the objects inside zeromq2?
| [Monday 14 June 2010] [08:12:41] <mikko>    throw an exception?
| [Monday 14 June 2010] [08:12:50] <sustrik>  out of memory you mean?
| [Monday 14 June 2010] [08:12:52] <sustrik>  assert
| [Monday 14 June 2010] [08:13:13] <mikko>    ok
| [Monday 14 June 2010] [08:13:30] <sustrik>  as for the infinite loop, it should be fixed
| [Monday 14 June 2010] [08:13:34] <sustrik>  i forgot about it
| [Monday 14 June 2010] [08:13:55] <sustrik>  now with 2.0.7 the loop can be exited by terminating the associated context
| [Monday 14 June 2010] [08:14:34]     * sustrik makes a mental note
| [Monday 14 June 2010] [09:11:26] <willvarfar>   so does zeromq handle persistance of messages, mailbox-like?
| [Monday 14 June 2010] [09:29:47] <sustrik>  willvarfar: no, it does not
| [Monday 14 June 2010] [09:37:37] <willvarfar>   what message queue system would you recommend if I needed offline delivery?
| [Monday 14 June 2010] [09:53:48] <sustrik>  rabbitmq
| [Monday 14 June 2010] [11:08:49] <rgl>  sustrik, even the queue device? I mean, doesn't it queue messages until someone can pick them up?
| [Monday 14 June 2010] [11:17:10] <sustrik>  rgl: it does
| [Monday 14 June 2010] [11:17:17] <sustrik>  but it does so in memory
| [Monday 14 June 2010] [11:17:31] <sustrik>  so in case of power failure the messages are loast
| [Monday 14 June 2010] [11:17:35] <sustrik>  lost*
| [Monday 14 June 2010] [11:18:04] <rgl>  ah, non persistence there?  ok.
| [Monday 14 June 2010] [11:20:49] <mikko>    sustrik: are there any plans for persistence?
| [Monday 14 June 2010] [11:23:22] <sustrik>  mikko: not near-term plans
| [Monday 14 June 2010] [11:24:02] <sustrik>  on-disk offload (swap) should be added shortly, but no real persistence
| [Monday 14 June 2010] [11:24:09] <mikko>    the queue device looks pretty simple
| [Monday 14 June 2010] [11:24:27] <sustrik>  it is
| [Monday 14 June 2010] [11:24:54] <mikko>    the http device looks like to be more complicated
| [Monday 14 June 2010] [11:25:16] <sustrik>  the http part maybe
| [Monday 14 June 2010] [11:25:41] <sustrik>  the 0mq part would be the same as in queue device afaiu
| [Monday 14 June 2010] [11:26:04] <mikko>    should i inherit http_socket from socket_base?
| [Monday 14 June 2010] [11:26:33] <mikko>    im still not got quite into the code
| [Monday 14 June 2010] [11:26:34] <sustrik>  well, there are two options
| [Monday 14 June 2010] [11:26:48] <sustrik>  either you add http as a new transport mechanism
| [Monday 14 June 2010] [11:26:55] <sustrik>  aside of tcp, inproc et al.
| [Monday 14 June 2010] [11:27:13] <sustrik>  that's pretty complex to implement, but most generic solution
| [Monday 14 June 2010] [11:27:33] <sustrik>  the other option is create a device that would be http<->0mq bridge
| [Monday 14 June 2010] [11:28:00] <sustrik>  http connections are on one side, 0mq connections on the other
| [Monday 14 June 2010] [11:28:14] <mikko>    i was thinking about starting with porting the publisher over to 0mq device
| [Monday 14 June 2010] [11:28:31] <sustrik>  sorry, what publisher?
| [Monday 14 June 2010] [11:28:38] <mikko>    httpublish.c i pasted earlier
| [Monday 14 June 2010] [11:29:03] <mikko>    and then maybe extend to have a req/rep support as well
| [Monday 14 June 2010] [11:29:26] <mikko>    so you could do a http call -> 0mq req -> 0mq rep -> http rep
| [Monday 14 June 2010] [11:30:45] <sustrik>  right, it's a standalone application
| [Monday 14 June 2010] [11:30:55] <sustrik>  so it's the latter solution (the bridge)
| [Monday 14 June 2010] [11:49:29] <zedas>    mikko, rgl: yep, mongrel2 is C.
| [Monday 14 June 2010] [11:54:04] <CIA-17>   rbzmq: 03Brian Buchanan 07master * r3d19085 10/ rbzmq.cpp : remove support for libzmq < 2.0.7 - http://bit.ly/d26OdF
| [Monday 14 June 2010] [11:54:05] <CIA-17>   rbzmq: 03Brian Buchanan 07master * r92d3af8 10/ (.gitignore zmq.gemspec rbzmq.c rbzmq.cpp): add rdoc documentation - http://bit.ly/cZzye1
| [Monday 14 June 2010] [11:54:31] <rgl>  zedas, is there a reason to call it mongrel2? I mean, why use the mongrel moniker?
| [Monday 14 June 2010] [12:03:13] <zedas>    rgl: 1. at the core is the mongrel http parser, which is the main thing.  2. i've wanted to reprise the mongrel server for a long time. 3. the current maintainers of mongrel let it die, which sucks. 4. the name still means "good web server" to a lot of people. 5. i don't believe everything in the universe should fit neatly into a single moniker like a library catalog.
| [Monday 14 June 2010] [12:06:57] <rgl>  zedas, I see. that perfectly acceptable :D
| [Monday 14 June 2010] [12:22:58] <mikko>    zedas: it is plain C?
| [Monday 14 June 2010] [12:24:15] <mikko>    good
| [Monday 14 June 2010] [12:24:20] <mikko>    i'll keep my eye on that
| [Monday 14 June 2010] [12:26:46] <zedas>    mikko: so far.
| [Monday 14 June 2010] [15:24:41] Notice -NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Monday 14 June 2010] [15:24:41] Notice -NickServ- You are now identified for travlr.
| [Monday 14 June 2010] [15:24:41] CTCP   Received Version request from frigg.
| [Monday 14 June 2010] [15:24:43] Notice -ChanServ- [#rekonq] welcome to rekonq, webkit KDE browser, channel
| [Monday 14 June 2010] [20:41:43] <travisbrady>  sustrik: is the example at the bottom of this page out of date? http://api.zeromq.org/zmq_getsockopt.html the simple program I wrote to emulate it is crashing http://pastie.org/1004700 on Mac OS X
| [Monday 14 June 2010] [21:36:15] <foysavas> zedas: mikko: mongrel may have a good name to it, but sequels tend to suck. besides what ever happened to naming it gaegogi?
| [Monday 14 June 2010] [22:10:35] <zedas>    foysavas: too offensive
| [Tuesday 15 June 2010] [01:55:09] <sustrik> travisbrady: yes, the example is broken
| [Tuesday 15 June 2010] [01:55:51] <sustrik> the last parameter should be pointer to size not the size itself
| [Tuesday 15 June 2010] [01:55:55] <sustrik> thanks for spotting this
| [Tuesday 15 June 2010] [01:58:50] <travisbrady> sustrik: sure, glad to help.  I'm working on a client lib and polling and getsockopt are all I've got left
| [Tuesday 15 June 2010] [01:59:36] <sustrik> great!
| [Tuesday 15 June 2010] [02:00:14] <travisbrady> I've got the simple server and the chat examples working nicely.  need to do the perf stuff next
| [Tuesday 15 June 2010] [02:01:13] <sustrik> yes, that's always interesting
| [Tuesday 15 June 2010] [02:01:33] <sustrik> seeing how much your language runtime adds to latency
| [Tuesday 15 June 2010] [02:02:41] <travisbrady> Any idea which languages (outside of c/c++) are fastest currently?
| [Tuesday 15 June 2010] [02:02:56] <CIA-17>  zeromq2: 03Martin Sustrik 07master * r9858447 10/ doc/zmq_getsockopt.txt : getsockopt documentation fixed - http://bit.ly/aeBuDC
| [Tuesday 15 June 2010] [02:03:08] <sustrik> C is the native API
| [Tuesday 15 June 2010] [02:03:15] <sustrik> so it's definitely the fastest
| [Tuesday 15 June 2010] [02:03:25] <sustrik> however, C++ is just a thin wrapper
| [Tuesday 15 June 2010] [02:03:37] <sustrik> that gets optimised away anyway
| [Tuesday 15 June 2010] [02:03:46] <sustrik> so it should be as fast as C
| [Tuesday 15 June 2010] [02:05:16] <travisbrady> But apart from those is java introduce the least latency?  Haskell? 
| [Tuesday 15 June 2010] [02:05:41] <travisbrady> pardon me, I mean to say "DOES java" not "is Java", must be time for bed
| [Tuesday 15 June 2010] [02:09:33] <sustrik> depends on message size
| [Tuesday 15 June 2010] [02:09:57] <sustrik> brian grager done a lot of work on using zero-copy in python binding
| [Tuesday 15 June 2010] [02:10:09] <sustrik> so the performance for large messages is equivalent to C
| [Tuesday 15 June 2010] [02:12:14] <sustrik> compiled languages on the other hand may have the least performance impact on small messages (List, .NET)
| [Tuesday 15 June 2010] [02:12:18] <sustrik> Lisp*
| [Tuesday 15 June 2010] [02:12:28] <sustrik> Java
| [Tuesday 15 June 2010] [02:29:26] <umesh>   I have a client server code using req-rep sockets ...
| [Tuesday 15 June 2010] [02:29:47] <umesh>   I start a client first ... 
| [Tuesday 15 June 2010] [02:30:47] <umesh>   if I don't start the server it wiats indefinitely ... is there any way to detect error like server is not up or connection reset ... if server goes down before client send etc ...
| [Tuesday 15 June 2010] [02:30:58] <umesh>   waits*
| [Tuesday 15 June 2010] [02:36:27] <sustrik> no
| [Tuesday 15 June 2010] [02:39:11] <umesh>   no way through zmq_poll as well ?
| [Tuesday 15 June 2010] [02:44:04] <sustrik> no, 0MQ is async library
| [Tuesday 15 June 2010] [02:44:16] <sustrik> the message gets sends once it's possible
| [Tuesday 15 June 2010] [02:44:26] <sustrik> at the time you call zmq_send it's just queued
| [Tuesday 15 June 2010] [02:44:43] <sustrik> if you want to use your 0mq server with sync client
| [Tuesday 15 June 2010] [02:45:00] <sustrik> i would suggest simply using raw TCP connection on the clients side
| [Tuesday 15 June 2010] [02:45:28] <sustrik> there was a discussion about writing a sync 0mq client couple of times
| [Tuesday 15 June 2010] [02:45:33] <sustrik> but nodody really did it
| [Tuesday 15 June 2010] [02:49:03] <umesh>   ok ... thanks
| [Tuesday 15 June 2010] [08:02:57] <CIA-17>  zeromq2: 03Martin Sustrik 07master * r341e8a2 10/ AUTHORS : test commit - http://bit.ly/d13f9p
| [Tuesday 15 June 2010] [11:37:34] <CIA-17>  rbzmq: 03Brian Buchanan 07master * rdb6d541 10/ .gitignore : ignore *.tmproj - http://bit.ly/c0AocM
| [Tuesday 15 June 2010] [18:18:44] <rgl> zedas, I'm almost convinced to start using fossil. the last sentence on your post was brutal heheh
| [Tuesday 15 June 2010] [18:54:37] <zedas>   rgl: hehe, i calls it like i see it. :-)
| 
| *** Logfile started
| *** on Wed Jun 16 00:55:18 2010
| 
| [Wednesday 16 June 2010] [01:18:11] <sustrik>   aunc: hi
| [Wednesday 16 June 2010] [01:19:18] <guido_g>   long gone he is :)
| [Wednesday 16 June 2010] [01:19:34] <guido_g>   good morning, btw
| [Wednesday 16 June 2010] [01:19:38] <sustrik>   morning
| [Wednesday 16 June 2010] [01:19:48] <sustrik>   missed that
| [Wednesday 16 June 2010] [01:20:24] <guido_g>   easy, it's early
| [Wednesday 16 June 2010] [01:20:54] <sustrik>   you are in CET as well?
| [Wednesday 16 June 2010] [01:21:05] <guido_g>   yes
| [Wednesday 16 June 2010] [01:22:24] <guido_g>   just fell out of bed :)
| [Wednesday 16 June 2010] [01:31:25] <sustrik>   yes made my tea
| [Wednesday 16 June 2010] [01:32:00] <guido_g>   2nd coffee here
| [Wednesday 16 June 2010] [01:32:36] <guido_g>   the news say the world is still crazy, so everthing is as usual
| [Wednesday 16 June 2010] [01:35:08] <sustrik>   :)
| [Wednesday 16 June 2010] [03:32:14] <guido_g>   re
| [Wednesday 16 June 2010] [05:50:29] <Efhache>   Hi everybody... I need some help about ZMQ... I've found a tutorial about instant messaging on the zmq website 
| [Wednesday 16 June 2010] [05:51:32] <Efhache>   with referece to a "chat example" in the zmq package....  Where can I find it?  I've seen into the coockbook a link to a chat example but the link is broked
| [Wednesday 16 June 2010] [05:51:40] <Efhache>   Some one have the source code?
| [Wednesday 16 June 2010] [05:59:50] <guido_g>   it might be the links need an update because the repos have been renamed
| [Wednesday 16 June 2010] [06:00:05] <guido_g>   have a look at the mailing list for the new repository names
| [Wednesday 16 June 2010] [06:26:00] <sustrik>   Efhache: Ok, the links are fixed now
| [Wednesday 16 June 2010] [07:04:42] <Efhache>   with a lot of delay....  thank you sustrik for your help :-)
| [Wednesday 16 June 2010] [07:05:00] <sustrik>   you are welcome!
| [Wednesday 16 June 2010] [07:19:06] <Efhache>   just one more question : this is code is in link with the "Intant Messaging (tutorial) " on the zmq website?
| [Wednesday 16 June 2010] [07:19:27] <Efhache>   I do not find a "chatroom" process in the code. Is it right?
| [Wednesday 16 June 2010] [07:22:31] <umesh_>    I am using the xreq/xrep sockets ...
| [Wednesday 16 June 2010] [07:23:06] <umesh_>    I have send the single req from client to server ... but i am getting two messages in the server ...
| [Wednesday 16 June 2010] [07:23:21] <umesh_>    also I am not getting the response back in the client ...
| [Wednesday 16 June 2010] [07:35:04] <guido_g>   *sigh*
| [Wednesday 16 June 2010] [07:35:23] <guido_g>   first part of the message received is the id, second part the data
| [Wednesday 16 June 2010] [07:35:44] <guido_g>   you have to prepend the id to the result returned
| [Wednesday 16 June 2010] [07:40:26] <umesh_>    ok ...
| [Wednesday 16 June 2010] [07:41:11] <umesh_>    if I am sending multiple responses ... then all the responses should have id ...
| [Wednesday 16 June 2010] [07:59:20] <guido_g>   multiple responses to one are done with multiple message parts
| [Wednesday 16 June 2010] [07:59:27] <guido_g>   *to one request
| [Wednesday 16 June 2010] [08:01:14] <sustrik>   Efhache: the tutorial is outdated
| [Wednesday 16 June 2010] [08:01:24] <sustrik>   have a look at README file in the project
| [Wednesday 16 June 2010] [08:08:46] <umesh_>    I do not want to use that ... one of the reason being it will only send data once on the wire ...
| [Wednesday 16 June 2010] [08:09:07] <umesh_>    I have application line which sends status information on wire ...
| [Wednesday 16 June 2010] [08:09:36] <umesh_>    e.g. I am installing applicatiob remotely and that send the status in % of application installed ...
| [Wednesday 16 June 2010] [08:14:06] <guido_g>   (x)req/(x)rep is built to supoort the one request and one response pattern
| [Wednesday 16 June 2010] [08:14:28] <guido_g>   if you want to have something different, use a different socket type
| [Wednesday 16 June 2010] [08:18:12] <umesh_>    but sending the single response is not even working ...
| [Wednesday 16 June 2010] [08:18:30] <guido_g>   w/o the code we can only guess
| [Wednesday 16 June 2010] [08:18:37] <umesh_>    Assertion failed: msg_->flags & ZMQ_MSG_MORE (xrep.cpp:146)
| [Wednesday 16 June 2010] [08:19:05] <umesh_>    and if I provide SNDMORE flag in send ... it does not crash but does not recv anything ...
| [Wednesday 16 June 2010] [08:19:23] <guido_g>   umesh_: show the code
| [Wednesday 16 June 2010] [08:19:52] <sustrik>   umesh_: if you are sending responses via XREP socket
| [Wednesday 16 June 2010] [08:19:53] <guido_g>   and I mean the code that _actually_ has been run
| [Wednesday 16 June 2010] [08:20:08] <sustrik>   you have to prefix the response by the requester ID
| [Wednesday 16 June 2010] [08:20:23] <sustrik>   the same you've get with the request
| [Wednesday 16 June 2010] [08:20:41] <guido_g>   that's what i told him above
| [Wednesday 16 June 2010] [08:21:13] <sustrik>   the assert just checks that there are at least two parts to the message: ID and body
| [Wednesday 16 June 2010] [08:21:23] <sustrik>   xrep.cpp:146 i mean
| [Wednesday 16 June 2010] [08:22:26] <umesh_>    http://pastebin.com/nQigmsKx
| [Wednesday 16 June 2010] [08:22:35] <umesh_>    check here at pastebin
| [Wednesday 16 June 2010] [08:22:51] <umesh_>    this is just the server part ...
| [Wednesday 16 June 2010] [08:23:24] <umesh_>    i think I got a error ...
| [Wednesday 16 June 2010] [08:23:35] <umesh_>    i need to send 2 responses ... 
| [Wednesday 16 June 2010] [08:23:56] <umesh_>    in first id and second actaul resposne
| [Wednesday 16 June 2010] [08:24:29] <umesh_>    but what i did was i just sent one response in which id is prepended to response 
| [Wednesday 16 June 2010] [08:24:50] <guido_g>   you need to send a 2 part message
| [Wednesday 16 June 2010] [08:25:39] <guido_g>   the first part (with the id) is sent with the ZMQ_MSG_MORE flag set
| [Wednesday 16 June 2010] [08:25:53] <guido_g>   the 2nd part is your response, w/o the flag set
| [Wednesday 16 June 2010] [08:28:36] <umesh_>    its working now 
| [Wednesday 16 June 2010] [08:29:07] <umesh_>    is there no way to send multiple responses to the single request ... without multipart messages ...
| [Wednesday 16 June 2010] [08:29:08] <umesh_>    ?
| [Wednesday 16 June 2010] [08:29:20] <guido_g>   no
| [Wednesday 16 June 2010] [08:32:52] <umesh_>    ok
| [Wednesday 16 June 2010] [20:35:14] <rgl>   zedas, go mongrel go! :-)
| 
| *** Logfile started
| *** on Wed Jun 16 23:49:26 2010
| 
| [Thursday 17 June 2010] [00:07:15] <nak>    hi
| [Thursday 17 June 2010] [00:59:05] <sustrik>    nak: hi
| [Thursday 17 June 2010] [01:05:15] <guido_g>    good morning all
| [Thursday 17 June 2010] [01:08:57] <nak>    sustrik: trying to code an irc bot using zeromq
| [Thursday 17 June 2010] [01:08:59] <nak>    in c
| [Thursday 17 June 2010] [01:09:05] <nak>    could you give me any tips on how to set this up
| [Thursday 17 June 2010] [01:09:10] <nak>    so far i've gotten to the zmq_connect part
| [Thursday 17 June 2010] [01:10:37] <sustrik>    there's an example that works that way
| [Thursday 17 June 2010] [01:11:11] <sustrik>    http://github.com/zeromq/zeromq-chat
| [Thursday 17 June 2010] [01:12:49] <nak>    thanks
| [Thursday 17 June 2010] [01:16:14] <nak>    sustrik: the s.connect there isn't the same as the one in c
| [Thursday 17 June 2010] [01:16:23] <nak>    in c you have to send a tcp://address:port
| [Thursday 17 June 2010] [01:16:28] <nak>    there you just connect?
| [Thursday 17 June 2010] [01:17:03] <sustrik>    sorry, what are you speaking about?
| [Thursday 17 June 2010] [01:19:08] <nak>    int zmq_connect (void *socket, const char *address);
| [Thursday 17 June 2010] [01:19:23] <nak>    where the format has to be rc = zmq_connect (socket, "tcp://server001:5555");
| [Thursday 17 June 2010] [01:19:28] <sustrik>    yes
| [Thursday 17 June 2010] [01:19:44] <nak>    ok
| [Thursday 17 June 2010] [01:27:46] <nak>            zmq::message_t msg (strlen (textbuf) + 1);
| [Thursday 17 June 2010] [01:27:46] <nak>            memcpy (msg.data (), textbuf, msg.size ());
| [Thursday 17 June 2010] [01:27:49] <nak>    hnn
| [Thursday 17 June 2010] [01:28:03] <nak>    so in c this would be zmq_msg_t msg = strlen (textbuf) + 1;
| [Thursday 17 June 2010] [01:28:17] <nak>    and the memcpy?
| [Thursday 17 June 2010] [01:40:18] <sustrik>    zmq_msg_t msg;
| [Thursday 17 June 2010] [01:40:35] <sustrik>    zmq_msg_init_size (&msg, strlen (textbuf) + 1);
| [Thursday 17 June 2010] [01:40:42] <sustrik>    memcpy (...)
| [Thursday 17 June 2010] [01:51:27] <nak>    sustrik: http://codepad.org/XGEpa7gw
| [Thursday 17 June 2010] [01:51:34] <nak>    i don't know the zeromq types, etc
| [Thursday 17 June 2010] [01:51:37] <nak>    foreign to me.
| [Thursday 17 June 2010] [01:51:51] <nak>    what should i pass to memcpy
| [Thursday 17 June 2010] [01:51:54] <nak>    msg.data?
| [Thursday 17 June 2010] [01:53:39] <guido_g>    http://api.zeromq.org/zmq_msg_init_size.html <- docs
| [Thursday 17 June 2010] [01:53:55] <guido_g>    http://api.zeromq.org/zmq.html <- even more docs
| [Thursday 17 June 2010] [01:59:43] <nak>    :)
| 
| *** Logfile started
| *** on Thu Jun 17 02:39:46 2010
| 
| [Thursday 17 June 2010] [02:42:48] <umesh>  how can i build pyzmq with static zmq libraries ...
| [Thursday 17 June 2010] [02:54:02] <sustrik>    question for brian
| [Thursday 17 June 2010] [02:54:14] <sustrik>    try asking on mailing list
| [Thursday 17 June 2010] [02:54:34] <umesh>  ok
| [Thursday 17 June 2010] [04:58:04] <middayc>    I would like to make a Rebol binding to 0mq .. are there any zmqlib.so / dll available maybe that one could download without recompiling?
| [Thursday 17 June 2010] [05:02:45] <CIA-17> zeromq2: 03Martin Sustrik 07master * r9151de3 10/ src/socket_base.cpp : generate identity for transient inproc connections - http://bit.ly/bsKHxn
| [Thursday 17 June 2010] [05:03:13] <sustrik>    middayc: not that I am aware of
| [Thursday 17 June 2010] [05:03:22] <sustrik>    however, recompiling takes few seconds
| [Thursday 17 June 2010] [05:03:50] <sustrik>    well, there are some linux packages out there
| [Thursday 17 June 2010] [05:04:26] <middayc>    I am on windows now and I don't have VS2008, just VS6 and probably to crappy computer to make VS2008 run well anyway
| [Thursday 17 June 2010] [05:06:09] <sustrik>    you don't need it to run well
| [Thursday 17 June 2010] [05:06:16] <sustrik>    it's a very small project
| [Thursday 17 June 2010] [05:06:28] <sustrik>    so it'll compile even on crappy computer
| [Thursday 17 June 2010] [05:07:27] <middayc>    last time I tried VS2008 it was horrible.. I will try it again .. ok thanks :) .. just wanted to make sure I am not wasting time downloading and installing visual studio if there is some dll somewhere to try
| [Thursday 17 June 2010] [05:09:19] <sustrik>    middayc: optionally, it should be compilable under mingw if you have that installed
| [Thursday 17 June 2010] [05:10:31] <middayc>    I think I have.. I am not too good lower level programmer .. I will try the default way now. if mongrel2 plans work 0mq will get quite some attention :)
| [Thursday 17 June 2010] [05:11:30] <sustrik>    ok
| [Thursday 17 June 2010] [05:24:39] <middayc>    ha, I have the dll, I already had vs2008 installed, just didn't have it registered .. I will tell you if I make the rebol binding. Thanks
| [Thursday 17 June 2010] [05:26:21] <middayc>    I see you also have interprocess communication? so this could be a good option to make for example rebol apps multicore?
| [Thursday 17 June 2010] [05:42:03] <sustrik>    ipc doesn't work on win32 sadly
| [Thursday 17 June 2010] [05:42:13] <sustrik>    but using TCP loopback works well
| [Thursday 17 June 2010] [05:42:44] <sustrik>    e.g: zmq_bind ("tcp://127.0.0.1:5555"); 
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: 03Martin Hurton 07master * r4777fe4 10/ src/pipe.cpp : 
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: pipe: fix bug in rollback() method
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: The msgs_written variable keeps track how many complete
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: messages have been written so far. The rollback operation drops all
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: fragments of the last incomplete message so it shouldn't
| [Thursday 17 June 2010] [06:58:54] <CIA-17> zeromq2: change this variable at all. - http://bit.ly/9SRCM8
| [Thursday 17 June 2010] [08:53:29] <middayc>    what would a errno 19 or 22 mean with bind (in .h file when I see errors (if I see correctly) thy should all be above 156384712
| [Thursday 17 June 2010] [09:10:41] <middayc>    ah, I found strerror
| [Thursday 17 June 2010] [09:11:40] <sustrik>    middayc: yeah, strerror should help
| [Thursday 17 June 2010] [09:11:56] <sustrik>    the error you are seeing is probably defined in a system header somewhere
| [Thursday 17 June 2010] [09:18:47] <middayc>    19 means "no such device" I get -1 and "no such device on zmq-bind sock "tcp://localhost:5555"  but 0 and still 19 on zmq-bind sock "tcp://127.0.0.1:5555" ... later with recv I get "Operation cannot be accomplished in current state" but I am not sure if I handle &msg there properly yet (in binding)
| [Thursday 17 June 2010] [09:36:03] <sustrik>    what's happens when you do zmq_bind ("tcp://127.0.0.1:5555") ?
| [Thursday 17 June 2010] [09:38:50] <middayc>    I get 0 (but if I call errno anyway it returns "no such device" if it matters)
| [Thursday 17 June 2010] [09:39:41] <sustrik>    if you get 0 it's OK
| [Thursday 17 June 2010] [09:40:21] <sustrik>    note that on win32 there are no interface names
| [Thursday 17 June 2010] [09:40:33] <sustrik>    so you have to bind using an IP address of the interface
| [Thursday 17 June 2010] [09:43:57] <middayc>    aha, I saw that localhost didn't work.. no problem . I think I am having problem creating and passing that zmq_msg_t struct to init and then recv .. this is completely on my end (rebol's) so I shouldn't bother you about it
| [Thursday 17 June 2010] [09:51:20] <sustrik>    ok
| [Thursday 17 June 2010] [10:21:59] <middayc>    I wrote this in rebol chat (it's not so big community) so I guess I will bother you a little more :) .. http://www.qwikitxt.com/use.rsp?key=17-Jun-2010-t2ebk9a6r8ld1c1o4q3z in case you have time you can look at it and if my assumptions are stupidly wrong you can tell me :)
| [Thursday 17 June 2010] [10:37:47] <sustrik>    middayc: it depends on how rebol handles C objects
| [Thursday 17 June 2010] [10:38:09] <sustrik>    as a void*?
| [Thursday 17 June 2010] [10:38:56] <sustrik>    ok, even more essential question:
| [Thursday 17 June 2010] [10:39:10] <sustrik>    how does rebol wrap C libraries?
| [Thursday 17 June 2010] [10:39:23] <sustrik>    usign a bridge C library a la JNI
| [Thursday 17 June 2010] [10:39:51] <sustrik>    or by calling C functions directly from rebol (like .net)?
| [Thursday 17 June 2010] [10:46:14] <middayc>    http://paste.factorcode.org/paste?id=1734 it's very simple on rebol side, but it has it's limitations.. this is how I specify binding for simpler func ... I talked to some rebol guys and I will write some c code, similarly as lua handles this for example.
| [Thursday 17 June 2010] [10:50:05] <sustrik>    middayc: yes, the lua way helps as it doesn't require rebol to deal with messy C details (such as sizeof zmq_msg_t)
| [Thursday 17 June 2010] [10:50:19] <sustrik>    say for implementing send
| [Thursday 17 June 2010] [10:50:32] <sustrik>    you pass it rebol string (or bytearray or whatevet)
| [Thursday 17 June 2010] [10:50:47] <sustrik>    the underlying wrapper function (in C) will create zmq_msg_t
| [Thursday 17 June 2010] [10:50:59] <sustrik>    initialise it and copy the data into it
| [Thursday 17 June 2010] [10:51:04] <sustrik>    easy
| [Thursday 17 June 2010] [10:53:25] <CIA-17> zeromq2: 03Martin Sustrik 07master * r7f01e99 10/ (11 files in 3 dirs): stopwatch returned to libzmq - http://bit.ly/bFfVsS
| [Thursday 17 June 2010] [11:10:10] <CIA-17> zeromq2: 03Martin Sustrik 07master * rcff7ba2 10/ (6 files in 6 dirs): Windows build fixed - http://bit.ly/dx2FhU
| [Thursday 17 June 2010] [11:24:19] <middayc>    thanks for your oppinion.. I will do it that way then. And of course thanks for making 0mq .. what I like the most so far is that it has a minimal simple api
| [Thursday 17 June 2010] [11:31:04] <sustrik>    middayc: thanks
| [Thursday 17 June 2010] [11:34:45] <middayc>    (and power with ipc/speed/flexibility/.. I believe powerful things don't have to be bloated and 0mq is that way)
| [Thursday 17 June 2010] [11:36:04] <sustrik>    actually, bloat is mostly followed by performance degradation
| [Thursday 17 June 2010] [11:40:26] <middayc>    yes, I think exactly the same way :)
| [Thursday 17 June 2010] [14:41:37] <CIA-17> rbzmq: 03Brian Buchanan 07master * r048a024 10/ (zmq2.gemspec zmq.gemspec): rename gem to zmq2 - http://bit.ly/aq9jRH
| [Thursday 17 June 2010] [20:54:12] <achew22>    can anyone point me to a good introduction to zeromq that focuses on python?
| [Friday 18 June 2010] [02:55:24] <umesh>    I read some code in zeromq ...
| [Friday 18 June 2010] [02:55:41] <umesh>    i have some queries related to it 
| [Friday 18 June 2010] [02:56:29] <umesh>    I have observed that in zmq for req/rep ... it uses normal tcp/ip apis internally ...
| [Friday 18 June 2010] [02:56:48] <umesh>    like listen, bind, connect, accecp, recv and send etc ...
| [Friday 18 June 2010] [02:57:38] <umesh>    but when we close the server generall read or recv returns 0 when server is shutdown using cntrl-c or exit or abort ... 
| [Friday 18 June 2010] [02:58:32] <umesh>    but in case of zmq recv does not return 0 when server is closed using exit or abort 
| [Friday 18 June 2010] [02:58:34] <umesh>    why ?
| [Friday 18 June 2010] [03:55:54] <sustrik>  becore there are N connections
| [Friday 18 June 2010] [03:55:59] <sustrik>  because*
| [Friday 18 June 2010] [03:56:15] <sustrik>  one failing doesn't make other unusable
| [Friday 18 June 2010] [04:17:27] <umesh>    sustrik: I did not understood your answer very clearly 
| [Friday 18 June 2010] [04:18:00] <sustrik>  0mq sockets can have arbitrary number of BSD sockets under the hood
| [Friday 18 June 2010] [04:18:21] <sustrik>  if one of the BSD sockets fail
| [Friday 18 June 2010] [04:18:31] <sustrik>  the others are still up and kicking
| [Friday 18 June 2010] [04:20:16] <mikko>    is there any way to know that send to one endpoint failed?
| [Friday 18 June 2010] [04:20:29] <mikko>    is there a need to know ever?
| [Friday 18 June 2010] [04:20:43] <sustrik>  there's no such thing as "send to one endpoint"
| [Friday 18 June 2010] [04:20:55] <sustrik>  if you want that kind of stuff, use BSD sockets directly
| [Friday 18 June 2010] [04:21:14] <mikko>    maybe i misphrased
| [Friday 18 June 2010] [04:21:40] <mikko>    i mean if i connect 0mq socket to three endpoints and one of them is unreachable. as a developer do i need/want to know about that?
| [Friday 18 June 2010] [04:22:28] <sustrik>  the design of 0mq is such that you don't know
| [Friday 18 June 2010] [04:22:35] <sustrik>  it's like speaking to a cloud
| [Friday 18 June 2010] [04:22:55] <sustrik>  if you want to manage connections on one-by-one basis, that's what BSD sockets are for
| [Friday 18 June 2010] [04:23:55] <mikko>    fire and forget
| [Friday 18 June 2010] [04:24:29] <sustrik>  yes
| [Friday 18 June 2010] [04:25:26] <mikko>    i started working on http device but got stuck on figuring out SLAs for different things at work
| [Friday 18 June 2010] [04:26:15] <sustrik>  no haste :)
| [Friday 18 June 2010] [04:29:40] <mikko>    the thing i like about imatix page is that it lists prices for professional services
| [Friday 18 June 2010] [04:29:47] <mikko>    that is nice and transparent
| [Friday 18 June 2010] [04:30:02] <mikko>    most of the companies have phone number and you need to go through hoops to get prices
| [Friday 18 June 2010] [04:30:39] <sustrik>  yes, experienced that myself
| [Friday 18 June 2010] [04:32:17] <sustrik>  presumably, the price is not the same for everyone
| [Friday 18 June 2010] [04:32:35] <mikko>    yeah, that's what i assume
| [Friday 18 June 2010] [04:32:43] <mikko>    the bigger company calling the bigger the price is
| [Friday 18 June 2010] [04:33:00] <mikko>    makes it very hard to calculate costs for a project especially under very strict NDA
| [Friday 18 June 2010] [04:39:32] <sustrik>  true
| [Friday 18 June 2010] [06:44:11] <umesh>    sustrik: you remember on that day we discussed about the  writing a sync 0mq client
| [Friday 18 June 2010] [06:44:40] <umesh>    and you told discussion happended couple of times but no one really did it ...
| [Friday 18 June 2010] [06:44:47] <umesh>    I can do it ...
| [Friday 18 June 2010] [06:44:55] <umesh>    can you give me some pointers ...
| [Friday 18 June 2010] [06:45:01] <umesh>    on this ...
| [Friday 18 June 2010] [06:45:08] <umesh>    how can we do it etc ...
| [Friday 18 June 2010] [06:45:38] <sustrik>  umesh: it's easy
| [Friday 18 June 2010] [06:45:46] <sustrik>  have a look at zmq_tcp(7)
| [Friday 18 June 2010] [06:45:54] <sustrik>  the wire format section
| [Friday 18 June 2010] [06:46:03] <sustrik>  that's how 0mq messages look like on the wire
| [Friday 18 June 2010] [06:46:19] <sustrik>  so the only thing you have to do is to open a TCP socket
| [Friday 18 June 2010] [06:46:26] <sustrik>  and read/write such messages
| [Friday 18 June 2010] [06:46:30] <sustrik>  and report errors :)
| [Friday 18 June 2010] [06:49:05] <umesh>    ok
| [Friday 18 June 2010] [11:13:58] <cremes>   going async to sync... i just don't see the point to doing that; async is perfect already
| [Friday 18 June 2010] [11:19:41] <sustrik>  error handling i suppose
| [Friday 18 June 2010] [11:32:39] <cremes>   pffftt; that's what error callbacks are for.
| 
| *** Logfile started
| *** on Sat Jun 19 10:52:12 2010
| 
| [Saturday 19 June 2010] [14:09:10] <CIA-19> zeromq2: 03Martin Hurton 07master * r2c3913b 10/ src/pair.cpp : fix double free error in PAIR socket - http://bit.ly/dawP59
| [Saturday 19 June 2010] [14:49:47] <CIA-19> zeromq2: 03Martin Hurton 07master * r10c28c1 10/ src/pipe.cpp : Revive reader on pipe termination -
| 
| *** Logfile started
| *** on Sun Jun 20 14:17:29 2010
| 
| [Sunday 20 June 2010] [20:26:15] <Jad>  hey I'm looking for recommendations on SSL libraries (C preferably) for building some degree of security into a high volume socket server
| [Sunday 20 June 2010] [20:29:07] <Jad>  OpenSSL seems like the obvious choice
| [Sunday 20 June 2010] [21:34:50] <Jad>  does anyone have any experience with setting up the PHP extension on windoze?
| [Sunday 20 June 2010] [22:36:08] <impl> mikko would probably, since he wrote it (or maybe at least wrote one of them, I don't know if there are multiple)
| [Sunday 20 June 2010] [22:52:42] <Jad>  ok
| [Sunday 20 June 2010] [22:53:14] <Jad>  thnx
| [Monday 21 June 2010] [00:46:35] <Jad>  got it working
| [Monday 21 June 2010] [04:51:10] <mikko>    Jad: i got old windows builds somewhere
| [Monday 21 June 2010] [04:51:20] <mikko>    would need to update at some point
| [Monday 21 June 2010] [05:24:06] <mikko>    hmm
| [Monday 21 June 2010] [05:24:11] <mikko>    windows builds fail atm
| [Monday 21 June 2010] [05:24:14] <mikko>    with github trunk
| [Monday 21 June 2010] [05:32:43] <sustrik>  mikko: let me try
| [Monday 21 June 2010] [05:33:15] <sustrik>  mikko: you meant zeromq2 of php bindign?
| [Monday 21 June 2010] [05:34:22] <mikko>    sustrik: zeromq2
| [Monday 21 June 2010] [05:34:35] <sustrik>  ok
| [Monday 21 June 2010] [05:34:36] <mikko>    visual studio templates refer to app_threads.cpp
| [Monday 21 June 2010] [05:34:52] <mikko>    and there is a missing return in zmq.cpp
| [Monday 21 June 2010] [05:34:56] <mikko>    let me get the line
| [Monday 21 June 2010] [05:35:04] <sustrik>  wait a se
| [Monday 21 June 2010] [05:35:05] <sustrik>  sec
| [Monday 21 June 2010] [05:35:16] <mikko>    642
| [Monday 21 June 2010] [05:35:18] <sustrik>  where did you get your source code from?
| [Monday 21 June 2010] [05:35:22] <mikko>    github 
| [Monday 21 June 2010] [05:35:25] <sustrik>  sustrik/zeromq2
| [Monday 21 June 2010] [05:35:26] <sustrik>  ?
| [Monday 21 June 2010] [05:35:27] <mikko>    yep
| [Monday 21 June 2010] [05:35:37] <mikko>    just did svn update
| [Monday 21 June 2010] [05:35:53] <sustrik>  last week the official version ws renamed to zeromq/zeromq2
| [Monday 21 June 2010] [05:35:59] <mikko>    ok
| [Monday 21 June 2010] [05:36:07] <mikko>    my build scripts just do svn up on everything
| [Monday 21 June 2010] [05:36:08] <sustrik>  sustrik/zeromq2 is my private sandbox now :)
| [Monday 21 June 2010] [05:36:11] <mikko>    and then build
| [Monday 21 June 2010] [05:36:26] <sustrik>  sorry for confusion
| [Monday 21 June 2010] [05:37:04] <mikko>    it's nice that i can use tortoisesvn to communicate with github on my win build machine
| [Monday 21 June 2010] [05:55:14] <sustrik>  mikko: btw, speaking of windows, do you have 2 win boxes by chance?
| [Monday 21 June 2010] [05:57:35] <mikko>    sustrik: i use VMs
| [Monday 21 June 2010] [05:57:46] <sustrik>  ah, ok then
| [Monday 21 June 2010] [05:57:48] <mikko>    so in theory i can have two windows boxes
| [Monday 21 June 2010] [05:57:51] <mikko>    :)
| [Monday 21 June 2010] [05:58:11] <sustrik>  i was interested in whether anyone can reproduce the opedds's latency test
| [Monday 21 June 2010] [05:58:18] <sustrik>  they are claming 0mq latency of 170us
| [Monday 21 June 2010] [05:58:23] <sustrik>  between 2 win boxes
| [Monday 21 June 2010] [05:58:28] <mikko>    i dont think vm is that usable
| [Monday 21 June 2010] [05:58:35] <mikko>    as there is going to be latency 
| [Monday 21 June 2010] [05:58:46] <sustrik>  nope, it would have impact on the test
| [Monday 21 June 2010] [05:59:07] <sustrik>  never mind, i'll ask on the mailing list
| [Monday 21 June 2010] [05:59:08] <mikko>    regarding zeromq support
| [Monday 21 June 2010] [05:59:11] <sustrik>  yes?
| [Monday 21 June 2010] [05:59:14] <mikko>    is it going to be yourself who is supporting it?
| [Monday 21 June 2010] [05:59:32] <sustrik>  there are several people involved
| [Monday 21 June 2010] [05:59:40] <mikko>    ok, good
| [Monday 21 June 2010] [05:59:40] <sustrik>  i am mainly doing development
| [Monday 21 June 2010] [05:59:58] <mikko>    so that if you get hit by a bus there is still someone supporting it
| [Monday 21 June 2010] [06:00:06] <sustrik>  yes, sure :)
| [Monday 21 June 2010] [06:00:20] <mikko>    good, good
| [Monday 21 June 2010] [06:00:36] <sustrik>  i am the visible figure here, others are doing paid work that's not visible
| [Monday 21 June 2010] [07:54:36] <sjampoo>  Is there anything more to the pipeline pattern? Or is basically just a req/rep pattern without the rep part? As the req/rep part also balances over its peers.
| [Monday 21 June 2010] [07:57:15] <sustrik>  sjampoo: it's similar
| [Monday 21 June 2010] [07:57:38] <sustrik>  the crucial difference is that replies are not routed back
| [Monday 21 June 2010] [07:57:45] <sustrik>  instead they are routed forward
| [Monday 21 June 2010] [07:58:14] <sjampoo>  ok!
| [Monday 21 June 2010] [15:19:12] <Jad>  yeah I updated everything to vc9, didn't even realize about this issue on windows boxes
| [Monday 21 June 2010] [15:19:28] <Jad>  works great now
| [Monday 21 June 2010] [19:31:20] Notice -NickServ- This nickname is registered. Please choose a different nickname, or identify via /msg NickServ identify <password>.
| [Monday 21 June 2010] [19:31:20] Notice -NickServ- You are now identified for travlr.
| [Monday 21 June 2010] [22:04:53] <stuarthalloway>   if I run either the latency/throughput tests from Java, but increase the roundtrip count by a factor of 10, I get an exception:
| [Monday 21 June 2010] [22:05:09] <stuarthalloway>   "Context was terminated" at org.zeromq.ZMQ$Socket.recv
| [Monday 21 June 2010] [22:05:28] <stuarthalloway>   running with verbose:gc suggests that this happens immediately after the first garbage collection
| [Monday 21 June 2010] [22:06:16] <stuarthalloway>   ...which suggests a resource management issue, or maybe I have a bad build
| [Monday 21 June 2010] [22:06:42] <stuarthalloway>   I am using 2.0.7 plus the latest jzmq from git
| [Tuesday 22 June 2010] [06:52:36] <travlr>  sustrik: Hi Martin.. are you available?
| [Tuesday 22 June 2010] [06:55:32] <sustrik> hi
| [Tuesday 22 June 2010] [06:55:38] <sustrik> yeah, i'm here
| [Tuesday 22 June 2010] [06:58:40] <travlr>  Hi. I first want to appologize for the the email I (peter alexander) posted to the list last night. I was half asleep when I wrote it and didn't mean to suggest that I could know more about things than you do. I most certainly do not and I think thats the way my email may have come across.
| [Tuesday 22 June 2010] [07:09:07] <sustrik> travlr: you very well may know more
| [Tuesday 22 June 2010] [07:09:16] <sustrik> it's the pipelining
| [Tuesday 22 June 2010] [07:09:26] <sustrik> i haven't been involved with that much
| [Tuesday 22 June 2010] [07:09:50] <sustrik> the existing behaviour is based on few cases we've seen
| [Tuesday 22 June 2010] [07:09:56] <sustrik> no theoretical beckground there
| [Tuesday 22 June 2010] [07:10:55] <travlr>  ok, very well. but I am self taught and no where near your caliber of expertise. enough said.
| [Tuesday 22 June 2010] [07:11:30] <travlr>  would you like to have a doxygen api representation for the zmq sources?
| [Tuesday 22 June 2010] [07:12:48] <sustrik> what would that require?
| [Tuesday 22 June 2010] [07:12:58] <sustrik> adding formatted comments to the source?
| [Tuesday 22 June 2010] [07:13:56] <travlr>  changing the comments from /* .. */ to /** .. */ and // to /// and then deciding on a suitable style sheet.
| [Tuesday 22 June 2010] [07:15:13] <travlr>  i could do a patch set or clone on github for you to decide.
| [Tuesday 22 June 2010] [07:16:16] <sustrik> that would be great
| [Tuesday 22 June 2010] [07:18:49] <travlr>  ok I'll start with that today and while doing so I'll familiarize myself with the sources so I can hopefully help the community to formulate more flexible/powerful load balancing/distribution and possibly resource management aspects of zmq. 
| [Tuesday 22 June 2010] [07:23:19] <sustrik> great
| [Tuesday 22 June 2010] [07:23:22] <sustrik> good luck :)
| [Tuesday 22 June 2010] [07:24:05] <travlr>  k. thanks.
| [Tuesday 22 June 2010] [07:41:36] <sjampoo> I've written an introduction to ZeroMQ for my blog
| [Tuesday 22 June 2010] [07:41:42] <sjampoo> It is currently in draft mode here: http://nichol.as/?p=606&shareadraft=baba606_4c20a0df10298
| [Tuesday 22 June 2010] [07:41:58] <sjampoo> I'd appreciate any feedback, especially if i am telling bullshit ;) 
| [Tuesday 22 June 2010] [07:43:15] <sjampoo> i'll be off for now, but would really like to hear if you think stuff is missing or wrong by email (to nicholas@nichol.as)
| [Tuesday 22 June 2010] [07:46:37] <sustrik> sjampoo: let me see
| [Tuesday 22 June 2010] [07:47:05] <sustrik> the graphic design is awesome!
| [Tuesday 22 June 2010] [07:52:11] <sustrik> sjampoo: what tool do you use for drawing diagrams?
| [Tuesday 22 June 2010] [07:52:15] <sustrik> they are really neat
| [Tuesday 22 June 2010] [07:57:46] <sjampoo> Thanks, its OmniGaffle for OSX, really one of my favorite tools
| [Tuesday 22 June 2010] [07:57:51] <sjampoo> Have to catch a train now!
| [Tuesday 22 June 2010] [07:58:57] <travlr>  they are sweet. anything similar to omnigraffe on linux i wonder.
| [Tuesday 22 June 2010] [08:00:45] <sustrik> doesn't look like :(
| [Tuesday 22 June 2010] [08:02:23] <travlr>  yeah not as sweet from what i have found but here' s a nice site for alternatives anyway. http://alternativeto.net/desktop/omnigraffle/?platform=linux
| [Tuesday 22 June 2010] [08:06:07]    * sustrik is using Dia
| [Tuesday 22 June 2010] [08:06:28] <sustrik> I would switch for OmniGaffe if I had a Mac box
| [Tuesday 22 June 2010] [08:06:48] <sustrik> but looks like I'll stay with Dia for now
| [Tuesday 22 June 2010] [08:07:59] <travlr>  Dia is nice, i haven't used it in quite a while though. Aris Express looks like it might be cool. http://alternativeto.net/desktop/aris-express/about
| [Tuesday 22 June 2010] [08:08:46] <travlr>  but its trial ware :(
| [Tuesday 22 June 2010] [08:09:49] <travlr>  oh my mistake.. its not trial ware.
| [Tuesday 22 June 2010] [08:18:37] <sustrik> maybe worth of trying - but it seems to be tied to a particular design methodology rather than being a generic drawing tool
| [Tuesday 22 June 2010] [08:24:34] <travlr>  yup. i almost jumped on the koffice team a year ago to modernize kivio, but as usual time is always a problem
| [Tuesday 22 June 2010] [08:32:01] <travlr>  sustrik: would you consider including an alternative cmake build system in zmq master if i told you i would be around to help maintain it? 
| [Tuesday 22 June 2010] [08:41:29] <sustrik> travlr: there's already a cmake build system here: git://github.com/PatrickCheng/zeromq2.git
| [Tuesday 22 June 2010] [08:41:53] <sustrik> if you want to help with it try speaking to the guy maintaining it
| [Tuesday 22 June 2010] [08:44:50] <travlr>  yes, i was aware of his fork. not a problem but merely a question. i'm not big on autotools so i thought i'd simply ask you.
| [Tuesday 22 June 2010] [08:46:11] <sustrik> well, the state of affairs is that the autotools build works on all supported platforms
| [Tuesday 22 June 2010] [08:46:25] <sustrik> if cmake build wants to become an alternative
| [Tuesday 22 June 2010] [08:46:40] <sustrik> there's a lot of testing to do on different platforms
| [Tuesday 22 June 2010] [08:47:46] <travlr>  i see. cmake is portable to all platforms though i believe. right?
| [Tuesday 22 June 2010] [08:49:27] <sustrik> i think so, but you have to deal with petty details by hand
| [Tuesday 22 June 2010] [08:50:14] <sustrik> have a look here: http://github.com/zeromq/zeromq2/blob/master/configure.in
| [Tuesday 22 June 2010] [08:50:32] <sustrik> different things done on different platforms...
| [Tuesday 22 June 2010] [08:50:36] <travlr>  yes. no prob. something for me to think about in the future maybe. i'm not yet schooled on all platform intricacies so i'll just use it privately for now.
| [Tuesday 22 June 2010] [11:40:29] <bapt>    Hi alk
| [Tuesday 22 June 2010] [11:41:52] <bapt>    is it possible with using pubsub that only one client (randomly) get the published messages
| [Tuesday 22 June 2010] [11:41:55] <bapt>    ?
| [Tuesday 22 June 2010] [11:42:43] <bapt>    I mean the publisher send a message N clients subscribed to it but I want only one client to really do the treatment
| [Tuesday 22 June 2010] [11:56:43] <cremes>  bapt: so you want all clients to receive the message but only 1 client to actually process the data?
| [Tuesday 22 June 2010] [11:57:45] <bapt>    yes
| [Tuesday 22 June 2010] [11:58:35] <cremes>  i would recommend looking at the butterfly example; it doesn't use pub/sub
| [Tuesday 22 June 2010] [11:58:38] <bapt>    in fact what I want is butterfly (I'm looking at the tutorail right now)
| [Tuesday 22 June 2010] [11:58:42] <bapt>     :)
| [Tuesday 22 June 2010] [11:58:45] <cremes>  it uses downstream/upstream sockets
| [Tuesday 22 June 2010] [11:58:55] <cremes>  oh, then you are on the right track!
| [Tuesday 22 June 2010] [11:59:10] <cremes>  do you have a specific question on that example?
| [Tuesday 22 June 2010] [11:59:22] <bapt>    not currently
| [Tuesday 22 June 2010] [11:59:45] <bapt>    thanks
| [Tuesday 22 June 2010] [12:00:21] <cremes>  ok
| [Tuesday 22 June 2010] [12:11:40] <bapt>    it's incredibly easy and powerfull
| [Tuesday 22 June 2010] [12:12:07] <bapt>    thanks a lot for 0mq, you saved a lot of my coding time :)
| [Tuesday 22 June 2010] [15:23:56] <jldupont>    hi - is there an official apt repository? i.e. apt-get 
| [Tuesday 22 June 2010] [15:25:17] <jldupont>    anyone??
| [Tuesday 22 June 2010] [15:28:44] <mivert>  jldupont: 2.0.6 is in sid and maverick http://packages.debian.org/source/sid/zeromq https://launchpad.net/ubuntu/maverick/+source/zeromq iMatix does not produce debs though
| [Tuesday 22 June 2010] [15:29:09] <jldupont>    mivert: thanks.
| [Tuesday 22 June 2010] [15:34:10] <sustrik> jldupont: there are deb packaging scripts in debian subdirectory, so in theory you can build the package yourself
| [Tuesday 22 June 2010] [15:34:47] <jldupont>    sustrik: thanks.  Is there a problem if I package and publish on Launchpad?
| [Tuesday 22 June 2010] [15:35:01] <sustrik> no, no problem at all
| [Tuesday 22 June 2010] [15:35:46] <jldupont>    just one doubt:  can the Python bindings do non-blocking?
| [Tuesday 22 June 2010] [15:36:44] <sustrik> you mean async, right?
| [Tuesday 22 June 2010] [15:37:03] <sustrik> the messages being sent on the background
| [Tuesday 22 June 2010] [15:37:12] <jldupont>    I guess.  I want to "recv" with timeout.
| [Tuesday 22 June 2010] [15:37:35] <sustrik> ah, there's no timeout in recv
| [Tuesday 22 June 2010] [15:37:35] <jldupont>    i.e. no blocking in receive loop
| [Tuesday 22 June 2010] [15:37:39] <sustrik> so you have to poll
| [Tuesday 22 June 2010] [15:37:45] <sustrik> (that one has timeout)
| [Tuesday 22 June 2010] [15:37:49] <sustrik> and then recv
| [Tuesday 22 June 2010] [15:37:58] <sustrik> either blocking or non-blocking
| [Tuesday 22 June 2010] [15:38:12] <sustrik> all these features should be available in pyzmq
| [Tuesday 22 June 2010] [15:38:19] <jldupont>    great.
| [Tuesday 22 June 2010] [15:38:56] <jldupont>    so, if I want a "message fabric", I have to build one myself i.e. there isn't a "broker/switch" in the system as in AMQP. Right?
| [Tuesday 22 June 2010] [15:39:51] <sustrik> there are so called "devices"
| [Tuesday 22 June 2010] [15:40:04] <sustrik> they are like micro-brokers
| [Tuesday 22 June 2010] [15:40:22] <sustrik> say an executable that is in fact a queue
| [Tuesday 22 June 2010] [15:40:27] <sustrik> single one
| [Tuesday 22 June 2010] [15:40:34] <sustrik> (zmq_queue)
| [Tuesday 22 June 2010] [15:40:54] <sustrik> but you can build the fabric by hand if you wish so
| [Tuesday 22 June 2010] [15:41:15] <jldupont>    hmmm... http://api.zeromq.org/zmq_forwarder.html ... sort of empty...
| [Tuesday 22 June 2010] [15:42:02] <sustrik> have a look here http://github.com/zeromq/zeromq-chat/blob/master/README
| [Tuesday 22 June 2010] [15:43:16] <jldupont>    ok thanks. I'll check it out later. Ciao.
| [Tuesday 22 June 2010] [15:43:30] <sustrik> cyl
| [Tuesday 22 June 2010] [15:49:38] <soren>   I'm wondering about a few things wrt to pub/sub using multicast.
| [Tuesday 22 June 2010] [15:50:04] <soren>   I haven't completely wrapped my head around multicast yet, so please bear with me.
| [Tuesday 22 June 2010] [15:50:08] <soren>   :)
| [Tuesday 22 June 2010] [15:51:15] <soren>   Ok, so say I have a bunch of publishers (let's say 100-ish) and a /lot/ of subscribers (let's say 100000-ish).
| [Tuesday 22 June 2010] [15:51:44] <soren>   They all "connect" (is that even the correct term for multicast) to some multicast IP and port.
| [Tuesday 22 June 2010] [15:51:59] <soren>   The publishers have no idea how many subscribers there are, right?
| [Tuesday 22 June 2010] [15:52:16] <soren>   The distribution is handled by... what? The networking infrastructure?
| [Tuesday 22 June 2010] [15:52:31] <soren>   Like routers/switches or whatnot, I mean?
| [Tuesday 22 June 2010] [15:54:24] <soren>   Furthermore, if the subscribers only set a message filter using ZMQ_SUBSRIBE, they still receive all the messages, they're just filtered by zmq and never reach my application, correct?
| [Tuesday 22 June 2010] [15:57:06] <soren>   sustrik: Can I pick your brain on this ^^ for a few minutes? :)
| [Tuesday 22 June 2010] [15:58:35] <sustrik> the right term is "to join a multicast group"
| [Tuesday 22 June 2010] [15:58:56] <sustrik> publishers have no idea of subscribers and vice versa
| [Tuesday 22 June 2010] [15:59:13] <sustrik> data are distributed by your network switch
| [Tuesday 22 June 2010] [15:59:40] <sustrik> in theory multicast traffic can pass via router to another subnet but don't try that at home
| [Tuesday 22 June 2010] [15:59:47] <soren>   Right.
| [Tuesday 22 June 2010] [15:59:55] <soren>   Ok, so it requires a reasonably capable switch.
| [Tuesday 22 June 2010] [16:00:10] <sustrik> look for switches with "IGMP snooping"
| [Tuesday 22 June 2010] [16:00:11] <soren>   I mean... a $20 gigabit switch probably won't give me much multicast love.
| [Tuesday 22 June 2010] [16:00:29] <sustrik> have a look at the specs
| [Tuesday 22 June 2010] [16:00:50] <soren>   Sure. Ok.
| [Tuesday 22 June 2010] [16:01:12] <sustrik> for high-perf scenarios you should always keep in mind that the actual throughput is limited by switches backplane throughput
| [Tuesday 22 June 2010] [16:01:22] <soren>   Sure.
| [Tuesday 22 June 2010] [16:01:33] <sustrik> ~100Gb/sec for real switches
| [Tuesday 22 June 2010] [16:01:43] <sustrik> (not toy switches)
| [Tuesday 22 June 2010] [16:01:53] <soren>   :)
| [Tuesday 22 June 2010] [16:02:41] <soren>   I assume a multicast group is defined by the IP alone?
| [Tuesday 22 June 2010] [16:03:03] <sustrik> yes
| [Tuesday 22 June 2010] [16:03:09] <soren>   Ok.
| [Tuesday 22 June 2010] [16:03:15] <sustrik> it's a range of IP addresses you can choose from
| [Tuesday 22 June 2010] [16:03:45] <soren>   Sure, sure, I'm just thinkgin..
| [Tuesday 22 June 2010] [16:04:43] <soren>   my connection string also includes a port number, but if the multicast group is defined by IP (and not the port), I want to make sure not to just use one IP with multiple ports.
| [Tuesday 22 June 2010] [16:05:10] <soren>   ...Since I might as well let the switch help me filter messages.
| [Tuesday 22 June 2010] [16:06:29] <soren>   Am I making sense? :)
| [Tuesday 22 June 2010] [16:09:49] <soren>   brb
| 
| *** Logfile started
| *** on Tue Jun 22 17:14:55 2010
| 
| [Tuesday 22 June 2010] [18:50:51] <jldupont>    is there more information on how to configure the "zmq_forwarder" application?
| [Tuesday 22 June 2010] [18:58:27] <jldupont>    or there isn't much to configure else than what's up on http://www.zeromq.org/docs:cookbook#toc8 ?  I.e. can the forwarder discriminate against the "message type" and forward only to subscribers interested by a given "message type"?
| 
| *** Logfile started
| *** on Wed Jun 23 01:57:00 2010
| 
| [Wednesday 23 June 2010] [08:27:29] <Umesh> is the man page of zmq_outdated ...
| [Wednesday 23 June 2010] [08:27:50] <Umesh> is the man page of zmq_tcp (7) outdated 
| [Wednesday 23 June 2010] [08:28:28] <Umesh> because on tcp socket i am not geeting the messages compatible with the messages mentioned on this page ...
| [Wednesday 23 June 2010] [08:31:32] <sustrik>   Umesh: what are you getting exactly?
| [Wednesday 23 June 2010] [08:32:34] <Umesh> i first get 2 bytes 1 1 
| [Wednesday 23 June 2010] [08:32:55] <Umesh> sorry ... forget first part now typed ...
| [Wednesday 23 June 2010] [08:33:10] <sustrik>   that's an empty message
| [Wednesday 23 June 2010] [08:33:24] <sustrik>   you are right, it's not documented
| [Wednesday 23 June 2010] [08:33:29] <Umesh> i get 2 reads ...
| [Wednesday 23 June 2010] [08:33:46] <sustrik>   but peers use it to identify themselves when a connection is established
| [Wednesday 23 June 2010] [08:33:47] <Umesh> 1st read 1 0 ... means empty message ...
| [Wednesday 23 June 2010] [08:34:16] <sustrik>   so when connection is established
| [Wednesday 23 June 2010] [08:34:24] <sustrik>   peer A says "i'm A"
| [Wednesday 23 June 2010] [08:34:30] <sustrik>   and peer B says "i'm B"
| [Wednesday 23 June 2010] [08:34:31] <Umesh> and then 2nd read 1 1  + frame described in man zmq_tcp(7)
| [Wednesday 23 June 2010] [08:35:02] <sustrik>   what's your topology?
| [Wednesday 23 June 2010] [08:35:12] <sustrik>   req/rep with queue in the middle?
| [Wednesday 23 June 2010] [08:35:14] <Umesh> req/res socket ...
| [Wednesday 23 June 2010] [08:35:23] <Umesh> nope ... no que in the middle
| [Wednesday 23 June 2010] [08:35:24] <sustrik>   ah, right
| [Wednesday 23 June 2010] [08:35:45] <sustrik>   so the first (empty) message is an identification
| [Wednesday 23 June 2010] [08:35:51] <sustrik>   that's say for all socket types
| [Wednesday 23 June 2010] [08:36:09] <sustrik>   now, req/rep has more complex protocol
| [Wednesday 23 June 2010] [08:36:33] <Umesh> actually i wanted to use the sync client with zmq server ...
| [Wednesday 23 June 2010] [08:36:48] <sustrik>   what it has to do is to attach a way back to the requester to each request
| [Wednesday 23 June 2010] [08:36:49] <Umesh> therefore i am trying to send /recv message mentioned in the format ...
| [Wednesday 23 June 2010] [08:36:56] <Umesh> of man 7 zmq_tcp
| [Wednesday 23 June 2010] [08:37:27] <sustrik>   so that reply can be sent back to the right requester
| [Wednesday 23 June 2010] [08:37:30] <Umesh> using the normal tcp/ip socket apis
| [Wednesday 23 June 2010] [08:37:36] <sustrik>   Umesh: yes
| [Wednesday 23 June 2010] [08:37:42] <sustrik>   the format described is OK
| [Wednesday 23 June 2010] [08:37:53] <sustrik>   however, sockets add one layer on top of it
| [Wednesday 23 June 2010] [08:38:11] <Umesh> ok
| [Wednesday 23 June 2010] [08:38:16] <sustrik>   so some of the messages (message parts) are used by 0MQ infrastrucuture
| [Wednesday 23 June 2010] [08:38:29] <sustrik>   namely: first message on TCP connection is peer's identity
| [Wednesday 23 June 2010] [08:38:39] <sustrik>   then
| [Wednesday 23 June 2010] [08:39:13] <sustrik>   each REQ/REP message carries a stack of identities that identify the way back to the requester
| [Wednesday 23 June 2010] [08:39:28] <sustrik>   so for example
| [Wednesday 23 June 2010] [08:39:37] <sustrik>   requester A says "ABC"
| [Wednesday 23 June 2010] [08:40:05] <sustrik>   what you see on the wire is that message part ABC is preceded by an empty message part ||ABC|
| [Wednesday 23 June 2010] [08:40:29] <sustrik>   the empty message part serves to delimit the actual message from the routing info
| [Wednesday 23 June 2010] [08:41:04] <Umesh> ok
| [Wednesday 23 June 2010] [08:41:07] <sustrik>   when the message is received the identity of the sending peer is attached to it
| [Wednesday 23 June 2010] [08:41:11] <sustrik>   |A||ABC|
| [Wednesday 23 June 2010] [08:41:51] <sustrik>   if it's sent further (as when there's a zmq_queue in the middle)
| [Wednesday 23 June 2010] [08:42:01] <sustrik>   there's another identity added to the request
| [Wednesday 23 June 2010] [08:42:08] <sustrik>   |my_queue|A||ABC|
| [Wednesday 23 June 2010] [08:42:19] <sustrik>   there can be multiple hops
| [Wednesday 23 June 2010] [08:42:28] <Umesh> ok
| [Wednesday 23 June 2010] [08:42:36] <sustrik>   and thus multiple identities in the traceroute stack
| [Wednesday 23 June 2010] [08:42:43] <sustrik>   what REP socket does
| [Wednesday 23 June 2010] [08:42:46] <Umesh> is there not any way to not to have these identities ?
| [Wednesday 23 June 2010] [08:43:00] <Umesh> for normal working with bsd tcp/ip sockets 
| [Wednesday 23 June 2010] [08:43:25] <sustrik>   you would need 0MQ equivalent of DNS then
| [Wednesday 23 June 2010] [08:43:40] <sustrik>   still you would need a single identity in the request
| [Wednesday 23 June 2010] [08:43:51] <sustrik>   so that REP would know where to send the reply
| [Wednesday 23 June 2010] [08:44:09] <Umesh> one identity is fine ... that i can decode easily ...
| [Wednesday 23 June 2010] [08:44:24] <sustrik>   you can easily decode mulitple identities as well
| [Wednesday 23 June 2010] [08:44:33] <Umesh> one way can be never use hops/queue in between 
| [Wednesday 23 June 2010] [08:44:38] <sustrik>   the point is that the stack is terminated by empty message part
| [Wednesday 23 June 2010] [08:45:03] <sustrik>   no need for such drastic measures
| [Wednesday 23 June 2010] [08:45:08] <sustrik>   what you need to do  is:
| [Wednesday 23 June 2010] [08:45:13] <sustrik>   on the REQ side
| [Wednesday 23 June 2010] [08:45:32] <sustrik>   1. when sending message prepend it by empty message part (1 1)
| [Wednesday 23 June 2010] [08:45:48] <sustrik>   2. when receiving the message chop off the empty message part (1 1)
| [Wednesday 23 June 2010] [08:45:53] <sustrik>   on the REP side
| [Wednesday 23 June 2010] [08:46:27] <sustrik>   1. when receiving a message store all the identities in the stack until you encounter empty message part (stack delimiter)
| [Wednesday 23 June 2010] [08:46:45] <sustrik>   2. when sending a reply prepend all the stored identities to the reply
| [Wednesday 23 June 2010] [08:46:48] <sustrik>   that's it
| [Wednesday 23 June 2010] [08:46:55] <Umesh> ok
| [Wednesday 23 June 2010] [08:47:23] <Umesh> does i nned to send 1 0 first message always ?
| [Wednesday 23 June 2010] [08:47:28] <Umesh> need*
| [Wednesday 23 June 2010] [08:48:17] <sustrik>   that's only when you open the connection
| [Wednesday 23 June 2010] [08:48:27] <sustrik>   1. create TCP connection
| [Wednesday 23 June 2010] [08:48:30] <sustrik>   2. send 1 0
| [Wednesday 23 June 2010] [08:48:39] <sustrik>   3. receive one message (peer's identity)
| [Wednesday 23 June 2010] [08:50:02] <Umesh> ok ...
| [Wednesday 23 June 2010] [09:37:15] <Umesh> sustrik: one more doubt ... this multihop support is added in the release 2.0.7 ... right ?
| [Wednesday 23 June 2010] [09:37:27] <sustrik>   yes
| [Wednesday 23 June 2010] [10:01:06] <Umesh> ok
| [Wednesday 23 June 2010] [11:34:49] <jldupont>  FYI: http://nichol.as/zeromq-an-introduction
| [Wednesday 23 June 2010] [11:35:35] <sustrik>   jldupont: yes, it's already linked from zeromq.org (see blogs section)
| [Wednesday 23 June 2010] [11:35:48] <jldupont>  ok
| [Wednesday 23 June 2010] [11:36:26] <jldupont>  so, if I got this right, the first string sent on a pub/sub constitutes the "message type", right?
| [Wednesday 23 June 2010] [11:37:17] <sustrik>   it's a bit different
| [Wednesday 23 June 2010] [11:37:34] <jldupont>  i.e. ?
| [Wednesday 23 June 2010] [11:37:39] <sustrik>   any message beginning with particular sequence of bytes matches the subscription
| [Wednesday 23 June 2010] [11:37:45] <jldupont>  ok
| [Wednesday 23 June 2010] [11:38:31] <jldupont>  btw, I never was able to build the Python documentation on my system... 
| [Wednesday 23 June 2010] [11:38:47] <jldupont>  problem with matplotlib-sphinx-ext
| [Wednesday 23 June 2010] [11:38:55] <jldupont>  linux karmic
| [Wednesday 23 June 2010] [11:39:15] <sustrik>   dunno, i have nothing to do with python binding... try complaining on the mailing list
| [Wednesday 23 June 2010] [11:39:21] <jldupont>  ;-)
| [Wednesday 23 June 2010] [11:40:03] <sustrik>   or there's an issue tracker on pyzmq github project
| [Wednesday 23 June 2010] [11:41:00] <jldupont>  from what I can tell, the "wire" format might be brittle to "out-of-sync" cases... the delineation mechanisms appears weak... but of course, I might not have seen all documentation ;-)
| [Wednesday 23 June 2010] [11:43:25] <jldupont>  anyhow, 0mq is definitely more friendly to work with than rabbitmq.
| [Wednesday 23 June 2010] [11:44:40] <sustrik>   jldupont: can you elaborate on the delineation?
| [Wednesday 23 June 2010] [11:50:16] <jldupont>  I mean there must be "symbols" reserved for the framing and "symbols" valid for the data.
| [Wednesday 23 June 2010] [11:50:46] <jldupont>  I only see "payload length" which can cause problems when it comes to "out-of-sync" conditions i.e. where is the next boundary?
| [Wednesday 23 June 2010] [11:51:12] <sustrik>   it can't go out-of-sync as it's layered on top of TCP
| [Wednesday 23 June 2010] [11:51:47] <sustrik>   i would like to have first two bytes in each TCP packet reserved fro "offset of the first 0mq message in the packet"
| [Wednesday 23 June 2010] [11:51:50] <sustrik>   but
| [Wednesday 23 June 2010] [11:52:30] <sustrik>   1. BSD sockets have no API for sending data delineated with TCP packets
| [Wednesday 23 June 2010] [11:52:59] <sustrik>   2. networking hardware does all kind of black magic with TCP packets (packet coallescing etc.)
| [Wednesday 23 June 2010] [11:53:55] <jldupont>  I just mean that if something goes wrong on the software stack side, recovering the connection might not be possible... only tear-down, bring up will do.
| [Wednesday 23 June 2010] [11:54:06] <jldupont>  but that might be a good compromise.
| [Wednesday 23 June 2010] [11:54:13] <jldupont>  I mean, it's good enough.
| [Wednesday 23 June 2010] [11:54:24] <jldupont>  since that sort of condition is rare-ish.
| [Wednesday 23 June 2010] [11:56:14] <jldupont>  the trouble is detecting this situation....
| [Wednesday 23 June 2010] [11:56:55] <jldupont>  interesting failure mode... can be mitigated with appropriate timeouts, drop/bring up
| [Wednesday 23 June 2010] [12:02:01] <sustrik>   jldupont: reusing the failed connection?
| [Wednesday 23 June 2010] [12:02:11] <sustrik>   that would be pretty dangerous imo
| [Wednesday 23 June 2010] [12:02:27] <jldupont>  no. drop & reconnect
| [Wednesday 23 June 2010] [12:02:34] <sustrik>   ah
| [Wednesday 23 June 2010] [12:02:52] <jldupont>  ( aka tear-down/bring-up )
| [Wednesday 23 June 2010] [12:02:59] <sustrik>   that has no implication on wire protocol imo
| [Wednesday 23 June 2010] [12:03:05] <sustrik>   as you start anew each time
| [Wednesday 23 June 2010] [12:03:17] <sztanpet>  doesnt 0mq automatically reconnect you btw?
| [Wednesday 23 June 2010] [12:03:21] <sustrik>   yes
| [Wednesday 23 June 2010] [12:03:24] <jldupont>  ... but the trouble is mid-flight
| [Wednesday 23 June 2010] [12:03:41] <sztanpet>  what of it
| [Wednesday 23 June 2010] [12:03:53] <sztanpet>  its the same with tcp, i cant quite see your problem
| [Wednesday 23 June 2010] [12:05:11] <jldupont>  like I said, if a problem occurs mid-flight, then the connection can be detected faulty and tear/down/bring-up would occur.
| [Wednesday 23 June 2010] [12:05:35] <jldupont>  if that failure mode is taken care of in 0mq, then let's finish this discussion.
| [Wednesday 23 June 2010] [12:12:46] <sustrik>   yes, it is
| [Wednesday 23 June 2010] [12:12:56] <jldupont>  ok
| [Wednesday 23 June 2010] [14:41:56] <chris2>    hi. i'm trying to use the zmq2 gem for pub/sub
| [Wednesday 23 June 2010] [14:42:10] <chris2>    and i can pub, but nothing appears at sub
| [Wednesday 23 June 2010] [14:43:23] <cremes>    chris2: when you say "gem" i assume you are using ruby; is that correct?
| [Wednesday 23 June 2010] [14:43:30] <chris2>    erm, yes
| [Wednesday 23 June 2010] [14:43:32] <chris2>    right
| [Wednesday 23 June 2010] [14:43:37] <chris2>    i can paste my code too
| [Wednesday 23 June 2010] [14:43:47] <cremes>    please do (use pastie or a gist)
| [Wednesday 23 June 2010] [14:44:40] <chris2>    http://pastie.org/1016242
| [Wednesday 23 June 2010] [14:45:16] <chris2>    i ported that from the py at http://nichol.as/zeromq-an-introduction
| [Wednesday 23 June 2010] [14:45:50] <cremes>    ok; is the pub loop printing out each message that it sends?
| [Wednesday 23 June 2010] [14:45:58] <chris2>    the pub sends nicely
| [Wednesday 23 June 2010] [14:46:06] <chris2>    the sub doesnt show anything
| [Wednesday 23 June 2010] [14:46:20] <cremes>    let me try and run it myself... give me a couple...
| [Wednesday 23 June 2010] [14:46:58] <chris2>    i ran strace on the sub, and it shows
| [Wednesday 23 June 2010] [14:46:59] <chris2>    recvfrom(8, 0x7fff8c0810f0, 48, 64, 0, 0) = -1 EAGAIN (Resource temporarily unavailable)
| [Wednesday 23 June 2010] [14:47:08] <chris2>    roughly pulsed like the pub
| [Wednesday 23 June 2010] [14:47:16] <chris2>    so i guess there is some kind of transmission
| [Wednesday 23 June 2010] [14:51:28] <chris2>    hah, fixed it
| [Wednesday 23 June 2010] [14:51:31] <cremes>    chris2: i'm having some trouble installing the zmq2 gem; it installed fine but now complains about a missing file (zmq_native)
| [Wednesday 23 June 2010] [14:51:34] <cremes>    what was it?
| [Wednesday 23 June 2010] [14:51:39] <chris2>    s.setsockopt(ZMQ::SUBSCRIBE, "")
| [Wednesday 23 June 2010] [14:51:44] <chris2>    i need to subscribe to everything
| [Wednesday 23 June 2010] [14:51:45] <cremes>    ah!
| [Wednesday 23 June 2010] [14:51:53] <chris2>    the py api seems to do that by default
| [Wednesday 23 June 2010] [14:52:00] <cremes>    good catch
| [Wednesday 23 June 2010] [14:52:10] <chris2>    py api seems a bit nicer in general
| [Wednesday 23 June 2010] [14:52:17] <chris2>    but im not sure if zmq2 is even official
| [Wednesday 23 June 2010] [14:52:31] <cremes>    what does official mean anyway? use what works best.
| [Wednesday 23 June 2010] [14:53:01] <chris2>    sure
| [Wednesday 23 June 2010] [14:53:10] <chris2>    but then the api should be similar i think
| [Wednesday 23 June 2010] [14:53:25] <chris2>    ok, multiple sub works too
| [Wednesday 23 June 2010] [14:53:29] <cremes>    the zeromq guys don't anything about ruby (or python or php or lua) so they are hoping community folks take over the bindings
| [Wednesday 23 June 2010] [14:54:10] <chris2>    http://www.zeromq.org/bindings:ruby ?
| [Wednesday 23 June 2010] [14:54:42] <cremes>    yes; also http://www.zeromq.org/bindings:ruby-ffi for jruby, rubinius and others
| [Wednesday 23 June 2010] [14:54:48] <cremes>    (i wrote those)
| [Wednesday 23 June 2010] [14:55:00] <cremes>    er, i wrote the ffi bindings for ruby
| [Wednesday 23 June 2010] [14:55:19] <chris2>    ok
| [Wednesday 23 June 2010] [14:58:19] <chris2>    also, is there a thing i can place inbetween to add persistence of the messages?
| [Wednesday 23 June 2010] [15:00:01] <cremes>    chris2: there isn't anything in the 0mq library that provides persistence; you would need to create that yourself
| [Wednesday 23 June 2010] [15:00:19] <chris2>    just figured someone already wrote a daemon or something to do that in general
| [Wednesday 23 June 2010] [15:00:34] <cremes>    not yet; you could be the first
| [Wednesday 23 June 2010] [15:00:51] <chris2>    its probably not entirely trivial then :)
| [Wednesday 23 June 2010] [15:01:31] <cremes>    nope, not trivial; messages can be in the 0mq queue, a system buffer, a driver buffer, on the wire, or in those same buffers on the receiving end
| [Wednesday 23 June 2010] [15:01:42] <chris2>    yeah
| [Wednesday 23 June 2010] [15:01:57] <cremes>    you would need an explicit ack that a message was persisted
| [Wednesday 23 June 2010] [15:02:08] <cremes>    it's a thorny issue
| [Wednesday 23 June 2010] [15:02:15] <chris2>    true that
| [Wednesday 23 June 2010] [15:26:10] <CIA-17>    rbzmq: 03Brian Buchanan 07master * r5be8033 10/ rbzmq.c : Make the flags argument to ZMQ::Socket.send() and ZMQ::Socket.recv() optional. Resolves issue #1. - http://bit.ly/aeY6wZ
| [Wednesday 23 June 2010] [15:26:21] <chris2>    awesome quick :D
| [Wednesday 23 June 2010] [15:28:09] <chris2>    is pub/sub filtering really implemented on the pub side?
| [Wednesday 23 June 2010] [15:28:16] <chris2>    or does sub get everything and then filters
| [Wednesday 23 June 2010] [15:29:04] <CIA-17>    rbzmq: 03Brian Buchanan 07master * r7043d45 10/ rbzmq.c : Update method signatures for socket.send and socket.recv in the documentation. - http://bit.ly/aG9JWs
| [Wednesday 23 June 2010] [15:33:07] <sustrik>   chris2: unfortunately, yes
| [Wednesday 23 June 2010] [15:33:16] <chris2>    kinda lame?
| [Wednesday 23 June 2010] [15:33:25] <sustrik>   passing the subscriptions upstream is on the roadmap for a long time
| [Wednesday 23 June 2010] [15:33:50] <sustrik>   but it's not trivial and so far there was noone to sponsor the development
| [Wednesday 23 June 2010] [15:34:07] <chris2>    okay
| [Wednesday 23 June 2010] [15:34:13] <chris2>    zmq is still cool
| [Wednesday 23 June 2010] [15:34:24] <sustrik>   :)
| [Wednesday 23 June 2010] [15:34:24] <chris2>    i guess i have some use for it
| [Wednesday 23 June 2010] [16:12:29] <mml>   is there a way to buffer unconsumed messages in a pub/sub config?
| [Wednesday 23 June 2010] [16:12:41] <mml>   i.e. all consumers are down, but i'm using a forwarder process..
| [Wednesday 23 June 2010] [16:12:56] <mml>   i want the forwarder to que msgs until the consumers return
| [Wednesday 23 June 2010] [16:13:07] <mml>   like ::SWAP et. al.
| [Wednesday 23 June 2010] [16:13:29] <mml>   or is that to 'brokery'
| [Wednesday 23 June 2010] [16:13:32] <mml>   s/to/too
| [Wednesday 23 June 2010] [16:17:41] <mml>   and, is the zmq forwarder config syntax documented somewhere?
| [Wednesday 23 June 2010] [16:20:07] <cremes>    mml: the forwarder "device" included with 0mq doesn't do any buffering
| [Wednesday 23 June 2010] [16:20:30] <cremes>    the forwarder also has no idea if anyone is connected to it; it would need to "heartbeat" or otherwise communicate with downstream clients
| [Wednesday 23 June 2010] [16:20:40] <cremes>    all of this is possible, but you would need to write the logic yourself
| [Wednesday 23 June 2010] [16:21:05] <cremes>    an no, the configuration for forwarder isn't documented anywhere; the code is short enough to figure it out though
| [Wednesday 23 June 2010] [16:21:57] <mml>   cremes: tx
| [Wednesday 23 June 2010] [16:22:09] <cremes>    you're welcome
| [Wednesday 23 June 2010] [16:31:37]      * mml is sad that zmq is inappropriate for what he needs
| [Wednesday 23 June 2010] [16:31:51] <mml>   the ruby bindings worked great fwiw
| [Wednesday 23 June 2010] [16:32:28] <bj_990>    are you guys as slick as ice http://www.zeroc.com/ ? 
| [Wednesday 23 June 2010] [16:53:23] <mivert>    bj_990: yes? pretty different though.  Ice does RPC and serialization, MQ does messaging.
| [Wednesday 23 June 2010] [16:54:18] <bj_990>    i just saw that
| [Wednesday 23 June 2010] [16:54:18] <bj_990>    :D
| [Wednesday 23 June 2010] [16:54:37] <bj_990>    thanks mivert 
| [Wednesday 23 June 2010] [16:54:44] <mivert>    np
| [Wednesday 23 June 2010] [17:22:33] <bj_990>    this looks great
| [Wednesday 23 June 2010] [17:30:39] <bj_990>    be back in the near future... 
| [Wednesday 23 June 2010] [23:37:03] <alisdair>  is zeromq a protocol at all, or is it mostly an alternate interface to sockets?
| [Thursday 24 June 2010] [02:07:42] <travlr> alisdair: zmq transports a "blob" of data so the descriptor of the blob is provided by the app programmer. 
| [Thursday 24 June 2010] [02:08:33] <alisdair>   travlr: i get that, but does it wrap that at all? can i use zeromq at only one end of a connection, or does it need to be used at both?
| [Thursday 24 June 2010] [02:09:28] <travlr> alisdair: "only one end" ... do you mean using standard-sockets in the system... if so see zmq_poll() doc
| [Thursday 24 June 2010] [02:09:37] <alisdair>   well
| [Thursday 24 June 2010] [02:09:42] <alisdair>   if i write a client using zeromq
| [Thursday 24 June 2010] [02:09:48] <alisdair>   does the server need to be aware of that?
| [Thursday 24 June 2010] [02:10:21] <travlr> is the server using a standard-socket?
| [Thursday 24 June 2010] [02:10:36] <travlr> bsd socket?
| [Thursday 24 June 2010] [02:11:32] <travlr> look at the zmq_poll() doc I think that will help answer your question.
| [Thursday 24 June 2010] [02:13:08] <alisdair>   standard sockets
| [Thursday 24 June 2010] [02:13:49] <travlr> also, see the mato's zmq-camera example of integrating other system aspects: http://github.com/mato/zeromq-examples
| [Thursday 24 June 2010] [02:14:21] <alisdair>   i just want to know, does zeromq add any wrapping to a packet? if i send a packet from a client written using zeromq, does the receiving system need to know anything about it to process it? is it just a regular udp/tcp packet?
| [Thursday 24 June 2010] [02:16:26] <travlr> zmq_recv() just recieves the "blob". no un-wrapping is necessary. it does wrap the blob with possible addressing and delineation protocol aspects. 
| [Thursday 24 June 2010] [02:17:06] <travlr> see: zmq_tcp(7), zmq_pgm(7), zmq_ipc(7), and zmq_inproc(7) for details.
| [Thursday 24 June 2010] [02:17:48] <travlr> http://api.zeromq.org/zmq.html
| [Thursday 24 June 2010] [02:33:13] <Umesh>  http://www.zeromq.org/whitepapers:design-v06#toc0
| [Thursday 24 June 2010] [02:33:21] <Umesh>  is this white paper outdated ?
| [Thursday 24 June 2010] [02:36:09] <travlr> Umesh: In a sense yes, but not totally. zmq2 is a departure from zmq1 in that is entirely brokerless and there is no message protocol. I don't know yet myself where all the similarities and differences lie.
| [Thursday 24 June 2010] [02:39:16] <sustrik>    Umesh: in general, yes. what exactly are you interested in?
| [Thursday 24 June 2010] [02:41:12] <Umesh>  I am intrested in load balancing for client server 
| [Thursday 24 June 2010] [02:41:56] <Umesh>  there it was how we can do load balancing in the zmq is described in that white paper 
| [Thursday 24 June 2010] [02:42:13] <Umesh>  while reading that paper i felt it is outdated ...
| [Thursday 24 June 2010] [02:42:38] <Umesh>  so we can't do load balancing inbuilt in the zmq ... right ?
| [Thursday 24 June 2010] [02:42:50] <Umesh>  for REQ/REP socket
| [Thursday 24 June 2010] [02:45:11] <sustrik>    yes, there's load balancing in-built
| [Thursday 24 June 2010] [02:45:22] <sustrik>    when there are several peers to REQ socket
| [Thursday 24 June 2010] [02:45:31] <sustrik>    the requests are load-balanced among them
| [Thursday 24 June 2010] [02:45:46] <Umesh>  ok
| [Thursday 24 June 2010] [02:46:03] <Umesh>  then how we can choose the endpoint for that peer ...
| [Thursday 24 June 2010] [02:46:13] <sustrik>    ?
| [Thursday 24 June 2010] [02:46:15] <Umesh>  I haven't seen any such apis 
| [Thursday 24 June 2010] [02:46:32] <sustrik>    there's no need for specific apis
| [Thursday 24 June 2010] [02:46:37] <Umesh>  means say i have a name server on m1, m2 and m3 ...
| [Thursday 24 June 2010] [02:47:07] <sustrik>    s =socket (REQ);
| [Thursday 24 June 2010] [02:47:13] <sustrik>    s.connect (m1);
| [Thursday 24 June 2010] [02:47:15] <sustrik>    s.connect (m2);
| [Thursday 24 June 2010] [02:47:17] <sustrik>    s.connect (m3);
| [Thursday 24 June 2010] [02:47:24] <sustrik>    that's what you meant?
| [Thursday 24 June 2010] [02:47:58] <Umesh>  then I create a REQ socket and then connect ...
| [Thursday 24 June 2010] [02:48:03] <Umesh>  then send data ...
| [Thursday 24 June 2010] [02:48:10] <sustrik>    yes
| [Thursday 24 June 2010] [02:48:16] <Umesh>  so data will go to machine where i connect ...
| [Thursday 24 June 2010] [02:48:18] <Umesh>  right ...
| [Thursday 24 June 2010] [02:48:30] <sustrik>    or you can bind and let name servers connect to your app
| [Thursday 24 June 2010] [02:48:38] <Umesh>  ok so you mean i should connect to all name server ... right ?
| [Thursday 24 June 2010] [02:48:39] <sustrik>    depends on what you are doing
| [Thursday 24 June 2010] [02:48:45] <sustrik>    right
| [Thursday 24 June 2010] [02:48:53] <Umesh>  to enable laod balancing ...
| [Thursday 24 June 2010] [02:49:36] <Umesh>  is there any way to know all machines on the port using the zmq ... something like getaddribfo
| [Thursday 24 June 2010] [02:50:27] <Umesh>  just a summary of our discussion : To enable load balansing in the zmq ... REQ socket should connect to all REP sockets it know ... right ?
| [Thursday 24 June 2010] [02:50:52] <sustrik>    REQ sockets should have multiple peers
| [Thursday 24 June 2010] [02:51:03] <Umesh>  yup ...
| [Thursday 24 June 2010] [02:51:05] <sustrik>    whether they are connected to are they connect themselves
| [Thursday 24 June 2010] [02:51:33] <sustrik>    as for locating the machines... it's pretty hard when you think of Intetnet
| [Thursday 24 June 2010] [02:51:50] <sustrik>    there may be a machine running somewhere in Ougadougou
| [Thursday 24 June 2010] [02:52:02] <sustrik>    no, no way to locate all the instances
| [Thursday 24 June 2010] [02:52:07] <Umesh>  ok
| [Thursday 24 June 2010] [02:52:14] <sustrik>    what you may want is a shared queue
| [Thursday 24 June 2010] [02:52:27] <sustrik>    i.e. all clients connect to the shared queue
| [Thursday 24 June 2010] [02:52:38] <Umesh>  but for lan ... I can still use the getaddrinfo call ... to find all the machines to connect to ...
| [Thursday 24 June 2010] [02:52:38] <sustrik>    all servers connect to the shared queue
| [Thursday 24 June 2010] [02:53:08] <sustrik>    the share queue load balances the requests among the servers
| [Thursday 24 June 2010] [02:53:11] <Umesh>  means use a queue device in between ... create one hop ..
| [Thursday 24 June 2010] [02:53:15] <sustrik>    yes
| [Thursday 24 June 2010] [02:53:40] <sustrik>    ad getaddrinfo: i am afraid it doesn't work that way
| [Thursday 24 June 2010] [02:53:50]   * sustrik is not a DNS expert though
| [Thursday 24 June 2010] [02:53:58] <Umesh>  but for lan ... I can still use the getaddrinfo call ... to find all the machines to connect to ...
| [Thursday 24 June 2010] [02:54:38] <sustrik>    how would you do that?
| [Thursday 24 June 2010] [02:54:42] <Umesh>  i will just not specify node in that call ... only specify port ... get all the machines listening on that port ...
| [Thursday 24 June 2010] [02:55:05] <sustrik>    i doubt getaddrinfo works that way
| [Thursday 24 June 2010] [02:55:37] <Umesh>  getaddrinfo(NULL, PORT, &hints, &servinfo))
| [Thursday 24 June 2010] [02:55:47] <sustrik>    does it work?
| [Thursday 24 June 2010] [02:55:55] <Umesh>  here PORT will be the port of the name server ...
| [Thursday 24 June 2010] [02:56:03] <Umesh>  it works for normal tcp ip ...
| [Thursday 24 June 2010] [02:56:09] <sustrik>    wow
| [Thursday 24 June 2010] [02:56:24] <Umesh>  so i think it will work for zmq ...
| [Thursday 24 June 2010] [02:56:33] <Umesh>  isn't it ...
| [Thursday 24 June 2010] [02:56:35] <Umesh>  ?
| [Thursday 24 June 2010] [02:56:52] <sustrik>    if it works then it would surely work
| [Thursday 24 June 2010] [02:56:56] <sustrik>    even for 0mq
| [Thursday 24 June 2010] [02:56:58]   * sustrik wonders how that works under the covers
| [Thursday 24 June 2010] [02:57:00] <Umesh>  ok
| [Thursday 24 June 2010] [02:57:19] <Umesh>  i will give the try ... 
| [Thursday 24 June 2010] [02:58:43] <Umesh>  one more doubt ... which load balancing we does ?
| [Thursday 24 June 2010] [02:58:54] <Umesh>  means round robin ... etc ?
| [Thursday 24 June 2010] [03:15:05] <sustrik>    round robin
| [Thursday 24 June 2010] [03:16:39] <Umesh>  ok
| [Thursday 24 June 2010] [03:27:17] <Umesh>  hi sustrik ... 
| [Thursday 24 June 2010] [03:27:29] <Umesh>  i think i was wrong for getaddrinfo ...
| [Thursday 24 June 2010] [03:27:55] <Umesh>  it will not work for normal tcp/ip as well
| [Thursday 24 June 2010] [03:39:35] <sustrik>    :)
| [Thursday 24 June 2010] [03:55:27] <Efhache>    Hi everybody
| [Thursday 24 June 2010] [03:56:15] <Efhache>    I come back to you because I need some help...  I'm learning how to use zmq... In this goal I test some example application.
| [Thursday 24 June 2010] [03:56:35] <Efhache>    Right now I test the tcp client/server application example
| [Thursday 24 June 2010] [03:57:50] <Efhache>    but I've a little problem... when I try to send my message I've an "unknown error" (returned by strerror) and the client of course segfault when I try to receive
| [Thursday 24 June 2010] [03:58:20] <Efhache>    The error is "ERREUR -1 send: Unknown error 156384763 "  
| [Thursday 24 June 2010] [03:58:27] <Efhache>    Could you help me ???
| [Thursday 24 June 2010] [03:58:58] <Efhache>    here is the line code used to send my message : rc = zmq_send (s, &query, 0);
| [Thursday 24 June 2010] [04:03:00] <travlr> If you post the code piece somewhere, I'll try to help.
| [Thursday 24 June 2010] [04:08:26] <Efhache>    Can I post it here?
| [Thursday 24 June 2010] [04:08:32] <Efhache>    (piece by piece) ?
| [Thursday 24 June 2010] [04:09:47] <travlr> use dpaste or gist or some similar web service so I may be able to see what might be incorrect
| [Thursday 24 June 2010] [04:12:23] <travlr> http://dpaste.com/ or http://gist.github.com/ or some other
| [Thursday 24 June 2010] [04:12:47] <Efhache>    http://dpaste.com/hold/210910/
| [Thursday 24 June 2010] [04:14:20] <sustrik>    Efhache: 0mq defines few additional errors
| [Thursday 24 June 2010] [04:14:31] <sustrik>    use zmq_strerror instead of strerror to decode them
| [Thursday 24 June 2010] [04:14:38] <Efhache>    ok
| [Thursday 24 June 2010] [04:17:39] <Efhache>    ERREUR -1 send: Operation cannot be accomplished in current state
| [Thursday 24 June 2010] [04:17:47] <Efhache>    no more information for me...
| [Thursday 24 June 2010] [04:17:49] <Efhache>    :-/
| [Thursday 24 June 2010] [04:21:06] <travlr> has the server been executed before the client?
| [Thursday 24 June 2010] [04:22:20] <Efhache>    yes of course
| [Thursday 24 June 2010] [04:22:35] <Efhache>    and the server is running 
| [Thursday 24 June 2010] [04:22:43] <sustrik>    REQ/REP sockets reuquire alternate sequence of sends & recvs
| [Thursday 24 June 2010] [04:22:58] <sustrik>    so with REQ send a request, the receveive a reply
| [Thursday 24 June 2010] [04:23:10] <sustrik>    with REP receiver a request, then send the reply
| [Thursday 24 June 2010] [04:23:23] <sustrik>    if you fail to do so you'll get the above error
| [Thursday 24 June 2010] [04:24:26] <travlr> yeah i see it now too. you need to use ZMQ_REQ in your client.
| [Thursday 24 June 2010] [04:24:36] <Efhache>    ok
| [Thursday 24 June 2010] [04:26:16] <Efhache>    I replace REP by REQ... now I've not error on the send() function. But a segfault on the recv.  I must rechange the context before received???
| [Thursday 24 June 2010] [04:26:40] <travlr> no but did you use ZMQ_REP in the server?
| [Thursday 24 June 2010] [04:27:53] <Efhache>    Yes
| [Thursday 24 June 2010] [04:28:15] <Efhache>    This code comes from the cookbook examples
| [Thursday 24 June 2010] [04:28:54] <travlr> yeah, it should work out of the box. do you want to post the server code to dpaste
| [Thursday 24 June 2010] [04:29:04] <Efhache>    ok
| [Thursday 24 June 2010] [04:29:38] <Efhache>    http://dpaste.com/hold/210915/
| [Thursday 24 June 2010] [04:30:40] <Efhache>    May be I'll study the code from the latency example
| [Thursday 24 June 2010] [04:32:15] <travlr> i don't know because it looks ok, but i may be over looking something
| [Thursday 24 June 2010] [04:33:19] <Efhache>    It's ok now
| [Thursday 24 June 2010] [04:33:27] <travlr> what was it?
| [Thursday 24 June 2010] [04:33:38] <Efhache>    I've foget the zmq_msg_init of my resultset variable
| [Thursday 24 June 2010] [04:34:13] <travlr> yes i see.. ok cool
| [Thursday 24 June 2010] [04:34:56] <Efhache>    thank's a lot for your help ;-)
| [Thursday 24 June 2010] [04:35:07] <travlr> sure
| [Thursday 24 June 2010] [04:35:26] <Efhache>    Just to be sure... with this example, I've just a P2P  connection between processes ?
| [Thursday 24 June 2010] [04:35:56] <Efhache>    If I'd like to make a communication between a process and two (or more) others
| [Thursday 24 June 2010] [04:36:07] <Efhache>    I need to create each time a endpoint ?
| [Thursday 24 June 2010] [04:36:15] <travlr> REQ/REP you can use multiple peers.
| [Thursday 24 June 2010] [04:37:08] <Efhache>    ok
| [Thursday 24 June 2010] [04:37:09] <travlr> just use connect to the socket multiple times for each client.. etc.
| [Thursday 24 June 2010] [04:37:45] <travlr> then it will load-balance in a round robin fashion.. i don't know if that's what you want
| [Thursday 24 June 2010] [04:38:10] <travlr> you may want PUB/SUB maybe..
| [Thursday 24 June 2010] [04:38:31] <travlr> or other
| [Thursday 24 June 2010] [04:43:17] <Efhache>    I've make a rapid test with two client and it seems that it works... but I'd be sure... how can I make in the server to have a specific message for each client
| [Thursday 24 June 2010] [04:43:49] <Efhache>    I can find in the server an id of the sender ?
| [Thursday 24 June 2010] [04:44:35] <travlr> i don't think so. try returning a specific message for each client.
| [Thursday 24 June 2010] [04:44:50] <travlr> for testing
| [Thursday 24 June 2010] [04:45:09] <Efhache>    ok
| [Thursday 24 June 2010] [04:48:23] <Efhache>    thank you  for your help
| [Thursday 24 June 2010] [04:48:29] <travlr> k
| [Thursday 24 June 2010] [04:53:33] <Efhache>    no chance... the server do not make automatically a difference between the senders... clients received all replies...
| [Thursday 24 June 2010] [05:00:28] <travlr> Efhache: From the zmq_socket doc: "Each request sent is load-balanced among all services, and each reply received is matched with the last issued request."
| [Thursday 24 June 2010] [05:52:16] <sustrik>    Efhache: what do you want to do?
| [Thursday 24 June 2010] [05:52:37] <sustrik>    if you want to reply to the requester use REQ/REP
| [Thursday 24 June 2010] [05:52:45] <sustrik>    if you want to send to all client use PUB/SUB
| [Thursday 24 June 2010] [07:00:38] <bavluo> While compiling/install the PyZMQ extension I am getting "zmq/_zmq.c: In function init_zmq: EMTHREAD undeclared (first use in this function)". I have cloned the latest ZMQ and PyZMQ for github
| [Thursday 24 June 2010] [08:02:37] <Umesh>  Is there a way to write distributed REP server in zeromq ...
| [Thursday 24 June 2010] [08:12:16] <sustrik>    yes, place a queue device in the middle
| [Thursday 24 June 2010] [08:26:48] <Umesh>  ok
| [Thursday 24 June 2010] [08:27:20] <Umesh>  but it will send a request to all the servers ... write ?
| [Thursday 24 June 2010] [08:27:35] <Umesh>  right ?
| [Thursday 24 June 2010] [08:28:17] <Umesh>  or it will load balance the traffic ?
| [Thursday 24 June 2010] [08:29:33] <sustrik>    load balance
| [Thursday 24 June 2010] [08:29:52] <sustrik>    REQ/REP always load balances
| [Thursday 24 June 2010] [08:30:03] <sustrik>    PUB/SUB always distributes the messages to everyone
| [Thursday 24 June 2010] [08:31:04] <Umesh>  just one question : I don't see any lb object in req.hpp 
| [Thursday 24 June 2010] [08:31:20] <Umesh>  its there in xreq.hpp
| [Thursday 24 June 2010] [08:31:57] <Umesh>  so it is like xreq only have laod balancing ...
| [Thursday 24 June 2010] [08:34:37] <Efhache>    travlr : I see only now your response... sorry... what happens if multi client send request, each of the clients received all the replies? right?
| [Thursday 24 June 2010] [08:35:38] <Efhache>    sustrik :  I'just want to make a lighted broker : when it received a message from one process it re-sent this message to all connected processes.
| [Thursday 24 June 2010] [08:36:16] <sustrik>    Umesh: it's there but it's written by hand
| [Thursday 24 June 2010] [08:36:35] <sustrik>    the code should be polished a bit so that REQ uses lb_t as well...
| [Thursday 24 June 2010] [08:37:23] <sustrik>    Efhache: such a thing already exists
| [Thursday 24 June 2010] [08:37:30] <sustrik>    use zmq_forwarder to do this
| [Thursday 24 June 2010] [08:38:07] <sustrik>    have a look at an example here: http://github.com/zeromq/zeromq-chat/blob/master/README
| [Thursday 24 June 2010] [08:38:08] <Efhache>    but the example code that I've used  seems to do it...
| [Thursday 24 June 2010] [08:38:47] <sustrik>    sure, if you want to implement it yourself, why not
| [Thursday 24 June 2010] [08:40:02] <Efhache>    witouht implemented it myself... the code from 2 hours ago seems do it... I've tested the "server" with two clients and the both have received the reply from servers
| [Thursday 24 June 2010] [08:40:19] <Efhache>    may be a "bug" of my code   or is it normal?
| [Thursday 24 June 2010] [08:40:45] <sustrik>    what code? sorry, i missed it
| [Thursday 24 June 2010] [08:41:06] <Umesh>  sustrik : code present in the devices/zmq_queue/zmq_queue.cpp ... can be straight away used as a queue in the middle right ?
| [Thursday 24 June 2010] [08:41:19] <sustrik>    Umesh: yes
| [Thursday 24 June 2010] [08:41:23] <Umesh>  ok
| [Thursday 24 June 2010] [08:41:39] <sustrik>    there's an executable generated for convenience sake: devices/zmq_queue
| [Thursday 24 June 2010] [08:42:13] <Umesh>  but it uses XREQ/XREP sockets  .... and my client server uses REQ/REP ...
| [Thursday 24 June 2010] [08:42:23] <Umesh>  then will it work with them ?
| [Thursday 24 June 2010] [08:42:27] <sustrik>    yes
| [Thursday 24 June 2010] [08:42:31] <Umesh>  ok
| [Thursday 24 June 2010] [08:54:18] <Efhache>    sustrik : it was a problem in my code... with a remanence in a string used for reply...
| [Thursday 24 June 2010] [08:54:43] <Efhache>    sustrik : have you an exemple of "broadcasting" ?
| [Thursday 24 June 2010] [08:56:12] <sustrik>    what about this one: http://github.com/zeromq/zeromq-chat
| [Thursday 24 June 2010] [08:56:56] <sustrik>    or this one: http://lwn.net/Articles/370307/ (Java vs. Python)
| [Thursday 24 June 2010] [08:57:37] <sustrik>    or this one: http://nichol.as/zeromq-an-introduction (Python)
| [Thursday 24 June 2010] [09:11:38] <Efhache>    sustrik : thank you... if I goof understand to make a sort of lighted broker. I will must creating two context. One for receiving and one tu publish (server part)   and for the clients one for sending and one for subscribing
| [Thursday 24 June 2010] [09:11:42] <Efhache>    is it right?
| [Thursday 24 June 2010] [09:12:33] <sustrik>    what are you trying to do, i still don't get it
| [Thursday 24 June 2010] [09:12:43] <sustrik>    can you describe the scenario?
| [Thursday 24 June 2010] [09:14:18] <Efhache>    OK...  one process who received messagre from two (or more) other process   and re-sent the receive message to all connected processes
| [Thursday 24 June 2010] [09:36:49] <Efhache>    in C language
| [Thursday 24 June 2010] [09:54:46] <sustrik>    what you need is a single context
| [Thursday 24 June 2010] [09:54:51] <sustrik>    one sub socket
| [Thursday 24 June 2010] [09:54:56] <sustrik>    and one pub
| [Thursday 24 June 2010] [09:54:58] <sustrik>    socket
| [Thursday 24 June 2010] [09:55:08] <sustrik>    get messages from sub socket
| [Thursday 24 June 2010] [09:55:16] <sustrik>    and send them to the pub socket
| [Thursday 24 June 2010] [09:55:26] <sustrik>    that's exactly what zmq_forwarder does
| [Thursday 24 June 2010] [10:01:20] <Efhache>    ok
| [Thursday 24 June 2010] [10:02:50] <Efhache>    sorry but it's a new concept for me...
| [Thursday 24 June 2010] [10:03:43] <Efhache>    have you an example in C ?
| [Thursday 24 June 2010] [10:05:23] <Efhache>    I can not find information about zmq_forwarder in the doc (man page)   just "comming soon"
| [Thursday 24 June 2010] [10:10:39] <Efhache>    But if I read the chat example (http://github.com/zeromq/zeromq-chat/blob/master/prompt.cpp) message do not come from the client... is it true? And the client can only receive from prompt...
| [Thursday 24 June 2010] [10:10:39] <sustrik>    http://github.com/zeromq/zeromq-chat
| [Thursday 24 June 2010] [10:11:30] <Efhache>    so I need to context no? one for sending message (from a client to prompt)  and an other for SUB
| [Thursday 24 June 2010] [10:11:31] <sustrik>    you can merge display and prompt into a single application if you want
| [Thursday 24 June 2010] [10:11:34] <Efhache>    no ?
| [Thursday 24 June 2010] [10:11:53] <sustrik>    nope you can open both sockets from the same context
| [Thursday 24 June 2010] [10:12:07] <sustrik>    forget about multiple context, you're never going to need it
| [Thursday 24 June 2010] [10:12:17] <sustrik>    unless you are doing very advanced stuff
| [Thursday 24 June 2010] [10:13:31] <Efhache>    I think so I do not understand the concept of "context"...  I'll read more documentation... sorry
| [Thursday 24 June 2010] [10:14:20] <sustrik>    context is a global state of the library
| [Thursday 24 June 2010] [10:14:27] <sustrik>    you need only one context
| [Thursday 24 June 2010] [10:15:30] <Efhache>    ok
| [Thursday 24 June 2010] [10:16:07] <Efhache>    absolute not link with a protocol or a specific socket
| 
| *** Logfile started
| *** on Fri Jun 25 00:49:18 2010
| 
| [Friday 25 June 2010] [06:38:24] <vtl>  sustrik: hi!
| [Friday 25 June 2010] [06:38:54] <sustrik>  hi
| [Friday 25 June 2010] [06:39:24] <vtl>  sustrik: question: http://paste.lisp.org/display/111844
| [Friday 25 June 2010] [06:40:00] <sustrik>  errno is thread-local
| [Friday 25 June 2010] [06:40:18] <sustrik>  so you get err1
| [Friday 25 June 2010] [06:41:10] <vtl>  sustrik: cool, 10x! as i thought... we have different opinion with a guy who forked cl-zmq :)
| [Friday 25 June 2010] [06:41:37] <sustrik>  :)
| [Friday 25 June 2010] [06:41:43] <sustrik>  it's POSIX behaviour
| [Friday 25 June 2010] [06:41:46] <vtl>  yes
| [Friday 25 June 2010] [06:41:47] <sustrik>  let me find the doc
| [Friday 25 June 2010] [06:42:08] <vtl>  man errno, i think
| [Friday 25 June 2010] [06:43:11] <sustrik>  right
| [Friday 25 June 2010] [06:43:39] <sustrik>  it's ISO C
| [Friday 25 June 2010] [06:59:41] <vtl>  I think I understood... In managed environments (like lisp, python, java, .net) thread may be interrupted by runtime for garbage collecting. if GC calls libraries functions or syscalls, it may clobber this thread's errno. When such event happens in between zmq_foo() and zmq_errno(), then zmq_errno() will return wrong errno.
| [Friday 25 June 2010] [07:04:39] <sustrik>  right, that may happen
| [Friday 25 June 2010] [07:19:51] <sustrik>  vtl: thinking about it
| [Friday 25 June 2010] [07:20:13] <sustrik>  in theory, it would be possible to solve the problem in 0mq itself
| [Friday 25 June 2010] [07:20:25] <sustrik>  solve the errno into 0mq-own thread-local variable
| [Friday 25 June 2010] [07:20:33] <sustrik>  and return that one from zmq_errno
| [Friday 25 June 2010] [07:20:49] <vtl>  I think this in not worth trying
| [Friday 25 June 2010] [07:21:00] <vtl>  because other foreign libraries will fail in the same way :)
| [Friday 25 June 2010] [07:21:01] <sustrik>  do you have a better solution?
| [Friday 25 June 2010] [07:21:15] <sustrik>  yes, definitely
| [Friday 25 June 2010] [07:21:24] <sustrik>  how is this solved in cl?
| [Friday 25 June 2010] [07:21:58] <vtl>  this is generally not solved in cl. but one paricular commercial version of CL (this is Allegro) has workaround for it
| [Friday 25 June 2010] [07:22:18] <sustrik>  ok, isee
| [Friday 25 June 2010] [07:22:31] <vtl>  I think, it is possible to hack CFFI library to solve such kind of problems
| [Friday 25 June 2010] [07:22:48] <vtl>  of course, other languages still problematic in this place
| [Friday 25 June 2010] [07:34:10] <cremes>   sustrik: why not make errno a member/property of the context class?
| [Friday 25 June 2010] [07:34:29] <cremes>   the system errno could be copied into that member after each 0mq call
| [Friday 25 June 2010] [07:43:52] <sustrik>  cremes: a socket option
| [Friday 25 June 2010] [07:44:03] <sustrik>  same as with Berkeley sockets (SO_ERROR)
| [Friday 25 June 2010] [07:44:34] <sustrik>  yes, this sounds more sane than zmq_errno
| [Friday 25 June 2010] [07:44:40] <CIA-17>   zeromq2: 03Martin Hurton 07master * rfca2e8e 10/ (7 files): Add SWAP support - http://bit.ly/bRzKds
| [Friday 25 June 2010] [07:47:01] <cremes>   right, move it to the socket class (why would i suggest context? d'oh!)
| [Friday 25 June 2010] [07:50:54] <cremes>   though that's another api change/break
| [Friday 25 June 2010] [07:56:40] <sustrik>  cremes: right
| [Friday 25 June 2010] [07:56:54] <sustrik>  in theory it may be done in 2 steps
| [Friday 25 June 2010] [07:57:03] <sustrik>  1. add the error socket option
| [Friday 25 June 2010] [07:57:07] <sustrik>  2. remove zmq_errno
| [Friday 25 June 2010] [07:57:25] <sustrik>  the latter can be done when major version number is bumped
| [Friday 25 June 2010] [08:30:27] <jugg> sustrik: recent commit "devices exit in case of context termination" 11891d : src/forwarder.cpp lines 33 and 40, I believe are missing the necessary "rc = " assignment?
| [Friday 25 June 2010] [08:31:32] <jugg> hmm, same thing in src/streamer.cpp
| [Friday 25 June 2010] [08:32:07] <sustrik>  let me see
| [Friday 25 June 2010] [08:34:44] <sustrik>  oops
| [Friday 25 June 2010] [08:34:50] <sustrik>  let me correct it!
| [Friday 25 June 2010] [08:41:33] <jugg> Using C++ bindings, it seems that the only time one needs to do a msg.rebuild is before a send.   But between a send and a recv or between a recv and another recv this is not necessary, as it would appear the zmq_recv internals close a message then re-initializes it as needed.  Is this correct?
| [Friday 25 June 2010] [08:43:52] <jugg> (the same could be stated/asked for the C api, restating with message close/init pairing instead of the C++ message rebuild)
| [Friday 25 June 2010] [08:44:00] <sustrik>  ok, fixed
| [Friday 25 June 2010] [08:44:32] <sustrik>  jugg: yes
| [Friday 25 June 2010] [08:44:52] <sustrik>  the only use for rebuild is when you have a message as a member variable of a class
| [Friday 25 June 2010] [08:45:03] <sustrik>  then you want to say resize it
| [Friday 25 June 2010] [08:45:15] <sustrik>  you would have to destroy it and reinistantiate it
| [Friday 25 June 2010] [08:45:32] <sustrik>  but that's not possible becasue it's a member variable!
| [Friday 25 June 2010] [08:45:49] <sustrik>  so you would have to allocate it dynamically or something...
| [Friday 25 June 2010] [08:45:57] <sustrik>  instead, you can simply call rebuild
| [Friday 25 June 2010] [08:48:42] <jugg> ok, but whether you destroy or rebuild, this is only necessary if you want to send a message of a different size.  Anytime you want to recv a message, there is no reason to free the associated memory from previous use of the message... eg, the zmq internals aren't going to leak memory previously allocated for a message.
| [Friday 25 June 2010] [08:50:08] <jugg> I'm talking about the zmq_msg_t memory not an instantiated C++ message class.
| [Friday 25 June 2010] [08:55:26] <sustrik>  jugg: yes
| [Friday 25 June 2010] [08:55:31] <sustrik>  i think it's mentioned in the docs
| [Friday 25 June 2010] [08:55:34] <sustrik>  let me see...
| [Friday 25 June 2010] [08:55:54] <sustrik>  zmq_recv(3):
| [Friday 25 June 2010] [08:55:55] <sustrik>  Any content previously stored in msg
| [Friday 25 June 2010] [08:55:55] <sustrik>         shall be properly deallocated.
| [Friday 25 June 2010] [09:03:24] <jugg> *sigh* I get caught up reading/ walking through the code and forget about the documentation.  appologies.
| [Friday 25 June 2010] [09:04:29] <sustrik>  :)
| [Friday 25 June 2010] [09:28:45] <jugg> I have a setup where a SUB socket binds a TCP port on two different interfaces.  There are two PUB sockets that connect, one to each interface of the SUB socket.  I experienced an instance with this setup that messages quit flowing from one of the publishers to the subscriber while messages continued to flow from the other publisher.
| [Friday 25 June 2010] [09:28:48] <jugg> However there were no errors, or anything to indicate anything was wrong besides the fact the messages weren't flowing.  At the OS level, the TCP port for the "dead" connection was still active, with one in LISTEN state, and the other in ESTABLISHED for the SUB and PUB socket respectively.
| [Friday 25 June 2010] [09:29:04] <jugg> Restarting the publisher application restored communications.
| [Friday 25 June 2010] [09:30:37] <jugg> If this happens in the future, any suggestions on how to inspect what is going on?
| [Friday 25 June 2010] [09:33:18] <sustrik>  jugg: my guess would be that there's a loophole in fair queueing algorithm somewhere
| [Friday 25 June 2010] [09:33:55] <sustrik>  if there are messages available from both publshers SUB socket round robins between them
| [Friday 25 June 2010] [09:34:43] <sustrik>  what you describe looks like SUB erroneously believes one of the pipes has no messages
| [Friday 25 June 2010] [09:34:52] <sustrik>  (although it does)
| [Friday 25 June 2010] [09:35:03] <sustrik>  and doesn't include it into the round robit
| [Friday 25 June 2010] [09:35:06] <sustrik>  robin
| [Friday 25 June 2010] [09:35:35] <jugg> where should I be looking in the zmq code?
| [Friday 25 June 2010] [09:36:18] <sustrik>  ljugg: are use using zmq_poll or just zmq_recv?
| [Friday 25 June 2010] [09:37:17] <jugg> just zmq_recv
| [Friday 25 June 2010] [09:37:38] <sustrik>  then it's fq_t::recv
| [Friday 25 June 2010] [09:38:00] <sustrik>  fq.cpp:81
| [Friday 25 June 2010] [09:54:25] <jugg> change to topic for a moment, working through that code is going to take a bit...  on multi-part messages, are the parts stacked up on the sending side or the receiving side?
| [Friday 25 June 2010] [10:00:43] <sustrik>  jugg: both sides
| [Friday 25 June 2010] [10:00:58] <sustrik>  the rule is that they are stacked on the write side of the pipe
| [Friday 25 June 2010] [10:01:14] <sustrik>  one pipe being between sender thread and sender's I/O thread
| [Friday 25 June 2010] [10:01:32] <sustrik>  other one being between receiver's I/O thread and receiver thread itself
| [Friday 25 June 2010] [10:27:35] <jugg> ok, so before they reach the receivers I/O thread, they've been stacked up in the sender's I/O thread.  Then they are all sent to the receiver, and the receiver I/O thread stacks them up until they are all received before passing them off to the receiver thread, yes?
| [Friday 25 June 2010] [10:30:22] <sustrik>  yes
| [Friday 25 June 2010] [10:38:49] <jugg> ok, so why expose the multipart concept to the receiving side at all then?  Why not assemble it all into a single message for final delivery?  The above structure provides no benefit for reducing total transfer time, nor allowing the receiving end to work on parts of the messages as they come in, thus reducing total processing time.
| [Friday 25 June 2010] [10:39:06] <jugg> It seems to me that either the receiving side should just get a single message delivered to the receiver thread, or that it shouldn't be atomic.
| [Friday 25 June 2010] [10:41:42] <sustrik>  jugg: the goal here is to allow for some basic structure in the message content
| [Friday 25 June 2010] [10:42:11] <sustrik>  so if sender has say 3 big matrices in different places in memory
| [Friday 25 June 2010] [10:42:41] <sustrik>  he'll use multi-part message as a means to achieve zero-copy
| [Friday 25 June 2010] [10:43:07] <sustrik>  however, he still wants to tell the boundaries between matrices on the receiving side
| [Friday 25 June 2010] [10:43:40] <sustrik>  that's why boundaries between message parts are honoured
| [Friday 25 June 2010] [10:44:20] <sustrik>  0mq uses this mechanism under the cover btw to distinguish 0mq-specific data on the wire from the user data
| [Friday 25 June 2010] [10:48:34] <jugg> ok, that makes sense.  So, perhaps two alternate multi-part implementations feature requests then:  1. allow the sending side to send each part immediately, and only stack them on the receiving side I/O thread.  2. allow non atomic multi-part messaging.
| [Friday 25 June 2010] [10:49:59] <sustrik>  1. makes sense
| [Friday 25 June 2010] [10:50:12] <sustrik>  2. what would that be good for?
| [Friday 25 June 2010] [10:51:44] <jugg> 2. A REQ is made (ie SQL query) and the REP has multiple rows, if it was non atomic, then each row could be sent back and be operated on without waiting for the entire set to arrive.
| [Friday 25 June 2010] [10:52:02] <travlr>   my guess might be in a stream processing sense of individual message parts.
| [Friday 25 June 2010] [10:52:19] <travlr>   yeah, what he said :)
| [Friday 25 June 2010] [10:53:02] <jugg> Another use is a REQ is made, and something more intensive like, a file set - a bunch of images - is returned.  These images need to be resized.  There is no reason to wait for the entire set to arrive.
| [Friday 25 June 2010] [10:58:08] <sustrik>  jugg: i would say each image (or row) is a separate message in these scenarios
| [Friday 25 June 2010] [10:58:29] <sustrik>  the rationale is that all the elements in the set are of the same type
| [Friday 25 June 2010] [10:58:46] <sustrik>  and thus eligible for parallelised processing or similar
| [Friday 25 June 2010] [10:59:10] <sustrik>  message parts make sense where there are different elements concatenated into a single message
| [Friday 25 June 2010] [10:59:20] <sustrik>  for example 0mq-routing-data + user-data
| [Friday 25 June 2010] [10:59:43] <travlr>   or a topic + user-data
| [Friday 25 June 2010] [10:59:46] <sustrik>  yes
| [Friday 25 June 2010] [11:00:01] <sustrik>  different semantics is the key here
| [Friday 25 June 2010] [11:00:26] <sustrik>  from this point of view atomicity makes perfect sense
| [Friday 25 June 2010] [11:00:42] <sustrik>  it doesn't make sense to deliver just the routing data
| [Friday 25 June 2010] [11:00:48] <sustrik>  or a topic
| [Friday 25 June 2010] [11:01:04] <sustrik>  and say load-balance the user-content somewhere else
| [Friday 25 June 2010] [11:02:17] <travlr>   seeing the big picture along with the  nuances is important for the various concepts in 0mq, huh.
| [Friday 25 June 2010] [11:02:43] <sustrik>  yes, this kind of thing is missing from docs :(
| [Friday 25 June 2010] [11:02:53] <sustrik>  but anyway, i have no idea where it shouldb e put
| [Friday 25 June 2010] [11:03:10] <travlr>   i want to help with docs in the near future
| [Friday 25 June 2010] [11:03:30] <travlr>   i'm still studying it all though for now
| [Friday 25 June 2010] [11:03:30] <sustrik>  do you have idea what exactly would you like to do?
| [Friday 25 June 2010] [11:03:51] <travlr>   docs?
| [Friday 25 June 2010] [11:04:00] <sustrik>  yes
| [Friday 25 June 2010] [11:04:07] <sustrik>  I liked Nicholas' blog yesterday
| [Friday 25 June 2010] [11:04:12] <travlr>   yes
| [Friday 25 June 2010] [11:04:15] <sustrik>  it seems this kind of stuff is highly needed
| [Friday 25 June 2010] [11:04:17] <travlr>   very much
| [Friday 25 June 2010] [11:04:35] <travlr>   along the same vain martin
| [Friday 25 June 2010] [11:04:42] <travlr>   s/vain/vane
| [Friday 25 June 2010] [11:05:42] <travlr>   first i want to understand 0mq inside out, which is what i'm working on atm
| [Friday 25 June 2010] [11:05:50] <jugg> sustrik: I understand that, however, I think the SQL example (whether the results are images or something else) has its use case as well.  The client knows that it wants an entire set of data, it doesn't know what comprises that set of data, and so it can't ask for each part individually.
| [Friday 25 June 2010] [11:06:00] <jugg> But it makes sense from an efficiency stand point to break the set of data into individual parts for transmission and processing.  Certainly the smarts could be layered ontop of 0MQ for getting each part individually, but greatly simplifies things by having 0MQ support this natively.
| [Friday 25 June 2010] [11:06:53] <sustrik>  jugg: understood
| [Friday 25 June 2010] [11:07:03] <sustrik>  what you have in mind is some kind of "terminator" message
| [Friday 25 June 2010] [11:07:20] <sustrik>  a message that says "this is the end of a message group"
| [Friday 25 June 2010] [11:08:10] <sustrik>  however, my feeling is that this kind of feature should be layered on top of 0MQ
| [Friday 25 June 2010] [11:08:14] <jugg> Well, what I want is a single REQ message to be able to receive multiple REP messages - whatever that looks like.
| [Friday 25 June 2010] [11:08:54] <jugg> the way multipart messaging works at the API level works for this very well.  It is just the implementation that does not.
| [Friday 25 June 2010] [11:09:29] <sustrik>  ok, i see
| [Friday 25 June 2010] [11:10:07] <sustrik>  the scenario makes sense
| [Friday 25 June 2010] [11:10:17] <sustrik>  the implications are non trivial
| [Friday 25 June 2010] [11:10:41] <sustrik>  if server X1 sends a first row, then halts for an hour
| [Friday 25 June 2010] [11:10:48] <sustrik>  the client would read the first low
| [Friday 25 June 2010] [11:10:56] <sustrik>  then halt waiting for and hour
| [Friday 25 June 2010] [11:11:12] <sustrik>  although there may be other resultssets available from server X2
| [Friday 25 June 2010] [11:11:26] <sustrik>  this cannot happen with simple REQ socket
| [Friday 25 June 2010] [11:11:32] <sustrik>  but it can happen with XREQ
| [Friday 25 June 2010] [11:11:43] <sustrik>  it's complex stuff, lot of space to experiment
| [Friday 25 June 2010] [11:12:36] <jugg> I'm not sure what you meant be other result sets...  subsequent REQ can't be made until the REP is satisfied... this is no different than the current REQ/REP behavior... if I send a REQ, it waits an indefinite time for a REP.
| [Friday 25 June 2010] [11:12:56] <sustrik>  the problem is that there may be a queue in the middle
| [Friday 25 June 2010] [11:13:12] <sustrik>  the queue has to be able to process multiple requsts at the same time
| [Friday 25 June 2010] [11:13:22] <sustrik>  otherwise it would work in lock-step fashion
| [Friday 25 June 2010] [11:13:28] <sustrik>  and the scalability would go soutg
| [Friday 25 June 2010] [11:13:31] <sustrik>  south
| [Friday 25 June 2010] [11:14:13] <sustrik>  so the queue (composed on XREQ and XREP socket) would have to work on message-part-scale
| [Friday 25 June 2010] [11:14:28] <sustrik>  which is doable, but not the state of affairs right now
| [Friday 25 June 2010] [11:14:41] <sustrik>  if you are interested in the topic feel free to propose a solution
| [Friday 25 June 2010] [11:15:51] <jugg> I guess from my no-understanding of the internals, looking at it from the point of view that multi-part messaging exists and works, then only (and maybe this is the sticking point) is to make the multi-parts non stacking on either end.
| [Friday 25 June 2010] [11:16:19] <jugg> "then only" => "the only change"
| [Friday 25 June 2010] [11:17:10] <sustrik>  the main problem is in the middle
| [Friday 25 June 2010] [11:17:49] <sustrik>  how would you achieve that queue isn't stuck when there's a half-sent mutli-part message being processed
| [Friday 25 June 2010] [11:17:57] <sustrik>  and the sender dies without terminating it?
| [Friday 25 June 2010] [11:18:31] <sustrik>  also, you need fairness guarantees, so the queue cannot process very long recordset in a single go
| [Friday 25 June 2010] [11:18:42] <jugg> You've mentioned this "middle queues" before, I'm still at a loss on them and what they are... :/
| [Friday 25 June 2010] [11:18:58] <sustrik>  instead it has to assign it a timeslice, process part of it, then move to another clients etc.
| [Friday 25 June 2010] [11:19:11] <sustrik>  "queue device"
| [Friday 25 June 2010] [11:19:41] <sustrik>  it's a component both requesters and repliers can connect to
| [Friday 25 June 2010] [11:19:54] <sustrik>  it then load balances the requests and routes the replies back
| [Friday 25 June 2010] [11:20:11] <sustrik>  see queue.cpp
| [Friday 25 June 2010] [11:36:21] <travlr>   sustrik: stuff like your previous conversation need to go in faq or clarified elsewhere etc. 
| [Friday 25 June 2010] [11:36:39] <travlr>   i'll be scrubbing the irc and mail list eventually
| [Friday 25 June 2010] [11:36:52] <sustrik>  you mean the message part stuff?
| [Friday 25 June 2010] [11:37:04] <travlr>   well anything with nuance
| [Friday 25 June 2010] [11:37:31] <sustrik>  the question is what should go to FAQ, what should go to docs and what should go elsewhere
| [Friday 25 June 2010] [11:38:03] <sustrik>  stacking the technical info into FAQ is probably not the best solution possible
| [Friday 25 June 2010] [11:38:26] <travlr>   i'm just saying that i'll keep in mind these issues as i go and will help any way i can with stuff like docs
| [Friday 25 June 2010] [11:38:52] <sustrik>  yes, i'm just thinking out aloud
| [Friday 25 June 2010] [11:39:43] <sustrik>  maybe there's some kind of "ideology" document missing
| [Friday 25 June 2010] [11:39:56] <travlr>   thats true for all of foss
| [Friday 25 June 2010] [11:40:01] <sustrik>  i.e. not the strict technical reference
| [Friday 25 June 2010] [11:40:19] <sustrik>  but some talk about what are individual features intended for
| [Friday 25 June 2010] [11:40:25] <jugg> sustrik: what happens with the current multipart if the sender dies while the I/O thread is sending out the messages?  Same problem, no?
| [Friday 25 June 2010] [11:40:29] <sustrik>  and why they are designed in the way they are etc.
| [Friday 25 June 2010] [11:40:38] <travlr>   sustrik: we'll have a conversation about this soon
| [Friday 25 June 2010] [11:40:49] <travlr>   and i'll go to town
| [Friday 25 June 2010] [11:41:18] <sustrik>  jugg: no, the incomplete messages are rolled back in that case
| [Friday 25 June 2010] [11:41:37] <sustrik>  trvlr: ok
| [Friday 25 June 2010] [11:48:10] <jugg> sustrik: Could the internals track whether the final message in a non atomic multipart message has been received, and if it has not, then the recv function return an error if the internals detect a disconnect of the sender?  Failing such a possibility, I'd say if the only thing hindering this capability are intermediate queues, then document the risk and recommend not using them for this particular usage.
| [Friday 25 June 2010] [11:50:11] <jugg> I haven't really understood why these "devices" are part of the core implementation anyway, they do not require access (afaict) to the internals of 0MQ, and could be implemented as stand alone applications/libraries, or even just example code.
| [Friday 25 June 2010] [11:53:41] <sustrik>  jugg: yes, right now the implementation of devices is pretty trivial
| [Friday 25 June 2010] [11:53:59] <sustrik>  in the future it's going to be more tightly integrated with the core
| [Friday 25 June 2010] [11:54:59] <sustrik>  as for the usage of deivces have a look here: http://www.zeromq.org/blog:multithreaded-server
| [Friday 25 June 2010] [11:55:19] <sustrik>  that's pretty straightforward usage of queue device
| [Friday 25 June 2010] [11:56:06] <sustrik>  with that in mind, try to put down your non-atomic multi-part messages idea into email and send it to the mailing list
| [Friday 25 June 2010] [11:56:31] <sustrik>  it would be good to see some discussion on the topic
| [Friday 25 June 2010] [11:59:05] <sustrik>  btw, i would suggest to name these "stream messages"; it's shorter that "non-atomic multi-part messages"
| [Friday 25 June 2010] [12:07:36] <jugg> sustrik: will do
| [Friday 25 June 2010] [12:08:58] <jugg> thanks for working through all of that.  I need to go back and dig into that possible fair queue issue now.
| [Friday 25 June 2010] [12:09:58] <sustrik>  you are welcome
| [Friday 25 June 2010] [12:35:50] <CIA-17>   zeromq2: 03Pieter Hintjens 07master * r1dda8a2 10/ src/msg_store.cpp : Used more expressive variable names - http://bit.ly/aynV9A
| [Friday 25 June 2010] [21:24:07] <zedas>    sustrik: question about zmq_poll:  it uses epoll if available right?  is there more you need to do?
| [Friday 25 June 2010] [21:29:45] <zedas>    sustrik: ahhh, zmq_poll system checks the rlimit and restricts available open fds to that.  i'll look at doing the same.
| [Saturday 26 June 2010] [02:23:32] <sustrik>    zedas: hi
| [Saturday 26 June 2010] [02:23:39] <sustrik>    what code are you looking at?
| [Saturday 26 June 2010] [02:23:50] <sustrik>    at the moment zmq_poll translates to standard poll
| [Saturday 26 June 2010] [02:24:20] <sustrik>    calling epoll makes not sense unless 0mq's zmq_poll API changes in the corresponding way
| [Saturday 26 June 2010] [02:25:05] <sustrik>    (registering fds separated from polling etc.)
| [Saturday 26 June 2010] [02:35:06] <zedas>  sustrik: i was looking at the poll.cpp and others.
| [Saturday 26 June 2010] [02:35:20] <zedas>  so i was under the impression that zmq_poll abstracts poll/epoll/kqueue.
| [Saturday 26 June 2010] [02:35:25] <zedas>  at least that's how the docs read.
| [Saturday 26 June 2010] [02:35:28] <zedas>  that not true?
| [Saturday 26 June 2010] [02:35:41] <sustrik>    the polling is done at 2 places
| [Saturday 26 June 2010] [02:35:56] <sustrik>    I/O threads from the thread pool are polling using epoll/whatever
| [Saturday 26 June 2010] [02:36:14] <sustrik>    meaning that if one 0MQ socket manages 100,000 TCP connections
| [Saturday 26 June 2010] [02:36:30] <sustrik>    these are looked for by epoll-based mechanism (on Linux at least)
| [Saturday 26 June 2010] [02:36:41] <sustrik>    then there's user polling (zmq_poll)
| [Saturday 26 June 2010] [02:36:56] <sustrik>    this at the moment translates to POSIX poll
| [Saturday 26 June 2010] [02:37:13] <sustrik>    however, i wouldn't expect anyone to use large amount of 0mq sockets
| [Saturday 26 June 2010] [02:37:46] <sustrik>    the only problem is if user wants to poll on couple of 0mq sockets + large amount of system sockets
| [Saturday 26 June 2010] [02:37:51] <sustrik>    is that your case?
| [Saturday 26 June 2010] [02:39:42] <zedas>  probably.  it's in mongrel2
| [Saturday 26 June 2010] [02:39:59] <zedas>  it craps out at 1024 sockets, which i haven't investigated yet, but even poll should handle that
| [Saturday 26 June 2010] [02:40:27] <zedas>  so, if you have these abstractions on epoll, kqueue, devpoll, and poll, why not have zmq_poll use them?
| [Saturday 26 June 2010] [02:40:46] <sustrik>    epoll reuires different API
| [Saturday 26 June 2010] [02:40:51] <sustrik>    otherwise it's of no use
| [Saturday 26 June 2010] [02:41:21] <sustrik>    the performance boost is related to registering the fds separately from polling as such
| [Saturday 26 June 2010] [02:42:15] <sustrik>    current zmq_poll is only a dumb copy of POSIX poll
| [Saturday 26 June 2010] [02:42:47] <sustrik>    there have been some discussion on alternate API but it never got into implementation phase
| [Saturday 26 June 2010] [02:43:52] <zedas>  well, plenty of libraries have given a consistent api to all the different event mechanisms
| [Saturday 26 June 2010] [02:44:03] <zedas>  it's not like this is anything new, even if they have different apis.
| [Saturday 26 June 2010] [02:44:27] <zedas>  looking at the code, it looks like you have the basis for the abstraction, probably just needs to be pulled into zmq_poll and used
| [Saturday 26 June 2010] [02:44:33] <zedas>  i may look at doing that in the near future.
| [Saturday 26 June 2010] [02:44:50] <sustrik>    that would be nice
| [Saturday 26 June 2010] [02:44:58] <zedas>  that and get rid of this #ifdef, the loop that seems to no be needed, etc.
| [Saturday 26 June 2010] [02:45:15] <sustrik>    what loop?
| [Saturday 26 June 2010] [02:46:11] <zedas>  the double nested while(true)
| [Saturday 26 June 2010] [02:46:26] <zedas>  haven't seen a poll loop implemented that way, so i'm assuming there's something odd there
| [Saturday 26 June 2010] [02:47:41] <zedas>  yeah i think i could clean this up and make it use the abstractions you've got
| [Saturday 26 June 2010] [02:47:57] <zedas>  or at least make it use epoll if that's available.
| [Saturday 26 June 2010] [02:48:25] <zedas>  hehe hell i could just write a zmq_epoll and zmq_kqueue and leave it to the developer :-)
| [Saturday 26 June 2010] [02:48:38] <zedas>  but that'd be me, so i want zmq_poll to do whatever works best
| [Saturday 26 June 2010] [02:48:40] <sustrik>    yes, that's the option
| [Saturday 26 June 2010] [02:48:59] <sustrik>    the obvious problem is that there's no POSIX standard fro epoll-style polling
| [Saturday 26 June 2010] [02:49:24] <sustrik>    kqueue seems to be most neat, but still it's hard to decide on actual API
| [Saturday 26 June 2010] [02:49:41] <sustrik>    try posting your new API to the mailing list first to see what others have to say about it
| [Saturday 26 June 2010] [02:51:48] <zedas>  i'll give it a shot when i get to that part.  right after i find out why it craps out at 1024 fds
| [Saturday 26 June 2010] [02:52:04] <sustrik>    ack
| [Saturday 26 June 2010] [02:52:11] <zedas>  with poll it shouldn't do that but it does.  which means people will perf test it and then bitch that i'm using select
| [Saturday 26 June 2010] [02:52:54] <zedas>  well not an issue now, just gonna drive me crazy later :-)
| [Saturday 26 June 2010] [02:53:10] <sustrik>    ok, good luck for now
| [Saturday 26 June 2010] [02:55:20] <zedas>  yeah so far it's working great.
| [Saturday 26 June 2010] [02:55:43] <zedas>  i've got the tasks working flawlessly with sockets or 0mq
| [Saturday 26 June 2010] [02:58:06] <sustrik>    glad to hear that!
| 
| *** Logfile started
| *** on Mon Jul 12 14:57:25 2010
| 
| 
| *** Logfile started
| *** on Mon Jul 12 18:11:10 2010
| 